ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"temperature_task.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.TemperatureTimerCallback,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	TemperatureTimerCallback, %function
  25              	TemperatureTimerCallback:
  26              	.LFB524:
  27              		.file 1 "temperature_task.c"
   1:temperature_task.c **** /******************************************************************************
   2:temperature_task.c **** * File Name: temperature_task.c
   3:temperature_task.c **** *
   4:temperature_task.c **** * Version: 1.00
   5:temperature_task.c **** *
   6:temperature_task.c **** * Description: This file contains the task that handles temperature sensing
   7:temperature_task.c **** *
   8:temperature_task.c **** * Related Document: CE218138_BLE_Thermometer_RTOS.pdf
   9:temperature_task.c **** *
  10:temperature_task.c **** * Hardware Dependency: CY8CKIT-062-BLE PSoC 6 BLE Pioneer Kit
  11:temperature_task.c **** *
  12:temperature_task.c **** *******************************************************************************
  13:temperature_task.c **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  14:temperature_task.c **** *******************************************************************************
  15:temperature_task.c **** * This software, including source code, documentation and related materials
  16:temperature_task.c **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  17:temperature_task.c **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  18:temperature_task.c **** * protection (United States and foreign), United States copyright laws and
  19:temperature_task.c **** * international treaty provisions. Therefore, you may use this Software only
  20:temperature_task.c **** * as provided in the license agreement accompanying the software package from
  21:temperature_task.c **** * which you obtained this Software (“EULA”).
  22:temperature_task.c **** *
  23:temperature_task.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  24:temperature_task.c **** * non-transferable license to copy, modify, and compile the Software source
  25:temperature_task.c **** * code solely for use in connection with Cypress’s integrated circuit products.
  26:temperature_task.c **** * Any reproduction, modification, translation, compilation, or representation
  27:temperature_task.c **** * of this Software except as specified above is prohibited without the express
  28:temperature_task.c **** * written permission of Cypress.
  29:temperature_task.c **** *
  30:temperature_task.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 2


  31:temperature_task.c **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  32:temperature_task.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  33:temperature_task.c **** * reserves the right to make changes to the Software without notice. Cypress 
  34:temperature_task.c **** * does not assume any liability arising out of the application or use of the 
  35:temperature_task.c **** * Software or any product or circuit described in the Software. Cypress does 
  36:temperature_task.c **** * not authorize its products for use in any products where a malfunction or 
  37:temperature_task.c **** * failure of the Cypress product may reasonably be expected to result in 
  38:temperature_task.c **** * significant property damage, injury or death (“High Risk Product”). By 
  39:temperature_task.c **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  40:temperature_task.c **** * system or application assumes all risk of such use and in doing so agrees to 
  41:temperature_task.c **** * indemnify Cypress against all liability.
  42:temperature_task.c **** *******************************************************************************/
  43:temperature_task.c **** /******************************************************************************
  44:temperature_task.c **** * This file contains the task that handles temperature sensing 
  45:temperature_task.c **** *******************************************************************************/
  46:temperature_task.c **** 
  47:temperature_task.c **** /* Header file includes */
  48:temperature_task.c **** #include <math.h>
  49:temperature_task.c **** #include "temperature_task.h"
  50:temperature_task.c **** #include "uart_debug.h"
  51:temperature_task.c **** #include "ble_task.h"
  52:temperature_task.c **** #include "task.h" 
  53:temperature_task.c **** #include "timers.h"
  54:temperature_task.c **** 
  55:temperature_task.c **** /* Scanning interval of 100ms is used when repeatedly scanning temperature for 
  56:temperature_task.c ****    sending via BLE. 10s is used for E-INK refresh */
  57:temperature_task.c **** #define FAST_SCAN_INTERVAL  (pdMS_TO_TICKS(100u))
  58:temperature_task.c **** #define SLOW_SCAN_INTERVAL  (pdMS_TO_TICKS(10000u))
  59:temperature_task.c **** 
  60:temperature_task.c **** /* ADC channels used to measure reference and thermistor voltages */
  61:temperature_task.c **** #define REFERENCE_CHANNEL   (uint32_t)(0x00u)
  62:temperature_task.c **** #define THERMISTOR_CHANNEL  (uint32_t)(0x01u)
  63:temperature_task.c **** 
  64:temperature_task.c **** /* Reference resistor in series with the thermistor is of 10 KOhm */
  65:temperature_task.c **** #define R_REFERENCE         (float)(10000)
  66:temperature_task.c **** 
  67:temperature_task.c **** /* Beta constant of this thermistor is 3380 Kelvin. See the thermistor
  68:temperature_task.c ****    (NCP18XH103F03RB) data sheet for more details. */
  69:temperature_task.c **** #define B_CONSTANT          (float)(3380)
  70:temperature_task.c **** 
  71:temperature_task.c **** /* Resistance of the thermistor is 10K at 25 degrees C (from data sheet)
  72:temperature_task.c ****    Therefore R0 = 10000 Ohm, and T0 = 298.15 Kelvin, which gives
  73:temperature_task.c ****    R_INFINITY = R0 e^(-B_CONSTANT / T0) = 0.1192855 */
  74:temperature_task.c **** #define R_INFINITY          (float)(0.1192855)
  75:temperature_task.c **** 
  76:temperature_task.c **** /* Zero Kelvin in degree C */
  77:temperature_task.c **** #define ABSOLUTE_ZERO       (float)(-273.15)
  78:temperature_task.c **** 
  79:temperature_task.c **** /* Queue handles used for temperature commands and data */
  80:temperature_task.c **** QueueHandle_t temperatureCommandQ;
  81:temperature_task.c **** QueueHandle_t temperatureDataQ;
  82:temperature_task.c **** 
  83:temperature_task.c **** /* Timer handles used to control temperature scanning interval */
  84:temperature_task.c **** TimerHandle_t xTimer_Temperature;
  85:temperature_task.c **** 
  86:temperature_task.c **** /* ADC interrupt handler */
  87:temperature_task.c **** void isrADC(void);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 3


  88:temperature_task.c **** bool static processingComplete = false;
  89:temperature_task.c **** 
  90:temperature_task.c **** /* Functions that start and control the timer */
  91:temperature_task.c **** void static TemperatureTimerStart(void);
  92:temperature_task.c **** void static TemperatureTimerUpdate(TickType_t period);
  93:temperature_task.c **** 
  94:temperature_task.c **** /*******************************************************************************
  95:temperature_task.c **** * Function Name: void Task_Temperature(void *pvParameters)   
  96:temperature_task.c **** ********************************************************************************
  97:temperature_task.c **** * Summary:
  98:temperature_task.c **** *  Task that reads temperature data from thermistor circuit  
  99:temperature_task.c **** *
 100:temperature_task.c **** * Parameters:
 101:temperature_task.c **** *  void *pvParameters : Task parameter defined during task creation (unused)                       
 102:temperature_task.c **** *
 103:temperature_task.c **** * Return:
 104:temperature_task.c **** *  void
 105:temperature_task.c **** *
 106:temperature_task.c **** *******************************************************************************/
 107:temperature_task.c **** void Task_Temperature(void *pvParameters)    
 108:temperature_task.c **** { 
 109:temperature_task.c ****     /* Variable that stores commands received  */
 110:temperature_task.c ****     temperature_command_t temperatureCommand;
 111:temperature_task.c ****     
 112:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 113:temperature_task.c ****     BaseType_t rtosApiResult;
 114:temperature_task.c ****        
 115:temperature_task.c ****     /* Flag that indicate temperature data need to be sent at 
 116:temperature_task.c ****        fast intervals */
 117:temperature_task.c ****     bool sendTemperatureDataFast = false;
 118:temperature_task.c ****     
 119:temperature_task.c ****     /* Variables used to calculate temperature */
 120:temperature_task.c ****     int16_t countThermistor, countReference;
 121:temperature_task.c ****     float rThermistor, temperature;
 122:temperature_task.c ****     
 123:temperature_task.c ****     /* Variable used to send commands and data to BLE task */
 124:temperature_task.c ****     ble_command_t bleCommandAndData;
 125:temperature_task.c **** 
 126:temperature_task.c ****     /* Remove warning for unused parameter */
 127:temperature_task.c ****     (void)pvParameters ;
 128:temperature_task.c **** 
 129:temperature_task.c ****     /* Initialize the ADC  */
 130:temperature_task.c ****     ADC_StartEx(isrADC);
 131:temperature_task.c ****     ADC_IRQ_Enable();
 132:temperature_task.c ****     ADC_StartConvert();
 133:temperature_task.c ****     
 134:temperature_task.c ****     /* Start the timer that controls the processing interval */
 135:temperature_task.c ****     TemperatureTimerStart();                    
 136:temperature_task.c ****     
 137:temperature_task.c ****     /* Repeatedly running part of the task */
 138:temperature_task.c ****     for(;;)
 139:temperature_task.c ****     {
 140:temperature_task.c ****         /* Block until a command has been received over 
 141:temperature_task.c ****            temperatureCommandQ */
 142:temperature_task.c ****         rtosApiResult = xQueueReceive(temperatureCommandQ, 
 143:temperature_task.c ****                                       &temperatureCommand, portMAX_DELAY);
 144:temperature_task.c ****         
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 4


 145:temperature_task.c ****          /* Command has been received from temperatureCommandQ */ 
 146:temperature_task.c ****         if(rtosApiResult == pdTRUE)
 147:temperature_task.c ****         {   
 148:temperature_task.c ****             /* Take an action based on the command received */
 149:temperature_task.c ****             switch (temperatureCommand)
 150:temperature_task.c ****             {
 151:temperature_task.c ****                 /* Temperature data need to be sent */
 152:temperature_task.c ****                 case SEND_TEMPERATURE:
 153:temperature_task.c ****                     sendTemperatureDataFast = true;
 154:temperature_task.c ****                     /* Enable periodic scan */
 155:temperature_task.c ****                     TemperatureTimerUpdate(FAST_SCAN_INTERVAL);
 156:temperature_task.c ****                     break;
 157:temperature_task.c ****                  
 158:temperature_task.c ****                 /* No temperature data need to be sent */
 159:temperature_task.c ****                 case SEND_NONE:
 160:temperature_task.c ****                     sendTemperatureDataFast = false;
 161:temperature_task.c ****                     /* Disable periodic scan */
 162:temperature_task.c ****                     TemperatureTimerUpdate(SLOW_SCAN_INTERVAL);
 163:temperature_task.c ****                     break;
 164:temperature_task.c ****                 /* Process temperature data from CapSense widgets */
 165:temperature_task.c ****                 case HANDLE_ADC_INTERRUPT:
 166:temperature_task.c ****                     /* Read the ADC count values */
 167:temperature_task.c ****                     countReference  = ADC_GetResult16(REFERENCE_CHANNEL);
 168:temperature_task.c ****                     countThermistor = ADC_GetResult16(THERMISTOR_CHANNEL);
 169:temperature_task.c ****                    
 170:temperature_task.c ****                     /* Put the ADC to sleep so that entering low power modes 
 171:temperature_task.c ****                        won't affect the ADC operation */
 172:temperature_task.c ****                     ADC_Sleep();
 173:temperature_task.c ****                     
 174:temperature_task.c ****                     /* Clear the GPIO that drives the thermistor circuit, to 
 175:temperature_task.c ****                        save power */
 176:temperature_task.c ****                     Cy_GPIO_Clr(THER_VDD_0_PORT,THER_VDD_0_NUM);
 177:temperature_task.c ****                     
 178:temperature_task.c ****                     /* Calculate the thermistor resistance and the corresponding
 179:temperature_task.c ****                        temperature */
 180:temperature_task.c ****                     rThermistor = (R_REFERENCE*countThermistor)/countReference;    
 181:temperature_task.c ****                     temperature = (B_CONSTANT/(logf(rThermistor/R_INFINITY)))+
 182:temperature_task.c ****                                                                 ABSOLUTE_ZERO;
 183:temperature_task.c ****                     
 184:temperature_task.c ****                     processingComplete = true;
 185:temperature_task.c **** 
 186:temperature_task.c ****                     /* Send the processed temperature data */
 187:temperature_task.c ****                     if(sendTemperatureDataFast)
 188:temperature_task.c ****                     {
 189:temperature_task.c ****                         /* Pack the temperature data, respective command and send 
 190:temperature_task.c ****                            to the queue */
 191:temperature_task.c ****                         bleCommandAndData.command = SEND_TEMPERATURE_INDICATION;
 192:temperature_task.c ****                         bleCommandAndData.temperatureData = temperature;
 193:temperature_task.c ****                         xQueueSend(bleCommandQ, &bleCommandAndData,0u);
 194:temperature_task.c ****                     }
 195:temperature_task.c ****                     else
 196:temperature_task.c ****                     {
 197:temperature_task.c ****                         xQueueOverwrite(temperatureDataQ, &temperature);
 198:temperature_task.c ****                     }
 199:temperature_task.c ****                     break;
 200:temperature_task.c ****                 /* Start the next scan */                    
 201:temperature_task.c ****                 case TEMPERATURE_TIMER_EXPIRED:    
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 5


 202:temperature_task.c **** 
 203:temperature_task.c ****                         if(processingComplete)
 204:temperature_task.c ****                         {
 205:temperature_task.c ****                             Cy_GPIO_Set(THER_VDD_0_PORT,THER_VDD_0_NUM);    
 206:temperature_task.c ****                         
 207:temperature_task.c ****                             /* Wake up the ADC and start conversion */
 208:temperature_task.c ****                             ADC_Wakeup();
 209:temperature_task.c ****                             ADC_StartConvert();
 210:temperature_task.c ****                             processingComplete = false;
 211:temperature_task.c ****                         }    
 212:temperature_task.c **** 
 213:temperature_task.c ****                     break;
 214:temperature_task.c **** 
 215:temperature_task.c ****                 /* Invalid task notification value received */    
 216:temperature_task.c ****                 default:
 217:temperature_task.c ****                     Task_DebugPrintf("Error!   : Temperature - Invalid command "\
 218:temperature_task.c ****                                 "received .Error Code:", temperatureCommand);
 219:temperature_task.c ****                     break;
 220:temperature_task.c ****             }
 221:temperature_task.c ****         }            
 222:temperature_task.c ****         /* Task has timed out and received no commands during an interval of 
 223:temperature_task.c ****         portMAXDELAY ticks */
 224:temperature_task.c ****         else
 225:temperature_task.c ****         {
 226:temperature_task.c ****             Task_DebugPrintf("Warning! : Temperature - Task Timed out ", 0u);   
 227:temperature_task.c ****         }
 228:temperature_task.c ****     }
 229:temperature_task.c **** }
 230:temperature_task.c **** 
 231:temperature_task.c **** /*******************************************************************************
 232:temperature_task.c **** * Function Name: void isrADC(void)                         
 233:temperature_task.c **** ********************************************************************************
 234:temperature_task.c **** * Summary:
 235:temperature_task.c **** *  Interrupt service routine of the Scanning SAR ADC
 236:temperature_task.c **** *
 237:temperature_task.c **** * Parameters:
 238:temperature_task.c **** *  None
 239:temperature_task.c **** *
 240:temperature_task.c **** * Return:
 241:temperature_task.c **** *  void
 242:temperature_task.c **** *
 243:temperature_task.c **** *******************************************************************************/
 244:temperature_task.c **** void isrADC(void)
 245:temperature_task.c **** {
 246:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 247:temperature_task.c ****     BaseType_t rtosApiResult;
 248:temperature_task.c ****     
 249:temperature_task.c ****     /* Variable that stored interrupt status */
 250:temperature_task.c ****     uint32_t intr_status;
 251:temperature_task.c **** 
 252:temperature_task.c ****     /* Read interrupt status register */
 253:temperature_task.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
 254:temperature_task.c ****     
 255:temperature_task.c ****      /* Clear handled interrupt */
 256:temperature_task.c ****     Cy_SAR_ClearInterrupt(ADC_SAR__HW, intr_status);
 257:temperature_task.c ****     
 258:temperature_task.c ****     /* Read interrupt status register to ensure write completed due to 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 6


 259:temperature_task.c ****        buffered writes */
 260:temperature_task.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
 261:temperature_task.c ****     
 262:temperature_task.c ****     /* Send command to process temperature */
 263:temperature_task.c ****     temperature_command_t temperatureCommand = HANDLE_ADC_INTERRUPT;
 264:temperature_task.c ****     rtosApiResult = xQueueSendFromISR(temperatureCommandQ,
 265:temperature_task.c ****                                       &temperatureCommand,0u);
 266:temperature_task.c ****     
 267:temperature_task.c ****     /* Check if the operation has been successful */
 268:temperature_task.c ****     if(rtosApiResult != pdTRUE)
 269:temperature_task.c ****     {
 270:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Sending data to temperature"\
 271:temperature_task.c ****                     "queue", 0u);    
 272:temperature_task.c ****     }  
 273:temperature_task.c **** }
 274:temperature_task.c **** 
 275:temperature_task.c **** /*******************************************************************************
 276:temperature_task.c **** * Function Name: void static TemperatureTimerCallback(TimerHandle_t xTimer)                        
 277:temperature_task.c **** ********************************************************************************
 278:temperature_task.c **** * Summary:
 279:temperature_task.c **** *  This function is called when the temperature timer expires
 280:temperature_task.c **** *
 281:temperature_task.c **** * Parameters:
 282:temperature_task.c **** *  TimerHandle_t xTimer :  Current timer value (unused)
 283:temperature_task.c **** *
 284:temperature_task.c **** * Return:
 285:temperature_task.c **** *  void
 286:temperature_task.c **** *
 287:temperature_task.c **** *******************************************************************************/
 288:temperature_task.c **** void static TemperatureTimerCallback(TimerHandle_t xTimer)
 289:temperature_task.c **** {
  28              		.loc 1 289 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              		.cfi_def_cfa_offset 16
 290:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 291:temperature_task.c ****     BaseType_t rtosApiResult;
 292:temperature_task.c ****     
 293:temperature_task.c ****     /* Remove warning for unused parameter */
 294:temperature_task.c ****     (void)xTimer;
 295:temperature_task.c ****     
 296:temperature_task.c ****     /* Send command to process temperature */
 297:temperature_task.c ****     temperature_command_t temperatureCommand = TEMPERATURE_TIMER_EXPIRED;
  38              		.loc 1 297 0
  39 0004 02A9     		add	r1, sp, #8
  40 0006 0323     		movs	r3, #3
  41 0008 01F8013D 		strb	r3, [r1, #-1]!
 298:temperature_task.c ****     rtosApiResult = xQueueSend(temperatureCommandQ, 
  42              		.loc 1 298 0
  43 000c 0023     		movs	r3, #0
  44 000e 1A46     		mov	r2, r3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 7


  45 0010 0348     		ldr	r0, .L3
  46              	.LVL1:
  47 0012 0068     		ldr	r0, [r0]
  48 0014 FFF7FEFF 		bl	xQueueGenericSend
  49              	.LVL2:
 299:temperature_task.c ****                                &temperatureCommand,0u);
 300:temperature_task.c ****     
 301:temperature_task.c ****     /* Check if the operation has been successful */
 302:temperature_task.c ****     if(rtosApiResult != pdTRUE)
 303:temperature_task.c ****     {
 304:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Sending data to temperature"\
 305:temperature_task.c ****                          "queue", 0u);    
 306:temperature_task.c ****     }
 307:temperature_task.c **** }
  50              		.loc 1 307 0
  51 0018 03B0     		add	sp, sp, #12
  52              		.cfi_def_cfa_offset 4
  53              		@ sp needed
  54 001a 5DF804FB 		ldr	pc, [sp], #4
  55              	.L4:
  56 001e 00BF     		.align	2
  57              	.L3:
  58 0020 00000000 		.word	temperatureCommandQ
  59              		.cfi_endproc
  60              	.LFE524:
  61              		.size	TemperatureTimerCallback, .-TemperatureTimerCallback
  62              		.section	.text.TemperatureTimerStart,"ax",%progbits
  63              		.align	2
  64              		.thumb
  65              		.thumb_func
  66              		.type	TemperatureTimerStart, %function
  67              	TemperatureTimerStart:
  68              	.LFB525:
 308:temperature_task.c **** 
 309:temperature_task.c **** /*******************************************************************************
 310:temperature_task.c **** * Function Name: void static TemperatureTimerStart(void)                  
 311:temperature_task.c **** ********************************************************************************
 312:temperature_task.c **** * Summary:
 313:temperature_task.c **** *  This function starts the timer that provides timing to periodic
 314:temperature_task.c **** *  temperature processing
 315:temperature_task.c **** *
 316:temperature_task.c **** * Parameters:
 317:temperature_task.c **** *  void
 318:temperature_task.c **** *
 319:temperature_task.c **** * Return:
 320:temperature_task.c **** *  void
 321:temperature_task.c **** *
 322:temperature_task.c **** *******************************************************************************/
 323:temperature_task.c **** void static TemperatureTimerStart(void)
 324:temperature_task.c **** {
  69              		.loc 1 324 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
  73 0000 10B5     		push	{r4, lr}
  74              		.cfi_def_cfa_offset 8
  75              		.cfi_offset 4, -8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 8


  76              		.cfi_offset 14, -4
  77 0002 82B0     		sub	sp, sp, #8
  78              		.cfi_def_cfa_offset 16
 325:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 326:temperature_task.c ****     BaseType_t rtosApiResult;
 327:temperature_task.c ****     
 328:temperature_task.c ****     /* Create an RTOS timer */
 329:temperature_task.c ****     xTimer_Temperature =  xTimerCreate ("Temperature Timer",
  79              		.loc 1 329 0
  80 0004 0B4B     		ldr	r3, .L8
  81 0006 0093     		str	r3, [sp]
  82 0008 0023     		movs	r3, #0
  83 000a 0122     		movs	r2, #1
  84 000c 42F21071 		movw	r1, #10000
  85 0010 0948     		ldr	r0, .L8+4
  86 0012 FFF7FEFF 		bl	xTimerCreate
  87              	.LVL3:
  88 0016 094B     		ldr	r3, .L8+8
  89 0018 1860     		str	r0, [r3]
 330:temperature_task.c ****                                         SLOW_SCAN_INTERVAL, pdTRUE,  
 331:temperature_task.c ****                                         NULL, TemperatureTimerCallback);
 332:temperature_task.c ****     
 333:temperature_task.c ****     /* Make sure that timer handle is valid */
 334:temperature_task.c ****     if (xTimer_Temperature != NULL)
  90              		.loc 1 334 0
  91 001a 48B1     		cbz	r0, .L5
  92 001c 0446     		mov	r4, r0
 335:temperature_task.c ****     {
 336:temperature_task.c ****         /* Start the timer */
 337:temperature_task.c ****         rtosApiResult = xTimerStart(xTimer_Temperature,0u);
  93              		.loc 1 337 0
  94 001e FFF7FEFF 		bl	xTaskGetTickCount
  95              	.LVL4:
  96 0022 0023     		movs	r3, #0
  97 0024 0093     		str	r3, [sp]
  98 0026 0246     		mov	r2, r0
  99 0028 0121     		movs	r1, #1
 100 002a 2046     		mov	r0, r4
 101 002c FFF7FEFF 		bl	xTimerGenericCommand
 102              	.LVL5:
 103              	.L5:
 338:temperature_task.c ****         
 339:temperature_task.c ****         /* Check if the operation has been successful */
 340:temperature_task.c ****         if(rtosApiResult != pdPASS)
 341:temperature_task.c ****         {
 342:temperature_task.c ****             Task_DebugPrintf("Failure! : Temperature  - Timer initialization", 0u);    
 343:temperature_task.c ****         }
 344:temperature_task.c ****     }
 345:temperature_task.c ****     else
 346:temperature_task.c ****     {
 347:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Timer creation", 0u); 
 348:temperature_task.c ****     }
 349:temperature_task.c **** }
 104              		.loc 1 349 0
 105 0030 02B0     		add	sp, sp, #8
 106              		.cfi_def_cfa_offset 8
 107              		@ sp needed
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 9


 108 0032 10BD     		pop	{r4, pc}
 109              	.L9:
 110              		.align	2
 111              	.L8:
 112 0034 00000000 		.word	TemperatureTimerCallback
 113 0038 00000000 		.word	.LC0
 114 003c 00000000 		.word	xTimer_Temperature
 115              		.cfi_endproc
 116              	.LFE525:
 117              		.size	TemperatureTimerStart, .-TemperatureTimerStart
 118              		.section	.text.TemperatureTimerUpdate,"ax",%progbits
 119              		.align	2
 120              		.thumb
 121              		.thumb_func
 122              		.type	TemperatureTimerUpdate, %function
 123              	TemperatureTimerUpdate:
 124              	.LFB526:
 350:temperature_task.c **** 
 351:temperature_task.c **** /*******************************************************************************
 352:temperature_task.c **** * Function Name: void static TemperatureTimerUpdate(TickType_t period))                 
 353:temperature_task.c **** ********************************************************************************
 354:temperature_task.c **** * Summary:
 355:temperature_task.c **** *  This function updates the timer period per the parameter
 356:temperature_task.c **** *
 357:temperature_task.c **** * Parameters:
 358:temperature_task.c **** *  TickType_t period :  Period of the timer in ticks
 359:temperature_task.c **** *
 360:temperature_task.c **** * Return:
 361:temperature_task.c **** *  void
 362:temperature_task.c **** *
 363:temperature_task.c **** *******************************************************************************/
 364:temperature_task.c **** void static TemperatureTimerUpdate(TickType_t period)
 365:temperature_task.c **** {
 125              		.loc 1 365 0
 126              		.cfi_startproc
 127              		@ args = 0, pretend = 0, frame = 0
 128              		@ frame_needed = 0, uses_anonymous_args = 0
 129              	.LVL6:
 130 0000 10B5     		push	{r4, lr}
 131              		.cfi_def_cfa_offset 8
 132              		.cfi_offset 4, -8
 133              		.cfi_offset 14, -4
 134 0002 82B0     		sub	sp, sp, #8
 135              		.cfi_def_cfa_offset 16
 366:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 367:temperature_task.c ****     BaseType_t rtosApiResult;
 368:temperature_task.c ****     
 369:temperature_task.c ****     /* Change the timer period */
 370:temperature_task.c ****     rtosApiResult = xTimerChangePeriod(xTimer_Temperature, period, 0u);
 136              		.loc 1 370 0
 137 0004 054B     		ldr	r3, .L12
 138 0006 1C68     		ldr	r4, [r3]
 139 0008 0023     		movs	r3, #0
 140 000a 0093     		str	r3, [sp]
 141 000c 0246     		mov	r2, r0
 142 000e 0421     		movs	r1, #4
 143 0010 2046     		mov	r0, r4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 10


 144              	.LVL7:
 145 0012 FFF7FEFF 		bl	xTimerGenericCommand
 146              	.LVL8:
 371:temperature_task.c **** 
 372:temperature_task.c ****     /* Check if the operation has been successful */
 373:temperature_task.c ****     if(rtosApiResult != pdPASS)
 374:temperature_task.c ****     {
 375:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature - Timer update ", 0u);   
 376:temperature_task.c ****     }
 377:temperature_task.c **** }
 147              		.loc 1 377 0
 148 0016 02B0     		add	sp, sp, #8
 149              		.cfi_def_cfa_offset 8
 150              		@ sp needed
 151 0018 10BD     		pop	{r4, pc}
 152              	.L13:
 153 001a 00BF     		.align	2
 154              	.L12:
 155 001c 00000000 		.word	xTimer_Temperature
 156              		.cfi_endproc
 157              	.LFE526:
 158              		.size	TemperatureTimerUpdate, .-TemperatureTimerUpdate
 159              		.section	.text.isrADC,"ax",%progbits
 160              		.align	2
 161              		.global	isrADC
 162              		.thumb
 163              		.thumb_func
 164              		.type	isrADC, %function
 165              	isrADC:
 166              	.LFB523:
 245:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 167              		.loc 1 245 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 8
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 10B5     		push	{r4, lr}
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 4, -8
 174              		.cfi_offset 14, -4
 175 0002 82B0     		sub	sp, sp, #8
 176              		.cfi_def_cfa_offset 16
 177              	.LVL9:
 178              	.LBB16:
 179              	.LBB17:
 180              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 11


  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar SAR ADC Subsystem (SAR)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 12


  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 13


 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 14


 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 15


 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 16


 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 17


 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 18


 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 19


 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_D
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 20


 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_Sleep flow</td>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 21


 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syslib/cy_syslib.h"
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syspm/cy_syspm.h"
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifndef CY_IP_MXS40PASS_SAR
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     #error "The SAR driver is not supported on this device"
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        10
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 22


 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 23


 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 24


 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 25


 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 26


 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 27


 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 28


 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 29


1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 30


1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 31


1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 32


1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 33


1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 34


1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Sleep(SAR_Type *base);
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 35


1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CTRL &= ~SAR_CTRL_ENABLED_Msk;
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 36


1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->CHAN_RESULT_UPDATED;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CHAN_EN = enableMask;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 37


1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->RANGE_COND = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->INTR;
 181              		.loc 2 1533 0
 182 0004 0E4B     		ldr	r3, .L17
 183 0006 D3F81042 		ldr	r4, [r3, #528]
 184              	.LVL10:
 185              	.LBE17:
 186              	.LBE16:
 187              	.LBB18:
 188              	.LBB19:
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 38


1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 189              		.loc 2 1561 0
 190 000a 072C     		cmp	r4, #7
 191 000c 04D9     		bls	.L15
 192 000e 40F21961 		movw	r1, #1561
 193 0012 0C48     		ldr	r0, .L17+4
 194 0014 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 195              	.LVL11:
 196              	.L15:
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR = intrMask;
 197              		.loc 2 1563 0
 198 0018 094B     		ldr	r3, .L17
 199 001a C3F81042 		str	r4, [r3, #528]
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) base->INTR;
 200              		.loc 2 1566 0
 201 001e D3F81022 		ldr	r2, [r3, #528]
 202              	.LVL12:
 203              	.LBE19:
 204              	.LBE18:
 205              	.LBB20:
 206              	.LBB21:
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 207              		.loc 2 1533 0
 208 0022 D3F81032 		ldr	r3, [r3, #528]
 209              	.LVL13:
 210              	.LBE21:
 211              	.LBE20:
 263:temperature_task.c ****     rtosApiResult = xQueueSendFromISR(temperatureCommandQ,
 212              		.loc 1 263 0
 213 0026 02A9     		add	r1, sp, #8
 214 0028 0223     		movs	r3, #2
 215 002a 01F8013D 		strb	r3, [r1, #-1]!
 264:temperature_task.c ****                                       &temperatureCommand,0u);
 216              		.loc 1 264 0
 217 002e 0023     		movs	r3, #0
 218 0030 1A46     		mov	r2, r3
 219 0032 0548     		ldr	r0, .L17+8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 39


 220 0034 0068     		ldr	r0, [r0]
 221 0036 FFF7FEFF 		bl	xQueueGenericSendFromISR
 222              	.LVL14:
 273:temperature_task.c **** 
 223              		.loc 1 273 0
 224 003a 02B0     		add	sp, sp, #8
 225              		.cfi_def_cfa_offset 8
 226              		@ sp needed
 227 003c 10BD     		pop	{r4, pc}
 228              	.L18:
 229 003e 00BF     		.align	2
 230              	.L17:
 231 0040 00001D41 		.word	1092419584
 232 0044 14000000 		.word	.LC1
 233 0048 00000000 		.word	temperatureCommandQ
 234              		.cfi_endproc
 235              	.LFE523:
 236              		.size	isrADC, .-isrADC
 237              		.section	.text.Task_Temperature,"ax",%progbits
 238              		.align	2
 239              		.global	Task_Temperature
 240              		.thumb
 241              		.thumb_func
 242              		.type	Task_Temperature, %function
 243              	Task_Temperature:
 244              	.LFB522:
 108:temperature_task.c ****     /* Variable that stores commands received  */
 245              		.loc 1 108 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 16
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              	.LVL15:
 250 0000 30B5     		push	{r4, r5, lr}
 251              		.cfi_def_cfa_offset 12
 252              		.cfi_offset 4, -12
 253              		.cfi_offset 5, -8
 254              		.cfi_offset 14, -4
 255 0002 2DED028B 		vpush.64	{d8}
 256              		.cfi_def_cfa_offset 20
 257              		.cfi_offset 80, -20
 258              		.cfi_offset 81, -16
 259 0006 85B0     		sub	sp, sp, #20
 260              		.cfi_def_cfa_offset 40
 261              	.LVL16:
 130:temperature_task.c ****     ADC_IRQ_Enable();
 262              		.loc 1 130 0
 263 0008 4F48     		ldr	r0, .L31
 264              	.LVL17:
 265 000a FFF7FEFF 		bl	ADC_StartEx
 266              	.LVL18:
 131:temperature_task.c ****     ADC_StartConvert();
 267              		.loc 1 131 0
 268 000e FFF7FEFF 		bl	ADC_IRQ_Enable
 269              	.LVL19:
 132:temperature_task.c ****     
 270              		.loc 1 132 0
 271 0012 FFF7FEFF 		bl	ADC_StartConvert
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 40


 272              	.LVL20:
 135:temperature_task.c ****     
 273              		.loc 1 135 0
 274 0016 FFF7FEFF 		bl	TemperatureTimerStart
 275              	.LVL21:
 117:temperature_task.c ****     
 276              		.loc 1 117 0
 277 001a 0024     		movs	r4, #0
 278              	.LVL22:
 279              	.L20:
 142:temperature_task.c ****                                       &temperatureCommand, portMAX_DELAY);
 280              		.loc 1 142 0
 281 001c 0023     		movs	r3, #0
 282 001e 4FF0FF32 		mov	r2, #-1
 283 0022 0DF10F01 		add	r1, sp, #15
 284 0026 4948     		ldr	r0, .L31+4
 285 0028 0068     		ldr	r0, [r0]
 286 002a FFF7FEFF 		bl	xQueueGenericReceive
 287              	.LVL23:
 146:temperature_task.c ****         {   
 288              		.loc 1 146 0
 289 002e 0128     		cmp	r0, #1
 290 0030 F4D1     		bne	.L20
 149:temperature_task.c ****             {
 291              		.loc 1 149 0
 292 0032 9DF80F30 		ldrb	r3, [sp, #15]	@ zero_extendqisi2
 293 0036 032B     		cmp	r3, #3
 294 0038 F0D8     		bhi	.L20
 295 003a DFE803F0 		tbb	[pc, r3]
 296              	.L23:
 297 003e 02       		.byte	(.L22-.L23)/2
 298 003f 07       		.byte	(.L24-.L23)/2
 299 0040 0D       		.byte	(.L25-.L23)/2
 300 0041 73       		.byte	(.L26-.L23)/2
 301              		.p2align 1
 302              	.L22:
 303              	.LVL24:
 155:temperature_task.c ****                     break;
 304              		.loc 1 155 0
 305 0042 6420     		movs	r0, #100
 306              	.LVL25:
 307 0044 FFF7FEFF 		bl	TemperatureTimerUpdate
 308              	.LVL26:
 153:temperature_task.c ****                     /* Enable periodic scan */
 309              		.loc 1 153 0
 310 0048 0124     		movs	r4, #1
 156:temperature_task.c ****                  
 311              		.loc 1 156 0
 312 004a E7E7     		b	.L20
 313              	.LVL27:
 314              	.L24:
 162:temperature_task.c ****                     break;
 315              		.loc 1 162 0
 316 004c 42F21070 		movw	r0, #10000
 317              	.LVL28:
 318 0050 FFF7FEFF 		bl	TemperatureTimerUpdate
 319              	.LVL29:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 41


 160:temperature_task.c ****                     /* Disable periodic scan */
 320              		.loc 1 160 0
 321 0054 0024     		movs	r4, #0
 163:temperature_task.c ****                 /* Process temperature data from CapSense widgets */
 322              		.loc 1 163 0
 323 0056 E1E7     		b	.L20
 324              	.LVL30:
 325              	.L25:
 326              	.LBB34:
 327              	.LBB35:
 328              		.file 3 "Generated_Source\\PSoC6/ADC.h"
   1:Generated_Source\PSoC6/ADC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC.h **** * \file     ADC.h
   3:Generated_Source\PSoC6/ADC.h **** * \version  2.10
   4:Generated_Source\PSoC6/ADC.h **** *
   5:Generated_Source\PSoC6/ADC.h **** * \brief
   6:Generated_Source\PSoC6/ADC.h **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC6/ADC.h **** *
   8:Generated_Source\PSoC6/ADC.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC.h **** * \copyright
  10:Generated_Source\PSoC6/ADC.h **** * (c) 2017, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC.h **** #if !defined(CY_ADC_H)
  40:Generated_Source\PSoC6/ADC.h **** #define CY_ADC_H
  41:Generated_Source\PSoC6/ADC.h **** 
  42:Generated_Source\PSoC6/ADC.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC.h **** 
  45:Generated_Source\PSoC6/ADC.h **** #define ADC_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC.h **** #if (ADC_VREF_ROUTED)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 42


  47:Generated_Source\PSoC6/ADC.h **** #include "ADC_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC.h **** #endif
  49:Generated_Source\PSoC6/ADC.h **** 
  50:Generated_Source\PSoC6/ADC.h **** #define ADC_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC.h **** #include "ADC_intSarClock.h"
  53:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC.h **** 
  55:Generated_Source\PSoC6/ADC.h **** /**
  56:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC.h **** *
  58:Generated_Source\PSoC6/ADC.h **** */
  59:Generated_Source\PSoC6/ADC.h **** typedef struct
  60:Generated_Source\PSoC6/ADC.h **** {
  61:Generated_Source\PSoC6/ADC.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC.h ****                                             */
  68:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC.h **** 
  72:Generated_Source\PSoC6/ADC.h **** } ADC_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC.h **** 
  75:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC.h **** void ADC_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC.h **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC.h **** void ADC_Init(void);
  81:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void);
  82:Generated_Source\PSoC6/ADC.h **** 
  83:Generated_Source\PSoC6/ADC.h **** /**
  84:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC.h **** * @{
  86:Generated_Source\PSoC6/ADC.h **** */
  87:Generated_Source\PSoC6/ADC.h **** void ADC_Start(void);
  88:Generated_Source\PSoC6/ADC.h **** void ADC_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void);
  90:Generated_Source\PSoC6/ADC.h **** void ADC_StartConvert(void);
  91:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void);
  92:Generated_Source\PSoC6/ADC.h **** void ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC.h **** void ADC_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC.h **** uint32_t ADC_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 43


 104:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC.h **** 
 107:Generated_Source\PSoC6/ADC.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC.h **** 
 109:Generated_Source\PSoC6/ADC.h **** void ADC_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC.h **** 
 111:Generated_Source\PSoC6/ADC.h **** /**
 112:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC.h **** * @{
 114:Generated_Source\PSoC6/ADC.h **** */
 115:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void);
 116:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void);
 117:Generated_Source\PSoC6/ADC.h **** 
 118:Generated_Source\PSoC6/ADC.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC.h **** 
 120:Generated_Source\PSoC6/ADC.h **** /**
 121:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC.h **** * @{
 123:Generated_Source\PSoC6/ADC.h **** */
 124:Generated_Source\PSoC6/ADC.h **** void ADC_ISR(void);
 125:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC.h **** 
 128:Generated_Source\PSoC6/ADC.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC.h **** 
 130:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC.h **** 
 135:Generated_Source\PSoC6/ADC.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC.h **** 
 138:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC.h **** 
 142:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_RATE             (200)
 143:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_COUNT           (2u)
 145:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_NOMINAL_CLOCK_FREQ      (12000000u)
 147:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_EN              (0x3u)
 148:Generated_Source\PSoC6/ADC.h **** 
 149:Generated_Source\PSoC6/ADC.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLES_AVERAGED        (7uL)
 153:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_PRESENT          (0)
 157:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME0          (3uL)
 159:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME2          (2uL)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 44


 161:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC.h **** 
 172:Generated_Source\PSoC6/ADC.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG0_NOMINAL_CLOCK_FREQ))
 175:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC.h **** 
 177:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC.h **** 
 181:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC.h **** 
 185:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC.h **** 
 193:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC.h **** 
 216:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 45


 218:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG1_NOMINAL_CLOCK_FR
 219:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC.h **** #endif /* #if(ADC_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC.h **** 
 222:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC.h **** 
 226:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC.h **** 
 230:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC.h **** 
 238:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC.h **** 
 261:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG2_NOMINAL_CLOCK_FR
 264:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC.h **** 
 267:Generated_Source\PSoC6/ADC.h **** 
 268:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC.h **** 
 272:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 46


 275:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC.h **** 
 283:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC.h **** 
 306:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG3_NOMINAL_CLOCK_FR
 309:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC.h **** 
 312:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC.h **** 
 316:Generated_Source\PSoC6/ADC.h **** #define ADC_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC.h **** #define ADC_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC.h **** #define ADC_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC.h **** #define ADC_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC.h **** 
 323:Generated_Source\PSoC6/ADC.h **** /** ADC_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC.h **** */
 326:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CHANNELS_NUM           (2u)
 327:Generated_Source\PSoC6/ADC.h **** 
 328:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC.h **** /**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 47


 332:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC.h **** * @{
 337:Generated_Source\PSoC6/ADC.h **** */
 338:Generated_Source\PSoC6/ADC.h **** 
 339:Generated_Source\PSoC6/ADC.h **** /** ADC_initVar
 340:Generated_Source\PSoC6/ADC.h **** * The ADC_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC.h **** * set to 1 the first time ADC_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC.h **** * ADC_Start() routine.
 345:Generated_Source\PSoC6/ADC.h **** *
 346:Generated_Source\PSoC6/ADC.h **** * If reinitialization of the component is required, then the ADC_Init() function
 347:Generated_Source\PSoC6/ADC.h **** * can be called before the ADC_Start() or ADC_Enable()
 348:Generated_Source\PSoC6/ADC.h **** * functions.
 349:Generated_Source\PSoC6/ADC.h **** */
 350:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_initVar;
 351:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_selected;
 352:Generated_Source\PSoC6/ADC.h **** extern uint32_t ADC_currentConfig;
 353:Generated_Source\PSoC6/ADC.h **** 
 354:Generated_Source\PSoC6/ADC.h **** #define ADC_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC.h **** 
 356:Generated_Source\PSoC6/ADC.h **** extern const ADC_CONFIG_STRUCT ADC_allConfigs[ADC_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC.h **** 
 358:Generated_Source\PSoC6/ADC.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC.h **** */
 362:Generated_Source\PSoC6/ADC.h **** extern cy_stc_syspm_callback_t ADC_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC.h **** 
 364:Generated_Source\PSoC6/ADC.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC.h **** 
 366:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC.h ****     #if((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC.h ****     #endif /* ((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC.h **** #else
 377:Generated_Source\PSoC6/ADC.h ****     #define ADC_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC.h **** 
 380:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 48


 389:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC.h **** 
 395:Generated_Source\PSoC6/ADC.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC.h **** 
 400:Generated_Source\PSoC6/ADC.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_FREERUNNING == ADC_FREERUNNING)
 402:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC.h **** #endif /* End ADC_CFG0_FREERUNNING == ADC_FREERUNNING */
 406:Generated_Source\PSoC6/ADC.h **** 
 407:Generated_Source\PSoC6/ADC.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC.h **** #elif(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC.h **** 
 414:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC.h ****     #if((ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC.h **** #elif (ADC_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         ADC_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC.h **** #else
 425:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC.h **** 
 428:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG0 << SAR_CTRL_NEG_S
 430:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC.h **** 
 436:Generated_Source\PSoC6/ADC.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC.h **** #else
 440:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC.h **** 
 443:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC.h **** 
 445:Generated_Source\PSoC6/ADC.h **** /* SAMPLE_CTRL initial values */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 49


 446:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC.h **** 
 450:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC.h **** 
 454:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC.h **** 
 458:Generated_Source\PSoC6/ADC.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC.h **** 
 463:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC.h **** 
 466:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC.h **** 
 470:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC.h **** 
 474:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC.h **** 
 478:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC.h **** 
 489:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC.h **** )
 501:Generated_Source\PSoC6/ADC.h **** 
 502:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_THRES_INIT \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 50


 503:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC.h ****         | (uint32)((uint32)ADC_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC.h **** 
 507:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC.h **** 
 509:Generated_Source\PSoC6/ADC.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC.h **** */
 512:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC.h **** 
 515:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC.h **** 
 519:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC.h **** 
 529:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC.h **** 
 535:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC.h **** 
 540:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_FREERUNNING == ADC_FREERUNNING)
 542:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG1_FREERUNNING == ADC_FREERUNNING */
 546:Generated_Source\PSoC6/ADC.h **** 
 547:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         ADC_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC.h ****     #else
 558:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 51


 560:Generated_Source\PSoC6/ADC.h **** 
 561:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG1 << SAR_CTRL_NEG_S
 562:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC.h **** 
 564:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC.h **** 
 567:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC.h **** 
 569:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC.h **** 
 574:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC.h **** 
 578:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC.h **** 
 582:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC.h **** 
 587:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC.h **** 
 590:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC.h **** 
 594:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC.h **** 
 598:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC.h **** 
 602:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC.h **** 
 613:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_SAMPLES_NUM_INIT \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 52


 617:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC.h ****     )
 625:Generated_Source\PSoC6/ADC.h **** 
 626:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC.h **** 
 631:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC.h **** 
 633:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC.h ****     */
 636:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC.h **** 
 640:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC.h **** 
 644:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC.h **** 
 654:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC.h **** 
 660:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC.h **** 
 665:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_FREERUNNING == ADC_FREERUNNING)
 667:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG2_FREERUNNING == ADC_FREERUNNING */
 671:Generated_Source\PSoC6/ADC.h **** 
 672:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 53


 674:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         ADC_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC.h ****     #else
 683:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC.h **** 
 686:Generated_Source\PSoC6/ADC.h ****    #define ADC_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG2 << SAR_CTRL_NEG_SE
 687:Generated_Source\PSoC6/ADC.h **** 
 688:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC.h **** 
 690:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC.h **** 
 693:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC.h **** 
 695:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC.h **** 
 700:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC.h **** 
 704:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC.h **** 
 708:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC.h **** 
 713:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC.h **** 
 716:Generated_Source\PSoC6/ADC.h **** 
 717:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC.h **** 
 721:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC.h **** 
 725:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC.h **** 
 729:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_POWER_INIT \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 54


 731:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC.h **** 
 740:Generated_Source\PSoC6/ADC.h **** 
 741:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC.h ****     )
 753:Generated_Source\PSoC6/ADC.h **** 
 754:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC.h **** 
 759:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC.h **** 
 761:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC.h ****     */
 764:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC.h **** 
 768:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC.h **** 
 772:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC.h **** 
 782:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 55


 788:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC.h **** 
 793:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_FREERUNNING == ADC_FREERUNNING)
 795:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG3_FREERUNNING == ADC_FREERUNNING */
 799:Generated_Source\PSoC6/ADC.h **** 
 800:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         ADC_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC.h ****     #else
 811:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC.h **** 
 814:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG3 << SAR_CTRL_NEG_S
 815:Generated_Source\PSoC6/ADC.h **** 
 816:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC.h **** 
 818:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC.h **** 
 821:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC.h **** 
 823:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC.h **** 
 828:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC.h **** 
 832:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC.h **** 
 836:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC.h **** 
 841:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC.h **** 
 844:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_POWER_INIT  \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 56


 845:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC.h **** 
 848:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC.h **** 
 852:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC.h **** 
 856:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC.h **** 
 867:Generated_Source\PSoC6/ADC.h **** 
 868:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC.h ****     )
 880:Generated_Source\PSoC6/ADC.h **** 
 881:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC.h **** 
 886:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC.h **** 
 888:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC.h ****     */
 891:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC.h **** 
 894:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC.h **** 
 896:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC.h **** 
 900:Generated_Source\PSoC6/ADC.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Enable
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 57


 902:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC.h **** *
 904:Generated_Source\PSoC6/ADC.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC.h **** *
 906:Generated_Source\PSoC6/ADC.h **** * \param None
 907:Generated_Source\PSoC6/ADC.h **** *
 908:Generated_Source\PSoC6/ADC.h **** * \return None
 909:Generated_Source\PSoC6/ADC.h **** *
 910:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC.h **** *  None
 912:Generated_Source\PSoC6/ADC.h **** *
 913:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void)
 915:Generated_Source\PSoC6/ADC.h **** {
 916:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Enable(ADC_SAR__HW);
 917:Generated_Source\PSoC6/ADC.h **** }
 918:Generated_Source\PSoC6/ADC.h **** 
 919:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 920:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Stop
 921:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC.h **** *
 923:Generated_Source\PSoC6/ADC.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC.h **** * power mode.
 925:Generated_Source\PSoC6/ADC.h **** *
 926:Generated_Source\PSoC6/ADC.h **** * \param None
 927:Generated_Source\PSoC6/ADC.h **** *
 928:Generated_Source\PSoC6/ADC.h **** * \return None
 929:Generated_Source\PSoC6/ADC.h **** *
 930:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC.h **** * Do not use the ADC_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC.h **** * ADC_StopConvert() API. If you use the ADC_Stop() API
 933:Generated_Source\PSoC6/ADC.h **** * to halt conversions then later use the ADC_Start() and
 934:Generated_Source\PSoC6/ADC.h **** * ADC_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC.h **** * of the scan may be corrupt. The ADC_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC.h **** * the ADC to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC.h **** * channel scan is complete, the ADC will stop all conversions, which
 938:Generated_Source\PSoC6/ADC.h **** * can be detected by the use of an ISR or the ADC_IsEndConversion()
 939:Generated_Source\PSoC6/ADC.h **** * function.
 940:Generated_Source\PSoC6/ADC.h **** *
 941:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void)
 943:Generated_Source\PSoC6/ADC.h **** {
 944:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Disable(ADC_SAR__HW);
 945:Generated_Source\PSoC6/ADC.h **** }
 946:Generated_Source\PSoC6/ADC.h **** 
 947:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 948:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_StopConvert
 949:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 950:Generated_Source\PSoC6/ADC.h **** *
 951:Generated_Source\PSoC6/ADC.h **** * \brief Forces the ADC to stop conversions. If a conversion is
 952:Generated_Source\PSoC6/ADC.h **** * currently executing, that conversion will complete, but no further conversions
 953:Generated_Source\PSoC6/ADC.h **** * will occur.
 954:Generated_Source\PSoC6/ADC.h **** *
 955:Generated_Source\PSoC6/ADC.h **** * \param None
 956:Generated_Source\PSoC6/ADC.h **** *
 957:Generated_Source\PSoC6/ADC.h **** * \return None
 958:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 58


 959:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 960:Generated_Source\PSoC6/ADC.h **** *
 961:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 962:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void)
 963:Generated_Source\PSoC6/ADC.h **** {
 964:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_StopConvert(ADC_SAR__HW);
 965:Generated_Source\PSoC6/ADC.h **** }
 966:Generated_Source\PSoC6/ADC.h **** 
 967:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 968:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult16
 969:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 970:Generated_Source\PSoC6/ADC.h **** *
 971:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register
 972:Generated_Source\PSoC6/ADC.h **** *
 973:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 974:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 975:Generated_Source\PSoC6/ADC.h **** *
 976:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 16-bit integer.
 977:Generated_Source\PSoC6/ADC.h **** *
 978:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 979:Generated_Source\PSoC6/ADC.h **** *
 980:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 981:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan)
 982:Generated_Source\PSoC6/ADC.h **** {
 983:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
 984:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 329              		.loc 3 984 0
 330 0058 3D4B     		ldr	r3, .L31+8
 331 005a 1B68     		ldr	r3, [r3]
 332 005c 03EB8303 		add	r3, r3, r3, lsl #2
 333 0060 9A00     		lsls	r2, r3, #2
 334 0062 3C4B     		ldr	r3, .L31+12
 335 0064 1A44     		add	r2, r2, r3
 336 0066 5368     		ldr	r3, [r2, #4]
 337 0068 23B9     		cbnz	r3, .L27
 338 006a 4FF47671 		mov	r1, #984
 339 006e 3A48     		ldr	r0, .L31+16
 340              	.LVL31:
 341 0070 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 342              	.LVL32:
 343              	.L27:
 985:Generated_Source\PSoC6/ADC.h **** 
 986:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_GetResult16(ADC_SAR__HW, chan);
 344              		.loc 3 986 0
 345 0074 0021     		movs	r1, #0
 346 0076 3948     		ldr	r0, .L31+20
 347 0078 FFF7FEFF 		bl	Cy_SAR_GetResult16
 348              	.LVL33:
 349 007c 08EE900A 		vmov	s17, r0	@ int
 350              	.LVL34:
 351              	.LBE35:
 352              	.LBE34:
 353              	.LBB36:
 354              	.LBB37:
 984:Generated_Source\PSoC6/ADC.h **** 
 355              		.loc 3 984 0
 356 0080 334B     		ldr	r3, .L31+8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 59


 357 0082 1B68     		ldr	r3, [r3]
 358 0084 03EB8303 		add	r3, r3, r3, lsl #2
 359 0088 9A00     		lsls	r2, r3, #2
 360 008a 324B     		ldr	r3, .L31+12
 361 008c 1A44     		add	r2, r2, r3
 362 008e 5368     		ldr	r3, [r2, #4]
 363 0090 012B     		cmp	r3, #1
 364 0092 04D8     		bhi	.L28
 365 0094 4FF47671 		mov	r1, #984
 366 0098 2F48     		ldr	r0, .L31+16
 367 009a FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 368              	.LVL35:
 369              	.L28:
 370              		.loc 3 986 0
 371 009e 2F4D     		ldr	r5, .L31+20
 372 00a0 0121     		movs	r1, #1
 373 00a2 2846     		mov	r0, r5
 374 00a4 FFF7FEFF 		bl	Cy_SAR_GetResult16
 375              	.LVL36:
 376 00a8 08EE100A 		vmov	s16, r0	@ int
 377              	.LVL37:
 378              	.LBE37:
 379              	.LBE36:
 380              	.LBB38:
 381              	.LBB39:
 987:Generated_Source\PSoC6/ADC.h **** }
 988:Generated_Source\PSoC6/ADC.h **** 
 989:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 990:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult32
 991:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6/ADC.h **** *
 993:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register.
 994:Generated_Source\PSoC6/ADC.h **** *
 995:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 996:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 997:Generated_Source\PSoC6/ADC.h **** *
 998:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 32-bit integer.
 999:Generated_Source\PSoC6/ADC.h **** *
1000:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1001:Generated_Source\PSoC6/ADC.h **** *
1002:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1003:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan)
1004:Generated_Source\PSoC6/ADC.h **** {
1005:Generated_Source\PSoC6/ADC.h ****     int32_t finalResult;
1006:Generated_Source\PSoC6/ADC.h **** 
1007:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1008:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1009:Generated_Source\PSoC6/ADC.h **** 
1010:Generated_Source\PSoC6/ADC.h ****     finalResult = Cy_SAR_GetResult32(ADC_SAR__HW, chan);
1011:Generated_Source\PSoC6/ADC.h **** 
1012:Generated_Source\PSoC6/ADC.h ****     return finalResult;
1013:Generated_Source\PSoC6/ADC.h **** }
1014:Generated_Source\PSoC6/ADC.h **** 
1015:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1016:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLowLimit
1017:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1018:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 60


1019:Generated_Source\PSoC6/ADC.h **** * \brief Sets the low limit parameter for a limit condition.
1020:Generated_Source\PSoC6/ADC.h **** *
1021:Generated_Source\PSoC6/ADC.h **** * \param lowLimit The low limit for a limit condition.
1022:Generated_Source\PSoC6/ADC.h **** *
1023:Generated_Source\PSoC6/ADC.h **** * \return None
1024:Generated_Source\PSoC6/ADC.h **** *
1025:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1026:Generated_Source\PSoC6/ADC.h **** *
1027:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1028:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit)
1029:Generated_Source\PSoC6/ADC.h **** {
1030:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetLowLimit(ADC_SAR__HW, lowLimit);
1031:Generated_Source\PSoC6/ADC.h **** }
1032:Generated_Source\PSoC6/ADC.h **** 
1033:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1034:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetHighLimit
1035:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1036:Generated_Source\PSoC6/ADC.h **** *
1037:Generated_Source\PSoC6/ADC.h **** * \brief Sets the high limit parameter for a limit condition.
1038:Generated_Source\PSoC6/ADC.h **** *
1039:Generated_Source\PSoC6/ADC.h **** * \param highLimit The high limit for a limit condition.
1040:Generated_Source\PSoC6/ADC.h **** *
1041:Generated_Source\PSoC6/ADC.h **** * \return None
1042:Generated_Source\PSoC6/ADC.h **** *
1043:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1044:Generated_Source\PSoC6/ADC.h **** *
1045:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1046:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit)
1047:Generated_Source\PSoC6/ADC.h **** {
1048:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetHighLimit(ADC_SAR__HW, highLimit);
1049:Generated_Source\PSoC6/ADC.h **** }
1050:Generated_Source\PSoC6/ADC.h **** 
1051:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1052:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLimitMask
1053:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1054:Generated_Source\PSoC6/ADC.h **** *
1055:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel limit condition mask.
1056:Generated_Source\PSoC6/ADC.h **** *
1057:Generated_Source\PSoC6/ADC.h **** *
1058:Generated_Source\PSoC6/ADC.h **** * \param limitMask
1059:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a limit condition interrupt.
1060:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the limit condition interrupt for channel N.
1061:Generated_Source\PSoC6/ADC.h **** * The limitMask cannot be larger than the number of channels.
1062:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1063:Generated_Source\PSoC6/ADC.h **** *
1064:Generated_Source\PSoC6/ADC.h **** * \return None
1065:Generated_Source\PSoC6/ADC.h **** *
1066:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1067:Generated_Source\PSoC6/ADC.h **** *
1068:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1069:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask)
1070:Generated_Source\PSoC6/ADC.h **** {
1071:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetRangeInterruptMask(ADC_SAR__HW, limitMask);
1072:Generated_Source\PSoC6/ADC.h **** }
1073:Generated_Source\PSoC6/ADC.h **** 
1074:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1075:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetSatMask
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 61


1076:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1077:Generated_Source\PSoC6/ADC.h **** *
1078:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel saturation event mask.
1079:Generated_Source\PSoC6/ADC.h **** *
1080:Generated_Source\PSoC6/ADC.h **** * \param satMask
1081:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a saturation event interrupt.
1082:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the saturation event interrupt for channel N.
1083:Generated_Source\PSoC6/ADC.h **** * The satMask cannot be larger than the number of channels.
1084:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1085:Generated_Source\PSoC6/ADC.h **** *
1086:Generated_Source\PSoC6/ADC.h **** * \return None
1087:Generated_Source\PSoC6/ADC.h **** *
1088:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1089:Generated_Source\PSoC6/ADC.h **** *
1090:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1091:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask)
1092:Generated_Source\PSoC6/ADC.h **** {
1093:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetSatInterruptMask(ADC_SAR__HW, satMask);
1094:Generated_Source\PSoC6/ADC.h **** }
1095:Generated_Source\PSoC6/ADC.h **** 
1096:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1097:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetOffset
1098:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1099:Generated_Source\PSoC6/ADC.h **** *
1100:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts,
1101:Generated_Source\PSoC6/ADC.h **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1102:Generated_Source\PSoC6/ADC.h **** *
1103:Generated_Source\PSoC6/ADC.h **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1104:Generated_Source\PSoC6/ADC.h **** * functions use the following equation:
1105:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1106:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1107:Generated_Source\PSoC6/ADC.h **** *
1108:Generated_Source\PSoC6/ADC.h **** * To set channel 0's offset based on known V_offset_mV, use:
1109:Generated_Source\PSoC6/ADC.h **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1110:Generated_Source\PSoC6/ADC.h **** *
1111:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1112:Generated_Source\PSoC6/ADC.h **** *
1113:Generated_Source\PSoC6/ADC.h **** * \param offset This value is a measured value when the inputs are shorted or
1114:Generated_Source\PSoC6/ADC.h **** * connected to the same input voltage.
1115:Generated_Source\PSoC6/ADC.h **** *
1116:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1117:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1118:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: offset was set successfully
1119:Generated_Source\PSoC6/ADC.h **** *
1120:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1121:Generated_Source\PSoC6/ADC.h **** *
1122:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1123:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset)
1124:Generated_Source\PSoC6/ADC.h **** {
1125:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1126:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1127:Generated_Source\PSoC6/ADC.h **** 
1128:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetOffset(chan, offset);
1129:Generated_Source\PSoC6/ADC.h **** }
1130:Generated_Source\PSoC6/ADC.h **** 
1131:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1132:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetGain
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 62


1133:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1134:Generated_Source\PSoC6/ADC.h **** *
1135:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC gain in counts per 10 volt for the voltage
1136:Generated_Source\PSoC6/ADC.h **** * conversion functions. This value is set by default by the reference and
1137:Generated_Source\PSoC6/ADC.h **** * input range settings. Gain is applied after offset and unit scaling.  All
1138:Generated_Source\PSoC6/ADC.h **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1139:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1140:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1141:Generated_Source\PSoC6/ADC.h **** *
1142:Generated_Source\PSoC6/ADC.h **** * To set channel 0's gain based on known V_ref_mV, use:
1143:Generated_Source\PSoC6/ADC.h **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1144:Generated_Source\PSoC6/ADC.h **** *
1145:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1146:Generated_Source\PSoC6/ADC.h **** *
1147:Generated_Source\PSoC6/ADC.h **** * \param adcGain ADC gain in counts per 10 volt.
1148:Generated_Source\PSoC6/ADC.h **** *
1149:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1150:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1151:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: gain was set successfully
1152:Generated_Source\PSoC6/ADC.h **** *
1153:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1154:Generated_Source\PSoC6/ADC.h **** *
1155:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1156:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain)
1157:Generated_Source\PSoC6/ADC.h **** {
1158:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1159:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1160:Generated_Source\PSoC6/ADC.h **** 
1161:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetGain(chan, adcGain);
1162:Generated_Source\PSoC6/ADC.h **** }
1163:Generated_Source\PSoC6/ADC.h **** 
1164:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1165:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_Volts
1166:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1167:Generated_Source\PSoC6/ADC.h **** *
1168:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1169:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 0.534.
1170:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1171:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1172:Generated_Source\PSoC6/ADC.h **** *
1173:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1174:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1175:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1176:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1177:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1178:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1179:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1180:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1181:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1182:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1183:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1184:Generated_Source\PSoC6/ADC.h **** *
1185:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1186:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1187:Generated_Source\PSoC6/ADC.h **** *
1188:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1189:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 63


1190:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1191:Generated_Source\PSoC6/ADC.h **** *
1192:Generated_Source\PSoC6/ADC.h **** * \return Result in Volts.
1193:Generated_Source\PSoC6/ADC.h **** *
1194:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1195:Generated_Source\PSoC6/ADC.h **** *
1196:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1197:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts)
1198:Generated_Source\PSoC6/ADC.h **** {
1199:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1200:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1201:Generated_Source\PSoC6/ADC.h **** 
1202:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_Volts(ADC_SAR__HW, chan, adcCounts);
1203:Generated_Source\PSoC6/ADC.h **** }
1204:Generated_Source\PSoC6/ADC.h **** 
1205:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1206:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_mVolts
1207:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1208:Generated_Source\PSoC6/ADC.h **** *
1209:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1210:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534.
1211:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1212:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1213:Generated_Source\PSoC6/ADC.h **** *
1214:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1215:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1216:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1217:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1218:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1219:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1220:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1221:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1222:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1223:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1224:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1225:Generated_Source\PSoC6/ADC.h **** *
1226:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1227:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1228:Generated_Source\PSoC6/ADC.h **** *
1229:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1230:Generated_Source\PSoC6/ADC.h **** *
1231:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1232:Generated_Source\PSoC6/ADC.h **** *
1233:Generated_Source\PSoC6/ADC.h **** * \return Result in mV.
1234:Generated_Source\PSoC6/ADC.h **** *
1235:Generated_Source\PSoC6/ADC.h **** * \sideeffect None.
1236:Generated_Source\PSoC6/ADC.h **** *
1237:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1238:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts)
1239:Generated_Source\PSoC6/ADC.h **** {
1240:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1241:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1242:Generated_Source\PSoC6/ADC.h **** 
1243:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_mVolts(ADC_SAR__HW, chan, adcCounts);
1244:Generated_Source\PSoC6/ADC.h **** }
1245:Generated_Source\PSoC6/ADC.h **** 
1246:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 64


1247:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_uVolts
1248:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1249:Generated_Source\PSoC6/ADC.h **** *
1250:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1251:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534000.
1252:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1253:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1254:Generated_Source\PSoC6/ADC.h **** *
1255:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1256:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1257:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1258:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1259:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1260:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1261:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1262:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1263:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1264:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1265:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1266:Generated_Source\PSoC6/ADC.h **** *
1267:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1268:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1269:Generated_Source\PSoC6/ADC.h **** *
1270:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1271:Generated_Source\PSoC6/ADC.h **** *
1272:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1273:Generated_Source\PSoC6/ADC.h **** *
1274:Generated_Source\PSoC6/ADC.h **** * \return Result in microvolts.
1275:Generated_Source\PSoC6/ADC.h **** *
1276:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1277:Generated_Source\PSoC6/ADC.h **** *
1278:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1279:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts)
1280:Generated_Source\PSoC6/ADC.h **** {
1281:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1282:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1283:Generated_Source\PSoC6/ADC.h **** 
1284:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_uVolts(ADC_SAR__HW, chan, adcCounts);
1285:Generated_Source\PSoC6/ADC.h **** }
1286:Generated_Source\PSoC6/ADC.h **** 
1287:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1288:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Sleep
1289:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1290:Generated_Source\PSoC6/ADC.h **** *
1291:Generated_Source\PSoC6/ADC.h **** * \brief This is the preferred routine to prepare the component for sleep. The
1292:Generated_Source\PSoC6/ADC.h **** * ADC_Sleep() routine saves the current component state. Then it
1293:Generated_Source\PSoC6/ADC.h **** * calls the ADC_Stop() function.
1294:Generated_Source\PSoC6/ADC.h **** *
1295:Generated_Source\PSoC6/ADC.h **** * Calling this routine directly is not needed.
1296:Generated_Source\PSoC6/ADC.h **** * The ADC_DeepSleepCallbackStruct will ensure this routine
1297:Generated_Source\PSoC6/ADC.h **** * is called before the device enters Deep Sleep mode.
1298:Generated_Source\PSoC6/ADC.h **** *
1299:Generated_Source\PSoC6/ADC.h **** * \param None
1300:Generated_Source\PSoC6/ADC.h **** *
1301:Generated_Source\PSoC6/ADC.h **** * \return None
1302:Generated_Source\PSoC6/ADC.h **** *
1303:Generated_Source\PSoC6/ADC.h **** * \sideeffect If this function is called twice in the enable state of the
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 65


1304:Generated_Source\PSoC6/ADC.h **** * component, the disabled state of the component will be stored. So
1305:Generated_Source\PSoC6/ADC.h **** * ADC_Enable() and ADC_StartConvert() must be called
1306:Generated_Source\PSoC6/ADC.h **** * after ADC_Wakeup() in this case.
1307:Generated_Source\PSoC6/ADC.h **** *
1308:Generated_Source\PSoC6/ADC.h **** * \globalvars
1309:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup (W)
1310:Generated_Source\PSoC6/ADC.h **** *
1311:Generated_Source\PSoC6/ADC.h **** * \globalvars
1312:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup
1313:Generated_Source\PSoC6/ADC.h **** *
1314:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1315:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void)
1316:Generated_Source\PSoC6/ADC.h **** {
1317:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Sleep(ADC_SAR__HW);
 382              		.loc 3 1317 0
 383 00ac 2846     		mov	r0, r5
 384 00ae FFF7FEFF 		bl	Cy_SAR_Sleep
 385              	.LVL38:
 386              	.LBE39:
 387              	.LBE38:
 388              	.LBB40:
 389              	.LBB41:
 390              		.file 4 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \file cy_gpio.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \version 1.10.1
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Provides an API declaration of the GPIO driver
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ********************************************************************************
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \copyright
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio General Purpose Input Output (GPIO)
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The GPIO driver provides an API to configure and access device Input/Output pins.
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * IO pins include all general purpose types such as GPIO, SIO, HSIO, AUXIO, and
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * their variants.
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Initialization can be performed either at the port level or by configuring the
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * individual pins. For efficient use of code space, port
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuration should be used in the field. Refer to the product device header files 
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * for the list of supported ports and pins.
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Single pin configuration is performed by using \ref Cy_GPIO_Pin_FastInit 
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   (provide specific values) or \ref Cy_GPIO_Pin_Init (provide a filled
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_pin_config_t structure).
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - An entire port can be configured using \ref Cy_GPIO_Port_Init. Provide a filled 
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_prt_config_t structure. The values in the structure are 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   bitfields representing the desired value for each pin in the port.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Pin configuration and management is based on the port address and pin number.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 66


  35:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \ref Cy_GPIO_PortToAddr function can optionally be used to calculate the port
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   address from the port number at run-time.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Once the pin/port initialization is complete, each pin can be accessed by 
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * specifying the port (GPIO_PRT_Type) and the pin (0-7) in the provided API 
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * functions.
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_configuration Configuration Considerations
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 1. Pin multiplexing is controlled through the High-Speed IO Matrix (HSIOM) selection.
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    This allows the pin to connect to signal sources/sinks throughout the device,
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    as defined by the pin HSIOM selection options (en_hsiom_sel_t).
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 2. All pins are initialized to High-Z drive mode with HSIOM connected to CPU (SW
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    control digital pin only) at Power-On-Reset(POR).
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 3. Some API functions perform read-modify-write operations on shared port
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    registers. These functions are not thread safe and care must be taken when
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    called by the application.
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Multiple pins on a port can be updated using direct port register writes with an
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * appropriate port mask. An example is shown below, highlighting the different ways of 
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuring Port 1 pins using,
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data register
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data set register
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data clear register
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c Cy_GPIO_Snippet
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_more_information More Information
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_MISRA MISRA-C Compliance]
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>MISRA Rule</th>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Class (Required/Advisory)</th>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Description</th>
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Description of Deviation(s)</th>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>16.7</td>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A</td>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A pointer parameter in a function prototype should be declared as pointer 
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         to const if the pointer is not used to modify the addressed object.</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>The objects pointed to by the base addresses of the GPIO port are not always modified.
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         While a const qualifier can be used in select scenarios, it brings little benefit
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         in adding this to the affected functions. </td>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_changelog Changelog
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10.1</td>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Updated description for the functions: \ref Cy_GPIO_GetInterruptStatus, 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 67


  92:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         \ref Cy_GPIO_GetInterruptMask, \ref Cy_GPIO_GetInterruptStatusMasked.
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         Minor documentation edits.
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     </td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Documentation update and clarification</td>
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10</td>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added input parameter validation to the API functions</td>
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.0</td>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Initial version</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_macros Macros
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_functions Functions
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_init       Initialization Functions
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_gpio       GPIO Functions
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_sio        SIO Functions
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_interrupt  Port Interrupt Functions
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \}
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_data_structures Data Structures
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_enums Enumerated Types
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if !defined(CY_GPIO_H)
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_H
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include <stddef.h>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "syslib/cy_syslib.h"
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_device_headers.h"
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if defined(__cplusplus)
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** extern "C" {
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \addtogroup group_gpio_macros
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver major version */
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MAJOR       1
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver minor version */
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MINOR       10
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** GPIO driver ID */
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_ID CY_PDL_DRV_ID(0x16u)
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 68


 149:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Enumerations
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_enums
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * GPIO Driver error codes
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum 
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_SUCCESS   = 0x00u,                                    /**< Returned successful */
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_BAD_PARAM = CY_GPIO_ID | CY_PDL_STATUS_ERROR | 0x01u, /**< Bad parameter was passed */
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_en_gpio_status_t;
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_enums */
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Configuration Structures
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_data_structures
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a port of GPIO pins */
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct {
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t out;           /**< Initial output data for the IO pins in the port */
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrMask;      /**< Interrupt enable mask for the port interrupt */
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrCfg;       /**< Port pin interrupt edge detection configuration */
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfg;           /**< Port pin drive modes and input buffer enable configuration */
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgIn;         /**< Port pin input buffer configuration */
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgOut;        /**< Port pin output buffer configuration */
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgSIO;        /**< Port SIO pins configuration */
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel0Active;    /**< HSIOM selection for port pins 0,1,2,3 */
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel1Active;    /**< HSIOM selection for port pins 4,5,6,7 */
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_prt_config_t;
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a single GPIO pin */
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct {
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t outVal;         /**< Pin output state */
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveMode;      /**< Drive mode */
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     en_hsiom_sel_t hsiom;   /**< HSIOM selection */
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intEdge;        /**< Interrupt Edge type */
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intMask;        /**< Interrupt enable mask */
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtrip;          /**< Input buffer voltage trip type */
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t slewRate;       /**< Output buffer slew rate */
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveSel;       /**< Drive strength */
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vregEn;         /**< SIO pair output buffer mode */
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t ibufMode;       /**< SIO pair input buffer mode */
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtripSel;       /**< SIO pair input buffer trip point */
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vrefSel;        /**< SIO pair reference voltage for input buffer trip point */
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vohSel;         /**< SIO pair regulated voltage output level */
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_pin_config_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 69


 206:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_data_structures */
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Constants
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \cond INTERNAL */
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* General Constants */
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_HALF                       (4UL)      /**< Half-way point of a GPIO port */
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_DEINIT                     (0UL)      /**< De-init value for port registers */
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* GPIO Masks */
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_MASK                     (0x1FUL)   /**< HSIOM selection mask */
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_OUT_MASK                       (0x01UL)   /**< Single pin mask for OUT register */
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IN_MASK                        (0x01UL)   /**< Single pin mask for IN register */
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_DM_MASK                    (0x0FUL)   /**< Single pin mask for drive mode in CF
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_IN_VTRIP_SEL_MASK          (0x01UL)   /**< Single pin mask for VTRIP selection 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_SLOW_MASK              (0x01UL)   /**< Single pin mask for slew rate in CFG
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_SEL_MASK         (0x03UL)   /**< Single pin mask for drive strength i
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_STATUS_MASK               (0x01UL)   /**< Single pin mask for interrupt status
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EN_MASK                   (0x01UL)   /**< Single pin mask for interrupt status
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_MASKED_MASK               (0x01UL)   /**< Single pin mask for masked interrupt
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_SET_MASK                  (0x01UL)   /**< Single pin mask for setting the inte
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EDGE_MASK                 (0x03UL)   /**< Single pin mask for interrupt edge t
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FLT_EDGE_MASK             (0x07UL)   /**< Single pin mask for setting filtered
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* SIO Masks */
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREG_EN_MASK                   (0x01UL)   /**< Single SIO pin mask for voltage regu
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_MASK                      (0x01UL)   /**< Single SIO pin mask for input buffer
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_SHIFT                     (0x01UL)   /**< Single SIO pin shift for input buffe
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_MASK                 (0x01UL)   /**< Single SIO pin mask for the input bu
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_SHIFT                (0x02UL)   /**< Single SIO pin shift for the input b
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_MASK                  (0x03UL)   /**< Single SIO pin mask for voltage refe
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_SHIFT                 (0x03UL)   /**< Single SIO pin shift for voltage ref
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_MASK                   (0x07UL)   /**< Single SIO pin mask for VOH */
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_SHIFT                  (0x05UL)   /**< Single SIO pin shift for VOH */
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Special mask for SIO pin pair setting */
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_ODD_PIN_MASK               (0x00FEUL) /**< SIO pin pair selection mask */
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_PIN_MASK                   (0x00FFUL) /**< SIO pin pair mask */
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Offsets */
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_OFFSET                   (3UL)      /**< Offset for HSIOM */
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_MODE_OFFSET              (2UL)      /**< Offset for Drive mode */
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INBUF_OFFSET                   (3UL)      /**< Offset for input buffer */
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_OFFSET           (16UL)     /**< Offset for drive strength */
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_CFG_OFFSET                (1UL)      /**< Offset for interrupt config */
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FILT_OFFSET               (18UL)     /**< Offset for filtered interrupt config
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_SIO_OFFSET                 (2UL)      /**< Offset for SIO config */
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation constants */
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PINS_MAX                       (8UL)      /**< Number of pins in the port */
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_PINS_MASK                  (0x0000000FFUL)
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK     (GPIO_PRT_INTR_CFG_EDGE0_SEL_Msk | \
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE1_SEL_Msk | \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 70


 263:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE2_SEL_Msk | \
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE3_SEL_Msk | \
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE4_SEL_Msk | \
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE5_SEL_Msk | \
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE6_SEL_Msk | \
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE7_SEL_Msk)            
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_RANGE_MASK        (CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK | \
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_EDGE_SEL_Msk | \
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_SEL_Msk)
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INT_MASK_MASK              (0x0000001FFUL)
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_SEL_ACTIVE_MASK            (0x1FFFFFFFUL)
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation macros */
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_VALID(pinNum)           (CY_GPIO_PINS_MAX > (pinNum))
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_FILTER_PIN_VALID(pinNum)    (CY_GPIO_PINS_MAX >= (pinNum))
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VALUE_VALID(outVal)         (1UL >= (outVal))
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DM_VALID(driveMode)         (0U == ((driveMode) & (uint32_t)~CY_GPIO_CFG_DM_MASK
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_HSIOM_VALID(hsiom)          (0U == ((hsiom) & (uint32_t)~CY_GPIO_HSIOM_MASK))
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INT_EDGE_VALID(intEdge)     ((CY_GPIO_INTR_DISABLE  == (intEdge)) || \
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_RISING   == (intEdge)) || \
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_FALLING  == (intEdge)) || \
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_BOTH     == (intEdge)))
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DRIVE_SEL_VALID(driveSel)   ((CY_GPIO_DRIVE_FULL    == (driveSel)) || \
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_2     == (driveSel)) || \
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_4     == (driveSel)) || \
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_8     == (driveSel)))
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VREF_SEL_VALID(vrefSel)     ((CY_SIO_VREF_PINREF    == (vrefSel)) || \
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_1_2V      == (vrefSel)) || \
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_A    == (vrefSel)) || \
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_B    == (vrefSel)))
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VOH_SEL_VALID(vrefSel)      ((CY_SIO_VOH_1_00       == (vrefSel)) || \
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_25       == (vrefSel)) || \
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_49       == (vrefSel)) || \
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_67       == (vrefSel)) || \
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_08       == (vrefSel)) || \
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_50       == (vrefSel)) || \
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_78       == (vrefSel)) || \
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_4_16       == (vrefSel)))
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                    
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_BIT_VALID(pinBit)       (0U == ((pinBit) & (uint32_t)~CY_GPIO_PRT_PINS_MASK)
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_CFG_VALID(intrCfg)     (0U == ((intrCfg) & (uint32_t)~CY_GPIO_PRT_INTR_CFG_
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_MASK_VALID(intrMask)   (0U == ((intrMask) & (uint32_t)~CY_GPIO_PRT_INT_MASK
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_SEL_ACT_VALID(selActive)    (0U == ((selActive) & (uint32_t)~CY_GPIO_PRT_SEL_ACT
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \endcond */
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Constants
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 71


 320:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_macros
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveModes Pin drive mode
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive mode of the pin.
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_ANALOG                      (0x00UL) /**< \brief Analog High-Z. Input buffer off
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_IN_OFF               (0x02UL) /**< \brief Resistive Pull-Up. Input buffer
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN_IN_OFF             (0x03UL) /**< \brief Resistive Pull-Down. Input buff
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW_IN_OFF         (0x04UL) /**< \brief Open Drain, Drives Low. Input b
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF        (0x05UL) /**< \brief Open Drain, Drives High. Input 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG_IN_OFF               (0x06UL) /**< \brief Strong Drive. Input buffer off 
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN_IN_OFF          (0x07UL) /**< \brief Resistive Pull-Up/Down. Input b
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_HIGHZ                       (0x08UL) /**< \brief Digital High-Z. Input buffer on
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP                      (0x0AUL) /**< \brief Resistive Pull-Up. Input buffer
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN                    (0x0BUL) /**< \brief Resistive Pull-Down. Input buff
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW                (0x0CUL) /**< \brief Open Drain, Drives Low. Input b
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH               (0x0DUL) /**< \brief Open Drain, Drives High. Input 
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG                      (0x0EUL) /**< \brief Strong Drive. Input buffer on *
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN                 (0x0FUL) /**< \brief Resistive Pull-Up/Down. Input b
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_vtrip Voltage trip mode
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the voltage trip type on the pin.
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_CMOS                     (0x00UL) /**< \brief Input buffer compatible with CM
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_TTL                      (0x01UL) /**< \brief Input buffer compatible with TT
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_slewRate Slew Rate Mode
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the slew rate of the pin.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_FAST                      (0x00UL) /**< \brief Fast slew rate */
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_SLOW                      (0x01UL) /**< \brief Slow slew rate */
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveStrength Pin drive strength
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive strength of the pin.
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_FULL                     (0x00UL) /**< \brief Full drive strength: Max drive 
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_2                      (0x01UL) /**< \brief 1/2 drive strength: 1/2 drive c
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_4                      (0x02UL) /**< \brief 1/4 drive strength: 1/4 drive c
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_8                      (0x03UL) /**< \brief 1/8 drive strength: 1/8 drive c
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_interruptTrigger Interrupt trigger type
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 72


 377:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the interrupt trigger type on the pin.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_DISABLE                   (0x00UL) /**< \brief Disable the pin interrupt gener
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_RISING                    (0x01UL) /**< \brief Rising-Edge interrupt */
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FALLING                   (0x02UL) /**< \brief Falling-Edge interrupt */
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_BOTH                      (0x03UL) /**< \brief Both-Edge interrupt */
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVreg SIO output buffer mode
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO output buffer mode on the pin.
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_UNREGULATED                (0x00UL) /**< \brief Unregulated output buffer */
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_REGULATED                  (0x01UL) /**< \brief Regulated output buffer */
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioIbuf SIO input buffer mode
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer mode on the pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_SINGLEENDED                (0x00UL) /**< \brief Single ended input buffer */
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_DIFFERENTIAL               (0x01UL) /**< \brief Differential input buffer */
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVtrip SIO input buffer trip-point
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer trip-point of the pin.
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_CMOS                      (0x00UL) /**< \brief CMOS input buffer (single-ended
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_TTL                       (0x01UL) /**< \brief TTL input buffer (single-ended)
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_5VDDIO_0_5VOH           (0x00UL) /**< \brief 0.5xVddio or 0.5xVoh (different
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_4VDDIO_1_0VREF          (0x01UL) /**< \brief 0.4xVddio or 0.4xVoh (different
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVref SIO reference voltage for input buffer trip-point
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the reference voltage of SIO input buffer trip-point.
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_PINREF                     (0x00UL) /**< \brief Vref from analog pin */
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_1_2V                       (0x01UL) /**< \brief Vref from internal 1.2V referen
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_A                     (0x02UL) /**< \brief Vref from AMUXBUS_A */
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_B                     (0x03UL) /**< \brief Vref from AMUXBUS_B */
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVoh Regulated output voltage level (Voh) and input buffer trip-point of a
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the Voh and input buffer trip-point of an SIO pair
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_00                        (0x00UL) /**< \brief Voh = 1 x Reference */
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_25                        (0x01UL) /**< \brief Voh = 1.25 x Reference */
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_49                        (0x02UL) /**< \brief Voh = 1.49 x Reference */
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_67                        (0x03UL) /**< \brief Voh = 1.67 x Reference */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 73


 434:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_08                        (0x04UL) /**< \brief Voh = 2.08 x Reference */
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_50                        (0x05UL) /**< \brief Voh = 2.50 x Reference */
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_78                        (0x06UL) /**< \brief Voh = 2.78 x Reference */
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_4_16                        (0x07UL) /**< \brief Voh = 4.16 x Reference */
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Prototypes
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Pin_Init(GPIO_PRT_Type* base, uint32_t pinNum, const cy_stc_gpio_pin_co
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Port_Init(GPIO_PRT_Type* base, const cy_stc_gpio_prt_config_t *config);
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Pin_FastInit(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t driveMode, uint32_t outVal
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Port_Deinit(GPIO_PRT_Type* base);
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value);
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum);
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum);
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum);
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum);
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum);
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum);
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Inv(GPIO_PRT_Type* base, uint32_t pinNum);
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum);
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtrip(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtrip(GPIO_PRT_Type* base, uint32_t pinNum);
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum);
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum);
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_gpio */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_sio
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 74


 491:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVregEn(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVregEn(GPIO_PRT_Type* base, uint32_t pinNum);
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum);
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum);
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum);
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVohSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVohSel(GPIO_PRT_Type* base, uint32_t pinNum);
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_sio */
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_interrupt
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatus(GPIO_PRT_Type* base, uint32_t pinNum);
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_ClearInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum);
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT_Type* base, uint32_t pinNum);
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSwInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum);
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetFilter(GPIO_PRT_Type* base, uint32_t value);
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetFilter(GPIO_PRT_Type* base);
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_0_31 != 0) || defined (CY_DOXYGEN)
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause0(void);
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_0_31 != 0) */
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_32_63 != 0) || defined (CY_DOXYGEN)
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause1(void);
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_32_63 != 0) */
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_64_95 != 0) || defined (CY_DOXYGEN)
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause2(void);
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_64_95 != 0) */
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_96_127 != 0) || defined (CY_DOXYGEN)
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause3(void);
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_96_127 != 0) */
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_interrupt */
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_SetHSIOM
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 75


 548:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Configures the HSIOM connection to the pin.
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Connects the specified High-Speed Input Output Multiplexer (HSIOM) selection
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * to the pin.
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \note 
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function modifies a port register in a read-modify-write operation. It is
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * not thread safe as the resource is shared among multiple pins on a port.
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value)
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t tempReg;
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_Type* portAddrHSIOM;
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_HSIOM_VALID(value));
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_Type*)(HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = portAddrHSIOM->PORT_SEL0 & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_HSIOM_OFFSE
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portAddrHSIOM->PORT_SEL0 = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << CY_GPIO_HS
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = portAddrHSIOM->PORT_SEL1 & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_HSIOM_OFFSE
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portAddrHSIOM->PORT_SEL1 = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << CY_GPIO_HS
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_GetHSIOM
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 76


 605:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Returns the current HSIOM multiplexer connection to the pin.
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum)
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t returnValue;
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_Type* portAddrHSIOM;
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_Type*)(HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (portAddrHSIOM->PORT_SEL0 >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY_GPIO_HSIO
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (portAddrHSIOM->PORT_SEL1 >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY_GPIO_HSIO
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (en_hsiom_sel_t)returnValue;
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_PortToAddr
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Retrieves the port address based on the given port number.
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This is a helper function to calculate the port base address when given a port
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * number. It is to be used when pin access needs to be calculated at runtime.
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param portNum
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Port number
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Base address of the port register structure
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_PortToAddr
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 77


 662:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum)
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     GPIO_PRT_Type* base;
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(portNum < (uint32_t)IOSS_GPIO_GPIO_PORT_NR)
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****          base = (GPIO_PRT_Type *)(GPIO_BASE + (GPIO_PRT_SECTION_SIZE * portNum));
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         /* Error: Return default base address */
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base = (GPIO_PRT_Type *)(GPIO_BASE);
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base);
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Read
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Reads the current logic level on the input buffer of the pin.
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register.
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Bit position 8 is the routed pin through the port glitch filter.
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level present on the pin
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Read
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum)
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_FILTER_PIN_VALID(pinNum));
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base->IN >> (pinNum)) & CY_GPIO_IN_MASK;
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Write
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 78


 719:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Write a logic 0 or logic 1 state to the output driver.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level to drive out on the pin
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Write
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_VALUE_VALID(value));
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     /* Thread-safe: Directly access the pin registers instead of base->OUT */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(0UL == value)
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base->OUT_CLR = CY_GPIO_OUT_MASK << pinNum;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base->OUT_SET = CY_GPIO_OUT_MASK << pinNum;
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_ReadOut
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Reads the current logic level on the pin output driver.
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level on the pin output driver
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_ReadOut
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 79


 776:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum)
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base->OUT >> pinNum) & CY_GPIO_OUT_MASK;
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Set
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Set a pin output to logic state high.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Set
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum)
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     base->OUT_SET = CY_GPIO_OUT_MASK << pinNum;
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Clr
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Set a pin output to logic state Low.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 80


 833:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Clr
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum)
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     base->OUT_CLR = CY_GPIO_OUT_MASK << pinNum;
 391              		.loc 4 841 0
 392 00b2 0125     		movs	r5, #1
 393 00b4 2A4B     		ldr	r3, .L31+24
 394 00b6 5D60     		str	r5, [r3, #4]
 395              	.LVL39:
 396              	.LBE41:
 397              	.LBE40:
 180:temperature_task.c ****                     temperature = (B_CONSTANT/(logf(rThermistor/R_INFINITY)))+
 398              		.loc 1 180 0
 399 00b8 B8EEC88A 		vcvt.f32.s32	s16, s16
 400 00bc DFED297A 		vldr.32	s15, .L31+28
 401 00c0 28EE278A 		vmul.f32	s16, s16, s15
 402 00c4 F8EEE88A 		vcvt.f32.s32	s17, s17
 403 00c8 88EE287A 		vdiv.f32	s14, s16, s17
 404              	.LVL40:
 181:temperature_task.c ****                                                                 ABSOLUTE_ZERO;
 405              		.loc 1 181 0
 406 00cc DFED267A 		vldr.32	s15, .L31+32
 407 00d0 C7EE276A 		vdiv.f32	s13, s14, s15
 408 00d4 16EE900A 		vmov	r0, s13
 409 00d8 FFF7FEFF 		bl	logf
 410              	.LVL41:
 411 00dc 9FED237A 		vldr.32	s14, .L31+36
 412 00e0 06EE900A 		vmov	s13, r0
 413 00e4 C7EE267A 		vdiv.f32	s15, s14, s13
 414 00e8 9FED217A 		vldr.32	s14, .L31+40
 415 00ec 77EEC77A 		vsub.f32	s15, s15, s14
 416 00f0 CDED027A 		vstr.32	s15, [sp, #8]
 184:temperature_task.c **** 
 417              		.loc 1 184 0
 418 00f4 1F4B     		ldr	r3, .L31+44
 419 00f6 1D70     		strb	r5, [r3]
 187:temperature_task.c ****                     {
 420              		.loc 1 187 0
 421 00f8 64B1     		cbz	r4, .L29
 191:temperature_task.c ****                         bleCommandAndData.temperatureData = temperature;
 422              		.loc 1 191 0
 423 00fa 0223     		movs	r3, #2
 424 00fc 8DF80030 		strb	r3, [sp]
 192:temperature_task.c ****                         xQueueSend(bleCommandQ, &bleCommandAndData,0u);
 425              		.loc 1 192 0
 426 0100 CDED017A 		vstr.32	s15, [sp, #4]
 193:temperature_task.c ****                     }
 427              		.loc 1 193 0
 428 0104 0023     		movs	r3, #0
 429 0106 1A46     		mov	r2, r3
 430 0108 6946     		mov	r1, sp
 431 010a 1B48     		ldr	r0, .L31+48
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 81


 432 010c 0068     		ldr	r0, [r0]
 433 010e FFF7FEFF 		bl	xQueueGenericSend
 434              	.LVL42:
 435 0112 83E7     		b	.L20
 436              	.L29:
 197:temperature_task.c ****                     }
 437              		.loc 1 197 0
 438 0114 0223     		movs	r3, #2
 439 0116 0022     		movs	r2, #0
 440 0118 02A9     		add	r1, sp, #8
 441 011a 1848     		ldr	r0, .L31+52
 442 011c 0068     		ldr	r0, [r0]
 443 011e FFF7FEFF 		bl	xQueueGenericSend
 444              	.LVL43:
 445 0122 7BE7     		b	.L20
 446              	.LVL44:
 447              	.L26:
 203:temperature_task.c ****                         {
 448              		.loc 1 203 0
 449 0124 134B     		ldr	r3, .L31+44
 450 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 451 0128 002B     		cmp	r3, #0
 452 012a 3FF477AF 		beq	.L20
 453              	.LVL45:
 454              	.LBB42:
 455              	.LBB43:
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 456              		.loc 4 811 0
 457 012e 0122     		movs	r2, #1
 458 0130 0B4B     		ldr	r3, .L31+24
 459 0132 9A60     		str	r2, [r3, #8]
 460              	.LVL46:
 461              	.LBE43:
 462              	.LBE42:
 463              	.LBB44:
 464              	.LBB45:
1318:Generated_Source\PSoC6/ADC.h **** }
1319:Generated_Source\PSoC6/ADC.h **** 
1320:Generated_Source\PSoC6/ADC.h **** 
1321:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1322:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Wakeup
1323:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1324:Generated_Source\PSoC6/ADC.h **** *
1325:Generated_Source\PSoC6/ADC.h **** * \brief This is the preferred routine to restore the component to the state when
1326:Generated_Source\PSoC6/ADC.h **** * ADC_Sleep() was called.
1327:Generated_Source\PSoC6/ADC.h **** * If the component was enabled before the ADC_Sleep()
1328:Generated_Source\PSoC6/ADC.h **** * function was called, the ADC_Wakeup() function also re-enables the
1329:Generated_Source\PSoC6/ADC.h **** * component.
1330:Generated_Source\PSoC6/ADC.h **** *
1331:Generated_Source\PSoC6/ADC.h **** * Calling this routine directly is not needed.
1332:Generated_Source\PSoC6/ADC.h **** * The ADC_DeepSleepCallbackStruct will ensure this routine
1333:Generated_Source\PSoC6/ADC.h **** * is called after the device wakes up from Deep Sleep mode.
1334:Generated_Source\PSoC6/ADC.h **** *
1335:Generated_Source\PSoC6/ADC.h **** * \param None
1336:Generated_Source\PSoC6/ADC.h **** *
1337:Generated_Source\PSoC6/ADC.h **** * \return None
1338:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 82


1339:Generated_Source\PSoC6/ADC.h **** * \sideeffect
1340:Generated_Source\PSoC6/ADC.h **** * Calling this function without previously calling ADC_Sleep() may lead to
1341:Generated_Source\PSoC6/ADC.h **** * unpredictable results.
1342:Generated_Source\PSoC6/ADC.h **** *
1343:Generated_Source\PSoC6/ADC.h **** * \globalvars
1344:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup (R)
1345:Generated_Source\PSoC6/ADC.h **** *
1346:Generated_Source\PSoC6/ADC.h **** * \globalvars
1347:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup
1348:Generated_Source\PSoC6/ADC.h **** *
1349:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1350:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void)
1351:Generated_Source\PSoC6/ADC.h **** {
1352:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Wakeup(ADC_SAR__HW);
 465              		.loc 3 1352 0
 466 0134 0948     		ldr	r0, .L31+20
 467              	.LVL47:
 468 0136 FFF7FEFF 		bl	Cy_SAR_Wakeup
 469              	.LVL48:
 470              	.LBE45:
 471              	.LBE44:
 209:temperature_task.c ****                             processingComplete = false;
 472              		.loc 1 209 0
 473 013a FFF7FEFF 		bl	ADC_StartConvert
 474              	.LVL49:
 210:temperature_task.c ****                         }    
 475              		.loc 1 210 0
 476 013e 0022     		movs	r2, #0
 477 0140 0C4B     		ldr	r3, .L31+44
 478 0142 1A70     		strb	r2, [r3]
 479 0144 6AE7     		b	.L20
 480              	.L32:
 481 0146 00BF     		.align	2
 482              	.L31:
 483 0148 00000000 		.word	isrADC
 484 014c 00000000 		.word	temperatureCommandQ
 485 0150 00000000 		.word	ADC_currentConfig
 486 0154 00000000 		.word	ADC_allConfigs
 487 0158 50000000 		.word	.LC2
 488 015c 00001D41 		.word	1092419584
 489 0160 00053240 		.word	1077019904
 490 0164 00401C46 		.word	1176256512
 491 0168 F54BF43D 		.word	1039420405
 492 016c 00405345 		.word	1163083776
 493 0170 33938843 		.word	1133024051
 494 0174 00000000 		.word	.LANCHOR0
 495 0178 00000000 		.word	bleCommandQ
 496 017c 00000000 		.word	temperatureDataQ
 497              		.cfi_endproc
 498              	.LFE522:
 499              		.size	Task_Temperature, .-Task_Temperature
 500              		.comm	xTimer_Temperature,4,4
 501              		.comm	temperatureDataQ,4,4
 502              		.comm	temperatureCommandQ,4,4
 503              		.section	.rodata.str1.4,"aMS",%progbits,1
 504              		.align	2
 505              	.LC0:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 83


 506 0000 54656D70 		.ascii	"Temperature Timer\000"
 506      65726174 
 506      75726520 
 506      54696D65 
 506      7200
 507 0012 0000     		.space	2
 508              	.LC1:
 509 0014 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 509      72617465 
 509      645F536F 
 509      75726365 
 509      5C50536F 
 510 0044 722F6379 		.ascii	"r/cy_sar.h\000"
 510      5F736172 
 510      2E6800
 511 004f 00       		.space	1
 512              	.LC2:
 513 0050 47656E65 		.ascii	"Generated_Source\\PSoC6/ADC.h\000"
 513      72617465 
 513      645F536F 
 513      75726365 
 513      5C50536F 
 514              		.bss
 515              		.set	.LANCHOR0,. + 0
 516              		.type	processingComplete, %object
 517              		.size	processingComplete, 1
 518              	processingComplete:
 519 0000 00       		.space	1
 520              		.text
 521              	.Letext0:
 522              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 523              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 524              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_gpio.h"
 525              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_sar.h"
 526              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 527              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 528              		.file 11 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 529              		.file 12 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 530              		.file 13 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 531              		.file 14 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_dis.h"
 532              		.file 15 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_hts.h"
 533              		.file 16 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_event_handler.h"
 534              		.file 17 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
 535              		.file 18 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/queue.h"
 536              		.file 19 "temperature_task.h"
 537              		.file 20 "ble_task.h"
 538              		.file 21 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 539              		.file 22 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 540              		.file 23 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 541              		.file 24 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 542              		.file 25 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 543              		.section	.debug_info,"",%progbits
 544              	.Ldebug_info0:
 545 0000 BD140000 		.4byte	0x14bd
 546 0004 0400     		.2byte	0x4
 547 0006 00000000 		.4byte	.Ldebug_abbrev0
 548 000a 04       		.byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 84


 549 000b 01       		.uleb128 0x1
 550 000c 37050000 		.4byte	.LASF356
 551 0010 0C       		.byte	0xc
 552 0011 DC1A0000 		.4byte	.LASF357
 553 0015 4C110000 		.4byte	.LASF358
 554 0019 00000000 		.4byte	.Ldebug_ranges0+0
 555 001d 00000000 		.4byte	0
 556 0021 00000000 		.4byte	.Ldebug_line0
 557 0025 02       		.uleb128 0x2
 558 0026 04       		.byte	0x4
 559 0027 04       		.byte	0x4
 560 0028 F30B0000 		.4byte	.LASF0
 561 002c 03       		.uleb128 0x3
 562 002d 04       		.byte	0x4
 563 002e 05       		.byte	0x5
 564 002f 696E7400 		.ascii	"int\000"
 565 0033 02       		.uleb128 0x2
 566 0034 04       		.byte	0x4
 567 0035 07       		.byte	0x7
 568 0036 96020000 		.4byte	.LASF1
 569 003a 02       		.uleb128 0x2
 570 003b 08       		.byte	0x8
 571 003c 05       		.byte	0x5
 572 003d 19100000 		.4byte	.LASF2
 573 0041 02       		.uleb128 0x2
 574 0042 08       		.byte	0x8
 575 0043 04       		.byte	0x4
 576 0044 BC140000 		.4byte	.LASF3
 577 0048 02       		.uleb128 0x2
 578 0049 01       		.byte	0x1
 579 004a 06       		.byte	0x6
 580 004b 571D0000 		.4byte	.LASF4
 581 004f 04       		.uleb128 0x4
 582 0050 C7180000 		.4byte	.LASF6
 583 0054 05       		.byte	0x5
 584 0055 1D       		.byte	0x1d
 585 0056 5A000000 		.4byte	0x5a
 586 005a 02       		.uleb128 0x2
 587 005b 01       		.byte	0x1
 588 005c 08       		.byte	0x8
 589 005d 64150000 		.4byte	.LASF5
 590 0061 04       		.uleb128 0x4
 591 0062 42110000 		.4byte	.LASF7
 592 0066 05       		.byte	0x5
 593 0067 29       		.byte	0x29
 594 0068 6C000000 		.4byte	0x6c
 595 006c 02       		.uleb128 0x2
 596 006d 02       		.byte	0x2
 597 006e 05       		.byte	0x5
 598 006f 40040000 		.4byte	.LASF8
 599 0073 02       		.uleb128 0x2
 600 0074 02       		.byte	0x2
 601 0075 07       		.byte	0x7
 602 0076 6A1D0000 		.4byte	.LASF9
 603 007a 04       		.uleb128 0x4
 604 007b 2F030000 		.4byte	.LASF10
 605 007f 05       		.byte	0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 85


 606 0080 3F       		.byte	0x3f
 607 0081 85000000 		.4byte	0x85
 608 0085 02       		.uleb128 0x2
 609 0086 04       		.byte	0x4
 610 0087 05       		.byte	0x5
 611 0088 1E170000 		.4byte	.LASF11
 612 008c 04       		.uleb128 0x4
 613 008d 301B0000 		.4byte	.LASF12
 614 0091 05       		.byte	0x5
 615 0092 41       		.byte	0x41
 616 0093 97000000 		.4byte	0x97
 617 0097 02       		.uleb128 0x2
 618 0098 04       		.byte	0x4
 619 0099 07       		.byte	0x7
 620 009a E5190000 		.4byte	.LASF13
 621 009e 02       		.uleb128 0x2
 622 009f 08       		.byte	0x8
 623 00a0 07       		.byte	0x7
 624 00a1 93080000 		.4byte	.LASF14
 625 00a5 02       		.uleb128 0x2
 626 00a6 04       		.byte	0x4
 627 00a7 07       		.byte	0x7
 628 00a8 DC190000 		.4byte	.LASF15
 629 00ac 05       		.uleb128 0x5
 630 00ad 04       		.byte	0x4
 631 00ae 02       		.uleb128 0x2
 632 00af 01       		.byte	0x1
 633 00b0 08       		.byte	0x8
 634 00b1 450D0000 		.4byte	.LASF16
 635 00b5 02       		.uleb128 0x2
 636 00b6 08       		.byte	0x8
 637 00b7 04       		.byte	0x4
 638 00b8 CF0A0000 		.4byte	.LASF17
 639 00bc 04       		.uleb128 0x4
 640 00bd C20E0000 		.4byte	.LASF18
 641 00c1 06       		.byte	0x6
 642 00c2 18       		.byte	0x18
 643 00c3 4F000000 		.4byte	0x4f
 644 00c7 04       		.uleb128 0x4
 645 00c8 35080000 		.4byte	.LASF19
 646 00cc 06       		.byte	0x6
 647 00cd 20       		.byte	0x20
 648 00ce 61000000 		.4byte	0x61
 649 00d2 04       		.uleb128 0x4
 650 00d3 3C1A0000 		.4byte	.LASF20
 651 00d7 06       		.byte	0x6
 652 00d8 2C       		.byte	0x2c
 653 00d9 7A000000 		.4byte	0x7a
 654 00dd 04       		.uleb128 0x4
 655 00de 18070000 		.4byte	.LASF21
 656 00e2 06       		.byte	0x6
 657 00e3 30       		.byte	0x30
 658 00e4 8C000000 		.4byte	0x8c
 659 00e8 06       		.uleb128 0x6
 660 00e9 DD000000 		.4byte	0xdd
 661 00ed 07       		.uleb128 0x7
 662 00ee E8000000 		.4byte	0xe8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 86


 663 00f2 08       		.uleb128 0x8
 664 00f3 ED000000 		.4byte	0xed
 665 00f7 02010000 		.4byte	0x102
 666 00fb 09       		.uleb128 0x9
 667 00fc A5000000 		.4byte	0xa5
 668 0100 01       		.byte	0x1
 669 0101 00       		.byte	0
 670 0102 08       		.uleb128 0x8
 671 0103 E8000000 		.4byte	0xe8
 672 0107 12010000 		.4byte	0x112
 673 010b 09       		.uleb128 0x9
 674 010c A5000000 		.4byte	0xa5
 675 0110 0F       		.byte	0xf
 676 0111 00       		.byte	0
 677 0112 08       		.uleb128 0x8
 678 0113 ED000000 		.4byte	0xed
 679 0117 22010000 		.4byte	0x122
 680 011b 09       		.uleb128 0x9
 681 011c A5000000 		.4byte	0xa5
 682 0120 02       		.byte	0x2
 683 0121 00       		.byte	0
 684 0122 08       		.uleb128 0x8
 685 0123 ED000000 		.4byte	0xed
 686 0127 32010000 		.4byte	0x132
 687 012b 09       		.uleb128 0x9
 688 012c A5000000 		.4byte	0xa5
 689 0130 0F       		.byte	0xf
 690 0131 00       		.byte	0
 691 0132 08       		.uleb128 0x8
 692 0133 ED000000 		.4byte	0xed
 693 0137 42010000 		.4byte	0x142
 694 013b 09       		.uleb128 0x9
 695 013c A5000000 		.4byte	0xa5
 696 0140 0E       		.byte	0xe
 697 0141 00       		.byte	0
 698 0142 0A       		.uleb128 0xa
 699 0143 80       		.byte	0x80
 700 0144 07       		.byte	0x7
 701 0145 22       		.byte	0x22
 702 0146 16020000 		.4byte	0x216
 703 014a 0B       		.uleb128 0xb
 704 014b 4F555400 		.ascii	"OUT\000"
 705 014f 07       		.byte	0x7
 706 0150 23       		.byte	0x23
 707 0151 E8000000 		.4byte	0xe8
 708 0155 00       		.byte	0
 709 0156 0C       		.uleb128 0xc
 710 0157 18080000 		.4byte	.LASF22
 711 015b 07       		.byte	0x7
 712 015c 24       		.byte	0x24
 713 015d E8000000 		.4byte	0xe8
 714 0161 04       		.byte	0x4
 715 0162 0C       		.uleb128 0xc
 716 0163 25040000 		.4byte	.LASF23
 717 0167 07       		.byte	0x7
 718 0168 25       		.byte	0x25
 719 0169 E8000000 		.4byte	0xe8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 87


 720 016d 08       		.byte	0x8
 721 016e 0C       		.uleb128 0xc
 722 016f BF180000 		.4byte	.LASF24
 723 0173 07       		.byte	0x7
 724 0174 26       		.byte	0x26
 725 0175 E8000000 		.4byte	0xe8
 726 0179 0C       		.byte	0xc
 727 017a 0B       		.uleb128 0xb
 728 017b 494E00   		.ascii	"IN\000"
 729 017e 07       		.byte	0x7
 730 017f 27       		.byte	0x27
 731 0180 ED000000 		.4byte	0xed
 732 0184 10       		.byte	0x10
 733 0185 0C       		.uleb128 0xc
 734 0186 160C0000 		.4byte	.LASF25
 735 018a 07       		.byte	0x7
 736 018b 28       		.byte	0x28
 737 018c E8000000 		.4byte	0xe8
 738 0190 14       		.byte	0x14
 739 0191 0C       		.uleb128 0xc
 740 0192 630C0000 		.4byte	.LASF26
 741 0196 07       		.byte	0x7
 742 0197 29       		.byte	0x29
 743 0198 E8000000 		.4byte	0xe8
 744 019c 18       		.byte	0x18
 745 019d 0C       		.uleb128 0xc
 746 019e 9D190000 		.4byte	.LASF27
 747 01a2 07       		.byte	0x7
 748 01a3 2A       		.byte	0x2a
 749 01a4 ED000000 		.4byte	0xed
 750 01a8 1C       		.byte	0x1c
 751 01a9 0C       		.uleb128 0xc
 752 01aa 8D040000 		.4byte	.LASF28
 753 01ae 07       		.byte	0x7
 754 01af 2B       		.byte	0x2b
 755 01b0 E8000000 		.4byte	0xe8
 756 01b4 20       		.byte	0x20
 757 01b5 0C       		.uleb128 0xc
 758 01b6 5C1B0000 		.4byte	.LASF29
 759 01ba 07       		.byte	0x7
 760 01bb 2C       		.byte	0x2c
 761 01bc E8000000 		.4byte	0xe8
 762 01c0 24       		.byte	0x24
 763 01c1 0B       		.uleb128 0xb
 764 01c2 43464700 		.ascii	"CFG\000"
 765 01c6 07       		.byte	0x7
 766 01c7 2D       		.byte	0x2d
 767 01c8 E8000000 		.4byte	0xe8
 768 01cc 28       		.byte	0x28
 769 01cd 0C       		.uleb128 0xc
 770 01ce 9B060000 		.4byte	.LASF30
 771 01d2 07       		.byte	0x7
 772 01d3 2E       		.byte	0x2e
 773 01d4 E8000000 		.4byte	0xe8
 774 01d8 2C       		.byte	0x2c
 775 01d9 0C       		.uleb128 0xc
 776 01da FD090000 		.4byte	.LASF31
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 88


 777 01de 07       		.byte	0x7
 778 01df 2F       		.byte	0x2f
 779 01e0 E8000000 		.4byte	0xe8
 780 01e4 30       		.byte	0x30
 781 01e5 0C       		.uleb128 0xc
 782 01e6 27030000 		.4byte	.LASF32
 783 01ea 07       		.byte	0x7
 784 01eb 30       		.byte	0x30
 785 01ec E8000000 		.4byte	0xe8
 786 01f0 34       		.byte	0x34
 787 01f1 0C       		.uleb128 0xc
 788 01f2 26000000 		.4byte	.LASF33
 789 01f6 07       		.byte	0x7
 790 01f7 31       		.byte	0x31
 791 01f8 ED000000 		.4byte	0xed
 792 01fc 38       		.byte	0x38
 793 01fd 0C       		.uleb128 0xc
 794 01fe 1F180000 		.4byte	.LASF34
 795 0202 07       		.byte	0x7
 796 0203 32       		.byte	0x32
 797 0204 E8000000 		.4byte	0xe8
 798 0208 3C       		.byte	0x3c
 799 0209 0C       		.uleb128 0xc
 800 020a 45160000 		.4byte	.LASF35
 801 020e 07       		.byte	0x7
 802 020f 33       		.byte	0x33
 803 0210 1B020000 		.4byte	0x21b
 804 0214 40       		.byte	0x40
 805 0215 00       		.byte	0
 806 0216 06       		.uleb128 0x6
 807 0217 22010000 		.4byte	0x122
 808 021b 07       		.uleb128 0x7
 809 021c 16020000 		.4byte	0x216
 810 0220 04       		.uleb128 0x4
 811 0221 1B0C0000 		.4byte	.LASF36
 812 0225 07       		.byte	0x7
 813 0226 34       		.byte	0x34
 814 0227 42010000 		.4byte	0x142
 815 022b 0D       		.uleb128 0xd
 816 022c 2440     		.2byte	0x4024
 817 022e 07       		.byte	0x7
 818 022f 39       		.byte	0x39
 819 0230 B6020000 		.4byte	0x2b6
 820 0234 0B       		.uleb128 0xb
 821 0235 50525400 		.ascii	"PRT\000"
 822 0239 07       		.byte	0x7
 823 023a 3A       		.byte	0x3a
 824 023b B6020000 		.4byte	0x2b6
 825 023f 00       		.byte	0
 826 0240 0E       		.uleb128 0xe
 827 0241 3A000000 		.4byte	.LASF37
 828 0245 07       		.byte	0x7
 829 0246 3B       		.byte	0x3b
 830 0247 ED000000 		.4byte	0xed
 831 024b 0040     		.2byte	0x4000
 832 024d 0E       		.uleb128 0xe
 833 024e 46000000 		.4byte	.LASF38
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 89


 834 0252 07       		.byte	0x7
 835 0253 3C       		.byte	0x3c
 836 0254 ED000000 		.4byte	0xed
 837 0258 0440     		.2byte	0x4004
 838 025a 0E       		.uleb128 0xe
 839 025b F90E0000 		.4byte	.LASF39
 840 025f 07       		.byte	0x7
 841 0260 3D       		.byte	0x3d
 842 0261 ED000000 		.4byte	0xed
 843 0265 0840     		.2byte	0x4008
 844 0267 0E       		.uleb128 0xe
 845 0268 050F0000 		.4byte	.LASF40
 846 026c 07       		.byte	0x7
 847 026d 3E       		.byte	0x3e
 848 026e ED000000 		.4byte	0xed
 849 0272 0C40     		.2byte	0x400c
 850 0274 0E       		.uleb128 0xe
 851 0275 2F000000 		.4byte	.LASF41
 852 0279 07       		.byte	0x7
 853 027a 3F       		.byte	0x3f
 854 027b ED000000 		.4byte	0xed
 855 027f 1040     		.2byte	0x4010
 856 0281 0E       		.uleb128 0xe
 857 0282 180B0000 		.4byte	.LASF42
 858 0286 07       		.byte	0x7
 859 0287 40       		.byte	0x40
 860 0288 E8000000 		.4byte	0xe8
 861 028c 1440     		.2byte	0x4014
 862 028e 0E       		.uleb128 0xe
 863 028f 491D0000 		.4byte	.LASF43
 864 0293 07       		.byte	0x7
 865 0294 41       		.byte	0x41
 866 0295 E8000000 		.4byte	0xe8
 867 0299 1840     		.2byte	0x4018
 868 029b 0E       		.uleb128 0xe
 869 029c F7110000 		.4byte	.LASF44
 870 02a0 07       		.byte	0x7
 871 02a1 42       		.byte	0x42
 872 02a2 ED000000 		.4byte	0xed
 873 02a6 1C40     		.2byte	0x401c
 874 02a8 0E       		.uleb128 0xe
 875 02a9 FB140000 		.4byte	.LASF45
 876 02ad 07       		.byte	0x7
 877 02ae 43       		.byte	0x43
 878 02af E8000000 		.4byte	0xe8
 879 02b3 2040     		.2byte	0x4020
 880 02b5 00       		.byte	0
 881 02b6 08       		.uleb128 0x8
 882 02b7 20020000 		.4byte	0x220
 883 02bb C6020000 		.4byte	0x2c6
 884 02bf 09       		.uleb128 0x9
 885 02c0 A5000000 		.4byte	0xa5
 886 02c4 7F       		.byte	0x7f
 887 02c5 00       		.byte	0
 888 02c6 04       		.uleb128 0x4
 889 02c7 3B1B0000 		.4byte	.LASF46
 890 02cb 07       		.byte	0x7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 90


 891 02cc 44       		.byte	0x44
 892 02cd 2B020000 		.4byte	0x22b
 893 02d1 0D       		.uleb128 0xd
 894 02d2 080F     		.2byte	0xf08
 895 02d4 08       		.byte	0x8
 896 02d5 21       		.byte	0x21
 897 02d6 59050000 		.4byte	0x559
 898 02da 0C       		.uleb128 0xc
 899 02db 4C1F0000 		.4byte	.LASF47
 900 02df 08       		.byte	0x8
 901 02e0 22       		.byte	0x22
 902 02e1 E8000000 		.4byte	0xe8
 903 02e5 00       		.byte	0
 904 02e6 0C       		.uleb128 0xc
 905 02e7 78120000 		.4byte	.LASF48
 906 02eb 08       		.byte	0x8
 907 02ec 23       		.byte	0x23
 908 02ed E8000000 		.4byte	0xe8
 909 02f1 04       		.byte	0x4
 910 02f2 0C       		.uleb128 0xc
 911 02f3 26000000 		.4byte	.LASF33
 912 02f7 08       		.byte	0x8
 913 02f8 24       		.byte	0x24
 914 02f9 5E050000 		.4byte	0x55e
 915 02fd 08       		.byte	0x8
 916 02fe 0C       		.uleb128 0xc
 917 02ff 58040000 		.4byte	.LASF49
 918 0303 08       		.byte	0x8
 919 0304 25       		.byte	0x25
 920 0305 E8000000 		.4byte	0xe8
 921 0309 10       		.byte	0x10
 922 030a 0C       		.uleb128 0xc
 923 030b F1080000 		.4byte	.LASF50
 924 030f 08       		.byte	0x8
 925 0310 26       		.byte	0x26
 926 0311 E8000000 		.4byte	0xe8
 927 0315 14       		.byte	0x14
 928 0316 0C       		.uleb128 0xc
 929 0317 A3170000 		.4byte	.LASF51
 930 031b 08       		.byte	0x8
 931 031c 27       		.byte	0x27
 932 031d E8000000 		.4byte	0xe8
 933 0321 18       		.byte	0x18
 934 0322 0C       		.uleb128 0xc
 935 0323 EB0A0000 		.4byte	.LASF52
 936 0327 08       		.byte	0x8
 937 0328 28       		.byte	0x28
 938 0329 E8000000 		.4byte	0xe8
 939 032d 1C       		.byte	0x1c
 940 032e 0C       		.uleb128 0xc
 941 032f DB010000 		.4byte	.LASF53
 942 0333 08       		.byte	0x8
 943 0334 29       		.byte	0x29
 944 0335 E8000000 		.4byte	0xe8
 945 0339 20       		.byte	0x20
 946 033a 0C       		.uleb128 0xc
 947 033b 6D0C0000 		.4byte	.LASF54
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 91


 948 033f 08       		.byte	0x8
 949 0340 2A       		.byte	0x2a
 950 0341 E8000000 		.4byte	0xe8
 951 0345 24       		.byte	0x24
 952 0346 0C       		.uleb128 0xc
 953 0347 45160000 		.4byte	.LASF35
 954 034b 08       		.byte	0x8
 955 034c 2B       		.byte	0x2b
 956 034d 78050000 		.4byte	0x578
 957 0351 28       		.byte	0x28
 958 0352 0C       		.uleb128 0xc
 959 0353 5D1E0000 		.4byte	.LASF55
 960 0357 08       		.byte	0x8
 961 0358 2C       		.byte	0x2c
 962 0359 7D050000 		.4byte	0x57d
 963 035d 80       		.byte	0x80
 964 035e 0C       		.uleb128 0xc
 965 035f 4F160000 		.4byte	.LASF56
 966 0363 08       		.byte	0x8
 967 0364 2D       		.byte	0x2d
 968 0365 87050000 		.4byte	0x587
 969 0369 C0       		.byte	0xc0
 970 036a 0E       		.uleb128 0xe
 971 036b ED170000 		.4byte	.LASF57
 972 036f 08       		.byte	0x8
 973 0370 2E       		.byte	0x2e
 974 0371 91050000 		.4byte	0x591
 975 0375 0001     		.2byte	0x100
 976 0377 0E       		.uleb128 0xe
 977 0378 59160000 		.4byte	.LASF58
 978 037c 08       		.byte	0x8
 979 037d 2F       		.byte	0x2f
 980 037e 9B050000 		.4byte	0x59b
 981 0382 4001     		.2byte	0x140
 982 0384 0E       		.uleb128 0xe
 983 0385 2B120000 		.4byte	.LASF59
 984 0389 08       		.byte	0x8
 985 038a 30       		.byte	0x30
 986 038b A5050000 		.4byte	0x5a5
 987 038f 8001     		.2byte	0x180
 988 0391 0E       		.uleb128 0xe
 989 0392 63160000 		.4byte	.LASF60
 990 0396 08       		.byte	0x8
 991 0397 31       		.byte	0x31
 992 0398 AF050000 		.4byte	0x5af
 993 039c C001     		.2byte	0x1c0
 994 039e 0E       		.uleb128 0xe
 995 039f 90000000 		.4byte	.LASF61
 996 03a3 08       		.byte	0x8
 997 03a4 32       		.byte	0x32
 998 03a5 ED000000 		.4byte	0xed
 999 03a9 0002     		.2byte	0x200
 1000 03ab 0E       		.uleb128 0xe
 1001 03ac 911A0000 		.4byte	.LASF62
 1002 03b0 08       		.byte	0x8
 1003 03b1 33       		.byte	0x33
 1004 03b2 ED000000 		.4byte	0xed
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 92


 1005 03b6 0402     		.2byte	0x204
 1006 03b8 0E       		.uleb128 0xe
 1007 03b9 52030000 		.4byte	.LASF63
 1008 03bd 08       		.byte	0x8
 1009 03be 34       		.byte	0x34
 1010 03bf ED000000 		.4byte	0xed
 1011 03c3 0802     		.2byte	0x208
 1012 03c5 0E       		.uleb128 0xe
 1013 03c6 71030000 		.4byte	.LASF64
 1014 03ca 08       		.byte	0x8
 1015 03cb 35       		.byte	0x35
 1016 03cc ED000000 		.4byte	0xed
 1017 03d0 0C02     		.2byte	0x20c
 1018 03d2 0E       		.uleb128 0xe
 1019 03d3 160C0000 		.4byte	.LASF25
 1020 03d7 08       		.byte	0x8
 1021 03d8 36       		.byte	0x36
 1022 03d9 E8000000 		.4byte	0xe8
 1023 03dd 1002     		.2byte	0x210
 1024 03df 0E       		.uleb128 0xe
 1025 03e0 8D040000 		.4byte	.LASF28
 1026 03e4 08       		.byte	0x8
 1027 03e5 37       		.byte	0x37
 1028 03e6 E8000000 		.4byte	0xe8
 1029 03ea 1402     		.2byte	0x214
 1030 03ec 0E       		.uleb128 0xe
 1031 03ed 630C0000 		.4byte	.LASF26
 1032 03f1 08       		.byte	0x8
 1033 03f2 38       		.byte	0x38
 1034 03f3 E8000000 		.4byte	0xe8
 1035 03f7 1802     		.2byte	0x218
 1036 03f9 0E       		.uleb128 0xe
 1037 03fa 9D190000 		.4byte	.LASF27
 1038 03fe 08       		.byte	0x8
 1039 03ff 39       		.byte	0x39
 1040 0400 ED000000 		.4byte	0xed
 1041 0404 1C02     		.2byte	0x21c
 1042 0406 0E       		.uleb128 0xe
 1043 0407 4A040000 		.4byte	.LASF65
 1044 040b 08       		.byte	0x8
 1045 040c 3A       		.byte	0x3a
 1046 040d E8000000 		.4byte	0xe8
 1047 0411 2002     		.2byte	0x220
 1048 0413 0E       		.uleb128 0xe
 1049 0414 531C0000 		.4byte	.LASF66
 1050 0418 08       		.byte	0x8
 1051 0419 3B       		.byte	0x3b
 1052 041a E8000000 		.4byte	0xe8
 1053 041e 2402     		.2byte	0x224
 1054 0420 0E       		.uleb128 0xe
 1055 0421 BB1B0000 		.4byte	.LASF67
 1056 0425 08       		.byte	0x8
 1057 0426 3C       		.byte	0x3c
 1058 0427 E8000000 		.4byte	0xe8
 1059 042b 2802     		.2byte	0x228
 1060 042d 0E       		.uleb128 0xe
 1061 042e F6160000 		.4byte	.LASF68
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 93


 1062 0432 08       		.byte	0x8
 1063 0433 3D       		.byte	0x3d
 1064 0434 ED000000 		.4byte	0xed
 1065 0438 2C02     		.2byte	0x22c
 1066 043a 0E       		.uleb128 0xe
 1067 043b 54120000 		.4byte	.LASF69
 1068 043f 08       		.byte	0x8
 1069 0440 3E       		.byte	0x3e
 1070 0441 E8000000 		.4byte	0xe8
 1071 0445 3002     		.2byte	0x230
 1072 0447 0E       		.uleb128 0xe
 1073 0448 210F0000 		.4byte	.LASF70
 1074 044c 08       		.byte	0x8
 1075 044d 3F       		.byte	0x3f
 1076 044e E8000000 		.4byte	0xe8
 1077 0452 3402     		.2byte	0x234
 1078 0454 0E       		.uleb128 0xe
 1079 0455 62020000 		.4byte	.LASF71
 1080 0459 08       		.byte	0x8
 1081 045a 40       		.byte	0x40
 1082 045b E8000000 		.4byte	0xe8
 1083 045f 3802     		.2byte	0x238
 1084 0461 0E       		.uleb128 0xe
 1085 0462 A4100000 		.4byte	.LASF72
 1086 0466 08       		.byte	0x8
 1087 0467 41       		.byte	0x41
 1088 0468 ED000000 		.4byte	0xed
 1089 046c 3C02     		.2byte	0x23c
 1090 046e 0E       		.uleb128 0xe
 1091 046f E0020000 		.4byte	.LASF73
 1092 0473 08       		.byte	0x8
 1093 0474 42       		.byte	0x42
 1094 0475 ED000000 		.4byte	0xed
 1095 0479 4002     		.2byte	0x240
 1096 047b 0E       		.uleb128 0xe
 1097 047c 6D160000 		.4byte	.LASF74
 1098 0480 08       		.byte	0x8
 1099 0481 43       		.byte	0x43
 1100 0482 B9050000 		.4byte	0x5b9
 1101 0486 4402     		.2byte	0x244
 1102 0488 0E       		.uleb128 0xe
 1103 0489 050A0000 		.4byte	.LASF75
 1104 048d 08       		.byte	0x8
 1105 048e 44       		.byte	0x44
 1106 048f E8000000 		.4byte	0xe8
 1107 0493 8002     		.2byte	0x280
 1108 0495 0E       		.uleb128 0xe
 1109 0496 77160000 		.4byte	.LASF76
 1110 049a 08       		.byte	0x8
 1111 049b 45       		.byte	0x45
 1112 049c C3050000 		.4byte	0x5c3
 1113 04a0 8402     		.2byte	0x284
 1114 04a2 0E       		.uleb128 0xe
 1115 04a3 82040000 		.4byte	.LASF77
 1116 04a7 08       		.byte	0x8
 1117 04a8 46       		.byte	0x46
 1118 04a9 ED000000 		.4byte	0xed
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 94


 1119 04ad 9002     		.2byte	0x290
 1120 04af 0E       		.uleb128 0xe
 1121 04b0 81160000 		.4byte	.LASF78
 1122 04b4 08       		.byte	0x8
 1123 04b5 47       		.byte	0x47
 1124 04b6 CD050000 		.4byte	0x5cd
 1125 04ba 9402     		.2byte	0x294
 1126 04bc 0E       		.uleb128 0xe
 1127 04bd 4A1E0000 		.4byte	.LASF79
 1128 04c1 08       		.byte	0x8
 1129 04c2 48       		.byte	0x48
 1130 04c3 ED000000 		.4byte	0xed
 1131 04c7 A002     		.2byte	0x2a0
 1132 04c9 0E       		.uleb128 0xe
 1133 04ca B90E0000 		.4byte	.LASF80
 1134 04ce 08       		.byte	0x8
 1135 04cf 49       		.byte	0x49
 1136 04d0 ED000000 		.4byte	0xed
 1137 04d4 A402     		.2byte	0x2a4
 1138 04d6 0E       		.uleb128 0xe
 1139 04d7 8B160000 		.4byte	.LASF81
 1140 04db 08       		.byte	0x8
 1141 04dc 4A       		.byte	0x4a
 1142 04dd D7050000 		.4byte	0x5d7
 1143 04e1 A802     		.2byte	0x2a8
 1144 04e3 0E       		.uleb128 0xe
 1145 04e4 611A0000 		.4byte	.LASF82
 1146 04e8 08       		.byte	0x8
 1147 04e9 4B       		.byte	0x4b
 1148 04ea E8000000 		.4byte	0xe8
 1149 04ee 0003     		.2byte	0x300
 1150 04f0 0E       		.uleb128 0xe
 1151 04f1 2E130000 		.4byte	.LASF83
 1152 04f5 08       		.byte	0x8
 1153 04f6 4C       		.byte	0x4c
 1154 04f7 E8000000 		.4byte	0xe8
 1155 04fb 0403     		.2byte	0x304
 1156 04fd 0E       		.uleb128 0xe
 1157 04fe 95160000 		.4byte	.LASF84
 1158 0502 08       		.byte	0x8
 1159 0503 4D       		.byte	0x4d
 1160 0504 F1050000 		.4byte	0x5f1
 1161 0508 0803     		.2byte	0x308
 1162 050a 0E       		.uleb128 0xe
 1163 050b 46100000 		.4byte	.LASF85
 1164 050f 08       		.byte	0x8
 1165 0510 4E       		.byte	0x4e
 1166 0511 E8000000 		.4byte	0xe8
 1167 0515 4003     		.2byte	0x340
 1168 0517 0E       		.uleb128 0xe
 1169 0518 0B170000 		.4byte	.LASF86
 1170 051c 08       		.byte	0x8
 1171 051d 4F       		.byte	0x4f
 1172 051e E8000000 		.4byte	0xe8
 1173 0522 4403     		.2byte	0x344
 1174 0524 0E       		.uleb128 0xe
 1175 0525 E21D0000 		.4byte	.LASF87
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 95


 1176 0529 08       		.byte	0x8
 1177 052a 50       		.byte	0x50
 1178 052b ED000000 		.4byte	0xed
 1179 052f 4803     		.2byte	0x348
 1180 0531 0E       		.uleb128 0xe
 1181 0532 071C0000 		.4byte	.LASF88
 1182 0536 08       		.byte	0x8
 1183 0537 51       		.byte	0x51
 1184 0538 0C060000 		.4byte	0x60c
 1185 053c 4C03     		.2byte	0x34c
 1186 053e 0E       		.uleb128 0xe
 1187 053f 1C1B0000 		.4byte	.LASF89
 1188 0543 08       		.byte	0x8
 1189 0544 52       		.byte	0x52
 1190 0545 E8000000 		.4byte	0xe8
 1191 0549 000F     		.2byte	0xf00
 1192 054b 0E       		.uleb128 0xe
 1193 054c 261B0000 		.4byte	.LASF90
 1194 0550 08       		.byte	0x8
 1195 0551 53       		.byte	0x53
 1196 0552 E8000000 		.4byte	0xe8
 1197 0556 040F     		.2byte	0xf04
 1198 0558 00       		.byte	0
 1199 0559 06       		.uleb128 0x6
 1200 055a F2000000 		.4byte	0xf2
 1201 055e 07       		.uleb128 0x7
 1202 055f 59050000 		.4byte	0x559
 1203 0563 08       		.uleb128 0x8
 1204 0564 ED000000 		.4byte	0xed
 1205 0568 73050000 		.4byte	0x573
 1206 056c 09       		.uleb128 0x9
 1207 056d A5000000 		.4byte	0xa5
 1208 0571 15       		.byte	0x15
 1209 0572 00       		.byte	0
 1210 0573 06       		.uleb128 0x6
 1211 0574 63050000 		.4byte	0x563
 1212 0578 07       		.uleb128 0x7
 1213 0579 73050000 		.4byte	0x573
 1214 057d 06       		.uleb128 0x6
 1215 057e 02010000 		.4byte	0x102
 1216 0582 06       		.uleb128 0x6
 1217 0583 22010000 		.4byte	0x122
 1218 0587 07       		.uleb128 0x7
 1219 0588 82050000 		.4byte	0x582
 1220 058c 06       		.uleb128 0x6
 1221 058d 22010000 		.4byte	0x122
 1222 0591 07       		.uleb128 0x7
 1223 0592 8C050000 		.4byte	0x58c
 1224 0596 06       		.uleb128 0x6
 1225 0597 22010000 		.4byte	0x122
 1226 059b 07       		.uleb128 0x7
 1227 059c 96050000 		.4byte	0x596
 1228 05a0 06       		.uleb128 0x6
 1229 05a1 22010000 		.4byte	0x122
 1230 05a5 07       		.uleb128 0x7
 1231 05a6 A0050000 		.4byte	0x5a0
 1232 05aa 06       		.uleb128 0x6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 96


 1233 05ab 22010000 		.4byte	0x122
 1234 05af 07       		.uleb128 0x7
 1235 05b0 AA050000 		.4byte	0x5aa
 1236 05b4 06       		.uleb128 0x6
 1237 05b5 32010000 		.4byte	0x132
 1238 05b9 07       		.uleb128 0x7
 1239 05ba B4050000 		.4byte	0x5b4
 1240 05be 06       		.uleb128 0x6
 1241 05bf 12010000 		.4byte	0x112
 1242 05c3 07       		.uleb128 0x7
 1243 05c4 BE050000 		.4byte	0x5be
 1244 05c8 06       		.uleb128 0x6
 1245 05c9 12010000 		.4byte	0x112
 1246 05cd 07       		.uleb128 0x7
 1247 05ce C8050000 		.4byte	0x5c8
 1248 05d2 06       		.uleb128 0x6
 1249 05d3 63050000 		.4byte	0x563
 1250 05d7 07       		.uleb128 0x7
 1251 05d8 D2050000 		.4byte	0x5d2
 1252 05dc 08       		.uleb128 0x8
 1253 05dd ED000000 		.4byte	0xed
 1254 05e1 EC050000 		.4byte	0x5ec
 1255 05e5 09       		.uleb128 0x9
 1256 05e6 A5000000 		.4byte	0xa5
 1257 05ea 0D       		.byte	0xd
 1258 05eb 00       		.byte	0
 1259 05ec 06       		.uleb128 0x6
 1260 05ed DC050000 		.4byte	0x5dc
 1261 05f1 07       		.uleb128 0x7
 1262 05f2 EC050000 		.4byte	0x5ec
 1263 05f6 08       		.uleb128 0x8
 1264 05f7 ED000000 		.4byte	0xed
 1265 05fb 07060000 		.4byte	0x607
 1266 05ff 0F       		.uleb128 0xf
 1267 0600 A5000000 		.4byte	0xa5
 1268 0604 EC02     		.2byte	0x2ec
 1269 0606 00       		.byte	0
 1270 0607 06       		.uleb128 0x6
 1271 0608 F6050000 		.4byte	0x5f6
 1272 060c 07       		.uleb128 0x7
 1273 060d 07060000 		.4byte	0x607
 1274 0611 04       		.uleb128 0x4
 1275 0612 780A0000 		.4byte	.LASF91
 1276 0616 08       		.byte	0x8
 1277 0617 54       		.byte	0x54
 1278 0618 D1020000 		.4byte	0x2d1
 1279 061c 10       		.uleb128 0x10
 1280 061d E6170000 		.4byte	.LASF92
 1281 0621 09       		.byte	0x9
 1282 0622 C401     		.2byte	0x1c4
 1283 0624 AE000000 		.4byte	0xae
 1284 0628 02       		.uleb128 0x2
 1285 0629 01       		.byte	0x1
 1286 062a 02       		.byte	0x2
 1287 062b D60A0000 		.4byte	.LASF93
 1288 062f 11       		.uleb128 0x11
 1289 0630 04       		.byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 97


 1290 0631 35060000 		.4byte	0x635
 1291 0635 12       		.uleb128 0x12
 1292 0636 40060000 		.4byte	0x640
 1293 063a 13       		.uleb128 0x13
 1294 063b DD000000 		.4byte	0xdd
 1295 063f 00       		.byte	0
 1296 0640 10       		.uleb128 0x10
 1297 0641 72000000 		.4byte	.LASF94
 1298 0645 0A       		.byte	0xa
 1299 0646 BF01     		.2byte	0x1bf
 1300 0648 2F060000 		.4byte	0x62f
 1301 064c 14       		.uleb128 0x14
 1302 064d F01B0000 		.4byte	.LASF359
 1303 0651 24       		.byte	0x24
 1304 0652 0A       		.byte	0xa
 1305 0653 4102     		.2byte	0x241
 1306 0655 CF060000 		.4byte	0x6cf
 1307 0659 15       		.uleb128 0x15
 1308 065a CA0E0000 		.4byte	.LASF95
 1309 065e 0A       		.byte	0xa
 1310 065f 4402     		.2byte	0x244
 1311 0661 E8000000 		.4byte	0xe8
 1312 0665 00       		.byte	0
 1313 0666 15       		.uleb128 0x15
 1314 0667 150A0000 		.4byte	.LASF96
 1315 066b 0A       		.byte	0xa
 1316 066c 4602     		.2byte	0x246
 1317 066e AC000000 		.4byte	0xac
 1318 0672 04       		.byte	0x4
 1319 0673 15       		.uleb128 0x15
 1320 0674 421F0000 		.4byte	.LASF97
 1321 0678 0A       		.byte	0xa
 1322 0679 4702     		.2byte	0x247
 1323 067b DD000000 		.4byte	0xdd
 1324 067f 08       		.byte	0x8
 1325 0680 15       		.uleb128 0x15
 1326 0681 5A0E0000 		.4byte	.LASF98
 1327 0685 0A       		.byte	0xa
 1328 0686 4802     		.2byte	0x248
 1329 0688 E8000000 		.4byte	0xe8
 1330 068c 0C       		.byte	0xc
 1331 068d 15       		.uleb128 0x15
 1332 068e 56140000 		.4byte	.LASF99
 1333 0692 0A       		.byte	0xa
 1334 0693 4A02     		.2byte	0x24a
 1335 0695 AC000000 		.4byte	0xac
 1336 0699 10       		.byte	0x10
 1337 069a 15       		.uleb128 0x15
 1338 069b F7120000 		.4byte	.LASF100
 1339 069f 0A       		.byte	0xa
 1340 06a0 4B02     		.2byte	0x24b
 1341 06a2 DD000000 		.4byte	0xdd
 1342 06a6 14       		.byte	0x14
 1343 06a7 15       		.uleb128 0x15
 1344 06a8 05030000 		.4byte	.LASF101
 1345 06ac 0A       		.byte	0xa
 1346 06ad 4C02     		.2byte	0x24c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 98


 1347 06af E8000000 		.4byte	0xe8
 1348 06b3 18       		.byte	0x18
 1349 06b4 15       		.uleb128 0x15
 1350 06b5 AE0A0000 		.4byte	.LASF102
 1351 06b9 0A       		.byte	0xa
 1352 06ba 5202     		.2byte	0x252
 1353 06bc 40060000 		.4byte	0x640
 1354 06c0 1C       		.byte	0x1c
 1355 06c1 15       		.uleb128 0x15
 1356 06c2 B10E0000 		.4byte	.LASF103
 1357 06c6 0A       		.byte	0xa
 1358 06c7 5502     		.2byte	0x255
 1359 06c9 DD000000 		.4byte	0xdd
 1360 06cd 20       		.byte	0x20
 1361 06ce 00       		.byte	0
 1362 06cf 10       		.uleb128 0x10
 1363 06d0 5F120000 		.4byte	.LASF104
 1364 06d4 0A       		.byte	0xa
 1365 06d5 5802     		.2byte	0x258
 1366 06d7 4C060000 		.4byte	0x64c
 1367 06db 16       		.uleb128 0x16
 1368 06dc 01       		.byte	0x1
 1369 06dd 5A000000 		.4byte	0x5a
 1370 06e1 02       		.byte	0x2
 1371 06e2 0504     		.2byte	0x405
 1372 06e4 01070000 		.4byte	0x701
 1373 06e8 17       		.uleb128 0x17
 1374 06e9 11060000 		.4byte	.LASF105
 1375 06ed 00       		.byte	0
 1376 06ee 17       		.uleb128 0x17
 1377 06ef 3B090000 		.4byte	.LASF106
 1378 06f3 01       		.byte	0x1
 1379 06f4 17       		.uleb128 0x17
 1380 06f5 2D0D0000 		.4byte	.LASF107
 1381 06f9 02       		.byte	0x2
 1382 06fa 17       		.uleb128 0x17
 1383 06fb EB020000 		.4byte	.LASF108
 1384 06ff 03       		.byte	0x3
 1385 0700 00       		.byte	0
 1386 0701 10       		.uleb128 0x10
 1387 0702 691E0000 		.4byte	.LASF109
 1388 0706 02       		.byte	0x2
 1389 0707 0A04     		.2byte	0x40a
 1390 0709 DB060000 		.4byte	0x6db
 1391 070d 16       		.uleb128 0x16
 1392 070e 01       		.byte	0x1
 1393 070f 5A000000 		.4byte	0x5a
 1394 0713 02       		.byte	0x2
 1395 0714 8604     		.2byte	0x486
 1396 0716 33070000 		.4byte	0x733
 1397 071a 17       		.uleb128 0x17
 1398 071b 061B0000 		.4byte	.LASF110
 1399 071f 00       		.byte	0
 1400 0720 17       		.uleb128 0x17
 1401 0721 09020000 		.4byte	.LASF111
 1402 0725 01       		.byte	0x1
 1403 0726 17       		.uleb128 0x17
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 99


 1404 0727 59100000 		.4byte	.LASF112
 1405 072b 02       		.byte	0x2
 1406 072c 17       		.uleb128 0x17
 1407 072d B6100000 		.4byte	.LASF113
 1408 0731 04       		.byte	0x4
 1409 0732 00       		.byte	0
 1410 0733 18       		.uleb128 0x18
 1411 0734 78       		.byte	0x78
 1412 0735 02       		.byte	0x2
 1413 0736 F404     		.2byte	0x4f4
 1414 0738 00080000 		.4byte	0x800
 1415 073c 15       		.uleb128 0x15
 1416 073d B0090000 		.4byte	.LASF114
 1417 0741 02       		.byte	0x2
 1418 0742 F604     		.2byte	0x4f6
 1419 0744 DD000000 		.4byte	0xdd
 1420 0748 00       		.byte	0
 1421 0749 15       		.uleb128 0x15
 1422 074a EF1A0000 		.4byte	.LASF115
 1423 074e 02       		.byte	0x2
 1424 074f F704     		.2byte	0x4f7
 1425 0751 DD000000 		.4byte	0xdd
 1426 0755 04       		.byte	0x4
 1427 0756 15       		.uleb128 0x15
 1428 0757 33150000 		.4byte	.LASF116
 1429 075b 02       		.byte	0x2
 1430 075c F804     		.2byte	0x4f8
 1431 075e DD000000 		.4byte	0xdd
 1432 0762 08       		.byte	0x8
 1433 0763 15       		.uleb128 0x15
 1434 0764 A10A0000 		.4byte	.LASF117
 1435 0768 02       		.byte	0x2
 1436 0769 F904     		.2byte	0x4f9
 1437 076b DD000000 		.4byte	0xdd
 1438 076f 0C       		.byte	0xc
 1439 0770 15       		.uleb128 0x15
 1440 0771 FF080000 		.4byte	.LASF118
 1441 0775 02       		.byte	0x2
 1442 0776 FA04     		.2byte	0x4fa
 1443 0778 DD000000 		.4byte	0xdd
 1444 077c 10       		.byte	0x10
 1445 077d 15       		.uleb128 0x15
 1446 077e A30F0000 		.4byte	.LASF119
 1447 0782 02       		.byte	0x2
 1448 0783 FB04     		.2byte	0x4fb
 1449 0785 01070000 		.4byte	0x701
 1450 0789 14       		.byte	0x14
 1451 078a 15       		.uleb128 0x15
 1452 078b A50D0000 		.4byte	.LASF120
 1453 078f 02       		.byte	0x2
 1454 0790 FC04     		.2byte	0x4fc
 1455 0792 DD000000 		.4byte	0xdd
 1456 0796 18       		.byte	0x18
 1457 0797 15       		.uleb128 0x15
 1458 0798 84120000 		.4byte	.LASF121
 1459 079c 02       		.byte	0x2
 1460 079d FD04     		.2byte	0x4fd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 100


 1461 079f 00080000 		.4byte	0x800
 1462 07a3 1C       		.byte	0x1c
 1463 07a4 15       		.uleb128 0x15
 1464 07a5 391F0000 		.4byte	.LASF122
 1465 07a9 02       		.byte	0x2
 1466 07aa FE04     		.2byte	0x4fe
 1467 07ac DD000000 		.4byte	0xdd
 1468 07b0 5C       		.byte	0x5c
 1469 07b1 15       		.uleb128 0x15
 1470 07b2 BD040000 		.4byte	.LASF123
 1471 07b6 02       		.byte	0x2
 1472 07b7 FF04     		.2byte	0x4ff
 1473 07b9 DD000000 		.4byte	0xdd
 1474 07bd 60       		.byte	0x60
 1475 07be 15       		.uleb128 0x15
 1476 07bf AD0F0000 		.4byte	.LASF124
 1477 07c3 02       		.byte	0x2
 1478 07c4 0005     		.2byte	0x500
 1479 07c6 DD000000 		.4byte	0xdd
 1480 07ca 64       		.byte	0x64
 1481 07cb 15       		.uleb128 0x15
 1482 07cc 5A150000 		.4byte	.LASF125
 1483 07d0 02       		.byte	0x2
 1484 07d1 0105     		.2byte	0x501
 1485 07d3 DD000000 		.4byte	0xdd
 1486 07d7 68       		.byte	0x68
 1487 07d8 15       		.uleb128 0x15
 1488 07d9 710F0000 		.4byte	.LASF126
 1489 07dd 02       		.byte	0x2
 1490 07de 0205     		.2byte	0x502
 1491 07e0 DD000000 		.4byte	0xdd
 1492 07e4 6C       		.byte	0x6c
 1493 07e5 15       		.uleb128 0x15
 1494 07e6 1B1E0000 		.4byte	.LASF127
 1495 07ea 02       		.byte	0x2
 1496 07eb 0305     		.2byte	0x503
 1497 07ed 28060000 		.4byte	0x628
 1498 07f1 70       		.byte	0x70
 1499 07f2 15       		.uleb128 0x15
 1500 07f3 920C0000 		.4byte	.LASF128
 1501 07f7 02       		.byte	0x2
 1502 07f8 0405     		.2byte	0x504
 1503 07fa DD000000 		.4byte	0xdd
 1504 07fe 74       		.byte	0x74
 1505 07ff 00       		.byte	0
 1506 0800 08       		.uleb128 0x8
 1507 0801 DD000000 		.4byte	0xdd
 1508 0805 10080000 		.4byte	0x810
 1509 0809 09       		.uleb128 0x9
 1510 080a A5000000 		.4byte	0xa5
 1511 080e 0F       		.byte	0xf
 1512 080f 00       		.byte	0
 1513 0810 10       		.uleb128 0x10
 1514 0811 96090000 		.4byte	.LASF129
 1515 0815 02       		.byte	0x2
 1516 0816 0505     		.2byte	0x505
 1517 0818 33070000 		.4byte	0x733
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 101


 1518 081c 16       		.uleb128 0x16
 1519 081d 02       		.byte	0x2
 1520 081e 73000000 		.4byte	0x73
 1521 0822 0B       		.byte	0xb
 1522 0823 3F01     		.2byte	0x13f
 1523 0825 4E0B0000 		.4byte	0xb4e
 1524 0829 17       		.uleb128 0x17
 1525 082a 00080000 		.4byte	.LASF130
 1526 082e 00       		.byte	0
 1527 082f 19       		.uleb128 0x19
 1528 0830 6E070000 		.4byte	.LASF131
 1529 0834 0010     		.2byte	0x1000
 1530 0836 19       		.uleb128 0x19
 1531 0837 B8190000 		.4byte	.LASF132
 1532 083b 0110     		.2byte	0x1001
 1533 083d 19       		.uleb128 0x19
 1534 083e F90B0000 		.4byte	.LASF133
 1535 0842 0210     		.2byte	0x1002
 1536 0844 19       		.uleb128 0x19
 1537 0845 780C0000 		.4byte	.LASF134
 1538 0849 0310     		.2byte	0x1003
 1539 084b 19       		.uleb128 0x19
 1540 084c 17010000 		.4byte	.LASF135
 1541 0850 0410     		.2byte	0x1004
 1542 0852 19       		.uleb128 0x19
 1543 0853 8C1E0000 		.4byte	.LASF136
 1544 0857 0510     		.2byte	0x1005
 1545 0859 19       		.uleb128 0x19
 1546 085a 40150000 		.4byte	.LASF137
 1547 085e 0020     		.2byte	0x2000
 1548 0860 19       		.uleb128 0x19
 1549 0861 6F180000 		.4byte	.LASF138
 1550 0865 0120     		.2byte	0x2001
 1551 0867 19       		.uleb128 0x19
 1552 0868 D2140000 		.4byte	.LASF139
 1553 086c 0220     		.2byte	0x2002
 1554 086e 19       		.uleb128 0x19
 1555 086f 290C0000 		.4byte	.LASF140
 1556 0873 0320     		.2byte	0x2003
 1557 0875 19       		.uleb128 0x19
 1558 0876 340E0000 		.4byte	.LASF141
 1559 087a 0420     		.2byte	0x2004
 1560 087c 19       		.uleb128 0x19
 1561 087d 04110000 		.4byte	.LASF142
 1562 0881 0520     		.2byte	0x2005
 1563 0883 19       		.uleb128 0x19
 1564 0884 A20B0000 		.4byte	.LASF143
 1565 0888 0620     		.2byte	0x2006
 1566 088a 19       		.uleb128 0x19
 1567 088b EB180000 		.4byte	.LASF144
 1568 088f 0720     		.2byte	0x2007
 1569 0891 19       		.uleb128 0x19
 1570 0892 971B0000 		.4byte	.LASF145
 1571 0896 0820     		.2byte	0x2008
 1572 0898 19       		.uleb128 0x19
 1573 0899 B5090000 		.4byte	.LASF146
 1574 089d 0920     		.2byte	0x2009
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 102


 1575 089f 19       		.uleb128 0x19
 1576 08a0 DF070000 		.4byte	.LASF147
 1577 08a4 0A20     		.2byte	0x200a
 1578 08a6 19       		.uleb128 0x19
 1579 08a7 9D030000 		.4byte	.LASF148
 1580 08ab 0B20     		.2byte	0x200b
 1581 08ad 19       		.uleb128 0x19
 1582 08ae 14150000 		.4byte	.LASF149
 1583 08b2 0C20     		.2byte	0x200c
 1584 08b4 19       		.uleb128 0x19
 1585 08b5 2D070000 		.4byte	.LASF150
 1586 08b9 0D20     		.2byte	0x200d
 1587 08bb 19       		.uleb128 0x19
 1588 08bc 0F0E0000 		.4byte	.LASF151
 1589 08c0 0E20     		.2byte	0x200e
 1590 08c2 19       		.uleb128 0x19
 1591 08c3 B5150000 		.4byte	.LASF152
 1592 08c7 0F20     		.2byte	0x200f
 1593 08c9 19       		.uleb128 0x19
 1594 08ca D4100000 		.4byte	.LASF153
 1595 08ce 1020     		.2byte	0x2010
 1596 08d0 19       		.uleb128 0x19
 1597 08d1 B4120000 		.4byte	.LASF154
 1598 08d5 1120     		.2byte	0x2011
 1599 08d7 19       		.uleb128 0x19
 1600 08d8 651B0000 		.4byte	.LASF155
 1601 08dc 1220     		.2byte	0x2012
 1602 08de 19       		.uleb128 0x19
 1603 08df 1E020000 		.4byte	.LASF156
 1604 08e3 1320     		.2byte	0x2013
 1605 08e5 19       		.uleb128 0x19
 1606 08e6 4D0F0000 		.4byte	.LASF157
 1607 08ea 1420     		.2byte	0x2014
 1608 08ec 19       		.uleb128 0x19
 1609 08ed F1040000 		.4byte	.LASF158
 1610 08f1 1520     		.2byte	0x2015
 1611 08f3 19       		.uleb128 0x19
 1612 08f4 A2060000 		.4byte	.LASF159
 1613 08f8 1620     		.2byte	0x2016
 1614 08fa 19       		.uleb128 0x19
 1615 08fb F4030000 		.4byte	.LASF160
 1616 08ff 1720     		.2byte	0x2017
 1617 0901 19       		.uleb128 0x19
 1618 0902 82070000 		.4byte	.LASF161
 1619 0906 0030     		.2byte	0x3000
 1620 0908 19       		.uleb128 0x19
 1621 0909 470A0000 		.4byte	.LASF162
 1622 090d 0130     		.2byte	0x3001
 1623 090f 19       		.uleb128 0x19
 1624 0910 72090000 		.4byte	.LASF163
 1625 0914 0230     		.2byte	0x3002
 1626 0916 19       		.uleb128 0x19
 1627 0917 29190000 		.4byte	.LASF164
 1628 091b 0330     		.2byte	0x3003
 1629 091d 19       		.uleb128 0x19
 1630 091e D4080000 		.4byte	.LASF165
 1631 0922 0430     		.2byte	0x3004
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 103


 1632 0924 19       		.uleb128 0x19
 1633 0925 7E190000 		.4byte	.LASF166
 1634 0929 0530     		.2byte	0x3005
 1635 092b 19       		.uleb128 0x19
 1636 092c EA010000 		.4byte	.LASF167
 1637 0930 0630     		.2byte	0x3006
 1638 0932 19       		.uleb128 0x19
 1639 0933 B41D0000 		.4byte	.LASF168
 1640 0937 0730     		.2byte	0x3007
 1641 0939 19       		.uleb128 0x19
 1642 093a D4110000 		.4byte	.LASF169
 1643 093e 0830     		.2byte	0x3008
 1644 0940 19       		.uleb128 0x19
 1645 0941 210B0000 		.4byte	.LASF170
 1646 0945 0930     		.2byte	0x3009
 1647 0947 19       		.uleb128 0x19
 1648 0948 4D190000 		.4byte	.LASF171
 1649 094c 0A30     		.2byte	0x300a
 1650 094e 19       		.uleb128 0x19
 1651 094f 610D0000 		.4byte	.LASF172
 1652 0953 0B30     		.2byte	0x300b
 1653 0955 19       		.uleb128 0x19
 1654 0956 36010000 		.4byte	.LASF173
 1655 095a 0C30     		.2byte	0x300c
 1656 095c 19       		.uleb128 0x19
 1657 095d BB170000 		.4byte	.LASF174
 1658 0961 1130     		.2byte	0x3011
 1659 0963 19       		.uleb128 0x19
 1660 0964 FB150000 		.4byte	.LASF175
 1661 0968 1230     		.2byte	0x3012
 1662 096a 19       		.uleb128 0x19
 1663 096b 441A0000 		.4byte	.LASF176
 1664 096f 1330     		.2byte	0x3013
 1665 0971 19       		.uleb128 0x19
 1666 0972 99180000 		.4byte	.LASF177
 1667 0976 1430     		.2byte	0x3014
 1668 0978 19       		.uleb128 0x19
 1669 0979 34170000 		.4byte	.LASF178
 1670 097d 1530     		.2byte	0x3015
 1671 097f 19       		.uleb128 0x19
 1672 0980 F60F0000 		.4byte	.LASF179
 1673 0984 1630     		.2byte	0x3016
 1674 0986 19       		.uleb128 0x19
 1675 0987 D40F0000 		.4byte	.LASF180
 1676 098b 1730     		.2byte	0x3017
 1677 098d 19       		.uleb128 0x19
 1678 098e 9E0C0000 		.4byte	.LASF181
 1679 0992 1830     		.2byte	0x3018
 1680 0994 19       		.uleb128 0x19
 1681 0995 69130000 		.4byte	.LASF182
 1682 0999 0040     		.2byte	0x4000
 1683 099b 19       		.uleb128 0x19
 1684 099c 7D1D0000 		.4byte	.LASF183
 1685 09a0 0140     		.2byte	0x4001
 1686 09a2 19       		.uleb128 0x19
 1687 09a3 1B1D0000 		.4byte	.LASF184
 1688 09a7 0240     		.2byte	0x4002
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 104


 1689 09a9 19       		.uleb128 0x19
 1690 09aa B51A0000 		.4byte	.LASF185
 1691 09ae 0340     		.2byte	0x4003
 1692 09b0 19       		.uleb128 0x19
 1693 09b1 300F0000 		.4byte	.LASF186
 1694 09b5 0440     		.2byte	0x4004
 1695 09b7 19       		.uleb128 0x19
 1696 09b8 D51E0000 		.4byte	.LASF187
 1697 09bc 0540     		.2byte	0x4005
 1698 09be 19       		.uleb128 0x19
 1699 09bf A2000000 		.4byte	.LASF188
 1700 09c3 0640     		.2byte	0x4006
 1701 09c5 19       		.uleb128 0x19
 1702 09c6 270A0000 		.4byte	.LASF189
 1703 09ca 0740     		.2byte	0x4007
 1704 09cc 19       		.uleb128 0x19
 1705 09cd C6160000 		.4byte	.LASF190
 1706 09d1 0840     		.2byte	0x4008
 1707 09d3 19       		.uleb128 0x19
 1708 09d4 54090000 		.4byte	.LASF191
 1709 09d8 0940     		.2byte	0x4009
 1710 09da 19       		.uleb128 0x19
 1711 09db 511F0000 		.4byte	.LASF192
 1712 09df 0A40     		.2byte	0x400a
 1713 09e1 19       		.uleb128 0x19
 1714 09e2 850D0000 		.4byte	.LASF193
 1715 09e6 0B40     		.2byte	0x400b
 1716 09e8 19       		.uleb128 0x19
 1717 09e9 8F120000 		.4byte	.LASF194
 1718 09ed 0C40     		.2byte	0x400c
 1719 09ef 19       		.uleb128 0x19
 1720 09f0 870E0000 		.4byte	.LASF195
 1721 09f4 0D40     		.2byte	0x400d
 1722 09f6 19       		.uleb128 0x19
 1723 09f7 CE130000 		.4byte	.LASF196
 1724 09fb 0E40     		.2byte	0x400e
 1725 09fd 19       		.uleb128 0x19
 1726 09fe D3090000 		.4byte	.LASF197
 1727 0a02 0F40     		.2byte	0x400f
 1728 0a04 19       		.uleb128 0x19
 1729 0a05 49080000 		.4byte	.LASF198
 1730 0a09 1040     		.2byte	0x4010
 1731 0a0b 19       		.uleb128 0x19
 1732 0a0c CE1B0000 		.4byte	.LASF199
 1733 0a10 1140     		.2byte	0x4011
 1734 0a12 19       		.uleb128 0x19
 1735 0a13 610B0000 		.4byte	.LASF200
 1736 0a17 1240     		.2byte	0x4012
 1737 0a19 19       		.uleb128 0x19
 1738 0a1a F7170000 		.4byte	.LASF201
 1739 0a1e 1340     		.2byte	0x4013
 1740 0a20 19       		.uleb128 0x19
 1741 0a21 AD130000 		.4byte	.LASF202
 1742 0a25 1440     		.2byte	0x4014
 1743 0a27 19       		.uleb128 0x19
 1744 0a28 EA050000 		.4byte	.LASF203
 1745 0a2c 1540     		.2byte	0x4015
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 105


 1746 0a2e 19       		.uleb128 0x19
 1747 0a2f A51E0000 		.4byte	.LASF204
 1748 0a33 1640     		.2byte	0x4016
 1749 0a35 19       		.uleb128 0x19
 1750 0a36 B5020000 		.4byte	.LASF205
 1751 0a3a 1740     		.2byte	0x4017
 1752 0a3c 19       		.uleb128 0x19
 1753 0a3d 8B100000 		.4byte	.LASF206
 1754 0a41 1840     		.2byte	0x4018
 1755 0a43 19       		.uleb128 0x19
 1756 0a44 55170000 		.4byte	.LASF207
 1757 0a48 1940     		.2byte	0x4019
 1758 0a4a 19       		.uleb128 0x19
 1759 0a4b 72150000 		.4byte	.LASF208
 1760 0a4f 0050     		.2byte	0x5000
 1761 0a51 19       		.uleb128 0x19
 1762 0a52 66040000 		.4byte	.LASF209
 1763 0a56 0150     		.2byte	0x5001
 1764 0a58 19       		.uleb128 0x19
 1765 0a59 651C0000 		.4byte	.LASF210
 1766 0a5d 0250     		.2byte	0x5002
 1767 0a5f 19       		.uleb128 0x19
 1768 0a60 CB1C0000 		.4byte	.LASF211
 1769 0a64 0350     		.2byte	0x5003
 1770 0a66 19       		.uleb128 0x19
 1771 0a67 5A060000 		.4byte	.LASF212
 1772 0a6b 0450     		.2byte	0x5004
 1773 0a6d 19       		.uleb128 0x19
 1774 0a6e 8D150000 		.4byte	.LASF213
 1775 0a72 0550     		.2byte	0x5005
 1776 0a74 19       		.uleb128 0x19
 1777 0a75 D10D0000 		.4byte	.LASF214
 1778 0a79 0650     		.2byte	0x5006
 1779 0a7b 19       		.uleb128 0x19
 1780 0a7c BF030000 		.4byte	.LASF215
 1781 0a80 0750     		.2byte	0x5007
 1782 0a82 19       		.uleb128 0x19
 1783 0a83 C9040000 		.4byte	.LASF216
 1784 0a87 0850     		.2byte	0x5008
 1785 0a89 19       		.uleb128 0x19
 1786 0a8a CE060000 		.4byte	.LASF217
 1787 0a8e 0950     		.2byte	0x5009
 1788 0a90 19       		.uleb128 0x19
 1789 0a91 E8060000 		.4byte	.LASF218
 1790 0a95 0A50     		.2byte	0x500a
 1791 0a97 19       		.uleb128 0x19
 1792 0a98 83170000 		.4byte	.LASF219
 1793 0a9c 0B50     		.2byte	0x500b
 1794 0a9e 19       		.uleb128 0x19
 1795 0a9f E0150000 		.4byte	.LASF220
 1796 0aa3 0C50     		.2byte	0x500c
 1797 0aa5 19       		.uleb128 0x19
 1798 0aa6 C60B0000 		.4byte	.LASF221
 1799 0aaa 0D50     		.2byte	0x500d
 1800 0aac 19       		.uleb128 0x19
 1801 0aad 951D0000 		.4byte	.LASF222
 1802 0ab1 0E50     		.2byte	0x500e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 106


 1803 0ab3 19       		.uleb128 0x19
 1804 0ab4 810A0000 		.4byte	.LASF223
 1805 0ab8 0F50     		.2byte	0x500f
 1806 0aba 19       		.uleb128 0x19
 1807 0abb 4F180000 		.4byte	.LASF224
 1808 0abf 1050     		.2byte	0x5010
 1809 0ac1 19       		.uleb128 0x19
 1810 0ac2 961C0000 		.4byte	.LASF225
 1811 0ac6 1150     		.2byte	0x5011
 1812 0ac8 19       		.uleb128 0x19
 1813 0ac9 5A010000 		.4byte	.LASF226
 1814 0acd 1250     		.2byte	0x5012
 1815 0acf 19       		.uleb128 0x19
 1816 0ad0 BD070000 		.4byte	.LASF227
 1817 0ad4 1350     		.2byte	0x5013
 1818 0ad6 19       		.uleb128 0x19
 1819 0ad7 79060000 		.4byte	.LASF228
 1820 0adb 1450     		.2byte	0x5014
 1821 0add 19       		.uleb128 0x19
 1822 0ade 6E080000 		.4byte	.LASF229
 1823 0ae2 1550     		.2byte	0x5015
 1824 0ae4 19       		.uleb128 0x19
 1825 0ae5 EA1C0000 		.4byte	.LASF230
 1826 0ae9 1650     		.2byte	0x5016
 1827 0aeb 19       		.uleb128 0x19
 1828 0aec 0D050000 		.4byte	.LASF231
 1829 0af0 1750     		.2byte	0x5017
 1830 0af2 19       		.uleb128 0x19
 1831 0af3 07120000 		.4byte	.LASF232
 1832 0af7 1850     		.2byte	0x5018
 1833 0af9 19       		.uleb128 0x19
 1834 0afa F41D0000 		.4byte	.LASF233
 1835 0afe 0060     		.2byte	0x6000
 1836 0b00 19       		.uleb128 0x19
 1837 0b01 121C0000 		.4byte	.LASF234
 1838 0b05 0160     		.2byte	0x6001
 1839 0b07 19       		.uleb128 0x19
 1840 0b08 741A0000 		.4byte	.LASF235
 1841 0b0c 0260     		.2byte	0x6002
 1842 0b0e 19       		.uleb128 0x19
 1843 0b0f 8E130000 		.4byte	.LASF236
 1844 0b13 0360     		.2byte	0x6003
 1845 0b15 19       		.uleb128 0x19
 1846 0b16 27100000 		.4byte	.LASF237
 1847 0b1a 0460     		.2byte	0x6004
 1848 0b1c 19       		.uleb128 0x19
 1849 0b1d 2D180000 		.4byte	.LASF238
 1850 0b21 0560     		.2byte	0x6005
 1851 0b23 19       		.uleb128 0x19
 1852 0b24 F60A0000 		.4byte	.LASF239
 1853 0b28 0660     		.2byte	0x6006
 1854 0b2a 19       		.uleb128 0x19
 1855 0b2b 52000000 		.4byte	.LASF240
 1856 0b2f 0760     		.2byte	0x6007
 1857 0b31 19       		.uleb128 0x19
 1858 0b32 72020000 		.4byte	.LASF241
 1859 0b36 0860     		.2byte	0x6008
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 107


 1860 0b38 19       		.uleb128 0x19
 1861 0b39 F3000000 		.4byte	.LASF242
 1862 0b3d 0960     		.2byte	0x6009
 1863 0b3f 19       		.uleb128 0x19
 1864 0b40 09130000 		.4byte	.LASF243
 1865 0b44 0A60     		.2byte	0x600a
 1866 0b46 19       		.uleb128 0x19
 1867 0b47 DC0A0000 		.4byte	.LASF244
 1868 0b4b FFFF     		.2byte	0xffff
 1869 0b4d 00       		.byte	0
 1870 0b4e 18       		.uleb128 0x18
 1871 0b4f 02       		.byte	0x2
 1872 0b50 0C       		.byte	0xc
 1873 0b51 5B01     		.2byte	0x15b
 1874 0b53 720B0000 		.4byte	0xb72
 1875 0b57 15       		.uleb128 0x15
 1876 0b58 401D0000 		.4byte	.LASF245
 1877 0b5c 0C       		.byte	0xc
 1878 0b5d 6501     		.2byte	0x165
 1879 0b5f BC000000 		.4byte	0xbc
 1880 0b63 00       		.byte	0
 1881 0b64 15       		.uleb128 0x15
 1882 0b65 AA090000 		.4byte	.LASF246
 1883 0b69 0C       		.byte	0xc
 1884 0b6a 6901     		.2byte	0x169
 1885 0b6c BC000000 		.4byte	0xbc
 1886 0b70 01       		.byte	0x1
 1887 0b71 00       		.byte	0
 1888 0b72 10       		.uleb128 0x10
 1889 0b73 2C160000 		.4byte	.LASF247
 1890 0b77 0C       		.byte	0xc
 1891 0b78 6B01     		.2byte	0x16b
 1892 0b7a 4E0B0000 		.4byte	0xb4e
 1893 0b7e 1A       		.uleb128 0x1a
 1894 0b7f 01       		.byte	0x1
 1895 0b80 5A000000 		.4byte	0x5a
 1896 0b84 0D       		.byte	0xd
 1897 0b85 7E       		.byte	0x7e
 1898 0b86 A30B0000 		.4byte	0xba3
 1899 0b8a 17       		.uleb128 0x17
 1900 0b8b 96040000 		.4byte	.LASF248
 1901 0b8f 00       		.byte	0
 1902 0b90 17       		.uleb128 0x17
 1903 0b91 0A090000 		.4byte	.LASF249
 1904 0b95 01       		.byte	0x1
 1905 0b96 17       		.uleb128 0x17
 1906 0b97 440B0000 		.4byte	.LASF250
 1907 0b9b 02       		.byte	0x2
 1908 0b9c 17       		.uleb128 0x17
 1909 0b9d C40C0000 		.4byte	.LASF251
 1910 0ba1 03       		.byte	0x3
 1911 0ba2 00       		.byte	0
 1912 0ba3 04       		.uleb128 0x4
 1913 0ba4 BE080000 		.4byte	.LASF252
 1914 0ba8 0D       		.byte	0xd
 1915 0ba9 83       		.byte	0x83
 1916 0baa 7E0B0000 		.4byte	0xb7e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 108


 1917 0bae 1A       		.uleb128 0x1a
 1918 0baf 01       		.byte	0x1
 1919 0bb0 5A000000 		.4byte	0x5a
 1920 0bb4 0D       		.byte	0xd
 1921 0bb5 87       		.byte	0x87
 1922 0bb6 EB0B0000 		.4byte	0xbeb
 1923 0bba 17       		.uleb128 0x17
 1924 0bbb F01E0000 		.4byte	.LASF253
 1925 0bbf 00       		.byte	0
 1926 0bc0 17       		.uleb128 0x17
 1927 0bc1 29060000 		.4byte	.LASF254
 1928 0bc5 01       		.byte	0x1
 1929 0bc6 17       		.uleb128 0x17
 1930 0bc7 1E140000 		.4byte	.LASF255
 1931 0bcb 02       		.byte	0x2
 1932 0bcc 17       		.uleb128 0x17
 1933 0bcd 0F1F0000 		.4byte	.LASF256
 1934 0bd1 03       		.byte	0x3
 1935 0bd2 17       		.uleb128 0x17
 1936 0bd3 7A140000 		.4byte	.LASF257
 1937 0bd7 04       		.byte	0x4
 1938 0bd8 17       		.uleb128 0x17
 1939 0bd9 F40C0000 		.4byte	.LASF258
 1940 0bdd 05       		.byte	0x5
 1941 0bde 17       		.uleb128 0x17
 1942 0bdf F3130000 		.4byte	.LASF259
 1943 0be3 06       		.byte	0x6
 1944 0be4 17       		.uleb128 0x17
 1945 0be5 B7010000 		.4byte	.LASF260
 1946 0be9 07       		.byte	0x7
 1947 0bea 00       		.byte	0
 1948 0beb 04       		.uleb128 0x4
 1949 0bec 86030000 		.4byte	.LASF261
 1950 0bf0 0D       		.byte	0xd
 1951 0bf1 90       		.byte	0x90
 1952 0bf2 AE0B0000 		.4byte	0xbae
 1953 0bf6 1A       		.uleb128 0x1a
 1954 0bf7 01       		.byte	0x1
 1955 0bf8 5A000000 		.4byte	0x5a
 1956 0bfc 0E       		.byte	0xe
 1957 0bfd 29       		.byte	0x29
 1958 0bfe 3F0C0000 		.4byte	0xc3f
 1959 0c02 17       		.uleb128 0x17
 1960 0c03 37120000 		.4byte	.LASF262
 1961 0c07 00       		.byte	0
 1962 0c08 17       		.uleb128 0x17
 1963 0c09 AC0D0000 		.4byte	.LASF263
 1964 0c0d 01       		.byte	0x1
 1965 0c0e 17       		.uleb128 0x17
 1966 0c0f 39030000 		.4byte	.LASF264
 1967 0c13 02       		.byte	0x2
 1968 0c14 17       		.uleb128 0x17
 1969 0c15 AE160000 		.4byte	.LASF265
 1970 0c19 03       		.byte	0x3
 1971 0c1a 17       		.uleb128 0x17
 1972 0c1b A4140000 		.4byte	.LASF266
 1973 0c1f 04       		.byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 109


 1974 0c20 17       		.uleb128 0x17
 1975 0c21 B70A0000 		.4byte	.LASF267
 1976 0c25 05       		.byte	0x5
 1977 0c26 17       		.uleb128 0x17
 1978 0c27 D1180000 		.4byte	.LASF268
 1979 0c2b 06       		.byte	0x6
 1980 0c2c 17       		.uleb128 0x17
 1981 0c2d 0E030000 		.4byte	.LASF269
 1982 0c31 07       		.byte	0x7
 1983 0c32 17       		.uleb128 0x17
 1984 0c33 660A0000 		.4byte	.LASF270
 1985 0c37 08       		.byte	0x8
 1986 0c38 17       		.uleb128 0x17
 1987 0c39 DD000000 		.4byte	.LASF271
 1988 0c3d 09       		.byte	0x9
 1989 0c3e 00       		.byte	0
 1990 0c3f 1A       		.uleb128 0x1a
 1991 0c40 01       		.byte	0x1
 1992 0c41 5A000000 		.4byte	0x5a
 1993 0c45 0F       		.byte	0xf
 1994 0c46 28       		.byte	0x28
 1995 0c47 6A0C0000 		.4byte	0xc6a
 1996 0c4b 17       		.uleb128 0x17
 1997 0c4c 73100000 		.4byte	.LASF272
 1998 0c50 00       		.byte	0
 1999 0c51 17       		.uleb128 0x17
 2000 0c52 11000000 		.4byte	.LASF273
 2001 0c56 01       		.byte	0x1
 2002 0c57 17       		.uleb128 0x17
 2003 0c58 52130000 		.4byte	.LASF274
 2004 0c5c 02       		.byte	0x2
 2005 0c5d 17       		.uleb128 0x17
 2006 0c5e 3A140000 		.4byte	.LASF275
 2007 0c62 03       		.byte	0x3
 2008 0c63 17       		.uleb128 0x17
 2009 0c64 4D0C0000 		.4byte	.LASF276
 2010 0c68 04       		.byte	0x4
 2011 0c69 00       		.byte	0
 2012 0c6a 1A       		.uleb128 0x1a
 2013 0c6b 01       		.byte	0x1
 2014 0c6c 5A000000 		.4byte	0x5a
 2015 0c70 0F       		.byte	0xf
 2016 0c71 32       		.byte	0x32
 2017 0c72 890C0000 		.4byte	0xc89
 2018 0c76 17       		.uleb128 0x17
 2019 0c77 19190000 		.4byte	.LASF277
 2020 0c7b 00       		.byte	0
 2021 0c7c 17       		.uleb128 0x17
 2022 0c7d A9190000 		.4byte	.LASF278
 2023 0c81 01       		.byte	0x1
 2024 0c82 17       		.uleb128 0x17
 2025 0c83 451B0000 		.4byte	.LASF279
 2026 0c87 02       		.byte	0x2
 2027 0c88 00       		.byte	0
 2028 0c89 16       		.uleb128 0x16
 2029 0c8a 01       		.byte	0x1
 2030 0c8b 5A000000 		.4byte	0x5a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 110


 2031 0c8f 10       		.byte	0x10
 2032 0c90 B108     		.2byte	0x8b1
 2033 0c92 A90C0000 		.4byte	0xca9
 2034 0c96 17       		.uleb128 0x17
 2035 0c97 E40C0000 		.4byte	.LASF280
 2036 0c9b 00       		.byte	0
 2037 0c9c 17       		.uleb128 0x17
 2038 0c9d CB190000 		.4byte	.LASF281
 2039 0ca1 01       		.byte	0x1
 2040 0ca2 17       		.uleb128 0x17
 2041 0ca3 CB000000 		.4byte	.LASF282
 2042 0ca7 02       		.byte	0x2
 2043 0ca8 00       		.byte	0
 2044 0ca9 0A       		.uleb128 0xa
 2045 0caa 14       		.byte	0x14
 2046 0cab 03       		.byte	0x3
 2047 0cac 3B       		.byte	0x3b
 2048 0cad EE0C0000 		.4byte	0xcee
 2049 0cb1 0C       		.uleb128 0xc
 2050 0cb2 65030000 		.4byte	.LASF283
 2051 0cb6 03       		.byte	0x3
 2052 0cb7 3D       		.byte	0x3d
 2053 0cb8 DD000000 		.4byte	0xdd
 2054 0cbc 00       		.byte	0
 2055 0cbd 0C       		.uleb128 0xc
 2056 0cbe 3D080000 		.4byte	.LASF284
 2057 0cc2 03       		.byte	0x3
 2058 0cc3 3E       		.byte	0x3e
 2059 0cc4 DD000000 		.4byte	0xdd
 2060 0cc8 04       		.byte	0x4
 2061 0cc9 0C       		.uleb128 0xc
 2062 0cca 19040000 		.4byte	.LASF285
 2063 0cce 03       		.byte	0x3
 2064 0ccf 3F       		.byte	0x3f
 2065 0cd0 EE0C0000 		.4byte	0xcee
 2066 0cd4 08       		.byte	0x8
 2067 0cd5 0C       		.uleb128 0xc
 2068 0cd6 D71D0000 		.4byte	.LASF286
 2069 0cda 03       		.byte	0x3
 2070 0cdb 40       		.byte	0x40
 2071 0cdc DD000000 		.4byte	0xdd
 2072 0ce0 0C       		.byte	0xc
 2073 0ce1 0C       		.uleb128 0xc
 2074 0ce2 481C0000 		.4byte	.LASF287
 2075 0ce6 03       		.byte	0x3
 2076 0ce7 45       		.byte	0x45
 2077 0ce8 DD000000 		.4byte	0xdd
 2078 0cec 10       		.byte	0x10
 2079 0ced 00       		.byte	0
 2080 0cee 11       		.uleb128 0x11
 2081 0cef 04       		.byte	0x4
 2082 0cf0 F40C0000 		.4byte	0xcf4
 2083 0cf4 07       		.uleb128 0x7
 2084 0cf5 10080000 		.4byte	0x810
 2085 0cf9 04       		.uleb128 0x4
 2086 0cfa 40130000 		.4byte	.LASF288
 2087 0cfe 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 111


 2088 0cff 48       		.byte	0x48
 2089 0d00 A90C0000 		.4byte	0xca9
 2090 0d04 04       		.uleb128 0x4
 2091 0d05 24110000 		.4byte	.LASF289
 2092 0d09 11       		.byte	0x11
 2093 0d0a 62       		.byte	0x62
 2094 0d0b 85000000 		.4byte	0x85
 2095 0d0f 04       		.uleb128 0x4
 2096 0d10 6F140000 		.4byte	.LASF290
 2097 0d14 11       		.byte	0x11
 2098 0d15 69       		.byte	0x69
 2099 0d16 DD000000 		.4byte	0xdd
 2100 0d1a 04       		.uleb128 0x4
 2101 0d1b 630E0000 		.4byte	.LASF291
 2102 0d1f 12       		.byte	0x12
 2103 0d20 58       		.byte	0x58
 2104 0d21 AC000000 		.4byte	0xac
 2105 0d25 1A       		.uleb128 0x1a
 2106 0d26 01       		.byte	0x1
 2107 0d27 5A000000 		.4byte	0x5a
 2108 0d2b 13       		.byte	0x13
 2109 0d2c 3A       		.byte	0x3a
 2110 0d2d 4A0D0000 		.4byte	0xd4a
 2111 0d31 17       		.uleb128 0x17
 2112 0d32 07070000 		.4byte	.LASF292
 2113 0d36 00       		.byte	0
 2114 0d37 17       		.uleb128 0x17
 2115 0d38 C8140000 		.4byte	.LASF293
 2116 0d3c 01       		.byte	0x1
 2117 0d3d 17       		.uleb128 0x17
 2118 0d3e B61C0000 		.4byte	.LASF294
 2119 0d42 02       		.byte	0x2
 2120 0d43 17       		.uleb128 0x17
 2121 0d44 91010000 		.4byte	.LASF295
 2122 0d48 03       		.byte	0x3
 2123 0d49 00       		.byte	0
 2124 0d4a 04       		.uleb128 0x4
 2125 0d4b 291E0000 		.4byte	.LASF296
 2126 0d4f 13       		.byte	0x13
 2127 0d50 3F       		.byte	0x3f
 2128 0d51 250D0000 		.4byte	0xd25
 2129 0d55 1A       		.uleb128 0x1a
 2130 0d56 01       		.byte	0x1
 2131 0d57 5A000000 		.4byte	0x5a
 2132 0d5b 14       		.byte	0x14
 2133 0d5c 3C       		.byte	0x3c
 2134 0d5d 740D0000 		.4byte	0xd74
 2135 0d61 17       		.uleb128 0x17
 2136 0d62 2F110000 		.4byte	.LASF297
 2137 0d66 00       		.byte	0
 2138 0d67 17       		.uleb128 0x17
 2139 0d68 DE030000 		.4byte	.LASF298
 2140 0d6c 01       		.byte	0x1
 2141 0d6d 17       		.uleb128 0x17
 2142 0d6e F30D0000 		.4byte	.LASF299
 2143 0d72 02       		.byte	0x2
 2144 0d73 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 112


 2145 0d74 04       		.uleb128 0x4
 2146 0d75 AA080000 		.4byte	.LASF300
 2147 0d79 14       		.byte	0x14
 2148 0d7a 40       		.byte	0x40
 2149 0d7b 550D0000 		.4byte	0xd55
 2150 0d7f 0A       		.uleb128 0xa
 2151 0d80 08       		.byte	0x8
 2152 0d81 14       		.byte	0x14
 2153 0d82 43       		.byte	0x43
 2154 0d83 A00D0000 		.4byte	0xda0
 2155 0d87 0C       		.uleb128 0xc
 2156 0d88 01130000 		.4byte	.LASF301
 2157 0d8c 14       		.byte	0x14
 2158 0d8d 45       		.byte	0x45
 2159 0d8e 740D0000 		.4byte	0xd74
 2160 0d92 00       		.byte	0
 2161 0d93 0C       		.uleb128 0xc
 2162 0d94 110F0000 		.4byte	.LASF302
 2163 0d98 14       		.byte	0x14
 2164 0d99 46       		.byte	0x46
 2165 0d9a 25000000 		.4byte	0x25
 2166 0d9e 04       		.byte	0x4
 2167 0d9f 00       		.byte	0
 2168 0da0 04       		.uleb128 0x4
 2169 0da1 0D1D0000 		.4byte	.LASF303
 2170 0da5 14       		.byte	0x14
 2171 0da6 47       		.byte	0x47
 2172 0da7 7F0D0000 		.4byte	0xd7f
 2173 0dab 04       		.uleb128 0x4
 2174 0dac 60070000 		.4byte	.LASF304
 2175 0db0 15       		.byte	0x15
 2176 0db1 76       		.byte	0x76
 2177 0db2 AC000000 		.4byte	0xac
 2178 0db6 1B       		.uleb128 0x1b
 2179 0db7 F7190000 		.4byte	.LASF320
 2180 0dbb 02       		.byte	0x2
 2181 0dbc FB05     		.2byte	0x5fb
 2182 0dbe DD000000 		.4byte	0xdd
 2183 0dc2 03       		.byte	0x3
 2184 0dc3 D40D0000 		.4byte	0xdd4
 2185 0dc7 1C       		.uleb128 0x1c
 2186 0dc8 13080000 		.4byte	.LASF305
 2187 0dcc 02       		.byte	0x2
 2188 0dcd FB05     		.2byte	0x5fb
 2189 0dcf D40D0000 		.4byte	0xdd4
 2190 0dd3 00       		.byte	0
 2191 0dd4 11       		.uleb128 0x11
 2192 0dd5 04       		.byte	0x4
 2193 0dd6 DA0D0000 		.4byte	0xdda
 2194 0dda 07       		.uleb128 0x7
 2195 0ddb 11060000 		.4byte	0x611
 2196 0ddf 1D       		.uleb128 0x1d
 2197 0de0 E1120000 		.4byte	.LASF306
 2198 0de4 02       		.byte	0x2
 2199 0de5 1706     		.2byte	0x617
 2200 0de7 03       		.byte	0x3
 2201 0de8 050E0000 		.4byte	0xe05
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 113


 2202 0dec 1C       		.uleb128 0x1c
 2203 0ded 13080000 		.4byte	.LASF305
 2204 0df1 02       		.byte	0x2
 2205 0df2 1706     		.2byte	0x617
 2206 0df4 050E0000 		.4byte	0xe05
 2207 0df8 1C       		.uleb128 0x1c
 2208 0df9 391F0000 		.4byte	.LASF122
 2209 0dfd 02       		.byte	0x2
 2210 0dfe 1706     		.2byte	0x617
 2211 0e00 DD000000 		.4byte	0xdd
 2212 0e04 00       		.byte	0
 2213 0e05 11       		.uleb128 0x11
 2214 0e06 04       		.byte	0x4
 2215 0e07 11060000 		.4byte	0x611
 2216 0e0b 1D       		.uleb128 0x1d
 2217 0e0c FA1A0000 		.4byte	.LASF307
 2218 0e10 04       		.byte	0x4
 2219 0e11 4503     		.2byte	0x345
 2220 0e13 03       		.byte	0x3
 2221 0e14 310E0000 		.4byte	0xe31
 2222 0e18 1C       		.uleb128 0x1c
 2223 0e19 13080000 		.4byte	.LASF305
 2224 0e1d 04       		.byte	0x4
 2225 0e1e 4503     		.2byte	0x345
 2226 0e20 310E0000 		.4byte	0xe31
 2227 0e24 1C       		.uleb128 0x1c
 2228 0e25 6D1A0000 		.4byte	.LASF308
 2229 0e29 04       		.byte	0x4
 2230 0e2a 4503     		.2byte	0x345
 2231 0e2c DD000000 		.4byte	0xdd
 2232 0e30 00       		.byte	0
 2233 0e31 11       		.uleb128 0x11
 2234 0e32 04       		.byte	0x4
 2235 0e33 20020000 		.4byte	0x220
 2236 0e37 1E       		.uleb128 0x1e
 2237 0e38 230D0000 		.4byte	.LASF309
 2238 0e3c 03       		.byte	0x3
 2239 0e3d 2305     		.2byte	0x523
 2240 0e3f 03       		.byte	0x3
 2241 0e40 1E       		.uleb128 0x1e
 2242 0e41 3F1E0000 		.4byte	.LASF310
 2243 0e45 03       		.byte	0x3
 2244 0e46 4605     		.2byte	0x546
 2245 0e48 03       		.byte	0x3
 2246 0e49 1D       		.uleb128 0x1d
 2247 0e4a AF170000 		.4byte	.LASF311
 2248 0e4e 04       		.byte	0x4
 2249 0e4f 2703     		.2byte	0x327
 2250 0e51 03       		.byte	0x3
 2251 0e52 6F0E0000 		.4byte	0xe6f
 2252 0e56 1C       		.uleb128 0x1c
 2253 0e57 13080000 		.4byte	.LASF305
 2254 0e5b 04       		.byte	0x4
 2255 0e5c 2703     		.2byte	0x327
 2256 0e5e 310E0000 		.4byte	0xe31
 2257 0e62 1C       		.uleb128 0x1c
 2258 0e63 6D1A0000 		.4byte	.LASF308
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 114


 2259 0e67 04       		.byte	0x4
 2260 0e68 2703     		.2byte	0x327
 2261 0e6a DD000000 		.4byte	0xdd
 2262 0e6e 00       		.byte	0
 2263 0e6f 1F       		.uleb128 0x1f
 2264 0e70 BB0F0000 		.4byte	.LASF312
 2265 0e74 01       		.byte	0x1
 2266 0e75 2001     		.2byte	0x120
 2267 0e77 00000000 		.4byte	.LFB524
 2268 0e7b 24000000 		.4byte	.LFE524-.LFB524
 2269 0e7f 01       		.uleb128 0x1
 2270 0e80 9C       		.byte	0x9c
 2271 0e81 CB0E0000 		.4byte	0xecb
 2272 0e85 20       		.uleb128 0x20
 2273 0e86 B8180000 		.4byte	.LASF316
 2274 0e8a 01       		.byte	0x1
 2275 0e8b 2001     		.2byte	0x120
 2276 0e8d AB0D0000 		.4byte	0xdab
 2277 0e91 00000000 		.4byte	.LLST0
 2278 0e95 21       		.uleb128 0x21
 2279 0e96 1E160000 		.4byte	.LASF314
 2280 0e9a 01       		.byte	0x1
 2281 0e9b 2301     		.2byte	0x123
 2282 0e9d 040D0000 		.4byte	0xd04
 2283 0ea1 22       		.uleb128 0x22
 2284 0ea2 D10E0000 		.4byte	.LASF319
 2285 0ea6 01       		.byte	0x1
 2286 0ea7 2901     		.2byte	0x129
 2287 0ea9 4A0D0000 		.4byte	0xd4a
 2288 0ead 02       		.uleb128 0x2
 2289 0eae 91       		.byte	0x91
 2290 0eaf 77       		.sleb128 -9
 2291 0eb0 23       		.uleb128 0x23
 2292 0eb1 18000000 		.4byte	.LVL2
 2293 0eb5 1B140000 		.4byte	0x141b
 2294 0eb9 24       		.uleb128 0x24
 2295 0eba 01       		.uleb128 0x1
 2296 0ebb 51       		.byte	0x51
 2297 0ebc 02       		.uleb128 0x2
 2298 0ebd 91       		.byte	0x91
 2299 0ebe 77       		.sleb128 -9
 2300 0ebf 24       		.uleb128 0x24
 2301 0ec0 01       		.uleb128 0x1
 2302 0ec1 52       		.byte	0x52
 2303 0ec2 01       		.uleb128 0x1
 2304 0ec3 30       		.byte	0x30
 2305 0ec4 24       		.uleb128 0x24
 2306 0ec5 01       		.uleb128 0x1
 2307 0ec6 53       		.byte	0x53
 2308 0ec7 01       		.uleb128 0x1
 2309 0ec8 30       		.byte	0x30
 2310 0ec9 00       		.byte	0
 2311 0eca 00       		.byte	0
 2312 0ecb 1F       		.uleb128 0x1f
 2313 0ecc 710E0000 		.4byte	.LASF313
 2314 0ed0 01       		.byte	0x1
 2315 0ed1 4301     		.2byte	0x143
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 115


 2316 0ed3 00000000 		.4byte	.LFB525
 2317 0ed7 40000000 		.4byte	.LFE525-.LFB525
 2318 0edb 01       		.uleb128 0x1
 2319 0edc 9C       		.byte	0x9c
 2320 0edd 490F0000 		.4byte	0xf49
 2321 0ee1 21       		.uleb128 0x21
 2322 0ee2 1E160000 		.4byte	.LASF314
 2323 0ee6 01       		.byte	0x1
 2324 0ee7 4601     		.2byte	0x146
 2325 0ee9 040D0000 		.4byte	0xd04
 2326 0eed 25       		.uleb128 0x25
 2327 0eee 16000000 		.4byte	.LVL3
 2328 0ef2 27140000 		.4byte	0x1427
 2329 0ef6 1F0F0000 		.4byte	0xf1f
 2330 0efa 24       		.uleb128 0x24
 2331 0efb 01       		.uleb128 0x1
 2332 0efc 50       		.byte	0x50
 2333 0efd 05       		.uleb128 0x5
 2334 0efe 03       		.byte	0x3
 2335 0eff 00000000 		.4byte	.LC0
 2336 0f03 24       		.uleb128 0x24
 2337 0f04 01       		.uleb128 0x1
 2338 0f05 51       		.byte	0x51
 2339 0f06 03       		.uleb128 0x3
 2340 0f07 0A       		.byte	0xa
 2341 0f08 1027     		.2byte	0x2710
 2342 0f0a 24       		.uleb128 0x24
 2343 0f0b 01       		.uleb128 0x1
 2344 0f0c 52       		.byte	0x52
 2345 0f0d 01       		.uleb128 0x1
 2346 0f0e 31       		.byte	0x31
 2347 0f0f 24       		.uleb128 0x24
 2348 0f10 01       		.uleb128 0x1
 2349 0f11 53       		.byte	0x53
 2350 0f12 01       		.uleb128 0x1
 2351 0f13 30       		.byte	0x30
 2352 0f14 24       		.uleb128 0x24
 2353 0f15 02       		.uleb128 0x2
 2354 0f16 7D       		.byte	0x7d
 2355 0f17 00       		.sleb128 0
 2356 0f18 05       		.uleb128 0x5
 2357 0f19 03       		.byte	0x3
 2358 0f1a 00000000 		.4byte	TemperatureTimerCallback
 2359 0f1e 00       		.byte	0
 2360 0f1f 26       		.uleb128 0x26
 2361 0f20 22000000 		.4byte	.LVL4
 2362 0f24 33140000 		.4byte	0x1433
 2363 0f28 23       		.uleb128 0x23
 2364 0f29 30000000 		.4byte	.LVL5
 2365 0f2d 3F140000 		.4byte	0x143f
 2366 0f31 24       		.uleb128 0x24
 2367 0f32 01       		.uleb128 0x1
 2368 0f33 50       		.byte	0x50
 2369 0f34 02       		.uleb128 0x2
 2370 0f35 74       		.byte	0x74
 2371 0f36 00       		.sleb128 0
 2372 0f37 24       		.uleb128 0x24
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 116


 2373 0f38 01       		.uleb128 0x1
 2374 0f39 51       		.byte	0x51
 2375 0f3a 01       		.uleb128 0x1
 2376 0f3b 31       		.byte	0x31
 2377 0f3c 24       		.uleb128 0x24
 2378 0f3d 01       		.uleb128 0x1
 2379 0f3e 53       		.byte	0x53
 2380 0f3f 01       		.uleb128 0x1
 2381 0f40 30       		.byte	0x30
 2382 0f41 24       		.uleb128 0x24
 2383 0f42 02       		.uleb128 0x2
 2384 0f43 7D       		.byte	0x7d
 2385 0f44 00       		.sleb128 0
 2386 0f45 01       		.uleb128 0x1
 2387 0f46 30       		.byte	0x30
 2388 0f47 00       		.byte	0
 2389 0f48 00       		.byte	0
 2390 0f49 1F       		.uleb128 0x1f
 2391 0f4a 3A020000 		.4byte	.LASF315
 2392 0f4e 01       		.byte	0x1
 2393 0f4f 6C01     		.2byte	0x16c
 2394 0f51 00000000 		.4byte	.LFB526
 2395 0f55 20000000 		.4byte	.LFE526-.LFB526
 2396 0f59 01       		.uleb128 0x1
 2397 0f5a 9C       		.byte	0x9c
 2398 0f5b A30F0000 		.4byte	0xfa3
 2399 0f5f 20       		.uleb128 0x20
 2400 0f60 631D0000 		.4byte	.LASF317
 2401 0f64 01       		.byte	0x1
 2402 0f65 6C01     		.2byte	0x16c
 2403 0f67 0F0D0000 		.4byte	0xd0f
 2404 0f6b 21000000 		.4byte	.LLST1
 2405 0f6f 21       		.uleb128 0x21
 2406 0f70 1E160000 		.4byte	.LASF314
 2407 0f74 01       		.byte	0x1
 2408 0f75 6F01     		.2byte	0x16f
 2409 0f77 040D0000 		.4byte	0xd04
 2410 0f7b 23       		.uleb128 0x23
 2411 0f7c 16000000 		.4byte	.LVL8
 2412 0f80 3F140000 		.4byte	0x143f
 2413 0f84 24       		.uleb128 0x24
 2414 0f85 01       		.uleb128 0x1
 2415 0f86 50       		.byte	0x50
 2416 0f87 02       		.uleb128 0x2
 2417 0f88 74       		.byte	0x74
 2418 0f89 00       		.sleb128 0
 2419 0f8a 24       		.uleb128 0x24
 2420 0f8b 01       		.uleb128 0x1
 2421 0f8c 51       		.byte	0x51
 2422 0f8d 01       		.uleb128 0x1
 2423 0f8e 34       		.byte	0x34
 2424 0f8f 24       		.uleb128 0x24
 2425 0f90 01       		.uleb128 0x1
 2426 0f91 52       		.byte	0x52
 2427 0f92 03       		.uleb128 0x3
 2428 0f93 F3       		.byte	0xf3
 2429 0f94 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 117


 2430 0f95 50       		.byte	0x50
 2431 0f96 24       		.uleb128 0x24
 2432 0f97 01       		.uleb128 0x1
 2433 0f98 53       		.byte	0x53
 2434 0f99 01       		.uleb128 0x1
 2435 0f9a 30       		.byte	0x30
 2436 0f9b 24       		.uleb128 0x24
 2437 0f9c 02       		.uleb128 0x2
 2438 0f9d 7D       		.byte	0x7d
 2439 0f9e 00       		.sleb128 0
 2440 0f9f 01       		.uleb128 0x1
 2441 0fa0 30       		.byte	0x30
 2442 0fa1 00       		.byte	0
 2443 0fa2 00       		.byte	0
 2444 0fa3 27       		.uleb128 0x27
 2445 0fa4 E3010000 		.4byte	.LASF360
 2446 0fa8 01       		.byte	0x1
 2447 0fa9 F4       		.byte	0xf4
 2448 0faa 00000000 		.4byte	.LFB523
 2449 0fae 4C000000 		.4byte	.LFE523-.LFB523
 2450 0fb2 01       		.uleb128 0x1
 2451 0fb3 9C       		.byte	0x9c
 2452 0fb4 70100000 		.4byte	0x1070
 2453 0fb8 28       		.uleb128 0x28
 2454 0fb9 1E160000 		.4byte	.LASF314
 2455 0fbd 01       		.byte	0x1
 2456 0fbe F7       		.byte	0xf7
 2457 0fbf 040D0000 		.4byte	0xd04
 2458 0fc3 28       		.uleb128 0x28
 2459 0fc4 1B0A0000 		.4byte	.LASF318
 2460 0fc8 01       		.byte	0x1
 2461 0fc9 FA       		.byte	0xfa
 2462 0fca DD000000 		.4byte	0xdd
 2463 0fce 22       		.uleb128 0x22
 2464 0fcf D10E0000 		.4byte	.LASF319
 2465 0fd3 01       		.byte	0x1
 2466 0fd4 0701     		.2byte	0x107
 2467 0fd6 4A0D0000 		.4byte	0xd4a
 2468 0fda 02       		.uleb128 0x2
 2469 0fdb 91       		.byte	0x91
 2470 0fdc 77       		.sleb128 -9
 2471 0fdd 29       		.uleb128 0x29
 2472 0fde B60D0000 		.4byte	0xdb6
 2473 0fe2 04000000 		.4byte	.LBB16
 2474 0fe6 06000000 		.4byte	.LBE16-.LBB16
 2475 0fea 01       		.byte	0x1
 2476 0feb FD       		.byte	0xfd
 2477 0fec FA0F0000 		.4byte	0xffa
 2478 0ff0 2A       		.uleb128 0x2a
 2479 0ff1 C70D0000 		.4byte	0xdc7
 2480 0ff5 4D000000 		.4byte	.LLST2
 2481 0ff9 00       		.byte	0
 2482 0ffa 2B       		.uleb128 0x2b
 2483 0ffb DF0D0000 		.4byte	0xddf
 2484 0fff 0A000000 		.4byte	.LBB18
 2485 1003 18000000 		.4byte	.LBE18-.LBB18
 2486 1007 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 118


 2487 1008 0001     		.2byte	0x100
 2488 100a 37100000 		.4byte	0x1037
 2489 100e 2C       		.uleb128 0x2c
 2490 100f F80D0000 		.4byte	0xdf8
 2491 1013 2A       		.uleb128 0x2a
 2492 1014 EC0D0000 		.4byte	0xdec
 2493 1018 65000000 		.4byte	.LLST3
 2494 101c 23       		.uleb128 0x23
 2495 101d 18000000 		.4byte	.LVL11
 2496 1021 4B140000 		.4byte	0x144b
 2497 1025 24       		.uleb128 0x24
 2498 1026 01       		.uleb128 0x1
 2499 1027 50       		.byte	0x50
 2500 1028 05       		.uleb128 0x5
 2501 1029 03       		.byte	0x3
 2502 102a 14000000 		.4byte	.LC1
 2503 102e 24       		.uleb128 0x24
 2504 102f 01       		.uleb128 0x1
 2505 1030 51       		.byte	0x51
 2506 1031 03       		.uleb128 0x3
 2507 1032 0A       		.byte	0xa
 2508 1033 1906     		.2byte	0x619
 2509 1035 00       		.byte	0
 2510 1036 00       		.byte	0
 2511 1037 2B       		.uleb128 0x2b
 2512 1038 B60D0000 		.4byte	0xdb6
 2513 103c 22000000 		.4byte	.LBB20
 2514 1040 04000000 		.4byte	.LBE20-.LBB20
 2515 1044 01       		.byte	0x1
 2516 1045 0401     		.2byte	0x104
 2517 1047 55100000 		.4byte	0x1055
 2518 104b 2A       		.uleb128 0x2a
 2519 104c C70D0000 		.4byte	0xdc7
 2520 1050 7D000000 		.4byte	.LLST4
 2521 1054 00       		.byte	0
 2522 1055 23       		.uleb128 0x23
 2523 1056 3A000000 		.4byte	.LVL14
 2524 105a 57140000 		.4byte	0x1457
 2525 105e 24       		.uleb128 0x24
 2526 105f 01       		.uleb128 0x1
 2527 1060 51       		.byte	0x51
 2528 1061 02       		.uleb128 0x2
 2529 1062 91       		.byte	0x91
 2530 1063 77       		.sleb128 -9
 2531 1064 24       		.uleb128 0x24
 2532 1065 01       		.uleb128 0x1
 2533 1066 52       		.byte	0x52
 2534 1067 01       		.uleb128 0x1
 2535 1068 30       		.byte	0x30
 2536 1069 24       		.uleb128 0x24
 2537 106a 01       		.uleb128 0x1
 2538 106b 53       		.byte	0x53
 2539 106c 01       		.uleb128 0x1
 2540 106d 30       		.byte	0x30
 2541 106e 00       		.byte	0
 2542 106f 00       		.byte	0
 2543 1070 1B       		.uleb128 0x1b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 119


 2544 1071 A51A0000 		.4byte	.LASF321
 2545 1075 03       		.byte	0x3
 2546 1076 D503     		.2byte	0x3d5
 2547 1078 C7000000 		.4byte	0xc7
 2548 107c 03       		.byte	0x3
 2549 107d 8E100000 		.4byte	0x108e
 2550 1081 1C       		.uleb128 0x1c
 2551 1082 1E0D0000 		.4byte	.LASF322
 2552 1086 03       		.byte	0x3
 2553 1087 D503     		.2byte	0x3d5
 2554 1089 DD000000 		.4byte	0xdd
 2555 108d 00       		.byte	0
 2556 108e 2D       		.uleb128 0x2d
 2557 108f AC070000 		.4byte	.LASF361
 2558 1093 01       		.byte	0x1
 2559 1094 6B       		.byte	0x6b
 2560 1095 00000000 		.4byte	.LFB522
 2561 1099 80010000 		.4byte	.LFE522-.LFB522
 2562 109d 01       		.uleb128 0x1
 2563 109e 9C       		.byte	0x9c
 2564 109f 3A130000 		.4byte	0x133a
 2565 10a3 2E       		.uleb128 0x2e
 2566 10a4 E9160000 		.4byte	.LASF323
 2567 10a8 01       		.byte	0x1
 2568 10a9 6B       		.byte	0x6b
 2569 10aa AC000000 		.4byte	0xac
 2570 10ae 95000000 		.4byte	.LLST5
 2571 10b2 2F       		.uleb128 0x2f
 2572 10b3 D10E0000 		.4byte	.LASF319
 2573 10b7 01       		.byte	0x1
 2574 10b8 6E       		.byte	0x6e
 2575 10b9 4A0D0000 		.4byte	0xd4a
 2576 10bd 02       		.uleb128 0x2
 2577 10be 91       		.byte	0x91
 2578 10bf 67       		.sleb128 -25
 2579 10c0 30       		.uleb128 0x30
 2580 10c1 1E160000 		.4byte	.LASF314
 2581 10c5 01       		.byte	0x1
 2582 10c6 71       		.byte	0x71
 2583 10c7 040D0000 		.4byte	0xd04
 2584 10cb B6000000 		.4byte	.LLST6
 2585 10cf 30       		.uleb128 0x30
 2586 10d0 111A0000 		.4byte	.LASF324
 2587 10d4 01       		.byte	0x1
 2588 10d5 75       		.byte	0x75
 2589 10d6 28060000 		.4byte	0x628
 2590 10da EA000000 		.4byte	.LLST7
 2591 10de 28       		.uleb128 0x28
 2592 10df 50070000 		.4byte	.LASF325
 2593 10e3 01       		.byte	0x1
 2594 10e4 78       		.byte	0x78
 2595 10e5 C7000000 		.4byte	0xc7
 2596 10e9 28       		.uleb128 0x28
 2597 10ea 391C0000 		.4byte	.LASF326
 2598 10ee 01       		.byte	0x1
 2599 10ef 78       		.byte	0x78
 2600 10f0 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 120


 2601 10f4 30       		.uleb128 0x30
 2602 10f5 21070000 		.4byte	.LASF327
 2603 10f9 01       		.byte	0x1
 2604 10fa 79       		.byte	0x79
 2605 10fb 25000000 		.4byte	0x25
 2606 10ff 2C010000 		.4byte	.LLST8
 2607 1103 2F       		.uleb128 0x2f
 2608 1104 AB010000 		.4byte	.LASF328
 2609 1108 01       		.byte	0x1
 2610 1109 79       		.byte	0x79
 2611 110a 25000000 		.4byte	0x25
 2612 110e 02       		.uleb128 0x2
 2613 110f 91       		.byte	0x91
 2614 1110 60       		.sleb128 -32
 2615 1111 2F       		.uleb128 0x2f
 2616 1112 29090000 		.4byte	.LASF329
 2617 1116 01       		.byte	0x1
 2618 1117 7C       		.byte	0x7c
 2619 1118 A00D0000 		.4byte	0xda0
 2620 111c 02       		.uleb128 0x2
 2621 111d 91       		.byte	0x91
 2622 111e 58       		.sleb128 -40
 2623 111f 29       		.uleb128 0x29
 2624 1120 70100000 		.4byte	0x1070
 2625 1124 58000000 		.4byte	.LBB34
 2626 1128 28000000 		.4byte	.LBE34-.LBB34
 2627 112c 01       		.byte	0x1
 2628 112d A7       		.byte	0xa7
 2629 112e 72110000 		.4byte	0x1172
 2630 1132 2A       		.uleb128 0x2a
 2631 1133 81100000 		.4byte	0x1081
 2632 1137 52010000 		.4byte	.LLST9
 2633 113b 25       		.uleb128 0x25
 2634 113c 74000000 		.4byte	.LVL32
 2635 1140 4B140000 		.4byte	0x144b
 2636 1144 59110000 		.4byte	0x1159
 2637 1148 24       		.uleb128 0x24
 2638 1149 01       		.uleb128 0x1
 2639 114a 50       		.byte	0x50
 2640 114b 05       		.uleb128 0x5
 2641 114c 03       		.byte	0x3
 2642 114d 50000000 		.4byte	.LC2
 2643 1151 24       		.uleb128 0x24
 2644 1152 01       		.uleb128 0x1
 2645 1153 51       		.byte	0x51
 2646 1154 03       		.uleb128 0x3
 2647 1155 0A       		.byte	0xa
 2648 1156 D803     		.2byte	0x3d8
 2649 1158 00       		.byte	0
 2650 1159 23       		.uleb128 0x23
 2651 115a 7C000000 		.4byte	.LVL33
 2652 115e 63140000 		.4byte	0x1463
 2653 1162 24       		.uleb128 0x24
 2654 1163 01       		.uleb128 0x1
 2655 1164 50       		.byte	0x50
 2656 1165 05       		.uleb128 0x5
 2657 1166 0C       		.byte	0xc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 121


 2658 1167 00001D41 		.4byte	0x411d0000
 2659 116b 24       		.uleb128 0x24
 2660 116c 01       		.uleb128 0x1
 2661 116d 51       		.byte	0x51
 2662 116e 01       		.uleb128 0x1
 2663 116f 30       		.byte	0x30
 2664 1170 00       		.byte	0
 2665 1171 00       		.byte	0
 2666 1172 29       		.uleb128 0x29
 2667 1173 70100000 		.4byte	0x1070
 2668 1177 80000000 		.4byte	.LBB36
 2669 117b 2C000000 		.4byte	.LBE36-.LBB36
 2670 117f 01       		.byte	0x1
 2671 1180 A8       		.byte	0xa8
 2672 1181 C2110000 		.4byte	0x11c2
 2673 1185 2A       		.uleb128 0x2a
 2674 1186 81100000 		.4byte	0x1081
 2675 118a 66010000 		.4byte	.LLST10
 2676 118e 25       		.uleb128 0x25
 2677 118f 9E000000 		.4byte	.LVL35
 2678 1193 4B140000 		.4byte	0x144b
 2679 1197 AC110000 		.4byte	0x11ac
 2680 119b 24       		.uleb128 0x24
 2681 119c 01       		.uleb128 0x1
 2682 119d 50       		.byte	0x50
 2683 119e 05       		.uleb128 0x5
 2684 119f 03       		.byte	0x3
 2685 11a0 50000000 		.4byte	.LC2
 2686 11a4 24       		.uleb128 0x24
 2687 11a5 01       		.uleb128 0x1
 2688 11a6 51       		.byte	0x51
 2689 11a7 03       		.uleb128 0x3
 2690 11a8 0A       		.byte	0xa
 2691 11a9 D803     		.2byte	0x3d8
 2692 11ab 00       		.byte	0
 2693 11ac 23       		.uleb128 0x23
 2694 11ad A8000000 		.4byte	.LVL36
 2695 11b1 63140000 		.4byte	0x1463
 2696 11b5 24       		.uleb128 0x24
 2697 11b6 01       		.uleb128 0x1
 2698 11b7 50       		.byte	0x50
 2699 11b8 02       		.uleb128 0x2
 2700 11b9 75       		.byte	0x75
 2701 11ba 00       		.sleb128 0
 2702 11bb 24       		.uleb128 0x24
 2703 11bc 01       		.uleb128 0x1
 2704 11bd 51       		.byte	0x51
 2705 11be 01       		.uleb128 0x1
 2706 11bf 31       		.byte	0x31
 2707 11c0 00       		.byte	0
 2708 11c1 00       		.byte	0
 2709 11c2 29       		.uleb128 0x29
 2710 11c3 370E0000 		.4byte	0xe37
 2711 11c7 AC000000 		.4byte	.LBB38
 2712 11cb 06000000 		.4byte	.LBE38-.LBB38
 2713 11cf 01       		.byte	0x1
 2714 11d0 AC       		.byte	0xac
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 122


 2715 11d1 E6110000 		.4byte	0x11e6
 2716 11d5 23       		.uleb128 0x23
 2717 11d6 B2000000 		.4byte	.LVL38
 2718 11da 6F140000 		.4byte	0x146f
 2719 11de 24       		.uleb128 0x24
 2720 11df 01       		.uleb128 0x1
 2721 11e0 50       		.byte	0x50
 2722 11e1 02       		.uleb128 0x2
 2723 11e2 75       		.byte	0x75
 2724 11e3 00       		.sleb128 0
 2725 11e4 00       		.byte	0
 2726 11e5 00       		.byte	0
 2727 11e6 29       		.uleb128 0x29
 2728 11e7 0B0E0000 		.4byte	0xe0b
 2729 11eb B2000000 		.4byte	.LBB40
 2730 11ef 06000000 		.4byte	.LBE40-.LBB40
 2731 11f3 01       		.byte	0x1
 2732 11f4 B0       		.byte	0xb0
 2733 11f5 0C120000 		.4byte	0x120c
 2734 11f9 2A       		.uleb128 0x2a
 2735 11fa 240E0000 		.4byte	0xe24
 2736 11fe 7A010000 		.4byte	.LLST11
 2737 1202 2A       		.uleb128 0x2a
 2738 1203 180E0000 		.4byte	0xe18
 2739 1207 8E010000 		.4byte	.LLST12
 2740 120b 00       		.byte	0
 2741 120c 29       		.uleb128 0x29
 2742 120d 490E0000 		.4byte	0xe49
 2743 1211 2E010000 		.4byte	.LBB42
 2744 1215 06000000 		.4byte	.LBE42-.LBB42
 2745 1219 01       		.byte	0x1
 2746 121a CD       		.byte	0xcd
 2747 121b 32120000 		.4byte	0x1232
 2748 121f 2A       		.uleb128 0x2a
 2749 1220 620E0000 		.4byte	0xe62
 2750 1224 A6010000 		.4byte	.LLST13
 2751 1228 2A       		.uleb128 0x2a
 2752 1229 560E0000 		.4byte	0xe56
 2753 122d BA010000 		.4byte	.LLST14
 2754 1231 00       		.byte	0
 2755 1232 29       		.uleb128 0x29
 2756 1233 400E0000 		.4byte	0xe40
 2757 1237 34010000 		.4byte	.LBB44
 2758 123b 06000000 		.4byte	.LBE44-.LBB44
 2759 123f 01       		.byte	0x1
 2760 1240 D0       		.byte	0xd0
 2761 1241 59120000 		.4byte	0x1259
 2762 1245 23       		.uleb128 0x23
 2763 1246 3A010000 		.4byte	.LVL48
 2764 124a 7B140000 		.4byte	0x147b
 2765 124e 24       		.uleb128 0x24
 2766 124f 01       		.uleb128 0x1
 2767 1250 50       		.byte	0x50
 2768 1251 05       		.uleb128 0x5
 2769 1252 0C       		.byte	0xc
 2770 1253 00001D41 		.4byte	0x411d0000
 2771 1257 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 123


 2772 1258 00       		.byte	0
 2773 1259 25       		.uleb128 0x25
 2774 125a 0E000000 		.4byte	.LVL18
 2775 125e 87140000 		.4byte	0x1487
 2776 1262 70120000 		.4byte	0x1270
 2777 1266 24       		.uleb128 0x24
 2778 1267 01       		.uleb128 0x1
 2779 1268 50       		.byte	0x50
 2780 1269 05       		.uleb128 0x5
 2781 126a 03       		.byte	0x3
 2782 126b 00000000 		.4byte	isrADC
 2783 126f 00       		.byte	0
 2784 1270 26       		.uleb128 0x26
 2785 1271 12000000 		.4byte	.LVL19
 2786 1275 92140000 		.4byte	0x1492
 2787 1279 26       		.uleb128 0x26
 2788 127a 16000000 		.4byte	.LVL20
 2789 127e 9D140000 		.4byte	0x149d
 2790 1282 26       		.uleb128 0x26
 2791 1283 1A000000 		.4byte	.LVL21
 2792 1287 CB0E0000 		.4byte	0xecb
 2793 128b 25       		.uleb128 0x25
 2794 128c 2E000000 		.4byte	.LVL23
 2795 1290 A8140000 		.4byte	0x14a8
 2796 1294 AA120000 		.4byte	0x12aa
 2797 1298 24       		.uleb128 0x24
 2798 1299 01       		.uleb128 0x1
 2799 129a 51       		.byte	0x51
 2800 129b 02       		.uleb128 0x2
 2801 129c 91       		.byte	0x91
 2802 129d 67       		.sleb128 -25
 2803 129e 24       		.uleb128 0x24
 2804 129f 01       		.uleb128 0x1
 2805 12a0 52       		.byte	0x52
 2806 12a1 02       		.uleb128 0x2
 2807 12a2 09       		.byte	0x9
 2808 12a3 FF       		.byte	0xff
 2809 12a4 24       		.uleb128 0x24
 2810 12a5 01       		.uleb128 0x1
 2811 12a6 53       		.byte	0x53
 2812 12a7 01       		.uleb128 0x1
 2813 12a8 30       		.byte	0x30
 2814 12a9 00       		.byte	0
 2815 12aa 25       		.uleb128 0x25
 2816 12ab 48000000 		.4byte	.LVL26
 2817 12af 490F0000 		.4byte	0xf49
 2818 12b3 BE120000 		.4byte	0x12be
 2819 12b7 24       		.uleb128 0x24
 2820 12b8 01       		.uleb128 0x1
 2821 12b9 50       		.byte	0x50
 2822 12ba 02       		.uleb128 0x2
 2823 12bb 08       		.byte	0x8
 2824 12bc 64       		.byte	0x64
 2825 12bd 00       		.byte	0
 2826 12be 25       		.uleb128 0x25
 2827 12bf 54000000 		.4byte	.LVL29
 2828 12c3 490F0000 		.4byte	0xf49
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 124


 2829 12c7 D3120000 		.4byte	0x12d3
 2830 12cb 24       		.uleb128 0x24
 2831 12cc 01       		.uleb128 0x1
 2832 12cd 50       		.byte	0x50
 2833 12ce 03       		.uleb128 0x3
 2834 12cf 0A       		.byte	0xa
 2835 12d0 1027     		.2byte	0x2710
 2836 12d2 00       		.byte	0
 2837 12d3 25       		.uleb128 0x25
 2838 12d4 DC000000 		.4byte	.LVL41
 2839 12d8 B4140000 		.4byte	0x14b4
 2840 12dc F4120000 		.4byte	0x12f4
 2841 12e0 24       		.uleb128 0x24
 2842 12e1 01       		.uleb128 0x1
 2843 12e2 50       		.byte	0x50
 2844 12e3 0F       		.uleb128 0xf
 2845 12e4 F5       		.byte	0xf5
 2846 12e5 50       		.uleb128 0x50
 2847 12e6 25       		.uleb128 0x25
 2848 12e7 F5       		.byte	0xf5
 2849 12e8 51       		.uleb128 0x51
 2850 12e9 25       		.uleb128 0x25
 2851 12ea 1B       		.byte	0x1b
 2852 12eb F4       		.byte	0xf4
 2853 12ec 25       		.uleb128 0x25
 2854 12ed 04       		.byte	0x4
 2855 12ee F54BF43D 		.4byte	0x3df44bf5
 2856 12f2 1B       		.byte	0x1b
 2857 12f3 00       		.byte	0
 2858 12f4 25       		.uleb128 0x25
 2859 12f5 12010000 		.4byte	.LVL42
 2860 12f9 1B140000 		.4byte	0x141b
 2861 12fd 12130000 		.4byte	0x1312
 2862 1301 24       		.uleb128 0x24
 2863 1302 01       		.uleb128 0x1
 2864 1303 51       		.byte	0x51
 2865 1304 02       		.uleb128 0x2
 2866 1305 7D       		.byte	0x7d
 2867 1306 00       		.sleb128 0
 2868 1307 24       		.uleb128 0x24
 2869 1308 01       		.uleb128 0x1
 2870 1309 52       		.byte	0x52
 2871 130a 01       		.uleb128 0x1
 2872 130b 30       		.byte	0x30
 2873 130c 24       		.uleb128 0x24
 2874 130d 01       		.uleb128 0x1
 2875 130e 53       		.byte	0x53
 2876 130f 01       		.uleb128 0x1
 2877 1310 30       		.byte	0x30
 2878 1311 00       		.byte	0
 2879 1312 25       		.uleb128 0x25
 2880 1313 22010000 		.4byte	.LVL43
 2881 1317 1B140000 		.4byte	0x141b
 2882 131b 30130000 		.4byte	0x1330
 2883 131f 24       		.uleb128 0x24
 2884 1320 01       		.uleb128 0x1
 2885 1321 51       		.byte	0x51
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 125


 2886 1322 02       		.uleb128 0x2
 2887 1323 91       		.byte	0x91
 2888 1324 60       		.sleb128 -32
 2889 1325 24       		.uleb128 0x24
 2890 1326 01       		.uleb128 0x1
 2891 1327 52       		.byte	0x52
 2892 1328 01       		.uleb128 0x1
 2893 1329 30       		.byte	0x30
 2894 132a 24       		.uleb128 0x24
 2895 132b 01       		.uleb128 0x1
 2896 132c 53       		.byte	0x53
 2897 132d 01       		.uleb128 0x1
 2898 132e 32       		.byte	0x32
 2899 132f 00       		.byte	0
 2900 1330 26       		.uleb128 0x26
 2901 1331 3E010000 		.4byte	.LVL49
 2902 1335 9D140000 		.4byte	0x149d
 2903 1339 00       		.byte	0
 2904 133a 2F       		.uleb128 0x2f
 2905 133b 2D040000 		.4byte	.LASF330
 2906 133f 01       		.byte	0x1
 2907 1340 58       		.byte	0x58
 2908 1341 28060000 		.4byte	0x628
 2909 1345 05       		.uleb128 0x5
 2910 1346 03       		.byte	0x3
 2911 1347 00000000 		.4byte	processingComplete
 2912 134b 31       		.uleb128 0x31
 2913 134c 27170000 		.4byte	.LASF331
 2914 1350 16       		.byte	0x16
 2915 1351 EA07     		.2byte	0x7ea
 2916 1353 57130000 		.4byte	0x1357
 2917 1357 06       		.uleb128 0x6
 2918 1358 D2000000 		.4byte	0xd2
 2919 135c 31       		.uleb128 0x31
 2920 135d 810F0000 		.4byte	.LASF332
 2921 1361 0D       		.byte	0xd
 2922 1362 2202     		.2byte	0x222
 2923 1364 A30B0000 		.4byte	0xba3
 2924 1368 08       		.uleb128 0x8
 2925 1369 720B0000 		.4byte	0xb72
 2926 136d 78130000 		.4byte	0x1378
 2927 1371 09       		.uleb128 0x9
 2928 1372 A5000000 		.4byte	0xa5
 2929 1376 00       		.byte	0
 2930 1377 00       		.byte	0
 2931 1378 31       		.uleb128 0x31
 2932 1379 A3020000 		.4byte	.LASF333
 2933 137d 0D       		.byte	0xd
 2934 137e 2C02     		.2byte	0x22c
 2935 1380 68130000 		.4byte	0x1368
 2936 1384 08       		.uleb128 0x8
 2937 1385 EB0B0000 		.4byte	0xbeb
 2938 1389 94130000 		.4byte	0x1394
 2939 138d 09       		.uleb128 0x9
 2940 138e A5000000 		.4byte	0xa5
 2941 1392 00       		.byte	0
 2942 1393 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 126


 2943 1394 31       		.uleb128 0x31
 2944 1395 00000000 		.4byte	.LASF334
 2945 1399 0D       		.byte	0xd
 2946 139a 2D02     		.2byte	0x22d
 2947 139c 84130000 		.4byte	0x1384
 2948 13a0 32       		.uleb128 0x32
 2949 13a1 7C010000 		.4byte	.LASF335
 2950 13a5 17       		.byte	0x17
 2951 13a6 5E       		.byte	0x5e
 2952 13a7 CF060000 		.4byte	0x6cf
 2953 13ab 31       		.uleb128 0x31
 2954 13ac 841C0000 		.4byte	.LASF336
 2955 13b0 03       		.byte	0x3
 2956 13b1 6001     		.2byte	0x160
 2957 13b3 DD000000 		.4byte	0xdd
 2958 13b7 08       		.uleb128 0x8
 2959 13b8 C7130000 		.4byte	0x13c7
 2960 13bc C7130000 		.4byte	0x13c7
 2961 13c0 09       		.uleb128 0x9
 2962 13c1 A5000000 		.4byte	0xa5
 2963 13c5 00       		.byte	0
 2964 13c6 00       		.byte	0
 2965 13c7 07       		.uleb128 0x7
 2966 13c8 F90C0000 		.4byte	0xcf9
 2967 13cc 31       		.uleb128 0x31
 2968 13cd 9F160000 		.4byte	.LASF337
 2969 13d1 03       		.byte	0x3
 2970 13d2 6401     		.2byte	0x164
 2971 13d4 D8130000 		.4byte	0x13d8
 2972 13d8 07       		.uleb128 0x7
 2973 13d9 B7130000 		.4byte	0x13b7
 2974 13dd 33       		.uleb128 0x33
 2975 13de C0110000 		.4byte	.LASF338
 2976 13e2 01       		.byte	0x1
 2977 13e3 50       		.byte	0x50
 2978 13e4 1A0D0000 		.4byte	0xd1a
 2979 13e8 05       		.uleb128 0x5
 2980 13e9 03       		.byte	0x3
 2981 13ea 00000000 		.4byte	temperatureCommandQ
 2982 13ee 33       		.uleb128 0x33
 2983 13ef 51020000 		.4byte	.LASF339
 2984 13f3 01       		.byte	0x1
 2985 13f4 51       		.byte	0x51
 2986 13f5 1A0D0000 		.4byte	0xd1a
 2987 13f9 05       		.uleb128 0x5
 2988 13fa 03       		.byte	0x3
 2989 13fb 00000000 		.4byte	temperatureDataQ
 2990 13ff 32       		.uleb128 0x32
 2991 1400 511E0000 		.4byte	.LASF340
 2992 1404 14       		.byte	0x14
 2993 1405 4A       		.byte	0x4a
 2994 1406 1A0D0000 		.4byte	0xd1a
 2995 140a 33       		.uleb128 0x33
 2996 140b 5C140000 		.4byte	.LASF341
 2997 140f 01       		.byte	0x1
 2998 1410 54       		.byte	0x54
 2999 1411 AB0D0000 		.4byte	0xdab
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 127


 3000 1415 05       		.uleb128 0x5
 3001 1416 03       		.byte	0x3
 3002 1417 00000000 		.4byte	xTimer_Temperature
 3003 141b 34       		.uleb128 0x34
 3004 141c E10B0000 		.4byte	.LASF342
 3005 1420 E10B0000 		.4byte	.LASF342
 3006 1424 12       		.byte	0x12
 3007 1425 B402     		.2byte	0x2b4
 3008 1427 34       		.uleb128 0x34
 3009 1428 C40D0000 		.4byte	.LASF343
 3010 142c C40D0000 		.4byte	.LASF343
 3011 1430 15       		.byte	0x15
 3012 1431 0D01     		.2byte	0x10d
 3013 1433 34       		.uleb128 0x34
 3014 1434 910F0000 		.4byte	.LASF344
 3015 1438 910F0000 		.4byte	.LASF344
 3016 143c 18       		.byte	0x18
 3017 143d 0805     		.2byte	0x508
 3018 143f 34       		.uleb128 0x34
 3019 1440 E40E0000 		.4byte	.LASF345
 3020 1444 E40E0000 		.4byte	.LASF345
 3021 1448 15       		.byte	0x15
 3022 1449 1A05     		.2byte	0x51a
 3023 144b 34       		.uleb128 0x34
 3024 144c 4A0D0000 		.4byte	.LASF346
 3025 1450 4A0D0000 		.4byte	.LASF346
 3026 1454 09       		.byte	0x9
 3027 1455 2A03     		.2byte	0x32a
 3028 1457 34       		.uleb128 0x34
 3029 1458 890B0000 		.4byte	.LASF347
 3030 145c 890B0000 		.4byte	.LASF347
 3031 1460 12       		.byte	0x12
 3032 1461 A005     		.2byte	0x5a0
 3033 1463 34       		.uleb128 0x34
 3034 1464 291A0000 		.4byte	.LASF348
 3035 1468 291A0000 		.4byte	.LASF348
 3036 146c 02       		.byte	0x2
 3037 146d 2405     		.2byte	0x524
 3038 146f 34       		.uleb128 0x34
 3039 1470 C1060000 		.4byte	.LASF349
 3040 1474 C1060000 		.4byte	.LASF349
 3041 1478 02       		.byte	0x2
 3042 1479 2E05     		.2byte	0x52e
 3043 147b 34       		.uleb128 0x34
 3044 147c AF040000 		.4byte	.LASF350
 3045 1480 AF040000 		.4byte	.LASF350
 3046 1484 02       		.byte	0x2
 3047 1485 2F05     		.2byte	0x52f
 3048 1487 35       		.uleb128 0x35
 3049 1488 08150000 		.4byte	.LASF351
 3050 148c 08150000 		.4byte	.LASF351
 3051 1490 03       		.byte	0x3
 3052 1491 58       		.byte	0x58
 3053 1492 35       		.uleb128 0x35
 3054 1493 B1110000 		.4byte	.LASF352
 3055 1497 B1110000 		.4byte	.LASF352
 3056 149b 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 128


 3057 149c 7D       		.byte	0x7d
 3058 149d 35       		.uleb128 0x35
 3059 149e 6D190000 		.4byte	.LASF353
 3060 14a2 6D190000 		.4byte	.LASF353
 3061 14a6 03       		.byte	0x3
 3062 14a7 5A       		.byte	0x5a
 3063 14a8 34       		.uleb128 0x34
 3064 14a9 20080000 		.4byte	.LASF354
 3065 14ad 20080000 		.4byte	.LASF354
 3066 14b1 12       		.byte	0x12
 3067 14b2 F503     		.2byte	0x3f5
 3068 14b4 34       		.uleb128 0x34
 3069 14b5 E6180000 		.4byte	.LASF355
 3070 14b9 E6180000 		.4byte	.LASF355
 3071 14bd 19       		.byte	0x19
 3072 14be 8201     		.2byte	0x182
 3073 14c0 00       		.byte	0
 3074              		.section	.debug_abbrev,"",%progbits
 3075              	.Ldebug_abbrev0:
 3076 0000 01       		.uleb128 0x1
 3077 0001 11       		.uleb128 0x11
 3078 0002 01       		.byte	0x1
 3079 0003 25       		.uleb128 0x25
 3080 0004 0E       		.uleb128 0xe
 3081 0005 13       		.uleb128 0x13
 3082 0006 0B       		.uleb128 0xb
 3083 0007 03       		.uleb128 0x3
 3084 0008 0E       		.uleb128 0xe
 3085 0009 1B       		.uleb128 0x1b
 3086 000a 0E       		.uleb128 0xe
 3087 000b 55       		.uleb128 0x55
 3088 000c 17       		.uleb128 0x17
 3089 000d 11       		.uleb128 0x11
 3090 000e 01       		.uleb128 0x1
 3091 000f 10       		.uleb128 0x10
 3092 0010 17       		.uleb128 0x17
 3093 0011 00       		.byte	0
 3094 0012 00       		.byte	0
 3095 0013 02       		.uleb128 0x2
 3096 0014 24       		.uleb128 0x24
 3097 0015 00       		.byte	0
 3098 0016 0B       		.uleb128 0xb
 3099 0017 0B       		.uleb128 0xb
 3100 0018 3E       		.uleb128 0x3e
 3101 0019 0B       		.uleb128 0xb
 3102 001a 03       		.uleb128 0x3
 3103 001b 0E       		.uleb128 0xe
 3104 001c 00       		.byte	0
 3105 001d 00       		.byte	0
 3106 001e 03       		.uleb128 0x3
 3107 001f 24       		.uleb128 0x24
 3108 0020 00       		.byte	0
 3109 0021 0B       		.uleb128 0xb
 3110 0022 0B       		.uleb128 0xb
 3111 0023 3E       		.uleb128 0x3e
 3112 0024 0B       		.uleb128 0xb
 3113 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 129


 3114 0026 08       		.uleb128 0x8
 3115 0027 00       		.byte	0
 3116 0028 00       		.byte	0
 3117 0029 04       		.uleb128 0x4
 3118 002a 16       		.uleb128 0x16
 3119 002b 00       		.byte	0
 3120 002c 03       		.uleb128 0x3
 3121 002d 0E       		.uleb128 0xe
 3122 002e 3A       		.uleb128 0x3a
 3123 002f 0B       		.uleb128 0xb
 3124 0030 3B       		.uleb128 0x3b
 3125 0031 0B       		.uleb128 0xb
 3126 0032 49       		.uleb128 0x49
 3127 0033 13       		.uleb128 0x13
 3128 0034 00       		.byte	0
 3129 0035 00       		.byte	0
 3130 0036 05       		.uleb128 0x5
 3131 0037 0F       		.uleb128 0xf
 3132 0038 00       		.byte	0
 3133 0039 0B       		.uleb128 0xb
 3134 003a 0B       		.uleb128 0xb
 3135 003b 00       		.byte	0
 3136 003c 00       		.byte	0
 3137 003d 06       		.uleb128 0x6
 3138 003e 35       		.uleb128 0x35
 3139 003f 00       		.byte	0
 3140 0040 49       		.uleb128 0x49
 3141 0041 13       		.uleb128 0x13
 3142 0042 00       		.byte	0
 3143 0043 00       		.byte	0
 3144 0044 07       		.uleb128 0x7
 3145 0045 26       		.uleb128 0x26
 3146 0046 00       		.byte	0
 3147 0047 49       		.uleb128 0x49
 3148 0048 13       		.uleb128 0x13
 3149 0049 00       		.byte	0
 3150 004a 00       		.byte	0
 3151 004b 08       		.uleb128 0x8
 3152 004c 01       		.uleb128 0x1
 3153 004d 01       		.byte	0x1
 3154 004e 49       		.uleb128 0x49
 3155 004f 13       		.uleb128 0x13
 3156 0050 01       		.uleb128 0x1
 3157 0051 13       		.uleb128 0x13
 3158 0052 00       		.byte	0
 3159 0053 00       		.byte	0
 3160 0054 09       		.uleb128 0x9
 3161 0055 21       		.uleb128 0x21
 3162 0056 00       		.byte	0
 3163 0057 49       		.uleb128 0x49
 3164 0058 13       		.uleb128 0x13
 3165 0059 2F       		.uleb128 0x2f
 3166 005a 0B       		.uleb128 0xb
 3167 005b 00       		.byte	0
 3168 005c 00       		.byte	0
 3169 005d 0A       		.uleb128 0xa
 3170 005e 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 130


 3171 005f 01       		.byte	0x1
 3172 0060 0B       		.uleb128 0xb
 3173 0061 0B       		.uleb128 0xb
 3174 0062 3A       		.uleb128 0x3a
 3175 0063 0B       		.uleb128 0xb
 3176 0064 3B       		.uleb128 0x3b
 3177 0065 0B       		.uleb128 0xb
 3178 0066 01       		.uleb128 0x1
 3179 0067 13       		.uleb128 0x13
 3180 0068 00       		.byte	0
 3181 0069 00       		.byte	0
 3182 006a 0B       		.uleb128 0xb
 3183 006b 0D       		.uleb128 0xd
 3184 006c 00       		.byte	0
 3185 006d 03       		.uleb128 0x3
 3186 006e 08       		.uleb128 0x8
 3187 006f 3A       		.uleb128 0x3a
 3188 0070 0B       		.uleb128 0xb
 3189 0071 3B       		.uleb128 0x3b
 3190 0072 0B       		.uleb128 0xb
 3191 0073 49       		.uleb128 0x49
 3192 0074 13       		.uleb128 0x13
 3193 0075 38       		.uleb128 0x38
 3194 0076 0B       		.uleb128 0xb
 3195 0077 00       		.byte	0
 3196 0078 00       		.byte	0
 3197 0079 0C       		.uleb128 0xc
 3198 007a 0D       		.uleb128 0xd
 3199 007b 00       		.byte	0
 3200 007c 03       		.uleb128 0x3
 3201 007d 0E       		.uleb128 0xe
 3202 007e 3A       		.uleb128 0x3a
 3203 007f 0B       		.uleb128 0xb
 3204 0080 3B       		.uleb128 0x3b
 3205 0081 0B       		.uleb128 0xb
 3206 0082 49       		.uleb128 0x49
 3207 0083 13       		.uleb128 0x13
 3208 0084 38       		.uleb128 0x38
 3209 0085 0B       		.uleb128 0xb
 3210 0086 00       		.byte	0
 3211 0087 00       		.byte	0
 3212 0088 0D       		.uleb128 0xd
 3213 0089 13       		.uleb128 0x13
 3214 008a 01       		.byte	0x1
 3215 008b 0B       		.uleb128 0xb
 3216 008c 05       		.uleb128 0x5
 3217 008d 3A       		.uleb128 0x3a
 3218 008e 0B       		.uleb128 0xb
 3219 008f 3B       		.uleb128 0x3b
 3220 0090 0B       		.uleb128 0xb
 3221 0091 01       		.uleb128 0x1
 3222 0092 13       		.uleb128 0x13
 3223 0093 00       		.byte	0
 3224 0094 00       		.byte	0
 3225 0095 0E       		.uleb128 0xe
 3226 0096 0D       		.uleb128 0xd
 3227 0097 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 131


 3228 0098 03       		.uleb128 0x3
 3229 0099 0E       		.uleb128 0xe
 3230 009a 3A       		.uleb128 0x3a
 3231 009b 0B       		.uleb128 0xb
 3232 009c 3B       		.uleb128 0x3b
 3233 009d 0B       		.uleb128 0xb
 3234 009e 49       		.uleb128 0x49
 3235 009f 13       		.uleb128 0x13
 3236 00a0 38       		.uleb128 0x38
 3237 00a1 05       		.uleb128 0x5
 3238 00a2 00       		.byte	0
 3239 00a3 00       		.byte	0
 3240 00a4 0F       		.uleb128 0xf
 3241 00a5 21       		.uleb128 0x21
 3242 00a6 00       		.byte	0
 3243 00a7 49       		.uleb128 0x49
 3244 00a8 13       		.uleb128 0x13
 3245 00a9 2F       		.uleb128 0x2f
 3246 00aa 05       		.uleb128 0x5
 3247 00ab 00       		.byte	0
 3248 00ac 00       		.byte	0
 3249 00ad 10       		.uleb128 0x10
 3250 00ae 16       		.uleb128 0x16
 3251 00af 00       		.byte	0
 3252 00b0 03       		.uleb128 0x3
 3253 00b1 0E       		.uleb128 0xe
 3254 00b2 3A       		.uleb128 0x3a
 3255 00b3 0B       		.uleb128 0xb
 3256 00b4 3B       		.uleb128 0x3b
 3257 00b5 05       		.uleb128 0x5
 3258 00b6 49       		.uleb128 0x49
 3259 00b7 13       		.uleb128 0x13
 3260 00b8 00       		.byte	0
 3261 00b9 00       		.byte	0
 3262 00ba 11       		.uleb128 0x11
 3263 00bb 0F       		.uleb128 0xf
 3264 00bc 00       		.byte	0
 3265 00bd 0B       		.uleb128 0xb
 3266 00be 0B       		.uleb128 0xb
 3267 00bf 49       		.uleb128 0x49
 3268 00c0 13       		.uleb128 0x13
 3269 00c1 00       		.byte	0
 3270 00c2 00       		.byte	0
 3271 00c3 12       		.uleb128 0x12
 3272 00c4 15       		.uleb128 0x15
 3273 00c5 01       		.byte	0x1
 3274 00c6 27       		.uleb128 0x27
 3275 00c7 19       		.uleb128 0x19
 3276 00c8 01       		.uleb128 0x1
 3277 00c9 13       		.uleb128 0x13
 3278 00ca 00       		.byte	0
 3279 00cb 00       		.byte	0
 3280 00cc 13       		.uleb128 0x13
 3281 00cd 05       		.uleb128 0x5
 3282 00ce 00       		.byte	0
 3283 00cf 49       		.uleb128 0x49
 3284 00d0 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 132


 3285 00d1 00       		.byte	0
 3286 00d2 00       		.byte	0
 3287 00d3 14       		.uleb128 0x14
 3288 00d4 13       		.uleb128 0x13
 3289 00d5 01       		.byte	0x1
 3290 00d6 03       		.uleb128 0x3
 3291 00d7 0E       		.uleb128 0xe
 3292 00d8 0B       		.uleb128 0xb
 3293 00d9 0B       		.uleb128 0xb
 3294 00da 3A       		.uleb128 0x3a
 3295 00db 0B       		.uleb128 0xb
 3296 00dc 3B       		.uleb128 0x3b
 3297 00dd 05       		.uleb128 0x5
 3298 00de 01       		.uleb128 0x1
 3299 00df 13       		.uleb128 0x13
 3300 00e0 00       		.byte	0
 3301 00e1 00       		.byte	0
 3302 00e2 15       		.uleb128 0x15
 3303 00e3 0D       		.uleb128 0xd
 3304 00e4 00       		.byte	0
 3305 00e5 03       		.uleb128 0x3
 3306 00e6 0E       		.uleb128 0xe
 3307 00e7 3A       		.uleb128 0x3a
 3308 00e8 0B       		.uleb128 0xb
 3309 00e9 3B       		.uleb128 0x3b
 3310 00ea 05       		.uleb128 0x5
 3311 00eb 49       		.uleb128 0x49
 3312 00ec 13       		.uleb128 0x13
 3313 00ed 38       		.uleb128 0x38
 3314 00ee 0B       		.uleb128 0xb
 3315 00ef 00       		.byte	0
 3316 00f0 00       		.byte	0
 3317 00f1 16       		.uleb128 0x16
 3318 00f2 04       		.uleb128 0x4
 3319 00f3 01       		.byte	0x1
 3320 00f4 0B       		.uleb128 0xb
 3321 00f5 0B       		.uleb128 0xb
 3322 00f6 49       		.uleb128 0x49
 3323 00f7 13       		.uleb128 0x13
 3324 00f8 3A       		.uleb128 0x3a
 3325 00f9 0B       		.uleb128 0xb
 3326 00fa 3B       		.uleb128 0x3b
 3327 00fb 05       		.uleb128 0x5
 3328 00fc 01       		.uleb128 0x1
 3329 00fd 13       		.uleb128 0x13
 3330 00fe 00       		.byte	0
 3331 00ff 00       		.byte	0
 3332 0100 17       		.uleb128 0x17
 3333 0101 28       		.uleb128 0x28
 3334 0102 00       		.byte	0
 3335 0103 03       		.uleb128 0x3
 3336 0104 0E       		.uleb128 0xe
 3337 0105 1C       		.uleb128 0x1c
 3338 0106 0B       		.uleb128 0xb
 3339 0107 00       		.byte	0
 3340 0108 00       		.byte	0
 3341 0109 18       		.uleb128 0x18
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 133


 3342 010a 13       		.uleb128 0x13
 3343 010b 01       		.byte	0x1
 3344 010c 0B       		.uleb128 0xb
 3345 010d 0B       		.uleb128 0xb
 3346 010e 3A       		.uleb128 0x3a
 3347 010f 0B       		.uleb128 0xb
 3348 0110 3B       		.uleb128 0x3b
 3349 0111 05       		.uleb128 0x5
 3350 0112 01       		.uleb128 0x1
 3351 0113 13       		.uleb128 0x13
 3352 0114 00       		.byte	0
 3353 0115 00       		.byte	0
 3354 0116 19       		.uleb128 0x19
 3355 0117 28       		.uleb128 0x28
 3356 0118 00       		.byte	0
 3357 0119 03       		.uleb128 0x3
 3358 011a 0E       		.uleb128 0xe
 3359 011b 1C       		.uleb128 0x1c
 3360 011c 05       		.uleb128 0x5
 3361 011d 00       		.byte	0
 3362 011e 00       		.byte	0
 3363 011f 1A       		.uleb128 0x1a
 3364 0120 04       		.uleb128 0x4
 3365 0121 01       		.byte	0x1
 3366 0122 0B       		.uleb128 0xb
 3367 0123 0B       		.uleb128 0xb
 3368 0124 49       		.uleb128 0x49
 3369 0125 13       		.uleb128 0x13
 3370 0126 3A       		.uleb128 0x3a
 3371 0127 0B       		.uleb128 0xb
 3372 0128 3B       		.uleb128 0x3b
 3373 0129 0B       		.uleb128 0xb
 3374 012a 01       		.uleb128 0x1
 3375 012b 13       		.uleb128 0x13
 3376 012c 00       		.byte	0
 3377 012d 00       		.byte	0
 3378 012e 1B       		.uleb128 0x1b
 3379 012f 2E       		.uleb128 0x2e
 3380 0130 01       		.byte	0x1
 3381 0131 03       		.uleb128 0x3
 3382 0132 0E       		.uleb128 0xe
 3383 0133 3A       		.uleb128 0x3a
 3384 0134 0B       		.uleb128 0xb
 3385 0135 3B       		.uleb128 0x3b
 3386 0136 05       		.uleb128 0x5
 3387 0137 27       		.uleb128 0x27
 3388 0138 19       		.uleb128 0x19
 3389 0139 49       		.uleb128 0x49
 3390 013a 13       		.uleb128 0x13
 3391 013b 20       		.uleb128 0x20
 3392 013c 0B       		.uleb128 0xb
 3393 013d 01       		.uleb128 0x1
 3394 013e 13       		.uleb128 0x13
 3395 013f 00       		.byte	0
 3396 0140 00       		.byte	0
 3397 0141 1C       		.uleb128 0x1c
 3398 0142 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 134


 3399 0143 00       		.byte	0
 3400 0144 03       		.uleb128 0x3
 3401 0145 0E       		.uleb128 0xe
 3402 0146 3A       		.uleb128 0x3a
 3403 0147 0B       		.uleb128 0xb
 3404 0148 3B       		.uleb128 0x3b
 3405 0149 05       		.uleb128 0x5
 3406 014a 49       		.uleb128 0x49
 3407 014b 13       		.uleb128 0x13
 3408 014c 00       		.byte	0
 3409 014d 00       		.byte	0
 3410 014e 1D       		.uleb128 0x1d
 3411 014f 2E       		.uleb128 0x2e
 3412 0150 01       		.byte	0x1
 3413 0151 03       		.uleb128 0x3
 3414 0152 0E       		.uleb128 0xe
 3415 0153 3A       		.uleb128 0x3a
 3416 0154 0B       		.uleb128 0xb
 3417 0155 3B       		.uleb128 0x3b
 3418 0156 05       		.uleb128 0x5
 3419 0157 27       		.uleb128 0x27
 3420 0158 19       		.uleb128 0x19
 3421 0159 20       		.uleb128 0x20
 3422 015a 0B       		.uleb128 0xb
 3423 015b 01       		.uleb128 0x1
 3424 015c 13       		.uleb128 0x13
 3425 015d 00       		.byte	0
 3426 015e 00       		.byte	0
 3427 015f 1E       		.uleb128 0x1e
 3428 0160 2E       		.uleb128 0x2e
 3429 0161 00       		.byte	0
 3430 0162 03       		.uleb128 0x3
 3431 0163 0E       		.uleb128 0xe
 3432 0164 3A       		.uleb128 0x3a
 3433 0165 0B       		.uleb128 0xb
 3434 0166 3B       		.uleb128 0x3b
 3435 0167 05       		.uleb128 0x5
 3436 0168 27       		.uleb128 0x27
 3437 0169 19       		.uleb128 0x19
 3438 016a 20       		.uleb128 0x20
 3439 016b 0B       		.uleb128 0xb
 3440 016c 00       		.byte	0
 3441 016d 00       		.byte	0
 3442 016e 1F       		.uleb128 0x1f
 3443 016f 2E       		.uleb128 0x2e
 3444 0170 01       		.byte	0x1
 3445 0171 03       		.uleb128 0x3
 3446 0172 0E       		.uleb128 0xe
 3447 0173 3A       		.uleb128 0x3a
 3448 0174 0B       		.uleb128 0xb
 3449 0175 3B       		.uleb128 0x3b
 3450 0176 05       		.uleb128 0x5
 3451 0177 27       		.uleb128 0x27
 3452 0178 19       		.uleb128 0x19
 3453 0179 11       		.uleb128 0x11
 3454 017a 01       		.uleb128 0x1
 3455 017b 12       		.uleb128 0x12
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 135


 3456 017c 06       		.uleb128 0x6
 3457 017d 40       		.uleb128 0x40
 3458 017e 18       		.uleb128 0x18
 3459 017f 9742     		.uleb128 0x2117
 3460 0181 19       		.uleb128 0x19
 3461 0182 01       		.uleb128 0x1
 3462 0183 13       		.uleb128 0x13
 3463 0184 00       		.byte	0
 3464 0185 00       		.byte	0
 3465 0186 20       		.uleb128 0x20
 3466 0187 05       		.uleb128 0x5
 3467 0188 00       		.byte	0
 3468 0189 03       		.uleb128 0x3
 3469 018a 0E       		.uleb128 0xe
 3470 018b 3A       		.uleb128 0x3a
 3471 018c 0B       		.uleb128 0xb
 3472 018d 3B       		.uleb128 0x3b
 3473 018e 05       		.uleb128 0x5
 3474 018f 49       		.uleb128 0x49
 3475 0190 13       		.uleb128 0x13
 3476 0191 02       		.uleb128 0x2
 3477 0192 17       		.uleb128 0x17
 3478 0193 00       		.byte	0
 3479 0194 00       		.byte	0
 3480 0195 21       		.uleb128 0x21
 3481 0196 34       		.uleb128 0x34
 3482 0197 00       		.byte	0
 3483 0198 03       		.uleb128 0x3
 3484 0199 0E       		.uleb128 0xe
 3485 019a 3A       		.uleb128 0x3a
 3486 019b 0B       		.uleb128 0xb
 3487 019c 3B       		.uleb128 0x3b
 3488 019d 05       		.uleb128 0x5
 3489 019e 49       		.uleb128 0x49
 3490 019f 13       		.uleb128 0x13
 3491 01a0 00       		.byte	0
 3492 01a1 00       		.byte	0
 3493 01a2 22       		.uleb128 0x22
 3494 01a3 34       		.uleb128 0x34
 3495 01a4 00       		.byte	0
 3496 01a5 03       		.uleb128 0x3
 3497 01a6 0E       		.uleb128 0xe
 3498 01a7 3A       		.uleb128 0x3a
 3499 01a8 0B       		.uleb128 0xb
 3500 01a9 3B       		.uleb128 0x3b
 3501 01aa 05       		.uleb128 0x5
 3502 01ab 49       		.uleb128 0x49
 3503 01ac 13       		.uleb128 0x13
 3504 01ad 02       		.uleb128 0x2
 3505 01ae 18       		.uleb128 0x18
 3506 01af 00       		.byte	0
 3507 01b0 00       		.byte	0
 3508 01b1 23       		.uleb128 0x23
 3509 01b2 898201   		.uleb128 0x4109
 3510 01b5 01       		.byte	0x1
 3511 01b6 11       		.uleb128 0x11
 3512 01b7 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 136


 3513 01b8 31       		.uleb128 0x31
 3514 01b9 13       		.uleb128 0x13
 3515 01ba 00       		.byte	0
 3516 01bb 00       		.byte	0
 3517 01bc 24       		.uleb128 0x24
 3518 01bd 8A8201   		.uleb128 0x410a
 3519 01c0 00       		.byte	0
 3520 01c1 02       		.uleb128 0x2
 3521 01c2 18       		.uleb128 0x18
 3522 01c3 9142     		.uleb128 0x2111
 3523 01c5 18       		.uleb128 0x18
 3524 01c6 00       		.byte	0
 3525 01c7 00       		.byte	0
 3526 01c8 25       		.uleb128 0x25
 3527 01c9 898201   		.uleb128 0x4109
 3528 01cc 01       		.byte	0x1
 3529 01cd 11       		.uleb128 0x11
 3530 01ce 01       		.uleb128 0x1
 3531 01cf 31       		.uleb128 0x31
 3532 01d0 13       		.uleb128 0x13
 3533 01d1 01       		.uleb128 0x1
 3534 01d2 13       		.uleb128 0x13
 3535 01d3 00       		.byte	0
 3536 01d4 00       		.byte	0
 3537 01d5 26       		.uleb128 0x26
 3538 01d6 898201   		.uleb128 0x4109
 3539 01d9 00       		.byte	0
 3540 01da 11       		.uleb128 0x11
 3541 01db 01       		.uleb128 0x1
 3542 01dc 31       		.uleb128 0x31
 3543 01dd 13       		.uleb128 0x13
 3544 01de 00       		.byte	0
 3545 01df 00       		.byte	0
 3546 01e0 27       		.uleb128 0x27
 3547 01e1 2E       		.uleb128 0x2e
 3548 01e2 01       		.byte	0x1
 3549 01e3 3F       		.uleb128 0x3f
 3550 01e4 19       		.uleb128 0x19
 3551 01e5 03       		.uleb128 0x3
 3552 01e6 0E       		.uleb128 0xe
 3553 01e7 3A       		.uleb128 0x3a
 3554 01e8 0B       		.uleb128 0xb
 3555 01e9 3B       		.uleb128 0x3b
 3556 01ea 0B       		.uleb128 0xb
 3557 01eb 27       		.uleb128 0x27
 3558 01ec 19       		.uleb128 0x19
 3559 01ed 11       		.uleb128 0x11
 3560 01ee 01       		.uleb128 0x1
 3561 01ef 12       		.uleb128 0x12
 3562 01f0 06       		.uleb128 0x6
 3563 01f1 40       		.uleb128 0x40
 3564 01f2 18       		.uleb128 0x18
 3565 01f3 9742     		.uleb128 0x2117
 3566 01f5 19       		.uleb128 0x19
 3567 01f6 01       		.uleb128 0x1
 3568 01f7 13       		.uleb128 0x13
 3569 01f8 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 137


 3570 01f9 00       		.byte	0
 3571 01fa 28       		.uleb128 0x28
 3572 01fb 34       		.uleb128 0x34
 3573 01fc 00       		.byte	0
 3574 01fd 03       		.uleb128 0x3
 3575 01fe 0E       		.uleb128 0xe
 3576 01ff 3A       		.uleb128 0x3a
 3577 0200 0B       		.uleb128 0xb
 3578 0201 3B       		.uleb128 0x3b
 3579 0202 0B       		.uleb128 0xb
 3580 0203 49       		.uleb128 0x49
 3581 0204 13       		.uleb128 0x13
 3582 0205 00       		.byte	0
 3583 0206 00       		.byte	0
 3584 0207 29       		.uleb128 0x29
 3585 0208 1D       		.uleb128 0x1d
 3586 0209 01       		.byte	0x1
 3587 020a 31       		.uleb128 0x31
 3588 020b 13       		.uleb128 0x13
 3589 020c 11       		.uleb128 0x11
 3590 020d 01       		.uleb128 0x1
 3591 020e 12       		.uleb128 0x12
 3592 020f 06       		.uleb128 0x6
 3593 0210 58       		.uleb128 0x58
 3594 0211 0B       		.uleb128 0xb
 3595 0212 59       		.uleb128 0x59
 3596 0213 0B       		.uleb128 0xb
 3597 0214 01       		.uleb128 0x1
 3598 0215 13       		.uleb128 0x13
 3599 0216 00       		.byte	0
 3600 0217 00       		.byte	0
 3601 0218 2A       		.uleb128 0x2a
 3602 0219 05       		.uleb128 0x5
 3603 021a 00       		.byte	0
 3604 021b 31       		.uleb128 0x31
 3605 021c 13       		.uleb128 0x13
 3606 021d 02       		.uleb128 0x2
 3607 021e 17       		.uleb128 0x17
 3608 021f 00       		.byte	0
 3609 0220 00       		.byte	0
 3610 0221 2B       		.uleb128 0x2b
 3611 0222 1D       		.uleb128 0x1d
 3612 0223 01       		.byte	0x1
 3613 0224 31       		.uleb128 0x31
 3614 0225 13       		.uleb128 0x13
 3615 0226 11       		.uleb128 0x11
 3616 0227 01       		.uleb128 0x1
 3617 0228 12       		.uleb128 0x12
 3618 0229 06       		.uleb128 0x6
 3619 022a 58       		.uleb128 0x58
 3620 022b 0B       		.uleb128 0xb
 3621 022c 59       		.uleb128 0x59
 3622 022d 05       		.uleb128 0x5
 3623 022e 01       		.uleb128 0x1
 3624 022f 13       		.uleb128 0x13
 3625 0230 00       		.byte	0
 3626 0231 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 138


 3627 0232 2C       		.uleb128 0x2c
 3628 0233 05       		.uleb128 0x5
 3629 0234 00       		.byte	0
 3630 0235 31       		.uleb128 0x31
 3631 0236 13       		.uleb128 0x13
 3632 0237 00       		.byte	0
 3633 0238 00       		.byte	0
 3634 0239 2D       		.uleb128 0x2d
 3635 023a 2E       		.uleb128 0x2e
 3636 023b 01       		.byte	0x1
 3637 023c 3F       		.uleb128 0x3f
 3638 023d 19       		.uleb128 0x19
 3639 023e 03       		.uleb128 0x3
 3640 023f 0E       		.uleb128 0xe
 3641 0240 3A       		.uleb128 0x3a
 3642 0241 0B       		.uleb128 0xb
 3643 0242 3B       		.uleb128 0x3b
 3644 0243 0B       		.uleb128 0xb
 3645 0244 27       		.uleb128 0x27
 3646 0245 19       		.uleb128 0x19
 3647 0246 8701     		.uleb128 0x87
 3648 0248 19       		.uleb128 0x19
 3649 0249 11       		.uleb128 0x11
 3650 024a 01       		.uleb128 0x1
 3651 024b 12       		.uleb128 0x12
 3652 024c 06       		.uleb128 0x6
 3653 024d 40       		.uleb128 0x40
 3654 024e 18       		.uleb128 0x18
 3655 024f 9742     		.uleb128 0x2117
 3656 0251 19       		.uleb128 0x19
 3657 0252 01       		.uleb128 0x1
 3658 0253 13       		.uleb128 0x13
 3659 0254 00       		.byte	0
 3660 0255 00       		.byte	0
 3661 0256 2E       		.uleb128 0x2e
 3662 0257 05       		.uleb128 0x5
 3663 0258 00       		.byte	0
 3664 0259 03       		.uleb128 0x3
 3665 025a 0E       		.uleb128 0xe
 3666 025b 3A       		.uleb128 0x3a
 3667 025c 0B       		.uleb128 0xb
 3668 025d 3B       		.uleb128 0x3b
 3669 025e 0B       		.uleb128 0xb
 3670 025f 49       		.uleb128 0x49
 3671 0260 13       		.uleb128 0x13
 3672 0261 02       		.uleb128 0x2
 3673 0262 17       		.uleb128 0x17
 3674 0263 00       		.byte	0
 3675 0264 00       		.byte	0
 3676 0265 2F       		.uleb128 0x2f
 3677 0266 34       		.uleb128 0x34
 3678 0267 00       		.byte	0
 3679 0268 03       		.uleb128 0x3
 3680 0269 0E       		.uleb128 0xe
 3681 026a 3A       		.uleb128 0x3a
 3682 026b 0B       		.uleb128 0xb
 3683 026c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 139


 3684 026d 0B       		.uleb128 0xb
 3685 026e 49       		.uleb128 0x49
 3686 026f 13       		.uleb128 0x13
 3687 0270 02       		.uleb128 0x2
 3688 0271 18       		.uleb128 0x18
 3689 0272 00       		.byte	0
 3690 0273 00       		.byte	0
 3691 0274 30       		.uleb128 0x30
 3692 0275 34       		.uleb128 0x34
 3693 0276 00       		.byte	0
 3694 0277 03       		.uleb128 0x3
 3695 0278 0E       		.uleb128 0xe
 3696 0279 3A       		.uleb128 0x3a
 3697 027a 0B       		.uleb128 0xb
 3698 027b 3B       		.uleb128 0x3b
 3699 027c 0B       		.uleb128 0xb
 3700 027d 49       		.uleb128 0x49
 3701 027e 13       		.uleb128 0x13
 3702 027f 02       		.uleb128 0x2
 3703 0280 17       		.uleb128 0x17
 3704 0281 00       		.byte	0
 3705 0282 00       		.byte	0
 3706 0283 31       		.uleb128 0x31
 3707 0284 34       		.uleb128 0x34
 3708 0285 00       		.byte	0
 3709 0286 03       		.uleb128 0x3
 3710 0287 0E       		.uleb128 0xe
 3711 0288 3A       		.uleb128 0x3a
 3712 0289 0B       		.uleb128 0xb
 3713 028a 3B       		.uleb128 0x3b
 3714 028b 05       		.uleb128 0x5
 3715 028c 49       		.uleb128 0x49
 3716 028d 13       		.uleb128 0x13
 3717 028e 3F       		.uleb128 0x3f
 3718 028f 19       		.uleb128 0x19
 3719 0290 3C       		.uleb128 0x3c
 3720 0291 19       		.uleb128 0x19
 3721 0292 00       		.byte	0
 3722 0293 00       		.byte	0
 3723 0294 32       		.uleb128 0x32
 3724 0295 34       		.uleb128 0x34
 3725 0296 00       		.byte	0
 3726 0297 03       		.uleb128 0x3
 3727 0298 0E       		.uleb128 0xe
 3728 0299 3A       		.uleb128 0x3a
 3729 029a 0B       		.uleb128 0xb
 3730 029b 3B       		.uleb128 0x3b
 3731 029c 0B       		.uleb128 0xb
 3732 029d 49       		.uleb128 0x49
 3733 029e 13       		.uleb128 0x13
 3734 029f 3F       		.uleb128 0x3f
 3735 02a0 19       		.uleb128 0x19
 3736 02a1 3C       		.uleb128 0x3c
 3737 02a2 19       		.uleb128 0x19
 3738 02a3 00       		.byte	0
 3739 02a4 00       		.byte	0
 3740 02a5 33       		.uleb128 0x33
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 140


 3741 02a6 34       		.uleb128 0x34
 3742 02a7 00       		.byte	0
 3743 02a8 03       		.uleb128 0x3
 3744 02a9 0E       		.uleb128 0xe
 3745 02aa 3A       		.uleb128 0x3a
 3746 02ab 0B       		.uleb128 0xb
 3747 02ac 3B       		.uleb128 0x3b
 3748 02ad 0B       		.uleb128 0xb
 3749 02ae 49       		.uleb128 0x49
 3750 02af 13       		.uleb128 0x13
 3751 02b0 3F       		.uleb128 0x3f
 3752 02b1 19       		.uleb128 0x19
 3753 02b2 02       		.uleb128 0x2
 3754 02b3 18       		.uleb128 0x18
 3755 02b4 00       		.byte	0
 3756 02b5 00       		.byte	0
 3757 02b6 34       		.uleb128 0x34
 3758 02b7 2E       		.uleb128 0x2e
 3759 02b8 00       		.byte	0
 3760 02b9 3F       		.uleb128 0x3f
 3761 02ba 19       		.uleb128 0x19
 3762 02bb 3C       		.uleb128 0x3c
 3763 02bc 19       		.uleb128 0x19
 3764 02bd 6E       		.uleb128 0x6e
 3765 02be 0E       		.uleb128 0xe
 3766 02bf 03       		.uleb128 0x3
 3767 02c0 0E       		.uleb128 0xe
 3768 02c1 3A       		.uleb128 0x3a
 3769 02c2 0B       		.uleb128 0xb
 3770 02c3 3B       		.uleb128 0x3b
 3771 02c4 05       		.uleb128 0x5
 3772 02c5 00       		.byte	0
 3773 02c6 00       		.byte	0
 3774 02c7 35       		.uleb128 0x35
 3775 02c8 2E       		.uleb128 0x2e
 3776 02c9 00       		.byte	0
 3777 02ca 3F       		.uleb128 0x3f
 3778 02cb 19       		.uleb128 0x19
 3779 02cc 3C       		.uleb128 0x3c
 3780 02cd 19       		.uleb128 0x19
 3781 02ce 6E       		.uleb128 0x6e
 3782 02cf 0E       		.uleb128 0xe
 3783 02d0 03       		.uleb128 0x3
 3784 02d1 0E       		.uleb128 0xe
 3785 02d2 3A       		.uleb128 0x3a
 3786 02d3 0B       		.uleb128 0xb
 3787 02d4 3B       		.uleb128 0x3b
 3788 02d5 0B       		.uleb128 0xb
 3789 02d6 00       		.byte	0
 3790 02d7 00       		.byte	0
 3791 02d8 00       		.byte	0
 3792              		.section	.debug_loc,"",%progbits
 3793              	.Ldebug_loc0:
 3794              	.LLST0:
 3795 0000 00000000 		.4byte	.LVL0
 3796 0004 12000000 		.4byte	.LVL1
 3797 0008 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 141


 3798 000a 50       		.byte	0x50
 3799 000b 12000000 		.4byte	.LVL1
 3800 000f 24000000 		.4byte	.LFE524
 3801 0013 0400     		.2byte	0x4
 3802 0015 F3       		.byte	0xf3
 3803 0016 01       		.uleb128 0x1
 3804 0017 50       		.byte	0x50
 3805 0018 9F       		.byte	0x9f
 3806 0019 00000000 		.4byte	0
 3807 001d 00000000 		.4byte	0
 3808              	.LLST1:
 3809 0021 00000000 		.4byte	.LVL6
 3810 0025 12000000 		.4byte	.LVL7
 3811 0029 0100     		.2byte	0x1
 3812 002b 50       		.byte	0x50
 3813 002c 12000000 		.4byte	.LVL7
 3814 0030 15000000 		.4byte	.LVL8-1
 3815 0034 0100     		.2byte	0x1
 3816 0036 52       		.byte	0x52
 3817 0037 15000000 		.4byte	.LVL8-1
 3818 003b 20000000 		.4byte	.LFE526
 3819 003f 0400     		.2byte	0x4
 3820 0041 F3       		.byte	0xf3
 3821 0042 01       		.uleb128 0x1
 3822 0043 50       		.byte	0x50
 3823 0044 9F       		.byte	0x9f
 3824 0045 00000000 		.4byte	0
 3825 0049 00000000 		.4byte	0
 3826              	.LLST2:
 3827 004d 04000000 		.4byte	.LVL9
 3828 0051 0A000000 		.4byte	.LVL10
 3829 0055 0600     		.2byte	0x6
 3830 0057 0C       		.byte	0xc
 3831 0058 00001D41 		.4byte	0x411d0000
 3832 005c 9F       		.byte	0x9f
 3833 005d 00000000 		.4byte	0
 3834 0061 00000000 		.4byte	0
 3835              	.LLST3:
 3836 0065 0A000000 		.4byte	.LVL10
 3837 0069 22000000 		.4byte	.LVL12
 3838 006d 0600     		.2byte	0x6
 3839 006f 0C       		.byte	0xc
 3840 0070 00001D41 		.4byte	0x411d0000
 3841 0074 9F       		.byte	0x9f
 3842 0075 00000000 		.4byte	0
 3843 0079 00000000 		.4byte	0
 3844              	.LLST4:
 3845 007d 22000000 		.4byte	.LVL12
 3846 0081 26000000 		.4byte	.LVL13
 3847 0085 0600     		.2byte	0x6
 3848 0087 0C       		.byte	0xc
 3849 0088 00001D41 		.4byte	0x411d0000
 3850 008c 9F       		.byte	0x9f
 3851 008d 00000000 		.4byte	0
 3852 0091 00000000 		.4byte	0
 3853              	.LLST5:
 3854 0095 00000000 		.4byte	.LVL15
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 142


 3855 0099 0A000000 		.4byte	.LVL17
 3856 009d 0100     		.2byte	0x1
 3857 009f 50       		.byte	0x50
 3858 00a0 0A000000 		.4byte	.LVL17
 3859 00a4 80010000 		.4byte	.LFE522
 3860 00a8 0400     		.2byte	0x4
 3861 00aa F3       		.byte	0xf3
 3862 00ab 01       		.uleb128 0x1
 3863 00ac 50       		.byte	0x50
 3864 00ad 9F       		.byte	0x9f
 3865 00ae 00000000 		.4byte	0
 3866 00b2 00000000 		.4byte	0
 3867              	.LLST6:
 3868 00b6 2E000000 		.4byte	.LVL23
 3869 00ba 44000000 		.4byte	.LVL25
 3870 00be 0100     		.2byte	0x1
 3871 00c0 50       		.byte	0x50
 3872 00c1 4C000000 		.4byte	.LVL27
 3873 00c5 50000000 		.4byte	.LVL28
 3874 00c9 0100     		.2byte	0x1
 3875 00cb 50       		.byte	0x50
 3876 00cc 58000000 		.4byte	.LVL30
 3877 00d0 70000000 		.4byte	.LVL31
 3878 00d4 0100     		.2byte	0x1
 3879 00d6 50       		.byte	0x50
 3880 00d7 24010000 		.4byte	.LVL44
 3881 00db 36010000 		.4byte	.LVL47
 3882 00df 0100     		.2byte	0x1
 3883 00e1 50       		.byte	0x50
 3884 00e2 00000000 		.4byte	0
 3885 00e6 00000000 		.4byte	0
 3886              	.LLST7:
 3887 00ea 08000000 		.4byte	.LVL16
 3888 00ee 1C000000 		.4byte	.LVL22
 3889 00f2 0200     		.2byte	0x2
 3890 00f4 30       		.byte	0x30
 3891 00f5 9F       		.byte	0x9f
 3892 00f6 1C000000 		.4byte	.LVL22
 3893 00fa 42000000 		.4byte	.LVL24
 3894 00fe 0100     		.2byte	0x1
 3895 0100 54       		.byte	0x54
 3896 0101 42000000 		.4byte	.LVL24
 3897 0105 4C000000 		.4byte	.LVL27
 3898 0109 0200     		.2byte	0x2
 3899 010b 31       		.byte	0x31
 3900 010c 9F       		.byte	0x9f
 3901 010d 4C000000 		.4byte	.LVL27
 3902 0111 58000000 		.4byte	.LVL30
 3903 0115 0200     		.2byte	0x2
 3904 0117 30       		.byte	0x30
 3905 0118 9F       		.byte	0x9f
 3906 0119 58000000 		.4byte	.LVL30
 3907 011d 80010000 		.4byte	.LFE522
 3908 0121 0100     		.2byte	0x1
 3909 0123 54       		.byte	0x54
 3910 0124 00000000 		.4byte	0
 3911 0128 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 143


 3912              	.LLST8:
 3913 012c CC000000 		.4byte	.LVL40
 3914 0130 DB000000 		.4byte	.LVL41-1
 3915 0134 0200     		.2byte	0x2
 3916 0136 90       		.byte	0x90
 3917 0137 4E       		.uleb128 0x4e
 3918 0138 DB000000 		.4byte	.LVL41-1
 3919 013c 24010000 		.4byte	.LVL44
 3920 0140 0800     		.2byte	0x8
 3921 0142 F5       		.byte	0xf5
 3922 0143 50       		.uleb128 0x50
 3923 0144 25       		.uleb128 0x25
 3924 0145 F5       		.byte	0xf5
 3925 0146 51       		.uleb128 0x51
 3926 0147 25       		.uleb128 0x25
 3927 0148 1B       		.byte	0x1b
 3928 0149 9F       		.byte	0x9f
 3929 014a 00000000 		.4byte	0
 3930 014e 00000000 		.4byte	0
 3931              	.LLST9:
 3932 0152 58000000 		.4byte	.LVL30
 3933 0156 80000000 		.4byte	.LVL34
 3934 015a 0200     		.2byte	0x2
 3935 015c 30       		.byte	0x30
 3936 015d 9F       		.byte	0x9f
 3937 015e 00000000 		.4byte	0
 3938 0162 00000000 		.4byte	0
 3939              	.LLST10:
 3940 0166 80000000 		.4byte	.LVL34
 3941 016a AC000000 		.4byte	.LVL37
 3942 016e 0200     		.2byte	0x2
 3943 0170 31       		.byte	0x31
 3944 0171 9F       		.byte	0x9f
 3945 0172 00000000 		.4byte	0
 3946 0176 00000000 		.4byte	0
 3947              	.LLST11:
 3948 017a B2000000 		.4byte	.LVL38
 3949 017e B8000000 		.4byte	.LVL39
 3950 0182 0200     		.2byte	0x2
 3951 0184 30       		.byte	0x30
 3952 0185 9F       		.byte	0x9f
 3953 0186 00000000 		.4byte	0
 3954 018a 00000000 		.4byte	0
 3955              	.LLST12:
 3956 018e B2000000 		.4byte	.LVL38
 3957 0192 B8000000 		.4byte	.LVL39
 3958 0196 0600     		.2byte	0x6
 3959 0198 0C       		.byte	0xc
 3960 0199 00053240 		.4byte	0x40320500
 3961 019d 9F       		.byte	0x9f
 3962 019e 00000000 		.4byte	0
 3963 01a2 00000000 		.4byte	0
 3964              	.LLST13:
 3965 01a6 2E010000 		.4byte	.LVL45
 3966 01aa 34010000 		.4byte	.LVL46
 3967 01ae 0200     		.2byte	0x2
 3968 01b0 30       		.byte	0x30
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 144


 3969 01b1 9F       		.byte	0x9f
 3970 01b2 00000000 		.4byte	0
 3971 01b6 00000000 		.4byte	0
 3972              	.LLST14:
 3973 01ba 2E010000 		.4byte	.LVL45
 3974 01be 34010000 		.4byte	.LVL46
 3975 01c2 0600     		.2byte	0x6
 3976 01c4 0C       		.byte	0xc
 3977 01c5 00053240 		.4byte	0x40320500
 3978 01c9 9F       		.byte	0x9f
 3979 01ca 00000000 		.4byte	0
 3980 01ce 00000000 		.4byte	0
 3981              		.section	.debug_aranges,"",%progbits
 3982 0000 3C000000 		.4byte	0x3c
 3983 0004 0200     		.2byte	0x2
 3984 0006 00000000 		.4byte	.Ldebug_info0
 3985 000a 04       		.byte	0x4
 3986 000b 00       		.byte	0
 3987 000c 0000     		.2byte	0
 3988 000e 0000     		.2byte	0
 3989 0010 00000000 		.4byte	.LFB524
 3990 0014 24000000 		.4byte	.LFE524-.LFB524
 3991 0018 00000000 		.4byte	.LFB525
 3992 001c 40000000 		.4byte	.LFE525-.LFB525
 3993 0020 00000000 		.4byte	.LFB526
 3994 0024 20000000 		.4byte	.LFE526-.LFB526
 3995 0028 00000000 		.4byte	.LFB523
 3996 002c 4C000000 		.4byte	.LFE523-.LFB523
 3997 0030 00000000 		.4byte	.LFB522
 3998 0034 80010000 		.4byte	.LFE522-.LFB522
 3999 0038 00000000 		.4byte	0
 4000 003c 00000000 		.4byte	0
 4001              		.section	.debug_ranges,"",%progbits
 4002              	.Ldebug_ranges0:
 4003 0000 00000000 		.4byte	.LFB524
 4004 0004 24000000 		.4byte	.LFE524
 4005 0008 00000000 		.4byte	.LFB525
 4006 000c 40000000 		.4byte	.LFE525
 4007 0010 00000000 		.4byte	.LFB526
 4008 0014 20000000 		.4byte	.LFE526
 4009 0018 00000000 		.4byte	.LFB523
 4010 001c 4C000000 		.4byte	.LFE523
 4011 0020 00000000 		.4byte	.LFB522
 4012 0024 80010000 		.4byte	.LFE522
 4013 0028 00000000 		.4byte	0
 4014 002c 00000000 		.4byte	0
 4015              		.section	.debug_line,"",%progbits
 4016              	.Ldebug_line0:
 4017 0000 8E050000 		.section	.debug_str,"MS",%progbits,1
 4017      0200CA04 
 4017      00000201 
 4017      FB0E0D00 
 4017      01010101 
 4018              	.LASF334:
 4019 0000 63795F62 		.ascii	"cy_ble_connState\000"
 4019      6C655F63 
 4019      6F6E6E53 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 145


 4019      74617465 
 4019      00
 4020              	.LASF273:
 4021 0011 43595F42 		.ascii	"CY_BLE_HTS_TEMP_TYPE\000"
 4021      4C455F48 
 4021      54535F54 
 4021      454D505F 
 4021      54595045 
 4022              	.LASF33:
 4023 0026 52455345 		.ascii	"RESERVED\000"
 4023      52564544 
 4023      00
 4024              	.LASF41:
 4025 002f 5644445F 		.ascii	"VDD_ACTIVE\000"
 4025      41435449 
 4025      564500
 4026              	.LASF37:
 4027 003a 494E5452 		.ascii	"INTR_CAUSE0\000"
 4027      5F434155 
 4027      53453000 
 4028              	.LASF38:
 4029 0046 494E5452 		.ascii	"INTR_CAUSE1\000"
 4029      5F434155 
 4029      53453100 
 4030              	.LASF240:
 4031 0052 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 4031      4C455F45 
 4031      56545F4C 
 4031      32434150 
 4031      5F434246 
 4032              	.LASF94:
 4033 0072 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 4033      625F7363 
 4033      625F7370 
 4033      695F6861 
 4033      6E646C65 
 4034              	.LASF61:
 4035 0090 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 4035      5F574F52 
 4035      4B5F5550 
 4035      44415445 
 4035      4400
 4036              	.LASF188:
 4037 00a2 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 4037      4C455F45 
 4037      56545F47 
 4037      4150505F 
 4037      41445645 
 4038              	.LASF282:
 4039 00cb 43595F42 		.ascii	"CY_BLE_SRVI_COUNT\000"
 4039      4C455F53 
 4039      5256495F 
 4039      434F554E 
 4039      5400
 4040              	.LASF271:
 4041 00dd 43595F42 		.ascii	"CY_BLE_DIS_CHAR_COUNT\000"
 4041      4C455F44 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 146


 4041      49535F43 
 4041      4841525F 
 4041      434F554E 
 4042              	.LASF242:
 4043 00f3 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 4043      4C455F45 
 4043      56545F4C 
 4043      32434150 
 4043      5F434246 
 4044              	.LASF135:
 4045 0117 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 4045      4C455F45 
 4045      56545F50 
 4045      454E4449 
 4045      4E475F46 
 4046              	.LASF173:
 4047 0136 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 4047      4C455F45 
 4047      56545F41 
 4047      45535F43 
 4047      434D5F44 
 4048              	.LASF226:
 4049 015a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 4049      4C455F45 
 4049      56545F47 
 4049      41545443 
 4049      5F48414E 
 4050              	.LASF335:
 4051 017c 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 4051      494E4B5F 
 4051      5350494D 
 4051      5F636F6E 
 4051      74657874 
 4052              	.LASF295:
 4053 0191 54454D50 		.ascii	"TEMPERATURE_TIMER_EXPIRED\000"
 4053      45524154 
 4053      5552455F 
 4053      54494D45 
 4053      525F4558 
 4054              	.LASF328:
 4055 01ab 74656D70 		.ascii	"temperature\000"
 4055      65726174 
 4055      75726500 
 4056              	.LASF260:
 4057 01b7 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 4057      4C455F43 
 4057      4F4E4E5F 
 4057      53544154 
 4057      455F434C 
 4058              	.LASF53:
 4059 01db 4348414E 		.ascii	"CHAN_EN\000"
 4059      5F454E00 
 4060              	.LASF360:
 4061 01e3 69737241 		.ascii	"isrADC\000"
 4061      444300
 4062              	.LASF167:
 4063 01ea 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 147


 4063      4C455F45 
 4063      56545F53 
 4063      45545F54 
 4063      585F5057 
 4064              	.LASF111:
 4065 0209 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 4065      41525F49 
 4065      4E54525F 
 4065      454F535F 
 4065      4D41534B 
 4066              	.LASF156:
 4067 021e 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 4067      4C455F45 
 4067      56545F47 
 4067      45545F50 
 4067      48595F43 
 4068              	.LASF315:
 4069 023a 54656D70 		.ascii	"TemperatureTimerUpdate\000"
 4069      65726174 
 4069      75726554 
 4069      696D6572 
 4069      55706461 
 4070              	.LASF339:
 4071 0251 74656D70 		.ascii	"temperatureDataQ\000"
 4071      65726174 
 4071      75726544 
 4071      61746151 
 4071      00
 4072              	.LASF71:
 4073 0262 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4073      455F494E 
 4073      54525F4D 
 4073      41534B00 
 4074              	.LASF241:
 4075 0272 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 4075      4C455F45 
 4075      56545F4C 
 4075      32434150 
 4075      5F434246 
 4076              	.LASF1:
 4077 0296 756E7369 		.ascii	"unsigned int\000"
 4077      676E6564 
 4077      20696E74 
 4077      00
 4078              	.LASF333:
 4079 02a3 63795F62 		.ascii	"cy_ble_connHandle\000"
 4079      6C655F63 
 4079      6F6E6E48 
 4079      616E646C 
 4079      6500
 4080              	.LASF205:
 4081 02b5 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 4081      4C455F45 
 4081      56545F47 
 4081      41505F43 
 4081      52454154 
 4082              	.LASF73:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 148


 4083 02e0 494E5452 		.ascii	"INTR_CAUSE\000"
 4083      5F434155 
 4083      534500
 4084              	.LASF108:
 4085 02eb 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 4085      41525F52 
 4085      414E4745 
 4085      5F434F4E 
 4085      445F4F55 
 4086              	.LASF101:
 4087 0305 74784275 		.ascii	"txBufIdx\000"
 4087      66496478 
 4087      00
 4088              	.LASF269:
 4089 030e 43595F42 		.ascii	"CY_BLE_DIS_REG_CERT_DATA\000"
 4089      4C455F44 
 4089      49535F52 
 4089      45475F43 
 4089      4552545F 
 4090              	.LASF32:
 4091 0327 4346475F 		.ascii	"CFG_SIO\000"
 4091      53494F00 
 4092              	.LASF10:
 4093 032f 5F5F696E 		.ascii	"__int32_t\000"
 4093      7433325F 
 4093      7400
 4094              	.LASF264:
 4095 0339 43595F42 		.ascii	"CY_BLE_DIS_SERIAL_NUMBER\000"
 4095      4C455F44 
 4095      49535F53 
 4095      45524941 
 4095      4C5F4E55 
 4096              	.LASF63:
 4097 0352 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 4097      5F574F52 
 4097      4B5F4E45 
 4097      5756414C 
 4097      554500
 4098              	.LASF283:
 4099 0365 6368616E 		.ascii	"channelBase\000"
 4099      6E656C42 
 4099      61736500 
 4100              	.LASF64:
 4101 0371 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 4101      5F524553 
 4101      554C545F 
 4101      4E455756 
 4101      414C5545 
 4102              	.LASF261:
 4103 0386 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 4103      6E5F626C 
 4103      655F636F 
 4103      6E6E5F73 
 4103      74617465 
 4104              	.LASF148:
 4105 039d 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 4105      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 149


 4105      56545F47 
 4105      45545F4C 
 4105      4F43414C 
 4106              	.LASF215:
 4107 03bf 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 4107      4C455F45 
 4107      56545F47 
 4107      41545443 
 4107      5F46494E 
 4108              	.LASF298:
 4109 03de 48414E44 		.ascii	"HANDLE_GPIO_INTERRUPT\000"
 4109      4C455F47 
 4109      50494F5F 
 4109      494E5445 
 4109      52525550 
 4110              	.LASF160:
 4111 03f4 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 4111      4C455F45 
 4111      56545F53 
 4111      45545F50 
 4111      52495641 
 4112              	.LASF285:
 4113 0419 6877436F 		.ascii	"hwConfigStc\000"
 4113      6E666967 
 4113      53746300 
 4114              	.LASF23:
 4115 0425 4F55545F 		.ascii	"OUT_SET\000"
 4115      53455400 
 4116              	.LASF330:
 4117 042d 70726F63 		.ascii	"processingComplete\000"
 4117      65737369 
 4117      6E67436F 
 4117      6D706C65 
 4117      746500
 4118              	.LASF8:
 4119 0440 73686F72 		.ascii	"short int\000"
 4119      7420696E 
 4119      7400
 4120              	.LASF65:
 4121 044a 53415455 		.ascii	"SATURATE_INTR\000"
 4121      52415445 
 4121      5F494E54 
 4121      5200
 4122              	.LASF49:
 4123 0458 53414D50 		.ascii	"SAMPLE_TIME01\000"
 4123      4C455F54 
 4123      494D4530 
 4123      3100
 4124              	.LASF209:
 4125 0466 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 4125      4C455F45 
 4125      56545F47 
 4125      4154545F 
 4125      434F4E4E 
 4126              	.LASF77:
 4127 0482 494E4A5F 		.ascii	"INJ_RESULT\000"
 4127      52455355 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 150


 4127      4C5400
 4128              	.LASF28:
 4129 048d 494E5452 		.ascii	"INTR_SET\000"
 4129      5F534554 
 4129      00
 4130              	.LASF248:
 4131 0496 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 4131      4C455F41 
 4131      44565F53 
 4131      54415445 
 4131      5F53544F 
 4132              	.LASF350:
 4133 04af 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 4133      41525F57 
 4133      616B6575 
 4133      7000
 4134              	.LASF123:
 4135 04bd 73617449 		.ascii	"satIntrMask\000"
 4135      6E74724D 
 4135      61736B00 
 4136              	.LASF216:
 4137 04c9 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 4137      4C455F45 
 4137      56545F47 
 4137      41545443 
 4137      5F46494E 
 4138              	.LASF158:
 4139 04f1 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 4139      4C455F45 
 4139      56545F53 
 4139      45545F50 
 4139      48595F43 
 4140              	.LASF231:
 4141 050d 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 4141      4C455F45 
 4141      56545F47 
 4141      41545453 
 4141      5F524541 
 4142              	.LASF356:
 4143 0537 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4143      43313120 
 4143      352E342E 
 4143      31203230 
 4143      31363036 
 4144 056a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 4144      20726576 
 4144      6973696F 
 4144      6E203233 
 4144      37373135 
 4145 059d 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 4145      70202D6D 
 4145      6670753D 
 4145      66707634 
 4145      2D73702D 
 4146 05d0 65637469 		.ascii	"ections -ffat-lto-objects\000"
 4146      6F6E7320 
 4146      2D666661 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 151


 4146      742D6C74 
 4146      6F2D6F62 
 4147              	.LASF203:
 4148 05ea 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 4148      4C455F45 
 4148      56545F47 
 4148      41505F52 
 4148      45534F4C 
 4149              	.LASF105:
 4150 0611 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 4150      41525F52 
 4150      414E4745 
 4150      5F434F4E 
 4150      445F4245 
 4151              	.LASF254:
 4152 0629 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 4152      4C455F43 
 4152      4F4E4E5F 
 4152      53544154 
 4152      455F434C 
 4153              	.LASF212:
 4154 065a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 4154      4C455F45 
 4154      56545F47 
 4154      41545443 
 4154      5F584348 
 4155              	.LASF228:
 4156 0679 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 4156      4C455F45 
 4156      56545F47 
 4156      41545453 
 4156      5F48414E 
 4157              	.LASF30:
 4158 069b 4346475F 		.ascii	"CFG_IN\000"
 4158      494E00
 4159              	.LASF159:
 4160 06a2 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 4160      4C455F45 
 4160      56545F50 
 4160      48595F55 
 4160      50444154 
 4161              	.LASF349:
 4162 06c1 43795F53 		.ascii	"Cy_SAR_Sleep\000"
 4162      41525F53 
 4162      6C656570 
 4162      00
 4163              	.LASF217:
 4164 06ce 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 4164      4C455F45 
 4164      56545F47 
 4164      41545443 
 4164      5F524541 
 4165              	.LASF218:
 4166 06e8 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 4166      4C455F45 
 4166      56545F47 
 4166      41545443 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 152


 4166      5F524541 
 4167              	.LASF292:
 4168 0707 53454E44 		.ascii	"SEND_TEMPERATURE\000"
 4168      5F54454D 
 4168      50455241 
 4168      54555245 
 4168      00
 4169              	.LASF21:
 4170 0718 75696E74 		.ascii	"uint32_t\000"
 4170      33325F74 
 4170      00
 4171              	.LASF327:
 4172 0721 72546865 		.ascii	"rThermistor\000"
 4172      726D6973 
 4172      746F7200 
 4173              	.LASF150:
 4174 072d 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 4174      4C455F45 
 4174      56545F53 
 4174      45545F52 
 4174      50415F45 
 4175              	.LASF325:
 4176 0750 636F756E 		.ascii	"countThermistor\000"
 4176      74546865 
 4176      726D6973 
 4176      746F7200 
 4177              	.LASF304:
 4178 0760 54696D65 		.ascii	"TimerHandle_t\000"
 4178      7248616E 
 4178      646C655F 
 4178      7400
 4179              	.LASF131:
 4180 076e 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 4180      4C455F45 
 4180      56545F53 
 4180      5441434B 
 4180      5F4F4E00 
 4181              	.LASF161:
 4182 0782 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 4182      4C455F45 
 4182      56545F4C 
 4182      4C5F434E 
 4182      54524C5F 
 4183              	.LASF361:
 4184 07ac 5461736B 		.ascii	"Task_Temperature\000"
 4184      5F54656D 
 4184      70657261 
 4184      74757265 
 4184      00
 4185              	.LASF227:
 4186 07bd 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 4186      4C455F45 
 4186      56545F47 
 4186      41545443 
 4186      5F48414E 
 4187              	.LASF147:
 4188 07df 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 153


 4188      4C455F45 
 4188      56545F47 
 4188      45545F50 
 4188      4545525F 
 4189              	.LASF130:
 4190 0800 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 4190      4C455F45 
 4190      56545F49 
 4190      4E56414C 
 4190      494400
 4191              	.LASF305:
 4192 0813 62617365 		.ascii	"base\000"
 4192      00
 4193              	.LASF22:
 4194 0818 4F55545F 		.ascii	"OUT_CLR\000"
 4194      434C5200 
 4195              	.LASF354:
 4196 0820 78517565 		.ascii	"xQueueGenericReceive\000"
 4196      75654765 
 4196      6E657269 
 4196      63526563 
 4196      65697665 
 4197              	.LASF19:
 4198 0835 696E7431 		.ascii	"int16_t\000"
 4198      365F7400 
 4199              	.LASF284:
 4200 083d 6E756D43 		.ascii	"numChannels\000"
 4200      68616E6E 
 4200      656C7300 
 4201              	.LASF198:
 4202 0849 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 4202      4C455F45 
 4202      56545F47 
 4202      41505F45 
 4202      4E48414E 
 4203              	.LASF229:
 4204 086e 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 4204      4C455F45 
 4204      56545F47 
 4204      41545453 
 4204      5F444154 
 4205              	.LASF14:
 4206 0893 6C6F6E67 		.ascii	"long long unsigned int\000"
 4206      206C6F6E 
 4206      6720756E 
 4206      7369676E 
 4206      65642069 
 4207              	.LASF300:
 4208 08aa 626C655F 		.ascii	"ble_commands_list_t\000"
 4208      636F6D6D 
 4208      616E6473 
 4208      5F6C6973 
 4208      745F7400 
 4209              	.LASF252:
 4210 08be 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 4210      6E5F626C 
 4210      655F6164 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 154


 4210      765F7374 
 4210      6174655F 
 4211              	.LASF165:
 4212 08d4 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 4212      4C455F45 
 4212      56545F47 
 4212      45545F52 
 4212      5353495F 
 4213              	.LASF50:
 4214 08f1 53414D50 		.ascii	"SAMPLE_TIME23\000"
 4214      4C455F54 
 4214      494D4532 
 4214      3300
 4215              	.LASF118:
 4216 08ff 72616E67 		.ascii	"rangeThres\000"
 4216      65546872 
 4216      657300
 4217              	.LASF249:
 4218 090a 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 4218      4C455F41 
 4218      44565F53 
 4218      54415445 
 4218      5F414456 
 4219              	.LASF329:
 4220 0929 626C6543 		.ascii	"bleCommandAndData\000"
 4220      6F6D6D61 
 4220      6E64416E 
 4220      64446174 
 4220      6100
 4221              	.LASF106:
 4222 093b 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 4222      41525F52 
 4222      414E4745 
 4222      5F434F4E 
 4222      445F494E 
 4223              	.LASF191:
 4224 0954 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 4224      4C455F45 
 4224      56545F47 
 4224      41505F45 
 4224      4E435259 
 4225              	.LASF163:
 4226 0972 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 4226      4C455F45 
 4226      56545F53 
 4226      45545F44 
 4226      45564943 
 4227              	.LASF129:
 4228 0996 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 4228      74635F73 
 4228      61725F63 
 4228      6F6E6669 
 4228      675F7400 
 4229              	.LASF246:
 4230 09aa 61747449 		.ascii	"attId\000"
 4230      6400
 4231              	.LASF114:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 155


 4232 09b0 6374726C 		.ascii	"ctrl\000"
 4232      00
 4233              	.LASF146:
 4234 09b5 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 4234      4C455F45 
 4234      56545F44 
 4234      4154415F 
 4234      4C454E47 
 4235              	.LASF197:
 4236 09d3 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 4236      4C455F45 
 4236      56545F47 
 4236      41505F4F 
 4236      4F425F47 
 4237              	.LASF31:
 4238 09fd 4346475F 		.ascii	"CFG_OUT\000"
 4238      4F555400 
 4239              	.LASF75:
 4240 0a05 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 4240      4348414E 
 4240      5F434F4E 
 4240      46494700 
 4241              	.LASF96:
 4242 0a15 72784275 		.ascii	"rxBuf\000"
 4242      6600
 4243              	.LASF318:
 4244 0a1b 696E7472 		.ascii	"intr_status\000"
 4244      5F737461 
 4244      74757300 
 4245              	.LASF189:
 4246 0a27 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 4246      4C455F45 
 4246      56545F47 
 4246      41505F44 
 4246      45564943 
 4247              	.LASF162:
 4248 0a47 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 4248      4C455F45 
 4248      56545F53 
 4248      4F46545F 
 4248      52455345 
 4249              	.LASF270:
 4250 0a66 43595F42 		.ascii	"CY_BLE_DIS_PNP_ID\000"
 4250      4C455F44 
 4250      49535F50 
 4250      4E505F49 
 4250      4400
 4251              	.LASF91:
 4252 0a78 5341525F 		.ascii	"SAR_Type\000"
 4252      54797065 
 4252      00
 4253              	.LASF223:
 4254 0a81 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 4254      4C455F45 
 4254      56545F47 
 4254      41545453 
 4254      5F505245 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 156


 4255              	.LASF117:
 4256 0aa1 73616D70 		.ascii	"sampleTime23\000"
 4256      6C655469 
 4256      6D653233 
 4256      00
 4257              	.LASF102:
 4258 0aae 63624576 		.ascii	"cbEvents\000"
 4258      656E7473 
 4258      00
 4259              	.LASF267:
 4260 0ab7 43595F42 		.ascii	"CY_BLE_DIS_SOFTWARE_REV\000"
 4260      4C455F44 
 4260      49535F53 
 4260      4F465457 
 4260      4152455F 
 4261              	.LASF17:
 4262 0acf 646F7562 		.ascii	"double\000"
 4262      6C6500
 4263              	.LASF93:
 4264 0ad6 5F426F6F 		.ascii	"_Bool\000"
 4264      6C00
 4265              	.LASF244:
 4266 0adc 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 4266      4C455F45 
 4266      56545F4D 
 4266      415800
 4267              	.LASF52:
 4268 0aeb 52414E47 		.ascii	"RANGE_COND\000"
 4268      455F434F 
 4268      4E4400
 4269              	.LASF239:
 4270 0af6 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 4270      4C455F45 
 4270      56545F4C 
 4270      32434150 
 4270      5F434246 
 4271              	.LASF42:
 4272 0b18 5644445F 		.ascii	"VDD_INTR\000"
 4272      494E5452 
 4272      00
 4273              	.LASF170:
 4274 0b21 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 4274      4C455F45 
 4274      56545F52 
 4274      414E444F 
 4274      4D5F4E55 
 4275              	.LASF250:
 4276 0b44 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 4276      4C455F41 
 4276      44565F53 
 4276      54415445 
 4276      5F414456 
 4277              	.LASF200:
 4278 0b61 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 4278      4C455F45 
 4278      56545F47 
 4278      41505F53 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 157


 4278      4D505F4E 
 4279              	.LASF347:
 4280 0b89 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 4280      75654765 
 4280      6E657269 
 4280      6353656E 
 4280      6446726F 
 4281              	.LASF143:
 4282 0ba2 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 4282      4C455F45 
 4282      56545F53 
 4282      45545F44 
 4282      4154415F 
 4283              	.LASF221:
 4284 0bc6 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 4284      4C455F45 
 4284      56545F47 
 4284      41545443 
 4284      5F575249 
 4285              	.LASF342:
 4286 0be1 78517565 		.ascii	"xQueueGenericSend\000"
 4286      75654765 
 4286      6E657269 
 4286      6353656E 
 4286      6400
 4287              	.LASF0:
 4288 0bf3 666C6F61 		.ascii	"float\000"
 4288      7400
 4289              	.LASF133:
 4290 0bf9 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 4290      4C455F45 
 4290      56545F53 
 4290      5441434B 
 4290      5F425553 
 4291              	.LASF25:
 4292 0c16 494E5452 		.ascii	"INTR\000"
 4292      00
 4293              	.LASF36:
 4294 0c1b 4750494F 		.ascii	"GPIO_PRT_Type\000"
 4294      5F505254 
 4294      5F547970 
 4294      6500
 4295              	.LASF140:
 4296 0c29 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 4296      4C455F45 
 4296      56545F47 
 4296      45545F43 
 4296      48414E4E 
 4297              	.LASF276:
 4298 0c4d 43595F42 		.ascii	"CY_BLE_HTS_CHAR_COUNT\000"
 4298      4C455F48 
 4298      54535F43 
 4298      4841525F 
 4298      434F554E 
 4299              	.LASF26:
 4300 0c63 494E5452 		.ascii	"INTR_MASK\000"
 4300      5F4D4153 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 158


 4300      4B00
 4301              	.LASF54:
 4302 0c6d 53544152 		.ascii	"START_CTRL\000"
 4302      545F4354 
 4302      524C00
 4303              	.LASF134:
 4304 0c78 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 4304      4C455F45 
 4304      56545F4D 
 4304      454D4F52 
 4304      595F5245 
 4305              	.LASF128:
 4306 0c92 76726566 		.ascii	"vrefMvValue\000"
 4306      4D765661 
 4306      6C756500 
 4307              	.LASF181:
 4308 0c9e 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 4308      4C455F45 
 4308      56545F53 
 4308      45545F43 
 4308      4F4E4E5F 
 4309              	.LASF251:
 4310 0cc4 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 4310      4C455F41 
 4310      44565F53 
 4310      54415445 
 4310      5F53544F 
 4311              	.LASF280:
 4312 0ce4 43595F42 		.ascii	"CY_BLE_SRVI_GAP\000"
 4312      4C455F53 
 4312      5256495F 
 4312      47415000 
 4313              	.LASF258:
 4314 0cf4 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 4314      4C455F43 
 4314      4F4E4E5F 
 4314      53544154 
 4314      455F434C 
 4315              	.LASF322:
 4316 0d1e 6368616E 		.ascii	"chan\000"
 4316      00
 4317              	.LASF309:
 4318 0d23 4144435F 		.ascii	"ADC_Sleep\000"
 4318      536C6565 
 4318      7000
 4319              	.LASF107:
 4320 0d2d 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 4320      41525F52 
 4320      414E4745 
 4320      5F434F4E 
 4320      445F4142 
 4321              	.LASF16:
 4322 0d45 63686172 		.ascii	"char\000"
 4322      00
 4323              	.LASF346:
 4324 0d4a 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 4324      79734C69 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 159


 4324      625F4173 
 4324      73657274 
 4324      4661696C 
 4325              	.LASF172:
 4326 0d61 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 4326      4C455F45 
 4326      56545F41 
 4326      45535F43 
 4326      434D5F45 
 4327              	.LASF193:
 4328 0d85 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 4328      4C455F45 
 4328      56545F47 
 4328      4150435F 
 4328      5343414E 
 4329              	.LASF120:
 4330 0da5 6368616E 		.ascii	"chanEn\000"
 4330      456E00
 4331              	.LASF263:
 4332 0dac 43595F42 		.ascii	"CY_BLE_DIS_MODEL_NUMBER\000"
 4332      4C455F44 
 4332      49535F4D 
 4332      4F44454C 
 4332      5F4E554D 
 4333              	.LASF343:
 4334 0dc4 7854696D 		.ascii	"xTimerCreate\000"
 4334      65724372 
 4334      65617465 
 4334      00
 4335              	.LASF214:
 4336 0dd1 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 4336      4C455F45 
 4336      56545F47 
 4336      41545443 
 4336      5F524541 
 4337              	.LASF299:
 4338 0df3 53454E44 		.ascii	"SEND_TEMPERATURE_INDICATION\000"
 4338      5F54454D 
 4338      50455241 
 4338      54555245 
 4338      5F494E44 
 4339              	.LASF151:
 4340 0e0f 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 4340      4C455F45 
 4340      56545F53 
 4340      45545F48 
 4340      4F53545F 
 4341              	.LASF141:
 4342 0e34 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 4342      4C455F45 
 4342      56545F4C 
 4342      455F5345 
 4342      545F4556 
 4343              	.LASF98:
 4344 0e5a 72784275 		.ascii	"rxBufIdx\000"
 4344      66496478 
 4344      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 160


 4345              	.LASF291:
 4346 0e63 51756575 		.ascii	"QueueHandle_t\000"
 4346      6548616E 
 4346      646C655F 
 4346      7400
 4347              	.LASF313:
 4348 0e71 54656D70 		.ascii	"TemperatureTimerStart\000"
 4348      65726174 
 4348      75726554 
 4348      696D6572 
 4348      53746172 
 4349              	.LASF195:
 4350 0e87 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 4350      4C455F45 
 4350      56545F47 
 4350      41505F4E 
 4350      554D4552 
 4351              	.LASF103:
 4352 0eb1 696E6974 		.ascii	"initKey\000"
 4352      4B657900 
 4353              	.LASF80:
 4354 0eb9 4156475F 		.ascii	"AVG_STAT\000"
 4354      53544154 
 4354      00
 4355              	.LASF18:
 4356 0ec2 75696E74 		.ascii	"uint8_t\000"
 4356      385F7400 
 4357              	.LASF95:
 4358 0eca 73746174 		.ascii	"status\000"
 4358      757300
 4359              	.LASF319:
 4360 0ed1 74656D70 		.ascii	"temperatureCommand\000"
 4360      65726174 
 4360      75726543 
 4360      6F6D6D61 
 4360      6E6400
 4361              	.LASF345:
 4362 0ee4 7854696D 		.ascii	"xTimerGenericCommand\000"
 4362      65724765 
 4362      6E657269 
 4362      63436F6D 
 4362      6D616E64 
 4363              	.LASF39:
 4364 0ef9 494E5452 		.ascii	"INTR_CAUSE2\000"
 4364      5F434155 
 4364      53453200 
 4365              	.LASF40:
 4366 0f05 494E5452 		.ascii	"INTR_CAUSE3\000"
 4366      5F434155 
 4366      53453300 
 4367              	.LASF302:
 4368 0f11 74656D70 		.ascii	"temperatureData\000"
 4368      65726174 
 4368      75726544 
 4368      61746100 
 4369              	.LASF70:
 4370 0f21 52414E47 		.ascii	"RANGE_INTR_SET\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 161


 4370      455F494E 
 4370      54525F53 
 4370      455400
 4371              	.LASF186:
 4372 0f30 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 4372      4C455F45 
 4372      56545F47 
 4372      41505F41 
 4372      5554485F 
 4373              	.LASF157:
 4374 0f4d 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 4374      4C455F45 
 4374      56545F53 
 4374      45545F44 
 4374      45464155 
 4375              	.LASF126:
 4376 0f71 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 4376      77697463 
 4376      68537143 
 4376      74726C00 
 4377              	.LASF332:
 4378 0f81 63795F62 		.ascii	"cy_ble_advState\000"
 4378      6C655F61 
 4378      64765374 
 4378      61746500 
 4379              	.LASF344:
 4380 0f91 78546173 		.ascii	"xTaskGetTickCount\000"
 4380      6B476574 
 4380      5469636B 
 4380      436F756E 
 4380      7400
 4381              	.LASF119:
 4382 0fa3 72616E67 		.ascii	"rangeCond\000"
 4382      65436F6E 
 4382      6400
 4383              	.LASF124:
 4384 0fad 72616E67 		.ascii	"rangeIntrMask\000"
 4384      65496E74 
 4384      724D6173 
 4384      6B00
 4385              	.LASF312:
 4386 0fbb 54656D70 		.ascii	"TemperatureTimerCallback\000"
 4386      65726174 
 4386      75726554 
 4386      696D6572 
 4386      43616C6C 
 4387              	.LASF180:
 4388 0fd4 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 4388      4C455F45 
 4388      56545F53 
 4388      45545F43 
 4388      455F4C45 
 4389              	.LASF179:
 4390 0ff6 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 4390      4C455F45 
 4390      56545F53 
 4390      45545F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 162


 4390      56454E54 
 4391              	.LASF2:
 4392 1019 6C6F6E67 		.ascii	"long long int\000"
 4392      206C6F6E 
 4392      6720696E 
 4392      7400
 4393              	.LASF237:
 4394 1027 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 4394      4C455F45 
 4394      56545F4C 
 4394      32434150 
 4394      5F434246 
 4395              	.LASF85:
 4396 1046 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 4396      53574954 
 4396      43485F44 
 4396      535F4354 
 4396      524C00
 4397              	.LASF112:
 4398 1059 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 4398      41525F49 
 4398      4E54525F 
 4398      4F564552 
 4398      464C4F57 
 4399              	.LASF272:
 4400 1073 43595F42 		.ascii	"CY_BLE_HTS_TEMP_MEASURE\000"
 4400      4C455F48 
 4400      54535F54 
 4400      454D505F 
 4400      4D454153 
 4401              	.LASF206:
 4402 108b 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 4402      4C455F45 
 4402      56545F47 
 4402      41505F43 
 4402      4F4E4E5F 
 4403              	.LASF72:
 4404 10a4 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 4404      455F494E 
 4404      54525F4D 
 4404      41534B45 
 4404      4400
 4405              	.LASF113:
 4406 10b6 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 4406      41525F49 
 4406      4E54525F 
 4406      46575F43 
 4406      4F4C4C49 
 4407              	.LASF153:
 4408 10d4 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 4408      4C455F45 
 4408      56545F52 
 4408      454D4F56 
 4408      455F4445 
 4409              	.LASF142:
 4410 1104 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 4410      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 163


 4410      56545F4C 
 4410      455F5049 
 4410      4E475F41 
 4411              	.LASF289:
 4412 1124 42617365 		.ascii	"BaseType_t\000"
 4412      54797065 
 4412      5F7400
 4413              	.LASF297:
 4414 112f 50524F43 		.ascii	"PROCESS_BLE_EVENTS\000"
 4414      4553535F 
 4414      424C455F 
 4414      4556454E 
 4414      545300
 4415              	.LASF7:
 4416 1142 5F5F696E 		.ascii	"__int16_t\000"
 4416      7431365F 
 4416      7400
 4417              	.LASF358:
 4418 114c 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 4418      73657273 
 4418      5C636F64 
 4418      79675C67 
 4418      69745C70 
 4419 117a 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\CE218138_BLE_Thermometer_RTOS01.c"
 4419      54435F49 
 4419      4D552E63 
 4419      7964736E 
 4419      5C434532 
 4420 11ac 7964736E 		.ascii	"ydsn\000"
 4420      00
 4421              	.LASF352:
 4422 11b1 4144435F 		.ascii	"ADC_IRQ_Enable\000"
 4422      4952515F 
 4422      456E6162 
 4422      6C6500
 4423              	.LASF338:
 4424 11c0 74656D70 		.ascii	"temperatureCommandQ\000"
 4424      65726174 
 4424      75726543 
 4424      6F6D6D61 
 4424      6E645100 
 4425              	.LASF169:
 4426 11d4 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 4426      4C455F45 
 4426      56545F53 
 4426      45545F43 
 4426      4C4B5F43 
 4427              	.LASF44:
 4428 11f7 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 4428      494E5452 
 4428      5F4D4153 
 4428      4B454400 
 4429              	.LASF232:
 4430 1207 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 4430      4C455F45 
 4430      56545F47 
 4430      41545443 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 164


 4430      5F4C4F4E 
 4431              	.LASF59:
 4432 122b 4348414E 		.ascii	"CHAN_RESULT\000"
 4432      5F524553 
 4432      554C5400 
 4433              	.LASF262:
 4434 1237 43595F42 		.ascii	"CY_BLE_DIS_MANUFACTURER_NAME\000"
 4434      4C455F44 
 4434      49535F4D 
 4434      414E5546 
 4434      41435455 
 4435              	.LASF69:
 4436 1254 52414E47 		.ascii	"RANGE_INTR\000"
 4436      455F494E 
 4436      545200
 4437              	.LASF104:
 4438 125f 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 4438      74635F73 
 4438      63625F73 
 4438      70695F63 
 4438      6F6E7465 
 4439              	.LASF48:
 4440 1278 53414D50 		.ascii	"SAMPLE_CTRL\000"
 4440      4C455F43 
 4440      54524C00 
 4441              	.LASF121:
 4442 1284 6368616E 		.ascii	"chanConfig\000"
 4442      436F6E66 
 4442      696700
 4443              	.LASF194:
 4444 128f 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 4444      4C455F45 
 4444      56545F47 
 4444      41505F4B 
 4444      4559494E 
 4445              	.LASF154:
 4446 12b4 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 4446      4C455F45 
 4446      56545F41 
 4446      44445F44 
 4446      45564943 
 4447              	.LASF306:
 4448 12e1 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 4448      41525F43 
 4448      6C656172 
 4448      496E7465 
 4448      72727570 
 4449              	.LASF100:
 4450 12f7 74784275 		.ascii	"txBufSize\000"
 4450      6653697A 
 4450      6500
 4451              	.LASF301:
 4452 1301 636F6D6D 		.ascii	"command\000"
 4452      616E6400 
 4453              	.LASF243:
 4454 1309 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 4454      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 165


 4454      56545F4C 
 4454      32434150 
 4454      5F434246 
 4455              	.LASF83:
 4456 132e 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 4456      53574954 
 4456      43485F43 
 4456      4C454152 
 4456      3000
 4457              	.LASF288:
 4458 1340 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 4458      434F4E46 
 4458      49475F53 
 4458      54525543 
 4458      5400
 4459              	.LASF274:
 4460 1352 43595F42 		.ascii	"CY_BLE_HTS_INTERM_TEMP\000"
 4460      4C455F48 
 4460      54535F49 
 4460      4E544552 
 4460      4D5F5445 
 4461              	.LASF182:
 4462 1369 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 4462      4C455F45 
 4462      56545F47 
 4462      4150435F 
 4462      5343414E 
 4463              	.LASF236:
 4464 138e 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 4464      4C455F45 
 4464      56545F4C 
 4464      32434150 
 4464      5F434246 
 4465              	.LASF202:
 4466 13ad 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 4466      4C455F45 
 4466      56545F47 
 4466      41505F4B 
 4466      4559535F 
 4467              	.LASF196:
 4468 13ce 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 4468      4C455F45 
 4468      56545F47 
 4468      41505F4B 
 4468      45595052 
 4469              	.LASF259:
 4470 13f3 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 4470      4C455F43 
 4470      4F4E4E5F 
 4470      53544154 
 4470      455F434C 
 4471              	.LASF255:
 4472 141e 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 4472      4C455F43 
 4472      4F4E4E5F 
 4472      53544154 
 4472      455F434F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 166


 4473              	.LASF275:
 4474 143a 43595F42 		.ascii	"CY_BLE_HTS_MEASURE_INTERVAL\000"
 4474      4C455F48 
 4474      54535F4D 
 4474      45415355 
 4474      52455F49 
 4475              	.LASF99:
 4476 1456 74784275 		.ascii	"txBuf\000"
 4476      6600
 4477              	.LASF341:
 4478 145c 7854696D 		.ascii	"xTimer_Temperature\000"
 4478      65725F54 
 4478      656D7065 
 4478      72617475 
 4478      726500
 4479              	.LASF290:
 4480 146f 5469636B 		.ascii	"TickType_t\000"
 4480      54797065 
 4480      5F7400
 4481              	.LASF257:
 4482 147a 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 4482      4C455F43 
 4482      4F4E4E5F 
 4482      53544154 
 4482      455F434C 
 4483              	.LASF266:
 4484 14a4 43595F42 		.ascii	"CY_BLE_DIS_FIRMWARE_REV\000"
 4484      4C455F44 
 4484      49535F46 
 4484      49524D57 
 4484      4152455F 
 4485              	.LASF3:
 4486 14bc 6C6F6E67 		.ascii	"long double\000"
 4486      20646F75 
 4486      626C6500 
 4487              	.LASF293:
 4488 14c8 53454E44 		.ascii	"SEND_NONE\000"
 4488      5F4E4F4E 
 4488      4500
 4489              	.LASF139:
 4490 14d2 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 4490      4C455F45 
 4490      56545F52 
 4490      4541445F 
 4490      41555448 
 4491              	.LASF45:
 4492 14fb 5644445F 		.ascii	"VDD_INTR_SET\000"
 4492      494E5452 
 4492      5F534554 
 4492      00
 4493              	.LASF351:
 4494 1508 4144435F 		.ascii	"ADC_StartEx\000"
 4494      53746172 
 4494      74457800 
 4495              	.LASF149:
 4496 1514 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 4496      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 167


 4496      56545F53 
 4496      45545F52 
 4496      50415F54 
 4497              	.LASF116:
 4498 1533 73616D70 		.ascii	"sampleTime01\000"
 4498      6C655469 
 4498      6D653031 
 4498      00
 4499              	.LASF137:
 4500 1540 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 4500      4C455F45 
 4500      56545F48 
 4500      41524457 
 4500      4152455F 
 4501              	.LASF125:
 4502 155a 6D757853 		.ascii	"muxSwitch\000"
 4502      77697463 
 4502      6800
 4503              	.LASF5:
 4504 1564 756E7369 		.ascii	"unsigned char\000"
 4504      676E6564 
 4504      20636861 
 4504      7200
 4505              	.LASF208:
 4506 1572 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 4506      4C455F45 
 4506      56545F47 
 4506      41545443 
 4506      5F455252 
 4507              	.LASF213:
 4508 158d 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 4508      4C455F45 
 4508      56545F47 
 4508      41545443 
 4508      5F524541 
 4509              	.LASF152:
 4510 15b5 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 4510      4C455F45 
 4510      56545F41 
 4510      44445F44 
 4510      45564943 
 4511              	.LASF220:
 4512 15e0 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 4512      4C455F45 
 4512      56545F47 
 4512      41545453 
 4512      5F575249 
 4513              	.LASF175:
 4514 15fb 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 4514      4C455F45 
 4514      56545F53 
 4514      5441434B 
 4514      5F534855 
 4515              	.LASF314:
 4516 161e 72746F73 		.ascii	"rtosApiResult\000"
 4516      41706952 
 4516      6573756C 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 168


 4516      7400
 4517              	.LASF247:
 4518 162c 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 4518      74635F62 
 4518      6C655F63 
 4518      6F6E6E5F 
 4518      68616E64 
 4519              	.LASF35:
 4520 1645 52455345 		.ascii	"RESERVED1\000"
 4520      52564544 
 4520      3100
 4521              	.LASF56:
 4522 164f 52455345 		.ascii	"RESERVED2\000"
 4522      52564544 
 4522      3200
 4523              	.LASF58:
 4524 1659 52455345 		.ascii	"RESERVED3\000"
 4524      52564544 
 4524      3300
 4525              	.LASF60:
 4526 1663 52455345 		.ascii	"RESERVED4\000"
 4526      52564544 
 4526      3400
 4527              	.LASF74:
 4528 166d 52455345 		.ascii	"RESERVED5\000"
 4528      52564544 
 4528      3500
 4529              	.LASF76:
 4530 1677 52455345 		.ascii	"RESERVED6\000"
 4530      52564544 
 4530      3600
 4531              	.LASF78:
 4532 1681 52455345 		.ascii	"RESERVED7\000"
 4532      52564544 
 4532      3700
 4533              	.LASF81:
 4534 168b 52455345 		.ascii	"RESERVED8\000"
 4534      52564544 
 4534      3800
 4535              	.LASF84:
 4536 1695 52455345 		.ascii	"RESERVED9\000"
 4536      52564544 
 4536      3900
 4537              	.LASF337:
 4538 169f 4144435F 		.ascii	"ADC_allConfigs\000"
 4538      616C6C43 
 4538      6F6E6669 
 4538      677300
 4539              	.LASF265:
 4540 16ae 43595F42 		.ascii	"CY_BLE_DIS_HARDWARE_REV\000"
 4540      4C455F44 
 4540      49535F48 
 4540      41524457 
 4540      4152455F 
 4541              	.LASF190:
 4542 16c6 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 4542      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 169


 4542      56545F47 
 4542      41505F44 
 4542      45564943 
 4543              	.LASF323:
 4544 16e9 70765061 		.ascii	"pvParameters\000"
 4544      72616D65 
 4544      74657273 
 4544      00
 4545              	.LASF68:
 4546 16f6 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 4546      52415445 
 4546      5F494E54 
 4546      525F4D41 
 4546      534B4544 
 4547              	.LASF86:
 4548 170b 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 4548      53574954 
 4548      43485F53 
 4548      515F4354 
 4548      524C00
 4549              	.LASF11:
 4550 171e 6C6F6E67 		.ascii	"long int\000"
 4550      20696E74 
 4550      00
 4551              	.LASF331:
 4552 1727 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4552      52784275 
 4552      66666572 
 4552      00
 4553              	.LASF178:
 4554 1734 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 4554      4C455F45 
 4554      56545F41 
 4554      45535F43 
 4554      4D41435F 
 4555              	.LASF207:
 4556 1755 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 4556      4C455F45 
 4556      56545F47 
 4556      4150505F 
 4556      55504441 
 4557              	.LASF219:
 4558 1783 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 4558      4C455F45 
 4558      56545F47 
 4558      41545443 
 4558      5F524541 
 4559              	.LASF51:
 4560 17a3 52414E47 		.ascii	"RANGE_THRES\000"
 4560      455F5448 
 4560      52455300 
 4561              	.LASF311:
 4562 17af 43795F47 		.ascii	"Cy_GPIO_Set\000"
 4562      50494F5F 
 4562      53657400 
 4563              	.LASF174:
 4564 17bb 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 170


 4564      4C455F45 
 4564      56545F53 
 4564      45545F53 
 4564      4C415645 
 4565              	.LASF92:
 4566 17e6 63686172 		.ascii	"char_t\000"
 4566      5F7400
 4567              	.LASF57:
 4568 17ed 4348414E 		.ascii	"CHAN_WORK\000"
 4568      5F574F52 
 4568      4B00
 4569              	.LASF201:
 4570 17f7 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 4570      4C455F45 
 4570      56545F47 
 4570      41505F44 
 4570      45564943 
 4571              	.LASF34:
 4572 181f 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 4572      494E5F47 
 4572      50494F35 
 4572      5600
 4573              	.LASF238:
 4574 182d 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 4574      4C455F45 
 4574      56545F4C 
 4574      32434150 
 4574      5F434246 
 4575              	.LASF224:
 4576 184f 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 4576      4C455F45 
 4576      56545F47 
 4576      41545453 
 4576      5F455845 
 4577              	.LASF138:
 4578 186f 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 4578      4C455F45 
 4578      56545F57 
 4578      52495445 
 4578      5F415554 
 4579              	.LASF177:
 4580 1899 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 4580      4C455F45 
 4580      56545F52 
 4580      4144494F 
 4580      5F564F4C 
 4581              	.LASF316:
 4582 18b8 7854696D 		.ascii	"xTimer\000"
 4582      657200
 4583              	.LASF24:
 4584 18bf 4F55545F 		.ascii	"OUT_INV\000"
 4584      494E5600 
 4585              	.LASF6:
 4586 18c7 5F5F7569 		.ascii	"__uint8_t\000"
 4586      6E74385F 
 4586      7400
 4587              	.LASF268:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 171


 4588 18d1 43595F42 		.ascii	"CY_BLE_DIS_SYSTEM_ID\000"
 4588      4C455F44 
 4588      49535F53 
 4588      59535445 
 4588      4D5F4944 
 4589              	.LASF355:
 4590 18e6 6C6F6766 		.ascii	"logf\000"
 4590      00
 4591              	.LASF144:
 4592 18eb 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 4592      4C455F45 
 4592      56545F53 
 4592      45545F53 
 4592      55474745 
 4593              	.LASF277:
 4594 1919 43595F42 		.ascii	"CY_BLE_HTS_CCCD\000"
 4594      4C455F48 
 4594      54535F43 
 4594      43434400 
 4595              	.LASF164:
 4596 1929 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 4596      4C455F45 
 4596      56545F47 
 4596      45545F44 
 4596      45564943 
 4597              	.LASF171:
 4598 194d 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 4598      4C455F45 
 4598      56545F41 
 4598      45535F45 
 4598      4E435259 
 4599              	.LASF353:
 4600 196d 4144435F 		.ascii	"ADC_StartConvert\000"
 4600      53746172 
 4600      74436F6E 
 4600      76657274 
 4600      00
 4601              	.LASF166:
 4602 197e 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 4602      4C455F45 
 4602      56545F47 
 4602      45545F54 
 4602      585F5057 
 4603              	.LASF27:
 4604 199d 494E5452 		.ascii	"INTR_MASKED\000"
 4604      5F4D4153 
 4604      4B454400 
 4605              	.LASF278:
 4606 19a9 43595F42 		.ascii	"CY_BLE_HTS_VRD\000"
 4606      4C455F48 
 4606      54535F56 
 4606      524400
 4607              	.LASF132:
 4608 19b8 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 4608      4C455F45 
 4608      56545F54 
 4608      494D454F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 172


 4608      555400
 4609              	.LASF281:
 4610 19cb 43595F42 		.ascii	"CY_BLE_SRVI_GATT\000"
 4610      4C455F53 
 4610      5256495F 
 4610      47415454 
 4610      00
 4611              	.LASF15:
 4612 19dc 73697A65 		.ascii	"sizetype\000"
 4612      74797065 
 4612      00
 4613              	.LASF13:
 4614 19e5 6C6F6E67 		.ascii	"long unsigned int\000"
 4614      20756E73 
 4614      69676E65 
 4614      6420696E 
 4614      7400
 4615              	.LASF320:
 4616 19f7 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 4616      41525F47 
 4616      6574496E 
 4616      74657272 
 4616      75707453 
 4617              	.LASF324:
 4618 1a11 73656E64 		.ascii	"sendTemperatureDataFast\000"
 4618      54656D70 
 4618      65726174 
 4618      75726544 
 4618      61746146 
 4619              	.LASF348:
 4620 1a29 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 4620      41525F47 
 4620      65745265 
 4620      73756C74 
 4620      313600
 4621              	.LASF20:
 4622 1a3c 696E7433 		.ascii	"int32_t\000"
 4622      325F7400 
 4623              	.LASF176:
 4624 1a44 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 4624      4C455F45 
 4624      56545F52 
 4624      4144494F 
 4624      5F54454D 
 4625              	.LASF82:
 4626 1a61 4D55585F 		.ascii	"MUX_SWITCH0\000"
 4626      53574954 
 4626      43483000 
 4627              	.LASF308:
 4628 1a6d 70696E4E 		.ascii	"pinNum\000"
 4628      756D00
 4629              	.LASF235:
 4630 1a74 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 4630      4C455F45 
 4630      56545F4C 
 4630      32434150 
 4630      5F434F4D 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 173


 4631              	.LASF62:
 4632 1a91 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 4632      5F524553 
 4632      554C545F 
 4632      55504441 
 4632      54454400 
 4633              	.LASF321:
 4634 1aa5 4144435F 		.ascii	"ADC_GetResult16\000"
 4634      47657452 
 4634      6573756C 
 4634      74313600 
 4635              	.LASF185:
 4636 1ab5 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 4636      4C455F45 
 4636      56545F47 
 4636      41505F50 
 4636      4153534B 
 4637              	.LASF357:
 4638 1adc 74656D70 		.ascii	"temperature_task.c\000"
 4638      65726174 
 4638      7572655F 
 4638      7461736B 
 4638      2E6300
 4639              	.LASF115:
 4640 1aef 73616D70 		.ascii	"sampleCtrl\000"
 4640      6C654374 
 4640      726C00
 4641              	.LASF307:
 4642 1afa 43795F47 		.ascii	"Cy_GPIO_Clr\000"
 4642      50494F5F 
 4642      436C7200 
 4643              	.LASF110:
 4644 1b06 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 4644      41525F49 
 4644      4E54525F 
 4644      4D41534B 
 4644      5F4E4F4E 
 4645              	.LASF89:
 4646 1b1c 414E415F 		.ascii	"ANA_TRIM0\000"
 4646      5452494D 
 4646      3000
 4647              	.LASF90:
 4648 1b26 414E415F 		.ascii	"ANA_TRIM1\000"
 4648      5452494D 
 4648      3100
 4649              	.LASF12:
 4650 1b30 5F5F7569 		.ascii	"__uint32_t\000"
 4650      6E743332 
 4650      5F7400
 4651              	.LASF46:
 4652 1b3b 4750494F 		.ascii	"GPIO_Type\000"
 4652      5F547970 
 4652      6500
 4653              	.LASF279:
 4654 1b45 43595F42 		.ascii	"CY_BLE_HTS_DESCR_COUNT\000"
 4654      4C455F48 
 4654      54535F44 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 174


 4654      45534352 
 4654      5F434F55 
 4655              	.LASF29:
 4656 1b5c 494E5452 		.ascii	"INTR_CFG\000"
 4656      5F434647 
 4656      00
 4657              	.LASF155:
 4658 1b65 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 4658      4C455F45 
 4658      56545F52 
 4658      454D4F56 
 4658      455F4445 
 4659              	.LASF145:
 4660 1b97 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 4660      4C455F45 
 4660      56545F47 
 4660      45545F44 
 4660      4154415F 
 4661              	.LASF67:
 4662 1bbb 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 4662      52415445 
 4662      5F494E54 
 4662      525F4D41 
 4662      534B00
 4663              	.LASF199:
 4664 1bce 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 4664      4C455F45 
 4664      56545F47 
 4664      4150435F 
 4664      44495245 
 4665              	.LASF359:
 4666 1bf0 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 4666      74635F73 
 4666      63625F73 
 4666      70695F63 
 4666      6F6E7465 
 4667              	.LASF88:
 4668 1c07 52455345 		.ascii	"RESERVED10\000"
 4668      52564544 
 4668      313000
 4669              	.LASF234:
 4670 1c12 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 4670      4C455F45 
 4670      56545F4C 
 4670      32434150 
 4670      5F434F4E 
 4671              	.LASF326:
 4672 1c39 636F756E 		.ascii	"countReference\000"
 4672      74526566 
 4672      6572656E 
 4672      636500
 4673              	.LASF287:
 4674 1c48 636C6B44 		.ascii	"clkDivider\000"
 4674      69766964 
 4674      657200
 4675              	.LASF66:
 4676 1c53 53415455 		.ascii	"SATURATE_INTR_SET\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 175


 4676      52415445 
 4676      5F494E54 
 4676      525F5345 
 4676      5400
 4677              	.LASF210:
 4678 1c65 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 4678      4C455F45 
 4678      56545F47 
 4678      4154545F 
 4678      44495343 
 4679              	.LASF336:
 4680 1c84 4144435F 		.ascii	"ADC_currentConfig\000"
 4680      63757272 
 4680      656E7443 
 4680      6F6E6669 
 4680      6700
 4681              	.LASF225:
 4682 1c96 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 4682      4C455F45 
 4682      56545F47 
 4682      41545443 
 4682      5F455845 
 4683              	.LASF294:
 4684 1cb6 48414E44 		.ascii	"HANDLE_ADC_INTERRUPT\000"
 4684      4C455F41 
 4684      44435F49 
 4684      4E544552 
 4684      52555054 
 4685              	.LASF211:
 4686 1ccb 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 4686      4C455F45 
 4686      56545F47 
 4686      41545453 
 4686      5F58434E 
 4687              	.LASF230:
 4688 1cea 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 4688      4C455F45 
 4688      56545F47 
 4688      41545443 
 4688      5F53544F 
 4689              	.LASF303:
 4690 1d0d 626C655F 		.ascii	"ble_command_t\000"
 4690      636F6D6D 
 4690      616E645F 
 4690      7400
 4691              	.LASF184:
 4692 1d1b 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 4692      4C455F45 
 4692      56545F47 
 4692      41505F50 
 4692      4153534B 
 4693              	.LASF245:
 4694 1d40 62644861 		.ascii	"bdHandle\000"
 4694      6E646C65 
 4694      00
 4695              	.LASF43:
 4696 1d49 5644445F 		.ascii	"VDD_INTR_MASK\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 176


 4696      494E5452 
 4696      5F4D4153 
 4696      4B00
 4697              	.LASF4:
 4698 1d57 7369676E 		.ascii	"signed char\000"
 4698      65642063 
 4698      68617200 
 4699              	.LASF317:
 4700 1d63 70657269 		.ascii	"period\000"
 4700      6F6400
 4701              	.LASF9:
 4702 1d6a 73686F72 		.ascii	"short unsigned int\000"
 4702      7420756E 
 4702      7369676E 
 4702      65642069 
 4702      6E7400
 4703              	.LASF183:
 4704 1d7d 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 4704      4C455F45 
 4704      56545F47 
 4704      41505F41 
 4704      5554485F 
 4705              	.LASF222:
 4706 1d95 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 4706      4C455F45 
 4706      56545F47 
 4706      41545453 
 4706      5F575249 
 4707              	.LASF168:
 4708 1db4 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 4708      4C455F45 
 4708      56545F47 
 4708      45545F43 
 4708      4C4B5F43 
 4709              	.LASF286:
 4710 1dd7 6D697363 		.ascii	"miscConfig\000"
 4710      436F6E66 
 4710      696700
 4711              	.LASF87:
 4712 1de2 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 4712      53574954 
 4712      43485F53 
 4712      54415455 
 4712      5300
 4713              	.LASF233:
 4714 1df4 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 4714      4C455F45 
 4714      56545F4C 
 4714      32434150 
 4714      5F434F4E 
 4715              	.LASF127:
 4716 1e1b 636F6E66 		.ascii	"configRouting\000"
 4716      6967526F 
 4716      7574696E 
 4716      6700
 4717              	.LASF296:
 4718 1e29 74656D70 		.ascii	"temperature_command_t\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 177


 4718      65726174 
 4718      7572655F 
 4718      636F6D6D 
 4718      616E645F 
 4719              	.LASF310:
 4720 1e3f 4144435F 		.ascii	"ADC_Wakeup\000"
 4720      57616B65 
 4720      757000
 4721              	.LASF79:
 4722 1e4a 53544154 		.ascii	"STATUS\000"
 4722      555300
 4723              	.LASF340:
 4724 1e51 626C6543 		.ascii	"bleCommandQ\000"
 4724      6F6D6D61 
 4724      6E645100 
 4725              	.LASF55:
 4726 1e5d 4348414E 		.ascii	"CHAN_CONFIG\000"
 4726      5F434F4E 
 4726      46494700 
 4727              	.LASF109:
 4728 1e69 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 4728      6E5F7361 
 4728      725F7261 
 4728      6E67655F 
 4728      64657465 
 4729              	.LASF136:
 4730 1e8c 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 4730      4C455F45 
 4730      56545F46 
 4730      4C415348 
 4730      5F434F52 
 4731              	.LASF204:
 4732 1ea5 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 4732      4C455F45 
 4732      56545F47 
 4732      41505F47 
 4732      454E5F53 
 4733              	.LASF187:
 4734 1ed5 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 4734      4C455F45 
 4734      56545F47 
 4734      41505F41 
 4734      5554485F 
 4735              	.LASF253:
 4736 1ef0 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 4736      4C455F43 
 4736      4F4E4E5F 
 4736      53544154 
 4736      455F4449 
 4737              	.LASF256:
 4738 1f0f 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 4738      4C455F43 
 4738      4F4E4E5F 
 4738      53544154 
 4738      455F434C 
 4739              	.LASF122:
 4740 1f39 696E7472 		.ascii	"intrMask\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc3vMlVd.s 			page 178


 4740      4D61736B 
 4740      00
 4741              	.LASF97:
 4742 1f42 72784275 		.ascii	"rxBufSize\000"
 4742      6653697A 
 4742      6500
 4743              	.LASF47:
 4744 1f4c 4354524C 		.ascii	"CTRL\000"
 4744      00
 4745              	.LASF192:
 4746 1f51 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 4746      4C455F45 
 4746      56545F47 
 4746      41505F43 
 4746      4F4E4E45 
 4747              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
