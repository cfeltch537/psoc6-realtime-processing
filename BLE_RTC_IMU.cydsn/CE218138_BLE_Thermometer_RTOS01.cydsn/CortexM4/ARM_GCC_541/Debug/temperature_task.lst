ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"temperature_task.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.TemperatureTimerCallback,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	TemperatureTimerCallback, %function
  25              	TemperatureTimerCallback:
  26              	.LFB716:
  27              		.file 1 "temperature_task.c"
   1:temperature_task.c **** /******************************************************************************
   2:temperature_task.c **** * File Name: temperature_task.c
   3:temperature_task.c **** *
   4:temperature_task.c **** * Version: 1.00
   5:temperature_task.c **** *
   6:temperature_task.c **** * Description: This file contains the task that handles temperature sensing
   7:temperature_task.c **** *
   8:temperature_task.c **** * Related Document: CE218138_BLE_Thermometer_RTOS.pdf
   9:temperature_task.c **** *
  10:temperature_task.c **** * Hardware Dependency: CY8CKIT-062-BLE PSoC 6 BLE Pioneer Kit
  11:temperature_task.c **** *
  12:temperature_task.c **** *******************************************************************************
  13:temperature_task.c **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  14:temperature_task.c **** *******************************************************************************
  15:temperature_task.c **** * This software, including source code, documentation and related materials
  16:temperature_task.c **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  17:temperature_task.c **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  18:temperature_task.c **** * protection (United States and foreign), United States copyright laws and
  19:temperature_task.c **** * international treaty provisions. Therefore, you may use this Software only
  20:temperature_task.c **** * as provided in the license agreement accompanying the software package from
  21:temperature_task.c **** * which you obtained this Software (“EULA”).
  22:temperature_task.c **** *
  23:temperature_task.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  24:temperature_task.c **** * non-transferable license to copy, modify, and compile the Software source
  25:temperature_task.c **** * code solely for use in connection with Cypress’s integrated circuit products.
  26:temperature_task.c **** * Any reproduction, modification, translation, compilation, or representation
  27:temperature_task.c **** * of this Software except as specified above is prohibited without the express
  28:temperature_task.c **** * written permission of Cypress.
  29:temperature_task.c **** *
  30:temperature_task.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 2


  31:temperature_task.c **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  32:temperature_task.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  33:temperature_task.c **** * reserves the right to make changes to the Software without notice. Cypress 
  34:temperature_task.c **** * does not assume any liability arising out of the application or use of the 
  35:temperature_task.c **** * Software or any product or circuit described in the Software. Cypress does 
  36:temperature_task.c **** * not authorize its products for use in any products where a malfunction or 
  37:temperature_task.c **** * failure of the Cypress product may reasonably be expected to result in 
  38:temperature_task.c **** * significant property damage, injury or death (“High Risk Product”). By 
  39:temperature_task.c **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  40:temperature_task.c **** * system or application assumes all risk of such use and in doing so agrees to 
  41:temperature_task.c **** * indemnify Cypress against all liability.
  42:temperature_task.c **** *******************************************************************************/
  43:temperature_task.c **** /******************************************************************************
  44:temperature_task.c **** * This file contains the task that handles temperature sensing 
  45:temperature_task.c **** *******************************************************************************/
  46:temperature_task.c **** 
  47:temperature_task.c **** /* Header file includes */
  48:temperature_task.c **** #include <math.h>
  49:temperature_task.c **** #include "temperature_task.h"
  50:temperature_task.c **** #include "uart_debug.h"
  51:temperature_task.c **** #include "ble_task.h"
  52:temperature_task.c **** #include "task.h" 
  53:temperature_task.c **** #include "timers.h"
  54:temperature_task.c **** 
  55:temperature_task.c **** /* Scanning interval of 100ms is used when repeatedly scanning temperature for 
  56:temperature_task.c ****    sending via BLE. 10s is used for E-INK refresh */
  57:temperature_task.c **** #define FAST_SCAN_INTERVAL  (pdMS_TO_TICKS(100u))
  58:temperature_task.c **** #define SLOW_SCAN_INTERVAL  (pdMS_TO_TICKS(10000u))
  59:temperature_task.c **** 
  60:temperature_task.c **** /* ADC channels used to measure reference and thermistor voltages */
  61:temperature_task.c **** #define REFERENCE_CHANNEL   (uint32_t)(0x00u)
  62:temperature_task.c **** #define THERMISTOR_CHANNEL  (uint32_t)(0x01u)
  63:temperature_task.c **** 
  64:temperature_task.c **** /* Reference resistor in series with the thermistor is of 10 KOhm */
  65:temperature_task.c **** #define R_REFERENCE         (float)(10000)
  66:temperature_task.c **** 
  67:temperature_task.c **** /* Beta constant of this thermistor is 3380 Kelvin. See the thermistor
  68:temperature_task.c ****    (NCP18XH103F03RB) data sheet for more details. */
  69:temperature_task.c **** #define B_CONSTANT          (float)(3380)
  70:temperature_task.c **** 
  71:temperature_task.c **** /* Resistance of the thermistor is 10K at 25 degrees C (from data sheet)
  72:temperature_task.c ****    Therefore R0 = 10000 Ohm, and T0 = 298.15 Kelvin, which gives
  73:temperature_task.c ****    R_INFINITY = R0 e^(-B_CONSTANT / T0) = 0.1192855 */
  74:temperature_task.c **** #define R_INFINITY          (float)(0.1192855)
  75:temperature_task.c **** 
  76:temperature_task.c **** /* Zero Kelvin in degree C */
  77:temperature_task.c **** #define ABSOLUTE_ZERO       (float)(-273.15)
  78:temperature_task.c **** 
  79:temperature_task.c **** /* Queue handles used for temperature commands and data */
  80:temperature_task.c **** QueueHandle_t temperatureCommandQ;
  81:temperature_task.c **** QueueHandle_t temperatureDataQ;
  82:temperature_task.c **** 
  83:temperature_task.c **** /* Timer handles used to control temperature scanning interval */
  84:temperature_task.c **** TimerHandle_t xTimer_Temperature;
  85:temperature_task.c **** 
  86:temperature_task.c **** /* ADC interrupt handler */
  87:temperature_task.c **** void isrADC(void);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 3


  88:temperature_task.c **** bool static processingComplete = false;
  89:temperature_task.c **** 
  90:temperature_task.c **** /* Functions that start and control the timer */
  91:temperature_task.c **** void static TemperatureTimerStart(void);
  92:temperature_task.c **** void static TemperatureTimerUpdate(TickType_t period);
  93:temperature_task.c **** 
  94:temperature_task.c **** /*******************************************************************************
  95:temperature_task.c **** * Function Name: void Task_Temperature(void *pvParameters)   
  96:temperature_task.c **** ********************************************************************************
  97:temperature_task.c **** * Summary:
  98:temperature_task.c **** *  Task that reads temperature data from thermistor circuit  
  99:temperature_task.c **** *
 100:temperature_task.c **** * Parameters:
 101:temperature_task.c **** *  void *pvParameters : Task parameter defined during task creation (unused)                       
 102:temperature_task.c **** *
 103:temperature_task.c **** * Return:
 104:temperature_task.c **** *  void
 105:temperature_task.c **** *
 106:temperature_task.c **** *******************************************************************************/
 107:temperature_task.c **** void Task_Temperature(void *pvParameters)    
 108:temperature_task.c **** { 
 109:temperature_task.c ****     /* Variable that stores commands received  */
 110:temperature_task.c ****     temperature_command_t temperatureCommand;
 111:temperature_task.c ****     
 112:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 113:temperature_task.c ****     BaseType_t rtosApiResult;
 114:temperature_task.c ****        
 115:temperature_task.c ****     /* Flag that indicate temperature data need to be sent at 
 116:temperature_task.c ****        fast intervals */
 117:temperature_task.c ****     bool sendTemperatureDataFast = false;
 118:temperature_task.c ****     
 119:temperature_task.c ****     /* Variables used to calculate temperature */
 120:temperature_task.c ****     int16_t countThermistor, countReference;
 121:temperature_task.c ****     float rThermistor, temperature;
 122:temperature_task.c ****     
 123:temperature_task.c ****     /* Variable used to send commands and data to BLE task */
 124:temperature_task.c ****     ble_command_t bleCommandAndData;
 125:temperature_task.c **** 
 126:temperature_task.c ****     /* Remove warning for unused parameter */
 127:temperature_task.c ****     (void)pvParameters ;
 128:temperature_task.c **** 
 129:temperature_task.c ****     /* Initialize the ADC  */
 130:temperature_task.c ****     ADC_StartEx(isrADC);
 131:temperature_task.c ****     ADC_IRQ_Enable();
 132:temperature_task.c ****     ADC_StartConvert();
 133:temperature_task.c ****     
 134:temperature_task.c ****     /* Start the timer that controls the processing interval */
 135:temperature_task.c ****     TemperatureTimerStart();                    
 136:temperature_task.c ****     
 137:temperature_task.c ****     /* Repeatedly running part of the task */
 138:temperature_task.c ****     for(;;)
 139:temperature_task.c ****     {
 140:temperature_task.c ****         /* Block until a command has been received over 
 141:temperature_task.c ****            temperatureCommandQ */
 142:temperature_task.c ****         rtosApiResult = xQueueReceive(temperatureCommandQ, 
 143:temperature_task.c ****                                       &temperatureCommand, portMAX_DELAY);
 144:temperature_task.c ****         
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 4


 145:temperature_task.c ****          /* Command has been received from temperatureCommandQ */ 
 146:temperature_task.c ****         if(rtosApiResult == pdTRUE)
 147:temperature_task.c ****         {   
 148:temperature_task.c ****             /* Take an action based on the command received */
 149:temperature_task.c ****             switch (temperatureCommand)
 150:temperature_task.c ****             {
 151:temperature_task.c ****                 /* Temperature data need to be sent */
 152:temperature_task.c ****                 case SEND_TEMPERATURE:
 153:temperature_task.c ****                     sendTemperatureDataFast = true;
 154:temperature_task.c ****                     /* Enable periodic scan */
 155:temperature_task.c ****                     TemperatureTimerUpdate(FAST_SCAN_INTERVAL);
 156:temperature_task.c ****                     break;
 157:temperature_task.c ****                  
 158:temperature_task.c ****                 /* No temperature data need to be sent */
 159:temperature_task.c ****                 case SEND_NONE:
 160:temperature_task.c ****                     sendTemperatureDataFast = false;
 161:temperature_task.c ****                     /* Disable periodic scan */
 162:temperature_task.c ****                     TemperatureTimerUpdate(SLOW_SCAN_INTERVAL);
 163:temperature_task.c ****                     break;
 164:temperature_task.c ****                 /* Process temperature data from CapSense widgets */
 165:temperature_task.c ****                 case HANDLE_ADC_INTERRUPT:
 166:temperature_task.c ****                     /* Read the ADC count values */
 167:temperature_task.c ****                     countReference  = ADC_GetResult16(REFERENCE_CHANNEL);
 168:temperature_task.c ****                     countThermistor = ADC_GetResult16(THERMISTOR_CHANNEL);
 169:temperature_task.c ****                    
 170:temperature_task.c ****                     /* Put the ADC to sleep so that entering low power modes 
 171:temperature_task.c ****                        won't affect the ADC operation */
 172:temperature_task.c ****                     ADC_Sleep();
 173:temperature_task.c ****                     
 174:temperature_task.c ****                     /* Clear the GPIO that drives the thermistor circuit, to 
 175:temperature_task.c ****                        save power */
 176:temperature_task.c ****                     Cy_GPIO_Clr(THER_VDD_0_PORT,THER_VDD_0_NUM);
 177:temperature_task.c ****                     
 178:temperature_task.c ****                     /* Calculate the thermistor resistance and the corresponding
 179:temperature_task.c ****                        temperature */
 180:temperature_task.c ****                     rThermistor = (R_REFERENCE*countThermistor)/countReference;    
 181:temperature_task.c ****                     temperature = (B_CONSTANT/(logf(rThermistor/R_INFINITY)))+
 182:temperature_task.c ****                                                                 ABSOLUTE_ZERO;
 183:temperature_task.c ****                     
 184:temperature_task.c ****                     processingComplete = true;
 185:temperature_task.c **** 
 186:temperature_task.c ****                     /* Send the processed temperature data */
 187:temperature_task.c ****                     if(sendTemperatureDataFast)
 188:temperature_task.c ****                     {
 189:temperature_task.c ****                         /* Pack the temperature data, respective command and send 
 190:temperature_task.c ****                            to the queue */
 191:temperature_task.c ****                         bleCommandAndData.command = SEND_TEMPERATURE_INDICATION;
 192:temperature_task.c ****                         bleCommandAndData.temperatureData = temperature;
 193:temperature_task.c ****                         xQueueSend(bleCommandQ, &bleCommandAndData,0u);
 194:temperature_task.c ****                     }
 195:temperature_task.c ****                     else
 196:temperature_task.c ****                     {
 197:temperature_task.c ****                         xQueueOverwrite(temperatureDataQ, &temperature);
 198:temperature_task.c ****                     }
 199:temperature_task.c ****                     break;
 200:temperature_task.c ****                 /* Start the next scan */                    
 201:temperature_task.c ****                 case TEMPERATURE_TIMER_EXPIRED:    
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 5


 202:temperature_task.c **** 
 203:temperature_task.c ****                         if(processingComplete)
 204:temperature_task.c ****                         {
 205:temperature_task.c ****                             Cy_GPIO_Set(THER_VDD_0_PORT,THER_VDD_0_NUM);    
 206:temperature_task.c ****                         
 207:temperature_task.c ****                             /* Wake up the ADC and start conversion */
 208:temperature_task.c ****                             ADC_Wakeup();
 209:temperature_task.c ****                             ADC_StartConvert();
 210:temperature_task.c ****                             processingComplete = false;
 211:temperature_task.c ****                         }    
 212:temperature_task.c **** 
 213:temperature_task.c ****                     break;
 214:temperature_task.c **** 
 215:temperature_task.c ****                 /* Invalid task notification value received */    
 216:temperature_task.c ****                 default:
 217:temperature_task.c ****                     Task_DebugPrintf("Error!   : Temperature - Invalid command "\
 218:temperature_task.c ****                                 "received .Error Code:", temperatureCommand);
 219:temperature_task.c ****                     break;
 220:temperature_task.c ****             }
 221:temperature_task.c ****         }            
 222:temperature_task.c ****         /* Task has timed out and received no commands during an interval of 
 223:temperature_task.c ****         portMAXDELAY ticks */
 224:temperature_task.c ****         else
 225:temperature_task.c ****         {
 226:temperature_task.c ****             Task_DebugPrintf("Warning! : Temperature - Task Timed out ", 0u);   
 227:temperature_task.c ****         }
 228:temperature_task.c ****     }
 229:temperature_task.c **** }
 230:temperature_task.c **** 
 231:temperature_task.c **** /*******************************************************************************
 232:temperature_task.c **** * Function Name: void isrADC(void)                         
 233:temperature_task.c **** ********************************************************************************
 234:temperature_task.c **** * Summary:
 235:temperature_task.c **** *  Interrupt service routine of the Scanning SAR ADC
 236:temperature_task.c **** *
 237:temperature_task.c **** * Parameters:
 238:temperature_task.c **** *  None
 239:temperature_task.c **** *
 240:temperature_task.c **** * Return:
 241:temperature_task.c **** *  void
 242:temperature_task.c **** *
 243:temperature_task.c **** *******************************************************************************/
 244:temperature_task.c **** void isrADC(void)
 245:temperature_task.c **** {
 246:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 247:temperature_task.c ****     BaseType_t rtosApiResult;
 248:temperature_task.c ****     
 249:temperature_task.c ****     /* Variable that stored interrupt status */
 250:temperature_task.c ****     uint32_t intr_status;
 251:temperature_task.c **** 
 252:temperature_task.c ****     /* Read interrupt status register */
 253:temperature_task.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
 254:temperature_task.c ****     
 255:temperature_task.c ****      /* Clear handled interrupt */
 256:temperature_task.c ****     Cy_SAR_ClearInterrupt(ADC_SAR__HW, intr_status);
 257:temperature_task.c ****     
 258:temperature_task.c ****     /* Read interrupt status register to ensure write completed due to 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 6


 259:temperature_task.c ****        buffered writes */
 260:temperature_task.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
 261:temperature_task.c ****     
 262:temperature_task.c ****     /* Send command to process temperature */
 263:temperature_task.c ****     temperature_command_t temperatureCommand = HANDLE_ADC_INTERRUPT;
 264:temperature_task.c ****     rtosApiResult = xQueueSendFromISR(temperatureCommandQ,
 265:temperature_task.c ****                                       &temperatureCommand,0u);
 266:temperature_task.c ****     
 267:temperature_task.c ****     /* Check if the operation has been successful */
 268:temperature_task.c ****     if(rtosApiResult != pdTRUE)
 269:temperature_task.c ****     {
 270:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Sending data to temperature"\
 271:temperature_task.c ****                     "queue", 0u);    
 272:temperature_task.c ****     }  
 273:temperature_task.c **** }
 274:temperature_task.c **** 
 275:temperature_task.c **** /*******************************************************************************
 276:temperature_task.c **** * Function Name: void static TemperatureTimerCallback(TimerHandle_t xTimer)                        
 277:temperature_task.c **** ********************************************************************************
 278:temperature_task.c **** * Summary:
 279:temperature_task.c **** *  This function is called when the temperature timer expires
 280:temperature_task.c **** *
 281:temperature_task.c **** * Parameters:
 282:temperature_task.c **** *  TimerHandle_t xTimer :  Current timer value (unused)
 283:temperature_task.c **** *
 284:temperature_task.c **** * Return:
 285:temperature_task.c **** *  void
 286:temperature_task.c **** *
 287:temperature_task.c **** *******************************************************************************/
 288:temperature_task.c **** void static TemperatureTimerCallback(TimerHandle_t xTimer)
 289:temperature_task.c **** {
  28              		.loc 1 289 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
 290:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 291:temperature_task.c ****     BaseType_t rtosApiResult;
 292:temperature_task.c ****     
 293:temperature_task.c ****     /* Remove warning for unused parameter */
 294:temperature_task.c ****     (void)xTimer;
 295:temperature_task.c ****     
 296:temperature_task.c ****     /* Send command to process temperature */
 297:temperature_task.c ****     temperature_command_t temperatureCommand = TEMPERATURE_TIMER_EXPIRED;
  38              		.loc 1 297 0
  39 0004 04A9     		add	r1, sp, #16
  40 0006 0323     		movs	r3, #3
  41 0008 01F8013D 		strb	r3, [r1, #-1]!
 298:temperature_task.c ****     rtosApiResult = xQueueSend(temperatureCommandQ, 
  42              		.loc 1 298 0
  43 000c 0023     		movs	r3, #0
  44 000e 1A46     		mov	r2, r3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 7


  45 0010 0948     		ldr	r0, .L4
  46              	.LVL1:
  47 0012 0068     		ldr	r0, [r0]
  48 0014 FFF7FEFF 		bl	xQueueGenericSend
  49              	.LVL2:
 299:temperature_task.c ****                                &temperatureCommand,0u);
 300:temperature_task.c ****     
 301:temperature_task.c ****     /* Check if the operation has been successful */
 302:temperature_task.c ****     if(rtosApiResult != pdTRUE)
  50              		.loc 1 302 0
  51 0018 0128     		cmp	r0, #1
  52 001a 09D0     		beq	.L1
  53              	.LVL3:
  54              	.LBB30:
  55              	.LBB31:
  56              		.file 2 "uart_debug.h"
   1:uart_debug.h  **** /******************************************************************************
   2:uart_debug.h  **** * File Name: uart_debug.h
   3:uart_debug.h  **** *
   4:uart_debug.h  **** * Version: 1.00
   5:uart_debug.h  **** *
   6:uart_debug.h  **** * Description: This file contains the macros that are used for UART based 
   7:uart_debug.h  **** *              debug
   8:uart_debug.h  **** *
   9:uart_debug.h  **** * Related Document: CE218138_BLE_Thermometer_RTOS.pdf
  10:uart_debug.h  **** *
  11:uart_debug.h  **** * Hardware Dependency: CY8CKIT-062-BLE PSoC 6 BLE Pioneer Kit
  12:uart_debug.h  **** *                      CY8CKIT-028-EPD E-INK Display Shield
  13:uart_debug.h  **** *
  14:uart_debug.h  **** *******************************************************************************
  15:uart_debug.h  **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  16:uart_debug.h  **** *******************************************************************************
  17:uart_debug.h  **** * This software, including source code, documentation and related materials
  18:uart_debug.h  **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  19:uart_debug.h  **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  20:uart_debug.h  **** * protection (United States and foreign), United States copyright laws and
  21:uart_debug.h  **** * international treaty provisions. Therefore, you may use this Software only
  22:uart_debug.h  **** * as provided in the license agreement accompanying the software package from
  23:uart_debug.h  **** * which you obtained this Software (“EULA”).
  24:uart_debug.h  **** *
  25:uart_debug.h  **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  26:uart_debug.h  **** * non-transferable license to copy, modify, and compile the Software source
  27:uart_debug.h  **** * code solely for use in connection with Cypress’s integrated circuit products.
  28:uart_debug.h  **** * Any reproduction, modification, translation, compilation, or representation
  29:uart_debug.h  **** * of this Software except as specified above is prohibited without the express
  30:uart_debug.h  **** * written permission of Cypress.
  31:uart_debug.h  **** *
  32:uart_debug.h  **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  33:uart_debug.h  **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  34:uart_debug.h  **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  35:uart_debug.h  **** * reserves the right to make changes to the Software without notice. Cypress 
  36:uart_debug.h  **** * does not assume any liability arising out of the application or use of the 
  37:uart_debug.h  **** * Software or any product or circuit described in the Software. Cypress does 
  38:uart_debug.h  **** * not authorize its products for use in any products where a malfunction or 
  39:uart_debug.h  **** * failure of the Cypress product may reasonably be expected to result in 
  40:uart_debug.h  **** * significant property damage, injury or death (“High Risk Product”). By 
  41:uart_debug.h  **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 8


  42:uart_debug.h  **** * system or application assumes all risk of such use and in doing so agrees to 
  43:uart_debug.h  **** * indemnify Cypress against all liability.
  44:uart_debug.h  **** *******************************************************************************/
  45:uart_debug.h  **** /******************************************************************************
  46:uart_debug.h  **** * This file contains the macros that are used for UART based debug. Note that 
  47:uart_debug.h  **** * enabling debug reduces performance and power efficiency. It also increases 
  48:uart_debug.h  **** * the code size.
  49:uart_debug.h  **** *
  50:uart_debug.h  **** * If the debug is enabled, you should set up a serial port terminal emulator 
  51:uart_debug.h  **** * such as Tera Term, or Hyperterminal with these settings to view the debug
  52:uart_debug.h  **** * information :
  53:uart_debug.h  **** *
  54:uart_debug.h  **** *   Baud rate     :  115200
  55:uart_debug.h  **** *   Data size     :  8-bit
  56:uart_debug.h  **** *   Parity        :  None
  57:uart_debug.h  **** *   Stop          :  1-bit
  58:uart_debug.h  **** *   Flow Control  :  None  
  59:uart_debug.h  **** *******************************************************************************/
  60:uart_debug.h  **** 
  61:uart_debug.h  **** /* Include guard */
  62:uart_debug.h  **** #ifndef UART_DEBUG_H
  63:uart_debug.h  **** #define UART_DEBUG_H
  64:uart_debug.h  **** 
  65:uart_debug.h  **** /* Header file includes */     
  66:uart_debug.h  **** #include "project.h"    
  67:uart_debug.h  **** #include <stdio.h>
  68:uart_debug.h  **** #include <stdlib.h>
  69:uart_debug.h  **** #include <string.h>
  70:uart_debug.h  **** #include <inttypes.h> 
  71:uart_debug.h  ****     
  72:uart_debug.h  **** #if CY_CPU_CORTEX_M4
  73:uart_debug.h  ****     #include "FreeRTOS.h"
  74:uart_debug.h  ****     #include "task.h"
  75:uart_debug.h  ****     #include "queue.h"   
  76:uart_debug.h  **** #endif /* CY_CPU_CORTEX_M4 */
  77:uart_debug.h  ****   
  78:uart_debug.h  **** /* (true) enables UART based debug and (false) disables it. Note that 
  79:uart_debug.h  ****    enabling debug reduces performance, power efficiency and increases 
  80:uart_debug.h  ****    code size. Make sure to enable the UART_DEBUG component in TopDesign 
  81:uart_debug.h  ****    schematic if debug is enabled */    
  82:uart_debug.h  **** #define UART_DEBUG_ENABLE    (true)
  83:uart_debug.h  ****     
  84:uart_debug.h  **** /* Declare the macros used for UART based debug. Make sure to enable the
  85:uart_debug.h  ****     UART_DEBUG component in TopDesign schematic if debug is enabled */    
  86:uart_debug.h  **** #if (UART_DEBUG_ENABLE)
  87:uart_debug.h  ****     /* UART component used for STDIO functions */
  88:uart_debug.h  ****     #define UART_STDIO          (DEBUG_UART_HW)
  89:uart_debug.h  ****     
  90:uart_debug.h  ****     /* Following macros are not RTOS thread-safe, therefore, should not be
  91:uart_debug.h  ****        called from RTOS Tasks */
  92:uart_debug.h  ****     
  93:uart_debug.h  ****     /* Initializes the UART component used for STDIO functions */
  94:uart_debug.h  ****     #define DebugPrintfInit()  (DEBUG_UART_Start())
  95:uart_debug.h  ****     /* Function macro that sends formatted output to STDOUT */
  96:uart_debug.h  ****     #define DebugPrintf(...)     (printf(__VA_ARGS__))
  97:uart_debug.h  ****     
  98:uart_debug.h  **** #if CY_CPU_CORTEX_M4    
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 9


  99:uart_debug.h  **** 	/* RTOS thread-safe macros for initializing and printing debug 
 100:uart_debug.h  **** 	   information from RTOS Tasks */
 101:uart_debug.h  **** 	
 102:uart_debug.h  **** 	/* Initializes the underlying Task and Queue used for printing debug 
 103:uart_debug.h  **** 	   messages */
 104:uart_debug.h  **** 	#define Task_DebugInit()   (InitDebugPrintf())
 105:uart_debug.h  **** 
 106:uart_debug.h  **** 	/* Prints a constant string and an optional error code from a separate 
 107:uart_debug.h  **** 	   Task */
 108:uart_debug.h  **** 	#define Task_DebugPrintf(constString, errorCode) (SendToDebugPrintTask(         \
 109:uart_debug.h  **** 													(char*)constString,        \
 110:uart_debug.h  **** 													(uint32_t)errorCode))
 111:uart_debug.h  **** 	
 112:uart_debug.h  **** 	/* Definition of internal macros, datatypes and the inline functions 
 113:uart_debug.h  **** 	   used by the RTOS thread-safe macros for initializing and printing debug 
 114:uart_debug.h  **** 	   information from RTOS Tasks */
 115:uart_debug.h  **** 			
 116:uart_debug.h  **** 	/* Maximum number of debug messages that can be queued */
 117:uart_debug.h  **** 	#define DEBUG_QUEUE_SIZE    16u
 118:uart_debug.h  **** 	
 119:uart_debug.h  **** 	/* Datatype used for debug queue */
 120:uart_debug.h  **** 	typedef struct
 121:uart_debug.h  **** 	{
 122:uart_debug.h  **** 		char* stringPointer;
 123:uart_debug.h  **** 		uint32_t errorCode;
 124:uart_debug.h  **** 	}   debug_print_data_t;
 125:uart_debug.h  **** 	
 126:uart_debug.h  **** 	/* Queue handle for debug message Queue */
 127:uart_debug.h  **** 	extern QueueHandle_t debugMessageQ;
 128:uart_debug.h  **** 	
 129:uart_debug.h  **** 	/* Task that performs thread safe debug message printing */
 130:uart_debug.h  **** 	void Task_Debug(void *pvParameters);
 131:uart_debug.h  **** 	
 132:uart_debug.h  **** 	/* Inline function that creates the underlying Task and Queue  */
 133:uart_debug.h  **** 	void inline static InitDebugPrintf()
 134:uart_debug.h  **** 	{
 135:uart_debug.h  **** 		debugMessageQ = xQueueCreate(DEBUG_QUEUE_SIZE,
 136:uart_debug.h  **** 										sizeof(debug_print_data_t));
 137:uart_debug.h  **** 		xTaskCreate(Task_Debug, "Debug Task", configMINIMAL_STACK_SIZE, NULL,
 138:uart_debug.h  **** 					(tskIDLE_PRIORITY+1u), NULL);
 139:uart_debug.h  **** 	}        
 140:uart_debug.h  **** 	
 141:uart_debug.h  **** 	/* Inline function that sends messages to the debug Queue */
 142:uart_debug.h  **** 	void inline static SendToDebugPrintTask(char* stringPtr, uint32_t errCode)
 143:uart_debug.h  **** 	{
 144:uart_debug.h  **** 		debug_print_data_t printData = {.stringPointer = stringPtr, 
  57              		.loc 2 144 0
  58 001c 074B     		ldr	r3, .L4+4
  59 001e 0193     		str	r3, [sp, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 0292     		str	r2, [sp, #8]
 145:uart_debug.h  **** 										.errorCode     = errCode};
 146:uart_debug.h  **** 		xQueueSend(debugMessageQ, &printData,0u);
  62              		.loc 2 146 0
  63 0024 1346     		mov	r3, r2
  64 0026 01A9     		add	r1, sp, #4
  65 0028 0548     		ldr	r0, .L4+8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 10


  66              	.LVL4:
  67 002a 0068     		ldr	r0, [r0]
  68 002c FFF7FEFF 		bl	xQueueGenericSend
  69              	.LVL5:
  70              	.L1:
  71              	.LBE31:
  72              	.LBE30:
 303:temperature_task.c ****     {
 304:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Sending data to temperature"\
 305:temperature_task.c ****                          "queue", 0u);    
 306:temperature_task.c ****     }
 307:temperature_task.c **** }
  73              		.loc 1 307 0
  74 0030 05B0     		add	sp, sp, #20
  75              		.cfi_def_cfa_offset 4
  76              		@ sp needed
  77 0032 5DF804FB 		ldr	pc, [sp], #4
  78              	.L5:
  79 0036 00BF     		.align	2
  80              	.L4:
  81 0038 00000000 		.word	temperatureCommandQ
  82 003c 00000000 		.word	.LC0
  83 0040 00000000 		.word	debugMessageQ
  84              		.cfi_endproc
  85              	.LFE716:
  86              		.size	TemperatureTimerCallback, .-TemperatureTimerCallback
  87              		.section	.text.TemperatureTimerStart,"ax",%progbits
  88              		.align	2
  89              		.thumb
  90              		.thumb_func
  91              		.type	TemperatureTimerStart, %function
  92              	TemperatureTimerStart:
  93              	.LFB717:
 308:temperature_task.c **** 
 309:temperature_task.c **** /*******************************************************************************
 310:temperature_task.c **** * Function Name: void static TemperatureTimerStart(void)                  
 311:temperature_task.c **** ********************************************************************************
 312:temperature_task.c **** * Summary:
 313:temperature_task.c **** *  This function starts the timer that provides timing to periodic
 314:temperature_task.c **** *  temperature processing
 315:temperature_task.c **** *
 316:temperature_task.c **** * Parameters:
 317:temperature_task.c **** *  void
 318:temperature_task.c **** *
 319:temperature_task.c **** * Return:
 320:temperature_task.c **** *  void
 321:temperature_task.c **** *
 322:temperature_task.c **** *******************************************************************************/
 323:temperature_task.c **** void static TemperatureTimerStart(void)
 324:temperature_task.c **** {
  94              		.loc 1 324 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 10B5     		push	{r4, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 11


 101              		.cfi_offset 14, -4
 102 0002 84B0     		sub	sp, sp, #16
 103              		.cfi_def_cfa_offset 24
 325:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 326:temperature_task.c ****     BaseType_t rtosApiResult;
 327:temperature_task.c ****     
 328:temperature_task.c ****     /* Create an RTOS timer */
 329:temperature_task.c ****     xTimer_Temperature =  xTimerCreate ("Temperature Timer",
 104              		.loc 1 329 0
 105 0004 174B     		ldr	r3, .L10
 106 0006 0093     		str	r3, [sp]
 107 0008 0023     		movs	r3, #0
 108 000a 0122     		movs	r2, #1
 109 000c 42F21071 		movw	r1, #10000
 110 0010 1548     		ldr	r0, .L10+4
 111 0012 FFF7FEFF 		bl	xTimerCreate
 112              	.LVL6:
 113 0016 154B     		ldr	r3, .L10+8
 114 0018 1860     		str	r0, [r3]
 330:temperature_task.c ****                                         SLOW_SCAN_INTERVAL, pdTRUE,  
 331:temperature_task.c ****                                         NULL, TemperatureTimerCallback);
 332:temperature_task.c ****     
 333:temperature_task.c ****     /* Make sure that timer handle is valid */
 334:temperature_task.c ****     if (xTimer_Temperature != NULL)
 115              		.loc 1 334 0
 116 001a B0B1     		cbz	r0, .L7
 117 001c 0446     		mov	r4, r0
 335:temperature_task.c ****     {
 336:temperature_task.c ****         /* Start the timer */
 337:temperature_task.c ****         rtosApiResult = xTimerStart(xTimer_Temperature,0u);
 118              		.loc 1 337 0
 119 001e FFF7FEFF 		bl	xTaskGetTickCount
 120              	.LVL7:
 121 0022 0023     		movs	r3, #0
 122 0024 0093     		str	r3, [sp]
 123 0026 0246     		mov	r2, r0
 124 0028 0121     		movs	r1, #1
 125 002a 2046     		mov	r0, r4
 126 002c FFF7FEFF 		bl	xTimerGenericCommand
 127              	.LVL8:
 338:temperature_task.c ****         
 339:temperature_task.c ****         /* Check if the operation has been successful */
 340:temperature_task.c ****         if(rtosApiResult != pdPASS)
 128              		.loc 1 340 0
 129 0030 0128     		cmp	r0, #1
 130 0032 14D0     		beq	.L6
 131              	.LVL9:
 132              	.LBB32:
 133              	.LBB33:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 134              		.loc 2 144 0
 135 0034 0E4B     		ldr	r3, .L10+12
 136 0036 0293     		str	r3, [sp, #8]
 137 0038 0022     		movs	r2, #0
 138 003a 0392     		str	r2, [sp, #12]
 139              		.loc 2 146 0
 140 003c 1346     		mov	r3, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 12


 141 003e 02A9     		add	r1, sp, #8
 142 0040 0C48     		ldr	r0, .L10+16
 143              	.LVL10:
 144 0042 0068     		ldr	r0, [r0]
 145 0044 FFF7FEFF 		bl	xQueueGenericSend
 146              	.LVL11:
 147 0048 09E0     		b	.L6
 148              	.LVL12:
 149              	.L7:
 150              	.LBE33:
 151              	.LBE32:
 152              	.LBB34:
 153              	.LBB35:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 154              		.loc 2 144 0
 155 004a 0B4B     		ldr	r3, .L10+20
 156 004c 0293     		str	r3, [sp, #8]
 157 004e 0022     		movs	r2, #0
 158 0050 0392     		str	r2, [sp, #12]
 159              		.loc 2 146 0
 160 0052 1346     		mov	r3, r2
 161 0054 02A9     		add	r1, sp, #8
 162 0056 0748     		ldr	r0, .L10+16
 163 0058 0068     		ldr	r0, [r0]
 164 005a FFF7FEFF 		bl	xQueueGenericSend
 165              	.LVL13:
 166              	.L6:
 167              	.LBE35:
 168              	.LBE34:
 341:temperature_task.c ****         {
 342:temperature_task.c ****             Task_DebugPrintf("Failure! : Temperature  - Timer initialization", 0u);    
 343:temperature_task.c ****         }
 344:temperature_task.c ****     }
 345:temperature_task.c ****     else
 346:temperature_task.c ****     {
 347:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Timer creation", 0u); 
 348:temperature_task.c ****     }
 349:temperature_task.c **** }
 169              		.loc 1 349 0
 170 005e 04B0     		add	sp, sp, #16
 171              		.cfi_def_cfa_offset 8
 172              		@ sp needed
 173 0060 10BD     		pop	{r4, pc}
 174              	.L11:
 175 0062 00BF     		.align	2
 176              	.L10:
 177 0064 00000000 		.word	TemperatureTimerCallback
 178 0068 3C000000 		.word	.LC1
 179 006c 00000000 		.word	xTimer_Temperature
 180 0070 50000000 		.word	.LC2
 181 0074 00000000 		.word	debugMessageQ
 182 0078 80000000 		.word	.LC3
 183              		.cfi_endproc
 184              	.LFE717:
 185              		.size	TemperatureTimerStart, .-TemperatureTimerStart
 186              		.section	.text.TemperatureTimerUpdate,"ax",%progbits
 187              		.align	2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 13


 188              		.thumb
 189              		.thumb_func
 190              		.type	TemperatureTimerUpdate, %function
 191              	TemperatureTimerUpdate:
 192              	.LFB718:
 350:temperature_task.c **** 
 351:temperature_task.c **** /*******************************************************************************
 352:temperature_task.c **** * Function Name: void static TemperatureTimerUpdate(TickType_t period))                 
 353:temperature_task.c **** ********************************************************************************
 354:temperature_task.c **** * Summary:
 355:temperature_task.c **** *  This function updates the timer period per the parameter
 356:temperature_task.c **** *
 357:temperature_task.c **** * Parameters:
 358:temperature_task.c **** *  TickType_t period :  Period of the timer in ticks
 359:temperature_task.c **** *
 360:temperature_task.c **** * Return:
 361:temperature_task.c **** *  void
 362:temperature_task.c **** *
 363:temperature_task.c **** *******************************************************************************/
 364:temperature_task.c **** void static TemperatureTimerUpdate(TickType_t period)
 365:temperature_task.c **** {
 193              		.loc 1 365 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL14:
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202 0002 84B0     		sub	sp, sp, #16
 203              		.cfi_def_cfa_offset 24
 366:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 367:temperature_task.c ****     BaseType_t rtosApiResult;
 368:temperature_task.c ****     
 369:temperature_task.c ****     /* Change the timer period */
 370:temperature_task.c ****     rtosApiResult = xTimerChangePeriod(xTimer_Temperature, period, 0u);
 204              		.loc 1 370 0
 205 0004 0B4B     		ldr	r3, .L15
 206 0006 1C68     		ldr	r4, [r3]
 207 0008 0023     		movs	r3, #0
 208 000a 0093     		str	r3, [sp]
 209 000c 0246     		mov	r2, r0
 210 000e 0421     		movs	r1, #4
 211 0010 2046     		mov	r0, r4
 212              	.LVL15:
 213 0012 FFF7FEFF 		bl	xTimerGenericCommand
 214              	.LVL16:
 371:temperature_task.c **** 
 372:temperature_task.c ****     /* Check if the operation has been successful */
 373:temperature_task.c ****     if(rtosApiResult != pdPASS)
 215              		.loc 1 373 0
 216 0016 0128     		cmp	r0, #1
 217 0018 09D0     		beq	.L12
 218              	.LVL17:
 219              	.LBB36:
 220              	.LBB37:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 14


 144:uart_debug.h  **** 										.errorCode     = errCode};
 221              		.loc 2 144 0
 222 001a 074B     		ldr	r3, .L15+4
 223 001c 0293     		str	r3, [sp, #8]
 224 001e 0022     		movs	r2, #0
 225 0020 0392     		str	r2, [sp, #12]
 226              		.loc 2 146 0
 227 0022 1346     		mov	r3, r2
 228 0024 02A9     		add	r1, sp, #8
 229 0026 0548     		ldr	r0, .L15+8
 230              	.LVL18:
 231 0028 0068     		ldr	r0, [r0]
 232 002a FFF7FEFF 		bl	xQueueGenericSend
 233              	.LVL19:
 234              	.L12:
 235              	.LBE37:
 236              	.LBE36:
 374:temperature_task.c ****     {
 375:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature - Timer update ", 0u);   
 376:temperature_task.c ****     }
 377:temperature_task.c **** }
 237              		.loc 1 377 0
 238 002e 04B0     		add	sp, sp, #16
 239              		.cfi_def_cfa_offset 8
 240              		@ sp needed
 241 0030 10BD     		pop	{r4, pc}
 242              	.L16:
 243 0032 00BF     		.align	2
 244              	.L15:
 245 0034 00000000 		.word	xTimer_Temperature
 246 0038 AC000000 		.word	.LC4
 247 003c 00000000 		.word	debugMessageQ
 248              		.cfi_endproc
 249              	.LFE718:
 250              		.size	TemperatureTimerUpdate, .-TemperatureTimerUpdate
 251              		.section	.text.isrADC,"ax",%progbits
 252              		.align	2
 253              		.global	isrADC
 254              		.thumb
 255              		.thumb_func
 256              		.type	isrADC, %function
 257              	isrADC:
 258              	.LFB715:
 245:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 259              		.loc 1 245 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 16
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267 0002 84B0     		sub	sp, sp, #16
 268              		.cfi_def_cfa_offset 24
 269              	.LVL20:
 270              	.LBB38:
 271              	.LBB39:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 15


 272              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar SAR ADC Subsystem (SAR)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 16


  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 17


 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 18


 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 19


 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 20


 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 21


 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 22


 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 23


 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_D
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 24


 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_Sleep flow</td>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 25


 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syslib/cy_syslib.h"
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syspm/cy_syspm.h"
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifndef CY_IP_MXS40PASS_SAR
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     #error "The SAR driver is not supported on this device"
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        10
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 26


 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 27


 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 28


 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 29


 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 30


 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 31


 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 32


 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 33


1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 34


1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 35


1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 36


1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 37


1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 38


1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Sleep(SAR_Type *base);
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 39


1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CTRL &= ~SAR_CTRL_ENABLED_Msk;
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 40


1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->CHAN_RESULT_UPDATED;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CHAN_EN = enableMask;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 41


1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->RANGE_COND = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->INTR;
 273              		.loc 3 1533 0
 274 0004 144B     		ldr	r3, .L21
 275 0006 D3F81042 		ldr	r4, [r3, #528]
 276              	.LVL21:
 277              	.LBE39:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 42


 278              	.LBE38:
 279              	.LBB40:
 280              	.LBB41:
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 281              		.loc 3 1561 0
 282 000a 072C     		cmp	r4, #7
 283 000c 04D9     		bls	.L18
 284 000e 40F21961 		movw	r1, #1561
 285 0012 1248     		ldr	r0, .L21+4
 286 0014 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 287              	.LVL22:
 288              	.L18:
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR = intrMask;
 289              		.loc 3 1563 0
 290 0018 0F4B     		ldr	r3, .L21
 291 001a C3F81042 		str	r4, [r3, #528]
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) base->INTR;
 292              		.loc 3 1566 0
 293 001e D3F81022 		ldr	r2, [r3, #528]
 294              	.LVL23:
 295              	.LBE41:
 296              	.LBE40:
 297              	.LBB42:
 298              	.LBB43:
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 299              		.loc 3 1533 0
 300 0022 D3F81032 		ldr	r3, [r3, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 43


 301              	.LVL24:
 302              	.LBE43:
 303              	.LBE42:
 263:temperature_task.c ****     rtosApiResult = xQueueSendFromISR(temperatureCommandQ,
 304              		.loc 1 263 0
 305 0026 04A9     		add	r1, sp, #16
 306 0028 0223     		movs	r3, #2
 307 002a 01F8013D 		strb	r3, [r1, #-1]!
 264:temperature_task.c ****                                       &temperatureCommand,0u);
 308              		.loc 1 264 0
 309 002e 0023     		movs	r3, #0
 310 0030 1A46     		mov	r2, r3
 311 0032 0B48     		ldr	r0, .L21+8
 312 0034 0068     		ldr	r0, [r0]
 313 0036 FFF7FEFF 		bl	xQueueGenericSendFromISR
 314              	.LVL25:
 268:temperature_task.c ****     {
 315              		.loc 1 268 0
 316 003a 0128     		cmp	r0, #1
 317 003c 09D0     		beq	.L17
 318              	.LVL26:
 319              	.LBB44:
 320              	.LBB45:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 321              		.loc 2 144 0
 322 003e 094B     		ldr	r3, .L21+12
 323 0040 0193     		str	r3, [sp, #4]
 324 0042 0022     		movs	r2, #0
 325 0044 0292     		str	r2, [sp, #8]
 326              		.loc 2 146 0
 327 0046 1346     		mov	r3, r2
 328 0048 01A9     		add	r1, sp, #4
 329 004a 0748     		ldr	r0, .L21+16
 330              	.LVL27:
 331 004c 0068     		ldr	r0, [r0]
 332 004e FFF7FEFF 		bl	xQueueGenericSend
 333              	.LVL28:
 334              	.L17:
 335              	.LBE45:
 336              	.LBE44:
 273:temperature_task.c **** 
 337              		.loc 1 273 0
 338 0052 04B0     		add	sp, sp, #16
 339              		.cfi_def_cfa_offset 8
 340              		@ sp needed
 341 0054 10BD     		pop	{r4, pc}
 342              	.L22:
 343 0056 00BF     		.align	2
 344              	.L21:
 345 0058 00001D41 		.word	1092419584
 346 005c D4000000 		.word	.LC5
 347 0060 00000000 		.word	temperatureCommandQ
 348 0064 00000000 		.word	.LC0
 349 0068 00000000 		.word	debugMessageQ
 350              		.cfi_endproc
 351              	.LFE715:
 352              		.size	isrADC, .-isrADC
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 44


 353              		.section	.text.Task_Temperature,"ax",%progbits
 354              		.align	2
 355              		.global	Task_Temperature
 356              		.thumb
 357              		.thumb_func
 358              		.type	Task_Temperature, %function
 359              	Task_Temperature:
 360              	.LFB714:
 108:temperature_task.c ****     /* Variable that stores commands received  */
 361              		.loc 1 108 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 24
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              	.LVL29:
 366 0000 30B5     		push	{r4, r5, lr}
 367              		.cfi_def_cfa_offset 12
 368              		.cfi_offset 4, -12
 369              		.cfi_offset 5, -8
 370              		.cfi_offset 14, -4
 371 0002 2DED028B 		vpush.64	{d8}
 372              		.cfi_def_cfa_offset 20
 373              		.cfi_offset 80, -20
 374              		.cfi_offset 81, -16
 375 0006 87B0     		sub	sp, sp, #28
 376              		.cfi_def_cfa_offset 48
 377              	.LVL30:
 130:temperature_task.c ****     ADC_IRQ_Enable();
 378              		.loc 1 130 0
 379 0008 5B48     		ldr	r0, .L37
 380              	.LVL31:
 381 000a FFF7FEFF 		bl	ADC_StartEx
 382              	.LVL32:
 131:temperature_task.c ****     ADC_StartConvert();
 383              		.loc 1 131 0
 384 000e FFF7FEFF 		bl	ADC_IRQ_Enable
 385              	.LVL33:
 132:temperature_task.c ****     
 386              		.loc 1 132 0
 387 0012 FFF7FEFF 		bl	ADC_StartConvert
 388              	.LVL34:
 135:temperature_task.c ****     
 389              		.loc 1 135 0
 390 0016 FFF7FEFF 		bl	TemperatureTimerStart
 391              	.LVL35:
 117:temperature_task.c ****     
 392              		.loc 1 117 0
 393 001a 0024     		movs	r4, #0
 394              	.LVL36:
 395              	.L24:
 142:temperature_task.c ****                                       &temperatureCommand, portMAX_DELAY);
 396              		.loc 1 142 0
 397 001c 0023     		movs	r3, #0
 398 001e 4FF0FF32 		mov	r2, #-1
 399 0022 0DF11701 		add	r1, sp, #23
 400 0026 5548     		ldr	r0, .L37+4
 401 0028 0068     		ldr	r0, [r0]
 402 002a FFF7FEFF 		bl	xQueueGenericReceive
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 45


 403              	.LVL37:
 146:temperature_task.c ****         {   
 404              		.loc 1 146 0
 405 002e 0128     		cmp	r0, #1
 406 0030 40F09680 		bne	.L25
 149:temperature_task.c ****             {
 407              		.loc 1 149 0
 408 0034 9DF81730 		ldrb	r3, [sp, #23]	@ zero_extendqisi2
 409 0038 032B     		cmp	r3, #3
 410 003a 00F28680 		bhi	.L26
 411 003e DFE803F0 		tbb	[pc, r3]
 412              	.L28:
 413 0042 02       		.byte	(.L27-.L28)/2
 414 0043 07       		.byte	(.L29-.L28)/2
 415 0044 0D       		.byte	(.L30-.L28)/2
 416 0045 73       		.byte	(.L31-.L28)/2
 417              		.p2align 1
 418              	.L27:
 419              	.LVL38:
 155:temperature_task.c ****                     break;
 420              		.loc 1 155 0
 421 0046 6420     		movs	r0, #100
 422              	.LVL39:
 423 0048 FFF7FEFF 		bl	TemperatureTimerUpdate
 424              	.LVL40:
 153:temperature_task.c ****                     /* Enable periodic scan */
 425              		.loc 1 153 0
 426 004c 0124     		movs	r4, #1
 156:temperature_task.c ****                  
 427              		.loc 1 156 0
 428 004e E5E7     		b	.L24
 429              	.LVL41:
 430              	.L29:
 162:temperature_task.c ****                     break;
 431              		.loc 1 162 0
 432 0050 42F21070 		movw	r0, #10000
 433              	.LVL42:
 434 0054 FFF7FEFF 		bl	TemperatureTimerUpdate
 435              	.LVL43:
 160:temperature_task.c ****                     /* Disable periodic scan */
 436              		.loc 1 160 0
 437 0058 0024     		movs	r4, #0
 163:temperature_task.c ****                 /* Process temperature data from CapSense widgets */
 438              		.loc 1 163 0
 439 005a DFE7     		b	.L24
 440              	.LVL44:
 441              	.L30:
 442              	.LBB62:
 443              	.LBB63:
 444              		.file 4 "Generated_Source\\PSoC6/ADC.h"
   1:Generated_Source\PSoC6/ADC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC.h **** * \file     ADC.h
   3:Generated_Source\PSoC6/ADC.h **** * \version  2.10
   4:Generated_Source\PSoC6/ADC.h **** *
   5:Generated_Source\PSoC6/ADC.h **** * \brief
   6:Generated_Source\PSoC6/ADC.h **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 46


   8:Generated_Source\PSoC6/ADC.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC.h **** * \copyright
  10:Generated_Source\PSoC6/ADC.h **** * (c) 2017, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC.h **** #if !defined(CY_ADC_H)
  40:Generated_Source\PSoC6/ADC.h **** #define CY_ADC_H
  41:Generated_Source\PSoC6/ADC.h **** 
  42:Generated_Source\PSoC6/ADC.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC.h **** 
  45:Generated_Source\PSoC6/ADC.h **** #define ADC_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC.h **** #if (ADC_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC.h **** #include "ADC_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC.h **** #endif
  49:Generated_Source\PSoC6/ADC.h **** 
  50:Generated_Source\PSoC6/ADC.h **** #define ADC_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC.h **** #include "ADC_intSarClock.h"
  53:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC.h **** 
  55:Generated_Source\PSoC6/ADC.h **** /**
  56:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC.h **** *
  58:Generated_Source\PSoC6/ADC.h **** */
  59:Generated_Source\PSoC6/ADC.h **** typedef struct
  60:Generated_Source\PSoC6/ADC.h **** {
  61:Generated_Source\PSoC6/ADC.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 47


  65:Generated_Source\PSoC6/ADC.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC.h ****                                             */
  68:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC.h **** 
  72:Generated_Source\PSoC6/ADC.h **** } ADC_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC.h **** 
  75:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC.h **** void ADC_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC.h **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC.h **** void ADC_Init(void);
  81:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void);
  82:Generated_Source\PSoC6/ADC.h **** 
  83:Generated_Source\PSoC6/ADC.h **** /**
  84:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC.h **** * @{
  86:Generated_Source\PSoC6/ADC.h **** */
  87:Generated_Source\PSoC6/ADC.h **** void ADC_Start(void);
  88:Generated_Source\PSoC6/ADC.h **** void ADC_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void);
  90:Generated_Source\PSoC6/ADC.h **** void ADC_StartConvert(void);
  91:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void);
  92:Generated_Source\PSoC6/ADC.h **** void ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC.h **** void ADC_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC.h **** uint32_t ADC_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC.h **** 
 107:Generated_Source\PSoC6/ADC.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC.h **** 
 109:Generated_Source\PSoC6/ADC.h **** void ADC_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC.h **** 
 111:Generated_Source\PSoC6/ADC.h **** /**
 112:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC.h **** * @{
 114:Generated_Source\PSoC6/ADC.h **** */
 115:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void);
 116:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void);
 117:Generated_Source\PSoC6/ADC.h **** 
 118:Generated_Source\PSoC6/ADC.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC.h **** 
 120:Generated_Source\PSoC6/ADC.h **** /**
 121:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_interrupt
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 48


 122:Generated_Source\PSoC6/ADC.h **** * @{
 123:Generated_Source\PSoC6/ADC.h **** */
 124:Generated_Source\PSoC6/ADC.h **** void ADC_ISR(void);
 125:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC.h **** 
 128:Generated_Source\PSoC6/ADC.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC.h **** 
 130:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC.h **** 
 135:Generated_Source\PSoC6/ADC.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC.h **** 
 138:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC.h **** 
 142:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_RATE             (200)
 143:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_COUNT           (2u)
 145:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_NOMINAL_CLOCK_FREQ      (12000000u)
 147:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_EN              (0x3u)
 148:Generated_Source\PSoC6/ADC.h **** 
 149:Generated_Source\PSoC6/ADC.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLES_AVERAGED        (7uL)
 153:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_PRESENT          (0)
 157:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME0          (3uL)
 159:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC.h **** 
 172:Generated_Source\PSoC6/ADC.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG0_NOMINAL_CLOCK_FREQ))
 175:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC.h **** 
 177:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 customizer defines                                     */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 49


 179:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC.h **** 
 181:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC.h **** 
 185:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC.h **** 
 193:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC.h **** 
 216:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG1_NOMINAL_CLOCK_FR
 219:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC.h **** #endif /* #if(ADC_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC.h **** 
 222:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC.h **** 
 226:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC.h **** 
 230:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_NOMINAL_CLOCK_FREQ      (u)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 50


 236:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC.h **** 
 238:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC.h **** 
 261:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG2_NOMINAL_CLOCK_FR
 264:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC.h **** 
 267:Generated_Source\PSoC6/ADC.h **** 
 268:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC.h **** 
 272:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC.h **** 
 283:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME0          (uL)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 51


 293:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC.h **** 
 306:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG3_NOMINAL_CLOCK_FR
 309:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC.h **** 
 312:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC.h **** 
 316:Generated_Source\PSoC6/ADC.h **** #define ADC_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC.h **** #define ADC_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC.h **** #define ADC_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC.h **** #define ADC_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC.h **** 
 323:Generated_Source\PSoC6/ADC.h **** /** ADC_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC.h **** */
 326:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CHANNELS_NUM           (2u)
 327:Generated_Source\PSoC6/ADC.h **** 
 328:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC.h **** /**
 332:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC.h **** * @{
 337:Generated_Source\PSoC6/ADC.h **** */
 338:Generated_Source\PSoC6/ADC.h **** 
 339:Generated_Source\PSoC6/ADC.h **** /** ADC_initVar
 340:Generated_Source\PSoC6/ADC.h **** * The ADC_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC.h **** * set to 1 the first time ADC_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC.h **** * ADC_Start() routine.
 345:Generated_Source\PSoC6/ADC.h **** *
 346:Generated_Source\PSoC6/ADC.h **** * If reinitialization of the component is required, then the ADC_Init() function
 347:Generated_Source\PSoC6/ADC.h **** * can be called before the ADC_Start() or ADC_Enable()
 348:Generated_Source\PSoC6/ADC.h **** * functions.
 349:Generated_Source\PSoC6/ADC.h **** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 52


 350:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_initVar;
 351:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_selected;
 352:Generated_Source\PSoC6/ADC.h **** extern uint32_t ADC_currentConfig;
 353:Generated_Source\PSoC6/ADC.h **** 
 354:Generated_Source\PSoC6/ADC.h **** #define ADC_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC.h **** 
 356:Generated_Source\PSoC6/ADC.h **** extern const ADC_CONFIG_STRUCT ADC_allConfigs[ADC_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC.h **** 
 358:Generated_Source\PSoC6/ADC.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC.h **** */
 362:Generated_Source\PSoC6/ADC.h **** extern cy_stc_syspm_callback_t ADC_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC.h **** 
 364:Generated_Source\PSoC6/ADC.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC.h **** 
 366:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC.h ****     #if((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC.h ****     #endif /* ((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC.h **** #else
 377:Generated_Source\PSoC6/ADC.h ****     #define ADC_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC.h **** 
 380:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC.h **** 
 389:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC.h **** 
 395:Generated_Source\PSoC6/ADC.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC.h **** 
 400:Generated_Source\PSoC6/ADC.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_FREERUNNING == ADC_FREERUNNING)
 402:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC.h **** #endif /* End ADC_CFG0_FREERUNNING == ADC_FREERUNNING */
 406:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 53


 407:Generated_Source\PSoC6/ADC.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC.h **** #elif(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC.h **** 
 414:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC.h ****     #if((ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC.h **** #elif (ADC_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         ADC_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC.h **** #else
 425:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC.h **** 
 428:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG0 << SAR_CTRL_NEG_S
 430:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC.h **** 
 436:Generated_Source\PSoC6/ADC.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC.h **** #else
 440:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC.h **** 
 443:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC.h **** 
 445:Generated_Source\PSoC6/ADC.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC.h **** 
 450:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC.h **** 
 454:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC.h **** 
 458:Generated_Source\PSoC6/ADC.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC.h **** 
 463:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_TRIGGER_OUT_INIT      (0u)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 54


 464:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC.h **** 
 466:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC.h **** 
 470:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC.h **** 
 474:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC.h **** 
 478:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC.h **** 
 489:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC.h **** )
 501:Generated_Source\PSoC6/ADC.h **** 
 502:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC.h ****         | (uint32)((uint32)ADC_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC.h **** 
 507:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC.h **** 
 509:Generated_Source\PSoC6/ADC.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC.h **** */
 512:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC.h **** 
 515:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC.h **** 
 519:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 calculated defines                                   */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 55


 521:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC.h **** 
 529:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC.h **** 
 535:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC.h **** 
 540:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_FREERUNNING == ADC_FREERUNNING)
 542:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG1_FREERUNNING == ADC_FREERUNNING */
 546:Generated_Source\PSoC6/ADC.h **** 
 547:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         ADC_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC.h ****     #else
 558:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC.h **** 
 561:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG1 << SAR_CTRL_NEG_S
 562:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC.h **** 
 564:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC.h **** 
 567:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC.h **** 
 569:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC.h **** 
 574:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 56


 578:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC.h **** 
 582:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC.h **** 
 587:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC.h **** 
 590:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC.h **** 
 594:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC.h **** 
 598:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC.h **** 
 602:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC.h **** 
 613:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC.h ****     )
 625:Generated_Source\PSoC6/ADC.h **** 
 626:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC.h **** 
 631:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC.h **** 
 633:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 57


 635:Generated_Source\PSoC6/ADC.h ****     */
 636:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC.h **** 
 640:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC.h **** 
 644:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC.h **** 
 654:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC.h **** 
 660:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC.h **** 
 665:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_FREERUNNING == ADC_FREERUNNING)
 667:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG2_FREERUNNING == ADC_FREERUNNING */
 671:Generated_Source\PSoC6/ADC.h **** 
 672:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         ADC_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC.h ****     #else
 683:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC.h **** 
 686:Generated_Source\PSoC6/ADC.h ****    #define ADC_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG2 << SAR_CTRL_NEG_SE
 687:Generated_Source\PSoC6/ADC.h **** 
 688:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC.h **** 
 690:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 58


 692:Generated_Source\PSoC6/ADC.h **** 
 693:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC.h **** 
 695:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC.h **** 
 700:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC.h **** 
 704:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC.h **** 
 708:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC.h **** 
 713:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC.h **** 
 716:Generated_Source\PSoC6/ADC.h **** 
 717:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC.h **** 
 721:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC.h **** 
 725:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC.h **** 
 729:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC.h **** 
 740:Generated_Source\PSoC6/ADC.h **** 
 741:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_UAB_SCAN_MODE_INIT \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 59


 749:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC.h ****     )
 753:Generated_Source\PSoC6/ADC.h **** 
 754:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC.h **** 
 759:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC.h **** 
 761:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC.h ****     */
 764:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC.h **** 
 768:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC.h **** 
 772:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC.h **** 
 782:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC.h **** 
 788:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC.h **** 
 793:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_FREERUNNING == ADC_FREERUNNING)
 795:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG3_FREERUNNING == ADC_FREERUNNING */
 799:Generated_Source\PSoC6/ADC.h **** 
 800:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 60


 806:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         ADC_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC.h ****     #else
 811:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC.h **** 
 814:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG3 << SAR_CTRL_NEG_S
 815:Generated_Source\PSoC6/ADC.h **** 
 816:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC.h **** 
 818:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC.h **** 
 821:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC.h **** 
 823:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC.h **** 
 828:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC.h **** 
 832:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC.h **** 
 836:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC.h **** 
 841:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC.h **** 
 844:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC.h **** 
 848:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC.h **** 
 852:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC.h **** 
 856:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 61


 863:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC.h **** 
 867:Generated_Source\PSoC6/ADC.h **** 
 868:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC.h ****     )
 880:Generated_Source\PSoC6/ADC.h **** 
 881:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC.h **** 
 886:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC.h **** 
 888:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC.h ****     */
 891:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC.h **** 
 894:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC.h **** 
 896:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC.h **** 
 900:Generated_Source\PSoC6/ADC.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Enable
 902:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC.h **** *
 904:Generated_Source\PSoC6/ADC.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC.h **** *
 906:Generated_Source\PSoC6/ADC.h **** * \param None
 907:Generated_Source\PSoC6/ADC.h **** *
 908:Generated_Source\PSoC6/ADC.h **** * \return None
 909:Generated_Source\PSoC6/ADC.h **** *
 910:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC.h **** *  None
 912:Generated_Source\PSoC6/ADC.h **** *
 913:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void)
 915:Generated_Source\PSoC6/ADC.h **** {
 916:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Enable(ADC_SAR__HW);
 917:Generated_Source\PSoC6/ADC.h **** }
 918:Generated_Source\PSoC6/ADC.h **** 
 919:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 62


 920:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Stop
 921:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC.h **** *
 923:Generated_Source\PSoC6/ADC.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC.h **** * power mode.
 925:Generated_Source\PSoC6/ADC.h **** *
 926:Generated_Source\PSoC6/ADC.h **** * \param None
 927:Generated_Source\PSoC6/ADC.h **** *
 928:Generated_Source\PSoC6/ADC.h **** * \return None
 929:Generated_Source\PSoC6/ADC.h **** *
 930:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC.h **** * Do not use the ADC_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC.h **** * ADC_StopConvert() API. If you use the ADC_Stop() API
 933:Generated_Source\PSoC6/ADC.h **** * to halt conversions then later use the ADC_Start() and
 934:Generated_Source\PSoC6/ADC.h **** * ADC_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC.h **** * of the scan may be corrupt. The ADC_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC.h **** * the ADC to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC.h **** * channel scan is complete, the ADC will stop all conversions, which
 938:Generated_Source\PSoC6/ADC.h **** * can be detected by the use of an ISR or the ADC_IsEndConversion()
 939:Generated_Source\PSoC6/ADC.h **** * function.
 940:Generated_Source\PSoC6/ADC.h **** *
 941:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void)
 943:Generated_Source\PSoC6/ADC.h **** {
 944:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Disable(ADC_SAR__HW);
 945:Generated_Source\PSoC6/ADC.h **** }
 946:Generated_Source\PSoC6/ADC.h **** 
 947:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 948:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_StopConvert
 949:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 950:Generated_Source\PSoC6/ADC.h **** *
 951:Generated_Source\PSoC6/ADC.h **** * \brief Forces the ADC to stop conversions. If a conversion is
 952:Generated_Source\PSoC6/ADC.h **** * currently executing, that conversion will complete, but no further conversions
 953:Generated_Source\PSoC6/ADC.h **** * will occur.
 954:Generated_Source\PSoC6/ADC.h **** *
 955:Generated_Source\PSoC6/ADC.h **** * \param None
 956:Generated_Source\PSoC6/ADC.h **** *
 957:Generated_Source\PSoC6/ADC.h **** * \return None
 958:Generated_Source\PSoC6/ADC.h **** *
 959:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 960:Generated_Source\PSoC6/ADC.h **** *
 961:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 962:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void)
 963:Generated_Source\PSoC6/ADC.h **** {
 964:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_StopConvert(ADC_SAR__HW);
 965:Generated_Source\PSoC6/ADC.h **** }
 966:Generated_Source\PSoC6/ADC.h **** 
 967:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 968:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult16
 969:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 970:Generated_Source\PSoC6/ADC.h **** *
 971:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register
 972:Generated_Source\PSoC6/ADC.h **** *
 973:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 974:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 975:Generated_Source\PSoC6/ADC.h **** *
 976:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 16-bit integer.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 63


 977:Generated_Source\PSoC6/ADC.h **** *
 978:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 979:Generated_Source\PSoC6/ADC.h **** *
 980:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 981:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan)
 982:Generated_Source\PSoC6/ADC.h **** {
 983:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
 984:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 445              		.loc 4 984 0
 446 005c 484B     		ldr	r3, .L37+8
 447 005e 1B68     		ldr	r3, [r3]
 448 0060 03EB8303 		add	r3, r3, r3, lsl #2
 449 0064 9A00     		lsls	r2, r3, #2
 450 0066 474B     		ldr	r3, .L37+12
 451 0068 1A44     		add	r2, r2, r3
 452 006a 5368     		ldr	r3, [r2, #4]
 453 006c 23B9     		cbnz	r3, .L33
 454 006e 4FF47671 		mov	r1, #984
 455 0072 4548     		ldr	r0, .L37+16
 456              	.LVL45:
 457 0074 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 458              	.LVL46:
 459              	.L33:
 985:Generated_Source\PSoC6/ADC.h **** 
 986:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_GetResult16(ADC_SAR__HW, chan);
 460              		.loc 4 986 0
 461 0078 0021     		movs	r1, #0
 462 007a 4448     		ldr	r0, .L37+20
 463 007c FFF7FEFF 		bl	Cy_SAR_GetResult16
 464              	.LVL47:
 465 0080 08EE900A 		vmov	s17, r0	@ int
 466              	.LVL48:
 467              	.LBE63:
 468              	.LBE62:
 469              	.LBB64:
 470              	.LBB65:
 984:Generated_Source\PSoC6/ADC.h **** 
 471              		.loc 4 984 0
 472 0084 3E4B     		ldr	r3, .L37+8
 473 0086 1B68     		ldr	r3, [r3]
 474 0088 03EB8303 		add	r3, r3, r3, lsl #2
 475 008c 9A00     		lsls	r2, r3, #2
 476 008e 3D4B     		ldr	r3, .L37+12
 477 0090 1A44     		add	r2, r2, r3
 478 0092 5368     		ldr	r3, [r2, #4]
 479 0094 012B     		cmp	r3, #1
 480 0096 04D8     		bhi	.L34
 481 0098 4FF47671 		mov	r1, #984
 482 009c 3A48     		ldr	r0, .L37+16
 483 009e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 484              	.LVL49:
 485              	.L34:
 486              		.loc 4 986 0
 487 00a2 3A4D     		ldr	r5, .L37+20
 488 00a4 0121     		movs	r1, #1
 489 00a6 2846     		mov	r0, r5
 490 00a8 FFF7FEFF 		bl	Cy_SAR_GetResult16
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 64


 491              	.LVL50:
 492 00ac 08EE100A 		vmov	s16, r0	@ int
 493              	.LVL51:
 494              	.LBE65:
 495              	.LBE64:
 496              	.LBB66:
 497              	.LBB67:
 987:Generated_Source\PSoC6/ADC.h **** }
 988:Generated_Source\PSoC6/ADC.h **** 
 989:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 990:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult32
 991:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6/ADC.h **** *
 993:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register.
 994:Generated_Source\PSoC6/ADC.h **** *
 995:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 996:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 997:Generated_Source\PSoC6/ADC.h **** *
 998:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 32-bit integer.
 999:Generated_Source\PSoC6/ADC.h **** *
1000:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1001:Generated_Source\PSoC6/ADC.h **** *
1002:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1003:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan)
1004:Generated_Source\PSoC6/ADC.h **** {
1005:Generated_Source\PSoC6/ADC.h ****     int32_t finalResult;
1006:Generated_Source\PSoC6/ADC.h **** 
1007:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1008:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1009:Generated_Source\PSoC6/ADC.h **** 
1010:Generated_Source\PSoC6/ADC.h ****     finalResult = Cy_SAR_GetResult32(ADC_SAR__HW, chan);
1011:Generated_Source\PSoC6/ADC.h **** 
1012:Generated_Source\PSoC6/ADC.h ****     return finalResult;
1013:Generated_Source\PSoC6/ADC.h **** }
1014:Generated_Source\PSoC6/ADC.h **** 
1015:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1016:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLowLimit
1017:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1018:Generated_Source\PSoC6/ADC.h **** *
1019:Generated_Source\PSoC6/ADC.h **** * \brief Sets the low limit parameter for a limit condition.
1020:Generated_Source\PSoC6/ADC.h **** *
1021:Generated_Source\PSoC6/ADC.h **** * \param lowLimit The low limit for a limit condition.
1022:Generated_Source\PSoC6/ADC.h **** *
1023:Generated_Source\PSoC6/ADC.h **** * \return None
1024:Generated_Source\PSoC6/ADC.h **** *
1025:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1026:Generated_Source\PSoC6/ADC.h **** *
1027:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1028:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit)
1029:Generated_Source\PSoC6/ADC.h **** {
1030:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetLowLimit(ADC_SAR__HW, lowLimit);
1031:Generated_Source\PSoC6/ADC.h **** }
1032:Generated_Source\PSoC6/ADC.h **** 
1033:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1034:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetHighLimit
1035:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1036:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 65


1037:Generated_Source\PSoC6/ADC.h **** * \brief Sets the high limit parameter for a limit condition.
1038:Generated_Source\PSoC6/ADC.h **** *
1039:Generated_Source\PSoC6/ADC.h **** * \param highLimit The high limit for a limit condition.
1040:Generated_Source\PSoC6/ADC.h **** *
1041:Generated_Source\PSoC6/ADC.h **** * \return None
1042:Generated_Source\PSoC6/ADC.h **** *
1043:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1044:Generated_Source\PSoC6/ADC.h **** *
1045:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1046:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit)
1047:Generated_Source\PSoC6/ADC.h **** {
1048:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetHighLimit(ADC_SAR__HW, highLimit);
1049:Generated_Source\PSoC6/ADC.h **** }
1050:Generated_Source\PSoC6/ADC.h **** 
1051:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1052:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLimitMask
1053:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1054:Generated_Source\PSoC6/ADC.h **** *
1055:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel limit condition mask.
1056:Generated_Source\PSoC6/ADC.h **** *
1057:Generated_Source\PSoC6/ADC.h **** *
1058:Generated_Source\PSoC6/ADC.h **** * \param limitMask
1059:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a limit condition interrupt.
1060:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the limit condition interrupt for channel N.
1061:Generated_Source\PSoC6/ADC.h **** * The limitMask cannot be larger than the number of channels.
1062:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1063:Generated_Source\PSoC6/ADC.h **** *
1064:Generated_Source\PSoC6/ADC.h **** * \return None
1065:Generated_Source\PSoC6/ADC.h **** *
1066:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1067:Generated_Source\PSoC6/ADC.h **** *
1068:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1069:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask)
1070:Generated_Source\PSoC6/ADC.h **** {
1071:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetRangeInterruptMask(ADC_SAR__HW, limitMask);
1072:Generated_Source\PSoC6/ADC.h **** }
1073:Generated_Source\PSoC6/ADC.h **** 
1074:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1075:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetSatMask
1076:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1077:Generated_Source\PSoC6/ADC.h **** *
1078:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel saturation event mask.
1079:Generated_Source\PSoC6/ADC.h **** *
1080:Generated_Source\PSoC6/ADC.h **** * \param satMask
1081:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a saturation event interrupt.
1082:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the saturation event interrupt for channel N.
1083:Generated_Source\PSoC6/ADC.h **** * The satMask cannot be larger than the number of channels.
1084:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1085:Generated_Source\PSoC6/ADC.h **** *
1086:Generated_Source\PSoC6/ADC.h **** * \return None
1087:Generated_Source\PSoC6/ADC.h **** *
1088:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1089:Generated_Source\PSoC6/ADC.h **** *
1090:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1091:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask)
1092:Generated_Source\PSoC6/ADC.h **** {
1093:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetSatInterruptMask(ADC_SAR__HW, satMask);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 66


1094:Generated_Source\PSoC6/ADC.h **** }
1095:Generated_Source\PSoC6/ADC.h **** 
1096:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1097:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetOffset
1098:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1099:Generated_Source\PSoC6/ADC.h **** *
1100:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts,
1101:Generated_Source\PSoC6/ADC.h **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1102:Generated_Source\PSoC6/ADC.h **** *
1103:Generated_Source\PSoC6/ADC.h **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1104:Generated_Source\PSoC6/ADC.h **** * functions use the following equation:
1105:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1106:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1107:Generated_Source\PSoC6/ADC.h **** *
1108:Generated_Source\PSoC6/ADC.h **** * To set channel 0's offset based on known V_offset_mV, use:
1109:Generated_Source\PSoC6/ADC.h **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1110:Generated_Source\PSoC6/ADC.h **** *
1111:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1112:Generated_Source\PSoC6/ADC.h **** *
1113:Generated_Source\PSoC6/ADC.h **** * \param offset This value is a measured value when the inputs are shorted or
1114:Generated_Source\PSoC6/ADC.h **** * connected to the same input voltage.
1115:Generated_Source\PSoC6/ADC.h **** *
1116:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1117:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1118:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: offset was set successfully
1119:Generated_Source\PSoC6/ADC.h **** *
1120:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1121:Generated_Source\PSoC6/ADC.h **** *
1122:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1123:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset)
1124:Generated_Source\PSoC6/ADC.h **** {
1125:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1126:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1127:Generated_Source\PSoC6/ADC.h **** 
1128:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetOffset(chan, offset);
1129:Generated_Source\PSoC6/ADC.h **** }
1130:Generated_Source\PSoC6/ADC.h **** 
1131:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1132:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetGain
1133:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1134:Generated_Source\PSoC6/ADC.h **** *
1135:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC gain in counts per 10 volt for the voltage
1136:Generated_Source\PSoC6/ADC.h **** * conversion functions. This value is set by default by the reference and
1137:Generated_Source\PSoC6/ADC.h **** * input range settings. Gain is applied after offset and unit scaling.  All
1138:Generated_Source\PSoC6/ADC.h **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1139:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1140:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1141:Generated_Source\PSoC6/ADC.h **** *
1142:Generated_Source\PSoC6/ADC.h **** * To set channel 0's gain based on known V_ref_mV, use:
1143:Generated_Source\PSoC6/ADC.h **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1144:Generated_Source\PSoC6/ADC.h **** *
1145:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1146:Generated_Source\PSoC6/ADC.h **** *
1147:Generated_Source\PSoC6/ADC.h **** * \param adcGain ADC gain in counts per 10 volt.
1148:Generated_Source\PSoC6/ADC.h **** *
1149:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1150:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 67


1151:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: gain was set successfully
1152:Generated_Source\PSoC6/ADC.h **** *
1153:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1154:Generated_Source\PSoC6/ADC.h **** *
1155:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1156:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain)
1157:Generated_Source\PSoC6/ADC.h **** {
1158:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1159:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1160:Generated_Source\PSoC6/ADC.h **** 
1161:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetGain(chan, adcGain);
1162:Generated_Source\PSoC6/ADC.h **** }
1163:Generated_Source\PSoC6/ADC.h **** 
1164:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1165:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_Volts
1166:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1167:Generated_Source\PSoC6/ADC.h **** *
1168:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1169:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 0.534.
1170:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1171:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1172:Generated_Source\PSoC6/ADC.h **** *
1173:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1174:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1175:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1176:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1177:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1178:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1179:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1180:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1181:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1182:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1183:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1184:Generated_Source\PSoC6/ADC.h **** *
1185:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1186:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1187:Generated_Source\PSoC6/ADC.h **** *
1188:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1189:Generated_Source\PSoC6/ADC.h **** *
1190:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1191:Generated_Source\PSoC6/ADC.h **** *
1192:Generated_Source\PSoC6/ADC.h **** * \return Result in Volts.
1193:Generated_Source\PSoC6/ADC.h **** *
1194:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1195:Generated_Source\PSoC6/ADC.h **** *
1196:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1197:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts)
1198:Generated_Source\PSoC6/ADC.h **** {
1199:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1200:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1201:Generated_Source\PSoC6/ADC.h **** 
1202:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_Volts(ADC_SAR__HW, chan, adcCounts);
1203:Generated_Source\PSoC6/ADC.h **** }
1204:Generated_Source\PSoC6/ADC.h **** 
1205:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1206:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_mVolts
1207:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 68


1208:Generated_Source\PSoC6/ADC.h **** *
1209:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1210:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534.
1211:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1212:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1213:Generated_Source\PSoC6/ADC.h **** *
1214:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1215:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1216:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1217:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1218:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1219:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1220:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1221:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1222:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1223:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1224:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1225:Generated_Source\PSoC6/ADC.h **** *
1226:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1227:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1228:Generated_Source\PSoC6/ADC.h **** *
1229:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1230:Generated_Source\PSoC6/ADC.h **** *
1231:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1232:Generated_Source\PSoC6/ADC.h **** *
1233:Generated_Source\PSoC6/ADC.h **** * \return Result in mV.
1234:Generated_Source\PSoC6/ADC.h **** *
1235:Generated_Source\PSoC6/ADC.h **** * \sideeffect None.
1236:Generated_Source\PSoC6/ADC.h **** *
1237:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1238:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts)
1239:Generated_Source\PSoC6/ADC.h **** {
1240:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1241:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1242:Generated_Source\PSoC6/ADC.h **** 
1243:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_mVolts(ADC_SAR__HW, chan, adcCounts);
1244:Generated_Source\PSoC6/ADC.h **** }
1245:Generated_Source\PSoC6/ADC.h **** 
1246:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1247:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_uVolts
1248:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1249:Generated_Source\PSoC6/ADC.h **** *
1250:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1251:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534000.
1252:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1253:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1254:Generated_Source\PSoC6/ADC.h **** *
1255:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1256:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1257:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1258:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1259:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1260:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1261:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1262:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1263:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1264:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 69


1265:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1266:Generated_Source\PSoC6/ADC.h **** *
1267:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1268:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1269:Generated_Source\PSoC6/ADC.h **** *
1270:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1271:Generated_Source\PSoC6/ADC.h **** *
1272:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1273:Generated_Source\PSoC6/ADC.h **** *
1274:Generated_Source\PSoC6/ADC.h **** * \return Result in microvolts.
1275:Generated_Source\PSoC6/ADC.h **** *
1276:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1277:Generated_Source\PSoC6/ADC.h **** *
1278:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1279:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts)
1280:Generated_Source\PSoC6/ADC.h **** {
1281:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1282:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1283:Generated_Source\PSoC6/ADC.h **** 
1284:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_uVolts(ADC_SAR__HW, chan, adcCounts);
1285:Generated_Source\PSoC6/ADC.h **** }
1286:Generated_Source\PSoC6/ADC.h **** 
1287:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1288:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Sleep
1289:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1290:Generated_Source\PSoC6/ADC.h **** *
1291:Generated_Source\PSoC6/ADC.h **** * \brief This is the preferred routine to prepare the component for sleep. The
1292:Generated_Source\PSoC6/ADC.h **** * ADC_Sleep() routine saves the current component state. Then it
1293:Generated_Source\PSoC6/ADC.h **** * calls the ADC_Stop() function.
1294:Generated_Source\PSoC6/ADC.h **** *
1295:Generated_Source\PSoC6/ADC.h **** * Calling this routine directly is not needed.
1296:Generated_Source\PSoC6/ADC.h **** * The ADC_DeepSleepCallbackStruct will ensure this routine
1297:Generated_Source\PSoC6/ADC.h **** * is called before the device enters Deep Sleep mode.
1298:Generated_Source\PSoC6/ADC.h **** *
1299:Generated_Source\PSoC6/ADC.h **** * \param None
1300:Generated_Source\PSoC6/ADC.h **** *
1301:Generated_Source\PSoC6/ADC.h **** * \return None
1302:Generated_Source\PSoC6/ADC.h **** *
1303:Generated_Source\PSoC6/ADC.h **** * \sideeffect If this function is called twice in the enable state of the
1304:Generated_Source\PSoC6/ADC.h **** * component, the disabled state of the component will be stored. So
1305:Generated_Source\PSoC6/ADC.h **** * ADC_Enable() and ADC_StartConvert() must be called
1306:Generated_Source\PSoC6/ADC.h **** * after ADC_Wakeup() in this case.
1307:Generated_Source\PSoC6/ADC.h **** *
1308:Generated_Source\PSoC6/ADC.h **** * \globalvars
1309:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup (W)
1310:Generated_Source\PSoC6/ADC.h **** *
1311:Generated_Source\PSoC6/ADC.h **** * \globalvars
1312:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup
1313:Generated_Source\PSoC6/ADC.h **** *
1314:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1315:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void)
1316:Generated_Source\PSoC6/ADC.h **** {
1317:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Sleep(ADC_SAR__HW);
 498              		.loc 4 1317 0
 499 00b0 2846     		mov	r0, r5
 500 00b2 FFF7FEFF 		bl	Cy_SAR_Sleep
 501              	.LVL52:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 70


 502              	.LBE67:
 503              	.LBE66:
 504              	.LBB68:
 505              	.LBB69:
 506              		.file 5 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \file cy_gpio.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \version 1.10.1
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Provides an API declaration of the GPIO driver
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ********************************************************************************
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \copyright
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio General Purpose Input Output (GPIO)
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The GPIO driver provides an API to configure and access device Input/Output pins.
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * IO pins include all general purpose types such as GPIO, SIO, HSIO, AUXIO, and
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * their variants.
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Initialization can be performed either at the port level or by configuring the
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * individual pins. For efficient use of code space, port
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuration should be used in the field. Refer to the product device header files 
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * for the list of supported ports and pins.
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Single pin configuration is performed by using \ref Cy_GPIO_Pin_FastInit 
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   (provide specific values) or \ref Cy_GPIO_Pin_Init (provide a filled
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_pin_config_t structure).
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - An entire port can be configured using \ref Cy_GPIO_Port_Init. Provide a filled 
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_prt_config_t structure. The values in the structure are 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   bitfields representing the desired value for each pin in the port.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Pin configuration and management is based on the port address and pin number.
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \ref Cy_GPIO_PortToAddr function can optionally be used to calculate the port
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   address from the port number at run-time.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Once the pin/port initialization is complete, each pin can be accessed by 
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * specifying the port (GPIO_PRT_Type) and the pin (0-7) in the provided API 
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * functions.
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_configuration Configuration Considerations
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 1. Pin multiplexing is controlled through the High-Speed IO Matrix (HSIOM) selection.
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    This allows the pin to connect to signal sources/sinks throughout the device,
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    as defined by the pin HSIOM selection options (en_hsiom_sel_t).
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 2. All pins are initialized to High-Z drive mode with HSIOM connected to CPU (SW
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    control digital pin only) at Power-On-Reset(POR).
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 3. Some API functions perform read-modify-write operations on shared port
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    registers. These functions are not thread safe and care must be taken when
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    called by the application.
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 71


  53:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Multiple pins on a port can be updated using direct port register writes with an
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * appropriate port mask. An example is shown below, highlighting the different ways of 
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuring Port 1 pins using,
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data register
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data set register
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data clear register
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c Cy_GPIO_Snippet
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_more_information More Information
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_MISRA MISRA-C Compliance]
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>MISRA Rule</th>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Class (Required/Advisory)</th>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Description</th>
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Description of Deviation(s)</th>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>16.7</td>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A</td>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A pointer parameter in a function prototype should be declared as pointer 
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         to const if the pointer is not used to modify the addressed object.</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>The objects pointed to by the base addresses of the GPIO port are not always modified.
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         While a const qualifier can be used in select scenarios, it brings little benefit
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         in adding this to the affected functions. </td>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_changelog Changelog
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10.1</td>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Updated description for the functions: \ref Cy_GPIO_GetInterruptStatus, 
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         \ref Cy_GPIO_GetInterruptMask, \ref Cy_GPIO_GetInterruptStatusMasked.
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         Minor documentation edits.
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     </td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Documentation update and clarification</td>
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10</td>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added input parameter validation to the API functions</td>
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.0</td>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Initial version</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_macros Macros
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 72


 110:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_functions Functions
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_init       Initialization Functions
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_gpio       GPIO Functions
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_sio        SIO Functions
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_interrupt  Port Interrupt Functions
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \}
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_data_structures Data Structures
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_enums Enumerated Types
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if !defined(CY_GPIO_H)
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_H
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include <stddef.h>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "syslib/cy_syslib.h"
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_device_headers.h"
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if defined(__cplusplus)
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** extern "C" {
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \addtogroup group_gpio_macros
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver major version */
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MAJOR       1
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver minor version */
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MINOR       10
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** GPIO driver ID */
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_ID CY_PDL_DRV_ID(0x16u)
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Enumerations
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_enums
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * GPIO Driver error codes
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum 
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_SUCCESS   = 0x00u,                                    /**< Returned successful */
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_BAD_PARAM = CY_GPIO_ID | CY_PDL_STATUS_ERROR | 0x01u, /**< Bad parameter was passed */
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_en_gpio_status_t;
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_enums */
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 73


 167:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Configuration Structures
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_data_structures
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a port of GPIO pins */
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct {
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t out;           /**< Initial output data for the IO pins in the port */
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrMask;      /**< Interrupt enable mask for the port interrupt */
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrCfg;       /**< Port pin interrupt edge detection configuration */
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfg;           /**< Port pin drive modes and input buffer enable configuration */
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgIn;         /**< Port pin input buffer configuration */
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgOut;        /**< Port pin output buffer configuration */
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgSIO;        /**< Port SIO pins configuration */
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel0Active;    /**< HSIOM selection for port pins 0,1,2,3 */
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel1Active;    /**< HSIOM selection for port pins 4,5,6,7 */
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_prt_config_t;
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a single GPIO pin */
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct {
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t outVal;         /**< Pin output state */
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveMode;      /**< Drive mode */
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     en_hsiom_sel_t hsiom;   /**< HSIOM selection */
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intEdge;        /**< Interrupt Edge type */
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intMask;        /**< Interrupt enable mask */
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtrip;          /**< Input buffer voltage trip type */
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t slewRate;       /**< Output buffer slew rate */
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveSel;       /**< Drive strength */
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vregEn;         /**< SIO pair output buffer mode */
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t ibufMode;       /**< SIO pair input buffer mode */
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtripSel;       /**< SIO pair input buffer trip point */
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vrefSel;        /**< SIO pair reference voltage for input buffer trip point */
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vohSel;         /**< SIO pair regulated voltage output level */
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_pin_config_t;
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_data_structures */
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Constants
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \cond INTERNAL */
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* General Constants */
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_HALF                       (4UL)      /**< Half-way point of a GPIO port */
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_DEINIT                     (0UL)      /**< De-init value for port registers */
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* GPIO Masks */
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_MASK                     (0x1FUL)   /**< HSIOM selection mask */
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_OUT_MASK                       (0x01UL)   /**< Single pin mask for OUT register */
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IN_MASK                        (0x01UL)   /**< Single pin mask for IN register */
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_DM_MASK                    (0x0FUL)   /**< Single pin mask for drive mode in CF
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 74


 224:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_IN_VTRIP_SEL_MASK          (0x01UL)   /**< Single pin mask for VTRIP selection 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_SLOW_MASK              (0x01UL)   /**< Single pin mask for slew rate in CFG
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_SEL_MASK         (0x03UL)   /**< Single pin mask for drive strength i
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_STATUS_MASK               (0x01UL)   /**< Single pin mask for interrupt status
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EN_MASK                   (0x01UL)   /**< Single pin mask for interrupt status
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_MASKED_MASK               (0x01UL)   /**< Single pin mask for masked interrupt
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_SET_MASK                  (0x01UL)   /**< Single pin mask for setting the inte
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EDGE_MASK                 (0x03UL)   /**< Single pin mask for interrupt edge t
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FLT_EDGE_MASK             (0x07UL)   /**< Single pin mask for setting filtered
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* SIO Masks */
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREG_EN_MASK                   (0x01UL)   /**< Single SIO pin mask for voltage regu
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_MASK                      (0x01UL)   /**< Single SIO pin mask for input buffer
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_SHIFT                     (0x01UL)   /**< Single SIO pin shift for input buffe
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_MASK                 (0x01UL)   /**< Single SIO pin mask for the input bu
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_SHIFT                (0x02UL)   /**< Single SIO pin shift for the input b
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_MASK                  (0x03UL)   /**< Single SIO pin mask for voltage refe
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_SHIFT                 (0x03UL)   /**< Single SIO pin shift for voltage ref
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_MASK                   (0x07UL)   /**< Single SIO pin mask for VOH */
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_SHIFT                  (0x05UL)   /**< Single SIO pin shift for VOH */
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Special mask for SIO pin pair setting */
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_ODD_PIN_MASK               (0x00FEUL) /**< SIO pin pair selection mask */
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_PIN_MASK                   (0x00FFUL) /**< SIO pin pair mask */
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Offsets */
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_OFFSET                   (3UL)      /**< Offset for HSIOM */
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_MODE_OFFSET              (2UL)      /**< Offset for Drive mode */
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INBUF_OFFSET                   (3UL)      /**< Offset for input buffer */
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_OFFSET           (16UL)     /**< Offset for drive strength */
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_CFG_OFFSET                (1UL)      /**< Offset for interrupt config */
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FILT_OFFSET               (18UL)     /**< Offset for filtered interrupt config
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_SIO_OFFSET                 (2UL)      /**< Offset for SIO config */
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation constants */
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PINS_MAX                       (8UL)      /**< Number of pins in the port */
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_PINS_MASK                  (0x0000000FFUL)
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK     (GPIO_PRT_INTR_CFG_EDGE0_SEL_Msk | \
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE1_SEL_Msk | \
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE2_SEL_Msk | \
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE3_SEL_Msk | \
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE4_SEL_Msk | \
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE5_SEL_Msk | \
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE6_SEL_Msk | \
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE7_SEL_Msk)            
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_RANGE_MASK        (CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK | \
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_EDGE_SEL_Msk | \
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_SEL_Msk)
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INT_MASK_MASK              (0x0000001FFUL)
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_SEL_ACTIVE_MASK            (0x1FFFFFFFUL)
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation macros */
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_VALID(pinNum)           (CY_GPIO_PINS_MAX > (pinNum))
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_FILTER_PIN_VALID(pinNum)    (CY_GPIO_PINS_MAX >= (pinNum))
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VALUE_VALID(outVal)         (1UL >= (outVal))
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DM_VALID(driveMode)         (0U == ((driveMode) & (uint32_t)~CY_GPIO_CFG_DM_MASK
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 75


 281:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_HSIOM_VALID(hsiom)          (0U == ((hsiom) & (uint32_t)~CY_GPIO_HSIOM_MASK))
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INT_EDGE_VALID(intEdge)     ((CY_GPIO_INTR_DISABLE  == (intEdge)) || \
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_RISING   == (intEdge)) || \
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_FALLING  == (intEdge)) || \
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_BOTH     == (intEdge)))
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DRIVE_SEL_VALID(driveSel)   ((CY_GPIO_DRIVE_FULL    == (driveSel)) || \
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_2     == (driveSel)) || \
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_4     == (driveSel)) || \
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_8     == (driveSel)))
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VREF_SEL_VALID(vrefSel)     ((CY_SIO_VREF_PINREF    == (vrefSel)) || \
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_1_2V      == (vrefSel)) || \
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_A    == (vrefSel)) || \
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_B    == (vrefSel)))
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VOH_SEL_VALID(vrefSel)      ((CY_SIO_VOH_1_00       == (vrefSel)) || \
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_25       == (vrefSel)) || \
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_49       == (vrefSel)) || \
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_67       == (vrefSel)) || \
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_08       == (vrefSel)) || \
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_50       == (vrefSel)) || \
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_78       == (vrefSel)) || \
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_4_16       == (vrefSel)))
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                    
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_BIT_VALID(pinBit)       (0U == ((pinBit) & (uint32_t)~CY_GPIO_PRT_PINS_MASK)
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_CFG_VALID(intrCfg)     (0U == ((intrCfg) & (uint32_t)~CY_GPIO_PRT_INTR_CFG_
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_MASK_VALID(intrMask)   (0U == ((intrMask) & (uint32_t)~CY_GPIO_PRT_INT_MASK
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_SEL_ACT_VALID(selActive)    (0U == ((selActive) & (uint32_t)~CY_GPIO_PRT_SEL_ACT
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \endcond */
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Constants
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_macros
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveModes Pin drive mode
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive mode of the pin.
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_ANALOG                      (0x00UL) /**< \brief Analog High-Z. Input buffer off
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_IN_OFF               (0x02UL) /**< \brief Resistive Pull-Up. Input buffer
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN_IN_OFF             (0x03UL) /**< \brief Resistive Pull-Down. Input buff
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW_IN_OFF         (0x04UL) /**< \brief Open Drain, Drives Low. Input b
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF        (0x05UL) /**< \brief Open Drain, Drives High. Input 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG_IN_OFF               (0x06UL) /**< \brief Strong Drive. Input buffer off 
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN_IN_OFF          (0x07UL) /**< \brief Resistive Pull-Up/Down. Input b
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_HIGHZ                       (0x08UL) /**< \brief Digital High-Z. Input buffer on
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP                      (0x0AUL) /**< \brief Resistive Pull-Up. Input buffer
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 76


 338:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN                    (0x0BUL) /**< \brief Resistive Pull-Down. Input buff
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW                (0x0CUL) /**< \brief Open Drain, Drives Low. Input b
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH               (0x0DUL) /**< \brief Open Drain, Drives High. Input 
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG                      (0x0EUL) /**< \brief Strong Drive. Input buffer on *
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN                 (0x0FUL) /**< \brief Resistive Pull-Up/Down. Input b
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_vtrip Voltage trip mode
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the voltage trip type on the pin.
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_CMOS                     (0x00UL) /**< \brief Input buffer compatible with CM
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_TTL                      (0x01UL) /**< \brief Input buffer compatible with TT
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_slewRate Slew Rate Mode
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the slew rate of the pin.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_FAST                      (0x00UL) /**< \brief Fast slew rate */
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_SLOW                      (0x01UL) /**< \brief Slow slew rate */
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveStrength Pin drive strength
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive strength of the pin.
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_FULL                     (0x00UL) /**< \brief Full drive strength: Max drive 
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_2                      (0x01UL) /**< \brief 1/2 drive strength: 1/2 drive c
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_4                      (0x02UL) /**< \brief 1/4 drive strength: 1/4 drive c
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_8                      (0x03UL) /**< \brief 1/8 drive strength: 1/8 drive c
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_interruptTrigger Interrupt trigger type
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the interrupt trigger type on the pin.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_DISABLE                   (0x00UL) /**< \brief Disable the pin interrupt gener
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_RISING                    (0x01UL) /**< \brief Rising-Edge interrupt */
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FALLING                   (0x02UL) /**< \brief Falling-Edge interrupt */
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_BOTH                      (0x03UL) /**< \brief Both-Edge interrupt */
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVreg SIO output buffer mode
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO output buffer mode on the pin.
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_UNREGULATED                (0x00UL) /**< \brief Unregulated output buffer */
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_REGULATED                  (0x01UL) /**< \brief Regulated output buffer */
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 77


 395:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioIbuf SIO input buffer mode
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer mode on the pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_SINGLEENDED                (0x00UL) /**< \brief Single ended input buffer */
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_DIFFERENTIAL               (0x01UL) /**< \brief Differential input buffer */
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVtrip SIO input buffer trip-point
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer trip-point of the pin.
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_CMOS                      (0x00UL) /**< \brief CMOS input buffer (single-ended
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_TTL                       (0x01UL) /**< \brief TTL input buffer (single-ended)
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_5VDDIO_0_5VOH           (0x00UL) /**< \brief 0.5xVddio or 0.5xVoh (different
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_4VDDIO_1_0VREF          (0x01UL) /**< \brief 0.4xVddio or 0.4xVoh (different
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVref SIO reference voltage for input buffer trip-point
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the reference voltage of SIO input buffer trip-point.
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_PINREF                     (0x00UL) /**< \brief Vref from analog pin */
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_1_2V                       (0x01UL) /**< \brief Vref from internal 1.2V referen
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_A                     (0x02UL) /**< \brief Vref from AMUXBUS_A */
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_B                     (0x03UL) /**< \brief Vref from AMUXBUS_B */
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVoh Regulated output voltage level (Voh) and input buffer trip-point of a
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the Voh and input buffer trip-point of an SIO pair
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_00                        (0x00UL) /**< \brief Voh = 1 x Reference */
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_25                        (0x01UL) /**< \brief Voh = 1.25 x Reference */
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_49                        (0x02UL) /**< \brief Voh = 1.49 x Reference */
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_67                        (0x03UL) /**< \brief Voh = 1.67 x Reference */
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_08                        (0x04UL) /**< \brief Voh = 2.08 x Reference */
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_50                        (0x05UL) /**< \brief Voh = 2.50 x Reference */
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_78                        (0x06UL) /**< \brief Voh = 2.78 x Reference */
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_4_16                        (0x07UL) /**< \brief Voh = 4.16 x Reference */
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Prototypes
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 78


 452:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Pin_Init(GPIO_PRT_Type* base, uint32_t pinNum, const cy_stc_gpio_pin_co
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Port_Init(GPIO_PRT_Type* base, const cy_stc_gpio_prt_config_t *config);
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Pin_FastInit(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t driveMode, uint32_t outVal
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Port_Deinit(GPIO_PRT_Type* base);
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value);
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum);
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum);
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum);
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum);
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum);
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum);
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Inv(GPIO_PRT_Type* base, uint32_t pinNum);
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum);
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtrip(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtrip(GPIO_PRT_Type* base, uint32_t pinNum);
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum);
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum);
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_gpio */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_sio
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVregEn(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVregEn(GPIO_PRT_Type* base, uint32_t pinNum);
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum);
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum);
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum);
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVohSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVohSel(GPIO_PRT_Type* base, uint32_t pinNum);
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_sio */
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_interrupt
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 79


 509:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatus(GPIO_PRT_Type* base, uint32_t pinNum);
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_ClearInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum);
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT_Type* base, uint32_t pinNum);
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSwInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum);
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetFilter(GPIO_PRT_Type* base, uint32_t value);
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetFilter(GPIO_PRT_Type* base);
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_0_31 != 0) || defined (CY_DOXYGEN)
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause0(void);
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_0_31 != 0) */
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_32_63 != 0) || defined (CY_DOXYGEN)
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause1(void);
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_32_63 != 0) */
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_64_95 != 0) || defined (CY_DOXYGEN)
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause2(void);
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_64_95 != 0) */
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_96_127 != 0) || defined (CY_DOXYGEN)
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause3(void);
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_96_127 != 0) */
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_interrupt */
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_SetHSIOM
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Configures the HSIOM connection to the pin.
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Connects the specified High-Speed Input Output Multiplexer (HSIOM) selection
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * to the pin.
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 80


 566:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \note 
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function modifies a port register in a read-modify-write operation. It is
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * not thread safe as the resource is shared among multiple pins on a port.
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value)
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t tempReg;
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_Type* portAddrHSIOM;
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_HSIOM_VALID(value));
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_Type*)(HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = portAddrHSIOM->PORT_SEL0 & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_HSIOM_OFFSE
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portAddrHSIOM->PORT_SEL0 = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << CY_GPIO_HS
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = portAddrHSIOM->PORT_SEL1 & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_HSIOM_OFFSE
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portAddrHSIOM->PORT_SEL1 = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << CY_GPIO_HS
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_GetHSIOM
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Returns the current HSIOM multiplexer connection to the pin.
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum)
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t returnValue;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 81


 623:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_Type* portAddrHSIOM;
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_Type*)(HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (portAddrHSIOM->PORT_SEL0 >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY_GPIO_HSIO
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (portAddrHSIOM->PORT_SEL1 >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY_GPIO_HSIO
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (en_hsiom_sel_t)returnValue;
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_PortToAddr
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Retrieves the port address based on the given port number.
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This is a helper function to calculate the port base address when given a port
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * number. It is to be used when pin access needs to be calculated at runtime.
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param portNum
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Port number
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Base address of the port register structure
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_PortToAddr
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum)
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     GPIO_PRT_Type* base;
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(portNum < (uint32_t)IOSS_GPIO_GPIO_PORT_NR)
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****          base = (GPIO_PRT_Type *)(GPIO_BASE + (GPIO_PRT_SECTION_SIZE * portNum));
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         /* Error: Return default base address */
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base = (GPIO_PRT_Type *)(GPIO_BASE);
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base);
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 82


 680:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Read
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Reads the current logic level on the input buffer of the pin.
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register.
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Bit position 8 is the routed pin through the port glitch filter.
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level present on the pin
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Read
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum)
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_FILTER_PIN_VALID(pinNum));
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base->IN >> (pinNum)) & CY_GPIO_IN_MASK;
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Write
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Write a logic 0 or logic 1 state to the output driver.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level to drive out on the pin
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 83


 737:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Write
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_VALUE_VALID(value));
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     /* Thread-safe: Directly access the pin registers instead of base->OUT */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(0UL == value)
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base->OUT_CLR = CY_GPIO_OUT_MASK << pinNum;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base->OUT_SET = CY_GPIO_OUT_MASK << pinNum;
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_ReadOut
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Reads the current logic level on the pin output driver.
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level on the pin output driver
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_ReadOut
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum)
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base->OUT >> pinNum) & CY_GPIO_OUT_MASK;
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Set
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Set a pin output to logic state high.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 84


 794:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Set
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum)
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     base->OUT_SET = CY_GPIO_OUT_MASK << pinNum;
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Clr
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Set a pin output to logic state Low.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Clr
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum)
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     base->OUT_CLR = CY_GPIO_OUT_MASK << pinNum;
 507              		.loc 5 841 0
 508 00b6 0125     		movs	r5, #1
 509 00b8 354B     		ldr	r3, .L37+24
 510 00ba 5D60     		str	r5, [r3, #4]
 511              	.LVL53:
 512              	.LBE69:
 513              	.LBE68:
 180:temperature_task.c ****                     temperature = (B_CONSTANT/(logf(rThermistor/R_INFINITY)))+
 514              		.loc 1 180 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 85


 515 00bc B8EEC88A 		vcvt.f32.s32	s16, s16
 516 00c0 DFED347A 		vldr.32	s15, .L37+28
 517 00c4 28EE278A 		vmul.f32	s16, s16, s15
 518 00c8 F8EEE88A 		vcvt.f32.s32	s17, s17
 519 00cc 88EE287A 		vdiv.f32	s14, s16, s17
 520              	.LVL54:
 181:temperature_task.c ****                                                                 ABSOLUTE_ZERO;
 521              		.loc 1 181 0
 522 00d0 DFED317A 		vldr.32	s15, .L37+32
 523 00d4 C7EE276A 		vdiv.f32	s13, s14, s15
 524 00d8 16EE900A 		vmov	r0, s13
 525 00dc FFF7FEFF 		bl	logf
 526              	.LVL55:
 527 00e0 9FED2E7A 		vldr.32	s14, .L37+36
 528 00e4 06EE900A 		vmov	s13, r0
 529 00e8 C7EE267A 		vdiv.f32	s15, s14, s13
 530 00ec 9FED2C7A 		vldr.32	s14, .L37+40
 531 00f0 77EEC77A 		vsub.f32	s15, s15, s14
 532 00f4 CDED047A 		vstr.32	s15, [sp, #16]
 184:temperature_task.c **** 
 533              		.loc 1 184 0
 534 00f8 2A4B     		ldr	r3, .L37+44
 535 00fa 1D70     		strb	r5, [r3]
 187:temperature_task.c ****                     {
 536              		.loc 1 187 0
 537 00fc 64B1     		cbz	r4, .L35
 191:temperature_task.c ****                         bleCommandAndData.temperatureData = temperature;
 538              		.loc 1 191 0
 539 00fe 0223     		movs	r3, #2
 540 0100 8DF80830 		strb	r3, [sp, #8]
 192:temperature_task.c ****                         xQueueSend(bleCommandQ, &bleCommandAndData,0u);
 541              		.loc 1 192 0
 542 0104 CDED037A 		vstr.32	s15, [sp, #12]
 193:temperature_task.c ****                     }
 543              		.loc 1 193 0
 544 0108 0023     		movs	r3, #0
 545 010a 1A46     		mov	r2, r3
 546 010c 02A9     		add	r1, sp, #8
 547 010e 2648     		ldr	r0, .L37+48
 548 0110 0068     		ldr	r0, [r0]
 549 0112 FFF7FEFF 		bl	xQueueGenericSend
 550              	.LVL56:
 551 0116 81E7     		b	.L24
 552              	.L35:
 197:temperature_task.c ****                     }
 553              		.loc 1 197 0
 554 0118 0223     		movs	r3, #2
 555 011a 0022     		movs	r2, #0
 556 011c 04A9     		add	r1, sp, #16
 557 011e 2348     		ldr	r0, .L37+52
 558 0120 0068     		ldr	r0, [r0]
 559 0122 FFF7FEFF 		bl	xQueueGenericSend
 560              	.LVL57:
 561 0126 79E7     		b	.L24
 562              	.LVL58:
 563              	.L31:
 203:temperature_task.c ****                         {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 86


 564              		.loc 1 203 0
 565 0128 1E4B     		ldr	r3, .L37+44
 566 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 567 012c 002B     		cmp	r3, #0
 568 012e 3FF475AF 		beq	.L24
 569              	.LVL59:
 570              	.LBB70:
 571              	.LBB71:
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 572              		.loc 5 811 0
 573 0132 0122     		movs	r2, #1
 574 0134 164B     		ldr	r3, .L37+24
 575 0136 9A60     		str	r2, [r3, #8]
 576              	.LVL60:
 577              	.LBE71:
 578              	.LBE70:
 579              	.LBB72:
 580              	.LBB73:
1318:Generated_Source\PSoC6/ADC.h **** }
1319:Generated_Source\PSoC6/ADC.h **** 
1320:Generated_Source\PSoC6/ADC.h **** 
1321:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1322:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Wakeup
1323:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1324:Generated_Source\PSoC6/ADC.h **** *
1325:Generated_Source\PSoC6/ADC.h **** * \brief This is the preferred routine to restore the component to the state when
1326:Generated_Source\PSoC6/ADC.h **** * ADC_Sleep() was called.
1327:Generated_Source\PSoC6/ADC.h **** * If the component was enabled before the ADC_Sleep()
1328:Generated_Source\PSoC6/ADC.h **** * function was called, the ADC_Wakeup() function also re-enables the
1329:Generated_Source\PSoC6/ADC.h **** * component.
1330:Generated_Source\PSoC6/ADC.h **** *
1331:Generated_Source\PSoC6/ADC.h **** * Calling this routine directly is not needed.
1332:Generated_Source\PSoC6/ADC.h **** * The ADC_DeepSleepCallbackStruct will ensure this routine
1333:Generated_Source\PSoC6/ADC.h **** * is called after the device wakes up from Deep Sleep mode.
1334:Generated_Source\PSoC6/ADC.h **** *
1335:Generated_Source\PSoC6/ADC.h **** * \param None
1336:Generated_Source\PSoC6/ADC.h **** *
1337:Generated_Source\PSoC6/ADC.h **** * \return None
1338:Generated_Source\PSoC6/ADC.h **** *
1339:Generated_Source\PSoC6/ADC.h **** * \sideeffect
1340:Generated_Source\PSoC6/ADC.h **** * Calling this function without previously calling ADC_Sleep() may lead to
1341:Generated_Source\PSoC6/ADC.h **** * unpredictable results.
1342:Generated_Source\PSoC6/ADC.h **** *
1343:Generated_Source\PSoC6/ADC.h **** * \globalvars
1344:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup (R)
1345:Generated_Source\PSoC6/ADC.h **** *
1346:Generated_Source\PSoC6/ADC.h **** * \globalvars
1347:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup
1348:Generated_Source\PSoC6/ADC.h **** *
1349:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1350:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void)
1351:Generated_Source\PSoC6/ADC.h **** {
1352:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Wakeup(ADC_SAR__HW);
 581              		.loc 4 1352 0
 582 0138 1448     		ldr	r0, .L37+20
 583              	.LVL61:
 584 013a FFF7FEFF 		bl	Cy_SAR_Wakeup
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 87


 585              	.LVL62:
 586              	.LBE73:
 587              	.LBE72:
 209:temperature_task.c ****                             processingComplete = false;
 588              		.loc 1 209 0
 589 013e FFF7FEFF 		bl	ADC_StartConvert
 590              	.LVL63:
 210:temperature_task.c ****                         }    
 591              		.loc 1 210 0
 592 0142 0022     		movs	r2, #0
 593 0144 174B     		ldr	r3, .L37+44
 594 0146 1A70     		strb	r2, [r3]
 595 0148 68E7     		b	.L24
 596              	.LVL64:
 597              	.L26:
 598              	.LBB74:
 599              	.LBB75:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 600              		.loc 2 144 0
 601 014a 194A     		ldr	r2, .L37+56
 602 014c 0092     		str	r2, [sp]
 603 014e 0193     		str	r3, [sp, #4]
 604              		.loc 2 146 0
 605 0150 0023     		movs	r3, #0
 606              	.LVL65:
 607 0152 1A46     		mov	r2, r3
 608 0154 6946     		mov	r1, sp
 609 0156 1748     		ldr	r0, .L37+60
 610              	.LVL66:
 611 0158 0068     		ldr	r0, [r0]
 612 015a FFF7FEFF 		bl	xQueueGenericSend
 613              	.LVL67:
 614 015e 5DE7     		b	.L24
 615              	.LVL68:
 616              	.L25:
 617              	.LBE75:
 618              	.LBE74:
 619              	.LBB76:
 620              	.LBB77:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 621              		.loc 2 144 0
 622 0160 154B     		ldr	r3, .L37+64
 623 0162 0093     		str	r3, [sp]
 624 0164 0022     		movs	r2, #0
 625 0166 0192     		str	r2, [sp, #4]
 626              		.loc 2 146 0
 627 0168 1346     		mov	r3, r2
 628 016a 6946     		mov	r1, sp
 629 016c 1148     		ldr	r0, .L37+60
 630              	.LVL69:
 631 016e 0068     		ldr	r0, [r0]
 632 0170 FFF7FEFF 		bl	xQueueGenericSend
 633              	.LVL70:
 634 0174 52E7     		b	.L24
 635              	.L38:
 636 0176 00BF     		.align	2
 637              	.L37:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 88


 638 0178 00000000 		.word	isrADC
 639 017c 00000000 		.word	temperatureCommandQ
 640 0180 00000000 		.word	ADC_currentConfig
 641 0184 00000000 		.word	ADC_allConfigs
 642 0188 10010000 		.word	.LC6
 643 018c 00001D41 		.word	1092419584
 644 0190 00053240 		.word	1077019904
 645 0194 00401C46 		.word	1176256512
 646 0198 F54BF43D 		.word	1039420405
 647 019c 00405345 		.word	1163083776
 648 01a0 33938843 		.word	1133024051
 649 01a4 00000000 		.word	.LANCHOR0
 650 01a8 00000000 		.word	bleCommandQ
 651 01ac 00000000 		.word	temperatureDataQ
 652 01b0 30010000 		.word	.LC7
 653 01b4 00000000 		.word	debugMessageQ
 654 01b8 70010000 		.word	.LC8
 655              	.LBE77:
 656              	.LBE76:
 657              		.cfi_endproc
 658              	.LFE714:
 659              		.size	Task_Temperature, .-Task_Temperature
 660              		.comm	xTimer_Temperature,4,4
 661              		.comm	temperatureDataQ,4,4
 662              		.comm	temperatureCommandQ,4,4
 663              		.section	.rodata.str1.4,"aMS",%progbits,1
 664              		.align	2
 665              	.LC0:
 666 0000 4661696C 		.ascii	"Failure! : Temperature  - Sending data to temperatu"
 666      75726521 
 666      203A2054 
 666      656D7065 
 666      72617475 
 667 0033 72657175 		.ascii	"requeue\000"
 667      65756500 
 668 003b 00       		.space	1
 669              	.LC1:
 670 003c 54656D70 		.ascii	"Temperature Timer\000"
 670      65726174 
 670      75726520 
 670      54696D65 
 670      7200
 671 004e 0000     		.space	2
 672              	.LC2:
 673 0050 4661696C 		.ascii	"Failure! : Temperature  - Timer initialization\000"
 673      75726521 
 673      203A2054 
 673      656D7065 
 673      72617475 
 674 007f 00       		.space	1
 675              	.LC3:
 676 0080 4661696C 		.ascii	"Failure! : Temperature  - Timer creation\000"
 676      75726521 
 676      203A2054 
 676      656D7065 
 676      72617475 
 677 00a9 000000   		.space	3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 89


 678              	.LC4:
 679 00ac 4661696C 		.ascii	"Failure! : Temperature - Timer update \000"
 679      75726521 
 679      203A2054 
 679      656D7065 
 679      72617475 
 680 00d3 00       		.space	1
 681              	.LC5:
 682 00d4 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 682      72617465 
 682      645F536F 
 682      75726365 
 682      5C50536F 
 683 0104 722F6379 		.ascii	"r/cy_sar.h\000"
 683      5F736172 
 683      2E6800
 684 010f 00       		.space	1
 685              	.LC6:
 686 0110 47656E65 		.ascii	"Generated_Source\\PSoC6/ADC.h\000"
 686      72617465 
 686      645F536F 
 686      75726365 
 686      5C50536F 
 687 012d 000000   		.space	3
 688              	.LC7:
 689 0130 4572726F 		.ascii	"Error!   : Temperature - Invalid command received ."
 689      72212020 
 689      203A2054 
 689      656D7065 
 689      72617475 
 690 0163 4572726F 		.ascii	"Error Code:\000"
 690      7220436F 
 690      64653A00 
 691 016f 00       		.space	1
 692              	.LC8:
 693 0170 5761726E 		.ascii	"Warning! : Temperature - Task Timed out \000"
 693      696E6721 
 693      203A2054 
 693      656D7065 
 693      72617475 
 694              		.bss
 695              		.set	.LANCHOR0,. + 0
 696              		.type	processingComplete, %object
 697              		.size	processingComplete, 1
 698              	processingComplete:
 699 0000 00       		.space	1
 700              		.text
 701              	.Letext0:
 702              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 703              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 704              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_gpio.h"
 705              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_sar.h"
 706              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 707              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/rtc/cy_rtc.h"
 708              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/tcpwm/cy_tcpwm_counter.h"
 709              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 710              		.file 14 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 90


 711              		.file 15 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 712              		.file 16 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 713              		.file 17 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 714              		.file 18 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_dis.h"
 715              		.file 19 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_hts.h"
 716              		.file 20 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_event_handler.h"
 717              		.file 21 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
 718              		.file 22 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/queue.h"
 719              		.file 23 "temperature_task.h"
 720              		.file 24 "ble_task.h"
 721              		.file 25 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 722              		.file 26 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 723              		.file 27 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 724              		.file 28 "Generated_Source\\PSoC6/DEBUG_UART.h"
 725              		.file 29 "Generated_Source\\PSoC6/Counter_ms.h"
 726              		.file 30 "Generated_Source\\PSoC6/Timer_PPG.h"
 727              		.file 31 "Generated_Source\\PSoC6/Timer_IMU.h"
 728              		.file 32 "Generated_Source\\PSoC6/RTC.h"
 729              		.file 33 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 730              		.file 34 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 731              		.section	.debug_info,"",%progbits
 732              	.Ldebug_info0:
 733 0000 7F1A0000 		.4byte	0x1a7f
 734 0004 0400     		.2byte	0x4
 735 0006 00000000 		.4byte	.Ldebug_abbrev0
 736 000a 04       		.byte	0x4
 737 000b 01       		.uleb128 0x1
 738 000c DA050000 		.4byte	.LASF415
 739 0010 0C       		.byte	0xc
 740 0011 0E1E0000 		.4byte	.LASF416
 741 0015 5D130000 		.4byte	.LASF417
 742 0019 00000000 		.4byte	.Ldebug_ranges0+0
 743 001d 00000000 		.4byte	0
 744 0021 00000000 		.4byte	.Ldebug_line0
 745 0025 02       		.uleb128 0x2
 746 0026 04       		.byte	0x4
 747 0027 04       		.byte	0x4
 748 0028 910D0000 		.4byte	.LASF0
 749 002c 03       		.uleb128 0x3
 750 002d 04       		.byte	0x4
 751 002e 05       		.byte	0x5
 752 002f 696E7400 		.ascii	"int\000"
 753 0033 02       		.uleb128 0x2
 754 0034 04       		.byte	0x4
 755 0035 07       		.byte	0x7
 756 0036 C9020000 		.4byte	.LASF1
 757 003a 02       		.uleb128 0x2
 758 003b 08       		.byte	0x8
 759 003c 05       		.byte	0x5
 760 003d 2A120000 		.4byte	.LASF2
 761 0041 02       		.uleb128 0x2
 762 0042 08       		.byte	0x8
 763 0043 04       		.byte	0x4
 764 0044 08170000 		.4byte	.LASF3
 765 0048 02       		.uleb128 0x2
 766 0049 01       		.byte	0x1
 767 004a 06       		.byte	0x6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 91


 768 004b 96200000 		.4byte	.LASF4
 769 004f 04       		.uleb128 0x4
 770 0050 DD1B0000 		.4byte	.LASF6
 771 0054 06       		.byte	0x6
 772 0055 1D       		.byte	0x1d
 773 0056 5A000000 		.4byte	0x5a
 774 005a 02       		.uleb128 0x2
 775 005b 01       		.byte	0x1
 776 005c 08       		.byte	0x8
 777 005d 01180000 		.4byte	.LASF5
 778 0061 04       		.uleb128 0x4
 779 0062 53130000 		.4byte	.LASF7
 780 0066 06       		.byte	0x6
 781 0067 29       		.byte	0x29
 782 0068 6C000000 		.4byte	0x6c
 783 006c 02       		.uleb128 0x2
 784 006d 02       		.byte	0x2
 785 006e 05       		.byte	0x5
 786 006f EF000000 		.4byte	.LASF8
 787 0073 02       		.uleb128 0x2
 788 0074 02       		.byte	0x2
 789 0075 07       		.byte	0x7
 790 0076 A9200000 		.4byte	.LASF9
 791 007a 04       		.uleb128 0x4
 792 007b 86030000 		.4byte	.LASF10
 793 007f 06       		.byte	0x6
 794 0080 3F       		.byte	0x3f
 795 0081 85000000 		.4byte	0x85
 796 0085 02       		.uleb128 0x2
 797 0086 04       		.byte	0x4
 798 0087 05       		.byte	0x5
 799 0088 BB190000 		.4byte	.LASF11
 800 008c 04       		.uleb128 0x4
 801 008d 621E0000 		.4byte	.LASF12
 802 0091 06       		.byte	0x6
 803 0092 41       		.byte	0x41
 804 0093 97000000 		.4byte	0x97
 805 0097 02       		.uleb128 0x2
 806 0098 04       		.byte	0x4
 807 0099 07       		.byte	0x7
 808 009a 171D0000 		.4byte	.LASF13
 809 009e 02       		.uleb128 0x2
 810 009f 08       		.byte	0x8
 811 00a0 07       		.byte	0x7
 812 00a1 CD090000 		.4byte	.LASF14
 813 00a5 02       		.uleb128 0x2
 814 00a6 04       		.byte	0x4
 815 00a7 07       		.byte	0x7
 816 00a8 0E1D0000 		.4byte	.LASF15
 817 00ac 05       		.uleb128 0x5
 818 00ad 04       		.byte	0x4
 819 00ae 06       		.uleb128 0x6
 820 00af 04       		.byte	0x4
 821 00b0 B4000000 		.4byte	0xb4
 822 00b4 02       		.uleb128 0x2
 823 00b5 01       		.byte	0x1
 824 00b6 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 92


 825 00b7 F50E0000 		.4byte	.LASF16
 826 00bb 02       		.uleb128 0x2
 827 00bc 08       		.byte	0x8
 828 00bd 04       		.byte	0x4
 829 00be 410C0000 		.4byte	.LASF17
 830 00c2 04       		.uleb128 0x4
 831 00c3 A0100000 		.4byte	.LASF18
 832 00c7 07       		.byte	0x7
 833 00c8 18       		.byte	0x18
 834 00c9 4F000000 		.4byte	0x4f
 835 00cd 04       		.uleb128 0x4
 836 00ce 6F090000 		.4byte	.LASF19
 837 00d2 07       		.byte	0x7
 838 00d3 20       		.byte	0x20
 839 00d4 61000000 		.4byte	0x61
 840 00d8 04       		.uleb128 0x4
 841 00d9 6E1D0000 		.4byte	.LASF20
 842 00dd 07       		.byte	0x7
 843 00de 2C       		.byte	0x2c
 844 00df 7A000000 		.4byte	0x7a
 845 00e3 04       		.uleb128 0x4
 846 00e4 06080000 		.4byte	.LASF21
 847 00e8 07       		.byte	0x7
 848 00e9 30       		.byte	0x30
 849 00ea 8C000000 		.4byte	0x8c
 850 00ee 07       		.uleb128 0x7
 851 00ef E3000000 		.4byte	0xe3
 852 00f3 08       		.uleb128 0x8
 853 00f4 EE000000 		.4byte	0xee
 854 00f8 09       		.uleb128 0x9
 855 00f9 F3000000 		.4byte	0xf3
 856 00fd 08010000 		.4byte	0x108
 857 0101 0A       		.uleb128 0xa
 858 0102 A5000000 		.4byte	0xa5
 859 0106 01       		.byte	0x1
 860 0107 00       		.byte	0
 861 0108 09       		.uleb128 0x9
 862 0109 EE000000 		.4byte	0xee
 863 010d 18010000 		.4byte	0x118
 864 0111 0A       		.uleb128 0xa
 865 0112 A5000000 		.4byte	0xa5
 866 0116 0F       		.byte	0xf
 867 0117 00       		.byte	0
 868 0118 09       		.uleb128 0x9
 869 0119 F3000000 		.4byte	0xf3
 870 011d 28010000 		.4byte	0x128
 871 0121 0A       		.uleb128 0xa
 872 0122 A5000000 		.4byte	0xa5
 873 0126 02       		.byte	0x2
 874 0127 00       		.byte	0
 875 0128 09       		.uleb128 0x9
 876 0129 F3000000 		.4byte	0xf3
 877 012d 38010000 		.4byte	0x138
 878 0131 0A       		.uleb128 0xa
 879 0132 A5000000 		.4byte	0xa5
 880 0136 0F       		.byte	0xf
 881 0137 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 93


 882 0138 09       		.uleb128 0x9
 883 0139 F3000000 		.4byte	0xf3
 884 013d 48010000 		.4byte	0x148
 885 0141 0A       		.uleb128 0xa
 886 0142 A5000000 		.4byte	0xa5
 887 0146 0E       		.byte	0xe
 888 0147 00       		.byte	0
 889 0148 0B       		.uleb128 0xb
 890 0149 80       		.byte	0x80
 891 014a 08       		.byte	0x8
 892 014b 22       		.byte	0x22
 893 014c 1C020000 		.4byte	0x21c
 894 0150 0C       		.uleb128 0xc
 895 0151 4F555400 		.ascii	"OUT\000"
 896 0155 08       		.byte	0x8
 897 0156 23       		.byte	0x23
 898 0157 EE000000 		.4byte	0xee
 899 015b 00       		.byte	0
 900 015c 0D       		.uleb128 0xd
 901 015d 46090000 		.4byte	.LASF22
 902 0161 08       		.byte	0x8
 903 0162 24       		.byte	0x24
 904 0163 EE000000 		.4byte	0xee
 905 0167 04       		.byte	0x4
 906 0168 0D       		.uleb128 0xd
 907 0169 9E040000 		.4byte	.LASF23
 908 016d 08       		.byte	0x8
 909 016e 25       		.byte	0x25
 910 016f EE000000 		.4byte	0xee
 911 0173 08       		.byte	0x8
 912 0174 0D       		.uleb128 0xd
 913 0175 D51B0000 		.4byte	.LASF24
 914 0179 08       		.byte	0x8
 915 017a 26       		.byte	0x26
 916 017b EE000000 		.4byte	0xee
 917 017f 0C       		.byte	0xc
 918 0180 0C       		.uleb128 0xc
 919 0181 494E00   		.ascii	"IN\000"
 920 0184 08       		.byte	0x8
 921 0185 27       		.byte	0x27
 922 0186 F3000000 		.4byte	0xf3
 923 018a 10       		.byte	0x10
 924 018b 0D       		.uleb128 0xd
 925 018c B40D0000 		.4byte	.LASF25
 926 0190 08       		.byte	0x8
 927 0191 28       		.byte	0x28
 928 0192 EE000000 		.4byte	0xee
 929 0196 14       		.byte	0x14
 930 0197 0D       		.uleb128 0xd
 931 0198 060E0000 		.4byte	.LASF26
 932 019c 08       		.byte	0x8
 933 019d 29       		.byte	0x29
 934 019e EE000000 		.4byte	0xee
 935 01a2 18       		.byte	0x18
 936 01a3 0D       		.uleb128 0xd
 937 01a4 C51C0000 		.4byte	.LASF27
 938 01a8 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 94


 939 01a9 2A       		.byte	0x2a
 940 01aa F3000000 		.4byte	0xf3
 941 01ae 1C       		.byte	0x1c
 942 01af 0D       		.uleb128 0xd
 943 01b0 14050000 		.4byte	.LASF28
 944 01b4 08       		.byte	0x8
 945 01b5 2B       		.byte	0x2b
 946 01b6 EE000000 		.4byte	0xee
 947 01ba 20       		.byte	0x20
 948 01bb 0D       		.uleb128 0xd
 949 01bc B71E0000 		.4byte	.LASF29
 950 01c0 08       		.byte	0x8
 951 01c1 2C       		.byte	0x2c
 952 01c2 EE000000 		.4byte	0xee
 953 01c6 24       		.byte	0x24
 954 01c7 0C       		.uleb128 0xc
 955 01c8 43464700 		.ascii	"CFG\000"
 956 01cc 08       		.byte	0x8
 957 01cd 2D       		.byte	0x2d
 958 01ce EE000000 		.4byte	0xee
 959 01d2 28       		.byte	0x28
 960 01d3 0D       		.uleb128 0xd
 961 01d4 78070000 		.4byte	.LASF30
 962 01d8 08       		.byte	0x8
 963 01d9 2E       		.byte	0x2e
 964 01da EE000000 		.4byte	0xee
 965 01de 2C       		.byte	0x2c
 966 01df 0D       		.uleb128 0xd
 967 01e0 500B0000 		.4byte	.LASF31
 968 01e4 08       		.byte	0x8
 969 01e5 2F       		.byte	0x2f
 970 01e6 EE000000 		.4byte	0xee
 971 01ea 30       		.byte	0x30
 972 01eb 0D       		.uleb128 0xd
 973 01ec AC210000 		.4byte	.LASF32
 974 01f0 08       		.byte	0x8
 975 01f1 30       		.byte	0x30
 976 01f2 EE000000 		.4byte	0xee
 977 01f6 34       		.byte	0x34
 978 01f7 0D       		.uleb128 0xd
 979 01f8 26000000 		.4byte	.LASF33
 980 01fc 08       		.byte	0x8
 981 01fd 31       		.byte	0x31
 982 01fe F3000000 		.4byte	0xf3
 983 0202 38       		.byte	0x38
 984 0203 0D       		.uleb128 0xd
 985 0204 1A1B0000 		.4byte	.LASF34
 986 0208 08       		.byte	0x8
 987 0209 32       		.byte	0x32
 988 020a EE000000 		.4byte	0xee
 989 020e 3C       		.byte	0x3c
 990 020f 0D       		.uleb128 0xd
 991 0210 F3180000 		.4byte	.LASF35
 992 0214 08       		.byte	0x8
 993 0215 33       		.byte	0x33
 994 0216 21020000 		.4byte	0x221
 995 021a 40       		.byte	0x40
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 95


 996 021b 00       		.byte	0
 997 021c 07       		.uleb128 0x7
 998 021d 28010000 		.4byte	0x128
 999 0221 08       		.uleb128 0x8
 1000 0222 1C020000 		.4byte	0x21c
 1001 0226 04       		.uleb128 0x4
 1002 0227 B90D0000 		.4byte	.LASF36
 1003 022b 08       		.byte	0x8
 1004 022c 34       		.byte	0x34
 1005 022d 48010000 		.4byte	0x148
 1006 0231 0E       		.uleb128 0xe
 1007 0232 2440     		.2byte	0x4024
 1008 0234 08       		.byte	0x8
 1009 0235 39       		.byte	0x39
 1010 0236 BC020000 		.4byte	0x2bc
 1011 023a 0C       		.uleb128 0xc
 1012 023b 50525400 		.ascii	"PRT\000"
 1013 023f 08       		.byte	0x8
 1014 0240 3A       		.byte	0x3a
 1015 0241 BC020000 		.4byte	0x2bc
 1016 0245 00       		.byte	0
 1017 0246 0F       		.uleb128 0xf
 1018 0247 3A000000 		.4byte	.LASF37
 1019 024b 08       		.byte	0x8
 1020 024c 3B       		.byte	0x3b
 1021 024d F3000000 		.4byte	0xf3
 1022 0251 0040     		.2byte	0x4000
 1023 0253 0F       		.uleb128 0xf
 1024 0254 46000000 		.4byte	.LASF38
 1025 0258 08       		.byte	0x8
 1026 0259 3C       		.byte	0x3c
 1027 025a F3000000 		.4byte	0xf3
 1028 025e 0440     		.2byte	0x4004
 1029 0260 0F       		.uleb128 0xf
 1030 0261 EB100000 		.4byte	.LASF39
 1031 0265 08       		.byte	0x8
 1032 0266 3D       		.byte	0x3d
 1033 0267 F3000000 		.4byte	0xf3
 1034 026b 0840     		.2byte	0x4008
 1035 026d 0F       		.uleb128 0xf
 1036 026e F7100000 		.4byte	.LASF40
 1037 0272 08       		.byte	0x8
 1038 0273 3E       		.byte	0x3e
 1039 0274 F3000000 		.4byte	0xf3
 1040 0278 0C40     		.2byte	0x400c
 1041 027a 0F       		.uleb128 0xf
 1042 027b 2F000000 		.4byte	.LASF41
 1043 027f 08       		.byte	0x8
 1044 0280 3F       		.byte	0x3f
 1045 0281 F3000000 		.4byte	0xf3
 1046 0285 1040     		.2byte	0x4010
 1047 0287 0F       		.uleb128 0xf
 1048 0288 B60C0000 		.4byte	.LASF42
 1049 028c 08       		.byte	0x8
 1050 028d 40       		.byte	0x40
 1051 028e EE000000 		.4byte	0xee
 1052 0292 1440     		.2byte	0x4014
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 96


 1053 0294 0F       		.uleb128 0xf
 1054 0295 88200000 		.4byte	.LASF43
 1055 0299 08       		.byte	0x8
 1056 029a 41       		.byte	0x41
 1057 029b EE000000 		.4byte	0xee
 1058 029f 1840     		.2byte	0x4018
 1059 02a1 0F       		.uleb128 0xf
 1060 02a2 08140000 		.4byte	.LASF44
 1061 02a6 08       		.byte	0x8
 1062 02a7 42       		.byte	0x42
 1063 02a8 F3000000 		.4byte	0xf3
 1064 02ac 1C40     		.2byte	0x401c
 1065 02ae 0F       		.uleb128 0xf
 1066 02af 47170000 		.4byte	.LASF45
 1067 02b3 08       		.byte	0x8
 1068 02b4 43       		.byte	0x43
 1069 02b5 EE000000 		.4byte	0xee
 1070 02b9 2040     		.2byte	0x4020
 1071 02bb 00       		.byte	0
 1072 02bc 09       		.uleb128 0x9
 1073 02bd 26020000 		.4byte	0x226
 1074 02c1 CC020000 		.4byte	0x2cc
 1075 02c5 0A       		.uleb128 0xa
 1076 02c6 A5000000 		.4byte	0xa5
 1077 02ca 7F       		.byte	0x7f
 1078 02cb 00       		.byte	0
 1079 02cc 04       		.uleb128 0x4
 1080 02cd 8B1E0000 		.4byte	.LASF46
 1081 02d1 08       		.byte	0x8
 1082 02d2 44       		.byte	0x44
 1083 02d3 31020000 		.4byte	0x231
 1084 02d7 0E       		.uleb128 0xe
 1085 02d8 080F     		.2byte	0xf08
 1086 02da 09       		.byte	0x9
 1087 02db 21       		.byte	0x21
 1088 02dc 5F050000 		.4byte	0x55f
 1089 02e0 0D       		.uleb128 0xd
 1090 02e1 AF220000 		.4byte	.LASF47
 1091 02e5 09       		.byte	0x9
 1092 02e6 22       		.byte	0x22
 1093 02e7 EE000000 		.4byte	0xee
 1094 02eb 00       		.byte	0
 1095 02ec 0D       		.uleb128 0xd
 1096 02ed A7140000 		.4byte	.LASF48
 1097 02f1 09       		.byte	0x9
 1098 02f2 23       		.byte	0x23
 1099 02f3 EE000000 		.4byte	0xee
 1100 02f7 04       		.byte	0x4
 1101 02f8 0D       		.uleb128 0xd
 1102 02f9 26000000 		.4byte	.LASF33
 1103 02fd 09       		.byte	0x9
 1104 02fe 24       		.byte	0x24
 1105 02ff 64050000 		.4byte	0x564
 1106 0303 08       		.byte	0x8
 1107 0304 0D       		.uleb128 0xd
 1108 0305 DF040000 		.4byte	.LASF49
 1109 0309 09       		.byte	0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 97


 1110 030a 25       		.byte	0x25
 1111 030b EE000000 		.4byte	0xee
 1112 030f 10       		.byte	0x10
 1113 0310 0D       		.uleb128 0xd
 1114 0311 2B0A0000 		.4byte	.LASF50
 1115 0315 09       		.byte	0x9
 1116 0316 26       		.byte	0x26
 1117 0317 EE000000 		.4byte	0xee
 1118 031b 14       		.byte	0x14
 1119 031c 0D       		.uleb128 0xd
 1120 031d 761A0000 		.4byte	.LASF51
 1121 0321 09       		.byte	0x9
 1122 0322 27       		.byte	0x27
 1123 0323 EE000000 		.4byte	0xee
 1124 0327 18       		.byte	0x18
 1125 0328 0D       		.uleb128 0xd
 1126 0329 890C0000 		.4byte	.LASF52
 1127 032d 09       		.byte	0x9
 1128 032e 28       		.byte	0x28
 1129 032f EE000000 		.4byte	0xee
 1130 0333 1C       		.byte	0x1c
 1131 0334 0D       		.uleb128 0xd
 1132 0335 E8010000 		.4byte	.LASF53
 1133 0339 09       		.byte	0x9
 1134 033a 29       		.byte	0x29
 1135 033b EE000000 		.4byte	0xee
 1136 033f 20       		.byte	0x20
 1137 0340 0D       		.uleb128 0xd
 1138 0341 100E0000 		.4byte	.LASF54
 1139 0345 09       		.byte	0x9
 1140 0346 2A       		.byte	0x2a
 1141 0347 EE000000 		.4byte	0xee
 1142 034b 24       		.byte	0x24
 1143 034c 0D       		.uleb128 0xd
 1144 034d F3180000 		.4byte	.LASF35
 1145 0351 09       		.byte	0x9
 1146 0352 2B       		.byte	0x2b
 1147 0353 7E050000 		.4byte	0x57e
 1148 0357 28       		.byte	0x28
 1149 0358 0D       		.uleb128 0xd
 1150 0359 C0210000 		.4byte	.LASF55
 1151 035d 09       		.byte	0x9
 1152 035e 2C       		.byte	0x2c
 1153 035f 83050000 		.4byte	0x583
 1154 0363 80       		.byte	0x80
 1155 0364 0D       		.uleb128 0xd
 1156 0365 FD180000 		.4byte	.LASF56
 1157 0369 09       		.byte	0x9
 1158 036a 2D       		.byte	0x2d
 1159 036b 8D050000 		.4byte	0x58d
 1160 036f C0       		.byte	0xc0
 1161 0370 0F       		.uleb128 0xf
 1162 0371 D51A0000 		.4byte	.LASF57
 1163 0375 09       		.byte	0x9
 1164 0376 2E       		.byte	0x2e
 1165 0377 97050000 		.4byte	0x597
 1166 037b 0001     		.2byte	0x100
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 98


 1167 037d 0F       		.uleb128 0xf
 1168 037e 07190000 		.4byte	.LASF58
 1169 0382 09       		.byte	0x9
 1170 0383 2F       		.byte	0x2f
 1171 0384 A1050000 		.4byte	0x5a1
 1172 0388 4001     		.2byte	0x140
 1173 038a 0F       		.uleb128 0xf
 1174 038b 3C140000 		.4byte	.LASF59
 1175 038f 09       		.byte	0x9
 1176 0390 30       		.byte	0x30
 1177 0391 AB050000 		.4byte	0x5ab
 1178 0395 8001     		.2byte	0x180
 1179 0397 0F       		.uleb128 0xf
 1180 0398 11190000 		.4byte	.LASF60
 1181 039c 09       		.byte	0x9
 1182 039d 31       		.byte	0x31
 1183 039e B5050000 		.4byte	0x5b5
 1184 03a2 C001     		.2byte	0x1c0
 1185 03a4 0F       		.uleb128 0xf
 1186 03a5 67020000 		.4byte	.LASF61
 1187 03a9 09       		.byte	0x9
 1188 03aa 32       		.byte	0x32
 1189 03ab F3000000 		.4byte	0xf3
 1190 03af 0002     		.2byte	0x200
 1191 03b1 0F       		.uleb128 0xf
 1192 03b2 C31D0000 		.4byte	.LASF62
 1193 03b6 09       		.byte	0x9
 1194 03b7 33       		.byte	0x33
 1195 03b8 F3000000 		.4byte	0xf3
 1196 03bc 0402     		.2byte	0x204
 1197 03be 0F       		.uleb128 0xf
 1198 03bf CB030000 		.4byte	.LASF63
 1199 03c3 09       		.byte	0x9
 1200 03c4 34       		.byte	0x34
 1201 03c5 F3000000 		.4byte	0xf3
 1202 03c9 0802     		.2byte	0x208
 1203 03cb 0F       		.uleb128 0xf
 1204 03cc EA030000 		.4byte	.LASF64
 1205 03d0 09       		.byte	0x9
 1206 03d1 35       		.byte	0x35
 1207 03d2 F3000000 		.4byte	0xf3
 1208 03d6 0C02     		.2byte	0x20c
 1209 03d8 0F       		.uleb128 0xf
 1210 03d9 B40D0000 		.4byte	.LASF25
 1211 03dd 09       		.byte	0x9
 1212 03de 36       		.byte	0x36
 1213 03df EE000000 		.4byte	0xee
 1214 03e3 1002     		.2byte	0x210
 1215 03e5 0F       		.uleb128 0xf
 1216 03e6 14050000 		.4byte	.LASF28
 1217 03ea 09       		.byte	0x9
 1218 03eb 37       		.byte	0x37
 1219 03ec EE000000 		.4byte	0xee
 1220 03f0 1402     		.2byte	0x214
 1221 03f2 0F       		.uleb128 0xf
 1222 03f3 060E0000 		.4byte	.LASF26
 1223 03f7 09       		.byte	0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 99


 1224 03f8 38       		.byte	0x38
 1225 03f9 EE000000 		.4byte	0xee
 1226 03fd 1802     		.2byte	0x218
 1227 03ff 0F       		.uleb128 0xf
 1228 0400 C51C0000 		.4byte	.LASF27
 1229 0404 09       		.byte	0x9
 1230 0405 39       		.byte	0x39
 1231 0406 F3000000 		.4byte	0xf3
 1232 040a 1C02     		.2byte	0x21c
 1233 040c 0F       		.uleb128 0xf
 1234 040d D1040000 		.4byte	.LASF65
 1235 0411 09       		.byte	0x9
 1236 0412 3A       		.byte	0x3a
 1237 0413 EE000000 		.4byte	0xee
 1238 0417 2002     		.2byte	0x220
 1239 0419 0F       		.uleb128 0xf
 1240 041a 4E0C0000 		.4byte	.LASF66
 1241 041e 09       		.byte	0x9
 1242 041f 3B       		.byte	0x3b
 1243 0420 EE000000 		.4byte	0xee
 1244 0424 2402     		.2byte	0x224
 1245 0426 0F       		.uleb128 0xf
 1246 0427 161F0000 		.4byte	.LASF67
 1247 042b 09       		.byte	0x9
 1248 042c 3C       		.byte	0x3c
 1249 042d EE000000 		.4byte	0xee
 1250 0431 2802     		.2byte	0x228
 1251 0433 0F       		.uleb128 0xf
 1252 0434 93190000 		.4byte	.LASF68
 1253 0438 09       		.byte	0x9
 1254 0439 3D       		.byte	0x3d
 1255 043a F3000000 		.4byte	0xf3
 1256 043e 2C02     		.2byte	0x22c
 1257 0440 0F       		.uleb128 0xf
 1258 0441 65140000 		.4byte	.LASF69
 1259 0445 09       		.byte	0x9
 1260 0446 3E       		.byte	0x3e
 1261 0447 EE000000 		.4byte	0xee
 1262 044b 3002     		.2byte	0x230
 1263 044d 0F       		.uleb128 0xf
 1264 044e 13110000 		.4byte	.LASF70
 1265 0452 09       		.byte	0x9
 1266 0453 3F       		.byte	0x3f
 1267 0454 EE000000 		.4byte	0xee
 1268 0458 3402     		.2byte	0x234
 1269 045a 0F       		.uleb128 0xf
 1270 045b 8A020000 		.4byte	.LASF71
 1271 045f 09       		.byte	0x9
 1272 0460 40       		.byte	0x40
 1273 0461 EE000000 		.4byte	0xee
 1274 0465 3802     		.2byte	0x238
 1275 0467 0F       		.uleb128 0xf
 1276 0468 B5120000 		.4byte	.LASF72
 1277 046c 09       		.byte	0x9
 1278 046d 41       		.byte	0x41
 1279 046e F3000000 		.4byte	0xf3
 1280 0472 3C02     		.2byte	0x23c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 100


 1281 0474 0F       		.uleb128 0xf
 1282 0475 F9020000 		.4byte	.LASF73
 1283 0479 09       		.byte	0x9
 1284 047a 42       		.byte	0x42
 1285 047b F3000000 		.4byte	0xf3
 1286 047f 4002     		.2byte	0x240
 1287 0481 0F       		.uleb128 0xf
 1288 0482 1B190000 		.4byte	.LASF74
 1289 0486 09       		.byte	0x9
 1290 0487 43       		.byte	0x43
 1291 0488 BF050000 		.4byte	0x5bf
 1292 048c 4402     		.2byte	0x244
 1293 048e 0F       		.uleb128 0xf
 1294 048f 580B0000 		.4byte	.LASF75
 1295 0493 09       		.byte	0x9
 1296 0494 44       		.byte	0x44
 1297 0495 EE000000 		.4byte	0xee
 1298 0499 8002     		.2byte	0x280
 1299 049b 0F       		.uleb128 0xf
 1300 049c 25190000 		.4byte	.LASF76
 1301 04a0 09       		.byte	0x9
 1302 04a1 45       		.byte	0x45
 1303 04a2 C9050000 		.4byte	0x5c9
 1304 04a6 8402     		.2byte	0x284
 1305 04a8 0F       		.uleb128 0xf
 1306 04a9 09050000 		.4byte	.LASF77
 1307 04ad 09       		.byte	0x9
 1308 04ae 46       		.byte	0x46
 1309 04af F3000000 		.4byte	0xf3
 1310 04b3 9002     		.2byte	0x290
 1311 04b5 0F       		.uleb128 0xf
 1312 04b6 2F190000 		.4byte	.LASF78
 1313 04ba 09       		.byte	0x9
 1314 04bb 47       		.byte	0x47
 1315 04bc D3050000 		.4byte	0x5d3
 1316 04c0 9402     		.2byte	0x294
 1317 04c2 0F       		.uleb128 0xf
 1318 04c3 A5210000 		.4byte	.LASF79
 1319 04c7 09       		.byte	0x9
 1320 04c8 48       		.byte	0x48
 1321 04c9 F3000000 		.4byte	0xf3
 1322 04cd A002     		.2byte	0x2a0
 1323 04cf 0F       		.uleb128 0xf
 1324 04d0 97100000 		.4byte	.LASF80
 1325 04d4 09       		.byte	0x9
 1326 04d5 49       		.byte	0x49
 1327 04d6 F3000000 		.4byte	0xf3
 1328 04da A402     		.2byte	0x2a4
 1329 04dc 0F       		.uleb128 0xf
 1330 04dd 39190000 		.4byte	.LASF81
 1331 04e1 09       		.byte	0x9
 1332 04e2 4A       		.byte	0x4a
 1333 04e3 DD050000 		.4byte	0x5dd
 1334 04e7 A802     		.2byte	0x2a8
 1335 04e9 0F       		.uleb128 0xf
 1336 04ea 931D0000 		.4byte	.LASF82
 1337 04ee 09       		.byte	0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 101


 1338 04ef 4B       		.byte	0x4b
 1339 04f0 EE000000 		.4byte	0xee
 1340 04f4 0003     		.2byte	0x300
 1341 04f6 0F       		.uleb128 0xf
 1342 04f7 5D150000 		.4byte	.LASF83
 1343 04fb 09       		.byte	0x9
 1344 04fc 4C       		.byte	0x4c
 1345 04fd EE000000 		.4byte	0xee
 1346 0501 0403     		.2byte	0x304
 1347 0503 0F       		.uleb128 0xf
 1348 0504 43190000 		.4byte	.LASF84
 1349 0508 09       		.byte	0x9
 1350 0509 4D       		.byte	0x4d
 1351 050a F7050000 		.4byte	0x5f7
 1352 050e 0803     		.2byte	0x308
 1353 0510 0F       		.uleb128 0xf
 1354 0511 57120000 		.4byte	.LASF85
 1355 0515 09       		.byte	0x9
 1356 0516 4E       		.byte	0x4e
 1357 0517 EE000000 		.4byte	0xee
 1358 051b 4003     		.2byte	0x340
 1359 051d 0F       		.uleb128 0xf
 1360 051e A8190000 		.4byte	.LASF86
 1361 0522 09       		.byte	0x9
 1362 0523 4F       		.byte	0x4f
 1363 0524 EE000000 		.4byte	0xee
 1364 0528 4403     		.2byte	0x344
 1365 052a 0F       		.uleb128 0xf
 1366 052b 3D210000 		.4byte	.LASF87
 1367 052f 09       		.byte	0x9
 1368 0530 50       		.byte	0x50
 1369 0531 F3000000 		.4byte	0xf3
 1370 0535 4803     		.2byte	0x348
 1371 0537 0F       		.uleb128 0xf
 1372 0538 621F0000 		.4byte	.LASF88
 1373 053c 09       		.byte	0x9
 1374 053d 51       		.byte	0x51
 1375 053e 12060000 		.4byte	0x612
 1376 0542 4C03     		.2byte	0x34c
 1377 0544 0F       		.uleb128 0xf
 1378 0545 4E1E0000 		.4byte	.LASF89
 1379 0549 09       		.byte	0x9
 1380 054a 52       		.byte	0x52
 1381 054b EE000000 		.4byte	0xee
 1382 054f 000F     		.2byte	0xf00
 1383 0551 0F       		.uleb128 0xf
 1384 0552 581E0000 		.4byte	.LASF90
 1385 0556 09       		.byte	0x9
 1386 0557 53       		.byte	0x53
 1387 0558 EE000000 		.4byte	0xee
 1388 055c 040F     		.2byte	0xf04
 1389 055e 00       		.byte	0
 1390 055f 07       		.uleb128 0x7
 1391 0560 F8000000 		.4byte	0xf8
 1392 0564 08       		.uleb128 0x8
 1393 0565 5F050000 		.4byte	0x55f
 1394 0569 09       		.uleb128 0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 102


 1395 056a F3000000 		.4byte	0xf3
 1396 056e 79050000 		.4byte	0x579
 1397 0572 0A       		.uleb128 0xa
 1398 0573 A5000000 		.4byte	0xa5
 1399 0577 15       		.byte	0x15
 1400 0578 00       		.byte	0
 1401 0579 07       		.uleb128 0x7
 1402 057a 69050000 		.4byte	0x569
 1403 057e 08       		.uleb128 0x8
 1404 057f 79050000 		.4byte	0x579
 1405 0583 07       		.uleb128 0x7
 1406 0584 08010000 		.4byte	0x108
 1407 0588 07       		.uleb128 0x7
 1408 0589 28010000 		.4byte	0x128
 1409 058d 08       		.uleb128 0x8
 1410 058e 88050000 		.4byte	0x588
 1411 0592 07       		.uleb128 0x7
 1412 0593 28010000 		.4byte	0x128
 1413 0597 08       		.uleb128 0x8
 1414 0598 92050000 		.4byte	0x592
 1415 059c 07       		.uleb128 0x7
 1416 059d 28010000 		.4byte	0x128
 1417 05a1 08       		.uleb128 0x8
 1418 05a2 9C050000 		.4byte	0x59c
 1419 05a6 07       		.uleb128 0x7
 1420 05a7 28010000 		.4byte	0x128
 1421 05ab 08       		.uleb128 0x8
 1422 05ac A6050000 		.4byte	0x5a6
 1423 05b0 07       		.uleb128 0x7
 1424 05b1 28010000 		.4byte	0x128
 1425 05b5 08       		.uleb128 0x8
 1426 05b6 B0050000 		.4byte	0x5b0
 1427 05ba 07       		.uleb128 0x7
 1428 05bb 38010000 		.4byte	0x138
 1429 05bf 08       		.uleb128 0x8
 1430 05c0 BA050000 		.4byte	0x5ba
 1431 05c4 07       		.uleb128 0x7
 1432 05c5 18010000 		.4byte	0x118
 1433 05c9 08       		.uleb128 0x8
 1434 05ca C4050000 		.4byte	0x5c4
 1435 05ce 07       		.uleb128 0x7
 1436 05cf 18010000 		.4byte	0x118
 1437 05d3 08       		.uleb128 0x8
 1438 05d4 CE050000 		.4byte	0x5ce
 1439 05d8 07       		.uleb128 0x7
 1440 05d9 69050000 		.4byte	0x569
 1441 05dd 08       		.uleb128 0x8
 1442 05de D8050000 		.4byte	0x5d8
 1443 05e2 09       		.uleb128 0x9
 1444 05e3 F3000000 		.4byte	0xf3
 1445 05e7 F2050000 		.4byte	0x5f2
 1446 05eb 0A       		.uleb128 0xa
 1447 05ec A5000000 		.4byte	0xa5
 1448 05f0 0D       		.byte	0xd
 1449 05f1 00       		.byte	0
 1450 05f2 07       		.uleb128 0x7
 1451 05f3 E2050000 		.4byte	0x5e2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 103


 1452 05f7 08       		.uleb128 0x8
 1453 05f8 F2050000 		.4byte	0x5f2
 1454 05fc 09       		.uleb128 0x9
 1455 05fd F3000000 		.4byte	0xf3
 1456 0601 0D060000 		.4byte	0x60d
 1457 0605 10       		.uleb128 0x10
 1458 0606 A5000000 		.4byte	0xa5
 1459 060a EC02     		.2byte	0x2ec
 1460 060c 00       		.byte	0
 1461 060d 07       		.uleb128 0x7
 1462 060e FC050000 		.4byte	0x5fc
 1463 0612 08       		.uleb128 0x8
 1464 0613 0D060000 		.4byte	0x60d
 1465 0617 04       		.uleb128 0x4
 1466 0618 EA0B0000 		.4byte	.LASF91
 1467 061c 09       		.byte	0x9
 1468 061d 54       		.byte	0x54
 1469 061e D7020000 		.4byte	0x2d7
 1470 0622 11       		.uleb128 0x11
 1471 0623 CE1A0000 		.4byte	.LASF92
 1472 0627 0A       		.byte	0xa
 1473 0628 C401     		.2byte	0x1c4
 1474 062a B4000000 		.4byte	0xb4
 1475 062e 02       		.uleb128 0x2
 1476 062f 01       		.byte	0x1
 1477 0630 02       		.byte	0x2
 1478 0631 480C0000 		.4byte	.LASF93
 1479 0635 12       		.uleb128 0x12
 1480 0636 01       		.byte	0x1
 1481 0637 5A000000 		.4byte	0x5a
 1482 063b 0B       		.byte	0xb
 1483 063c 6A01     		.2byte	0x16a
 1484 063e 4F060000 		.4byte	0x64f
 1485 0642 13       		.uleb128 0x13
 1486 0643 AF100000 		.4byte	.LASF94
 1487 0647 00       		.byte	0
 1488 0648 13       		.uleb128 0x13
 1489 0649 BA030000 		.4byte	.LASF95
 1490 064d 01       		.byte	0x1
 1491 064e 00       		.byte	0
 1492 064f 11       		.uleb128 0x11
 1493 0650 750A0000 		.4byte	.LASF96
 1494 0654 0B       		.byte	0xb
 1495 0655 6D01     		.2byte	0x16d
 1496 0657 35060000 		.4byte	0x635
 1497 065b 14       		.uleb128 0x14
 1498 065c 18       		.byte	0x18
 1499 065d 0B       		.byte	0xb
 1500 065e CE01     		.2byte	0x1ce
 1501 0660 B3060000 		.4byte	0x6b3
 1502 0664 15       		.uleb128 0x15
 1503 0665 B1010000 		.4byte	.LASF97
 1504 0669 0B       		.byte	0xb
 1505 066a D001     		.2byte	0x1d0
 1506 066c 4F060000 		.4byte	0x64f
 1507 0670 00       		.byte	0
 1508 0671 15       		.uleb128 0x15
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 104


 1509 0672 EB0D0000 		.4byte	.LASF98
 1510 0676 0B       		.byte	0xb
 1511 0677 D301     		.2byte	0x1d3
 1512 0679 E3000000 		.4byte	0xe3
 1513 067d 04       		.byte	0x4
 1514 067e 15       		.uleb128 0x15
 1515 067f 9A020000 		.4byte	.LASF99
 1516 0683 0B       		.byte	0xb
 1517 0684 D501     		.2byte	0x1d5
 1518 0686 E3000000 		.4byte	0xe3
 1519 068a 08       		.byte	0x8
 1520 068b 15       		.uleb128 0x15
 1521 068c 7D0C0000 		.4byte	.LASF100
 1522 0690 0B       		.byte	0xb
 1523 0691 D801     		.2byte	0x1d8
 1524 0693 E3000000 		.4byte	0xe3
 1525 0697 0C       		.byte	0xc
 1526 0698 15       		.uleb128 0x15
 1527 0699 281B0000 		.4byte	.LASF101
 1528 069d 0B       		.byte	0xb
 1529 069e DC01     		.2byte	0x1dc
 1530 06a0 E3000000 		.4byte	0xe3
 1531 06a4 10       		.byte	0x10
 1532 06a5 15       		.uleb128 0x15
 1533 06a6 770C0000 		.4byte	.LASF102
 1534 06aa 0B       		.byte	0xb
 1535 06ab E001     		.2byte	0x1e0
 1536 06ad E3000000 		.4byte	0xe3
 1537 06b1 14       		.byte	0x14
 1538 06b2 00       		.byte	0
 1539 06b3 11       		.uleb128 0x11
 1540 06b4 1E030000 		.4byte	.LASF103
 1541 06b8 0B       		.byte	0xb
 1542 06b9 E201     		.2byte	0x1e2
 1543 06bb 5B060000 		.4byte	0x65b
 1544 06bf 14       		.uleb128 0x14
 1545 06c0 30       		.byte	0x30
 1546 06c1 0B       		.byte	0xb
 1547 06c2 E501     		.2byte	0x1e5
 1548 06c4 E3060000 		.4byte	0x6e3
 1549 06c8 15       		.uleb128 0x15
 1550 06c9 6A0F0000 		.4byte	.LASF104
 1551 06cd 0B       		.byte	0xb
 1552 06ce E701     		.2byte	0x1e7
 1553 06d0 B3060000 		.4byte	0x6b3
 1554 06d4 00       		.byte	0
 1555 06d5 15       		.uleb128 0x15
 1556 06d6 600C0000 		.4byte	.LASF105
 1557 06da 0B       		.byte	0xb
 1558 06db E801     		.2byte	0x1e8
 1559 06dd B3060000 		.4byte	0x6b3
 1560 06e1 18       		.byte	0x18
 1561 06e2 00       		.byte	0
 1562 06e3 11       		.uleb128 0x11
 1563 06e4 A9030000 		.4byte	.LASF106
 1564 06e8 0B       		.byte	0xb
 1565 06e9 E901     		.2byte	0x1e9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 105


 1566 06eb BF060000 		.4byte	0x6bf
 1567 06ef 16       		.uleb128 0x16
 1568 06f0 BC200000 		.4byte	.LASF128
 1569 06f4 4C       		.byte	0x4c
 1570 06f5 0C       		.byte	0xc
 1571 06f6 2B       		.byte	0x2b
 1572 06f7 E0070000 		.4byte	0x7e0
 1573 06fb 0D       		.uleb128 0xd
 1574 06fc A2200000 		.4byte	.LASF107
 1575 0700 0C       		.byte	0xc
 1576 0701 2D       		.byte	0x2d
 1577 0702 E3000000 		.4byte	0xe3
 1578 0706 00       		.byte	0
 1579 0707 0D       		.uleb128 0xd
 1580 0708 C20F0000 		.4byte	.LASF108
 1581 070c 0C       		.byte	0xc
 1582 070d 2F       		.byte	0x2f
 1583 070e E3000000 		.4byte	0xe3
 1584 0712 04       		.byte	0x4
 1585 0713 0D       		.uleb128 0xd
 1586 0714 54170000 		.4byte	.LASF109
 1587 0718 0C       		.byte	0xc
 1588 0719 30       		.byte	0x30
 1589 071a E3000000 		.4byte	0xe3
 1590 071e 08       		.byte	0x8
 1591 071f 0D       		.uleb128 0xd
 1592 0720 591A0000 		.4byte	.LASF110
 1593 0724 0C       		.byte	0xc
 1594 0725 31       		.byte	0x31
 1595 0726 E3000000 		.4byte	0xe3
 1596 072a 0C       		.byte	0xc
 1597 072b 0D       		.uleb128 0xd
 1598 072c E2180000 		.4byte	.LASF111
 1599 0730 0C       		.byte	0xc
 1600 0731 33       		.byte	0x33
 1601 0732 E3000000 		.4byte	0xe3
 1602 0736 10       		.byte	0x10
 1603 0737 0D       		.uleb128 0xd
 1604 0738 C8050000 		.4byte	.LASF112
 1605 073c 0C       		.byte	0xc
 1606 073d 34       		.byte	0x34
 1607 073e E3000000 		.4byte	0xe3
 1608 0742 14       		.byte	0x14
 1609 0743 0D       		.uleb128 0xd
 1610 0744 D1050000 		.4byte	.LASF113
 1611 0748 0C       		.byte	0xc
 1612 0749 35       		.byte	0x35
 1613 074a E3000000 		.4byte	0xe3
 1614 074e 18       		.byte	0x18
 1615 074f 0D       		.uleb128 0xd
 1616 0750 74190000 		.4byte	.LASF114
 1617 0754 0C       		.byte	0xc
 1618 0755 36       		.byte	0x36
 1619 0756 2E060000 		.4byte	0x62e
 1620 075a 1C       		.byte	0x1c
 1621 075b 0D       		.uleb128 0xd
 1622 075c C5070000 		.4byte	.LASF115
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 106


 1623 0760 0C       		.byte	0xc
 1624 0761 38       		.byte	0x38
 1625 0762 E3000000 		.4byte	0xe3
 1626 0766 20       		.byte	0x20
 1627 0767 0D       		.uleb128 0xd
 1628 0768 150B0000 		.4byte	.LASF116
 1629 076c 0C       		.byte	0xc
 1630 076d 39       		.byte	0x39
 1631 076e E3000000 		.4byte	0xe3
 1632 0772 24       		.byte	0x24
 1633 0773 0D       		.uleb128 0xd
 1634 0774 C10E0000 		.4byte	.LASF117
 1635 0778 0C       		.byte	0xc
 1636 0779 3B       		.byte	0x3b
 1637 077a E3000000 		.4byte	0xe3
 1638 077e 28       		.byte	0x28
 1639 077f 0D       		.uleb128 0xd
 1640 0780 97140000 		.4byte	.LASF118
 1641 0784 0C       		.byte	0xc
 1642 0785 3C       		.byte	0x3c
 1643 0786 E3000000 		.4byte	0xe3
 1644 078a 2C       		.byte	0x2c
 1645 078b 0D       		.uleb128 0xd
 1646 078c 63090000 		.4byte	.LASF119
 1647 0790 0C       		.byte	0xc
 1648 0791 3E       		.byte	0x3e
 1649 0792 E3000000 		.4byte	0xe3
 1650 0796 30       		.byte	0x30
 1651 0797 0D       		.uleb128 0xd
 1652 0798 060B0000 		.4byte	.LASF120
 1653 079c 0C       		.byte	0xc
 1654 079d 3F       		.byte	0x3f
 1655 079e E3000000 		.4byte	0xe3
 1656 07a2 34       		.byte	0x34
 1657 07a3 0D       		.uleb128 0xd
 1658 07a4 7B030000 		.4byte	.LASF121
 1659 07a8 0C       		.byte	0xc
 1660 07a9 41       		.byte	0x41
 1661 07aa E3000000 		.4byte	0xe3
 1662 07ae 38       		.byte	0x38
 1663 07af 0D       		.uleb128 0xd
 1664 07b0 90000000 		.4byte	.LASF122
 1665 07b4 0C       		.byte	0xc
 1666 07b5 42       		.byte	0x42
 1667 07b6 E3000000 		.4byte	0xe3
 1668 07ba 3C       		.byte	0x3c
 1669 07bb 0D       		.uleb128 0xd
 1670 07bc B9040000 		.4byte	.LASF123
 1671 07c0 0C       		.byte	0xc
 1672 07c1 44       		.byte	0x44
 1673 07c2 E3000000 		.4byte	0xe3
 1674 07c6 40       		.byte	0x40
 1675 07c7 0D       		.uleb128 0xd
 1676 07c8 D1190000 		.4byte	.LASF124
 1677 07cc 0C       		.byte	0xc
 1678 07cd 45       		.byte	0x45
 1679 07ce E3000000 		.4byte	0xe3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 107


 1680 07d2 44       		.byte	0x44
 1681 07d3 0D       		.uleb128 0xd
 1682 07d4 AC1E0000 		.4byte	.LASF125
 1683 07d8 0C       		.byte	0xc
 1684 07d9 47       		.byte	0x47
 1685 07da E3000000 		.4byte	0xe3
 1686 07de 48       		.byte	0x48
 1687 07df 00       		.byte	0
 1688 07e0 04       		.uleb128 0x4
 1689 07e1 AE170000 		.4byte	.LASF126
 1690 07e5 0C       		.byte	0xc
 1691 07e6 48       		.byte	0x48
 1692 07e7 EF060000 		.4byte	0x6ef
 1693 07eb 06       		.uleb128 0x6
 1694 07ec 04       		.byte	0x4
 1695 07ed F1070000 		.4byte	0x7f1
 1696 07f1 17       		.uleb128 0x17
 1697 07f2 FC070000 		.4byte	0x7fc
 1698 07f6 18       		.uleb128 0x18
 1699 07f7 E3000000 		.4byte	0xe3
 1700 07fb 00       		.byte	0
 1701 07fc 11       		.uleb128 0x11
 1702 07fd 72000000 		.4byte	.LASF127
 1703 0801 0D       		.byte	0xd
 1704 0802 BF01     		.2byte	0x1bf
 1705 0804 EB070000 		.4byte	0x7eb
 1706 0808 19       		.uleb128 0x19
 1707 0809 4B1F0000 		.4byte	.LASF129
 1708 080d 24       		.byte	0x24
 1709 080e 0D       		.byte	0xd
 1710 080f 4102     		.2byte	0x241
 1711 0811 8B080000 		.4byte	0x88b
 1712 0815 15       		.uleb128 0x15
 1713 0816 A8100000 		.4byte	.LASF130
 1714 081a 0D       		.byte	0xd
 1715 081b 4402     		.2byte	0x244
 1716 081d EE000000 		.4byte	0xee
 1717 0821 00       		.byte	0
 1718 0822 15       		.uleb128 0x15
 1719 0823 680B0000 		.4byte	.LASF131
 1720 0827 0D       		.byte	0xd
 1721 0828 4602     		.2byte	0x246
 1722 082a AC000000 		.4byte	0xac
 1723 082e 04       		.byte	0x4
 1724 082f 15       		.uleb128 0x15
 1725 0830 A5220000 		.4byte	.LASF132
 1726 0834 0D       		.byte	0xd
 1727 0835 4702     		.2byte	0x247
 1728 0837 E3000000 		.4byte	0xe3
 1729 083b 08       		.byte	0x8
 1730 083c 15       		.uleb128 0x15
 1731 083d 38100000 		.4byte	.LASF133
 1732 0841 0D       		.byte	0xd
 1733 0842 4802     		.2byte	0x248
 1734 0844 EE000000 		.4byte	0xee
 1735 0848 0C       		.byte	0xc
 1736 0849 15       		.uleb128 0x15
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 108


 1737 084a 85160000 		.4byte	.LASF134
 1738 084e 0D       		.byte	0xd
 1739 084f 4A02     		.2byte	0x24a
 1740 0851 AC000000 		.4byte	0xac
 1741 0855 10       		.byte	0x10
 1742 0856 15       		.uleb128 0x15
 1743 0857 26150000 		.4byte	.LASF135
 1744 085b 0D       		.byte	0xd
 1745 085c 4B02     		.2byte	0x24b
 1746 085e E3000000 		.4byte	0xe3
 1747 0862 14       		.byte	0x14
 1748 0863 15       		.uleb128 0x15
 1749 0864 59030000 		.4byte	.LASF136
 1750 0868 0D       		.byte	0xd
 1751 0869 4C02     		.2byte	0x24c
 1752 086b EE000000 		.4byte	0xee
 1753 086f 18       		.byte	0x18
 1754 0870 15       		.uleb128 0x15
 1755 0871 200C0000 		.4byte	.LASF137
 1756 0875 0D       		.byte	0xd
 1757 0876 5202     		.2byte	0x252
 1758 0878 FC070000 		.4byte	0x7fc
 1759 087c 1C       		.byte	0x1c
 1760 087d 15       		.uleb128 0x15
 1761 087e 8F100000 		.4byte	.LASF138
 1762 0882 0D       		.byte	0xd
 1763 0883 5502     		.2byte	0x255
 1764 0885 E3000000 		.4byte	0xe3
 1765 0889 20       		.byte	0x20
 1766 088a 00       		.byte	0
 1767 088b 11       		.uleb128 0x11
 1768 088c 70140000 		.4byte	.LASF139
 1769 0890 0D       		.byte	0xd
 1770 0891 5802     		.2byte	0x258
 1771 0893 08080000 		.4byte	0x808
 1772 0897 11       		.uleb128 0x11
 1773 0898 95110000 		.4byte	.LASF140
 1774 089c 0E       		.byte	0xe
 1775 089d AB01     		.2byte	0x1ab
 1776 089f EB070000 		.4byte	0x7eb
 1777 08a3 19       		.uleb128 0x19
 1778 08a4 2E090000 		.4byte	.LASF141
 1779 08a8 38       		.byte	0x38
 1780 08a9 0E       		.byte	0xe
 1781 08aa 4702     		.2byte	0x247
 1782 08ac 67090000 		.4byte	0x967
 1783 08b0 15       		.uleb128 0x15
 1784 08b1 F0010000 		.4byte	.LASF142
 1785 08b5 0E       		.byte	0xe
 1786 08b6 4A02     		.2byte	0x24a
 1787 08b8 EE000000 		.4byte	0xee
 1788 08bc 00       		.byte	0
 1789 08bd 15       		.uleb128 0x15
 1790 08be 6F070000 		.4byte	.LASF143
 1791 08c2 0E       		.byte	0xe
 1792 08c3 4B02     		.2byte	0x24b
 1793 08c5 EE000000 		.4byte	0xee
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 109


 1794 08c9 04       		.byte	0x4
 1795 08ca 15       		.uleb128 0x15
 1796 08cb FE160000 		.4byte	.LASF144
 1797 08cf 0E       		.byte	0xe
 1798 08d0 4D02     		.2byte	0x24d
 1799 08d2 AC000000 		.4byte	0xac
 1800 08d6 08       		.byte	0x8
 1801 08d7 15       		.uleb128 0x15
 1802 08d8 C3040000 		.4byte	.LASF145
 1803 08dc 0E       		.byte	0xe
 1804 08dd 4E02     		.2byte	0x24e
 1805 08df E3000000 		.4byte	0xe3
 1806 08e3 0C       		.byte	0xc
 1807 08e4 15       		.uleb128 0x15
 1808 08e5 89140000 		.4byte	.LASF146
 1809 08e9 0E       		.byte	0xe
 1810 08ea 4F02     		.2byte	0x24f
 1811 08ec EE000000 		.4byte	0xee
 1812 08f0 10       		.byte	0x10
 1813 08f1 15       		.uleb128 0x15
 1814 08f2 5C0F0000 		.4byte	.LASF147
 1815 08f6 0E       		.byte	0xe
 1816 08f7 5002     		.2byte	0x250
 1817 08f9 EE000000 		.4byte	0xee
 1818 08fd 14       		.byte	0x14
 1819 08fe 15       		.uleb128 0x15
 1820 08ff 680B0000 		.4byte	.LASF131
 1821 0903 0E       		.byte	0xe
 1822 0904 5202     		.2byte	0x252
 1823 0906 AC000000 		.4byte	0xac
 1824 090a 18       		.byte	0x18
 1825 090b 15       		.uleb128 0x15
 1826 090c A5220000 		.4byte	.LASF132
 1827 0910 0E       		.byte	0xe
 1828 0911 5302     		.2byte	0x253
 1829 0913 E3000000 		.4byte	0xe3
 1830 0917 1C       		.byte	0x1c
 1831 0918 15       		.uleb128 0x15
 1832 0919 38100000 		.4byte	.LASF133
 1833 091d 0E       		.byte	0xe
 1834 091e 5402     		.2byte	0x254
 1835 0920 EE000000 		.4byte	0xee
 1836 0924 20       		.byte	0x20
 1837 0925 15       		.uleb128 0x15
 1838 0926 85160000 		.4byte	.LASF134
 1839 092a 0E       		.byte	0xe
 1840 092b 5602     		.2byte	0x256
 1841 092d AC000000 		.4byte	0xac
 1842 0931 24       		.byte	0x24
 1843 0932 15       		.uleb128 0x15
 1844 0933 26150000 		.4byte	.LASF135
 1845 0937 0E       		.byte	0xe
 1846 0938 5702     		.2byte	0x257
 1847 093a E3000000 		.4byte	0xe3
 1848 093e 28       		.byte	0x28
 1849 093f 15       		.uleb128 0x15
 1850 0940 541B0000 		.4byte	.LASF148
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 110


 1851 0944 0E       		.byte	0xe
 1852 0945 5802     		.2byte	0x258
 1853 0947 EE000000 		.4byte	0xee
 1854 094b 2C       		.byte	0x2c
 1855 094c 15       		.uleb128 0x15
 1856 094d 200C0000 		.4byte	.LASF137
 1857 0951 0E       		.byte	0xe
 1858 0952 5D02     		.2byte	0x25d
 1859 0954 97080000 		.4byte	0x897
 1860 0958 30       		.byte	0x30
 1861 0959 15       		.uleb128 0x15
 1862 095a 8F100000 		.4byte	.LASF138
 1863 095e 0E       		.byte	0xe
 1864 095f 6002     		.2byte	0x260
 1865 0961 E3000000 		.4byte	0xe3
 1866 0965 34       		.byte	0x34
 1867 0966 00       		.byte	0
 1868 0967 11       		.uleb128 0x11
 1869 0968 0F090000 		.4byte	.LASF149
 1870 096c 0E       		.byte	0xe
 1871 096d 6302     		.2byte	0x263
 1872 096f A3080000 		.4byte	0x8a3
 1873 0973 12       		.uleb128 0x12
 1874 0974 01       		.byte	0x1
 1875 0975 5A000000 		.4byte	0x5a
 1876 0979 03       		.byte	0x3
 1877 097a 0504     		.2byte	0x405
 1878 097c 99090000 		.4byte	0x999
 1879 0980 13       		.uleb128 0x13
 1880 0981 B4060000 		.4byte	.LASF150
 1881 0985 00       		.byte	0
 1882 0986 13       		.uleb128 0x13
 1883 0987 8C0A0000 		.4byte	.LASF151
 1884 098b 01       		.byte	0x1
 1885 098c 13       		.uleb128 0x13
 1886 098d DD0E0000 		.4byte	.LASF152
 1887 0991 02       		.byte	0x2
 1888 0992 13       		.uleb128 0x13
 1889 0993 04030000 		.4byte	.LASF153
 1890 0997 03       		.byte	0x3
 1891 0998 00       		.byte	0
 1892 0999 11       		.uleb128 0x11
 1893 099a CC210000 		.4byte	.LASF154
 1894 099e 03       		.byte	0x3
 1895 099f 0A04     		.2byte	0x40a
 1896 09a1 73090000 		.4byte	0x973
 1897 09a5 12       		.uleb128 0x12
 1898 09a6 01       		.byte	0x1
 1899 09a7 5A000000 		.4byte	0x5a
 1900 09ab 03       		.byte	0x3
 1901 09ac 8604     		.2byte	0x486
 1902 09ae CB090000 		.4byte	0x9cb
 1903 09b2 13       		.uleb128 0x13
 1904 09b3 381E0000 		.4byte	.LASF155
 1905 09b7 00       		.byte	0
 1906 09b8 13       		.uleb128 0x13
 1907 09b9 1F020000 		.4byte	.LASF156
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 111


 1908 09bd 01       		.byte	0x1
 1909 09be 13       		.uleb128 0x13
 1910 09bf 6A120000 		.4byte	.LASF157
 1911 09c3 02       		.byte	0x2
 1912 09c4 13       		.uleb128 0x13
 1913 09c5 C7120000 		.4byte	.LASF158
 1914 09c9 04       		.byte	0x4
 1915 09ca 00       		.byte	0
 1916 09cb 14       		.uleb128 0x14
 1917 09cc 78       		.byte	0x78
 1918 09cd 03       		.byte	0x3
 1919 09ce F404     		.2byte	0x4f4
 1920 09d0 980A0000 		.4byte	0xa98
 1921 09d4 15       		.uleb128 0x15
 1922 09d5 010B0000 		.4byte	.LASF159
 1923 09d9 03       		.byte	0x3
 1924 09da F604     		.2byte	0x4f6
 1925 09dc E3000000 		.4byte	0xe3
 1926 09e0 00       		.byte	0
 1927 09e1 15       		.uleb128 0x15
 1928 09e2 211E0000 		.4byte	.LASF160
 1929 09e6 03       		.byte	0x3
 1930 09e7 F704     		.2byte	0x4f7
 1931 09e9 E3000000 		.4byte	0xe3
 1932 09ed 04       		.byte	0x4
 1933 09ee 15       		.uleb128 0x15
 1934 09ef 87170000 		.4byte	.LASF161
 1935 09f3 03       		.byte	0x3
 1936 09f4 F804     		.2byte	0x4f8
 1937 09f6 E3000000 		.4byte	0xe3
 1938 09fa 08       		.byte	0x8
 1939 09fb 15       		.uleb128 0x15
 1940 09fc 130C0000 		.4byte	.LASF162
 1941 0a00 03       		.byte	0x3
 1942 0a01 F904     		.2byte	0x4f9
 1943 0a03 E3000000 		.4byte	0xe3
 1944 0a07 0C       		.byte	0xc
 1945 0a08 15       		.uleb128 0x15
 1946 0a09 390A0000 		.4byte	.LASF163
 1947 0a0d 03       		.byte	0x3
 1948 0a0e FA04     		.2byte	0x4fa
 1949 0a10 E3000000 		.4byte	0xe3
 1950 0a14 10       		.byte	0x10
 1951 0a15 15       		.uleb128 0x15
 1952 0a16 B4110000 		.4byte	.LASF164
 1953 0a1a 03       		.byte	0x3
 1954 0a1b FB04     		.2byte	0x4fb
 1955 0a1d 99090000 		.4byte	0x999
 1956 0a21 14       		.byte	0x14
 1957 0a22 15       		.uleb128 0x15
 1958 0a23 550F0000 		.4byte	.LASF165
 1959 0a27 03       		.byte	0x3
 1960 0a28 FC04     		.2byte	0x4fc
 1961 0a2a E3000000 		.4byte	0xe3
 1962 0a2e 18       		.byte	0x18
 1963 0a2f 15       		.uleb128 0x15
 1964 0a30 B3140000 		.4byte	.LASF166
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 112


 1965 0a34 03       		.byte	0x3
 1966 0a35 FD04     		.2byte	0x4fd
 1967 0a37 980A0000 		.4byte	0xa98
 1968 0a3b 1C       		.byte	0x1c
 1969 0a3c 15       		.uleb128 0x15
 1970 0a3d 9C220000 		.4byte	.LASF167
 1971 0a41 03       		.byte	0x3
 1972 0a42 FE04     		.2byte	0x4fe
 1973 0a44 E3000000 		.4byte	0xe3
 1974 0a48 5C       		.byte	0x5c
 1975 0a49 15       		.uleb128 0x15
 1976 0a4a 44050000 		.4byte	.LASF168
 1977 0a4e 03       		.byte	0x3
 1978 0a4f FF04     		.2byte	0x4ff
 1979 0a51 E3000000 		.4byte	0xe3
 1980 0a55 60       		.byte	0x60
 1981 0a56 15       		.uleb128 0x15
 1982 0a57 BE110000 		.4byte	.LASF169
 1983 0a5b 03       		.byte	0x3
 1984 0a5c 0005     		.2byte	0x500
 1985 0a5e E3000000 		.4byte	0xe3
 1986 0a62 64       		.byte	0x64
 1987 0a63 15       		.uleb128 0x15
 1988 0a64 F7170000 		.4byte	.LASF170
 1989 0a68 03       		.byte	0x3
 1990 0a69 0105     		.2byte	0x501
 1991 0a6b E3000000 		.4byte	0xe3
 1992 0a6f 68       		.byte	0x68
 1993 0a70 15       		.uleb128 0x15
 1994 0a71 63110000 		.4byte	.LASF171
 1995 0a75 03       		.byte	0x3
 1996 0a76 0205     		.2byte	0x502
 1997 0a78 E3000000 		.4byte	0xe3
 1998 0a7c 6C       		.byte	0x6c
 1999 0a7d 15       		.uleb128 0x15
 2000 0a7e 76210000 		.4byte	.LASF172
 2001 0a82 03       		.byte	0x3
 2002 0a83 0305     		.2byte	0x503
 2003 0a85 2E060000 		.4byte	0x62e
 2004 0a89 70       		.byte	0x70
 2005 0a8a 15       		.uleb128 0x15
 2006 0a8b 350E0000 		.4byte	.LASF173
 2007 0a8f 03       		.byte	0x3
 2008 0a90 0405     		.2byte	0x504
 2009 0a92 E3000000 		.4byte	0xe3
 2010 0a96 74       		.byte	0x74
 2011 0a97 00       		.byte	0
 2012 0a98 09       		.uleb128 0x9
 2013 0a99 E3000000 		.4byte	0xe3
 2014 0a9d A80A0000 		.4byte	0xaa8
 2015 0aa1 0A       		.uleb128 0xa
 2016 0aa2 A5000000 		.4byte	0xa5
 2017 0aa6 0F       		.byte	0xf
 2018 0aa7 00       		.byte	0
 2019 0aa8 11       		.uleb128 0x11
 2020 0aa9 E70A0000 		.4byte	.LASF174
 2021 0aad 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 113


 2022 0aae 0505     		.2byte	0x505
 2023 0ab0 CB090000 		.4byte	0x9cb
 2024 0ab4 12       		.uleb128 0x12
 2025 0ab5 02       		.byte	0x2
 2026 0ab6 73000000 		.4byte	0x73
 2027 0aba 0F       		.byte	0xf
 2028 0abb 3F01     		.2byte	0x13f
 2029 0abd E60D0000 		.4byte	0xde6
 2030 0ac1 13       		.uleb128 0x13
 2031 0ac2 FC080000 		.4byte	.LASF175
 2032 0ac6 00       		.byte	0
 2033 0ac7 1A       		.uleb128 0x1a
 2034 0ac8 5C080000 		.4byte	.LASF176
 2035 0acc 0010     		.2byte	0x1000
 2036 0ace 1A       		.uleb128 0x1a
 2037 0acf E01C0000 		.4byte	.LASF177
 2038 0ad3 0110     		.2byte	0x1001
 2039 0ad5 1A       		.uleb128 0x1a
 2040 0ad6 970D0000 		.4byte	.LASF178
 2041 0ada 0210     		.2byte	0x1002
 2042 0adc 1A       		.uleb128 0x1a
 2043 0add 1B0E0000 		.4byte	.LASF179
 2044 0ae1 0310     		.2byte	0x1003
 2045 0ae3 1A       		.uleb128 0x1a
 2046 0ae4 1D010000 		.4byte	.LASF180
 2047 0ae8 0410     		.2byte	0x1004
 2048 0aea 1A       		.uleb128 0x1a
 2049 0aeb EF210000 		.4byte	.LASF181
 2050 0aef 0510     		.2byte	0x1005
 2051 0af1 1A       		.uleb128 0x1a
 2052 0af2 94170000 		.4byte	.LASF182
 2053 0af6 0020     		.2byte	0x2000
 2054 0af8 1A       		.uleb128 0x1a
 2055 0af9 851B0000 		.4byte	.LASF183
 2056 0afd 0120     		.2byte	0x2001
 2057 0aff 1A       		.uleb128 0x1a
 2058 0b00 1E170000 		.4byte	.LASF184
 2059 0b04 0220     		.2byte	0x2002
 2060 0b06 1A       		.uleb128 0x1a
 2061 0b07 C70D0000 		.4byte	.LASF185
 2062 0b0b 0320     		.2byte	0x2003
 2063 0b0d 1A       		.uleb128 0x1a
 2064 0b0e 12100000 		.4byte	.LASF186
 2065 0b12 0420     		.2byte	0x2004
 2066 0b14 1A       		.uleb128 0x1a
 2067 0b15 15130000 		.4byte	.LASF187
 2068 0b19 0520     		.2byte	0x2005
 2069 0b1b 1A       		.uleb128 0x1a
 2070 0b1c 400D0000 		.4byte	.LASF188
 2071 0b20 0620     		.2byte	0x2006
 2072 0b22 1A       		.uleb128 0x1a
 2073 0b23 131C0000 		.4byte	.LASF189
 2074 0b27 0720     		.2byte	0x2007
 2075 0b29 1A       		.uleb128 0x1a
 2076 0b2a F21E0000 		.4byte	.LASF190
 2077 0b2e 0820     		.2byte	0x2008
 2078 0b30 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 114


 2079 0b31 6D1E0000 		.4byte	.LASF191
 2080 0b35 0920     		.2byte	0x2009
 2081 0b37 1A       		.uleb128 0x1a
 2082 0b38 CD080000 		.4byte	.LASF192
 2083 0b3c 0A20     		.2byte	0x200a
 2084 0b3e 1A       		.uleb128 0x1a
 2085 0b3f 16040000 		.4byte	.LASF193
 2086 0b43 0B20     		.2byte	0x200b
 2087 0b45 1A       		.uleb128 0x1a
 2088 0b46 68170000 		.4byte	.LASF194
 2089 0b4a 0C20     		.2byte	0x200c
 2090 0b4c 1A       		.uleb128 0x1a
 2091 0b4d 1B080000 		.4byte	.LASF195
 2092 0b51 0D20     		.2byte	0x200d
 2093 0b53 1A       		.uleb128 0x1a
 2094 0b54 ED0F0000 		.4byte	.LASF196
 2095 0b58 0E20     		.2byte	0x200e
 2096 0b5a 1A       		.uleb128 0x1a
 2097 0b5b 52180000 		.4byte	.LASF197
 2098 0b5f 0F20     		.2byte	0x200f
 2099 0b61 1A       		.uleb128 0x1a
 2100 0b62 E5120000 		.4byte	.LASF198
 2101 0b66 1020     		.2byte	0x2010
 2102 0b68 1A       		.uleb128 0x1a
 2103 0b69 E3140000 		.4byte	.LASF199
 2104 0b6d 1120     		.2byte	0x2011
 2105 0b6f 1A       		.uleb128 0x1a
 2106 0b70 C01E0000 		.4byte	.LASF200
 2107 0b74 1220     		.2byte	0x2012
 2108 0b76 1A       		.uleb128 0x1a
 2109 0b77 34020000 		.4byte	.LASF201
 2110 0b7b 1320     		.2byte	0x2013
 2111 0b7d 1A       		.uleb128 0x1a
 2112 0b7e 3F110000 		.4byte	.LASF202
 2113 0b82 1420     		.2byte	0x2014
 2114 0b84 1A       		.uleb128 0x1a
 2115 0b85 82050000 		.4byte	.LASF203
 2116 0b89 1520     		.2byte	0x2015
 2117 0b8b 1A       		.uleb128 0x1a
 2118 0b8c 7F070000 		.4byte	.LASF204
 2119 0b90 1620     		.2byte	0x2016
 2120 0b92 1A       		.uleb128 0x1a
 2121 0b93 6D040000 		.4byte	.LASF205
 2122 0b97 1720     		.2byte	0x2017
 2123 0b99 1A       		.uleb128 0x1a
 2124 0b9a 70080000 		.4byte	.LASF206
 2125 0b9e 0030     		.2byte	0x3000
 2126 0ba0 1A       		.uleb128 0x1a
 2127 0ba1 B90B0000 		.4byte	.LASF207
 2128 0ba5 0130     		.2byte	0x3001
 2129 0ba7 1A       		.uleb128 0x1a
 2130 0ba8 C30A0000 		.4byte	.LASF208
 2131 0bac 0230     		.2byte	0x3002
 2132 0bae 1A       		.uleb128 0x1a
 2133 0baf 511C0000 		.4byte	.LASF209
 2134 0bb3 0330     		.2byte	0x3003
 2135 0bb5 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 115


 2136 0bb6 0E0A0000 		.4byte	.LASF210
 2137 0bba 0430     		.2byte	0x3004
 2138 0bbc 1A       		.uleb128 0x1a
 2139 0bbd A61C0000 		.4byte	.LASF211
 2140 0bc1 0530     		.2byte	0x3005
 2141 0bc3 1A       		.uleb128 0x1a
 2142 0bc4 00020000 		.4byte	.LASF212
 2143 0bc8 0630     		.2byte	0x3006
 2144 0bca 1A       		.uleb128 0x1a
 2145 0bcb 0F210000 		.4byte	.LASF213
 2146 0bcf 0730     		.2byte	0x3007
 2147 0bd1 1A       		.uleb128 0x1a
 2148 0bd2 E5130000 		.4byte	.LASF214
 2149 0bd6 0830     		.2byte	0x3008
 2150 0bd8 1A       		.uleb128 0x1a
 2151 0bd9 BF0C0000 		.4byte	.LASF215
 2152 0bdd 0930     		.2byte	0x3009
 2153 0bdf 1A       		.uleb128 0x1a
 2154 0be0 751C0000 		.4byte	.LASF216
 2155 0be4 0A30     		.2byte	0x300a
 2156 0be6 1A       		.uleb128 0x1a
 2157 0be7 110F0000 		.4byte	.LASF217
 2158 0beb 0B30     		.2byte	0x300b
 2159 0bed 1A       		.uleb128 0x1a
 2160 0bee 3C010000 		.4byte	.LASF218
 2161 0bf2 0C30     		.2byte	0x300c
 2162 0bf4 1A       		.uleb128 0x1a
 2163 0bf5 A31A0000 		.4byte	.LASF219
 2164 0bf9 1130     		.2byte	0x3011
 2165 0bfb 1A       		.uleb128 0x1a
 2166 0bfc 98180000 		.4byte	.LASF220
 2167 0c00 1230     		.2byte	0x3012
 2168 0c02 1A       		.uleb128 0x1a
 2169 0c03 761D0000 		.4byte	.LASF221
 2170 0c07 1330     		.2byte	0x3013
 2171 0c09 1A       		.uleb128 0x1a
 2172 0c0a AF1B0000 		.4byte	.LASF222
 2173 0c0e 1430     		.2byte	0x3014
 2174 0c10 1A       		.uleb128 0x1a
 2175 0c11 E0190000 		.4byte	.LASF223
 2176 0c15 1530     		.2byte	0x3015
 2177 0c17 1A       		.uleb128 0x1a
 2178 0c18 07120000 		.4byte	.LASF224
 2179 0c1c 1630     		.2byte	0x3016
 2180 0c1e 1A       		.uleb128 0x1a
 2181 0c1f E5110000 		.4byte	.LASF225
 2182 0c23 1730     		.2byte	0x3017
 2183 0c25 1A       		.uleb128 0x1a
 2184 0c26 410E0000 		.4byte	.LASF226
 2185 0c2a 1830     		.2byte	0x3018
 2186 0c2c 1A       		.uleb128 0x1a
 2187 0c2d 98150000 		.4byte	.LASF227
 2188 0c31 0040     		.2byte	0x4000
 2189 0c33 1A       		.uleb128 0x1a
 2190 0c34 D8200000 		.4byte	.LASF228
 2191 0c38 0140     		.2byte	0x4001
 2192 0c3a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 116


 2193 0c3b 5A200000 		.4byte	.LASF229
 2194 0c3f 0240     		.2byte	0x4002
 2195 0c41 1A       		.uleb128 0x1a
 2196 0c42 E71D0000 		.4byte	.LASF230
 2197 0c46 0340     		.2byte	0x4003
 2198 0c48 1A       		.uleb128 0x1a
 2199 0c49 22110000 		.4byte	.LASF231
 2200 0c4d 0440     		.2byte	0x4004
 2201 0c4f 1A       		.uleb128 0x1a
 2202 0c50 38220000 		.4byte	.LASF232
 2203 0c54 0540     		.2byte	0x4005
 2204 0c56 1A       		.uleb128 0x1a
 2205 0c57 9E000000 		.4byte	.LASF233
 2206 0c5b 0640     		.2byte	0x4006
 2207 0c5d 1A       		.uleb128 0x1a
 2208 0c5e 990B0000 		.4byte	.LASF234
 2209 0c62 0740     		.2byte	0x4007
 2210 0c64 1A       		.uleb128 0x1a
 2211 0c65 36030000 		.4byte	.LASF235
 2212 0c69 0840     		.2byte	0x4008
 2213 0c6b 1A       		.uleb128 0x1a
 2214 0c6c A50A0000 		.4byte	.LASF236
 2215 0c70 0940     		.2byte	0x4009
 2216 0c72 1A       		.uleb128 0x1a
 2217 0c73 B4220000 		.4byte	.LASF237
 2218 0c77 0A40     		.2byte	0x400a
 2219 0c79 1A       		.uleb128 0x1a
 2220 0c7a 350F0000 		.4byte	.LASF238
 2221 0c7e 0B40     		.2byte	0x400b
 2222 0c80 1A       		.uleb128 0x1a
 2223 0c81 BE140000 		.4byte	.LASF239
 2224 0c85 0C40     		.2byte	0x400c
 2225 0c87 1A       		.uleb128 0x1a
 2226 0c88 65100000 		.4byte	.LASF240
 2227 0c8c 0D40     		.2byte	0x400d
 2228 0c8e 1A       		.uleb128 0x1a
 2229 0c8f FD150000 		.4byte	.LASF241
 2230 0c93 0E40     		.2byte	0x400e
 2231 0c95 1A       		.uleb128 0x1a
 2232 0c96 260B0000 		.4byte	.LASF242
 2233 0c9a 0F40     		.2byte	0x400f
 2234 0c9c 1A       		.uleb128 0x1a
 2235 0c9d 83090000 		.4byte	.LASF243
 2236 0ca1 1040     		.2byte	0x4010
 2237 0ca3 1A       		.uleb128 0x1a
 2238 0ca4 291F0000 		.4byte	.LASF244
 2239 0ca8 1140     		.2byte	0x4011
 2240 0caa 1A       		.uleb128 0x1a
 2241 0cab FF0C0000 		.4byte	.LASF245
 2242 0caf 1240     		.2byte	0x4012
 2243 0cb1 1A       		.uleb128 0x1a
 2244 0cb2 DF1A0000 		.4byte	.LASF246
 2245 0cb6 1340     		.2byte	0x4013
 2246 0cb8 1A       		.uleb128 0x1a
 2247 0cb9 DC150000 		.4byte	.LASF247
 2248 0cbd 1440     		.2byte	0x4014
 2249 0cbf 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 117


 2250 0cc0 8D060000 		.4byte	.LASF248
 2251 0cc4 1540     		.2byte	0x4015
 2252 0cc6 1A       		.uleb128 0x1a
 2253 0cc7 08220000 		.4byte	.LASF249
 2254 0ccb 1640     		.2byte	0x4016
 2255 0ccd 1A       		.uleb128 0x1a
 2256 0cce CC170000 		.4byte	.LASF250
 2257 0cd2 1740     		.2byte	0x4017
 2258 0cd4 1A       		.uleb128 0x1a
 2259 0cd5 9C120000 		.4byte	.LASF251
 2260 0cd9 1840     		.2byte	0x4018
 2261 0cdb 1A       		.uleb128 0x1a
 2262 0cdc 011A0000 		.4byte	.LASF252
 2263 0ce0 1940     		.2byte	0x4019
 2264 0ce2 1A       		.uleb128 0x1a
 2265 0ce3 0F180000 		.4byte	.LASF253
 2266 0ce7 0050     		.2byte	0x5000
 2267 0ce9 1A       		.uleb128 0x1a
 2268 0cea ED040000 		.4byte	.LASF254
 2269 0cee 0150     		.2byte	0x5001
 2270 0cf0 1A       		.uleb128 0x1a
 2271 0cf1 7A0B0000 		.4byte	.LASF255
 2272 0cf5 0250     		.2byte	0x5002
 2273 0cf7 1A       		.uleb128 0x1a
 2274 0cf8 0A200000 		.4byte	.LASF256
 2275 0cfc 0350     		.2byte	0x5003
 2276 0cfe 1A       		.uleb128 0x1a
 2277 0cff 2E070000 		.4byte	.LASF257
 2278 0d03 0450     		.2byte	0x5004
 2279 0d05 1A       		.uleb128 0x1a
 2280 0d06 2A180000 		.4byte	.LASF258
 2281 0d0a 0550     		.2byte	0x5005
 2282 0d0c 1A       		.uleb128 0x1a
 2283 0d0d A00F0000 		.4byte	.LASF259
 2284 0d11 0650     		.2byte	0x5006
 2285 0d13 1A       		.uleb128 0x1a
 2286 0d14 38040000 		.4byte	.LASF260
 2287 0d18 0750     		.2byte	0x5007
 2288 0d1a 1A       		.uleb128 0x1a
 2289 0d1b 5A050000 		.4byte	.LASF261
 2290 0d1f 0850     		.2byte	0x5008
 2291 0d21 1A       		.uleb128 0x1a
 2292 0d22 AB070000 		.4byte	.LASF262
 2293 0d26 0950     		.2byte	0x5009
 2294 0d28 1A       		.uleb128 0x1a
 2295 0d29 D6070000 		.4byte	.LASF263
 2296 0d2d 0A50     		.2byte	0x500a
 2297 0d2f 1A       		.uleb128 0x1a
 2298 0d30 391A0000 		.4byte	.LASF264
 2299 0d34 0B50     		.2byte	0x500b
 2300 0d36 1A       		.uleb128 0x1a
 2301 0d37 7D180000 		.4byte	.LASF265
 2302 0d3b 0C50     		.2byte	0x500c
 2303 0d3d 1A       		.uleb128 0x1a
 2304 0d3e 640D0000 		.4byte	.LASF266
 2305 0d42 0D50     		.2byte	0x500d
 2306 0d44 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 118


 2307 0d45 F0200000 		.4byte	.LASF267
 2308 0d49 0E50     		.2byte	0x500e
 2309 0d4b 1A       		.uleb128 0x1a
 2310 0d4c F30B0000 		.4byte	.LASF268
 2311 0d50 0F50     		.2byte	0x500f
 2312 0d52 1A       		.uleb128 0x1a
 2313 0d53 651B0000 		.4byte	.LASF269
 2314 0d57 1050     		.2byte	0x5010
 2315 0d59 1A       		.uleb128 0x1a
 2316 0d5a FD060000 		.4byte	.LASF270
 2317 0d5e 1150     		.2byte	0x5011
 2318 0d60 1A       		.uleb128 0x1a
 2319 0d61 60010000 		.4byte	.LASF271
 2320 0d65 1250     		.2byte	0x5012
 2321 0d67 1A       		.uleb128 0x1a
 2322 0d68 AB080000 		.4byte	.LASF272
 2323 0d6c 1350     		.2byte	0x5013
 2324 0d6e 1A       		.uleb128 0x1a
 2325 0d6f 4D070000 		.4byte	.LASF273
 2326 0d73 1450     		.2byte	0x5014
 2327 0d75 1A       		.uleb128 0x1a
 2328 0d76 A8090000 		.4byte	.LASF274
 2329 0d7a 1550     		.2byte	0x5015
 2330 0d7c 1A       		.uleb128 0x1a
 2331 0d7d 29200000 		.4byte	.LASF275
 2332 0d81 1650     		.2byte	0x5016
 2333 0d83 1A       		.uleb128 0x1a
 2334 0d84 9E050000 		.4byte	.LASF276
 2335 0d88 1750     		.2byte	0x5017
 2336 0d8a 1A       		.uleb128 0x1a
 2337 0d8b 18140000 		.4byte	.LASF277
 2338 0d8f 1850     		.2byte	0x5018
 2339 0d91 1A       		.uleb128 0x1a
 2340 0d92 4F210000 		.4byte	.LASF278
 2341 0d96 0060     		.2byte	0x6000
 2342 0d98 1A       		.uleb128 0x1a
 2343 0d99 6D1F0000 		.4byte	.LASF279
 2344 0d9d 0160     		.2byte	0x6001
 2345 0d9f 1A       		.uleb128 0x1a
 2346 0da0 A61D0000 		.4byte	.LASF280
 2347 0da4 0260     		.2byte	0x6002
 2348 0da6 1A       		.uleb128 0x1a
 2349 0da7 BD150000 		.4byte	.LASF281
 2350 0dab 0360     		.2byte	0x6003
 2351 0dad 1A       		.uleb128 0x1a
 2352 0dae 38120000 		.4byte	.LASF282
 2353 0db2 0460     		.2byte	0x6004
 2354 0db4 1A       		.uleb128 0x1a
 2355 0db5 321B0000 		.4byte	.LASF283
 2356 0db9 0560     		.2byte	0x6005
 2357 0dbb 1A       		.uleb128 0x1a
 2358 0dbc 940C0000 		.4byte	.LASF284
 2359 0dc0 0660     		.2byte	0x6006
 2360 0dc2 1A       		.uleb128 0x1a
 2361 0dc3 52000000 		.4byte	.LASF285
 2362 0dc7 0760     		.2byte	0x6007
 2363 0dc9 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 119


 2364 0dca A5020000 		.4byte	.LASF286
 2365 0dce 0860     		.2byte	0x6008
 2366 0dd0 1A       		.uleb128 0x1a
 2367 0dd1 F9000000 		.4byte	.LASF287
 2368 0dd5 0960     		.2byte	0x6009
 2369 0dd7 1A       		.uleb128 0x1a
 2370 0dd8 38150000 		.4byte	.LASF288
 2371 0ddc 0A60     		.2byte	0x600a
 2372 0dde 1A       		.uleb128 0x1a
 2373 0ddf 680C0000 		.4byte	.LASF289
 2374 0de3 FFFF     		.2byte	0xffff
 2375 0de5 00       		.byte	0
 2376 0de6 08       		.uleb128 0x8
 2377 0de7 C2000000 		.4byte	0xc2
 2378 0deb 14       		.uleb128 0x14
 2379 0dec 02       		.byte	0x2
 2380 0ded 10       		.byte	0x10
 2381 0dee 5B01     		.2byte	0x15b
 2382 0df0 0F0E0000 		.4byte	0xe0f
 2383 0df4 15       		.uleb128 0x15
 2384 0df5 7F200000 		.4byte	.LASF290
 2385 0df9 10       		.byte	0x10
 2386 0dfa 6501     		.2byte	0x165
 2387 0dfc C2000000 		.4byte	0xc2
 2388 0e00 00       		.byte	0
 2389 0e01 15       		.uleb128 0x15
 2390 0e02 FB0A0000 		.4byte	.LASF291
 2391 0e06 10       		.byte	0x10
 2392 0e07 6901     		.2byte	0x169
 2393 0e09 C2000000 		.4byte	0xc2
 2394 0e0d 01       		.byte	0x1
 2395 0e0e 00       		.byte	0
 2396 0e0f 11       		.uleb128 0x11
 2397 0e10 C9180000 		.4byte	.LASF292
 2398 0e14 10       		.byte	0x10
 2399 0e15 6B01     		.2byte	0x16b
 2400 0e17 EB0D0000 		.4byte	0xdeb
 2401 0e1b 1B       		.uleb128 0x1b
 2402 0e1c 01       		.byte	0x1
 2403 0e1d 5A000000 		.4byte	0x5a
 2404 0e21 11       		.byte	0x11
 2405 0e22 7E       		.byte	0x7e
 2406 0e23 400E0000 		.4byte	0xe40
 2407 0e27 13       		.uleb128 0x13
 2408 0e28 1D050000 		.4byte	.LASF293
 2409 0e2c 00       		.byte	0
 2410 0e2d 13       		.uleb128 0x13
 2411 0e2e 440A0000 		.4byte	.LASF294
 2412 0e32 01       		.byte	0x1
 2413 0e33 13       		.uleb128 0x13
 2414 0e34 E20C0000 		.4byte	.LASF295
 2415 0e38 02       		.byte	0x2
 2416 0e39 13       		.uleb128 0x13
 2417 0e3a 670E0000 		.4byte	.LASF296
 2418 0e3e 03       		.byte	0x3
 2419 0e3f 00       		.byte	0
 2420 0e40 04       		.uleb128 0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 120


 2421 0e41 F8090000 		.4byte	.LASF297
 2422 0e45 11       		.byte	0x11
 2423 0e46 83       		.byte	0x83
 2424 0e47 1B0E0000 		.4byte	0xe1b
 2425 0e4b 1B       		.uleb128 0x1b
 2426 0e4c 01       		.byte	0x1
 2427 0e4d 5A000000 		.4byte	0x5a
 2428 0e51 11       		.byte	0x11
 2429 0e52 87       		.byte	0x87
 2430 0e53 880E0000 		.4byte	0xe88
 2431 0e57 13       		.uleb128 0x13
 2432 0e58 53220000 		.4byte	.LASF298
 2433 0e5c 00       		.byte	0
 2434 0e5d 13       		.uleb128 0x13
 2435 0e5e CC060000 		.4byte	.LASF299
 2436 0e62 01       		.byte	0x1
 2437 0e63 13       		.uleb128 0x13
 2438 0e64 4D160000 		.4byte	.LASF300
 2439 0e68 02       		.byte	0x2
 2440 0e69 13       		.uleb128 0x13
 2441 0e6a 72220000 		.4byte	.LASF301
 2442 0e6e 03       		.byte	0x3
 2443 0e6f 13       		.uleb128 0x13
 2444 0e70 A9160000 		.4byte	.LASF302
 2445 0e74 04       		.byte	0x4
 2446 0e75 13       		.uleb128 0x13
 2447 0e76 970E0000 		.4byte	.LASF303
 2448 0e7a 05       		.byte	0x5
 2449 0e7b 13       		.uleb128 0x13
 2450 0e7c 22160000 		.4byte	.LASF304
 2451 0e80 06       		.byte	0x6
 2452 0e81 13       		.uleb128 0x13
 2453 0e82 C4010000 		.4byte	.LASF305
 2454 0e86 07       		.byte	0x7
 2455 0e87 00       		.byte	0
 2456 0e88 04       		.uleb128 0x4
 2457 0e89 FF030000 		.4byte	.LASF306
 2458 0e8d 11       		.byte	0x11
 2459 0e8e 90       		.byte	0x90
 2460 0e8f 4B0E0000 		.4byte	0xe4b
 2461 0e93 1B       		.uleb128 0x1b
 2462 0e94 01       		.byte	0x1
 2463 0e95 5A000000 		.4byte	0x5a
 2464 0e99 12       		.byte	0x12
 2465 0e9a 29       		.byte	0x29
 2466 0e9b DC0E0000 		.4byte	0xedc
 2467 0e9f 13       		.uleb128 0x13
 2468 0ea0 48140000 		.4byte	.LASF307
 2469 0ea4 00       		.byte	0
 2470 0ea5 13       		.uleb128 0x13
 2471 0ea6 730F0000 		.4byte	.LASF308
 2472 0eaa 01       		.byte	0x1
 2473 0eab 13       		.uleb128 0x13
 2474 0eac 90030000 		.4byte	.LASF309
 2475 0eb0 02       		.byte	0x2
 2476 0eb1 13       		.uleb128 0x13
 2477 0eb2 5C190000 		.4byte	.LASF310
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 121


 2478 0eb6 03       		.byte	0x3
 2479 0eb7 13       		.uleb128 0x13
 2480 0eb8 E6160000 		.4byte	.LASF311
 2481 0ebc 04       		.byte	0x4
 2482 0ebd 13       		.uleb128 0x13
 2483 0ebe 290C0000 		.4byte	.LASF312
 2484 0ec2 05       		.byte	0x5
 2485 0ec3 13       		.uleb128 0x13
 2486 0ec4 E01F0000 		.4byte	.LASF313
 2487 0ec8 06       		.byte	0x6
 2488 0ec9 13       		.uleb128 0x13
 2489 0eca 62030000 		.4byte	.LASF314
 2490 0ece 07       		.byte	0x7
 2491 0ecf 13       		.uleb128 0x13
 2492 0ed0 D80B0000 		.4byte	.LASF315
 2493 0ed4 08       		.byte	0x8
 2494 0ed5 13       		.uleb128 0x13
 2495 0ed6 D9000000 		.4byte	.LASF316
 2496 0eda 09       		.byte	0x9
 2497 0edb 00       		.byte	0
 2498 0edc 1B       		.uleb128 0x1b
 2499 0edd 01       		.byte	0x1
 2500 0ede 5A000000 		.4byte	0x5a
 2501 0ee2 13       		.byte	0x13
 2502 0ee3 28       		.byte	0x28
 2503 0ee4 070F0000 		.4byte	0xf07
 2504 0ee8 13       		.uleb128 0x13
 2505 0ee9 84120000 		.4byte	.LASF317
 2506 0eed 00       		.byte	0
 2507 0eee 13       		.uleb128 0x13
 2508 0eef 11000000 		.4byte	.LASF318
 2509 0ef3 01       		.byte	0x1
 2510 0ef4 13       		.uleb128 0x13
 2511 0ef5 81150000 		.4byte	.LASF319
 2512 0ef9 02       		.byte	0x2
 2513 0efa 13       		.uleb128 0x13
 2514 0efb 69160000 		.4byte	.LASF320
 2515 0eff 03       		.byte	0x3
 2516 0f00 13       		.uleb128 0x13
 2517 0f01 F00D0000 		.4byte	.LASF321
 2518 0f05 04       		.byte	0x4
 2519 0f06 00       		.byte	0
 2520 0f07 1B       		.uleb128 0x1b
 2521 0f08 01       		.byte	0x1
 2522 0f09 5A000000 		.4byte	0x5a
 2523 0f0d 13       		.byte	0x13
 2524 0f0e 32       		.byte	0x32
 2525 0f0f 260F0000 		.4byte	0xf26
 2526 0f13 13       		.uleb128 0x13
 2527 0f14 411C0000 		.4byte	.LASF322
 2528 0f18 00       		.byte	0
 2529 0f19 13       		.uleb128 0x13
 2530 0f1a D11C0000 		.4byte	.LASF323
 2531 0f1e 01       		.byte	0x1
 2532 0f1f 13       		.uleb128 0x13
 2533 0f20 951E0000 		.4byte	.LASF324
 2534 0f24 02       		.byte	0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 122


 2535 0f25 00       		.byte	0
 2536 0f26 12       		.uleb128 0x12
 2537 0f27 01       		.byte	0x1
 2538 0f28 5A000000 		.4byte	0x5a
 2539 0f2c 14       		.byte	0x14
 2540 0f2d B108     		.2byte	0x8b1
 2541 0f2f 460F0000 		.4byte	0xf46
 2542 0f33 13       		.uleb128 0x13
 2543 0f34 870E0000 		.4byte	.LASF325
 2544 0f38 00       		.byte	0
 2545 0f39 13       		.uleb128 0x13
 2546 0f3a F31C0000 		.4byte	.LASF326
 2547 0f3e 01       		.byte	0x1
 2548 0f3f 13       		.uleb128 0x13
 2549 0f40 C7000000 		.4byte	.LASF327
 2550 0f44 02       		.byte	0x2
 2551 0f45 00       		.byte	0
 2552 0f46 0B       		.uleb128 0xb
 2553 0f47 14       		.byte	0x14
 2554 0f48 04       		.byte	0x4
 2555 0f49 3B       		.byte	0x3b
 2556 0f4a 8B0F0000 		.4byte	0xf8b
 2557 0f4e 0D       		.uleb128 0xd
 2558 0f4f DE030000 		.4byte	.LASF328
 2559 0f53 04       		.byte	0x4
 2560 0f54 3D       		.byte	0x3d
 2561 0f55 E3000000 		.4byte	0xe3
 2562 0f59 00       		.byte	0
 2563 0f5a 0D       		.uleb128 0xd
 2564 0f5b 77090000 		.4byte	.LASF329
 2565 0f5f 04       		.byte	0x4
 2566 0f60 3E       		.byte	0x3e
 2567 0f61 E3000000 		.4byte	0xe3
 2568 0f65 04       		.byte	0x4
 2569 0f66 0D       		.uleb128 0xd
 2570 0f67 92040000 		.4byte	.LASF330
 2571 0f6b 04       		.byte	0x4
 2572 0f6c 3F       		.byte	0x3f
 2573 0f6d 8B0F0000 		.4byte	0xf8b
 2574 0f71 08       		.byte	0x8
 2575 0f72 0D       		.uleb128 0xd
 2576 0f73 32210000 		.4byte	.LASF331
 2577 0f77 04       		.byte	0x4
 2578 0f78 40       		.byte	0x40
 2579 0f79 E3000000 		.4byte	0xe3
 2580 0f7d 0C       		.byte	0xc
 2581 0f7e 0D       		.uleb128 0xd
 2582 0f7f A31F0000 		.4byte	.LASF332
 2583 0f83 04       		.byte	0x4
 2584 0f84 45       		.byte	0x45
 2585 0f85 E3000000 		.4byte	0xe3
 2586 0f89 10       		.byte	0x10
 2587 0f8a 00       		.byte	0
 2588 0f8b 06       		.uleb128 0x6
 2589 0f8c 04       		.byte	0x4
 2590 0f8d 910F0000 		.4byte	0xf91
 2591 0f91 08       		.uleb128 0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 123


 2592 0f92 A80A0000 		.4byte	0xaa8
 2593 0f96 04       		.uleb128 0x4
 2594 0f97 6F150000 		.4byte	.LASF333
 2595 0f9b 04       		.byte	0x4
 2596 0f9c 48       		.byte	0x48
 2597 0f9d 460F0000 		.4byte	0xf46
 2598 0fa1 04       		.uleb128 0x4
 2599 0fa2 35130000 		.4byte	.LASF334
 2600 0fa6 15       		.byte	0x15
 2601 0fa7 62       		.byte	0x62
 2602 0fa8 85000000 		.4byte	0x85
 2603 0fac 04       		.uleb128 0x4
 2604 0fad 9E160000 		.4byte	.LASF335
 2605 0fb1 15       		.byte	0x15
 2606 0fb2 69       		.byte	0x69
 2607 0fb3 E3000000 		.4byte	0xe3
 2608 0fb7 04       		.uleb128 0x4
 2609 0fb8 41100000 		.4byte	.LASF336
 2610 0fbc 16       		.byte	0x16
 2611 0fbd 58       		.byte	0x58
 2612 0fbe AC000000 		.4byte	0xac
 2613 0fc2 1B       		.uleb128 0x1b
 2614 0fc3 01       		.byte	0x1
 2615 0fc4 5A000000 		.4byte	0x5a
 2616 0fc8 17       		.byte	0x17
 2617 0fc9 3A       		.byte	0x3a
 2618 0fca E70F0000 		.4byte	0xfe7
 2619 0fce 13       		.uleb128 0x13
 2620 0fcf F5070000 		.4byte	.LASF337
 2621 0fd3 00       		.byte	0
 2622 0fd4 13       		.uleb128 0x13
 2623 0fd5 14170000 		.4byte	.LASF338
 2624 0fd9 01       		.byte	0x1
 2625 0fda 13       		.uleb128 0x13
 2626 0fdb F51F0000 		.4byte	.LASF339
 2627 0fdf 02       		.byte	0x2
 2628 0fe0 13       		.uleb128 0x13
 2629 0fe1 97010000 		.4byte	.LASF340
 2630 0fe5 03       		.byte	0x3
 2631 0fe6 00       		.byte	0
 2632 0fe7 04       		.uleb128 0x4
 2633 0fe8 84210000 		.4byte	.LASF341
 2634 0fec 17       		.byte	0x17
 2635 0fed 3F       		.byte	0x3f
 2636 0fee C20F0000 		.4byte	0xfc2
 2637 0ff2 0B       		.uleb128 0xb
 2638 0ff3 08       		.byte	0x8
 2639 0ff4 02       		.byte	0x2
 2640 0ff5 78       		.byte	0x78
 2641 0ff6 13100000 		.4byte	0x1013
 2642 0ffa 0D       		.uleb128 0xd
 2643 0ffb 681A0000 		.4byte	.LASF342
 2644 0fff 02       		.byte	0x2
 2645 1000 7A       		.byte	0x7a
 2646 1001 AE000000 		.4byte	0xae
 2647 1005 00       		.byte	0
 2648 1006 0D       		.uleb128 0xd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 124


 2649 1007 041D0000 		.4byte	.LASF343
 2650 100b 02       		.byte	0x2
 2651 100c 7B       		.byte	0x7b
 2652 100d E3000000 		.4byte	0xe3
 2653 1011 04       		.byte	0x4
 2654 1012 00       		.byte	0
 2655 1013 04       		.uleb128 0x4
 2656 1014 071B0000 		.4byte	.LASF344
 2657 1018 02       		.byte	0x2
 2658 1019 7C       		.byte	0x7c
 2659 101a F20F0000 		.4byte	0xff2
 2660 101e 1B       		.uleb128 0x1b
 2661 101f 01       		.byte	0x1
 2662 1020 5A000000 		.4byte	0x5a
 2663 1024 18       		.byte	0x18
 2664 1025 3C       		.byte	0x3c
 2665 1026 3D100000 		.4byte	0x103d
 2666 102a 13       		.uleb128 0x13
 2667 102b 40130000 		.4byte	.LASF345
 2668 102f 00       		.byte	0
 2669 1030 13       		.uleb128 0x13
 2670 1031 57040000 		.4byte	.LASF346
 2671 1035 01       		.byte	0x1
 2672 1036 13       		.uleb128 0x13
 2673 1037 D10F0000 		.4byte	.LASF347
 2674 103b 02       		.byte	0x2
 2675 103c 00       		.byte	0
 2676 103d 04       		.uleb128 0x4
 2677 103e E4090000 		.4byte	.LASF348
 2678 1042 18       		.byte	0x18
 2679 1043 40       		.byte	0x40
 2680 1044 1E100000 		.4byte	0x101e
 2681 1048 0B       		.uleb128 0xb
 2682 1049 08       		.byte	0x8
 2683 104a 18       		.byte	0x18
 2684 104b 43       		.byte	0x43
 2685 104c 69100000 		.4byte	0x1069
 2686 1050 0D       		.uleb128 0xd
 2687 1051 30150000 		.4byte	.LASF349
 2688 1055 18       		.byte	0x18
 2689 1056 45       		.byte	0x45
 2690 1057 3D100000 		.4byte	0x103d
 2691 105b 00       		.byte	0
 2692 105c 0D       		.uleb128 0xd
 2693 105d 03110000 		.4byte	.LASF350
 2694 1061 18       		.byte	0x18
 2695 1062 46       		.byte	0x46
 2696 1063 25000000 		.4byte	0x25
 2697 1067 04       		.byte	0x4
 2698 1068 00       		.byte	0
 2699 1069 04       		.uleb128 0x4
 2700 106a 4C200000 		.4byte	.LASF351
 2701 106e 18       		.byte	0x18
 2702 106f 47       		.byte	0x47
 2703 1070 48100000 		.4byte	0x1048
 2704 1074 04       		.uleb128 0x4
 2705 1075 4E080000 		.4byte	.LASF352
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 125


 2706 1079 19       		.byte	0x19
 2707 107a 76       		.byte	0x76
 2708 107b AC000000 		.4byte	0xac
 2709 107f 1C       		.uleb128 0x1c
 2710 1080 821A0000 		.4byte	.LASF356
 2711 1084 02       		.byte	0x2
 2712 1085 8E       		.byte	0x8e
 2713 1086 03       		.byte	0x3
 2714 1087 AD100000 		.4byte	0x10ad
 2715 108b 1D       		.uleb128 0x1d
 2716 108c 50050000 		.4byte	.LASF353
 2717 1090 02       		.byte	0x2
 2718 1091 8E       		.byte	0x8e
 2719 1092 AE000000 		.4byte	0xae
 2720 1096 1D       		.uleb128 0x1d
 2721 1097 8B0F0000 		.4byte	.LASF354
 2722 109b 02       		.byte	0x2
 2723 109c 8E       		.byte	0x8e
 2724 109d E3000000 		.4byte	0xe3
 2725 10a1 1E       		.uleb128 0x1e
 2726 10a2 2F1A0000 		.4byte	.LASF369
 2727 10a6 02       		.byte	0x2
 2728 10a7 90       		.byte	0x90
 2729 10a8 13100000 		.4byte	0x1013
 2730 10ac 00       		.byte	0
 2731 10ad 1F       		.uleb128 0x1f
 2732 10ae 291D0000 		.4byte	.LASF371
 2733 10b2 03       		.byte	0x3
 2734 10b3 FB05     		.2byte	0x5fb
 2735 10b5 E3000000 		.4byte	0xe3
 2736 10b9 03       		.byte	0x3
 2737 10ba CB100000 		.4byte	0x10cb
 2738 10be 20       		.uleb128 0x20
 2739 10bf 29090000 		.4byte	.LASF355
 2740 10c3 03       		.byte	0x3
 2741 10c4 FB05     		.2byte	0x5fb
 2742 10c6 CB100000 		.4byte	0x10cb
 2743 10ca 00       		.byte	0
 2744 10cb 06       		.uleb128 0x6
 2745 10cc 04       		.byte	0x4
 2746 10cd D1100000 		.4byte	0x10d1
 2747 10d1 08       		.uleb128 0x8
 2748 10d2 17060000 		.4byte	0x617
 2749 10d6 21       		.uleb128 0x21
 2750 10d7 10150000 		.4byte	.LASF357
 2751 10db 03       		.byte	0x3
 2752 10dc 1706     		.2byte	0x617
 2753 10de 03       		.byte	0x3
 2754 10df FC100000 		.4byte	0x10fc
 2755 10e3 20       		.uleb128 0x20
 2756 10e4 29090000 		.4byte	.LASF355
 2757 10e8 03       		.byte	0x3
 2758 10e9 1706     		.2byte	0x617
 2759 10eb FC100000 		.4byte	0x10fc
 2760 10ef 20       		.uleb128 0x20
 2761 10f0 9C220000 		.4byte	.LASF167
 2762 10f4 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 126


 2763 10f5 1706     		.2byte	0x617
 2764 10f7 E3000000 		.4byte	0xe3
 2765 10fb 00       		.byte	0
 2766 10fc 06       		.uleb128 0x6
 2767 10fd 04       		.byte	0x4
 2768 10fe 17060000 		.4byte	0x617
 2769 1102 21       		.uleb128 0x21
 2770 1103 2C1E0000 		.4byte	.LASF358
 2771 1107 05       		.byte	0x5
 2772 1108 4503     		.2byte	0x345
 2773 110a 03       		.byte	0x3
 2774 110b 28110000 		.4byte	0x1128
 2775 110f 20       		.uleb128 0x20
 2776 1110 29090000 		.4byte	.LASF355
 2777 1114 05       		.byte	0x5
 2778 1115 4503     		.2byte	0x345
 2779 1117 28110000 		.4byte	0x1128
 2780 111b 20       		.uleb128 0x20
 2781 111c 9F1D0000 		.4byte	.LASF359
 2782 1120 05       		.byte	0x5
 2783 1121 4503     		.2byte	0x345
 2784 1123 E3000000 		.4byte	0xe3
 2785 1127 00       		.byte	0
 2786 1128 06       		.uleb128 0x6
 2787 1129 04       		.byte	0x4
 2788 112a 26020000 		.4byte	0x226
 2789 112e 22       		.uleb128 0x22
 2790 112f D30E0000 		.4byte	.LASF360
 2791 1133 04       		.byte	0x4
 2792 1134 2305     		.2byte	0x523
 2793 1136 03       		.byte	0x3
 2794 1137 22       		.uleb128 0x22
 2795 1138 9A210000 		.4byte	.LASF361
 2796 113c 04       		.byte	0x4
 2797 113d 4605     		.2byte	0x546
 2798 113f 03       		.byte	0x3
 2799 1140 21       		.uleb128 0x21
 2800 1141 971A0000 		.4byte	.LASF362
 2801 1145 05       		.byte	0x5
 2802 1146 2703     		.2byte	0x327
 2803 1148 03       		.byte	0x3
 2804 1149 66110000 		.4byte	0x1166
 2805 114d 20       		.uleb128 0x20
 2806 114e 29090000 		.4byte	.LASF355
 2807 1152 05       		.byte	0x5
 2808 1153 2703     		.2byte	0x327
 2809 1155 28110000 		.4byte	0x1128
 2810 1159 20       		.uleb128 0x20
 2811 115a 9F1D0000 		.4byte	.LASF359
 2812 115e 05       		.byte	0x5
 2813 115f 2703     		.2byte	0x327
 2814 1161 E3000000 		.4byte	0xe3
 2815 1165 00       		.byte	0
 2816 1166 23       		.uleb128 0x23
 2817 1167 CC110000 		.4byte	.LASF365
 2818 116b 01       		.byte	0x1
 2819 116c 2001     		.2byte	0x120
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 127


 2820 116e 00000000 		.4byte	.LFB716
 2821 1172 44000000 		.4byte	.LFE716-.LFB716
 2822 1176 01       		.uleb128 0x1
 2823 1177 9C       		.byte	0x9c
 2824 1178 19120000 		.4byte	0x1219
 2825 117c 24       		.uleb128 0x24
 2826 117d CE1B0000 		.4byte	.LASF368
 2827 1181 01       		.byte	0x1
 2828 1182 2001     		.2byte	0x120
 2829 1184 74100000 		.4byte	0x1074
 2830 1188 00000000 		.4byte	.LLST0
 2831 118c 25       		.uleb128 0x25
 2832 118d BB180000 		.4byte	.LASF363
 2833 1191 01       		.byte	0x1
 2834 1192 2301     		.2byte	0x123
 2835 1194 A10F0000 		.4byte	0xfa1
 2836 1198 21000000 		.4byte	.LLST1
 2837 119c 26       		.uleb128 0x26
 2838 119d C3100000 		.4byte	.LASF364
 2839 11a1 01       		.byte	0x1
 2840 11a2 2901     		.2byte	0x129
 2841 11a4 E70F0000 		.4byte	0xfe7
 2842 11a8 02       		.uleb128 0x2
 2843 11a9 91       		.byte	0x91
 2844 11aa 77       		.sleb128 -9
 2845 11ab 27       		.uleb128 0x27
 2846 11ac 7F100000 		.4byte	0x107f
 2847 11b0 1C000000 		.4byte	.LBB30
 2848 11b4 14000000 		.4byte	.LBE30-.LBB30
 2849 11b8 01       		.byte	0x1
 2850 11b9 3001     		.2byte	0x130
 2851 11bb FE110000 		.4byte	0x11fe
 2852 11bf 28       		.uleb128 0x28
 2853 11c0 96100000 		.4byte	0x1096
 2854 11c4 34000000 		.4byte	.LLST2
 2855 11c8 28       		.uleb128 0x28
 2856 11c9 8B100000 		.4byte	0x108b
 2857 11cd 48000000 		.4byte	.LLST3
 2858 11d1 29       		.uleb128 0x29
 2859 11d2 1C000000 		.4byte	.LBB31
 2860 11d6 14000000 		.4byte	.LBE31-.LBB31
 2861 11da 2A       		.uleb128 0x2a
 2862 11db A1100000 		.4byte	0x10a1
 2863 11df 02       		.uleb128 0x2
 2864 11e0 91       		.byte	0x91
 2865 11e1 6C       		.sleb128 -20
 2866 11e2 2B       		.uleb128 0x2b
 2867 11e3 30000000 		.4byte	.LVL5
 2868 11e7 DD190000 		.4byte	0x19dd
 2869 11eb 2C       		.uleb128 0x2c
 2870 11ec 01       		.uleb128 0x1
 2871 11ed 51       		.byte	0x51
 2872 11ee 02       		.uleb128 0x2
 2873 11ef 91       		.byte	0x91
 2874 11f0 6C       		.sleb128 -20
 2875 11f1 2C       		.uleb128 0x2c
 2876 11f2 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 128


 2877 11f3 52       		.byte	0x52
 2878 11f4 01       		.uleb128 0x1
 2879 11f5 30       		.byte	0x30
 2880 11f6 2C       		.uleb128 0x2c
 2881 11f7 01       		.uleb128 0x1
 2882 11f8 53       		.byte	0x53
 2883 11f9 01       		.uleb128 0x1
 2884 11fa 30       		.byte	0x30
 2885 11fb 00       		.byte	0
 2886 11fc 00       		.byte	0
 2887 11fd 00       		.byte	0
 2888 11fe 2B       		.uleb128 0x2b
 2889 11ff 18000000 		.4byte	.LVL2
 2890 1203 DD190000 		.4byte	0x19dd
 2891 1207 2C       		.uleb128 0x2c
 2892 1208 01       		.uleb128 0x1
 2893 1209 51       		.byte	0x51
 2894 120a 02       		.uleb128 0x2
 2895 120b 91       		.byte	0x91
 2896 120c 77       		.sleb128 -9
 2897 120d 2C       		.uleb128 0x2c
 2898 120e 01       		.uleb128 0x1
 2899 120f 52       		.byte	0x52
 2900 1210 01       		.uleb128 0x1
 2901 1211 30       		.byte	0x30
 2902 1212 2C       		.uleb128 0x2c
 2903 1213 01       		.uleb128 0x1
 2904 1214 53       		.byte	0x53
 2905 1215 01       		.uleb128 0x1
 2906 1216 30       		.byte	0x30
 2907 1217 00       		.byte	0
 2908 1218 00       		.byte	0
 2909 1219 23       		.uleb128 0x23
 2910 121a 4F100000 		.4byte	.LASF366
 2911 121e 01       		.byte	0x1
 2912 121f 4301     		.2byte	0x143
 2913 1221 00000000 		.4byte	.LFB717
 2914 1225 7C000000 		.4byte	.LFE717-.LFB717
 2915 1229 01       		.uleb128 0x1
 2916 122a 9C       		.byte	0x9c
 2917 122b 41130000 		.4byte	0x1341
 2918 122f 25       		.uleb128 0x25
 2919 1230 BB180000 		.4byte	.LASF363
 2920 1234 01       		.byte	0x1
 2921 1235 4601     		.2byte	0x146
 2922 1237 A10F0000 		.4byte	0xfa1
 2923 123b 60000000 		.4byte	.LLST4
 2924 123f 27       		.uleb128 0x27
 2925 1240 7F100000 		.4byte	0x107f
 2926 1244 34000000 		.4byte	.LBB32
 2927 1248 16000000 		.4byte	.LBE32-.LBB32
 2928 124c 01       		.byte	0x1
 2929 124d 5601     		.2byte	0x156
 2930 124f 92120000 		.4byte	0x1292
 2931 1253 28       		.uleb128 0x28
 2932 1254 96100000 		.4byte	0x1096
 2933 1258 73000000 		.4byte	.LLST5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 129


 2934 125c 28       		.uleb128 0x28
 2935 125d 8B100000 		.4byte	0x108b
 2936 1261 87000000 		.4byte	.LLST6
 2937 1265 29       		.uleb128 0x29
 2938 1266 34000000 		.4byte	.LBB33
 2939 126a 16000000 		.4byte	.LBE33-.LBB33
 2940 126e 2A       		.uleb128 0x2a
 2941 126f A1100000 		.4byte	0x10a1
 2942 1273 02       		.uleb128 0x2
 2943 1274 91       		.byte	0x91
 2944 1275 70       		.sleb128 -16
 2945 1276 2B       		.uleb128 0x2b
 2946 1277 48000000 		.4byte	.LVL11
 2947 127b DD190000 		.4byte	0x19dd
 2948 127f 2C       		.uleb128 0x2c
 2949 1280 01       		.uleb128 0x1
 2950 1281 51       		.byte	0x51
 2951 1282 02       		.uleb128 0x2
 2952 1283 91       		.byte	0x91
 2953 1284 70       		.sleb128 -16
 2954 1285 2C       		.uleb128 0x2c
 2955 1286 01       		.uleb128 0x1
 2956 1287 52       		.byte	0x52
 2957 1288 01       		.uleb128 0x1
 2958 1289 30       		.byte	0x30
 2959 128a 2C       		.uleb128 0x2c
 2960 128b 01       		.uleb128 0x1
 2961 128c 53       		.byte	0x53
 2962 128d 01       		.uleb128 0x1
 2963 128e 30       		.byte	0x30
 2964 128f 00       		.byte	0
 2965 1290 00       		.byte	0
 2966 1291 00       		.byte	0
 2967 1292 27       		.uleb128 0x27
 2968 1293 7F100000 		.4byte	0x107f
 2969 1297 4A000000 		.4byte	.LBB34
 2970 129b 14000000 		.4byte	.LBE34-.LBB34
 2971 129f 01       		.byte	0x1
 2972 12a0 5B01     		.2byte	0x15b
 2973 12a2 E5120000 		.4byte	0x12e5
 2974 12a6 28       		.uleb128 0x28
 2975 12a7 96100000 		.4byte	0x1096
 2976 12ab 9F000000 		.4byte	.LLST7
 2977 12af 28       		.uleb128 0x28
 2978 12b0 8B100000 		.4byte	0x108b
 2979 12b4 B3000000 		.4byte	.LLST8
 2980 12b8 29       		.uleb128 0x29
 2981 12b9 4A000000 		.4byte	.LBB35
 2982 12bd 14000000 		.4byte	.LBE35-.LBB35
 2983 12c1 2A       		.uleb128 0x2a
 2984 12c2 A1100000 		.4byte	0x10a1
 2985 12c6 02       		.uleb128 0x2
 2986 12c7 91       		.byte	0x91
 2987 12c8 70       		.sleb128 -16
 2988 12c9 2B       		.uleb128 0x2b
 2989 12ca 5E000000 		.4byte	.LVL13
 2990 12ce DD190000 		.4byte	0x19dd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 130


 2991 12d2 2C       		.uleb128 0x2c
 2992 12d3 01       		.uleb128 0x1
 2993 12d4 51       		.byte	0x51
 2994 12d5 02       		.uleb128 0x2
 2995 12d6 91       		.byte	0x91
 2996 12d7 70       		.sleb128 -16
 2997 12d8 2C       		.uleb128 0x2c
 2998 12d9 01       		.uleb128 0x1
 2999 12da 52       		.byte	0x52
 3000 12db 01       		.uleb128 0x1
 3001 12dc 30       		.byte	0x30
 3002 12dd 2C       		.uleb128 0x2c
 3003 12de 01       		.uleb128 0x1
 3004 12df 53       		.byte	0x53
 3005 12e0 01       		.uleb128 0x1
 3006 12e1 30       		.byte	0x30
 3007 12e2 00       		.byte	0
 3008 12e3 00       		.byte	0
 3009 12e4 00       		.byte	0
 3010 12e5 2D       		.uleb128 0x2d
 3011 12e6 16000000 		.4byte	.LVL6
 3012 12ea E9190000 		.4byte	0x19e9
 3013 12ee 17130000 		.4byte	0x1317
 3014 12f2 2C       		.uleb128 0x2c
 3015 12f3 01       		.uleb128 0x1
 3016 12f4 50       		.byte	0x50
 3017 12f5 05       		.uleb128 0x5
 3018 12f6 03       		.byte	0x3
 3019 12f7 3C000000 		.4byte	.LC1
 3020 12fb 2C       		.uleb128 0x2c
 3021 12fc 01       		.uleb128 0x1
 3022 12fd 51       		.byte	0x51
 3023 12fe 03       		.uleb128 0x3
 3024 12ff 0A       		.byte	0xa
 3025 1300 1027     		.2byte	0x2710
 3026 1302 2C       		.uleb128 0x2c
 3027 1303 01       		.uleb128 0x1
 3028 1304 52       		.byte	0x52
 3029 1305 01       		.uleb128 0x1
 3030 1306 31       		.byte	0x31
 3031 1307 2C       		.uleb128 0x2c
 3032 1308 01       		.uleb128 0x1
 3033 1309 53       		.byte	0x53
 3034 130a 01       		.uleb128 0x1
 3035 130b 30       		.byte	0x30
 3036 130c 2C       		.uleb128 0x2c
 3037 130d 02       		.uleb128 0x2
 3038 130e 7D       		.byte	0x7d
 3039 130f 00       		.sleb128 0
 3040 1310 05       		.uleb128 0x5
 3041 1311 03       		.byte	0x3
 3042 1312 00000000 		.4byte	TemperatureTimerCallback
 3043 1316 00       		.byte	0
 3044 1317 2E       		.uleb128 0x2e
 3045 1318 22000000 		.4byte	.LVL7
 3046 131c F5190000 		.4byte	0x19f5
 3047 1320 2B       		.uleb128 0x2b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 131


 3048 1321 30000000 		.4byte	.LVL8
 3049 1325 011A0000 		.4byte	0x1a01
 3050 1329 2C       		.uleb128 0x2c
 3051 132a 01       		.uleb128 0x1
 3052 132b 50       		.byte	0x50
 3053 132c 02       		.uleb128 0x2
 3054 132d 74       		.byte	0x74
 3055 132e 00       		.sleb128 0
 3056 132f 2C       		.uleb128 0x2c
 3057 1330 01       		.uleb128 0x1
 3058 1331 51       		.byte	0x51
 3059 1332 01       		.uleb128 0x1
 3060 1333 31       		.byte	0x31
 3061 1334 2C       		.uleb128 0x2c
 3062 1335 01       		.uleb128 0x1
 3063 1336 53       		.byte	0x53
 3064 1337 01       		.uleb128 0x1
 3065 1338 30       		.byte	0x30
 3066 1339 2C       		.uleb128 0x2c
 3067 133a 02       		.uleb128 0x2
 3068 133b 7D       		.byte	0x7d
 3069 133c 00       		.sleb128 0
 3070 133d 01       		.uleb128 0x1
 3071 133e 30       		.byte	0x30
 3072 133f 00       		.byte	0
 3073 1340 00       		.byte	0
 3074 1341 23       		.uleb128 0x23
 3075 1342 50020000 		.4byte	.LASF367
 3076 1346 01       		.byte	0x1
 3077 1347 6C01     		.2byte	0x16c
 3078 1349 00000000 		.4byte	.LFB718
 3079 134d 40000000 		.4byte	.LFE718-.LFB718
 3080 1351 01       		.uleb128 0x1
 3081 1352 9C       		.byte	0x9c
 3082 1353 F2130000 		.4byte	0x13f2
 3083 1357 24       		.uleb128 0x24
 3084 1358 A2200000 		.4byte	.LASF107
 3085 135c 01       		.byte	0x1
 3086 135d 6C01     		.2byte	0x16c
 3087 135f AC0F0000 		.4byte	0xfac
 3088 1363 CB000000 		.4byte	.LLST9
 3089 1367 25       		.uleb128 0x25
 3090 1368 BB180000 		.4byte	.LASF363
 3091 136c 01       		.byte	0x1
 3092 136d 6F01     		.2byte	0x16f
 3093 136f A10F0000 		.4byte	0xfa1
 3094 1373 F7000000 		.4byte	.LLST10
 3095 1377 27       		.uleb128 0x27
 3096 1378 7F100000 		.4byte	0x107f
 3097 137c 1A000000 		.4byte	.LBB36
 3098 1380 14000000 		.4byte	.LBE36-.LBB36
 3099 1384 01       		.byte	0x1
 3100 1385 7701     		.2byte	0x177
 3101 1387 CA130000 		.4byte	0x13ca
 3102 138b 28       		.uleb128 0x28
 3103 138c 96100000 		.4byte	0x1096
 3104 1390 0A010000 		.4byte	.LLST11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 132


 3105 1394 28       		.uleb128 0x28
 3106 1395 8B100000 		.4byte	0x108b
 3107 1399 1E010000 		.4byte	.LLST12
 3108 139d 29       		.uleb128 0x29
 3109 139e 1A000000 		.4byte	.LBB37
 3110 13a2 14000000 		.4byte	.LBE37-.LBB37
 3111 13a6 2A       		.uleb128 0x2a
 3112 13a7 A1100000 		.4byte	0x10a1
 3113 13ab 02       		.uleb128 0x2
 3114 13ac 91       		.byte	0x91
 3115 13ad 70       		.sleb128 -16
 3116 13ae 2B       		.uleb128 0x2b
 3117 13af 2E000000 		.4byte	.LVL19
 3118 13b3 DD190000 		.4byte	0x19dd
 3119 13b7 2C       		.uleb128 0x2c
 3120 13b8 01       		.uleb128 0x1
 3121 13b9 51       		.byte	0x51
 3122 13ba 02       		.uleb128 0x2
 3123 13bb 91       		.byte	0x91
 3124 13bc 70       		.sleb128 -16
 3125 13bd 2C       		.uleb128 0x2c
 3126 13be 01       		.uleb128 0x1
 3127 13bf 52       		.byte	0x52
 3128 13c0 01       		.uleb128 0x1
 3129 13c1 30       		.byte	0x30
 3130 13c2 2C       		.uleb128 0x2c
 3131 13c3 01       		.uleb128 0x1
 3132 13c4 53       		.byte	0x53
 3133 13c5 01       		.uleb128 0x1
 3134 13c6 30       		.byte	0x30
 3135 13c7 00       		.byte	0
 3136 13c8 00       		.byte	0
 3137 13c9 00       		.byte	0
 3138 13ca 2B       		.uleb128 0x2b
 3139 13cb 16000000 		.4byte	.LVL16
 3140 13cf 011A0000 		.4byte	0x1a01
 3141 13d3 2C       		.uleb128 0x2c
 3142 13d4 01       		.uleb128 0x1
 3143 13d5 50       		.byte	0x50
 3144 13d6 02       		.uleb128 0x2
 3145 13d7 74       		.byte	0x74
 3146 13d8 00       		.sleb128 0
 3147 13d9 2C       		.uleb128 0x2c
 3148 13da 01       		.uleb128 0x1
 3149 13db 51       		.byte	0x51
 3150 13dc 01       		.uleb128 0x1
 3151 13dd 34       		.byte	0x34
 3152 13de 2C       		.uleb128 0x2c
 3153 13df 01       		.uleb128 0x1
 3154 13e0 52       		.byte	0x52
 3155 13e1 03       		.uleb128 0x3
 3156 13e2 F3       		.byte	0xf3
 3157 13e3 01       		.uleb128 0x1
 3158 13e4 50       		.byte	0x50
 3159 13e5 2C       		.uleb128 0x2c
 3160 13e6 01       		.uleb128 0x1
 3161 13e7 53       		.byte	0x53
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 133


 3162 13e8 01       		.uleb128 0x1
 3163 13e9 30       		.byte	0x30
 3164 13ea 2C       		.uleb128 0x2c
 3165 13eb 02       		.uleb128 0x2
 3166 13ec 7D       		.byte	0x7d
 3167 13ed 00       		.sleb128 0
 3168 13ee 01       		.uleb128 0x1
 3169 13ef 30       		.byte	0x30
 3170 13f0 00       		.byte	0
 3171 13f1 00       		.byte	0
 3172 13f2 2F       		.uleb128 0x2f
 3173 13f3 F9010000 		.4byte	.LASF418
 3174 13f7 01       		.byte	0x1
 3175 13f8 F4       		.byte	0xf4
 3176 13f9 00000000 		.4byte	.LFB715
 3177 13fd 6C000000 		.4byte	.LFE715-.LFB715
 3178 1401 01       		.uleb128 0x1
 3179 1402 9C       		.byte	0x9c
 3180 1403 16150000 		.4byte	0x1516
 3181 1407 30       		.uleb128 0x30
 3182 1408 BB180000 		.4byte	.LASF363
 3183 140c 01       		.byte	0x1
 3184 140d F7       		.byte	0xf7
 3185 140e A10F0000 		.4byte	0xfa1
 3186 1412 36010000 		.4byte	.LLST13
 3187 1416 1E       		.uleb128 0x1e
 3188 1417 6E0B0000 		.4byte	.LASF370
 3189 141b 01       		.byte	0x1
 3190 141c FA       		.byte	0xfa
 3191 141d E3000000 		.4byte	0xe3
 3192 1421 26       		.uleb128 0x26
 3193 1422 C3100000 		.4byte	.LASF364
 3194 1426 01       		.byte	0x1
 3195 1427 0701     		.2byte	0x107
 3196 1429 E70F0000 		.4byte	0xfe7
 3197 142d 02       		.uleb128 0x2
 3198 142e 91       		.byte	0x91
 3199 142f 77       		.sleb128 -9
 3200 1430 31       		.uleb128 0x31
 3201 1431 AD100000 		.4byte	0x10ad
 3202 1435 04000000 		.4byte	.LBB38
 3203 1439 06000000 		.4byte	.LBE38-.LBB38
 3204 143d 01       		.byte	0x1
 3205 143e FD       		.byte	0xfd
 3206 143f 4D140000 		.4byte	0x144d
 3207 1443 28       		.uleb128 0x28
 3208 1444 BE100000 		.4byte	0x10be
 3209 1448 49010000 		.4byte	.LLST14
 3210 144c 00       		.byte	0
 3211 144d 27       		.uleb128 0x27
 3212 144e D6100000 		.4byte	0x10d6
 3213 1452 0A000000 		.4byte	.LBB40
 3214 1456 18000000 		.4byte	.LBE40-.LBB40
 3215 145a 01       		.byte	0x1
 3216 145b 0001     		.2byte	0x100
 3217 145d 8A140000 		.4byte	0x148a
 3218 1461 32       		.uleb128 0x32
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 134


 3219 1462 EF100000 		.4byte	0x10ef
 3220 1466 28       		.uleb128 0x28
 3221 1467 E3100000 		.4byte	0x10e3
 3222 146b 61010000 		.4byte	.LLST15
 3223 146f 2B       		.uleb128 0x2b
 3224 1470 18000000 		.4byte	.LVL22
 3225 1474 0D1A0000 		.4byte	0x1a0d
 3226 1478 2C       		.uleb128 0x2c
 3227 1479 01       		.uleb128 0x1
 3228 147a 50       		.byte	0x50
 3229 147b 05       		.uleb128 0x5
 3230 147c 03       		.byte	0x3
 3231 147d D4000000 		.4byte	.LC5
 3232 1481 2C       		.uleb128 0x2c
 3233 1482 01       		.uleb128 0x1
 3234 1483 51       		.byte	0x51
 3235 1484 03       		.uleb128 0x3
 3236 1485 0A       		.byte	0xa
 3237 1486 1906     		.2byte	0x619
 3238 1488 00       		.byte	0
 3239 1489 00       		.byte	0
 3240 148a 27       		.uleb128 0x27
 3241 148b AD100000 		.4byte	0x10ad
 3242 148f 22000000 		.4byte	.LBB42
 3243 1493 04000000 		.4byte	.LBE42-.LBB42
 3244 1497 01       		.byte	0x1
 3245 1498 0401     		.2byte	0x104
 3246 149a A8140000 		.4byte	0x14a8
 3247 149e 28       		.uleb128 0x28
 3248 149f BE100000 		.4byte	0x10be
 3249 14a3 79010000 		.4byte	.LLST16
 3250 14a7 00       		.byte	0
 3251 14a8 27       		.uleb128 0x27
 3252 14a9 7F100000 		.4byte	0x107f
 3253 14ad 3E000000 		.4byte	.LBB44
 3254 14b1 14000000 		.4byte	.LBE44-.LBB44
 3255 14b5 01       		.byte	0x1
 3256 14b6 0E01     		.2byte	0x10e
 3257 14b8 FB140000 		.4byte	0x14fb
 3258 14bc 28       		.uleb128 0x28
 3259 14bd 96100000 		.4byte	0x1096
 3260 14c1 91010000 		.4byte	.LLST17
 3261 14c5 28       		.uleb128 0x28
 3262 14c6 8B100000 		.4byte	0x108b
 3263 14ca A5010000 		.4byte	.LLST18
 3264 14ce 29       		.uleb128 0x29
 3265 14cf 3E000000 		.4byte	.LBB45
 3266 14d3 14000000 		.4byte	.LBE45-.LBB45
 3267 14d7 2A       		.uleb128 0x2a
 3268 14d8 A1100000 		.4byte	0x10a1
 3269 14dc 02       		.uleb128 0x2
 3270 14dd 91       		.byte	0x91
 3271 14de 6C       		.sleb128 -20
 3272 14df 2B       		.uleb128 0x2b
 3273 14e0 52000000 		.4byte	.LVL28
 3274 14e4 DD190000 		.4byte	0x19dd
 3275 14e8 2C       		.uleb128 0x2c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 135


 3276 14e9 01       		.uleb128 0x1
 3277 14ea 51       		.byte	0x51
 3278 14eb 02       		.uleb128 0x2
 3279 14ec 91       		.byte	0x91
 3280 14ed 6C       		.sleb128 -20
 3281 14ee 2C       		.uleb128 0x2c
 3282 14ef 01       		.uleb128 0x1
 3283 14f0 52       		.byte	0x52
 3284 14f1 01       		.uleb128 0x1
 3285 14f2 30       		.byte	0x30
 3286 14f3 2C       		.uleb128 0x2c
 3287 14f4 01       		.uleb128 0x1
 3288 14f5 53       		.byte	0x53
 3289 14f6 01       		.uleb128 0x1
 3290 14f7 30       		.byte	0x30
 3291 14f8 00       		.byte	0
 3292 14f9 00       		.byte	0
 3293 14fa 00       		.byte	0
 3294 14fb 2B       		.uleb128 0x2b
 3295 14fc 3A000000 		.4byte	.LVL25
 3296 1500 191A0000 		.4byte	0x1a19
 3297 1504 2C       		.uleb128 0x2c
 3298 1505 01       		.uleb128 0x1
 3299 1506 51       		.byte	0x51
 3300 1507 02       		.uleb128 0x2
 3301 1508 91       		.byte	0x91
 3302 1509 77       		.sleb128 -9
 3303 150a 2C       		.uleb128 0x2c
 3304 150b 01       		.uleb128 0x1
 3305 150c 52       		.byte	0x52
 3306 150d 01       		.uleb128 0x1
 3307 150e 30       		.byte	0x30
 3308 150f 2C       		.uleb128 0x2c
 3309 1510 01       		.uleb128 0x1
 3310 1511 53       		.byte	0x53
 3311 1512 01       		.uleb128 0x1
 3312 1513 30       		.byte	0x30
 3313 1514 00       		.byte	0
 3314 1515 00       		.byte	0
 3315 1516 1F       		.uleb128 0x1f
 3316 1517 D71D0000 		.4byte	.LASF372
 3317 151b 04       		.byte	0x4
 3318 151c D503     		.2byte	0x3d5
 3319 151e CD000000 		.4byte	0xcd
 3320 1522 03       		.byte	0x3
 3321 1523 34150000 		.4byte	0x1534
 3322 1527 20       		.uleb128 0x20
 3323 1528 CE0E0000 		.4byte	.LASF373
 3324 152c 04       		.byte	0x4
 3325 152d D503     		.2byte	0x3d5
 3326 152f E3000000 		.4byte	0xe3
 3327 1533 00       		.byte	0
 3328 1534 33       		.uleb128 0x33
 3329 1535 9A080000 		.4byte	.LASF419
 3330 1539 01       		.byte	0x1
 3331 153a 6B       		.byte	0x6b
 3332 153b 00000000 		.4byte	.LFB714
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 136


 3333 153f BC010000 		.4byte	.LFE714-.LFB714
 3334 1543 01       		.uleb128 0x1
 3335 1544 9C       		.byte	0x9c
 3336 1545 84180000 		.4byte	0x1884
 3337 1549 34       		.uleb128 0x34
 3338 154a 86190000 		.4byte	.LASF374
 3339 154e 01       		.byte	0x1
 3340 154f 6B       		.byte	0x6b
 3341 1550 AC000000 		.4byte	0xac
 3342 1554 BD010000 		.4byte	.LLST19
 3343 1558 35       		.uleb128 0x35
 3344 1559 C3100000 		.4byte	.LASF364
 3345 155d 01       		.byte	0x1
 3346 155e 6E       		.byte	0x6e
 3347 155f E70F0000 		.4byte	0xfe7
 3348 1563 02       		.uleb128 0x2
 3349 1564 91       		.byte	0x91
 3350 1565 67       		.sleb128 -25
 3351 1566 30       		.uleb128 0x30
 3352 1567 BB180000 		.4byte	.LASF363
 3353 156b 01       		.byte	0x1
 3354 156c 71       		.byte	0x71
 3355 156d A10F0000 		.4byte	0xfa1
 3356 1571 DE010000 		.4byte	.LLST20
 3357 1575 30       		.uleb128 0x30
 3358 1576 431D0000 		.4byte	.LASF375
 3359 157a 01       		.byte	0x1
 3360 157b 75       		.byte	0x75
 3361 157c 2E060000 		.4byte	0x62e
 3362 1580 28020000 		.4byte	.LLST21
 3363 1584 1E       		.uleb128 0x1e
 3364 1585 3E080000 		.4byte	.LASF376
 3365 1589 01       		.byte	0x1
 3366 158a 78       		.byte	0x78
 3367 158b CD000000 		.4byte	0xcd
 3368 158f 1E       		.uleb128 0x1e
 3369 1590 941F0000 		.4byte	.LASF377
 3370 1594 01       		.byte	0x1
 3371 1595 78       		.byte	0x78
 3372 1596 CD000000 		.4byte	0xcd
 3373 159a 30       		.uleb128 0x30
 3374 159b 0F080000 		.4byte	.LASF378
 3375 159f 01       		.byte	0x1
 3376 15a0 79       		.byte	0x79
 3377 15a1 25000000 		.4byte	0x25
 3378 15a5 6A020000 		.4byte	.LLST22
 3379 15a9 35       		.uleb128 0x35
 3380 15aa B8010000 		.4byte	.LASF379
 3381 15ae 01       		.byte	0x1
 3382 15af 79       		.byte	0x79
 3383 15b0 25000000 		.4byte	0x25
 3384 15b4 02       		.uleb128 0x2
 3385 15b5 91       		.byte	0x91
 3386 15b6 60       		.sleb128 -32
 3387 15b7 35       		.uleb128 0x35
 3388 15b8 630A0000 		.4byte	.LASF380
 3389 15bc 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 137


 3390 15bd 7C       		.byte	0x7c
 3391 15be 69100000 		.4byte	0x1069
 3392 15c2 02       		.uleb128 0x2
 3393 15c3 91       		.byte	0x91
 3394 15c4 58       		.sleb128 -40
 3395 15c5 31       		.uleb128 0x31
 3396 15c6 16150000 		.4byte	0x1516
 3397 15ca 5C000000 		.4byte	.LBB62
 3398 15ce 28000000 		.4byte	.LBE62-.LBB62
 3399 15d2 01       		.byte	0x1
 3400 15d3 A7       		.byte	0xa7
 3401 15d4 18160000 		.4byte	0x1618
 3402 15d8 28       		.uleb128 0x28
 3403 15d9 27150000 		.4byte	0x1527
 3404 15dd 90020000 		.4byte	.LLST23
 3405 15e1 2D       		.uleb128 0x2d
 3406 15e2 78000000 		.4byte	.LVL46
 3407 15e6 0D1A0000 		.4byte	0x1a0d
 3408 15ea FF150000 		.4byte	0x15ff
 3409 15ee 2C       		.uleb128 0x2c
 3410 15ef 01       		.uleb128 0x1
 3411 15f0 50       		.byte	0x50
 3412 15f1 05       		.uleb128 0x5
 3413 15f2 03       		.byte	0x3
 3414 15f3 10010000 		.4byte	.LC6
 3415 15f7 2C       		.uleb128 0x2c
 3416 15f8 01       		.uleb128 0x1
 3417 15f9 51       		.byte	0x51
 3418 15fa 03       		.uleb128 0x3
 3419 15fb 0A       		.byte	0xa
 3420 15fc D803     		.2byte	0x3d8
 3421 15fe 00       		.byte	0
 3422 15ff 2B       		.uleb128 0x2b
 3423 1600 80000000 		.4byte	.LVL47
 3424 1604 251A0000 		.4byte	0x1a25
 3425 1608 2C       		.uleb128 0x2c
 3426 1609 01       		.uleb128 0x1
 3427 160a 50       		.byte	0x50
 3428 160b 05       		.uleb128 0x5
 3429 160c 0C       		.byte	0xc
 3430 160d 00001D41 		.4byte	0x411d0000
 3431 1611 2C       		.uleb128 0x2c
 3432 1612 01       		.uleb128 0x1
 3433 1613 51       		.byte	0x51
 3434 1614 01       		.uleb128 0x1
 3435 1615 30       		.byte	0x30
 3436 1616 00       		.byte	0
 3437 1617 00       		.byte	0
 3438 1618 31       		.uleb128 0x31
 3439 1619 16150000 		.4byte	0x1516
 3440 161d 84000000 		.4byte	.LBB64
 3441 1621 2C000000 		.4byte	.LBE64-.LBB64
 3442 1625 01       		.byte	0x1
 3443 1626 A8       		.byte	0xa8
 3444 1627 68160000 		.4byte	0x1668
 3445 162b 28       		.uleb128 0x28
 3446 162c 27150000 		.4byte	0x1527
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 138


 3447 1630 A4020000 		.4byte	.LLST24
 3448 1634 2D       		.uleb128 0x2d
 3449 1635 A2000000 		.4byte	.LVL49
 3450 1639 0D1A0000 		.4byte	0x1a0d
 3451 163d 52160000 		.4byte	0x1652
 3452 1641 2C       		.uleb128 0x2c
 3453 1642 01       		.uleb128 0x1
 3454 1643 50       		.byte	0x50
 3455 1644 05       		.uleb128 0x5
 3456 1645 03       		.byte	0x3
 3457 1646 10010000 		.4byte	.LC6
 3458 164a 2C       		.uleb128 0x2c
 3459 164b 01       		.uleb128 0x1
 3460 164c 51       		.byte	0x51
 3461 164d 03       		.uleb128 0x3
 3462 164e 0A       		.byte	0xa
 3463 164f D803     		.2byte	0x3d8
 3464 1651 00       		.byte	0
 3465 1652 2B       		.uleb128 0x2b
 3466 1653 AC000000 		.4byte	.LVL50
 3467 1657 251A0000 		.4byte	0x1a25
 3468 165b 2C       		.uleb128 0x2c
 3469 165c 01       		.uleb128 0x1
 3470 165d 50       		.byte	0x50
 3471 165e 02       		.uleb128 0x2
 3472 165f 75       		.byte	0x75
 3473 1660 00       		.sleb128 0
 3474 1661 2C       		.uleb128 0x2c
 3475 1662 01       		.uleb128 0x1
 3476 1663 51       		.byte	0x51
 3477 1664 01       		.uleb128 0x1
 3478 1665 31       		.byte	0x31
 3479 1666 00       		.byte	0
 3480 1667 00       		.byte	0
 3481 1668 31       		.uleb128 0x31
 3482 1669 2E110000 		.4byte	0x112e
 3483 166d B0000000 		.4byte	.LBB66
 3484 1671 06000000 		.4byte	.LBE66-.LBB66
 3485 1675 01       		.byte	0x1
 3486 1676 AC       		.byte	0xac
 3487 1677 8C160000 		.4byte	0x168c
 3488 167b 2B       		.uleb128 0x2b
 3489 167c B6000000 		.4byte	.LVL52
 3490 1680 311A0000 		.4byte	0x1a31
 3491 1684 2C       		.uleb128 0x2c
 3492 1685 01       		.uleb128 0x1
 3493 1686 50       		.byte	0x50
 3494 1687 02       		.uleb128 0x2
 3495 1688 75       		.byte	0x75
 3496 1689 00       		.sleb128 0
 3497 168a 00       		.byte	0
 3498 168b 00       		.byte	0
 3499 168c 31       		.uleb128 0x31
 3500 168d 02110000 		.4byte	0x1102
 3501 1691 B6000000 		.4byte	.LBB68
 3502 1695 06000000 		.4byte	.LBE68-.LBB68
 3503 1699 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 139


 3504 169a B0       		.byte	0xb0
 3505 169b B2160000 		.4byte	0x16b2
 3506 169f 28       		.uleb128 0x28
 3507 16a0 1B110000 		.4byte	0x111b
 3508 16a4 B8020000 		.4byte	.LLST25
 3509 16a8 28       		.uleb128 0x28
 3510 16a9 0F110000 		.4byte	0x110f
 3511 16ad CC020000 		.4byte	.LLST26
 3512 16b1 00       		.byte	0
 3513 16b2 31       		.uleb128 0x31
 3514 16b3 40110000 		.4byte	0x1140
 3515 16b7 32010000 		.4byte	.LBB70
 3516 16bb 06000000 		.4byte	.LBE70-.LBB70
 3517 16bf 01       		.byte	0x1
 3518 16c0 CD       		.byte	0xcd
 3519 16c1 D8160000 		.4byte	0x16d8
 3520 16c5 28       		.uleb128 0x28
 3521 16c6 59110000 		.4byte	0x1159
 3522 16ca E4020000 		.4byte	.LLST27
 3523 16ce 28       		.uleb128 0x28
 3524 16cf 4D110000 		.4byte	0x114d
 3525 16d3 F8020000 		.4byte	.LLST28
 3526 16d7 00       		.byte	0
 3527 16d8 31       		.uleb128 0x31
 3528 16d9 37110000 		.4byte	0x1137
 3529 16dd 38010000 		.4byte	.LBB72
 3530 16e1 06000000 		.4byte	.LBE72-.LBB72
 3531 16e5 01       		.byte	0x1
 3532 16e6 D0       		.byte	0xd0
 3533 16e7 FF160000 		.4byte	0x16ff
 3534 16eb 2B       		.uleb128 0x2b
 3535 16ec 3E010000 		.4byte	.LVL62
 3536 16f0 3D1A0000 		.4byte	0x1a3d
 3537 16f4 2C       		.uleb128 0x2c
 3538 16f5 01       		.uleb128 0x1
 3539 16f6 50       		.byte	0x50
 3540 16f7 05       		.uleb128 0x5
 3541 16f8 0C       		.byte	0xc
 3542 16f9 00001D41 		.4byte	0x411d0000
 3543 16fd 00       		.byte	0
 3544 16fe 00       		.byte	0
 3545 16ff 31       		.uleb128 0x31
 3546 1700 7F100000 		.4byte	0x107f
 3547 1704 4A010000 		.4byte	.LBB74
 3548 1708 16000000 		.4byte	.LBE74-.LBB74
 3549 170c 01       		.byte	0x1
 3550 170d D9       		.byte	0xd9
 3551 170e 51170000 		.4byte	0x1751
 3552 1712 28       		.uleb128 0x28
 3553 1713 96100000 		.4byte	0x1096
 3554 1717 10030000 		.4byte	.LLST29
 3555 171b 28       		.uleb128 0x28
 3556 171c 8B100000 		.4byte	0x108b
 3557 1720 2F030000 		.4byte	.LLST30
 3558 1724 29       		.uleb128 0x29
 3559 1725 4A010000 		.4byte	.LBB75
 3560 1729 16000000 		.4byte	.LBE75-.LBB75
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 140


 3561 172d 2A       		.uleb128 0x2a
 3562 172e A1100000 		.4byte	0x10a1
 3563 1732 02       		.uleb128 0x2
 3564 1733 91       		.byte	0x91
 3565 1734 50       		.sleb128 -48
 3566 1735 2B       		.uleb128 0x2b
 3567 1736 5E010000 		.4byte	.LVL67
 3568 173a DD190000 		.4byte	0x19dd
 3569 173e 2C       		.uleb128 0x2c
 3570 173f 01       		.uleb128 0x1
 3571 1740 51       		.byte	0x51
 3572 1741 02       		.uleb128 0x2
 3573 1742 7D       		.byte	0x7d
 3574 1743 00       		.sleb128 0
 3575 1744 2C       		.uleb128 0x2c
 3576 1745 01       		.uleb128 0x1
 3577 1746 52       		.byte	0x52
 3578 1747 01       		.uleb128 0x1
 3579 1748 30       		.byte	0x30
 3580 1749 2C       		.uleb128 0x2c
 3581 174a 01       		.uleb128 0x1
 3582 174b 53       		.byte	0x53
 3583 174c 01       		.uleb128 0x1
 3584 174d 30       		.byte	0x30
 3585 174e 00       		.byte	0
 3586 174f 00       		.byte	0
 3587 1750 00       		.byte	0
 3588 1751 31       		.uleb128 0x31
 3589 1752 7F100000 		.4byte	0x107f
 3590 1756 60010000 		.4byte	.LBB76
 3591 175a 5C000000 		.4byte	.LBE76-.LBB76
 3592 175e 01       		.byte	0x1
 3593 175f E2       		.byte	0xe2
 3594 1760 A3170000 		.4byte	0x17a3
 3595 1764 36       		.uleb128 0x36
 3596 1765 96100000 		.4byte	0x1096
 3597 1769 00       		.byte	0
 3598 176a 37       		.uleb128 0x37
 3599 176b 8B100000 		.4byte	0x108b
 3600 176f 06       		.uleb128 0x6
 3601 1770 03       		.byte	0x3
 3602 1771 70010000 		.4byte	.LC8
 3603 1775 9F       		.byte	0x9f
 3604 1776 29       		.uleb128 0x29
 3605 1777 60010000 		.4byte	.LBB77
 3606 177b 5C000000 		.4byte	.LBE77-.LBB77
 3607 177f 2A       		.uleb128 0x2a
 3608 1780 A1100000 		.4byte	0x10a1
 3609 1784 02       		.uleb128 0x2
 3610 1785 91       		.byte	0x91
 3611 1786 50       		.sleb128 -48
 3612 1787 2B       		.uleb128 0x2b
 3613 1788 74010000 		.4byte	.LVL70
 3614 178c DD190000 		.4byte	0x19dd
 3615 1790 2C       		.uleb128 0x2c
 3616 1791 01       		.uleb128 0x1
 3617 1792 51       		.byte	0x51
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 141


 3618 1793 02       		.uleb128 0x2
 3619 1794 7D       		.byte	0x7d
 3620 1795 00       		.sleb128 0
 3621 1796 2C       		.uleb128 0x2c
 3622 1797 01       		.uleb128 0x1
 3623 1798 52       		.byte	0x52
 3624 1799 01       		.uleb128 0x1
 3625 179a 30       		.byte	0x30
 3626 179b 2C       		.uleb128 0x2c
 3627 179c 01       		.uleb128 0x1
 3628 179d 53       		.byte	0x53
 3629 179e 01       		.uleb128 0x1
 3630 179f 30       		.byte	0x30
 3631 17a0 00       		.byte	0
 3632 17a1 00       		.byte	0
 3633 17a2 00       		.byte	0
 3634 17a3 2D       		.uleb128 0x2d
 3635 17a4 0E000000 		.4byte	.LVL32
 3636 17a8 491A0000 		.4byte	0x1a49
 3637 17ac BA170000 		.4byte	0x17ba
 3638 17b0 2C       		.uleb128 0x2c
 3639 17b1 01       		.uleb128 0x1
 3640 17b2 50       		.byte	0x50
 3641 17b3 05       		.uleb128 0x5
 3642 17b4 03       		.byte	0x3
 3643 17b5 00000000 		.4byte	isrADC
 3644 17b9 00       		.byte	0
 3645 17ba 2E       		.uleb128 0x2e
 3646 17bb 12000000 		.4byte	.LVL33
 3647 17bf 541A0000 		.4byte	0x1a54
 3648 17c3 2E       		.uleb128 0x2e
 3649 17c4 16000000 		.4byte	.LVL34
 3650 17c8 5F1A0000 		.4byte	0x1a5f
 3651 17cc 2E       		.uleb128 0x2e
 3652 17cd 1A000000 		.4byte	.LVL35
 3653 17d1 19120000 		.4byte	0x1219
 3654 17d5 2D       		.uleb128 0x2d
 3655 17d6 2E000000 		.4byte	.LVL37
 3656 17da 6A1A0000 		.4byte	0x1a6a
 3657 17de F4170000 		.4byte	0x17f4
 3658 17e2 2C       		.uleb128 0x2c
 3659 17e3 01       		.uleb128 0x1
 3660 17e4 51       		.byte	0x51
 3661 17e5 02       		.uleb128 0x2
 3662 17e6 91       		.byte	0x91
 3663 17e7 67       		.sleb128 -25
 3664 17e8 2C       		.uleb128 0x2c
 3665 17e9 01       		.uleb128 0x1
 3666 17ea 52       		.byte	0x52
 3667 17eb 02       		.uleb128 0x2
 3668 17ec 09       		.byte	0x9
 3669 17ed FF       		.byte	0xff
 3670 17ee 2C       		.uleb128 0x2c
 3671 17ef 01       		.uleb128 0x1
 3672 17f0 53       		.byte	0x53
 3673 17f1 01       		.uleb128 0x1
 3674 17f2 30       		.byte	0x30
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 142


 3675 17f3 00       		.byte	0
 3676 17f4 2D       		.uleb128 0x2d
 3677 17f5 4C000000 		.4byte	.LVL40
 3678 17f9 41130000 		.4byte	0x1341
 3679 17fd 08180000 		.4byte	0x1808
 3680 1801 2C       		.uleb128 0x2c
 3681 1802 01       		.uleb128 0x1
 3682 1803 50       		.byte	0x50
 3683 1804 02       		.uleb128 0x2
 3684 1805 08       		.byte	0x8
 3685 1806 64       		.byte	0x64
 3686 1807 00       		.byte	0
 3687 1808 2D       		.uleb128 0x2d
 3688 1809 58000000 		.4byte	.LVL43
 3689 180d 41130000 		.4byte	0x1341
 3690 1811 1D180000 		.4byte	0x181d
 3691 1815 2C       		.uleb128 0x2c
 3692 1816 01       		.uleb128 0x1
 3693 1817 50       		.byte	0x50
 3694 1818 03       		.uleb128 0x3
 3695 1819 0A       		.byte	0xa
 3696 181a 1027     		.2byte	0x2710
 3697 181c 00       		.byte	0
 3698 181d 2D       		.uleb128 0x2d
 3699 181e E0000000 		.4byte	.LVL55
 3700 1822 761A0000 		.4byte	0x1a76
 3701 1826 3E180000 		.4byte	0x183e
 3702 182a 2C       		.uleb128 0x2c
 3703 182b 01       		.uleb128 0x1
 3704 182c 50       		.byte	0x50
 3705 182d 0F       		.uleb128 0xf
 3706 182e F5       		.byte	0xf5
 3707 182f 50       		.uleb128 0x50
 3708 1830 25       		.uleb128 0x25
 3709 1831 F5       		.byte	0xf5
 3710 1832 51       		.uleb128 0x51
 3711 1833 25       		.uleb128 0x25
 3712 1834 1B       		.byte	0x1b
 3713 1835 F4       		.byte	0xf4
 3714 1836 25       		.uleb128 0x25
 3715 1837 04       		.byte	0x4
 3716 1838 F54BF43D 		.4byte	0x3df44bf5
 3717 183c 1B       		.byte	0x1b
 3718 183d 00       		.byte	0
 3719 183e 2D       		.uleb128 0x2d
 3720 183f 16010000 		.4byte	.LVL56
 3721 1843 DD190000 		.4byte	0x19dd
 3722 1847 5C180000 		.4byte	0x185c
 3723 184b 2C       		.uleb128 0x2c
 3724 184c 01       		.uleb128 0x1
 3725 184d 51       		.byte	0x51
 3726 184e 02       		.uleb128 0x2
 3727 184f 91       		.byte	0x91
 3728 1850 58       		.sleb128 -40
 3729 1851 2C       		.uleb128 0x2c
 3730 1852 01       		.uleb128 0x1
 3731 1853 52       		.byte	0x52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 143


 3732 1854 01       		.uleb128 0x1
 3733 1855 30       		.byte	0x30
 3734 1856 2C       		.uleb128 0x2c
 3735 1857 01       		.uleb128 0x1
 3736 1858 53       		.byte	0x53
 3737 1859 01       		.uleb128 0x1
 3738 185a 30       		.byte	0x30
 3739 185b 00       		.byte	0
 3740 185c 2D       		.uleb128 0x2d
 3741 185d 26010000 		.4byte	.LVL57
 3742 1861 DD190000 		.4byte	0x19dd
 3743 1865 7A180000 		.4byte	0x187a
 3744 1869 2C       		.uleb128 0x2c
 3745 186a 01       		.uleb128 0x1
 3746 186b 51       		.byte	0x51
 3747 186c 02       		.uleb128 0x2
 3748 186d 91       		.byte	0x91
 3749 186e 60       		.sleb128 -32
 3750 186f 2C       		.uleb128 0x2c
 3751 1870 01       		.uleb128 0x1
 3752 1871 52       		.byte	0x52
 3753 1872 01       		.uleb128 0x1
 3754 1873 30       		.byte	0x30
 3755 1874 2C       		.uleb128 0x2c
 3756 1875 01       		.uleb128 0x1
 3757 1876 53       		.byte	0x53
 3758 1877 01       		.uleb128 0x1
 3759 1878 32       		.byte	0x32
 3760 1879 00       		.byte	0
 3761 187a 2E       		.uleb128 0x2e
 3762 187b 42010000 		.4byte	.LVL63
 3763 187f 5F1A0000 		.4byte	0x1a5f
 3764 1883 00       		.byte	0
 3765 1884 35       		.uleb128 0x35
 3766 1885 A6040000 		.4byte	.LASF381
 3767 1889 01       		.byte	0x1
 3768 188a 58       		.byte	0x58
 3769 188b 2E060000 		.4byte	0x62e
 3770 188f 05       		.uleb128 0x5
 3771 1890 03       		.byte	0x3
 3772 1891 00000000 		.4byte	processingComplete
 3773 1895 38       		.uleb128 0x38
 3774 1896 C4190000 		.4byte	.LASF382
 3775 189a 1A       		.byte	0x1a
 3776 189b EA07     		.2byte	0x7ea
 3777 189d A1180000 		.4byte	0x18a1
 3778 18a1 07       		.uleb128 0x7
 3779 18a2 D8000000 		.4byte	0xd8
 3780 18a6 09       		.uleb128 0x9
 3781 18a7 E60D0000 		.4byte	0xde6
 3782 18ab B6180000 		.4byte	0x18b6
 3783 18af 0A       		.uleb128 0xa
 3784 18b0 A5000000 		.4byte	0xa5
 3785 18b4 0B       		.byte	0xb
 3786 18b5 00       		.byte	0
 3787 18b6 38       		.uleb128 0x38
 3788 18b7 E71B0000 		.4byte	.LASF383
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 144


 3789 18bb 0B       		.byte	0xb
 3790 18bc FC02     		.2byte	0x2fc
 3791 18be C2180000 		.4byte	0x18c2
 3792 18c2 08       		.uleb128 0x8
 3793 18c3 A6180000 		.4byte	0x18a6
 3794 18c7 38       		.uleb128 0x38
 3795 18c8 73110000 		.4byte	.LASF384
 3796 18cc 11       		.byte	0x11
 3797 18cd 2202     		.2byte	0x222
 3798 18cf 400E0000 		.4byte	0xe40
 3799 18d3 09       		.uleb128 0x9
 3800 18d4 0F0E0000 		.4byte	0xe0f
 3801 18d8 E3180000 		.4byte	0x18e3
 3802 18dc 0A       		.uleb128 0xa
 3803 18dd A5000000 		.4byte	0xa5
 3804 18e1 00       		.byte	0
 3805 18e2 00       		.byte	0
 3806 18e3 38       		.uleb128 0x38
 3807 18e4 D6020000 		.4byte	.LASF385
 3808 18e8 11       		.byte	0x11
 3809 18e9 2C02     		.2byte	0x22c
 3810 18eb D3180000 		.4byte	0x18d3
 3811 18ef 09       		.uleb128 0x9
 3812 18f0 880E0000 		.4byte	0xe88
 3813 18f4 FF180000 		.4byte	0x18ff
 3814 18f8 0A       		.uleb128 0xa
 3815 18f9 A5000000 		.4byte	0xa5
 3816 18fd 00       		.byte	0
 3817 18fe 00       		.byte	0
 3818 18ff 38       		.uleb128 0x38
 3819 1900 00000000 		.4byte	.LASF386
 3820 1904 11       		.byte	0x11
 3821 1905 2D02     		.2byte	0x22d
 3822 1907 EF180000 		.4byte	0x18ef
 3823 190b 39       		.uleb128 0x39
 3824 190c 82010000 		.4byte	.LASF387
 3825 1910 1B       		.byte	0x1b
 3826 1911 5E       		.byte	0x5e
 3827 1912 8B080000 		.4byte	0x88b
 3828 1916 38       		.uleb128 0x38
 3829 1917 CE1F0000 		.4byte	.LASF388
 3830 191b 04       		.byte	0x4
 3831 191c 6001     		.2byte	0x160
 3832 191e E3000000 		.4byte	0xe3
 3833 1922 09       		.uleb128 0x9
 3834 1923 32190000 		.4byte	0x1932
 3835 1927 32190000 		.4byte	0x1932
 3836 192b 0A       		.uleb128 0xa
 3837 192c A5000000 		.4byte	0xa5
 3838 1930 00       		.byte	0
 3839 1931 00       		.byte	0
 3840 1932 08       		.uleb128 0x8
 3841 1933 960F0000 		.4byte	0xf96
 3842 1937 38       		.uleb128 0x38
 3843 1938 4D190000 		.4byte	.LASF389
 3844 193c 04       		.byte	0x4
 3845 193d 6401     		.2byte	0x164
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 145


 3846 193f 43190000 		.4byte	0x1943
 3847 1943 08       		.uleb128 0x8
 3848 1944 22190000 		.4byte	0x1922
 3849 1948 39       		.uleb128 0x39
 3850 1949 D3160000 		.4byte	.LASF390
 3851 194d 1C       		.byte	0x1c
 3852 194e 87       		.byte	0x87
 3853 194f 67090000 		.4byte	0x967
 3854 1953 39       		.uleb128 0x39
 3855 1954 AE1F0000 		.4byte	.LASF391
 3856 1958 1D       		.byte	0x1d
 3857 1959 1F       		.byte	0x1f
 3858 195a 5E190000 		.4byte	0x195e
 3859 195e 08       		.uleb128 0x8
 3860 195f E0070000 		.4byte	0x7e0
 3861 1963 39       		.uleb128 0x39
 3862 1964 1D070000 		.4byte	.LASF392
 3863 1968 1E       		.byte	0x1e
 3864 1969 1F       		.byte	0x1f
 3865 196a 5E190000 		.4byte	0x195e
 3866 196e 39       		.uleb128 0x39
 3867 196f FD1B0000 		.4byte	.LASF393
 3868 1973 1F       		.byte	0x1f
 3869 1974 1F       		.byte	0x1f
 3870 1975 5E190000 		.4byte	0x195e
 3871 1979 39       		.uleb128 0x39
 3872 197a E8020000 		.4byte	.LASF394
 3873 197e 20       		.byte	0x20
 3874 197f 7C       		.byte	0x7c
 3875 1980 2E060000 		.4byte	0x62e
 3876 1984 39       		.uleb128 0x39
 3877 1985 EE080000 		.4byte	.LASF395
 3878 1989 20       		.byte	0x20
 3879 198a 7D       		.byte	0x7d
 3880 198b 8F190000 		.4byte	0x198f
 3881 198f 08       		.uleb128 0x8
 3882 1990 E3060000 		.4byte	0x6e3
 3883 1994 3A       		.uleb128 0x3a
 3884 1995 D1130000 		.4byte	.LASF396
 3885 1999 01       		.byte	0x1
 3886 199a 50       		.byte	0x50
 3887 199b B70F0000 		.4byte	0xfb7
 3888 199f 05       		.uleb128 0x5
 3889 19a0 03       		.byte	0x3
 3890 19a1 00000000 		.4byte	temperatureCommandQ
 3891 19a5 3A       		.uleb128 0x3a
 3892 19a6 79020000 		.4byte	.LASF397
 3893 19aa 01       		.byte	0x1
 3894 19ab 51       		.byte	0x51
 3895 19ac B70F0000 		.4byte	0xfb7
 3896 19b0 05       		.uleb128 0x5
 3897 19b1 03       		.byte	0x3
 3898 19b2 00000000 		.4byte	temperatureDataQ
 3899 19b6 39       		.uleb128 0x39
 3900 19b7 C01F0000 		.4byte	.LASF398
 3901 19bb 02       		.byte	0x2
 3902 19bc 7F       		.byte	0x7f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 146


 3903 19bd B70F0000 		.4byte	0xfb7
 3904 19c1 39       		.uleb128 0x39
 3905 19c2 B4210000 		.4byte	.LASF399
 3906 19c6 18       		.byte	0x18
 3907 19c7 4A       		.byte	0x4a
 3908 19c8 B70F0000 		.4byte	0xfb7
 3909 19cc 3A       		.uleb128 0x3a
 3910 19cd 8B160000 		.4byte	.LASF400
 3911 19d1 01       		.byte	0x1
 3912 19d2 54       		.byte	0x54
 3913 19d3 74100000 		.4byte	0x1074
 3914 19d7 05       		.uleb128 0x5
 3915 19d8 03       		.byte	0x3
 3916 19d9 00000000 		.4byte	xTimer_Temperature
 3917 19dd 3B       		.uleb128 0x3b
 3918 19de 7F0D0000 		.4byte	.LASF401
 3919 19e2 7F0D0000 		.4byte	.LASF401
 3920 19e6 16       		.byte	0x16
 3921 19e7 B402     		.2byte	0x2b4
 3922 19e9 3B       		.uleb128 0x3b
 3923 19ea 930F0000 		.4byte	.LASF402
 3924 19ee 930F0000 		.4byte	.LASF402
 3925 19f2 19       		.byte	0x19
 3926 19f3 0D01     		.2byte	0x10d
 3927 19f5 3B       		.uleb128 0x3b
 3928 19f6 83110000 		.4byte	.LASF403
 3929 19fa 83110000 		.4byte	.LASF403
 3930 19fe 21       		.byte	0x21
 3931 19ff 0805     		.2byte	0x508
 3932 1a01 3B       		.uleb128 0x3b
 3933 1a02 D6100000 		.4byte	.LASF404
 3934 1a06 D6100000 		.4byte	.LASF404
 3935 1a0a 19       		.byte	0x19
 3936 1a0b 1A05     		.2byte	0x51a
 3937 1a0d 3B       		.uleb128 0x3b
 3938 1a0e FA0E0000 		.4byte	.LASF405
 3939 1a12 FA0E0000 		.4byte	.LASF405
 3940 1a16 0A       		.byte	0xa
 3941 1a17 2A03     		.2byte	0x32a
 3942 1a19 3B       		.uleb128 0x3b
 3943 1a1a 270D0000 		.4byte	.LASF406
 3944 1a1e 270D0000 		.4byte	.LASF406
 3945 1a22 16       		.byte	0x16
 3946 1a23 A005     		.2byte	0x5a0
 3947 1a25 3B       		.uleb128 0x3b
 3948 1a26 5B1D0000 		.4byte	.LASF407
 3949 1a2a 5B1D0000 		.4byte	.LASF407
 3950 1a2e 03       		.byte	0x3
 3951 1a2f 2405     		.2byte	0x524
 3952 1a31 3B       		.uleb128 0x3b
 3953 1a32 9E070000 		.4byte	.LASF408
 3954 1a36 9E070000 		.4byte	.LASF408
 3955 1a3a 03       		.byte	0x3
 3956 1a3b 2E05     		.2byte	0x52e
 3957 1a3d 3B       		.uleb128 0x3b
 3958 1a3e 36050000 		.4byte	.LASF409
 3959 1a42 36050000 		.4byte	.LASF409
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 147


 3960 1a46 03       		.byte	0x3
 3961 1a47 2F05     		.2byte	0x52f
 3962 1a49 3C       		.uleb128 0x3c
 3963 1a4a 5C170000 		.4byte	.LASF410
 3964 1a4e 5C170000 		.4byte	.LASF410
 3965 1a52 04       		.byte	0x4
 3966 1a53 58       		.byte	0x58
 3967 1a54 3C       		.uleb128 0x3c
 3968 1a55 C2130000 		.4byte	.LASF411
 3969 1a59 C2130000 		.4byte	.LASF411
 3970 1a5d 04       		.byte	0x4
 3971 1a5e 7D       		.byte	0x7d
 3972 1a5f 3C       		.uleb128 0x3c
 3973 1a60 951C0000 		.4byte	.LASF412
 3974 1a64 951C0000 		.4byte	.LASF412
 3975 1a68 04       		.byte	0x4
 3976 1a69 5A       		.byte	0x5a
 3977 1a6a 3B       		.uleb128 0x3b
 3978 1a6b 4E090000 		.4byte	.LASF413
 3979 1a6f 4E090000 		.4byte	.LASF413
 3980 1a73 16       		.byte	0x16
 3981 1a74 F503     		.2byte	0x3f5
 3982 1a76 3B       		.uleb128 0x3b
 3983 1a77 0E1C0000 		.4byte	.LASF414
 3984 1a7b 0E1C0000 		.4byte	.LASF414
 3985 1a7f 22       		.byte	0x22
 3986 1a80 8201     		.2byte	0x182
 3987 1a82 00       		.byte	0
 3988              		.section	.debug_abbrev,"",%progbits
 3989              	.Ldebug_abbrev0:
 3990 0000 01       		.uleb128 0x1
 3991 0001 11       		.uleb128 0x11
 3992 0002 01       		.byte	0x1
 3993 0003 25       		.uleb128 0x25
 3994 0004 0E       		.uleb128 0xe
 3995 0005 13       		.uleb128 0x13
 3996 0006 0B       		.uleb128 0xb
 3997 0007 03       		.uleb128 0x3
 3998 0008 0E       		.uleb128 0xe
 3999 0009 1B       		.uleb128 0x1b
 4000 000a 0E       		.uleb128 0xe
 4001 000b 55       		.uleb128 0x55
 4002 000c 17       		.uleb128 0x17
 4003 000d 11       		.uleb128 0x11
 4004 000e 01       		.uleb128 0x1
 4005 000f 10       		.uleb128 0x10
 4006 0010 17       		.uleb128 0x17
 4007 0011 00       		.byte	0
 4008 0012 00       		.byte	0
 4009 0013 02       		.uleb128 0x2
 4010 0014 24       		.uleb128 0x24
 4011 0015 00       		.byte	0
 4012 0016 0B       		.uleb128 0xb
 4013 0017 0B       		.uleb128 0xb
 4014 0018 3E       		.uleb128 0x3e
 4015 0019 0B       		.uleb128 0xb
 4016 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 148


 4017 001b 0E       		.uleb128 0xe
 4018 001c 00       		.byte	0
 4019 001d 00       		.byte	0
 4020 001e 03       		.uleb128 0x3
 4021 001f 24       		.uleb128 0x24
 4022 0020 00       		.byte	0
 4023 0021 0B       		.uleb128 0xb
 4024 0022 0B       		.uleb128 0xb
 4025 0023 3E       		.uleb128 0x3e
 4026 0024 0B       		.uleb128 0xb
 4027 0025 03       		.uleb128 0x3
 4028 0026 08       		.uleb128 0x8
 4029 0027 00       		.byte	0
 4030 0028 00       		.byte	0
 4031 0029 04       		.uleb128 0x4
 4032 002a 16       		.uleb128 0x16
 4033 002b 00       		.byte	0
 4034 002c 03       		.uleb128 0x3
 4035 002d 0E       		.uleb128 0xe
 4036 002e 3A       		.uleb128 0x3a
 4037 002f 0B       		.uleb128 0xb
 4038 0030 3B       		.uleb128 0x3b
 4039 0031 0B       		.uleb128 0xb
 4040 0032 49       		.uleb128 0x49
 4041 0033 13       		.uleb128 0x13
 4042 0034 00       		.byte	0
 4043 0035 00       		.byte	0
 4044 0036 05       		.uleb128 0x5
 4045 0037 0F       		.uleb128 0xf
 4046 0038 00       		.byte	0
 4047 0039 0B       		.uleb128 0xb
 4048 003a 0B       		.uleb128 0xb
 4049 003b 00       		.byte	0
 4050 003c 00       		.byte	0
 4051 003d 06       		.uleb128 0x6
 4052 003e 0F       		.uleb128 0xf
 4053 003f 00       		.byte	0
 4054 0040 0B       		.uleb128 0xb
 4055 0041 0B       		.uleb128 0xb
 4056 0042 49       		.uleb128 0x49
 4057 0043 13       		.uleb128 0x13
 4058 0044 00       		.byte	0
 4059 0045 00       		.byte	0
 4060 0046 07       		.uleb128 0x7
 4061 0047 35       		.uleb128 0x35
 4062 0048 00       		.byte	0
 4063 0049 49       		.uleb128 0x49
 4064 004a 13       		.uleb128 0x13
 4065 004b 00       		.byte	0
 4066 004c 00       		.byte	0
 4067 004d 08       		.uleb128 0x8
 4068 004e 26       		.uleb128 0x26
 4069 004f 00       		.byte	0
 4070 0050 49       		.uleb128 0x49
 4071 0051 13       		.uleb128 0x13
 4072 0052 00       		.byte	0
 4073 0053 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 149


 4074 0054 09       		.uleb128 0x9
 4075 0055 01       		.uleb128 0x1
 4076 0056 01       		.byte	0x1
 4077 0057 49       		.uleb128 0x49
 4078 0058 13       		.uleb128 0x13
 4079 0059 01       		.uleb128 0x1
 4080 005a 13       		.uleb128 0x13
 4081 005b 00       		.byte	0
 4082 005c 00       		.byte	0
 4083 005d 0A       		.uleb128 0xa
 4084 005e 21       		.uleb128 0x21
 4085 005f 00       		.byte	0
 4086 0060 49       		.uleb128 0x49
 4087 0061 13       		.uleb128 0x13
 4088 0062 2F       		.uleb128 0x2f
 4089 0063 0B       		.uleb128 0xb
 4090 0064 00       		.byte	0
 4091 0065 00       		.byte	0
 4092 0066 0B       		.uleb128 0xb
 4093 0067 13       		.uleb128 0x13
 4094 0068 01       		.byte	0x1
 4095 0069 0B       		.uleb128 0xb
 4096 006a 0B       		.uleb128 0xb
 4097 006b 3A       		.uleb128 0x3a
 4098 006c 0B       		.uleb128 0xb
 4099 006d 3B       		.uleb128 0x3b
 4100 006e 0B       		.uleb128 0xb
 4101 006f 01       		.uleb128 0x1
 4102 0070 13       		.uleb128 0x13
 4103 0071 00       		.byte	0
 4104 0072 00       		.byte	0
 4105 0073 0C       		.uleb128 0xc
 4106 0074 0D       		.uleb128 0xd
 4107 0075 00       		.byte	0
 4108 0076 03       		.uleb128 0x3
 4109 0077 08       		.uleb128 0x8
 4110 0078 3A       		.uleb128 0x3a
 4111 0079 0B       		.uleb128 0xb
 4112 007a 3B       		.uleb128 0x3b
 4113 007b 0B       		.uleb128 0xb
 4114 007c 49       		.uleb128 0x49
 4115 007d 13       		.uleb128 0x13
 4116 007e 38       		.uleb128 0x38
 4117 007f 0B       		.uleb128 0xb
 4118 0080 00       		.byte	0
 4119 0081 00       		.byte	0
 4120 0082 0D       		.uleb128 0xd
 4121 0083 0D       		.uleb128 0xd
 4122 0084 00       		.byte	0
 4123 0085 03       		.uleb128 0x3
 4124 0086 0E       		.uleb128 0xe
 4125 0087 3A       		.uleb128 0x3a
 4126 0088 0B       		.uleb128 0xb
 4127 0089 3B       		.uleb128 0x3b
 4128 008a 0B       		.uleb128 0xb
 4129 008b 49       		.uleb128 0x49
 4130 008c 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 150


 4131 008d 38       		.uleb128 0x38
 4132 008e 0B       		.uleb128 0xb
 4133 008f 00       		.byte	0
 4134 0090 00       		.byte	0
 4135 0091 0E       		.uleb128 0xe
 4136 0092 13       		.uleb128 0x13
 4137 0093 01       		.byte	0x1
 4138 0094 0B       		.uleb128 0xb
 4139 0095 05       		.uleb128 0x5
 4140 0096 3A       		.uleb128 0x3a
 4141 0097 0B       		.uleb128 0xb
 4142 0098 3B       		.uleb128 0x3b
 4143 0099 0B       		.uleb128 0xb
 4144 009a 01       		.uleb128 0x1
 4145 009b 13       		.uleb128 0x13
 4146 009c 00       		.byte	0
 4147 009d 00       		.byte	0
 4148 009e 0F       		.uleb128 0xf
 4149 009f 0D       		.uleb128 0xd
 4150 00a0 00       		.byte	0
 4151 00a1 03       		.uleb128 0x3
 4152 00a2 0E       		.uleb128 0xe
 4153 00a3 3A       		.uleb128 0x3a
 4154 00a4 0B       		.uleb128 0xb
 4155 00a5 3B       		.uleb128 0x3b
 4156 00a6 0B       		.uleb128 0xb
 4157 00a7 49       		.uleb128 0x49
 4158 00a8 13       		.uleb128 0x13
 4159 00a9 38       		.uleb128 0x38
 4160 00aa 05       		.uleb128 0x5
 4161 00ab 00       		.byte	0
 4162 00ac 00       		.byte	0
 4163 00ad 10       		.uleb128 0x10
 4164 00ae 21       		.uleb128 0x21
 4165 00af 00       		.byte	0
 4166 00b0 49       		.uleb128 0x49
 4167 00b1 13       		.uleb128 0x13
 4168 00b2 2F       		.uleb128 0x2f
 4169 00b3 05       		.uleb128 0x5
 4170 00b4 00       		.byte	0
 4171 00b5 00       		.byte	0
 4172 00b6 11       		.uleb128 0x11
 4173 00b7 16       		.uleb128 0x16
 4174 00b8 00       		.byte	0
 4175 00b9 03       		.uleb128 0x3
 4176 00ba 0E       		.uleb128 0xe
 4177 00bb 3A       		.uleb128 0x3a
 4178 00bc 0B       		.uleb128 0xb
 4179 00bd 3B       		.uleb128 0x3b
 4180 00be 05       		.uleb128 0x5
 4181 00bf 49       		.uleb128 0x49
 4182 00c0 13       		.uleb128 0x13
 4183 00c1 00       		.byte	0
 4184 00c2 00       		.byte	0
 4185 00c3 12       		.uleb128 0x12
 4186 00c4 04       		.uleb128 0x4
 4187 00c5 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 151


 4188 00c6 0B       		.uleb128 0xb
 4189 00c7 0B       		.uleb128 0xb
 4190 00c8 49       		.uleb128 0x49
 4191 00c9 13       		.uleb128 0x13
 4192 00ca 3A       		.uleb128 0x3a
 4193 00cb 0B       		.uleb128 0xb
 4194 00cc 3B       		.uleb128 0x3b
 4195 00cd 05       		.uleb128 0x5
 4196 00ce 01       		.uleb128 0x1
 4197 00cf 13       		.uleb128 0x13
 4198 00d0 00       		.byte	0
 4199 00d1 00       		.byte	0
 4200 00d2 13       		.uleb128 0x13
 4201 00d3 28       		.uleb128 0x28
 4202 00d4 00       		.byte	0
 4203 00d5 03       		.uleb128 0x3
 4204 00d6 0E       		.uleb128 0xe
 4205 00d7 1C       		.uleb128 0x1c
 4206 00d8 0B       		.uleb128 0xb
 4207 00d9 00       		.byte	0
 4208 00da 00       		.byte	0
 4209 00db 14       		.uleb128 0x14
 4210 00dc 13       		.uleb128 0x13
 4211 00dd 01       		.byte	0x1
 4212 00de 0B       		.uleb128 0xb
 4213 00df 0B       		.uleb128 0xb
 4214 00e0 3A       		.uleb128 0x3a
 4215 00e1 0B       		.uleb128 0xb
 4216 00e2 3B       		.uleb128 0x3b
 4217 00e3 05       		.uleb128 0x5
 4218 00e4 01       		.uleb128 0x1
 4219 00e5 13       		.uleb128 0x13
 4220 00e6 00       		.byte	0
 4221 00e7 00       		.byte	0
 4222 00e8 15       		.uleb128 0x15
 4223 00e9 0D       		.uleb128 0xd
 4224 00ea 00       		.byte	0
 4225 00eb 03       		.uleb128 0x3
 4226 00ec 0E       		.uleb128 0xe
 4227 00ed 3A       		.uleb128 0x3a
 4228 00ee 0B       		.uleb128 0xb
 4229 00ef 3B       		.uleb128 0x3b
 4230 00f0 05       		.uleb128 0x5
 4231 00f1 49       		.uleb128 0x49
 4232 00f2 13       		.uleb128 0x13
 4233 00f3 38       		.uleb128 0x38
 4234 00f4 0B       		.uleb128 0xb
 4235 00f5 00       		.byte	0
 4236 00f6 00       		.byte	0
 4237 00f7 16       		.uleb128 0x16
 4238 00f8 13       		.uleb128 0x13
 4239 00f9 01       		.byte	0x1
 4240 00fa 03       		.uleb128 0x3
 4241 00fb 0E       		.uleb128 0xe
 4242 00fc 0B       		.uleb128 0xb
 4243 00fd 0B       		.uleb128 0xb
 4244 00fe 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 152


 4245 00ff 0B       		.uleb128 0xb
 4246 0100 3B       		.uleb128 0x3b
 4247 0101 0B       		.uleb128 0xb
 4248 0102 01       		.uleb128 0x1
 4249 0103 13       		.uleb128 0x13
 4250 0104 00       		.byte	0
 4251 0105 00       		.byte	0
 4252 0106 17       		.uleb128 0x17
 4253 0107 15       		.uleb128 0x15
 4254 0108 01       		.byte	0x1
 4255 0109 27       		.uleb128 0x27
 4256 010a 19       		.uleb128 0x19
 4257 010b 01       		.uleb128 0x1
 4258 010c 13       		.uleb128 0x13
 4259 010d 00       		.byte	0
 4260 010e 00       		.byte	0
 4261 010f 18       		.uleb128 0x18
 4262 0110 05       		.uleb128 0x5
 4263 0111 00       		.byte	0
 4264 0112 49       		.uleb128 0x49
 4265 0113 13       		.uleb128 0x13
 4266 0114 00       		.byte	0
 4267 0115 00       		.byte	0
 4268 0116 19       		.uleb128 0x19
 4269 0117 13       		.uleb128 0x13
 4270 0118 01       		.byte	0x1
 4271 0119 03       		.uleb128 0x3
 4272 011a 0E       		.uleb128 0xe
 4273 011b 0B       		.uleb128 0xb
 4274 011c 0B       		.uleb128 0xb
 4275 011d 3A       		.uleb128 0x3a
 4276 011e 0B       		.uleb128 0xb
 4277 011f 3B       		.uleb128 0x3b
 4278 0120 05       		.uleb128 0x5
 4279 0121 01       		.uleb128 0x1
 4280 0122 13       		.uleb128 0x13
 4281 0123 00       		.byte	0
 4282 0124 00       		.byte	0
 4283 0125 1A       		.uleb128 0x1a
 4284 0126 28       		.uleb128 0x28
 4285 0127 00       		.byte	0
 4286 0128 03       		.uleb128 0x3
 4287 0129 0E       		.uleb128 0xe
 4288 012a 1C       		.uleb128 0x1c
 4289 012b 05       		.uleb128 0x5
 4290 012c 00       		.byte	0
 4291 012d 00       		.byte	0
 4292 012e 1B       		.uleb128 0x1b
 4293 012f 04       		.uleb128 0x4
 4294 0130 01       		.byte	0x1
 4295 0131 0B       		.uleb128 0xb
 4296 0132 0B       		.uleb128 0xb
 4297 0133 49       		.uleb128 0x49
 4298 0134 13       		.uleb128 0x13
 4299 0135 3A       		.uleb128 0x3a
 4300 0136 0B       		.uleb128 0xb
 4301 0137 3B       		.uleb128 0x3b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 153


 4302 0138 0B       		.uleb128 0xb
 4303 0139 01       		.uleb128 0x1
 4304 013a 13       		.uleb128 0x13
 4305 013b 00       		.byte	0
 4306 013c 00       		.byte	0
 4307 013d 1C       		.uleb128 0x1c
 4308 013e 2E       		.uleb128 0x2e
 4309 013f 01       		.byte	0x1
 4310 0140 03       		.uleb128 0x3
 4311 0141 0E       		.uleb128 0xe
 4312 0142 3A       		.uleb128 0x3a
 4313 0143 0B       		.uleb128 0xb
 4314 0144 3B       		.uleb128 0x3b
 4315 0145 0B       		.uleb128 0xb
 4316 0146 27       		.uleb128 0x27
 4317 0147 19       		.uleb128 0x19
 4318 0148 20       		.uleb128 0x20
 4319 0149 0B       		.uleb128 0xb
 4320 014a 01       		.uleb128 0x1
 4321 014b 13       		.uleb128 0x13
 4322 014c 00       		.byte	0
 4323 014d 00       		.byte	0
 4324 014e 1D       		.uleb128 0x1d
 4325 014f 05       		.uleb128 0x5
 4326 0150 00       		.byte	0
 4327 0151 03       		.uleb128 0x3
 4328 0152 0E       		.uleb128 0xe
 4329 0153 3A       		.uleb128 0x3a
 4330 0154 0B       		.uleb128 0xb
 4331 0155 3B       		.uleb128 0x3b
 4332 0156 0B       		.uleb128 0xb
 4333 0157 49       		.uleb128 0x49
 4334 0158 13       		.uleb128 0x13
 4335 0159 00       		.byte	0
 4336 015a 00       		.byte	0
 4337 015b 1E       		.uleb128 0x1e
 4338 015c 34       		.uleb128 0x34
 4339 015d 00       		.byte	0
 4340 015e 03       		.uleb128 0x3
 4341 015f 0E       		.uleb128 0xe
 4342 0160 3A       		.uleb128 0x3a
 4343 0161 0B       		.uleb128 0xb
 4344 0162 3B       		.uleb128 0x3b
 4345 0163 0B       		.uleb128 0xb
 4346 0164 49       		.uleb128 0x49
 4347 0165 13       		.uleb128 0x13
 4348 0166 00       		.byte	0
 4349 0167 00       		.byte	0
 4350 0168 1F       		.uleb128 0x1f
 4351 0169 2E       		.uleb128 0x2e
 4352 016a 01       		.byte	0x1
 4353 016b 03       		.uleb128 0x3
 4354 016c 0E       		.uleb128 0xe
 4355 016d 3A       		.uleb128 0x3a
 4356 016e 0B       		.uleb128 0xb
 4357 016f 3B       		.uleb128 0x3b
 4358 0170 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 154


 4359 0171 27       		.uleb128 0x27
 4360 0172 19       		.uleb128 0x19
 4361 0173 49       		.uleb128 0x49
 4362 0174 13       		.uleb128 0x13
 4363 0175 20       		.uleb128 0x20
 4364 0176 0B       		.uleb128 0xb
 4365 0177 01       		.uleb128 0x1
 4366 0178 13       		.uleb128 0x13
 4367 0179 00       		.byte	0
 4368 017a 00       		.byte	0
 4369 017b 20       		.uleb128 0x20
 4370 017c 05       		.uleb128 0x5
 4371 017d 00       		.byte	0
 4372 017e 03       		.uleb128 0x3
 4373 017f 0E       		.uleb128 0xe
 4374 0180 3A       		.uleb128 0x3a
 4375 0181 0B       		.uleb128 0xb
 4376 0182 3B       		.uleb128 0x3b
 4377 0183 05       		.uleb128 0x5
 4378 0184 49       		.uleb128 0x49
 4379 0185 13       		.uleb128 0x13
 4380 0186 00       		.byte	0
 4381 0187 00       		.byte	0
 4382 0188 21       		.uleb128 0x21
 4383 0189 2E       		.uleb128 0x2e
 4384 018a 01       		.byte	0x1
 4385 018b 03       		.uleb128 0x3
 4386 018c 0E       		.uleb128 0xe
 4387 018d 3A       		.uleb128 0x3a
 4388 018e 0B       		.uleb128 0xb
 4389 018f 3B       		.uleb128 0x3b
 4390 0190 05       		.uleb128 0x5
 4391 0191 27       		.uleb128 0x27
 4392 0192 19       		.uleb128 0x19
 4393 0193 20       		.uleb128 0x20
 4394 0194 0B       		.uleb128 0xb
 4395 0195 01       		.uleb128 0x1
 4396 0196 13       		.uleb128 0x13
 4397 0197 00       		.byte	0
 4398 0198 00       		.byte	0
 4399 0199 22       		.uleb128 0x22
 4400 019a 2E       		.uleb128 0x2e
 4401 019b 00       		.byte	0
 4402 019c 03       		.uleb128 0x3
 4403 019d 0E       		.uleb128 0xe
 4404 019e 3A       		.uleb128 0x3a
 4405 019f 0B       		.uleb128 0xb
 4406 01a0 3B       		.uleb128 0x3b
 4407 01a1 05       		.uleb128 0x5
 4408 01a2 27       		.uleb128 0x27
 4409 01a3 19       		.uleb128 0x19
 4410 01a4 20       		.uleb128 0x20
 4411 01a5 0B       		.uleb128 0xb
 4412 01a6 00       		.byte	0
 4413 01a7 00       		.byte	0
 4414 01a8 23       		.uleb128 0x23
 4415 01a9 2E       		.uleb128 0x2e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 155


 4416 01aa 01       		.byte	0x1
 4417 01ab 03       		.uleb128 0x3
 4418 01ac 0E       		.uleb128 0xe
 4419 01ad 3A       		.uleb128 0x3a
 4420 01ae 0B       		.uleb128 0xb
 4421 01af 3B       		.uleb128 0x3b
 4422 01b0 05       		.uleb128 0x5
 4423 01b1 27       		.uleb128 0x27
 4424 01b2 19       		.uleb128 0x19
 4425 01b3 11       		.uleb128 0x11
 4426 01b4 01       		.uleb128 0x1
 4427 01b5 12       		.uleb128 0x12
 4428 01b6 06       		.uleb128 0x6
 4429 01b7 40       		.uleb128 0x40
 4430 01b8 18       		.uleb128 0x18
 4431 01b9 9742     		.uleb128 0x2117
 4432 01bb 19       		.uleb128 0x19
 4433 01bc 01       		.uleb128 0x1
 4434 01bd 13       		.uleb128 0x13
 4435 01be 00       		.byte	0
 4436 01bf 00       		.byte	0
 4437 01c0 24       		.uleb128 0x24
 4438 01c1 05       		.uleb128 0x5
 4439 01c2 00       		.byte	0
 4440 01c3 03       		.uleb128 0x3
 4441 01c4 0E       		.uleb128 0xe
 4442 01c5 3A       		.uleb128 0x3a
 4443 01c6 0B       		.uleb128 0xb
 4444 01c7 3B       		.uleb128 0x3b
 4445 01c8 05       		.uleb128 0x5
 4446 01c9 49       		.uleb128 0x49
 4447 01ca 13       		.uleb128 0x13
 4448 01cb 02       		.uleb128 0x2
 4449 01cc 17       		.uleb128 0x17
 4450 01cd 00       		.byte	0
 4451 01ce 00       		.byte	0
 4452 01cf 25       		.uleb128 0x25
 4453 01d0 34       		.uleb128 0x34
 4454 01d1 00       		.byte	0
 4455 01d2 03       		.uleb128 0x3
 4456 01d3 0E       		.uleb128 0xe
 4457 01d4 3A       		.uleb128 0x3a
 4458 01d5 0B       		.uleb128 0xb
 4459 01d6 3B       		.uleb128 0x3b
 4460 01d7 05       		.uleb128 0x5
 4461 01d8 49       		.uleb128 0x49
 4462 01d9 13       		.uleb128 0x13
 4463 01da 02       		.uleb128 0x2
 4464 01db 17       		.uleb128 0x17
 4465 01dc 00       		.byte	0
 4466 01dd 00       		.byte	0
 4467 01de 26       		.uleb128 0x26
 4468 01df 34       		.uleb128 0x34
 4469 01e0 00       		.byte	0
 4470 01e1 03       		.uleb128 0x3
 4471 01e2 0E       		.uleb128 0xe
 4472 01e3 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 156


 4473 01e4 0B       		.uleb128 0xb
 4474 01e5 3B       		.uleb128 0x3b
 4475 01e6 05       		.uleb128 0x5
 4476 01e7 49       		.uleb128 0x49
 4477 01e8 13       		.uleb128 0x13
 4478 01e9 02       		.uleb128 0x2
 4479 01ea 18       		.uleb128 0x18
 4480 01eb 00       		.byte	0
 4481 01ec 00       		.byte	0
 4482 01ed 27       		.uleb128 0x27
 4483 01ee 1D       		.uleb128 0x1d
 4484 01ef 01       		.byte	0x1
 4485 01f0 31       		.uleb128 0x31
 4486 01f1 13       		.uleb128 0x13
 4487 01f2 11       		.uleb128 0x11
 4488 01f3 01       		.uleb128 0x1
 4489 01f4 12       		.uleb128 0x12
 4490 01f5 06       		.uleb128 0x6
 4491 01f6 58       		.uleb128 0x58
 4492 01f7 0B       		.uleb128 0xb
 4493 01f8 59       		.uleb128 0x59
 4494 01f9 05       		.uleb128 0x5
 4495 01fa 01       		.uleb128 0x1
 4496 01fb 13       		.uleb128 0x13
 4497 01fc 00       		.byte	0
 4498 01fd 00       		.byte	0
 4499 01fe 28       		.uleb128 0x28
 4500 01ff 05       		.uleb128 0x5
 4501 0200 00       		.byte	0
 4502 0201 31       		.uleb128 0x31
 4503 0202 13       		.uleb128 0x13
 4504 0203 02       		.uleb128 0x2
 4505 0204 17       		.uleb128 0x17
 4506 0205 00       		.byte	0
 4507 0206 00       		.byte	0
 4508 0207 29       		.uleb128 0x29
 4509 0208 0B       		.uleb128 0xb
 4510 0209 01       		.byte	0x1
 4511 020a 11       		.uleb128 0x11
 4512 020b 01       		.uleb128 0x1
 4513 020c 12       		.uleb128 0x12
 4514 020d 06       		.uleb128 0x6
 4515 020e 00       		.byte	0
 4516 020f 00       		.byte	0
 4517 0210 2A       		.uleb128 0x2a
 4518 0211 34       		.uleb128 0x34
 4519 0212 00       		.byte	0
 4520 0213 31       		.uleb128 0x31
 4521 0214 13       		.uleb128 0x13
 4522 0215 02       		.uleb128 0x2
 4523 0216 18       		.uleb128 0x18
 4524 0217 00       		.byte	0
 4525 0218 00       		.byte	0
 4526 0219 2B       		.uleb128 0x2b
 4527 021a 898201   		.uleb128 0x4109
 4528 021d 01       		.byte	0x1
 4529 021e 11       		.uleb128 0x11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 157


 4530 021f 01       		.uleb128 0x1
 4531 0220 31       		.uleb128 0x31
 4532 0221 13       		.uleb128 0x13
 4533 0222 00       		.byte	0
 4534 0223 00       		.byte	0
 4535 0224 2C       		.uleb128 0x2c
 4536 0225 8A8201   		.uleb128 0x410a
 4537 0228 00       		.byte	0
 4538 0229 02       		.uleb128 0x2
 4539 022a 18       		.uleb128 0x18
 4540 022b 9142     		.uleb128 0x2111
 4541 022d 18       		.uleb128 0x18
 4542 022e 00       		.byte	0
 4543 022f 00       		.byte	0
 4544 0230 2D       		.uleb128 0x2d
 4545 0231 898201   		.uleb128 0x4109
 4546 0234 01       		.byte	0x1
 4547 0235 11       		.uleb128 0x11
 4548 0236 01       		.uleb128 0x1
 4549 0237 31       		.uleb128 0x31
 4550 0238 13       		.uleb128 0x13
 4551 0239 01       		.uleb128 0x1
 4552 023a 13       		.uleb128 0x13
 4553 023b 00       		.byte	0
 4554 023c 00       		.byte	0
 4555 023d 2E       		.uleb128 0x2e
 4556 023e 898201   		.uleb128 0x4109
 4557 0241 00       		.byte	0
 4558 0242 11       		.uleb128 0x11
 4559 0243 01       		.uleb128 0x1
 4560 0244 31       		.uleb128 0x31
 4561 0245 13       		.uleb128 0x13
 4562 0246 00       		.byte	0
 4563 0247 00       		.byte	0
 4564 0248 2F       		.uleb128 0x2f
 4565 0249 2E       		.uleb128 0x2e
 4566 024a 01       		.byte	0x1
 4567 024b 3F       		.uleb128 0x3f
 4568 024c 19       		.uleb128 0x19
 4569 024d 03       		.uleb128 0x3
 4570 024e 0E       		.uleb128 0xe
 4571 024f 3A       		.uleb128 0x3a
 4572 0250 0B       		.uleb128 0xb
 4573 0251 3B       		.uleb128 0x3b
 4574 0252 0B       		.uleb128 0xb
 4575 0253 27       		.uleb128 0x27
 4576 0254 19       		.uleb128 0x19
 4577 0255 11       		.uleb128 0x11
 4578 0256 01       		.uleb128 0x1
 4579 0257 12       		.uleb128 0x12
 4580 0258 06       		.uleb128 0x6
 4581 0259 40       		.uleb128 0x40
 4582 025a 18       		.uleb128 0x18
 4583 025b 9742     		.uleb128 0x2117
 4584 025d 19       		.uleb128 0x19
 4585 025e 01       		.uleb128 0x1
 4586 025f 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 158


 4587 0260 00       		.byte	0
 4588 0261 00       		.byte	0
 4589 0262 30       		.uleb128 0x30
 4590 0263 34       		.uleb128 0x34
 4591 0264 00       		.byte	0
 4592 0265 03       		.uleb128 0x3
 4593 0266 0E       		.uleb128 0xe
 4594 0267 3A       		.uleb128 0x3a
 4595 0268 0B       		.uleb128 0xb
 4596 0269 3B       		.uleb128 0x3b
 4597 026a 0B       		.uleb128 0xb
 4598 026b 49       		.uleb128 0x49
 4599 026c 13       		.uleb128 0x13
 4600 026d 02       		.uleb128 0x2
 4601 026e 17       		.uleb128 0x17
 4602 026f 00       		.byte	0
 4603 0270 00       		.byte	0
 4604 0271 31       		.uleb128 0x31
 4605 0272 1D       		.uleb128 0x1d
 4606 0273 01       		.byte	0x1
 4607 0274 31       		.uleb128 0x31
 4608 0275 13       		.uleb128 0x13
 4609 0276 11       		.uleb128 0x11
 4610 0277 01       		.uleb128 0x1
 4611 0278 12       		.uleb128 0x12
 4612 0279 06       		.uleb128 0x6
 4613 027a 58       		.uleb128 0x58
 4614 027b 0B       		.uleb128 0xb
 4615 027c 59       		.uleb128 0x59
 4616 027d 0B       		.uleb128 0xb
 4617 027e 01       		.uleb128 0x1
 4618 027f 13       		.uleb128 0x13
 4619 0280 00       		.byte	0
 4620 0281 00       		.byte	0
 4621 0282 32       		.uleb128 0x32
 4622 0283 05       		.uleb128 0x5
 4623 0284 00       		.byte	0
 4624 0285 31       		.uleb128 0x31
 4625 0286 13       		.uleb128 0x13
 4626 0287 00       		.byte	0
 4627 0288 00       		.byte	0
 4628 0289 33       		.uleb128 0x33
 4629 028a 2E       		.uleb128 0x2e
 4630 028b 01       		.byte	0x1
 4631 028c 3F       		.uleb128 0x3f
 4632 028d 19       		.uleb128 0x19
 4633 028e 03       		.uleb128 0x3
 4634 028f 0E       		.uleb128 0xe
 4635 0290 3A       		.uleb128 0x3a
 4636 0291 0B       		.uleb128 0xb
 4637 0292 3B       		.uleb128 0x3b
 4638 0293 0B       		.uleb128 0xb
 4639 0294 27       		.uleb128 0x27
 4640 0295 19       		.uleb128 0x19
 4641 0296 8701     		.uleb128 0x87
 4642 0298 19       		.uleb128 0x19
 4643 0299 11       		.uleb128 0x11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 159


 4644 029a 01       		.uleb128 0x1
 4645 029b 12       		.uleb128 0x12
 4646 029c 06       		.uleb128 0x6
 4647 029d 40       		.uleb128 0x40
 4648 029e 18       		.uleb128 0x18
 4649 029f 9742     		.uleb128 0x2117
 4650 02a1 19       		.uleb128 0x19
 4651 02a2 01       		.uleb128 0x1
 4652 02a3 13       		.uleb128 0x13
 4653 02a4 00       		.byte	0
 4654 02a5 00       		.byte	0
 4655 02a6 34       		.uleb128 0x34
 4656 02a7 05       		.uleb128 0x5
 4657 02a8 00       		.byte	0
 4658 02a9 03       		.uleb128 0x3
 4659 02aa 0E       		.uleb128 0xe
 4660 02ab 3A       		.uleb128 0x3a
 4661 02ac 0B       		.uleb128 0xb
 4662 02ad 3B       		.uleb128 0x3b
 4663 02ae 0B       		.uleb128 0xb
 4664 02af 49       		.uleb128 0x49
 4665 02b0 13       		.uleb128 0x13
 4666 02b1 02       		.uleb128 0x2
 4667 02b2 17       		.uleb128 0x17
 4668 02b3 00       		.byte	0
 4669 02b4 00       		.byte	0
 4670 02b5 35       		.uleb128 0x35
 4671 02b6 34       		.uleb128 0x34
 4672 02b7 00       		.byte	0
 4673 02b8 03       		.uleb128 0x3
 4674 02b9 0E       		.uleb128 0xe
 4675 02ba 3A       		.uleb128 0x3a
 4676 02bb 0B       		.uleb128 0xb
 4677 02bc 3B       		.uleb128 0x3b
 4678 02bd 0B       		.uleb128 0xb
 4679 02be 49       		.uleb128 0x49
 4680 02bf 13       		.uleb128 0x13
 4681 02c0 02       		.uleb128 0x2
 4682 02c1 18       		.uleb128 0x18
 4683 02c2 00       		.byte	0
 4684 02c3 00       		.byte	0
 4685 02c4 36       		.uleb128 0x36
 4686 02c5 05       		.uleb128 0x5
 4687 02c6 00       		.byte	0
 4688 02c7 31       		.uleb128 0x31
 4689 02c8 13       		.uleb128 0x13
 4690 02c9 1C       		.uleb128 0x1c
 4691 02ca 0B       		.uleb128 0xb
 4692 02cb 00       		.byte	0
 4693 02cc 00       		.byte	0
 4694 02cd 37       		.uleb128 0x37
 4695 02ce 05       		.uleb128 0x5
 4696 02cf 00       		.byte	0
 4697 02d0 31       		.uleb128 0x31
 4698 02d1 13       		.uleb128 0x13
 4699 02d2 02       		.uleb128 0x2
 4700 02d3 18       		.uleb128 0x18
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 160


 4701 02d4 00       		.byte	0
 4702 02d5 00       		.byte	0
 4703 02d6 38       		.uleb128 0x38
 4704 02d7 34       		.uleb128 0x34
 4705 02d8 00       		.byte	0
 4706 02d9 03       		.uleb128 0x3
 4707 02da 0E       		.uleb128 0xe
 4708 02db 3A       		.uleb128 0x3a
 4709 02dc 0B       		.uleb128 0xb
 4710 02dd 3B       		.uleb128 0x3b
 4711 02de 05       		.uleb128 0x5
 4712 02df 49       		.uleb128 0x49
 4713 02e0 13       		.uleb128 0x13
 4714 02e1 3F       		.uleb128 0x3f
 4715 02e2 19       		.uleb128 0x19
 4716 02e3 3C       		.uleb128 0x3c
 4717 02e4 19       		.uleb128 0x19
 4718 02e5 00       		.byte	0
 4719 02e6 00       		.byte	0
 4720 02e7 39       		.uleb128 0x39
 4721 02e8 34       		.uleb128 0x34
 4722 02e9 00       		.byte	0
 4723 02ea 03       		.uleb128 0x3
 4724 02eb 0E       		.uleb128 0xe
 4725 02ec 3A       		.uleb128 0x3a
 4726 02ed 0B       		.uleb128 0xb
 4727 02ee 3B       		.uleb128 0x3b
 4728 02ef 0B       		.uleb128 0xb
 4729 02f0 49       		.uleb128 0x49
 4730 02f1 13       		.uleb128 0x13
 4731 02f2 3F       		.uleb128 0x3f
 4732 02f3 19       		.uleb128 0x19
 4733 02f4 3C       		.uleb128 0x3c
 4734 02f5 19       		.uleb128 0x19
 4735 02f6 00       		.byte	0
 4736 02f7 00       		.byte	0
 4737 02f8 3A       		.uleb128 0x3a
 4738 02f9 34       		.uleb128 0x34
 4739 02fa 00       		.byte	0
 4740 02fb 03       		.uleb128 0x3
 4741 02fc 0E       		.uleb128 0xe
 4742 02fd 3A       		.uleb128 0x3a
 4743 02fe 0B       		.uleb128 0xb
 4744 02ff 3B       		.uleb128 0x3b
 4745 0300 0B       		.uleb128 0xb
 4746 0301 49       		.uleb128 0x49
 4747 0302 13       		.uleb128 0x13
 4748 0303 3F       		.uleb128 0x3f
 4749 0304 19       		.uleb128 0x19
 4750 0305 02       		.uleb128 0x2
 4751 0306 18       		.uleb128 0x18
 4752 0307 00       		.byte	0
 4753 0308 00       		.byte	0
 4754 0309 3B       		.uleb128 0x3b
 4755 030a 2E       		.uleb128 0x2e
 4756 030b 00       		.byte	0
 4757 030c 3F       		.uleb128 0x3f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 161


 4758 030d 19       		.uleb128 0x19
 4759 030e 3C       		.uleb128 0x3c
 4760 030f 19       		.uleb128 0x19
 4761 0310 6E       		.uleb128 0x6e
 4762 0311 0E       		.uleb128 0xe
 4763 0312 03       		.uleb128 0x3
 4764 0313 0E       		.uleb128 0xe
 4765 0314 3A       		.uleb128 0x3a
 4766 0315 0B       		.uleb128 0xb
 4767 0316 3B       		.uleb128 0x3b
 4768 0317 05       		.uleb128 0x5
 4769 0318 00       		.byte	0
 4770 0319 00       		.byte	0
 4771 031a 3C       		.uleb128 0x3c
 4772 031b 2E       		.uleb128 0x2e
 4773 031c 00       		.byte	0
 4774 031d 3F       		.uleb128 0x3f
 4775 031e 19       		.uleb128 0x19
 4776 031f 3C       		.uleb128 0x3c
 4777 0320 19       		.uleb128 0x19
 4778 0321 6E       		.uleb128 0x6e
 4779 0322 0E       		.uleb128 0xe
 4780 0323 03       		.uleb128 0x3
 4781 0324 0E       		.uleb128 0xe
 4782 0325 3A       		.uleb128 0x3a
 4783 0326 0B       		.uleb128 0xb
 4784 0327 3B       		.uleb128 0x3b
 4785 0328 0B       		.uleb128 0xb
 4786 0329 00       		.byte	0
 4787 032a 00       		.byte	0
 4788 032b 00       		.byte	0
 4789              		.section	.debug_loc,"",%progbits
 4790              	.Ldebug_loc0:
 4791              	.LLST0:
 4792 0000 00000000 		.4byte	.LVL0
 4793 0004 12000000 		.4byte	.LVL1
 4794 0008 0100     		.2byte	0x1
 4795 000a 50       		.byte	0x50
 4796 000b 12000000 		.4byte	.LVL1
 4797 000f 44000000 		.4byte	.LFE716
 4798 0013 0400     		.2byte	0x4
 4799 0015 F3       		.byte	0xf3
 4800 0016 01       		.uleb128 0x1
 4801 0017 50       		.byte	0x50
 4802 0018 9F       		.byte	0x9f
 4803 0019 00000000 		.4byte	0
 4804 001d 00000000 		.4byte	0
 4805              	.LLST1:
 4806 0021 18000000 		.4byte	.LVL2
 4807 0025 2A000000 		.4byte	.LVL4
 4808 0029 0100     		.2byte	0x1
 4809 002b 50       		.byte	0x50
 4810 002c 00000000 		.4byte	0
 4811 0030 00000000 		.4byte	0
 4812              	.LLST2:
 4813 0034 1C000000 		.4byte	.LVL3
 4814 0038 30000000 		.4byte	.LVL5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 162


 4815 003c 0200     		.2byte	0x2
 4816 003e 30       		.byte	0x30
 4817 003f 9F       		.byte	0x9f
 4818 0040 00000000 		.4byte	0
 4819 0044 00000000 		.4byte	0
 4820              	.LLST3:
 4821 0048 1C000000 		.4byte	.LVL3
 4822 004c 30000000 		.4byte	.LVL5
 4823 0050 0600     		.2byte	0x6
 4824 0052 03       		.byte	0x3
 4825 0053 00000000 		.4byte	.LC0
 4826 0057 9F       		.byte	0x9f
 4827 0058 00000000 		.4byte	0
 4828 005c 00000000 		.4byte	0
 4829              	.LLST4:
 4830 0060 30000000 		.4byte	.LVL8
 4831 0064 42000000 		.4byte	.LVL10
 4832 0068 0100     		.2byte	0x1
 4833 006a 50       		.byte	0x50
 4834 006b 00000000 		.4byte	0
 4835 006f 00000000 		.4byte	0
 4836              	.LLST5:
 4837 0073 34000000 		.4byte	.LVL9
 4838 0077 4A000000 		.4byte	.LVL12
 4839 007b 0200     		.2byte	0x2
 4840 007d 30       		.byte	0x30
 4841 007e 9F       		.byte	0x9f
 4842 007f 00000000 		.4byte	0
 4843 0083 00000000 		.4byte	0
 4844              	.LLST6:
 4845 0087 34000000 		.4byte	.LVL9
 4846 008b 4A000000 		.4byte	.LVL12
 4847 008f 0600     		.2byte	0x6
 4848 0091 03       		.byte	0x3
 4849 0092 50000000 		.4byte	.LC2
 4850 0096 9F       		.byte	0x9f
 4851 0097 00000000 		.4byte	0
 4852 009b 00000000 		.4byte	0
 4853              	.LLST7:
 4854 009f 4A000000 		.4byte	.LVL12
 4855 00a3 5E000000 		.4byte	.LVL13
 4856 00a7 0200     		.2byte	0x2
 4857 00a9 30       		.byte	0x30
 4858 00aa 9F       		.byte	0x9f
 4859 00ab 00000000 		.4byte	0
 4860 00af 00000000 		.4byte	0
 4861              	.LLST8:
 4862 00b3 4A000000 		.4byte	.LVL12
 4863 00b7 5E000000 		.4byte	.LVL13
 4864 00bb 0600     		.2byte	0x6
 4865 00bd 03       		.byte	0x3
 4866 00be 80000000 		.4byte	.LC3
 4867 00c2 9F       		.byte	0x9f
 4868 00c3 00000000 		.4byte	0
 4869 00c7 00000000 		.4byte	0
 4870              	.LLST9:
 4871 00cb 00000000 		.4byte	.LVL14
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 163


 4872 00cf 12000000 		.4byte	.LVL15
 4873 00d3 0100     		.2byte	0x1
 4874 00d5 50       		.byte	0x50
 4875 00d6 12000000 		.4byte	.LVL15
 4876 00da 15000000 		.4byte	.LVL16-1
 4877 00de 0100     		.2byte	0x1
 4878 00e0 52       		.byte	0x52
 4879 00e1 15000000 		.4byte	.LVL16-1
 4880 00e5 40000000 		.4byte	.LFE718
 4881 00e9 0400     		.2byte	0x4
 4882 00eb F3       		.byte	0xf3
 4883 00ec 01       		.uleb128 0x1
 4884 00ed 50       		.byte	0x50
 4885 00ee 9F       		.byte	0x9f
 4886 00ef 00000000 		.4byte	0
 4887 00f3 00000000 		.4byte	0
 4888              	.LLST10:
 4889 00f7 16000000 		.4byte	.LVL16
 4890 00fb 28000000 		.4byte	.LVL18
 4891 00ff 0100     		.2byte	0x1
 4892 0101 50       		.byte	0x50
 4893 0102 00000000 		.4byte	0
 4894 0106 00000000 		.4byte	0
 4895              	.LLST11:
 4896 010a 1A000000 		.4byte	.LVL17
 4897 010e 2E000000 		.4byte	.LVL19
 4898 0112 0200     		.2byte	0x2
 4899 0114 30       		.byte	0x30
 4900 0115 9F       		.byte	0x9f
 4901 0116 00000000 		.4byte	0
 4902 011a 00000000 		.4byte	0
 4903              	.LLST12:
 4904 011e 1A000000 		.4byte	.LVL17
 4905 0122 2E000000 		.4byte	.LVL19
 4906 0126 0600     		.2byte	0x6
 4907 0128 03       		.byte	0x3
 4908 0129 AC000000 		.4byte	.LC4
 4909 012d 9F       		.byte	0x9f
 4910 012e 00000000 		.4byte	0
 4911 0132 00000000 		.4byte	0
 4912              	.LLST13:
 4913 0136 3A000000 		.4byte	.LVL25
 4914 013a 4C000000 		.4byte	.LVL27
 4915 013e 0100     		.2byte	0x1
 4916 0140 50       		.byte	0x50
 4917 0141 00000000 		.4byte	0
 4918 0145 00000000 		.4byte	0
 4919              	.LLST14:
 4920 0149 04000000 		.4byte	.LVL20
 4921 014d 0A000000 		.4byte	.LVL21
 4922 0151 0600     		.2byte	0x6
 4923 0153 0C       		.byte	0xc
 4924 0154 00001D41 		.4byte	0x411d0000
 4925 0158 9F       		.byte	0x9f
 4926 0159 00000000 		.4byte	0
 4927 015d 00000000 		.4byte	0
 4928              	.LLST15:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 164


 4929 0161 0A000000 		.4byte	.LVL21
 4930 0165 22000000 		.4byte	.LVL23
 4931 0169 0600     		.2byte	0x6
 4932 016b 0C       		.byte	0xc
 4933 016c 00001D41 		.4byte	0x411d0000
 4934 0170 9F       		.byte	0x9f
 4935 0171 00000000 		.4byte	0
 4936 0175 00000000 		.4byte	0
 4937              	.LLST16:
 4938 0179 22000000 		.4byte	.LVL23
 4939 017d 26000000 		.4byte	.LVL24
 4940 0181 0600     		.2byte	0x6
 4941 0183 0C       		.byte	0xc
 4942 0184 00001D41 		.4byte	0x411d0000
 4943 0188 9F       		.byte	0x9f
 4944 0189 00000000 		.4byte	0
 4945 018d 00000000 		.4byte	0
 4946              	.LLST17:
 4947 0191 3E000000 		.4byte	.LVL26
 4948 0195 52000000 		.4byte	.LVL28
 4949 0199 0200     		.2byte	0x2
 4950 019b 30       		.byte	0x30
 4951 019c 9F       		.byte	0x9f
 4952 019d 00000000 		.4byte	0
 4953 01a1 00000000 		.4byte	0
 4954              	.LLST18:
 4955 01a5 3E000000 		.4byte	.LVL26
 4956 01a9 52000000 		.4byte	.LVL28
 4957 01ad 0600     		.2byte	0x6
 4958 01af 03       		.byte	0x3
 4959 01b0 00000000 		.4byte	.LC0
 4960 01b4 9F       		.byte	0x9f
 4961 01b5 00000000 		.4byte	0
 4962 01b9 00000000 		.4byte	0
 4963              	.LLST19:
 4964 01bd 00000000 		.4byte	.LVL29
 4965 01c1 0A000000 		.4byte	.LVL31
 4966 01c5 0100     		.2byte	0x1
 4967 01c7 50       		.byte	0x50
 4968 01c8 0A000000 		.4byte	.LVL31
 4969 01cc BC010000 		.4byte	.LFE714
 4970 01d0 0400     		.2byte	0x4
 4971 01d2 F3       		.byte	0xf3
 4972 01d3 01       		.uleb128 0x1
 4973 01d4 50       		.byte	0x50
 4974 01d5 9F       		.byte	0x9f
 4975 01d6 00000000 		.4byte	0
 4976 01da 00000000 		.4byte	0
 4977              	.LLST20:
 4978 01de 2E000000 		.4byte	.LVL37
 4979 01e2 48000000 		.4byte	.LVL39
 4980 01e6 0100     		.2byte	0x1
 4981 01e8 50       		.byte	0x50
 4982 01e9 50000000 		.4byte	.LVL41
 4983 01ed 54000000 		.4byte	.LVL42
 4984 01f1 0100     		.2byte	0x1
 4985 01f3 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 165


 4986 01f4 5C000000 		.4byte	.LVL44
 4987 01f8 74000000 		.4byte	.LVL45
 4988 01fc 0100     		.2byte	0x1
 4989 01fe 50       		.byte	0x50
 4990 01ff 28010000 		.4byte	.LVL58
 4991 0203 3A010000 		.4byte	.LVL61
 4992 0207 0100     		.2byte	0x1
 4993 0209 50       		.byte	0x50
 4994 020a 4A010000 		.4byte	.LVL64
 4995 020e 58010000 		.4byte	.LVL66
 4996 0212 0100     		.2byte	0x1
 4997 0214 50       		.byte	0x50
 4998 0215 60010000 		.4byte	.LVL68
 4999 0219 6E010000 		.4byte	.LVL69
 5000 021d 0100     		.2byte	0x1
 5001 021f 50       		.byte	0x50
 5002 0220 00000000 		.4byte	0
 5003 0224 00000000 		.4byte	0
 5004              	.LLST21:
 5005 0228 08000000 		.4byte	.LVL30
 5006 022c 1C000000 		.4byte	.LVL36
 5007 0230 0200     		.2byte	0x2
 5008 0232 30       		.byte	0x30
 5009 0233 9F       		.byte	0x9f
 5010 0234 1C000000 		.4byte	.LVL36
 5011 0238 46000000 		.4byte	.LVL38
 5012 023c 0100     		.2byte	0x1
 5013 023e 54       		.byte	0x54
 5014 023f 46000000 		.4byte	.LVL38
 5015 0243 50000000 		.4byte	.LVL41
 5016 0247 0200     		.2byte	0x2
 5017 0249 31       		.byte	0x31
 5018 024a 9F       		.byte	0x9f
 5019 024b 50000000 		.4byte	.LVL41
 5020 024f 5C000000 		.4byte	.LVL44
 5021 0253 0200     		.2byte	0x2
 5022 0255 30       		.byte	0x30
 5023 0256 9F       		.byte	0x9f
 5024 0257 5C000000 		.4byte	.LVL44
 5025 025b BC010000 		.4byte	.LFE714
 5026 025f 0100     		.2byte	0x1
 5027 0261 54       		.byte	0x54
 5028 0262 00000000 		.4byte	0
 5029 0266 00000000 		.4byte	0
 5030              	.LLST22:
 5031 026a D0000000 		.4byte	.LVL54
 5032 026e DF000000 		.4byte	.LVL55-1
 5033 0272 0200     		.2byte	0x2
 5034 0274 90       		.byte	0x90
 5035 0275 4E       		.uleb128 0x4e
 5036 0276 DF000000 		.4byte	.LVL55-1
 5037 027a 28010000 		.4byte	.LVL58
 5038 027e 0800     		.2byte	0x8
 5039 0280 F5       		.byte	0xf5
 5040 0281 50       		.uleb128 0x50
 5041 0282 25       		.uleb128 0x25
 5042 0283 F5       		.byte	0xf5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 166


 5043 0284 51       		.uleb128 0x51
 5044 0285 25       		.uleb128 0x25
 5045 0286 1B       		.byte	0x1b
 5046 0287 9F       		.byte	0x9f
 5047 0288 00000000 		.4byte	0
 5048 028c 00000000 		.4byte	0
 5049              	.LLST23:
 5050 0290 5C000000 		.4byte	.LVL44
 5051 0294 84000000 		.4byte	.LVL48
 5052 0298 0200     		.2byte	0x2
 5053 029a 30       		.byte	0x30
 5054 029b 9F       		.byte	0x9f
 5055 029c 00000000 		.4byte	0
 5056 02a0 00000000 		.4byte	0
 5057              	.LLST24:
 5058 02a4 84000000 		.4byte	.LVL48
 5059 02a8 B0000000 		.4byte	.LVL51
 5060 02ac 0200     		.2byte	0x2
 5061 02ae 31       		.byte	0x31
 5062 02af 9F       		.byte	0x9f
 5063 02b0 00000000 		.4byte	0
 5064 02b4 00000000 		.4byte	0
 5065              	.LLST25:
 5066 02b8 B6000000 		.4byte	.LVL52
 5067 02bc BC000000 		.4byte	.LVL53
 5068 02c0 0200     		.2byte	0x2
 5069 02c2 30       		.byte	0x30
 5070 02c3 9F       		.byte	0x9f
 5071 02c4 00000000 		.4byte	0
 5072 02c8 00000000 		.4byte	0
 5073              	.LLST26:
 5074 02cc B6000000 		.4byte	.LVL52
 5075 02d0 BC000000 		.4byte	.LVL53
 5076 02d4 0600     		.2byte	0x6
 5077 02d6 0C       		.byte	0xc
 5078 02d7 00053240 		.4byte	0x40320500
 5079 02db 9F       		.byte	0x9f
 5080 02dc 00000000 		.4byte	0
 5081 02e0 00000000 		.4byte	0
 5082              	.LLST27:
 5083 02e4 32010000 		.4byte	.LVL59
 5084 02e8 38010000 		.4byte	.LVL60
 5085 02ec 0200     		.2byte	0x2
 5086 02ee 30       		.byte	0x30
 5087 02ef 9F       		.byte	0x9f
 5088 02f0 00000000 		.4byte	0
 5089 02f4 00000000 		.4byte	0
 5090              	.LLST28:
 5091 02f8 32010000 		.4byte	.LVL59
 5092 02fc 38010000 		.4byte	.LVL60
 5093 0300 0600     		.2byte	0x6
 5094 0302 0C       		.byte	0xc
 5095 0303 00053240 		.4byte	0x40320500
 5096 0307 9F       		.byte	0x9f
 5097 0308 00000000 		.4byte	0
 5098 030c 00000000 		.4byte	0
 5099              	.LLST29:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 167


 5100 0310 4A010000 		.4byte	.LVL64
 5101 0314 52010000 		.4byte	.LVL65
 5102 0318 0100     		.2byte	0x1
 5103 031a 53       		.byte	0x53
 5104 031b 52010000 		.4byte	.LVL65
 5105 031f 5D010000 		.4byte	.LVL67-1
 5106 0323 0200     		.2byte	0x2
 5107 0325 91       		.byte	0x91
 5108 0326 54       		.sleb128 -44
 5109 0327 00000000 		.4byte	0
 5110 032b 00000000 		.4byte	0
 5111              	.LLST30:
 5112 032f 4A010000 		.4byte	.LVL64
 5113 0333 60010000 		.4byte	.LVL68
 5114 0337 0600     		.2byte	0x6
 5115 0339 03       		.byte	0x3
 5116 033a 30010000 		.4byte	.LC7
 5117 033e 9F       		.byte	0x9f
 5118 033f 00000000 		.4byte	0
 5119 0343 00000000 		.4byte	0
 5120              		.section	.debug_aranges,"",%progbits
 5121 0000 3C000000 		.4byte	0x3c
 5122 0004 0200     		.2byte	0x2
 5123 0006 00000000 		.4byte	.Ldebug_info0
 5124 000a 04       		.byte	0x4
 5125 000b 00       		.byte	0
 5126 000c 0000     		.2byte	0
 5127 000e 0000     		.2byte	0
 5128 0010 00000000 		.4byte	.LFB716
 5129 0014 44000000 		.4byte	.LFE716-.LFB716
 5130 0018 00000000 		.4byte	.LFB717
 5131 001c 7C000000 		.4byte	.LFE717-.LFB717
 5132 0020 00000000 		.4byte	.LFB718
 5133 0024 40000000 		.4byte	.LFE718-.LFB718
 5134 0028 00000000 		.4byte	.LFB715
 5135 002c 6C000000 		.4byte	.LFE715-.LFB715
 5136 0030 00000000 		.4byte	.LFB714
 5137 0034 BC010000 		.4byte	.LFE714-.LFB714
 5138 0038 00000000 		.4byte	0
 5139 003c 00000000 		.4byte	0
 5140              		.section	.debug_ranges,"",%progbits
 5141              	.Ldebug_ranges0:
 5142 0000 00000000 		.4byte	.LFB716
 5143 0004 44000000 		.4byte	.LFE716
 5144 0008 00000000 		.4byte	.LFB717
 5145 000c 7C000000 		.4byte	.LFE717
 5146 0010 00000000 		.4byte	.LFB718
 5147 0014 40000000 		.4byte	.LFE718
 5148 0018 00000000 		.4byte	.LFB715
 5149 001c 6C000000 		.4byte	.LFE715
 5150 0020 00000000 		.4byte	.LFB714
 5151 0024 BC010000 		.4byte	.LFE714
 5152 0028 00000000 		.4byte	0
 5153 002c 00000000 		.4byte	0
 5154              		.section	.debug_line,"",%progbits
 5155              	.Ldebug_line0:
 5156 0000 B7060000 		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 168


 5156      0200BA05 
 5156      00000201 
 5156      FB0E0D00 
 5156      01010101 
 5157              	.LASF386:
 5158 0000 63795F62 		.ascii	"cy_ble_connState\000"
 5158      6C655F63 
 5158      6F6E6E53 
 5158      74617465 
 5158      00
 5159              	.LASF318:
 5160 0011 43595F42 		.ascii	"CY_BLE_HTS_TEMP_TYPE\000"
 5160      4C455F48 
 5160      54535F54 
 5160      454D505F 
 5160      54595045 
 5161              	.LASF33:
 5162 0026 52455345 		.ascii	"RESERVED\000"
 5162      52564544 
 5162      00
 5163              	.LASF41:
 5164 002f 5644445F 		.ascii	"VDD_ACTIVE\000"
 5164      41435449 
 5164      564500
 5165              	.LASF37:
 5166 003a 494E5452 		.ascii	"INTR_CAUSE0\000"
 5166      5F434155 
 5166      53453000 
 5167              	.LASF38:
 5168 0046 494E5452 		.ascii	"INTR_CAUSE1\000"
 5168      5F434155 
 5168      53453100 
 5169              	.LASF285:
 5170 0052 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 5170      4C455F45 
 5170      56545F4C 
 5170      32434150 
 5170      5F434246 
 5171              	.LASF127:
 5172 0072 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 5172      625F7363 
 5172      625F7370 
 5172      695F6861 
 5172      6E646C65 
 5173              	.LASF122:
 5174 0090 73746F70 		.ascii	"stopInputMode\000"
 5174      496E7075 
 5174      744D6F64 
 5174      6500
 5175              	.LASF233:
 5176 009e 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 5176      4C455F45 
 5176      56545F47 
 5176      4150505F 
 5176      41445645 
 5177              	.LASF327:
 5178 00c7 43595F42 		.ascii	"CY_BLE_SRVI_COUNT\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 169


 5178      4C455F53 
 5178      5256495F 
 5178      434F554E 
 5178      5400
 5179              	.LASF316:
 5180 00d9 43595F42 		.ascii	"CY_BLE_DIS_CHAR_COUNT\000"
 5180      4C455F44 
 5180      49535F43 
 5180      4841525F 
 5180      434F554E 
 5181              	.LASF8:
 5182 00ef 73686F72 		.ascii	"short int\000"
 5182      7420696E 
 5182      7400
 5183              	.LASF287:
 5184 00f9 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 5184      4C455F45 
 5184      56545F4C 
 5184      32434150 
 5184      5F434246 
 5185              	.LASF180:
 5186 011d 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 5186      4C455F45 
 5186      56545F50 
 5186      454E4449 
 5186      4E475F46 
 5187              	.LASF218:
 5188 013c 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 5188      4C455F45 
 5188      56545F41 
 5188      45535F43 
 5188      434D5F44 
 5189              	.LASF271:
 5190 0160 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 5190      4C455F45 
 5190      56545F47 
 5190      41545443 
 5190      5F48414E 
 5191              	.LASF387:
 5192 0182 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 5192      494E4B5F 
 5192      5350494D 
 5192      5F636F6E 
 5192      74657874 
 5193              	.LASF340:
 5194 0197 54454D50 		.ascii	"TEMPERATURE_TIMER_EXPIRED\000"
 5194      45524154 
 5194      5552455F 
 5194      54494D45 
 5194      525F4558 
 5195              	.LASF97:
 5196 01b1 666F726D 		.ascii	"format\000"
 5196      617400
 5197              	.LASF379:
 5198 01b8 74656D70 		.ascii	"temperature\000"
 5198      65726174 
 5198      75726500 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 170


 5199              	.LASF305:
 5200 01c4 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 5200      4C455F43 
 5200      4F4E4E5F 
 5200      53544154 
 5200      455F434C 
 5201              	.LASF53:
 5202 01e8 4348414E 		.ascii	"CHAN_EN\000"
 5202      5F454E00 
 5203              	.LASF142:
 5204 01f0 74785374 		.ascii	"txStatus\000"
 5204      61747573 
 5204      00
 5205              	.LASF418:
 5206 01f9 69737241 		.ascii	"isrADC\000"
 5206      444300
 5207              	.LASF212:
 5208 0200 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 5208      4C455F45 
 5208      56545F53 
 5208      45545F54 
 5208      585F5057 
 5209              	.LASF156:
 5210 021f 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 5210      41525F49 
 5210      4E54525F 
 5210      454F535F 
 5210      4D41534B 
 5211              	.LASF201:
 5212 0234 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 5212      4C455F45 
 5212      56545F47 
 5212      45545F50 
 5212      48595F43 
 5213              	.LASF367:
 5214 0250 54656D70 		.ascii	"TemperatureTimerUpdate\000"
 5214      65726174 
 5214      75726554 
 5214      696D6572 
 5214      55706461 
 5215              	.LASF61:
 5216 0267 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 5216      5F574F52 
 5216      4B5F5550 
 5216      44415445 
 5216      4400
 5217              	.LASF397:
 5218 0279 74656D70 		.ascii	"temperatureDataQ\000"
 5218      65726174 
 5218      75726544 
 5218      61746151 
 5218      00
 5219              	.LASF71:
 5220 028a 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 5220      455F494E 
 5220      54525F4D 
 5220      41534B00 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 171


 5221              	.LASF99:
 5222 029a 6461794F 		.ascii	"dayOfMonth\000"
 5222      664D6F6E 
 5222      746800
 5223              	.LASF286:
 5224 02a5 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 5224      4C455F45 
 5224      56545F4C 
 5224      32434150 
 5224      5F434246 
 5225              	.LASF1:
 5226 02c9 756E7369 		.ascii	"unsigned int\000"
 5226      676E6564 
 5226      20696E74 
 5226      00
 5227              	.LASF385:
 5228 02d6 63795F62 		.ascii	"cy_ble_connHandle\000"
 5228      6C655F63 
 5228      6F6E6E48 
 5228      616E646C 
 5228      6500
 5229              	.LASF394:
 5230 02e8 5254435F 		.ascii	"RTC_rtcDstStatus\000"
 5230      72746344 
 5230      73745374 
 5230      61747573 
 5230      00
 5231              	.LASF73:
 5232 02f9 494E5452 		.ascii	"INTR_CAUSE\000"
 5232      5F434155 
 5232      534500
 5233              	.LASF153:
 5234 0304 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 5234      41525F52 
 5234      414E4745 
 5234      5F434F4E 
 5234      445F4F55 
 5235              	.LASF103:
 5236 031e 63795F73 		.ascii	"cy_stc_rtc_dst_format_t\000"
 5236      74635F72 
 5236      74635F64 
 5236      73745F66 
 5236      6F726D61 
 5237              	.LASF235:
 5238 0336 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 5238      4C455F45 
 5238      56545F47 
 5238      41505F44 
 5238      45564943 
 5239              	.LASF136:
 5240 0359 74784275 		.ascii	"txBufIdx\000"
 5240      66496478 
 5240      00
 5241              	.LASF314:
 5242 0362 43595F42 		.ascii	"CY_BLE_DIS_REG_CERT_DATA\000"
 5242      4C455F44 
 5242      49535F52 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 172


 5242      45475F43 
 5242      4552545F 
 5243              	.LASF121:
 5244 037b 73746172 		.ascii	"startInput\000"
 5244      74496E70 
 5244      757400
 5245              	.LASF10:
 5246 0386 5F5F696E 		.ascii	"__int32_t\000"
 5246      7433325F 
 5246      7400
 5247              	.LASF309:
 5248 0390 43595F42 		.ascii	"CY_BLE_DIS_SERIAL_NUMBER\000"
 5248      4C455F44 
 5248      49535F53 
 5248      45524941 
 5248      4C5F4E55 
 5249              	.LASF106:
 5250 03a9 63795F73 		.ascii	"cy_stc_rtc_dst_t\000"
 5250      74635F72 
 5250      74635F64 
 5250      73745F74 
 5250      00
 5251              	.LASF95:
 5252 03ba 43595F52 		.ascii	"CY_RTC_DST_FIXED\000"
 5252      54435F44 
 5252      53545F46 
 5252      49584544 
 5252      00
 5253              	.LASF63:
 5254 03cb 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 5254      5F574F52 
 5254      4B5F4E45 
 5254      5756414C 
 5254      554500
 5255              	.LASF328:
 5256 03de 6368616E 		.ascii	"channelBase\000"
 5256      6E656C42 
 5256      61736500 
 5257              	.LASF64:
 5258 03ea 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 5258      5F524553 
 5258      554C545F 
 5258      4E455756 
 5258      414C5545 
 5259              	.LASF306:
 5260 03ff 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 5260      6E5F626C 
 5260      655F636F 
 5260      6E6E5F73 
 5260      74617465 
 5261              	.LASF193:
 5262 0416 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 5262      4C455F45 
 5262      56545F47 
 5262      45545F4C 
 5262      4F43414C 
 5263              	.LASF260:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 173


 5264 0438 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 5264      4C455F45 
 5264      56545F47 
 5264      41545443 
 5264      5F46494E 
 5265              	.LASF346:
 5266 0457 48414E44 		.ascii	"HANDLE_GPIO_INTERRUPT\000"
 5266      4C455F47 
 5266      50494F5F 
 5266      494E5445 
 5266      52525550 
 5267              	.LASF205:
 5268 046d 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 5268      4C455F45 
 5268      56545F53 
 5268      45545F50 
 5268      52495641 
 5269              	.LASF330:
 5270 0492 6877436F 		.ascii	"hwConfigStc\000"
 5270      6E666967 
 5270      53746300 
 5271              	.LASF23:
 5272 049e 4F55545F 		.ascii	"OUT_SET\000"
 5272      53455400 
 5273              	.LASF381:
 5274 04a6 70726F63 		.ascii	"processingComplete\000"
 5274      65737369 
 5274      6E67436F 
 5274      6D706C65 
 5274      746500
 5275              	.LASF123:
 5276 04b9 73746F70 		.ascii	"stopInput\000"
 5276      496E7075 
 5276      7400
 5277              	.LASF145:
 5278 04c3 72785269 		.ascii	"rxRingBufSize\000"
 5278      6E674275 
 5278      6653697A 
 5278      6500
 5279              	.LASF65:
 5280 04d1 53415455 		.ascii	"SATURATE_INTR\000"
 5280      52415445 
 5280      5F494E54 
 5280      5200
 5281              	.LASF49:
 5282 04df 53414D50 		.ascii	"SAMPLE_TIME01\000"
 5282      4C455F54 
 5282      494D4530 
 5282      3100
 5283              	.LASF254:
 5284 04ed 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 5284      4C455F45 
 5284      56545F47 
 5284      4154545F 
 5284      434F4E4E 
 5285              	.LASF77:
 5286 0509 494E4A5F 		.ascii	"INJ_RESULT\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 174


 5286      52455355 
 5286      4C5400
 5287              	.LASF28:
 5288 0514 494E5452 		.ascii	"INTR_SET\000"
 5288      5F534554 
 5288      00
 5289              	.LASF293:
 5290 051d 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 5290      4C455F41 
 5290      44565F53 
 5290      54415445 
 5290      5F53544F 
 5291              	.LASF409:
 5292 0536 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 5292      41525F57 
 5292      616B6575 
 5292      7000
 5293              	.LASF168:
 5294 0544 73617449 		.ascii	"satIntrMask\000"
 5294      6E74724D 
 5294      61736B00 
 5295              	.LASF353:
 5296 0550 73747269 		.ascii	"stringPtr\000"
 5296      6E675074 
 5296      7200
 5297              	.LASF261:
 5298 055a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 5298      4C455F45 
 5298      56545F47 
 5298      41545443 
 5298      5F46494E 
 5299              	.LASF203:
 5300 0582 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 5300      4C455F45 
 5300      56545F53 
 5300      45545F50 
 5300      48595F43 
 5301              	.LASF276:
 5302 059e 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 5302      4C455F45 
 5302      56545F47 
 5302      41545453 
 5302      5F524541 
 5303              	.LASF112:
 5304 05c8 636F6D70 		.ascii	"compare0\000"
 5304      61726530 
 5304      00
 5305              	.LASF113:
 5306 05d1 636F6D70 		.ascii	"compare1\000"
 5306      61726531 
 5306      00
 5307              	.LASF415:
 5308 05da 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5308      43313120 
 5308      352E342E 
 5308      31203230 
 5308      31363036 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 175


 5309 060d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 5309      20726576 
 5309      6973696F 
 5309      6E203233 
 5309      37373135 
 5310 0640 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 5310      70202D6D 
 5310      6670753D 
 5310      66707634 
 5310      2D73702D 
 5311 0673 65637469 		.ascii	"ections -ffat-lto-objects\000"
 5311      6F6E7320 
 5311      2D666661 
 5311      742D6C74 
 5311      6F2D6F62 
 5312              	.LASF248:
 5313 068d 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 5313      4C455F45 
 5313      56545F47 
 5313      41505F52 
 5313      45534F4C 
 5314              	.LASF150:
 5315 06b4 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 5315      41525F52 
 5315      414E4745 
 5315      5F434F4E 
 5315      445F4245 
 5316              	.LASF299:
 5317 06cc 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 5317      4C455F43 
 5317      4F4E4E5F 
 5317      53544154 
 5317      455F434C 
 5318              	.LASF270:
 5319 06fd 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 5319      4C455F45 
 5319      56545F47 
 5319      41545443 
 5319      5F455845 
 5320              	.LASF392:
 5321 071d 54696D65 		.ascii	"Timer_PPG_config\000"
 5321      725F5050 
 5321      475F636F 
 5321      6E666967 
 5321      00
 5322              	.LASF257:
 5323 072e 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 5323      4C455F45 
 5323      56545F47 
 5323      41545443 
 5323      5F584348 
 5324              	.LASF273:
 5325 074d 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 5325      4C455F45 
 5325      56545F47 
 5325      41545453 
 5325      5F48414E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 176


 5326              	.LASF143:
 5327 076f 72785374 		.ascii	"rxStatus\000"
 5327      61747573 
 5327      00
 5328              	.LASF30:
 5329 0778 4346475F 		.ascii	"CFG_IN\000"
 5329      494E00
 5330              	.LASF204:
 5331 077f 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 5331      4C455F45 
 5331      56545F50 
 5331      48595F55 
 5331      50444154 
 5332              	.LASF408:
 5333 079e 43795F53 		.ascii	"Cy_SAR_Sleep\000"
 5333      41525F53 
 5333      6C656570 
 5333      00
 5334              	.LASF262:
 5335 07ab 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 5335      4C455F45 
 5335      56545F47 
 5335      41545443 
 5335      5F524541 
 5336              	.LASF115:
 5337 07c5 696E7465 		.ascii	"interruptSources\000"
 5337      72727570 
 5337      74536F75 
 5337      72636573 
 5337      00
 5338              	.LASF263:
 5339 07d6 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 5339      4C455F45 
 5339      56545F47 
 5339      41545443 
 5339      5F524541 
 5340              	.LASF337:
 5341 07f5 53454E44 		.ascii	"SEND_TEMPERATURE\000"
 5341      5F54454D 
 5341      50455241 
 5341      54555245 
 5341      00
 5342              	.LASF21:
 5343 0806 75696E74 		.ascii	"uint32_t\000"
 5343      33325F74 
 5343      00
 5344              	.LASF378:
 5345 080f 72546865 		.ascii	"rThermistor\000"
 5345      726D6973 
 5345      746F7200 
 5346              	.LASF195:
 5347 081b 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 5347      4C455F45 
 5347      56545F53 
 5347      45545F52 
 5347      50415F45 
 5348              	.LASF376:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 177


 5349 083e 636F756E 		.ascii	"countThermistor\000"
 5349      74546865 
 5349      726D6973 
 5349      746F7200 
 5350              	.LASF352:
 5351 084e 54696D65 		.ascii	"TimerHandle_t\000"
 5351      7248616E 
 5351      646C655F 
 5351      7400
 5352              	.LASF176:
 5353 085c 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 5353      4C455F45 
 5353      56545F53 
 5353      5441434B 
 5353      5F4F4E00 
 5354              	.LASF206:
 5355 0870 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 5355      4C455F45 
 5355      56545F4C 
 5355      4C5F434E 
 5355      54524C5F 
 5356              	.LASF419:
 5357 089a 5461736B 		.ascii	"Task_Temperature\000"
 5357      5F54656D 
 5357      70657261 
 5357      74757265 
 5357      00
 5358              	.LASF272:
 5359 08ab 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 5359      4C455F45 
 5359      56545F47 
 5359      41545443 
 5359      5F48414E 
 5360              	.LASF192:
 5361 08cd 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 5361      4C455F45 
 5361      56545F47 
 5361      45545F50 
 5361      4545525F 
 5362              	.LASF395:
 5363 08ee 5254435F 		.ascii	"RTC_dstConfig\000"
 5363      64737443 
 5363      6F6E6669 
 5363      6700
 5364              	.LASF175:
 5365 08fc 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 5365      4C455F45 
 5365      56545F49 
 5365      4E56414C 
 5365      494400
 5366              	.LASF149:
 5367 090f 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 5367      74635F73 
 5367      63625F75 
 5367      6172745F 
 5367      636F6E74 
 5368              	.LASF355:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 178


 5369 0929 62617365 		.ascii	"base\000"
 5369      00
 5370              	.LASF141:
 5371 092e 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 5371      74635F73 
 5371      63625F75 
 5371      6172745F 
 5371      636F6E74 
 5372              	.LASF22:
 5373 0946 4F55545F 		.ascii	"OUT_CLR\000"
 5373      434C5200 
 5374              	.LASF413:
 5375 094e 78517565 		.ascii	"xQueueGenericReceive\000"
 5375      75654765 
 5375      6E657269 
 5375      63526563 
 5375      65697665 
 5376              	.LASF119:
 5377 0963 72656C6F 		.ascii	"reloadInput\000"
 5377      6164496E 
 5377      70757400 
 5378              	.LASF19:
 5379 096f 696E7431 		.ascii	"int16_t\000"
 5379      365F7400 
 5380              	.LASF329:
 5381 0977 6E756D43 		.ascii	"numChannels\000"
 5381      68616E6E 
 5381      656C7300 
 5382              	.LASF243:
 5383 0983 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 5383      4C455F45 
 5383      56545F47 
 5383      41505F45 
 5383      4E48414E 
 5384              	.LASF274:
 5385 09a8 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 5385      4C455F45 
 5385      56545F47 
 5385      41545453 
 5385      5F444154 
 5386              	.LASF14:
 5387 09cd 6C6F6E67 		.ascii	"long long unsigned int\000"
 5387      206C6F6E 
 5387      6720756E 
 5387      7369676E 
 5387      65642069 
 5388              	.LASF348:
 5389 09e4 626C655F 		.ascii	"ble_commands_list_t\000"
 5389      636F6D6D 
 5389      616E6473 
 5389      5F6C6973 
 5389      745F7400 
 5390              	.LASF297:
 5391 09f8 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 5391      6E5F626C 
 5391      655F6164 
 5391      765F7374 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 179


 5391      6174655F 
 5392              	.LASF210:
 5393 0a0e 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 5393      4C455F45 
 5393      56545F47 
 5393      45545F52 
 5393      5353495F 
 5394              	.LASF50:
 5395 0a2b 53414D50 		.ascii	"SAMPLE_TIME23\000"
 5395      4C455F54 
 5395      494D4532 
 5395      3300
 5396              	.LASF163:
 5397 0a39 72616E67 		.ascii	"rangeThres\000"
 5397      65546872 
 5397      657300
 5398              	.LASF294:
 5399 0a44 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 5399      4C455F41 
 5399      44565F53 
 5399      54415445 
 5399      5F414456 
 5400              	.LASF380:
 5401 0a63 626C6543 		.ascii	"bleCommandAndData\000"
 5401      6F6D6D61 
 5401      6E64416E 
 5401      64446174 
 5401      6100
 5402              	.LASF96:
 5403 0a75 63795F65 		.ascii	"cy_en_rtc_dst_format_t\000"
 5403      6E5F7274 
 5403      635F6473 
 5403      745F666F 
 5403      726D6174 
 5404              	.LASF151:
 5405 0a8c 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 5405      41525F52 
 5405      414E4745 
 5405      5F434F4E 
 5405      445F494E 
 5406              	.LASF236:
 5407 0aa5 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 5407      4C455F45 
 5407      56545F47 
 5407      41505F45 
 5407      4E435259 
 5408              	.LASF208:
 5409 0ac3 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 5409      4C455F45 
 5409      56545F53 
 5409      45545F44 
 5409      45564943 
 5410              	.LASF174:
 5411 0ae7 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 5411      74635F73 
 5411      61725F63 
 5411      6F6E6669 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 180


 5411      675F7400 
 5412              	.LASF291:
 5413 0afb 61747449 		.ascii	"attId\000"
 5413      6400
 5414              	.LASF159:
 5415 0b01 6374726C 		.ascii	"ctrl\000"
 5415      00
 5416              	.LASF120:
 5417 0b06 73746172 		.ascii	"startInputMode\000"
 5417      74496E70 
 5417      75744D6F 
 5417      646500
 5418              	.LASF116:
 5419 0b15 63617074 		.ascii	"captureInputMode\000"
 5419      75726549 
 5419      6E707574 
 5419      4D6F6465 
 5419      00
 5420              	.LASF242:
 5421 0b26 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 5421      4C455F45 
 5421      56545F47 
 5421      41505F4F 
 5421      4F425F47 
 5422              	.LASF31:
 5423 0b50 4346475F 		.ascii	"CFG_OUT\000"
 5423      4F555400 
 5424              	.LASF75:
 5425 0b58 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 5425      4348414E 
 5425      5F434F4E 
 5425      46494700 
 5426              	.LASF131:
 5427 0b68 72784275 		.ascii	"rxBuf\000"
 5427      6600
 5428              	.LASF370:
 5429 0b6e 696E7472 		.ascii	"intr_status\000"
 5429      5F737461 
 5429      74757300 
 5430              	.LASF255:
 5431 0b7a 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 5431      4C455F45 
 5431      56545F47 
 5431      4154545F 
 5431      44495343 
 5432              	.LASF234:
 5433 0b99 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 5433      4C455F45 
 5433      56545F47 
 5433      41505F44 
 5433      45564943 
 5434              	.LASF207:
 5435 0bb9 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 5435      4C455F45 
 5435      56545F53 
 5435      4F46545F 
 5435      52455345 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 181


 5436              	.LASF315:
 5437 0bd8 43595F42 		.ascii	"CY_BLE_DIS_PNP_ID\000"
 5437      4C455F44 
 5437      49535F50 
 5437      4E505F49 
 5437      4400
 5438              	.LASF91:
 5439 0bea 5341525F 		.ascii	"SAR_Type\000"
 5439      54797065 
 5439      00
 5440              	.LASF268:
 5441 0bf3 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 5441      4C455F45 
 5441      56545F47 
 5441      41545453 
 5441      5F505245 
 5442              	.LASF162:
 5443 0c13 73616D70 		.ascii	"sampleTime23\000"
 5443      6C655469 
 5443      6D653233 
 5443      00
 5444              	.LASF137:
 5445 0c20 63624576 		.ascii	"cbEvents\000"
 5445      656E7473 
 5445      00
 5446              	.LASF312:
 5447 0c29 43595F42 		.ascii	"CY_BLE_DIS_SOFTWARE_REV\000"
 5447      4C455F44 
 5447      49535F53 
 5447      4F465457 
 5447      4152455F 
 5448              	.LASF17:
 5449 0c41 646F7562 		.ascii	"double\000"
 5449      6C6500
 5450              	.LASF93:
 5451 0c48 5F426F6F 		.ascii	"_Bool\000"
 5451      6C00
 5452              	.LASF66:
 5453 0c4e 53415455 		.ascii	"SATURATE_INTR_SET\000"
 5453      52415445 
 5453      5F494E54 
 5453      525F5345 
 5453      5400
 5454              	.LASF105:
 5455 0c60 73746F70 		.ascii	"stopDst\000"
 5455      44737400 
 5456              	.LASF289:
 5457 0c68 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 5457      4C455F45 
 5457      56545F4D 
 5457      415800
 5458              	.LASF102:
 5459 0c77 6D6F6E74 		.ascii	"month\000"
 5459      6800
 5460              	.LASF100:
 5461 0c7d 7765656B 		.ascii	"weekOfMonth\000"
 5461      4F664D6F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 182


 5461      6E746800 
 5462              	.LASF52:
 5463 0c89 52414E47 		.ascii	"RANGE_COND\000"
 5463      455F434F 
 5463      4E4400
 5464              	.LASF284:
 5465 0c94 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 5465      4C455F45 
 5465      56545F4C 
 5465      32434150 
 5465      5F434246 
 5466              	.LASF42:
 5467 0cb6 5644445F 		.ascii	"VDD_INTR\000"
 5467      494E5452 
 5467      00
 5468              	.LASF215:
 5469 0cbf 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 5469      4C455F45 
 5469      56545F52 
 5469      414E444F 
 5469      4D5F4E55 
 5470              	.LASF295:
 5471 0ce2 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 5471      4C455F41 
 5471      44565F53 
 5471      54415445 
 5471      5F414456 
 5472              	.LASF245:
 5473 0cff 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 5473      4C455F45 
 5473      56545F47 
 5473      41505F53 
 5473      4D505F4E 
 5474              	.LASF406:
 5475 0d27 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 5475      75654765 
 5475      6E657269 
 5475      6353656E 
 5475      6446726F 
 5476              	.LASF188:
 5477 0d40 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 5477      4C455F45 
 5477      56545F53 
 5477      45545F44 
 5477      4154415F 
 5478              	.LASF266:
 5479 0d64 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 5479      4C455F45 
 5479      56545F47 
 5479      41545443 
 5479      5F575249 
 5480              	.LASF401:
 5481 0d7f 78517565 		.ascii	"xQueueGenericSend\000"
 5481      75654765 
 5481      6E657269 
 5481      6353656E 
 5481      6400
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 183


 5482              	.LASF0:
 5483 0d91 666C6F61 		.ascii	"float\000"
 5483      7400
 5484              	.LASF178:
 5485 0d97 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 5485      4C455F45 
 5485      56545F53 
 5485      5441434B 
 5485      5F425553 
 5486              	.LASF25:
 5487 0db4 494E5452 		.ascii	"INTR\000"
 5487      00
 5488              	.LASF36:
 5489 0db9 4750494F 		.ascii	"GPIO_PRT_Type\000"
 5489      5F505254 
 5489      5F547970 
 5489      6500
 5490              	.LASF185:
 5491 0dc7 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 5491      4C455F45 
 5491      56545F47 
 5491      45545F43 
 5491      48414E4E 
 5492              	.LASF98:
 5493 0deb 686F7572 		.ascii	"hour\000"
 5493      00
 5494              	.LASF321:
 5495 0df0 43595F42 		.ascii	"CY_BLE_HTS_CHAR_COUNT\000"
 5495      4C455F48 
 5495      54535F43 
 5495      4841525F 
 5495      434F554E 
 5496              	.LASF26:
 5497 0e06 494E5452 		.ascii	"INTR_MASK\000"
 5497      5F4D4153 
 5497      4B00
 5498              	.LASF54:
 5499 0e10 53544152 		.ascii	"START_CTRL\000"
 5499      545F4354 
 5499      524C00
 5500              	.LASF179:
 5501 0e1b 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 5501      4C455F45 
 5501      56545F4D 
 5501      454D4F52 
 5501      595F5245 
 5502              	.LASF173:
 5503 0e35 76726566 		.ascii	"vrefMvValue\000"
 5503      4D765661 
 5503      6C756500 
 5504              	.LASF226:
 5505 0e41 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 5505      4C455F45 
 5505      56545F53 
 5505      45545F43 
 5505      4F4E4E5F 
 5506              	.LASF296:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 184


 5507 0e67 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 5507      4C455F41 
 5507      44565F53 
 5507      54415445 
 5507      5F53544F 
 5508              	.LASF325:
 5509 0e87 43595F42 		.ascii	"CY_BLE_SRVI_GAP\000"
 5509      4C455F53 
 5509      5256495F 
 5509      47415000 
 5510              	.LASF303:
 5511 0e97 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 5511      4C455F43 
 5511      4F4E4E5F 
 5511      53544154 
 5511      455F434C 
 5512              	.LASF117:
 5513 0ec1 63617074 		.ascii	"captureInput\000"
 5513      75726549 
 5513      6E707574 
 5513      00
 5514              	.LASF373:
 5515 0ece 6368616E 		.ascii	"chan\000"
 5515      00
 5516              	.LASF360:
 5517 0ed3 4144435F 		.ascii	"ADC_Sleep\000"
 5517      536C6565 
 5517      7000
 5518              	.LASF152:
 5519 0edd 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 5519      41525F52 
 5519      414E4745 
 5519      5F434F4E 
 5519      445F4142 
 5520              	.LASF16:
 5521 0ef5 63686172 		.ascii	"char\000"
 5521      00
 5522              	.LASF405:
 5523 0efa 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 5523      79734C69 
 5523      625F4173 
 5523      73657274 
 5523      4661696C 
 5524              	.LASF217:
 5525 0f11 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 5525      4C455F45 
 5525      56545F41 
 5525      45535F43 
 5525      434D5F45 
 5526              	.LASF238:
 5527 0f35 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 5527      4C455F45 
 5527      56545F47 
 5527      4150435F 
 5527      5343414E 
 5528              	.LASF165:
 5529 0f55 6368616E 		.ascii	"chanEn\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 185


 5529      456E00
 5530              	.LASF147:
 5531 0f5c 72785269 		.ascii	"rxRingBufTail\000"
 5531      6E674275 
 5531      66546169 
 5531      6C00
 5532              	.LASF104:
 5533 0f6a 73746172 		.ascii	"startDst\000"
 5533      74447374 
 5533      00
 5534              	.LASF308:
 5535 0f73 43595F42 		.ascii	"CY_BLE_DIS_MODEL_NUMBER\000"
 5535      4C455F44 
 5535      49535F4D 
 5535      4F44454C 
 5535      5F4E554D 
 5536              	.LASF354:
 5537 0f8b 65727243 		.ascii	"errCode\000"
 5537      6F646500 
 5538              	.LASF402:
 5539 0f93 7854696D 		.ascii	"xTimerCreate\000"
 5539      65724372 
 5539      65617465 
 5539      00
 5540              	.LASF259:
 5541 0fa0 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 5541      4C455F45 
 5541      56545F47 
 5541      41545443 
 5541      5F524541 
 5542              	.LASF108:
 5543 0fc2 636C6F63 		.ascii	"clockPrescaler\000"
 5543      6B507265 
 5543      7363616C 
 5543      657200
 5544              	.LASF347:
 5545 0fd1 53454E44 		.ascii	"SEND_TEMPERATURE_INDICATION\000"
 5545      5F54454D 
 5545      50455241 
 5545      54555245 
 5545      5F494E44 
 5546              	.LASF196:
 5547 0fed 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 5547      4C455F45 
 5547      56545F53 
 5547      45545F48 
 5547      4F53545F 
 5548              	.LASF186:
 5549 1012 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 5549      4C455F45 
 5549      56545F4C 
 5549      455F5345 
 5549      545F4556 
 5550              	.LASF133:
 5551 1038 72784275 		.ascii	"rxBufIdx\000"
 5551      66496478 
 5551      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 186


 5552              	.LASF336:
 5553 1041 51756575 		.ascii	"QueueHandle_t\000"
 5553      6548616E 
 5553      646C655F 
 5553      7400
 5554              	.LASF366:
 5555 104f 54656D70 		.ascii	"TemperatureTimerStart\000"
 5555      65726174 
 5555      75726554 
 5555      696D6572 
 5555      53746172 
 5556              	.LASF240:
 5557 1065 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 5557      4C455F45 
 5557      56545F47 
 5557      41505F4E 
 5557      554D4552 
 5558              	.LASF138:
 5559 108f 696E6974 		.ascii	"initKey\000"
 5559      4B657900 
 5560              	.LASF80:
 5561 1097 4156475F 		.ascii	"AVG_STAT\000"
 5561      53544154 
 5561      00
 5562              	.LASF18:
 5563 10a0 75696E74 		.ascii	"uint8_t\000"
 5563      385F7400 
 5564              	.LASF130:
 5565 10a8 73746174 		.ascii	"status\000"
 5565      757300
 5566              	.LASF94:
 5567 10af 43595F52 		.ascii	"CY_RTC_DST_RELATIVE\000"
 5567      54435F44 
 5567      53545F52 
 5567      454C4154 
 5567      49564500 
 5568              	.LASF364:
 5569 10c3 74656D70 		.ascii	"temperatureCommand\000"
 5569      65726174 
 5569      75726543 
 5569      6F6D6D61 
 5569      6E6400
 5570              	.LASF404:
 5571 10d6 7854696D 		.ascii	"xTimerGenericCommand\000"
 5571      65724765 
 5571      6E657269 
 5571      63436F6D 
 5571      6D616E64 
 5572              	.LASF39:
 5573 10eb 494E5452 		.ascii	"INTR_CAUSE2\000"
 5573      5F434155 
 5573      53453200 
 5574              	.LASF40:
 5575 10f7 494E5452 		.ascii	"INTR_CAUSE3\000"
 5575      5F434155 
 5575      53453300 
 5576              	.LASF350:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 187


 5577 1103 74656D70 		.ascii	"temperatureData\000"
 5577      65726174 
 5577      75726544 
 5577      61746100 
 5578              	.LASF70:
 5579 1113 52414E47 		.ascii	"RANGE_INTR_SET\000"
 5579      455F494E 
 5579      54525F53 
 5579      455400
 5580              	.LASF231:
 5581 1122 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 5581      4C455F45 
 5581      56545F47 
 5581      41505F41 
 5581      5554485F 
 5582              	.LASF202:
 5583 113f 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 5583      4C455F45 
 5583      56545F53 
 5583      45545F44 
 5583      45464155 
 5584              	.LASF171:
 5585 1163 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 5585      77697463 
 5585      68537143 
 5585      74726C00 
 5586              	.LASF384:
 5587 1173 63795F62 		.ascii	"cy_ble_advState\000"
 5587      6C655F61 
 5587      64765374 
 5587      61746500 
 5588              	.LASF403:
 5589 1183 78546173 		.ascii	"xTaskGetTickCount\000"
 5589      6B476574 
 5589      5469636B 
 5589      436F756E 
 5589      7400
 5590              	.LASF140:
 5591 1195 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 5591      625F7363 
 5591      625F7561 
 5591      72745F68 
 5591      616E646C 
 5592              	.LASF164:
 5593 11b4 72616E67 		.ascii	"rangeCond\000"
 5593      65436F6E 
 5593      6400
 5594              	.LASF169:
 5595 11be 72616E67 		.ascii	"rangeIntrMask\000"
 5595      65496E74 
 5595      724D6173 
 5595      6B00
 5596              	.LASF365:
 5597 11cc 54656D70 		.ascii	"TemperatureTimerCallback\000"
 5597      65726174 
 5597      75726554 
 5597      696D6572 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 188


 5597      43616C6C 
 5598              	.LASF225:
 5599 11e5 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 5599      4C455F45 
 5599      56545F53 
 5599      45545F43 
 5599      455F4C45 
 5600              	.LASF224:
 5601 1207 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 5601      4C455F45 
 5601      56545F53 
 5601      45545F45 
 5601      56454E54 
 5602              	.LASF2:
 5603 122a 6C6F6E67 		.ascii	"long long int\000"
 5603      206C6F6E 
 5603      6720696E 
 5603      7400
 5604              	.LASF282:
 5605 1238 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 5605      4C455F45 
 5605      56545F4C 
 5605      32434150 
 5605      5F434246 
 5606              	.LASF85:
 5607 1257 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 5607      53574954 
 5607      43485F44 
 5607      535F4354 
 5607      524C00
 5608              	.LASF157:
 5609 126a 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 5609      41525F49 
 5609      4E54525F 
 5609      4F564552 
 5609      464C4F57 
 5610              	.LASF317:
 5611 1284 43595F42 		.ascii	"CY_BLE_HTS_TEMP_MEASURE\000"
 5611      4C455F48 
 5611      54535F54 
 5611      454D505F 
 5611      4D454153 
 5612              	.LASF251:
 5613 129c 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 5613      4C455F45 
 5613      56545F47 
 5613      41505F43 
 5613      4F4E4E5F 
 5614              	.LASF72:
 5615 12b5 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 5615      455F494E 
 5615      54525F4D 
 5615      41534B45 
 5615      4400
 5616              	.LASF158:
 5617 12c7 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 5617      41525F49 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 189


 5617      4E54525F 
 5617      46575F43 
 5617      4F4C4C49 
 5618              	.LASF198:
 5619 12e5 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 5619      4C455F45 
 5619      56545F52 
 5619      454D4F56 
 5619      455F4445 
 5620              	.LASF187:
 5621 1315 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 5621      4C455F45 
 5621      56545F4C 
 5621      455F5049 
 5621      4E475F41 
 5622              	.LASF334:
 5623 1335 42617365 		.ascii	"BaseType_t\000"
 5623      54797065 
 5623      5F7400
 5624              	.LASF345:
 5625 1340 50524F43 		.ascii	"PROCESS_BLE_EVENTS\000"
 5625      4553535F 
 5625      424C455F 
 5625      4556454E 
 5625      545300
 5626              	.LASF7:
 5627 1353 5F5F696E 		.ascii	"__int16_t\000"
 5627      7431365F 
 5627      7400
 5628              	.LASF417:
 5629 135d 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 5629      73657273 
 5629      5C636F64 
 5629      79675C67 
 5629      69745C70 
 5630 138b 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\CE218138_BLE_Thermometer_RTOS01.c"
 5630      54435F49 
 5630      4D552E63 
 5630      7964736E 
 5630      5C434532 
 5631 13bd 7964736E 		.ascii	"ydsn\000"
 5631      00
 5632              	.LASF411:
 5633 13c2 4144435F 		.ascii	"ADC_IRQ_Enable\000"
 5633      4952515F 
 5633      456E6162 
 5633      6C6500
 5634              	.LASF396:
 5635 13d1 74656D70 		.ascii	"temperatureCommandQ\000"
 5635      65726174 
 5635      75726543 
 5635      6F6D6D61 
 5635      6E645100 
 5636              	.LASF214:
 5637 13e5 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 5637      4C455F45 
 5637      56545F53 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 190


 5637      45545F43 
 5637      4C4B5F43 
 5638              	.LASF44:
 5639 1408 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 5639      494E5452 
 5639      5F4D4153 
 5639      4B454400 
 5640              	.LASF277:
 5641 1418 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 5641      4C455F45 
 5641      56545F47 
 5641      41545443 
 5641      5F4C4F4E 
 5642              	.LASF59:
 5643 143c 4348414E 		.ascii	"CHAN_RESULT\000"
 5643      5F524553 
 5643      554C5400 
 5644              	.LASF307:
 5645 1448 43595F42 		.ascii	"CY_BLE_DIS_MANUFACTURER_NAME\000"
 5645      4C455F44 
 5645      49535F4D 
 5645      414E5546 
 5645      41435455 
 5646              	.LASF69:
 5647 1465 52414E47 		.ascii	"RANGE_INTR\000"
 5647      455F494E 
 5647      545200
 5648              	.LASF139:
 5649 1470 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 5649      74635F73 
 5649      63625F73 
 5649      70695F63 
 5649      6F6E7465 
 5650              	.LASF146:
 5651 1489 72785269 		.ascii	"rxRingBufHead\000"
 5651      6E674275 
 5651      66486561 
 5651      6400
 5652              	.LASF118:
 5653 1497 72656C6F 		.ascii	"reloadInputMode\000"
 5653      6164496E 
 5653      7075744D 
 5653      6F646500 
 5654              	.LASF48:
 5655 14a7 53414D50 		.ascii	"SAMPLE_CTRL\000"
 5655      4C455F43 
 5655      54524C00 
 5656              	.LASF166:
 5657 14b3 6368616E 		.ascii	"chanConfig\000"
 5657      436F6E66 
 5657      696700
 5658              	.LASF239:
 5659 14be 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 5659      4C455F45 
 5659      56545F47 
 5659      41505F4B 
 5659      4559494E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 191


 5660              	.LASF199:
 5661 14e3 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 5661      4C455F45 
 5661      56545F41 
 5661      44445F44 
 5661      45564943 
 5662              	.LASF357:
 5663 1510 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 5663      41525F43 
 5663      6C656172 
 5663      496E7465 
 5663      72727570 
 5664              	.LASF135:
 5665 1526 74784275 		.ascii	"txBufSize\000"
 5665      6653697A 
 5665      6500
 5666              	.LASF349:
 5667 1530 636F6D6D 		.ascii	"command\000"
 5667      616E6400 
 5668              	.LASF288:
 5669 1538 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 5669      4C455F45 
 5669      56545F4C 
 5669      32434150 
 5669      5F434246 
 5670              	.LASF83:
 5671 155d 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 5671      53574954 
 5671      43485F43 
 5671      4C454152 
 5671      3000
 5672              	.LASF333:
 5673 156f 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 5673      434F4E46 
 5673      49475F53 
 5673      54525543 
 5673      5400
 5674              	.LASF319:
 5675 1581 43595F42 		.ascii	"CY_BLE_HTS_INTERM_TEMP\000"
 5675      4C455F48 
 5675      54535F49 
 5675      4E544552 
 5675      4D5F5445 
 5676              	.LASF227:
 5677 1598 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 5677      4C455F45 
 5677      56545F47 
 5677      4150435F 
 5677      5343414E 
 5678              	.LASF281:
 5679 15bd 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 5679      4C455F45 
 5679      56545F4C 
 5679      32434150 
 5679      5F434246 
 5680              	.LASF247:
 5681 15dc 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 192


 5681      4C455F45 
 5681      56545F47 
 5681      41505F4B 
 5681      4559535F 
 5682              	.LASF241:
 5683 15fd 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 5683      4C455F45 
 5683      56545F47 
 5683      41505F4B 
 5683      45595052 
 5684              	.LASF304:
 5685 1622 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 5685      4C455F43 
 5685      4F4E4E5F 
 5685      53544154 
 5685      455F434C 
 5686              	.LASF300:
 5687 164d 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 5687      4C455F43 
 5687      4F4E4E5F 
 5687      53544154 
 5687      455F434F 
 5688              	.LASF320:
 5689 1669 43595F42 		.ascii	"CY_BLE_HTS_MEASURE_INTERVAL\000"
 5689      4C455F48 
 5689      54535F4D 
 5689      45415355 
 5689      52455F49 
 5690              	.LASF134:
 5691 1685 74784275 		.ascii	"txBuf\000"
 5691      6600
 5692              	.LASF400:
 5693 168b 7854696D 		.ascii	"xTimer_Temperature\000"
 5693      65725F54 
 5693      656D7065 
 5693      72617475 
 5693      726500
 5694              	.LASF335:
 5695 169e 5469636B 		.ascii	"TickType_t\000"
 5695      54797065 
 5695      5F7400
 5696              	.LASF302:
 5697 16a9 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 5697      4C455F43 
 5697      4F4E4E5F 
 5697      53544154 
 5697      455F434C 
 5698              	.LASF390:
 5699 16d3 44454255 		.ascii	"DEBUG_UART_context\000"
 5699      475F5541 
 5699      52545F63 
 5699      6F6E7465 
 5699      787400
 5700              	.LASF311:
 5701 16e6 43595F42 		.ascii	"CY_BLE_DIS_FIRMWARE_REV\000"
 5701      4C455F44 
 5701      49535F46 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 193


 5701      49524D57 
 5701      4152455F 
 5702              	.LASF144:
 5703 16fe 72785269 		.ascii	"rxRingBuf\000"
 5703      6E674275 
 5703      6600
 5704              	.LASF3:
 5705 1708 6C6F6E67 		.ascii	"long double\000"
 5705      20646F75 
 5705      626C6500 
 5706              	.LASF338:
 5707 1714 53454E44 		.ascii	"SEND_NONE\000"
 5707      5F4E4F4E 
 5707      4500
 5708              	.LASF184:
 5709 171e 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 5709      4C455F45 
 5709      56545F52 
 5709      4541445F 
 5709      41555448 
 5710              	.LASF45:
 5711 1747 5644445F 		.ascii	"VDD_INTR_SET\000"
 5711      494E5452 
 5711      5F534554 
 5711      00
 5712              	.LASF109:
 5713 1754 72756E4D 		.ascii	"runMode\000"
 5713      6F646500 
 5714              	.LASF410:
 5715 175c 4144435F 		.ascii	"ADC_StartEx\000"
 5715      53746172 
 5715      74457800 
 5716              	.LASF194:
 5717 1768 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 5717      4C455F45 
 5717      56545F53 
 5717      45545F52 
 5717      50415F54 
 5718              	.LASF161:
 5719 1787 73616D70 		.ascii	"sampleTime01\000"
 5719      6C655469 
 5719      6D653031 
 5719      00
 5720              	.LASF182:
 5721 1794 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 5721      4C455F45 
 5721      56545F48 
 5721      41524457 
 5721      4152455F 
 5722              	.LASF126:
 5723 17ae 63795F73 		.ascii	"cy_stc_tcpwm_counter_config_t\000"
 5723      74635F74 
 5723      6370776D 
 5723      5F636F75 
 5723      6E746572 
 5724              	.LASF250:
 5725 17cc 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 194


 5725      4C455F45 
 5725      56545F47 
 5725      41505F43 
 5725      52454154 
 5726              	.LASF170:
 5727 17f7 6D757853 		.ascii	"muxSwitch\000"
 5727      77697463 
 5727      6800
 5728              	.LASF5:
 5729 1801 756E7369 		.ascii	"unsigned char\000"
 5729      676E6564 
 5729      20636861 
 5729      7200
 5730              	.LASF253:
 5731 180f 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 5731      4C455F45 
 5731      56545F47 
 5731      41545443 
 5731      5F455252 
 5732              	.LASF258:
 5733 182a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 5733      4C455F45 
 5733      56545F47 
 5733      41545443 
 5733      5F524541 
 5734              	.LASF197:
 5735 1852 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 5735      4C455F45 
 5735      56545F41 
 5735      44445F44 
 5735      45564943 
 5736              	.LASF265:
 5737 187d 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 5737      4C455F45 
 5737      56545F47 
 5737      41545453 
 5737      5F575249 
 5738              	.LASF220:
 5739 1898 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 5739      4C455F45 
 5739      56545F53 
 5739      5441434B 
 5739      5F534855 
 5740              	.LASF363:
 5741 18bb 72746F73 		.ascii	"rtosApiResult\000"
 5741      41706952 
 5741      6573756C 
 5741      7400
 5742              	.LASF292:
 5743 18c9 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 5743      74635F62 
 5743      6C655F63 
 5743      6F6E6E5F 
 5743      68616E64 
 5744              	.LASF111:
 5745 18e2 636F6D70 		.ascii	"compareOrCapture\000"
 5745      6172654F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 195


 5745      72436170 
 5745      74757265 
 5745      00
 5746              	.LASF35:
 5747 18f3 52455345 		.ascii	"RESERVED1\000"
 5747      52564544 
 5747      3100
 5748              	.LASF56:
 5749 18fd 52455345 		.ascii	"RESERVED2\000"
 5749      52564544 
 5749      3200
 5750              	.LASF58:
 5751 1907 52455345 		.ascii	"RESERVED3\000"
 5751      52564544 
 5751      3300
 5752              	.LASF60:
 5753 1911 52455345 		.ascii	"RESERVED4\000"
 5753      52564544 
 5753      3400
 5754              	.LASF74:
 5755 191b 52455345 		.ascii	"RESERVED5\000"
 5755      52564544 
 5755      3500
 5756              	.LASF76:
 5757 1925 52455345 		.ascii	"RESERVED6\000"
 5757      52564544 
 5757      3600
 5758              	.LASF78:
 5759 192f 52455345 		.ascii	"RESERVED7\000"
 5759      52564544 
 5759      3700
 5760              	.LASF81:
 5761 1939 52455345 		.ascii	"RESERVED8\000"
 5761      52564544 
 5761      3800
 5762              	.LASF84:
 5763 1943 52455345 		.ascii	"RESERVED9\000"
 5763      52564544 
 5763      3900
 5764              	.LASF389:
 5765 194d 4144435F 		.ascii	"ADC_allConfigs\000"
 5765      616C6C43 
 5765      6F6E6669 
 5765      677300
 5766              	.LASF310:
 5767 195c 43595F42 		.ascii	"CY_BLE_DIS_HARDWARE_REV\000"
 5767      4C455F44 
 5767      49535F48 
 5767      41524457 
 5767      4152455F 
 5768              	.LASF114:
 5769 1974 656E6162 		.ascii	"enableCompareSwap\000"
 5769      6C65436F 
 5769      6D706172 
 5769      65537761 
 5769      7000
 5770              	.LASF374:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 196


 5771 1986 70765061 		.ascii	"pvParameters\000"
 5771      72616D65 
 5771      74657273 
 5771      00
 5772              	.LASF68:
 5773 1993 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 5773      52415445 
 5773      5F494E54 
 5773      525F4D41 
 5773      534B4544 
 5774              	.LASF86:
 5775 19a8 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 5775      53574954 
 5775      43485F53 
 5775      515F4354 
 5775      524C00
 5776              	.LASF11:
 5777 19bb 6C6F6E67 		.ascii	"long int\000"
 5777      20696E74 
 5777      00
 5778              	.LASF382:
 5779 19c4 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5779      52784275 
 5779      66666572 
 5779      00
 5780              	.LASF124:
 5781 19d1 636F756E 		.ascii	"countInputMode\000"
 5781      74496E70 
 5781      75744D6F 
 5781      646500
 5782              	.LASF223:
 5783 19e0 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 5783      4C455F45 
 5783      56545F41 
 5783      45535F43 
 5783      4D41435F 
 5784              	.LASF252:
 5785 1a01 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 5785      4C455F45 
 5785      56545F47 
 5785      4150505F 
 5785      55504441 
 5786              	.LASF369:
 5787 1a2f 7072696E 		.ascii	"printData\000"
 5787      74446174 
 5787      6100
 5788              	.LASF264:
 5789 1a39 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 5789      4C455F45 
 5789      56545F47 
 5789      41545443 
 5789      5F524541 
 5790              	.LASF110:
 5791 1a59 636F756E 		.ascii	"countDirection\000"
 5791      74446972 
 5791      65637469 
 5791      6F6E00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 197


 5792              	.LASF342:
 5793 1a68 73747269 		.ascii	"stringPointer\000"
 5793      6E67506F 
 5793      696E7465 
 5793      7200
 5794              	.LASF51:
 5795 1a76 52414E47 		.ascii	"RANGE_THRES\000"
 5795      455F5448 
 5795      52455300 
 5796              	.LASF356:
 5797 1a82 53656E64 		.ascii	"SendToDebugPrintTask\000"
 5797      546F4465 
 5797      62756750 
 5797      72696E74 
 5797      5461736B 
 5798              	.LASF362:
 5799 1a97 43795F47 		.ascii	"Cy_GPIO_Set\000"
 5799      50494F5F 
 5799      53657400 
 5800              	.LASF219:
 5801 1aa3 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 5801      4C455F45 
 5801      56545F53 
 5801      45545F53 
 5801      4C415645 
 5802              	.LASF92:
 5803 1ace 63686172 		.ascii	"char_t\000"
 5803      5F7400
 5804              	.LASF57:
 5805 1ad5 4348414E 		.ascii	"CHAN_WORK\000"
 5805      5F574F52 
 5805      4B00
 5806              	.LASF246:
 5807 1adf 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 5807      4C455F45 
 5807      56545F47 
 5807      41505F44 
 5807      45564943 
 5808              	.LASF344:
 5809 1b07 64656275 		.ascii	"debug_print_data_t\000"
 5809      675F7072 
 5809      696E745F 
 5809      64617461 
 5809      5F7400
 5810              	.LASF34:
 5811 1b1a 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 5811      494E5F47 
 5811      50494F35 
 5811      5600
 5812              	.LASF101:
 5813 1b28 6461794F 		.ascii	"dayOfWeek\000"
 5813      66576565 
 5813      6B00
 5814              	.LASF283:
 5815 1b32 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 5815      4C455F45 
 5815      56545F4C 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 198


 5815      32434150 
 5815      5F434246 
 5816              	.LASF148:
 5817 1b54 74784C65 		.ascii	"txLeftToTransmit\000"
 5817      6674546F 
 5817      5472616E 
 5817      736D6974 
 5817      00
 5818              	.LASF269:
 5819 1b65 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 5819      4C455F45 
 5819      56545F47 
 5819      41545453 
 5819      5F455845 
 5820              	.LASF183:
 5821 1b85 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 5821      4C455F45 
 5821      56545F57 
 5821      52495445 
 5821      5F415554 
 5822              	.LASF222:
 5823 1baf 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 5823      4C455F45 
 5823      56545F52 
 5823      4144494F 
 5823      5F564F4C 
 5824              	.LASF368:
 5825 1bce 7854696D 		.ascii	"xTimer\000"
 5825      657200
 5826              	.LASF24:
 5827 1bd5 4F55545F 		.ascii	"OUT_INV\000"
 5827      494E5600 
 5828              	.LASF6:
 5829 1bdd 5F5F7569 		.ascii	"__uint8_t\000"
 5829      6E74385F 
 5829      7400
 5830              	.LASF383:
 5831 1be7 63795F52 		.ascii	"cy_RTC_daysInMonthTbl\000"
 5831      54435F64 
 5831      61797349 
 5831      6E4D6F6E 
 5831      74685462 
 5832              	.LASF393:
 5833 1bfd 54696D65 		.ascii	"Timer_IMU_config\000"
 5833      725F494D 
 5833      555F636F 
 5833      6E666967 
 5833      00
 5834              	.LASF414:
 5835 1c0e 6C6F6766 		.ascii	"logf\000"
 5835      00
 5836              	.LASF189:
 5837 1c13 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 5837      4C455F45 
 5837      56545F53 
 5837      45545F53 
 5837      55474745 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 199


 5838              	.LASF322:
 5839 1c41 43595F42 		.ascii	"CY_BLE_HTS_CCCD\000"
 5839      4C455F48 
 5839      54535F43 
 5839      43434400 
 5840              	.LASF209:
 5841 1c51 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 5841      4C455F45 
 5841      56545F47 
 5841      45545F44 
 5841      45564943 
 5842              	.LASF216:
 5843 1c75 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 5843      4C455F45 
 5843      56545F41 
 5843      45535F45 
 5843      4E435259 
 5844              	.LASF412:
 5845 1c95 4144435F 		.ascii	"ADC_StartConvert\000"
 5845      53746172 
 5845      74436F6E 
 5845      76657274 
 5845      00
 5846              	.LASF211:
 5847 1ca6 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 5847      4C455F45 
 5847      56545F47 
 5847      45545F54 
 5847      585F5057 
 5848              	.LASF27:
 5849 1cc5 494E5452 		.ascii	"INTR_MASKED\000"
 5849      5F4D4153 
 5849      4B454400 
 5850              	.LASF323:
 5851 1cd1 43595F42 		.ascii	"CY_BLE_HTS_VRD\000"
 5851      4C455F48 
 5851      54535F56 
 5851      524400
 5852              	.LASF177:
 5853 1ce0 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 5853      4C455F45 
 5853      56545F54 
 5853      494D454F 
 5853      555400
 5854              	.LASF326:
 5855 1cf3 43595F42 		.ascii	"CY_BLE_SRVI_GATT\000"
 5855      4C455F53 
 5855      5256495F 
 5855      47415454 
 5855      00
 5856              	.LASF343:
 5857 1d04 6572726F 		.ascii	"errorCode\000"
 5857      72436F64 
 5857      6500
 5858              	.LASF15:
 5859 1d0e 73697A65 		.ascii	"sizetype\000"
 5859      74797065 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 200


 5859      00
 5860              	.LASF13:
 5861 1d17 6C6F6E67 		.ascii	"long unsigned int\000"
 5861      20756E73 
 5861      69676E65 
 5861      6420696E 
 5861      7400
 5862              	.LASF371:
 5863 1d29 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 5863      41525F47 
 5863      6574496E 
 5863      74657272 
 5863      75707453 
 5864              	.LASF375:
 5865 1d43 73656E64 		.ascii	"sendTemperatureDataFast\000"
 5865      54656D70 
 5865      65726174 
 5865      75726544 
 5865      61746146 
 5866              	.LASF407:
 5867 1d5b 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 5867      41525F47 
 5867      65745265 
 5867      73756C74 
 5867      313600
 5868              	.LASF20:
 5869 1d6e 696E7433 		.ascii	"int32_t\000"
 5869      325F7400 
 5870              	.LASF221:
 5871 1d76 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 5871      4C455F45 
 5871      56545F52 
 5871      4144494F 
 5871      5F54454D 
 5872              	.LASF82:
 5873 1d93 4D55585F 		.ascii	"MUX_SWITCH0\000"
 5873      53574954 
 5873      43483000 
 5874              	.LASF359:
 5875 1d9f 70696E4E 		.ascii	"pinNum\000"
 5875      756D00
 5876              	.LASF280:
 5877 1da6 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 5877      4C455F45 
 5877      56545F4C 
 5877      32434150 
 5877      5F434F4D 
 5878              	.LASF62:
 5879 1dc3 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 5879      5F524553 
 5879      554C545F 
 5879      55504441 
 5879      54454400 
 5880              	.LASF372:
 5881 1dd7 4144435F 		.ascii	"ADC_GetResult16\000"
 5881      47657452 
 5881      6573756C 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 201


 5881      74313600 
 5882              	.LASF230:
 5883 1de7 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 5883      4C455F45 
 5883      56545F47 
 5883      41505F50 
 5883      4153534B 
 5884              	.LASF416:
 5885 1e0e 74656D70 		.ascii	"temperature_task.c\000"
 5885      65726174 
 5885      7572655F 
 5885      7461736B 
 5885      2E6300
 5886              	.LASF160:
 5887 1e21 73616D70 		.ascii	"sampleCtrl\000"
 5887      6C654374 
 5887      726C00
 5888              	.LASF358:
 5889 1e2c 43795F47 		.ascii	"Cy_GPIO_Clr\000"
 5889      50494F5F 
 5889      436C7200 
 5890              	.LASF155:
 5891 1e38 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 5891      41525F49 
 5891      4E54525F 
 5891      4D41534B 
 5891      5F4E4F4E 
 5892              	.LASF89:
 5893 1e4e 414E415F 		.ascii	"ANA_TRIM0\000"
 5893      5452494D 
 5893      3000
 5894              	.LASF90:
 5895 1e58 414E415F 		.ascii	"ANA_TRIM1\000"
 5895      5452494D 
 5895      3100
 5896              	.LASF12:
 5897 1e62 5F5F7569 		.ascii	"__uint32_t\000"
 5897      6E743332 
 5897      5F7400
 5898              	.LASF191:
 5899 1e6d 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 5899      4C455F45 
 5899      56545F44 
 5899      4154415F 
 5899      4C454E47 
 5900              	.LASF46:
 5901 1e8b 4750494F 		.ascii	"GPIO_Type\000"
 5901      5F547970 
 5901      6500
 5902              	.LASF324:
 5903 1e95 43595F42 		.ascii	"CY_BLE_HTS_DESCR_COUNT\000"
 5903      4C455F48 
 5903      54535F44 
 5903      45534352 
 5903      5F434F55 
 5904              	.LASF125:
 5905 1eac 636F756E 		.ascii	"countInput\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 202


 5905      74496E70 
 5905      757400
 5906              	.LASF29:
 5907 1eb7 494E5452 		.ascii	"INTR_CFG\000"
 5907      5F434647 
 5907      00
 5908              	.LASF200:
 5909 1ec0 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 5909      4C455F45 
 5909      56545F52 
 5909      454D4F56 
 5909      455F4445 
 5910              	.LASF190:
 5911 1ef2 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 5911      4C455F45 
 5911      56545F47 
 5911      45545F44 
 5911      4154415F 
 5912              	.LASF67:
 5913 1f16 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 5913      52415445 
 5913      5F494E54 
 5913      525F4D41 
 5913      534B00
 5914              	.LASF244:
 5915 1f29 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 5915      4C455F45 
 5915      56545F47 
 5915      4150435F 
 5915      44495245 
 5916              	.LASF129:
 5917 1f4b 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 5917      74635F73 
 5917      63625F73 
 5917      70695F63 
 5917      6F6E7465 
 5918              	.LASF88:
 5919 1f62 52455345 		.ascii	"RESERVED10\000"
 5919      52564544 
 5919      313000
 5920              	.LASF279:
 5921 1f6d 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 5921      4C455F45 
 5921      56545F4C 
 5921      32434150 
 5921      5F434F4E 
 5922              	.LASF377:
 5923 1f94 636F756E 		.ascii	"countReference\000"
 5923      74526566 
 5923      6572656E 
 5923      636500
 5924              	.LASF332:
 5925 1fa3 636C6B44 		.ascii	"clkDivider\000"
 5925      69766964 
 5925      657200
 5926              	.LASF391:
 5927 1fae 436F756E 		.ascii	"Counter_ms_config\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 203


 5927      7465725F 
 5927      6D735F63 
 5927      6F6E6669 
 5927      6700
 5928              	.LASF398:
 5929 1fc0 64656275 		.ascii	"debugMessageQ\000"
 5929      674D6573 
 5929      73616765 
 5929      5100
 5930              	.LASF388:
 5931 1fce 4144435F 		.ascii	"ADC_currentConfig\000"
 5931      63757272 
 5931      656E7443 
 5931      6F6E6669 
 5931      6700
 5932              	.LASF313:
 5933 1fe0 43595F42 		.ascii	"CY_BLE_DIS_SYSTEM_ID\000"
 5933      4C455F44 
 5933      49535F53 
 5933      59535445 
 5933      4D5F4944 
 5934              	.LASF339:
 5935 1ff5 48414E44 		.ascii	"HANDLE_ADC_INTERRUPT\000"
 5935      4C455F41 
 5935      44435F49 
 5935      4E544552 
 5935      52555054 
 5936              	.LASF256:
 5937 200a 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 5937      4C455F45 
 5937      56545F47 
 5937      41545453 
 5937      5F58434E 
 5938              	.LASF275:
 5939 2029 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 5939      4C455F45 
 5939      56545F47 
 5939      41545443 
 5939      5F53544F 
 5940              	.LASF351:
 5941 204c 626C655F 		.ascii	"ble_command_t\000"
 5941      636F6D6D 
 5941      616E645F 
 5941      7400
 5942              	.LASF229:
 5943 205a 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 5943      4C455F45 
 5943      56545F47 
 5943      41505F50 
 5943      4153534B 
 5944              	.LASF290:
 5945 207f 62644861 		.ascii	"bdHandle\000"
 5945      6E646C65 
 5945      00
 5946              	.LASF43:
 5947 2088 5644445F 		.ascii	"VDD_INTR_MASK\000"
 5947      494E5452 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 204


 5947      5F4D4153 
 5947      4B00
 5948              	.LASF4:
 5949 2096 7369676E 		.ascii	"signed char\000"
 5949      65642063 
 5949      68617200 
 5950              	.LASF107:
 5951 20a2 70657269 		.ascii	"period\000"
 5951      6F6400
 5952              	.LASF9:
 5953 20a9 73686F72 		.ascii	"short unsigned int\000"
 5953      7420756E 
 5953      7369676E 
 5953      65642069 
 5953      6E7400
 5954              	.LASF128:
 5955 20bc 63795F73 		.ascii	"cy_stc_tcpwm_counter_config\000"
 5955      74635F74 
 5955      6370776D 
 5955      5F636F75 
 5955      6E746572 
 5956              	.LASF228:
 5957 20d8 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 5957      4C455F45 
 5957      56545F47 
 5957      41505F41 
 5957      5554485F 
 5958              	.LASF267:
 5959 20f0 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 5959      4C455F45 
 5959      56545F47 
 5959      41545453 
 5959      5F575249 
 5960              	.LASF213:
 5961 210f 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 5961      4C455F45 
 5961      56545F47 
 5961      45545F43 
 5961      4C4B5F43 
 5962              	.LASF331:
 5963 2132 6D697363 		.ascii	"miscConfig\000"
 5963      436F6E66 
 5963      696700
 5964              	.LASF87:
 5965 213d 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 5965      53574954 
 5965      43485F53 
 5965      54415455 
 5965      5300
 5966              	.LASF278:
 5967 214f 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 5967      4C455F45 
 5967      56545F4C 
 5967      32434150 
 5967      5F434F4E 
 5968              	.LASF172:
 5969 2176 636F6E66 		.ascii	"configRouting\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 205


 5969      6967526F 
 5969      7574696E 
 5969      6700
 5970              	.LASF341:
 5971 2184 74656D70 		.ascii	"temperature_command_t\000"
 5971      65726174 
 5971      7572655F 
 5971      636F6D6D 
 5971      616E645F 
 5972              	.LASF361:
 5973 219a 4144435F 		.ascii	"ADC_Wakeup\000"
 5973      57616B65 
 5973      757000
 5974              	.LASF79:
 5975 21a5 53544154 		.ascii	"STATUS\000"
 5975      555300
 5976              	.LASF32:
 5977 21ac 4346475F 		.ascii	"CFG_SIO\000"
 5977      53494F00 
 5978              	.LASF399:
 5979 21b4 626C6543 		.ascii	"bleCommandQ\000"
 5979      6F6D6D61 
 5979      6E645100 
 5980              	.LASF55:
 5981 21c0 4348414E 		.ascii	"CHAN_CONFIG\000"
 5981      5F434F4E 
 5981      46494700 
 5982              	.LASF154:
 5983 21cc 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 5983      6E5F7361 
 5983      725F7261 
 5983      6E67655F 
 5983      64657465 
 5984              	.LASF181:
 5985 21ef 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 5985      4C455F45 
 5985      56545F46 
 5985      4C415348 
 5985      5F434F52 
 5986              	.LASF249:
 5987 2208 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 5987      4C455F45 
 5987      56545F47 
 5987      41505F47 
 5987      454E5F53 
 5988              	.LASF232:
 5989 2238 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 5989      4C455F45 
 5989      56545F47 
 5989      41505F41 
 5989      5554485F 
 5990              	.LASF298:
 5991 2253 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 5991      4C455F43 
 5991      4F4E4E5F 
 5991      53544154 
 5991      455F4449 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cceqsT9X.s 			page 206


 5992              	.LASF301:
 5993 2272 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 5993      4C455F43 
 5993      4F4E4E5F 
 5993      53544154 
 5993      455F434C 
 5994              	.LASF167:
 5995 229c 696E7472 		.ascii	"intrMask\000"
 5995      4D61736B 
 5995      00
 5996              	.LASF132:
 5997 22a5 72784275 		.ascii	"rxBufSize\000"
 5997      6653697A 
 5997      6500
 5998              	.LASF47:
 5999 22af 4354524C 		.ascii	"CTRL\000"
 5999      00
 6000              	.LASF237:
 6001 22b4 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 6001      4C455F45 
 6001      56545F47 
 6001      41505F43 
 6001      4F4E4E45 
 6002              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
