ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"temperature_task.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.TemperatureTimerCallback,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	TemperatureTimerCallback, %function
  25              	TemperatureTimerCallback:
  26              	.LFB716:
  27              		.file 1 "temperature_task.c"
   1:temperature_task.c **** /******************************************************************************
   2:temperature_task.c **** * File Name: temperature_task.c
   3:temperature_task.c **** *
   4:temperature_task.c **** * Version: 1.00
   5:temperature_task.c **** *
   6:temperature_task.c **** * Description: This file contains the task that handles temperature sensing
   7:temperature_task.c **** *
   8:temperature_task.c **** * Related Document: CE218138_BLE_Thermometer_RTOS.pdf
   9:temperature_task.c **** *
  10:temperature_task.c **** * Hardware Dependency: CY8CKIT-062-BLE PSoC 6 BLE Pioneer Kit
  11:temperature_task.c **** *
  12:temperature_task.c **** *******************************************************************************
  13:temperature_task.c **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  14:temperature_task.c **** *******************************************************************************
  15:temperature_task.c **** * This software, including source code, documentation and related materials
  16:temperature_task.c **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  17:temperature_task.c **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  18:temperature_task.c **** * protection (United States and foreign), United States copyright laws and
  19:temperature_task.c **** * international treaty provisions. Therefore, you may use this Software only
  20:temperature_task.c **** * as provided in the license agreement accompanying the software package from
  21:temperature_task.c **** * which you obtained this Software (“EULA”).
  22:temperature_task.c **** *
  23:temperature_task.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  24:temperature_task.c **** * non-transferable license to copy, modify, and compile the Software source
  25:temperature_task.c **** * code solely for use in connection with Cypress’s integrated circuit products.
  26:temperature_task.c **** * Any reproduction, modification, translation, compilation, or representation
  27:temperature_task.c **** * of this Software except as specified above is prohibited without the express
  28:temperature_task.c **** * written permission of Cypress.
  29:temperature_task.c **** *
  30:temperature_task.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 2


  31:temperature_task.c **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  32:temperature_task.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  33:temperature_task.c **** * reserves the right to make changes to the Software without notice. Cypress 
  34:temperature_task.c **** * does not assume any liability arising out of the application or use of the 
  35:temperature_task.c **** * Software or any product or circuit described in the Software. Cypress does 
  36:temperature_task.c **** * not authorize its products for use in any products where a malfunction or 
  37:temperature_task.c **** * failure of the Cypress product may reasonably be expected to result in 
  38:temperature_task.c **** * significant property damage, injury or death (“High Risk Product”). By 
  39:temperature_task.c **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
  40:temperature_task.c **** * system or application assumes all risk of such use and in doing so agrees to 
  41:temperature_task.c **** * indemnify Cypress against all liability.
  42:temperature_task.c **** *******************************************************************************/
  43:temperature_task.c **** /******************************************************************************
  44:temperature_task.c **** * This file contains the task that handles temperature sensing 
  45:temperature_task.c **** *******************************************************************************/
  46:temperature_task.c **** 
  47:temperature_task.c **** /* Header file includes */
  48:temperature_task.c **** #include <math.h>
  49:temperature_task.c **** #include "temperature_task.h"
  50:temperature_task.c **** #include "uart_debug.h"
  51:temperature_task.c **** #include "ble_task.h"
  52:temperature_task.c **** #include "task.h" 
  53:temperature_task.c **** #include "timers.h"
  54:temperature_task.c **** 
  55:temperature_task.c **** /* Scanning interval of 100ms is used when repeatedly scanning temperature for 
  56:temperature_task.c ****    sending via BLE. 10s is used for E-INK refresh */
  57:temperature_task.c **** #define FAST_SCAN_INTERVAL  (pdMS_TO_TICKS(100u))
  58:temperature_task.c **** #define SLOW_SCAN_INTERVAL  (pdMS_TO_TICKS(10000u))
  59:temperature_task.c **** 
  60:temperature_task.c **** /* ADC channels used to measure reference and thermistor voltages */
  61:temperature_task.c **** #define REFERENCE_CHANNEL   (uint32_t)(0x00u)
  62:temperature_task.c **** #define THERMISTOR_CHANNEL  (uint32_t)(0x01u)
  63:temperature_task.c **** 
  64:temperature_task.c **** /* Reference resistor in series with the thermistor is of 10 KOhm */
  65:temperature_task.c **** #define R_REFERENCE         (float)(10000)
  66:temperature_task.c **** 
  67:temperature_task.c **** /* Beta constant of this thermistor is 3380 Kelvin. See the thermistor
  68:temperature_task.c ****    (NCP18XH103F03RB) data sheet for more details. */
  69:temperature_task.c **** #define B_CONSTANT          (float)(3380)
  70:temperature_task.c **** 
  71:temperature_task.c **** /* Resistance of the thermistor is 10K at 25 degrees C (from data sheet)
  72:temperature_task.c ****    Therefore R0 = 10000 Ohm, and T0 = 298.15 Kelvin, which gives
  73:temperature_task.c ****    R_INFINITY = R0 e^(-B_CONSTANT / T0) = 0.1192855 */
  74:temperature_task.c **** #define R_INFINITY          (float)(0.1192855)
  75:temperature_task.c **** 
  76:temperature_task.c **** /* Zero Kelvin in degree C */
  77:temperature_task.c **** #define ABSOLUTE_ZERO       (float)(-273.15)
  78:temperature_task.c **** 
  79:temperature_task.c **** /* Queue handles used for temperature commands and data */
  80:temperature_task.c **** QueueHandle_t temperatureCommandQ;
  81:temperature_task.c **** QueueHandle_t temperatureDataQ;
  82:temperature_task.c **** 
  83:temperature_task.c **** /* Timer handles used to control temperature scanning interval */
  84:temperature_task.c **** TimerHandle_t xTimer_Temperature;
  85:temperature_task.c **** 
  86:temperature_task.c **** /* ADC interrupt handler */
  87:temperature_task.c **** void isrADC(void);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 3


  88:temperature_task.c **** bool static processingComplete = false;
  89:temperature_task.c **** 
  90:temperature_task.c **** /* Functions that start and control the timer */
  91:temperature_task.c **** void static TemperatureTimerStart(void);
  92:temperature_task.c **** void static TemperatureTimerUpdate(TickType_t period);
  93:temperature_task.c **** 
  94:temperature_task.c **** /*******************************************************************************
  95:temperature_task.c **** * Function Name: void Task_Temperature(void *pvParameters)   
  96:temperature_task.c **** ********************************************************************************
  97:temperature_task.c **** * Summary:
  98:temperature_task.c **** *  Task that reads temperature data from thermistor circuit  
  99:temperature_task.c **** *
 100:temperature_task.c **** * Parameters:
 101:temperature_task.c **** *  void *pvParameters : Task parameter defined during task creation (unused)                       
 102:temperature_task.c **** *
 103:temperature_task.c **** * Return:
 104:temperature_task.c **** *  void
 105:temperature_task.c **** *
 106:temperature_task.c **** *******************************************************************************/
 107:temperature_task.c **** void Task_Temperature(void *pvParameters)    
 108:temperature_task.c **** { 
 109:temperature_task.c ****     /* Variable that stores commands received  */
 110:temperature_task.c ****     temperature_command_t temperatureCommand;
 111:temperature_task.c ****     
 112:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 113:temperature_task.c ****     BaseType_t rtosApiResult;
 114:temperature_task.c ****        
 115:temperature_task.c ****     /* Flag that indicate temperature data need to be sent at 
 116:temperature_task.c ****        fast intervals */
 117:temperature_task.c ****     bool sendTemperatureDataFast = false;
 118:temperature_task.c ****     
 119:temperature_task.c ****     /* Variables used to calculate temperature */
 120:temperature_task.c ****     int16_t countThermistor, countReference;
 121:temperature_task.c ****     float rThermistor, temperature;
 122:temperature_task.c ****     
 123:temperature_task.c ****     /* Variable used to send commands and data to BLE task */
 124:temperature_task.c ****     ble_command_t bleCommandAndData;
 125:temperature_task.c **** 
 126:temperature_task.c ****     /* Remove warning for unused parameter */
 127:temperature_task.c ****     (void)pvParameters ;
 128:temperature_task.c **** 
 129:temperature_task.c ****     /* Initialize the ADC  */
 130:temperature_task.c ****     ADC_StartEx(isrADC);
 131:temperature_task.c ****     ADC_IRQ_Enable();
 132:temperature_task.c ****     ADC_StartConvert();
 133:temperature_task.c ****     
 134:temperature_task.c ****     /* Start the timer that controls the processing interval */
 135:temperature_task.c ****     TemperatureTimerStart();                    
 136:temperature_task.c ****     
 137:temperature_task.c ****     /* Repeatedly running part of the task */
 138:temperature_task.c ****     for(;;)
 139:temperature_task.c ****     {
 140:temperature_task.c ****         /* Block until a command has been received over 
 141:temperature_task.c ****            temperatureCommandQ */
 142:temperature_task.c ****         rtosApiResult = xQueueReceive(temperatureCommandQ, 
 143:temperature_task.c ****                                       &temperatureCommand, portMAX_DELAY);
 144:temperature_task.c ****         
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 4


 145:temperature_task.c ****          /* Command has been received from temperatureCommandQ */ 
 146:temperature_task.c ****         if(rtosApiResult == pdTRUE)
 147:temperature_task.c ****         {   
 148:temperature_task.c ****             /* Take an action based on the command received */
 149:temperature_task.c ****             switch (temperatureCommand)
 150:temperature_task.c ****             {
 151:temperature_task.c ****                 /* Temperature data need to be sent */
 152:temperature_task.c ****                 case SEND_TEMPERATURE:
 153:temperature_task.c ****                     sendTemperatureDataFast = true;
 154:temperature_task.c ****                     /* Enable periodic scan */
 155:temperature_task.c ****                     TemperatureTimerUpdate(FAST_SCAN_INTERVAL);
 156:temperature_task.c ****                     break;
 157:temperature_task.c ****                  
 158:temperature_task.c ****                 /* No temperature data need to be sent */
 159:temperature_task.c ****                 case SEND_NONE:
 160:temperature_task.c ****                     sendTemperatureDataFast = false;
 161:temperature_task.c ****                     /* Disable periodic scan */
 162:temperature_task.c ****                     TemperatureTimerUpdate(SLOW_SCAN_INTERVAL);
 163:temperature_task.c ****                     break;
 164:temperature_task.c ****                 /* Process temperature data from CapSense widgets */
 165:temperature_task.c ****                 case HANDLE_ADC_INTERRUPT:
 166:temperature_task.c ****                     /* Read the ADC count values */
 167:temperature_task.c ****                     countReference  = ADC_GetResult16(REFERENCE_CHANNEL);
 168:temperature_task.c ****                     countThermistor = ADC_GetResult16(THERMISTOR_CHANNEL);
 169:temperature_task.c ****                    
 170:temperature_task.c ****                     /* Put the ADC to sleep so that entering low power modes 
 171:temperature_task.c ****                        won't affect the ADC operation */
 172:temperature_task.c ****                     ADC_Sleep();
 173:temperature_task.c ****                     
 174:temperature_task.c ****                     /* Clear the GPIO that drives the thermistor circuit, to 
 175:temperature_task.c ****                        save power */
 176:temperature_task.c ****                     Cy_GPIO_Clr(THER_VDD_0_PORT,THER_VDD_0_NUM);
 177:temperature_task.c ****                     
 178:temperature_task.c ****                     /* Calculate the thermistor resistance and the corresponding
 179:temperature_task.c ****                        temperature */
 180:temperature_task.c ****                     rThermistor = (R_REFERENCE*countThermistor)/countReference;    
 181:temperature_task.c ****                     temperature = (B_CONSTANT/(logf(rThermistor/R_INFINITY)))+
 182:temperature_task.c ****                                                                 ABSOLUTE_ZERO;
 183:temperature_task.c ****                     
 184:temperature_task.c ****                     processingComplete = true;
 185:temperature_task.c **** 
 186:temperature_task.c ****                     /* Send the processed temperature data */
 187:temperature_task.c ****                     if(sendTemperatureDataFast)
 188:temperature_task.c ****                     {
 189:temperature_task.c ****                         /* Pack the temperature data, respective command and send 
 190:temperature_task.c ****                            to the queue */
 191:temperature_task.c ****                         bleCommandAndData.command = SEND_TEMPERATURE_INDICATION;
 192:temperature_task.c ****                         bleCommandAndData.temperatureData = temperature;
 193:temperature_task.c ****                         xQueueSend(bleCommandQ, &bleCommandAndData,0u);
 194:temperature_task.c ****                     }
 195:temperature_task.c ****                     else
 196:temperature_task.c ****                     {
 197:temperature_task.c ****                         xQueueOverwrite(temperatureDataQ, &temperature);
 198:temperature_task.c ****                     }
 199:temperature_task.c ****                     break;
 200:temperature_task.c ****                 /* Start the next scan */                    
 201:temperature_task.c ****                 case TEMPERATURE_TIMER_EXPIRED:    
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 5


 202:temperature_task.c **** 
 203:temperature_task.c ****                         if(processingComplete)
 204:temperature_task.c ****                         {
 205:temperature_task.c ****                             Cy_GPIO_Set(THER_VDD_0_PORT,THER_VDD_0_NUM);    
 206:temperature_task.c ****                         
 207:temperature_task.c ****                             /* Wake up the ADC and start conversion */
 208:temperature_task.c ****                             ADC_Wakeup();
 209:temperature_task.c ****                             ADC_StartConvert();
 210:temperature_task.c ****                             processingComplete = false;
 211:temperature_task.c ****                         }    
 212:temperature_task.c **** 
 213:temperature_task.c ****                     break;
 214:temperature_task.c **** 
 215:temperature_task.c ****                 /* Invalid task notification value received */    
 216:temperature_task.c ****                 default:
 217:temperature_task.c ****                     Task_DebugPrintf("Error!   : Temperature - Invalid command "\
 218:temperature_task.c ****                                 "received .Error Code:", temperatureCommand);
 219:temperature_task.c ****                     break;
 220:temperature_task.c ****             }
 221:temperature_task.c ****         }            
 222:temperature_task.c ****         /* Task has timed out and received no commands during an interval of 
 223:temperature_task.c ****         portMAXDELAY ticks */
 224:temperature_task.c ****         else
 225:temperature_task.c ****         {
 226:temperature_task.c ****             Task_DebugPrintf("Warning! : Temperature - Task Timed out ", 0u);   
 227:temperature_task.c ****         }
 228:temperature_task.c ****     }
 229:temperature_task.c **** }
 230:temperature_task.c **** 
 231:temperature_task.c **** /*******************************************************************************
 232:temperature_task.c **** * Function Name: void isrADC(void)                         
 233:temperature_task.c **** ********************************************************************************
 234:temperature_task.c **** * Summary:
 235:temperature_task.c **** *  Interrupt service routine of the Scanning SAR ADC
 236:temperature_task.c **** *
 237:temperature_task.c **** * Parameters:
 238:temperature_task.c **** *  None
 239:temperature_task.c **** *
 240:temperature_task.c **** * Return:
 241:temperature_task.c **** *  void
 242:temperature_task.c **** *
 243:temperature_task.c **** *******************************************************************************/
 244:temperature_task.c **** void isrADC(void)
 245:temperature_task.c **** {
 246:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 247:temperature_task.c ****     BaseType_t rtosApiResult;
 248:temperature_task.c ****     
 249:temperature_task.c ****     /* Variable that stored interrupt status */
 250:temperature_task.c ****     uint32_t intr_status;
 251:temperature_task.c **** 
 252:temperature_task.c ****     /* Read interrupt status register */
 253:temperature_task.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
 254:temperature_task.c ****     
 255:temperature_task.c ****      /* Clear handled interrupt */
 256:temperature_task.c ****     Cy_SAR_ClearInterrupt(ADC_SAR__HW, intr_status);
 257:temperature_task.c ****     
 258:temperature_task.c ****     /* Read interrupt status register to ensure write completed due to 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 6


 259:temperature_task.c ****        buffered writes */
 260:temperature_task.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
 261:temperature_task.c ****     
 262:temperature_task.c ****     /* Send command to process temperature */
 263:temperature_task.c ****     temperature_command_t temperatureCommand = HANDLE_ADC_INTERRUPT;
 264:temperature_task.c ****     rtosApiResult = xQueueSendFromISR(temperatureCommandQ,
 265:temperature_task.c ****                                       &temperatureCommand,0u);
 266:temperature_task.c ****     
 267:temperature_task.c ****     /* Check if the operation has been successful */
 268:temperature_task.c ****     if(rtosApiResult != pdTRUE)
 269:temperature_task.c ****     {
 270:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Sending data to temperature"\
 271:temperature_task.c ****                     "queue", 0u);    
 272:temperature_task.c ****     }  
 273:temperature_task.c **** }
 274:temperature_task.c **** 
 275:temperature_task.c **** /*******************************************************************************
 276:temperature_task.c **** * Function Name: void static TemperatureTimerCallback(TimerHandle_t xTimer)                        
 277:temperature_task.c **** ********************************************************************************
 278:temperature_task.c **** * Summary:
 279:temperature_task.c **** *  This function is called when the temperature timer expires
 280:temperature_task.c **** *
 281:temperature_task.c **** * Parameters:
 282:temperature_task.c **** *  TimerHandle_t xTimer :  Current timer value (unused)
 283:temperature_task.c **** *
 284:temperature_task.c **** * Return:
 285:temperature_task.c **** *  void
 286:temperature_task.c **** *
 287:temperature_task.c **** *******************************************************************************/
 288:temperature_task.c **** void static TemperatureTimerCallback(TimerHandle_t xTimer)
 289:temperature_task.c **** {
  28              		.loc 1 289 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 16
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 14, -4
  36 0002 85B0     		sub	sp, sp, #20
  37              		.cfi_def_cfa_offset 24
 290:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 291:temperature_task.c ****     BaseType_t rtosApiResult;
 292:temperature_task.c ****     
 293:temperature_task.c ****     /* Remove warning for unused parameter */
 294:temperature_task.c ****     (void)xTimer;
 295:temperature_task.c ****     
 296:temperature_task.c ****     /* Send command to process temperature */
 297:temperature_task.c ****     temperature_command_t temperatureCommand = TEMPERATURE_TIMER_EXPIRED;
  38              		.loc 1 297 0
  39 0004 04A9     		add	r1, sp, #16
  40 0006 0323     		movs	r3, #3
  41 0008 01F8013D 		strb	r3, [r1, #-1]!
 298:temperature_task.c ****     rtosApiResult = xQueueSend(temperatureCommandQ, 
  42              		.loc 1 298 0
  43 000c 0023     		movs	r3, #0
  44 000e 1A46     		mov	r2, r3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 7


  45 0010 0948     		ldr	r0, .L4
  46              	.LVL1:
  47 0012 0068     		ldr	r0, [r0]
  48 0014 FFF7FEFF 		bl	xQueueGenericSend
  49              	.LVL2:
 299:temperature_task.c ****                                &temperatureCommand,0u);
 300:temperature_task.c ****     
 301:temperature_task.c ****     /* Check if the operation has been successful */
 302:temperature_task.c ****     if(rtosApiResult != pdTRUE)
  50              		.loc 1 302 0
  51 0018 0128     		cmp	r0, #1
  52 001a 09D0     		beq	.L1
  53              	.LVL3:
  54              	.LBB30:
  55              	.LBB31:
  56              		.file 2 "uart_debug.h"
   1:uart_debug.h  **** /******************************************************************************
   2:uart_debug.h  **** * File Name: uart_debug.h
   3:uart_debug.h  **** *
   4:uart_debug.h  **** * Version: 1.00
   5:uart_debug.h  **** *
   6:uart_debug.h  **** * Description: This file contains the macros that are used for UART based 
   7:uart_debug.h  **** *              debug
   8:uart_debug.h  **** *
   9:uart_debug.h  **** * Related Document: CE218138_BLE_Thermometer_RTOS.pdf
  10:uart_debug.h  **** *
  11:uart_debug.h  **** * Hardware Dependency: CY8CKIT-062-BLE PSoC 6 BLE Pioneer Kit
  12:uart_debug.h  **** *                      CY8CKIT-028-EPD E-INK Display Shield
  13:uart_debug.h  **** *
  14:uart_debug.h  **** *******************************************************************************
  15:uart_debug.h  **** * Copyright (2018), Cypress Semiconductor Corporation. All rights reserved.
  16:uart_debug.h  **** *******************************************************************************
  17:uart_debug.h  **** * This software, including source code, documentation and related materials
  18:uart_debug.h  **** * (“Software”), is owned by Cypress Semiconductor Corporation or one of its
  19:uart_debug.h  **** * subsidiaries (“Cypress”) and is protected by and subject to worldwide patent
  20:uart_debug.h  **** * protection (United States and foreign), United States copyright laws and
  21:uart_debug.h  **** * international treaty provisions. Therefore, you may use this Software only
  22:uart_debug.h  **** * as provided in the license agreement accompanying the software package from
  23:uart_debug.h  **** * which you obtained this Software (“EULA”).
  24:uart_debug.h  **** *
  25:uart_debug.h  **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  26:uart_debug.h  **** * non-transferable license to copy, modify, and compile the Software source
  27:uart_debug.h  **** * code solely for use in connection with Cypress’s integrated circuit products.
  28:uart_debug.h  **** * Any reproduction, modification, translation, compilation, or representation
  29:uart_debug.h  **** * of this Software except as specified above is prohibited without the express
  30:uart_debug.h  **** * written permission of Cypress.
  31:uart_debug.h  **** *
  32:uart_debug.h  **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO WARRANTY OF ANY KIND, 
  33:uart_debug.h  **** * EXPRESS OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED 
  34:uart_debug.h  **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. Cypress 
  35:uart_debug.h  **** * reserves the right to make changes to the Software without notice. Cypress 
  36:uart_debug.h  **** * does not assume any liability arising out of the application or use of the 
  37:uart_debug.h  **** * Software or any product or circuit described in the Software. Cypress does 
  38:uart_debug.h  **** * not authorize its products for use in any products where a malfunction or 
  39:uart_debug.h  **** * failure of the Cypress product may reasonably be expected to result in 
  40:uart_debug.h  **** * significant property damage, injury or death (“High Risk Product”). By 
  41:uart_debug.h  **** * including Cypress’s product in a High Risk Product, the manufacturer of such 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 8


  42:uart_debug.h  **** * system or application assumes all risk of such use and in doing so agrees to 
  43:uart_debug.h  **** * indemnify Cypress against all liability.
  44:uart_debug.h  **** *******************************************************************************/
  45:uart_debug.h  **** /******************************************************************************
  46:uart_debug.h  **** * This file contains the macros that are used for UART based debug. Note that 
  47:uart_debug.h  **** * enabling debug reduces performance and power efficiency. It also increases 
  48:uart_debug.h  **** * the code size.
  49:uart_debug.h  **** *
  50:uart_debug.h  **** * If the debug is enabled, you should set up a serial port terminal emulator 
  51:uart_debug.h  **** * such as Tera Term, or Hyperterminal with these settings to view the debug
  52:uart_debug.h  **** * information :
  53:uart_debug.h  **** *
  54:uart_debug.h  **** *   Baud rate     :  115200
  55:uart_debug.h  **** *   Data size     :  8-bit
  56:uart_debug.h  **** *   Parity        :  None
  57:uart_debug.h  **** *   Stop          :  1-bit
  58:uart_debug.h  **** *   Flow Control  :  None  
  59:uart_debug.h  **** *******************************************************************************/
  60:uart_debug.h  **** 
  61:uart_debug.h  **** /* Include guard */
  62:uart_debug.h  **** #ifndef UART_DEBUG_H
  63:uart_debug.h  **** #define UART_DEBUG_H
  64:uart_debug.h  **** 
  65:uart_debug.h  **** /* Header file includes */     
  66:uart_debug.h  **** #include "project.h"    
  67:uart_debug.h  **** #include <stdio.h>
  68:uart_debug.h  **** #include <stdlib.h>
  69:uart_debug.h  **** #include <string.h>
  70:uart_debug.h  **** #include <inttypes.h> 
  71:uart_debug.h  ****     
  72:uart_debug.h  **** #if CY_CPU_CORTEX_M4
  73:uart_debug.h  ****     #include "FreeRTOS.h"
  74:uart_debug.h  ****     #include "task.h"
  75:uart_debug.h  ****     #include "queue.h"   
  76:uart_debug.h  **** #endif /* CY_CPU_CORTEX_M4 */
  77:uart_debug.h  ****   
  78:uart_debug.h  **** /* (true) enables UART based debug and (false) disables it. Note that 
  79:uart_debug.h  ****    enabling debug reduces performance, power efficiency and increases 
  80:uart_debug.h  ****    code size. Make sure to enable the UART_DEBUG component in TopDesign 
  81:uart_debug.h  ****    schematic if debug is enabled */    
  82:uart_debug.h  **** #define UART_DEBUG_ENABLE    (true)
  83:uart_debug.h  ****     
  84:uart_debug.h  **** /* Declare the macros used for UART based debug. Make sure to enable the
  85:uart_debug.h  ****     UART_DEBUG component in TopDesign schematic if debug is enabled */    
  86:uart_debug.h  **** #if (UART_DEBUG_ENABLE)
  87:uart_debug.h  ****     /* UART component used for STDIO functions */
  88:uart_debug.h  ****     #define UART_STDIO          (DEBUG_UART_HW)
  89:uart_debug.h  ****     
  90:uart_debug.h  ****     /* Following macros are not RTOS thread-safe, therefore, should not be
  91:uart_debug.h  ****        called from RTOS Tasks */
  92:uart_debug.h  ****     
  93:uart_debug.h  ****     /* Initializes the UART component used for STDIO functions */
  94:uart_debug.h  ****     #define DebugPrintfInit()  (DEBUG_UART_Start())
  95:uart_debug.h  ****     /* Function macro that sends formatted output to STDOUT */
  96:uart_debug.h  ****     #define DebugPrintf(...)     (printf(__VA_ARGS__))
  97:uart_debug.h  ****     
  98:uart_debug.h  **** #if CY_CPU_CORTEX_M4    
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 9


  99:uart_debug.h  **** 	/* RTOS thread-safe macros for initializing and printing debug 
 100:uart_debug.h  **** 	   information from RTOS Tasks */
 101:uart_debug.h  **** 	
 102:uart_debug.h  **** 	/* Initializes the underlying Task and Queue used for printing debug 
 103:uart_debug.h  **** 	   messages */
 104:uart_debug.h  **** 	#define Task_DebugInit()   (InitDebugPrintf())
 105:uart_debug.h  **** 
 106:uart_debug.h  **** 	/* Prints a constant string and an optional error code from a separate 
 107:uart_debug.h  **** 	   Task */
 108:uart_debug.h  **** 	#define Task_DebugPrintf(constString, errorCode) (SendToDebugPrintTask(         \
 109:uart_debug.h  **** 													(char*)constString,        \
 110:uart_debug.h  **** 													(uint32_t)errorCode))
 111:uart_debug.h  **** 	
 112:uart_debug.h  **** 	/* Definition of internal macros, datatypes and the inline functions 
 113:uart_debug.h  **** 	   used by the RTOS thread-safe macros for initializing and printing debug 
 114:uart_debug.h  **** 	   information from RTOS Tasks */
 115:uart_debug.h  **** 			
 116:uart_debug.h  **** 	/* Maximum number of debug messages that can be queued */
 117:uart_debug.h  **** 	#define DEBUG_QUEUE_SIZE    16u
 118:uart_debug.h  **** 	
 119:uart_debug.h  **** 	/* Datatype used for debug queue */
 120:uart_debug.h  **** 	typedef struct
 121:uart_debug.h  **** 	{
 122:uart_debug.h  **** 		char* stringPointer;
 123:uart_debug.h  **** 		uint32_t errorCode;
 124:uart_debug.h  **** 	}   debug_print_data_t;
 125:uart_debug.h  **** 	
 126:uart_debug.h  **** 	/* Queue handle for debug message Queue */
 127:uart_debug.h  **** 	extern QueueHandle_t debugMessageQ;
 128:uart_debug.h  **** 	
 129:uart_debug.h  **** 	/* Task that performs thread safe debug message printing */
 130:uart_debug.h  **** 	void Task_Debug(void *pvParameters);
 131:uart_debug.h  **** 	
 132:uart_debug.h  **** 	/* Inline function that creates the underlying Task and Queue  */
 133:uart_debug.h  **** 	void inline static InitDebugPrintf()
 134:uart_debug.h  **** 	{
 135:uart_debug.h  **** 		debugMessageQ = xQueueCreate(DEBUG_QUEUE_SIZE,
 136:uart_debug.h  **** 										sizeof(debug_print_data_t));
 137:uart_debug.h  **** 		xTaskCreate(Task_Debug, "Debug Task", configMINIMAL_STACK_SIZE, NULL,
 138:uart_debug.h  **** 					(tskIDLE_PRIORITY+1u), NULL);
 139:uart_debug.h  **** 	}        
 140:uart_debug.h  **** 	
 141:uart_debug.h  **** 	/* Inline function that sends messages to the debug Queue */
 142:uart_debug.h  **** 	void inline static SendToDebugPrintTask(char* stringPtr, uint32_t errCode)
 143:uart_debug.h  **** 	{
 144:uart_debug.h  **** 		debug_print_data_t printData = {.stringPointer = stringPtr, 
  57              		.loc 2 144 0
  58 001c 074B     		ldr	r3, .L4+4
  59 001e 0193     		str	r3, [sp, #4]
  60 0020 0022     		movs	r2, #0
  61 0022 0292     		str	r2, [sp, #8]
 145:uart_debug.h  **** 										.errorCode     = errCode};
 146:uart_debug.h  **** 		xQueueSend(debugMessageQ, &printData,0u);
  62              		.loc 2 146 0
  63 0024 1346     		mov	r3, r2
  64 0026 01A9     		add	r1, sp, #4
  65 0028 0548     		ldr	r0, .L4+8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 10


  66              	.LVL4:
  67 002a 0068     		ldr	r0, [r0]
  68 002c FFF7FEFF 		bl	xQueueGenericSend
  69              	.LVL5:
  70              	.L1:
  71              	.LBE31:
  72              	.LBE30:
 303:temperature_task.c ****     {
 304:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Sending data to temperature"\
 305:temperature_task.c ****                          "queue", 0u);    
 306:temperature_task.c ****     }
 307:temperature_task.c **** }
  73              		.loc 1 307 0
  74 0030 05B0     		add	sp, sp, #20
  75              		.cfi_def_cfa_offset 4
  76              		@ sp needed
  77 0032 5DF804FB 		ldr	pc, [sp], #4
  78              	.L5:
  79 0036 00BF     		.align	2
  80              	.L4:
  81 0038 00000000 		.word	temperatureCommandQ
  82 003c 00000000 		.word	.LC0
  83 0040 00000000 		.word	debugMessageQ
  84              		.cfi_endproc
  85              	.LFE716:
  86              		.size	TemperatureTimerCallback, .-TemperatureTimerCallback
  87              		.section	.text.TemperatureTimerStart,"ax",%progbits
  88              		.align	2
  89              		.thumb
  90              		.thumb_func
  91              		.type	TemperatureTimerStart, %function
  92              	TemperatureTimerStart:
  93              	.LFB717:
 308:temperature_task.c **** 
 309:temperature_task.c **** /*******************************************************************************
 310:temperature_task.c **** * Function Name: void static TemperatureTimerStart(void)                  
 311:temperature_task.c **** ********************************************************************************
 312:temperature_task.c **** * Summary:
 313:temperature_task.c **** *  This function starts the timer that provides timing to periodic
 314:temperature_task.c **** *  temperature processing
 315:temperature_task.c **** *
 316:temperature_task.c **** * Parameters:
 317:temperature_task.c **** *  void
 318:temperature_task.c **** *
 319:temperature_task.c **** * Return:
 320:temperature_task.c **** *  void
 321:temperature_task.c **** *
 322:temperature_task.c **** *******************************************************************************/
 323:temperature_task.c **** void static TemperatureTimerStart(void)
 324:temperature_task.c **** {
  94              		.loc 1 324 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 8
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 10B5     		push	{r4, lr}
  99              		.cfi_def_cfa_offset 8
 100              		.cfi_offset 4, -8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 11


 101              		.cfi_offset 14, -4
 102 0002 84B0     		sub	sp, sp, #16
 103              		.cfi_def_cfa_offset 24
 325:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 326:temperature_task.c ****     BaseType_t rtosApiResult;
 327:temperature_task.c ****     
 328:temperature_task.c ****     /* Create an RTOS timer */
 329:temperature_task.c ****     xTimer_Temperature =  xTimerCreate ("Temperature Timer",
 104              		.loc 1 329 0
 105 0004 174B     		ldr	r3, .L10
 106 0006 0093     		str	r3, [sp]
 107 0008 0023     		movs	r3, #0
 108 000a 0122     		movs	r2, #1
 109 000c 42F21071 		movw	r1, #10000
 110 0010 1548     		ldr	r0, .L10+4
 111 0012 FFF7FEFF 		bl	xTimerCreate
 112              	.LVL6:
 113 0016 154B     		ldr	r3, .L10+8
 114 0018 1860     		str	r0, [r3]
 330:temperature_task.c ****                                         SLOW_SCAN_INTERVAL, pdTRUE,  
 331:temperature_task.c ****                                         NULL, TemperatureTimerCallback);
 332:temperature_task.c ****     
 333:temperature_task.c ****     /* Make sure that timer handle is valid */
 334:temperature_task.c ****     if (xTimer_Temperature != NULL)
 115              		.loc 1 334 0
 116 001a B0B1     		cbz	r0, .L7
 117 001c 0446     		mov	r4, r0
 335:temperature_task.c ****     {
 336:temperature_task.c ****         /* Start the timer */
 337:temperature_task.c ****         rtosApiResult = xTimerStart(xTimer_Temperature,0u);
 118              		.loc 1 337 0
 119 001e FFF7FEFF 		bl	xTaskGetTickCount
 120              	.LVL7:
 121 0022 0023     		movs	r3, #0
 122 0024 0093     		str	r3, [sp]
 123 0026 0246     		mov	r2, r0
 124 0028 0121     		movs	r1, #1
 125 002a 2046     		mov	r0, r4
 126 002c FFF7FEFF 		bl	xTimerGenericCommand
 127              	.LVL8:
 338:temperature_task.c ****         
 339:temperature_task.c ****         /* Check if the operation has been successful */
 340:temperature_task.c ****         if(rtosApiResult != pdPASS)
 128              		.loc 1 340 0
 129 0030 0128     		cmp	r0, #1
 130 0032 14D0     		beq	.L6
 131              	.LVL9:
 132              	.LBB32:
 133              	.LBB33:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 134              		.loc 2 144 0
 135 0034 0E4B     		ldr	r3, .L10+12
 136 0036 0293     		str	r3, [sp, #8]
 137 0038 0022     		movs	r2, #0
 138 003a 0392     		str	r2, [sp, #12]
 139              		.loc 2 146 0
 140 003c 1346     		mov	r3, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 12


 141 003e 02A9     		add	r1, sp, #8
 142 0040 0C48     		ldr	r0, .L10+16
 143              	.LVL10:
 144 0042 0068     		ldr	r0, [r0]
 145 0044 FFF7FEFF 		bl	xQueueGenericSend
 146              	.LVL11:
 147 0048 09E0     		b	.L6
 148              	.LVL12:
 149              	.L7:
 150              	.LBE33:
 151              	.LBE32:
 152              	.LBB34:
 153              	.LBB35:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 154              		.loc 2 144 0
 155 004a 0B4B     		ldr	r3, .L10+20
 156 004c 0293     		str	r3, [sp, #8]
 157 004e 0022     		movs	r2, #0
 158 0050 0392     		str	r2, [sp, #12]
 159              		.loc 2 146 0
 160 0052 1346     		mov	r3, r2
 161 0054 02A9     		add	r1, sp, #8
 162 0056 0748     		ldr	r0, .L10+16
 163 0058 0068     		ldr	r0, [r0]
 164 005a FFF7FEFF 		bl	xQueueGenericSend
 165              	.LVL13:
 166              	.L6:
 167              	.LBE35:
 168              	.LBE34:
 341:temperature_task.c ****         {
 342:temperature_task.c ****             Task_DebugPrintf("Failure! : Temperature  - Timer initialization", 0u);    
 343:temperature_task.c ****         }
 344:temperature_task.c ****     }
 345:temperature_task.c ****     else
 346:temperature_task.c ****     {
 347:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature  - Timer creation", 0u); 
 348:temperature_task.c ****     }
 349:temperature_task.c **** }
 169              		.loc 1 349 0
 170 005e 04B0     		add	sp, sp, #16
 171              		.cfi_def_cfa_offset 8
 172              		@ sp needed
 173 0060 10BD     		pop	{r4, pc}
 174              	.L11:
 175 0062 00BF     		.align	2
 176              	.L10:
 177 0064 00000000 		.word	TemperatureTimerCallback
 178 0068 3C000000 		.word	.LC1
 179 006c 00000000 		.word	xTimer_Temperature
 180 0070 50000000 		.word	.LC2
 181 0074 00000000 		.word	debugMessageQ
 182 0078 80000000 		.word	.LC3
 183              		.cfi_endproc
 184              	.LFE717:
 185              		.size	TemperatureTimerStart, .-TemperatureTimerStart
 186              		.section	.text.TemperatureTimerUpdate,"ax",%progbits
 187              		.align	2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 13


 188              		.thumb
 189              		.thumb_func
 190              		.type	TemperatureTimerUpdate, %function
 191              	TemperatureTimerUpdate:
 192              	.LFB718:
 350:temperature_task.c **** 
 351:temperature_task.c **** /*******************************************************************************
 352:temperature_task.c **** * Function Name: void static TemperatureTimerUpdate(TickType_t period))                 
 353:temperature_task.c **** ********************************************************************************
 354:temperature_task.c **** * Summary:
 355:temperature_task.c **** *  This function updates the timer period per the parameter
 356:temperature_task.c **** *
 357:temperature_task.c **** * Parameters:
 358:temperature_task.c **** *  TickType_t period :  Period of the timer in ticks
 359:temperature_task.c **** *
 360:temperature_task.c **** * Return:
 361:temperature_task.c **** *  void
 362:temperature_task.c **** *
 363:temperature_task.c **** *******************************************************************************/
 364:temperature_task.c **** void static TemperatureTimerUpdate(TickType_t period)
 365:temperature_task.c **** {
 193              		.loc 1 365 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 8
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL14:
 198 0000 10B5     		push	{r4, lr}
 199              		.cfi_def_cfa_offset 8
 200              		.cfi_offset 4, -8
 201              		.cfi_offset 14, -4
 202 0002 84B0     		sub	sp, sp, #16
 203              		.cfi_def_cfa_offset 24
 366:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 367:temperature_task.c ****     BaseType_t rtosApiResult;
 368:temperature_task.c ****     
 369:temperature_task.c ****     /* Change the timer period */
 370:temperature_task.c ****     rtosApiResult = xTimerChangePeriod(xTimer_Temperature, period, 0u);
 204              		.loc 1 370 0
 205 0004 0B4B     		ldr	r3, .L15
 206 0006 1C68     		ldr	r4, [r3]
 207 0008 0023     		movs	r3, #0
 208 000a 0093     		str	r3, [sp]
 209 000c 0246     		mov	r2, r0
 210 000e 0421     		movs	r1, #4
 211 0010 2046     		mov	r0, r4
 212              	.LVL15:
 213 0012 FFF7FEFF 		bl	xTimerGenericCommand
 214              	.LVL16:
 371:temperature_task.c **** 
 372:temperature_task.c ****     /* Check if the operation has been successful */
 373:temperature_task.c ****     if(rtosApiResult != pdPASS)
 215              		.loc 1 373 0
 216 0016 0128     		cmp	r0, #1
 217 0018 09D0     		beq	.L12
 218              	.LVL17:
 219              	.LBB36:
 220              	.LBB37:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 14


 144:uart_debug.h  **** 										.errorCode     = errCode};
 221              		.loc 2 144 0
 222 001a 074B     		ldr	r3, .L15+4
 223 001c 0293     		str	r3, [sp, #8]
 224 001e 0022     		movs	r2, #0
 225 0020 0392     		str	r2, [sp, #12]
 226              		.loc 2 146 0
 227 0022 1346     		mov	r3, r2
 228 0024 02A9     		add	r1, sp, #8
 229 0026 0548     		ldr	r0, .L15+8
 230              	.LVL18:
 231 0028 0068     		ldr	r0, [r0]
 232 002a FFF7FEFF 		bl	xQueueGenericSend
 233              	.LVL19:
 234              	.L12:
 235              	.LBE37:
 236              	.LBE36:
 374:temperature_task.c ****     {
 375:temperature_task.c ****         Task_DebugPrintf("Failure! : Temperature - Timer update ", 0u);   
 376:temperature_task.c ****     }
 377:temperature_task.c **** }
 237              		.loc 1 377 0
 238 002e 04B0     		add	sp, sp, #16
 239              		.cfi_def_cfa_offset 8
 240              		@ sp needed
 241 0030 10BD     		pop	{r4, pc}
 242              	.L16:
 243 0032 00BF     		.align	2
 244              	.L15:
 245 0034 00000000 		.word	xTimer_Temperature
 246 0038 AC000000 		.word	.LC4
 247 003c 00000000 		.word	debugMessageQ
 248              		.cfi_endproc
 249              	.LFE718:
 250              		.size	TemperatureTimerUpdate, .-TemperatureTimerUpdate
 251              		.section	.text.isrADC,"ax",%progbits
 252              		.align	2
 253              		.global	isrADC
 254              		.thumb
 255              		.thumb_func
 256              		.type	isrADC, %function
 257              	isrADC:
 258              	.LFB715:
 245:temperature_task.c ****     /* Variable used to store the return values of RTOS APIs */
 259              		.loc 1 245 0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 16
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 267 0002 84B0     		sub	sp, sp, #16
 268              		.cfi_def_cfa_offset 24
 269              	.LVL20:
 270              	.LBB38:
 271              	.LBB39:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 15


 272              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar SAR ADC Subsystem (SAR)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 16


  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 17


 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 18


 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 19


 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 20


 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 21


 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 22


 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 23


 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_D
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 24


 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_Sleep flow</td>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 25


 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syslib/cy_syslib.h"
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syspm/cy_syspm.h"
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifndef CY_IP_MXS40PASS_SAR
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     #error "The SAR driver is not supported on this device"
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        10
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 26


 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 27


 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 28


 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 29


 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 30


 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 31


 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 32


 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 33


1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 34


1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 35


1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 36


1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 37


1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 38


1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Sleep(SAR_Type *base);
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 39


1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CTRL &= ~SAR_CTRL_ENABLED_Msk;
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 40


1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->CHAN_RESULT_UPDATED;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CHAN_EN = enableMask;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 41


1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->RANGE_COND = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->INTR;
 273              		.loc 3 1533 0
 274 0004 144B     		ldr	r3, .L21
 275 0006 D3F81042 		ldr	r4, [r3, #528]
 276              	.LVL21:
 277              	.LBE39:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 42


 278              	.LBE38:
 279              	.LBB40:
 280              	.LBB41:
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 281              		.loc 3 1561 0
 282 000a 072C     		cmp	r4, #7
 283 000c 04D9     		bls	.L18
 284 000e 40F21961 		movw	r1, #1561
 285 0012 1248     		ldr	r0, .L21+4
 286 0014 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 287              	.LVL22:
 288              	.L18:
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR = intrMask;
 289              		.loc 3 1563 0
 290 0018 0F4B     		ldr	r3, .L21
 291 001a C3F81042 		str	r4, [r3, #528]
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) base->INTR;
 292              		.loc 3 1566 0
 293 001e D3F81022 		ldr	r2, [r3, #528]
 294              	.LVL23:
 295              	.LBE41:
 296              	.LBE40:
 297              	.LBB42:
 298              	.LBB43:
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 299              		.loc 3 1533 0
 300 0022 D3F81032 		ldr	r3, [r3, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 43


 301              	.LVL24:
 302              	.LBE43:
 303              	.LBE42:
 263:temperature_task.c ****     rtosApiResult = xQueueSendFromISR(temperatureCommandQ,
 304              		.loc 1 263 0
 305 0026 04A9     		add	r1, sp, #16
 306 0028 0223     		movs	r3, #2
 307 002a 01F8013D 		strb	r3, [r1, #-1]!
 264:temperature_task.c ****                                       &temperatureCommand,0u);
 308              		.loc 1 264 0
 309 002e 0023     		movs	r3, #0
 310 0030 1A46     		mov	r2, r3
 311 0032 0B48     		ldr	r0, .L21+8
 312 0034 0068     		ldr	r0, [r0]
 313 0036 FFF7FEFF 		bl	xQueueGenericSendFromISR
 314              	.LVL25:
 268:temperature_task.c ****     {
 315              		.loc 1 268 0
 316 003a 0128     		cmp	r0, #1
 317 003c 09D0     		beq	.L17
 318              	.LVL26:
 319              	.LBB44:
 320              	.LBB45:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 321              		.loc 2 144 0
 322 003e 094B     		ldr	r3, .L21+12
 323 0040 0193     		str	r3, [sp, #4]
 324 0042 0022     		movs	r2, #0
 325 0044 0292     		str	r2, [sp, #8]
 326              		.loc 2 146 0
 327 0046 1346     		mov	r3, r2
 328 0048 01A9     		add	r1, sp, #4
 329 004a 0748     		ldr	r0, .L21+16
 330              	.LVL27:
 331 004c 0068     		ldr	r0, [r0]
 332 004e FFF7FEFF 		bl	xQueueGenericSend
 333              	.LVL28:
 334              	.L17:
 335              	.LBE45:
 336              	.LBE44:
 273:temperature_task.c **** 
 337              		.loc 1 273 0
 338 0052 04B0     		add	sp, sp, #16
 339              		.cfi_def_cfa_offset 8
 340              		@ sp needed
 341 0054 10BD     		pop	{r4, pc}
 342              	.L22:
 343 0056 00BF     		.align	2
 344              	.L21:
 345 0058 00001D41 		.word	1092419584
 346 005c D4000000 		.word	.LC5
 347 0060 00000000 		.word	temperatureCommandQ
 348 0064 00000000 		.word	.LC0
 349 0068 00000000 		.word	debugMessageQ
 350              		.cfi_endproc
 351              	.LFE715:
 352              		.size	isrADC, .-isrADC
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 44


 353              		.section	.text.Task_Temperature,"ax",%progbits
 354              		.align	2
 355              		.global	Task_Temperature
 356              		.thumb
 357              		.thumb_func
 358              		.type	Task_Temperature, %function
 359              	Task_Temperature:
 360              	.LFB714:
 108:temperature_task.c ****     /* Variable that stores commands received  */
 361              		.loc 1 108 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 32
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              	.LVL29:
 366 0000 30B5     		push	{r4, r5, lr}
 367              		.cfi_def_cfa_offset 12
 368              		.cfi_offset 4, -12
 369              		.cfi_offset 5, -8
 370              		.cfi_offset 14, -4
 371 0002 2DED028B 		vpush.64	{d8}
 372              		.cfi_def_cfa_offset 20
 373              		.cfi_offset 80, -20
 374              		.cfi_offset 81, -16
 375 0006 89B0     		sub	sp, sp, #36
 376              		.cfi_def_cfa_offset 56
 377              	.LVL30:
 130:temperature_task.c ****     ADC_IRQ_Enable();
 378              		.loc 1 130 0
 379 0008 5B48     		ldr	r0, .L37
 380              	.LVL31:
 381 000a FFF7FEFF 		bl	ADC_StartEx
 382              	.LVL32:
 131:temperature_task.c ****     ADC_StartConvert();
 383              		.loc 1 131 0
 384 000e FFF7FEFF 		bl	ADC_IRQ_Enable
 385              	.LVL33:
 132:temperature_task.c ****     
 386              		.loc 1 132 0
 387 0012 FFF7FEFF 		bl	ADC_StartConvert
 388              	.LVL34:
 135:temperature_task.c ****     
 389              		.loc 1 135 0
 390 0016 FFF7FEFF 		bl	TemperatureTimerStart
 391              	.LVL35:
 117:temperature_task.c ****     
 392              		.loc 1 117 0
 393 001a 0024     		movs	r4, #0
 394              	.LVL36:
 395              	.L24:
 142:temperature_task.c ****                                       &temperatureCommand, portMAX_DELAY);
 396              		.loc 1 142 0
 397 001c 0023     		movs	r3, #0
 398 001e 4FF0FF32 		mov	r2, #-1
 399 0022 0DF11F01 		add	r1, sp, #31
 400 0026 5548     		ldr	r0, .L37+4
 401 0028 0068     		ldr	r0, [r0]
 402 002a FFF7FEFF 		bl	xQueueGenericReceive
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 45


 403              	.LVL37:
 146:temperature_task.c ****         {   
 404              		.loc 1 146 0
 405 002e 0128     		cmp	r0, #1
 406 0030 40F09680 		bne	.L25
 149:temperature_task.c ****             {
 407              		.loc 1 149 0
 408 0034 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 409 0038 032B     		cmp	r3, #3
 410 003a 00F28680 		bhi	.L26
 411 003e DFE803F0 		tbb	[pc, r3]
 412              	.L28:
 413 0042 02       		.byte	(.L27-.L28)/2
 414 0043 07       		.byte	(.L29-.L28)/2
 415 0044 0D       		.byte	(.L30-.L28)/2
 416 0045 73       		.byte	(.L31-.L28)/2
 417              		.p2align 1
 418              	.L27:
 419              	.LVL38:
 155:temperature_task.c ****                     break;
 420              		.loc 1 155 0
 421 0046 6420     		movs	r0, #100
 422              	.LVL39:
 423 0048 FFF7FEFF 		bl	TemperatureTimerUpdate
 424              	.LVL40:
 153:temperature_task.c ****                     /* Enable periodic scan */
 425              		.loc 1 153 0
 426 004c 0124     		movs	r4, #1
 156:temperature_task.c ****                  
 427              		.loc 1 156 0
 428 004e E5E7     		b	.L24
 429              	.LVL41:
 430              	.L29:
 162:temperature_task.c ****                     break;
 431              		.loc 1 162 0
 432 0050 42F21070 		movw	r0, #10000
 433              	.LVL42:
 434 0054 FFF7FEFF 		bl	TemperatureTimerUpdate
 435              	.LVL43:
 160:temperature_task.c ****                     /* Disable periodic scan */
 436              		.loc 1 160 0
 437 0058 0024     		movs	r4, #0
 163:temperature_task.c ****                 /* Process temperature data from CapSense widgets */
 438              		.loc 1 163 0
 439 005a DFE7     		b	.L24
 440              	.LVL44:
 441              	.L30:
 442              	.LBB62:
 443              	.LBB63:
 444              		.file 4 "Generated_Source\\PSoC6/ADC.h"
   1:Generated_Source\PSoC6/ADC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC.h **** * \file     ADC.h
   3:Generated_Source\PSoC6/ADC.h **** * \version  2.10
   4:Generated_Source\PSoC6/ADC.h **** *
   5:Generated_Source\PSoC6/ADC.h **** * \brief
   6:Generated_Source\PSoC6/ADC.h **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 46


   8:Generated_Source\PSoC6/ADC.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC.h **** * \copyright
  10:Generated_Source\PSoC6/ADC.h **** * (c) 2017, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC.h **** #if !defined(CY_ADC_H)
  40:Generated_Source\PSoC6/ADC.h **** #define CY_ADC_H
  41:Generated_Source\PSoC6/ADC.h **** 
  42:Generated_Source\PSoC6/ADC.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC.h **** 
  45:Generated_Source\PSoC6/ADC.h **** #define ADC_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC.h **** #if (ADC_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC.h **** #include "ADC_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC.h **** #endif
  49:Generated_Source\PSoC6/ADC.h **** 
  50:Generated_Source\PSoC6/ADC.h **** #define ADC_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC.h **** #include "ADC_intSarClock.h"
  53:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC.h **** 
  55:Generated_Source\PSoC6/ADC.h **** /**
  56:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC.h **** *
  58:Generated_Source\PSoC6/ADC.h **** */
  59:Generated_Source\PSoC6/ADC.h **** typedef struct
  60:Generated_Source\PSoC6/ADC.h **** {
  61:Generated_Source\PSoC6/ADC.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 47


  65:Generated_Source\PSoC6/ADC.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC.h ****                                             */
  68:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC.h **** 
  72:Generated_Source\PSoC6/ADC.h **** } ADC_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC.h **** 
  75:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC.h **** void ADC_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC.h **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC.h **** void ADC_Init(void);
  81:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void);
  82:Generated_Source\PSoC6/ADC.h **** 
  83:Generated_Source\PSoC6/ADC.h **** /**
  84:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC.h **** * @{
  86:Generated_Source\PSoC6/ADC.h **** */
  87:Generated_Source\PSoC6/ADC.h **** void ADC_Start(void);
  88:Generated_Source\PSoC6/ADC.h **** void ADC_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void);
  90:Generated_Source\PSoC6/ADC.h **** void ADC_StartConvert(void);
  91:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void);
  92:Generated_Source\PSoC6/ADC.h **** void ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC.h **** void ADC_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC.h **** uint32_t ADC_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC.h **** 
 107:Generated_Source\PSoC6/ADC.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC.h **** 
 109:Generated_Source\PSoC6/ADC.h **** void ADC_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC.h **** 
 111:Generated_Source\PSoC6/ADC.h **** /**
 112:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC.h **** * @{
 114:Generated_Source\PSoC6/ADC.h **** */
 115:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void);
 116:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void);
 117:Generated_Source\PSoC6/ADC.h **** 
 118:Generated_Source\PSoC6/ADC.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC.h **** 
 120:Generated_Source\PSoC6/ADC.h **** /**
 121:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_interrupt
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 48


 122:Generated_Source\PSoC6/ADC.h **** * @{
 123:Generated_Source\PSoC6/ADC.h **** */
 124:Generated_Source\PSoC6/ADC.h **** void ADC_ISR(void);
 125:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC.h **** 
 128:Generated_Source\PSoC6/ADC.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC.h **** 
 130:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC.h **** 
 135:Generated_Source\PSoC6/ADC.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC.h **** 
 138:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 customizer defines                                   */
 140:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC.h **** 
 142:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_RATE             (200)
 143:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_COUNT           (2u)
 145:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_NOMINAL_CLOCK_FREQ      (12000000u)
 147:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_EN              (0x3u)
 148:Generated_Source\PSoC6/ADC.h **** 
 149:Generated_Source\PSoC6/ADC.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLES_AVERAGED        (7uL)
 153:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_PRESENT          (0)
 157:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME0          (3uL)
 159:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC.h **** 
 172:Generated_Source\PSoC6/ADC.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG0_NOMINAL_CLOCK_FREQ))
 175:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC.h **** 
 177:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 customizer defines                                     */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 49


 179:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC.h **** 
 181:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC.h **** 
 185:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC.h **** 
 193:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLES_AVERAGED        (uL)
 197:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC.h **** 
 216:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG1_NOMINAL_CLOCK_FR
 219:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC.h **** #endif /* #if(ADC_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC.h **** 
 222:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC.h **** 
 226:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC.h **** 
 230:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_NOMINAL_CLOCK_FREQ      (u)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 50


 236:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC.h **** 
 238:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_LOW_LIMIT               (u)
 254:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC.h **** 
 261:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG2_NOMINAL_CLOCK_FR
 264:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC.h **** 
 267:Generated_Source\PSoC6/ADC.h **** 
 268:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC.h **** 
 272:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC.h **** 
 283:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME0          (uL)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 51


 293:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC.h **** 
 306:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG3_NOMINAL_CLOCK_FR
 309:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 3) */
 311:Generated_Source\PSoC6/ADC.h **** 
 312:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC.h **** 
 316:Generated_Source\PSoC6/ADC.h **** #define ADC_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC.h **** #define ADC_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC.h **** #define ADC_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC.h **** #define ADC_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC.h **** 
 323:Generated_Source\PSoC6/ADC.h **** /** ADC_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC.h **** */
 326:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CHANNELS_NUM           (2u)
 327:Generated_Source\PSoC6/ADC.h **** 
 328:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC.h **** /**
 332:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC.h **** * @{
 337:Generated_Source\PSoC6/ADC.h **** */
 338:Generated_Source\PSoC6/ADC.h **** 
 339:Generated_Source\PSoC6/ADC.h **** /** ADC_initVar
 340:Generated_Source\PSoC6/ADC.h **** * The ADC_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC.h **** * set to 1 the first time ADC_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC.h **** * ADC_Start() routine.
 345:Generated_Source\PSoC6/ADC.h **** *
 346:Generated_Source\PSoC6/ADC.h **** * If reinitialization of the component is required, then the ADC_Init() function
 347:Generated_Source\PSoC6/ADC.h **** * can be called before the ADC_Start() or ADC_Enable()
 348:Generated_Source\PSoC6/ADC.h **** * functions.
 349:Generated_Source\PSoC6/ADC.h **** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 52


 350:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_initVar;
 351:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_selected;
 352:Generated_Source\PSoC6/ADC.h **** extern uint32_t ADC_currentConfig;
 353:Generated_Source\PSoC6/ADC.h **** 
 354:Generated_Source\PSoC6/ADC.h **** #define ADC_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC.h **** 
 356:Generated_Source\PSoC6/ADC.h **** extern const ADC_CONFIG_STRUCT ADC_allConfigs[ADC_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC.h **** 
 358:Generated_Source\PSoC6/ADC.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC.h **** */
 362:Generated_Source\PSoC6/ADC.h **** extern cy_stc_syspm_callback_t ADC_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC.h **** 
 364:Generated_Source\PSoC6/ADC.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC.h **** 
 366:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
 368:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC.h ****     #if((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC.h ****     #endif /* ((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC.h **** #else
 377:Generated_Source\PSoC6/ADC.h ****     #define ADC_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC.h **** 
 380:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC.h **** 
 389:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC.h **** 
 395:Generated_Source\PSoC6/ADC.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC.h **** 
 400:Generated_Source\PSoC6/ADC.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_FREERUNNING == ADC_FREERUNNING)
 402:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC.h **** #endif /* End ADC_CFG0_FREERUNNING == ADC_FREERUNNING */
 406:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 53


 407:Generated_Source\PSoC6/ADC.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC.h **** #elif(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC.h **** 
 414:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC.h ****     #if((ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC.h **** #elif (ADC_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         ADC_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC.h **** #else
 425:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC.h **** 
 428:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG0 << SAR_CTRL_NEG_S
 430:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC.h **** 
 436:Generated_Source\PSoC6/ADC.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC.h **** #else
 440:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC.h **** 
 443:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC.h **** 
 445:Generated_Source\PSoC6/ADC.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC.h **** 
 450:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC.h **** 
 454:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC.h **** 
 458:Generated_Source\PSoC6/ADC.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC.h **** 
 463:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_TRIGGER_OUT_INIT      (0u)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 54


 464:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC.h **** 
 466:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC.h **** 
 470:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC.h **** 
 474:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC.h **** 
 478:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SE_NEG_INPUT_INIT \
 482:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC.h **** 
 489:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC.h **** )
 501:Generated_Source\PSoC6/ADC.h **** 
 502:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC.h ****         | (uint32)((uint32)ADC_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC.h **** 
 507:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC.h **** 
 509:Generated_Source\PSoC6/ADC.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC.h **** */
 512:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC.h **** 
 515:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC.h **** 
 519:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 calculated defines                                   */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 55


 521:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC.h **** 
 529:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC.h **** 
 535:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 539:Generated_Source\PSoC6/ADC.h **** 
 540:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_FREERUNNING == ADC_FREERUNNING)
 542:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG1_FREERUNNING == ADC_FREERUNNING */
 546:Generated_Source\PSoC6/ADC.h **** 
 547:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         ADC_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC.h ****     #else
 558:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC.h **** 
 561:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG1 << SAR_CTRL_NEG_S
 562:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC.h **** 
 564:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC.h **** 
 567:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC.h **** 
 569:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC.h **** 
 574:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 56


 578:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC.h **** 
 582:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC.h **** 
 587:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC.h **** 
 590:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC.h **** 
 594:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_PWR \
 596:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC.h **** 
 598:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC.h **** 
 602:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC.h **** 
 613:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC.h ****     )
 625:Generated_Source\PSoC6/ADC.h **** 
 626:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC.h **** 
 631:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC.h **** 
 633:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 57


 635:Generated_Source\PSoC6/ADC.h ****     */
 636:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC.h **** 
 640:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC.h **** 
 644:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 653:Generated_Source\PSoC6/ADC.h **** 
 654:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC.h **** 
 660:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC.h **** 
 665:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_FREERUNNING == ADC_FREERUNNING)
 667:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG2_FREERUNNING == ADC_FREERUNNING */
 671:Generated_Source\PSoC6/ADC.h **** 
 672:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         ADC_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC.h ****     #else
 683:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC.h **** 
 686:Generated_Source\PSoC6/ADC.h ****    #define ADC_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG2 << SAR_CTRL_NEG_SE
 687:Generated_Source\PSoC6/ADC.h **** 
 688:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC.h **** 
 690:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 58


 692:Generated_Source\PSoC6/ADC.h **** 
 693:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC.h **** 
 695:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC.h **** 
 700:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC.h **** 
 704:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC.h **** 
 708:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_MODE_INIT \
 710:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC.h **** 
 713:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC.h **** 
 716:Generated_Source\PSoC6/ADC.h **** 
 717:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC.h **** 
 721:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC.h **** 
 725:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC.h **** 
 729:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC.h **** 
 740:Generated_Source\PSoC6/ADC.h **** 
 741:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_UAB_SCAN_MODE_INIT \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 59


 749:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC.h ****     )
 753:Generated_Source\PSoC6/ADC.h **** 
 754:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC.h **** 
 759:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC.h **** 
 761:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC.h ****     */
 764:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 2 */
 767:Generated_Source\PSoC6/ADC.h **** 
 768:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC.h **** 
 772:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC.h **** 
 782:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC.h **** 
 788:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC.h **** 
 793:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_FREERUNNING == ADC_FREERUNNING)
 795:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG3_FREERUNNING == ADC_FREERUNNING */
 799:Generated_Source\PSoC6/ADC.h **** 
 800:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 60


 806:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         ADC_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC.h ****     #else
 811:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC.h **** 
 814:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG3 << SAR_CTRL_NEG_S
 815:Generated_Source\PSoC6/ADC.h **** 
 816:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC.h **** 
 818:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC.h **** 
 821:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC.h **** 
 823:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 824:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC.h **** 
 828:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC.h **** 
 832:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC.h **** 
 836:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC.h **** 
 841:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC.h **** 
 844:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC.h **** 
 848:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC.h **** 
 852:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC.h **** 
 856:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 61


 863:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC.h **** 
 867:Generated_Source\PSoC6/ADC.h **** 
 868:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC.h ****     )
 880:Generated_Source\PSoC6/ADC.h **** 
 881:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC.h **** 
 886:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC.h **** 
 888:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC.h ****     */
 891:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC.h **** 
 894:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC.h **** 
 896:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC.h **** 
 900:Generated_Source\PSoC6/ADC.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Enable
 902:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC.h **** *
 904:Generated_Source\PSoC6/ADC.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC.h **** *
 906:Generated_Source\PSoC6/ADC.h **** * \param None
 907:Generated_Source\PSoC6/ADC.h **** *
 908:Generated_Source\PSoC6/ADC.h **** * \return None
 909:Generated_Source\PSoC6/ADC.h **** *
 910:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC.h **** *  None
 912:Generated_Source\PSoC6/ADC.h **** *
 913:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void)
 915:Generated_Source\PSoC6/ADC.h **** {
 916:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Enable(ADC_SAR__HW);
 917:Generated_Source\PSoC6/ADC.h **** }
 918:Generated_Source\PSoC6/ADC.h **** 
 919:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 62


 920:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Stop
 921:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 922:Generated_Source\PSoC6/ADC.h **** *
 923:Generated_Source\PSoC6/ADC.h **** * \brief This function stops ADC conversions and puts the ADC into its lowest
 924:Generated_Source\PSoC6/ADC.h **** * power mode.
 925:Generated_Source\PSoC6/ADC.h **** *
 926:Generated_Source\PSoC6/ADC.h **** * \param None
 927:Generated_Source\PSoC6/ADC.h **** *
 928:Generated_Source\PSoC6/ADC.h **** * \return None
 929:Generated_Source\PSoC6/ADC.h **** *
 930:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 931:Generated_Source\PSoC6/ADC.h **** * Do not use the ADC_Stop() API to halt conversions. Instead use the
 932:Generated_Source\PSoC6/ADC.h **** * ADC_StopConvert() API. If you use the ADC_Stop() API
 933:Generated_Source\PSoC6/ADC.h **** * to halt conversions then later use the ADC_Start() and
 934:Generated_Source\PSoC6/ADC.h **** * ADC_StartConvert() APIs to resume conversions, the first channel
 935:Generated_Source\PSoC6/ADC.h **** * of the scan may be corrupt. The ADC_StopConvert() API will enable
 936:Generated_Source\PSoC6/ADC.h **** * the ADC to complete the current scan of channels. After the
 937:Generated_Source\PSoC6/ADC.h **** * channel scan is complete, the ADC will stop all conversions, which
 938:Generated_Source\PSoC6/ADC.h **** * can be detected by the use of an ISR or the ADC_IsEndConversion()
 939:Generated_Source\PSoC6/ADC.h **** * function.
 940:Generated_Source\PSoC6/ADC.h **** *
 941:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 942:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void)
 943:Generated_Source\PSoC6/ADC.h **** {
 944:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Disable(ADC_SAR__HW);
 945:Generated_Source\PSoC6/ADC.h **** }
 946:Generated_Source\PSoC6/ADC.h **** 
 947:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 948:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_StopConvert
 949:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 950:Generated_Source\PSoC6/ADC.h **** *
 951:Generated_Source\PSoC6/ADC.h **** * \brief Forces the ADC to stop conversions. If a conversion is
 952:Generated_Source\PSoC6/ADC.h **** * currently executing, that conversion will complete, but no further conversions
 953:Generated_Source\PSoC6/ADC.h **** * will occur.
 954:Generated_Source\PSoC6/ADC.h **** *
 955:Generated_Source\PSoC6/ADC.h **** * \param None
 956:Generated_Source\PSoC6/ADC.h **** *
 957:Generated_Source\PSoC6/ADC.h **** * \return None
 958:Generated_Source\PSoC6/ADC.h **** *
 959:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 960:Generated_Source\PSoC6/ADC.h **** *
 961:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 962:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void)
 963:Generated_Source\PSoC6/ADC.h **** {
 964:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_StopConvert(ADC_SAR__HW);
 965:Generated_Source\PSoC6/ADC.h **** }
 966:Generated_Source\PSoC6/ADC.h **** 
 967:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 968:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult16
 969:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 970:Generated_Source\PSoC6/ADC.h **** *
 971:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register
 972:Generated_Source\PSoC6/ADC.h **** *
 973:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 974:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 975:Generated_Source\PSoC6/ADC.h **** *
 976:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 16-bit integer.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 63


 977:Generated_Source\PSoC6/ADC.h **** *
 978:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
 979:Generated_Source\PSoC6/ADC.h **** *
 980:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 981:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan)
 982:Generated_Source\PSoC6/ADC.h **** {
 983:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
 984:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
 445              		.loc 4 984 0
 446 005c 484B     		ldr	r3, .L37+8
 447 005e 1B68     		ldr	r3, [r3]
 448 0060 03EB8303 		add	r3, r3, r3, lsl #2
 449 0064 9A00     		lsls	r2, r3, #2
 450 0066 474B     		ldr	r3, .L37+12
 451 0068 1A44     		add	r2, r2, r3
 452 006a 5368     		ldr	r3, [r2, #4]
 453 006c 23B9     		cbnz	r3, .L33
 454 006e 4FF47671 		mov	r1, #984
 455 0072 4548     		ldr	r0, .L37+16
 456              	.LVL45:
 457 0074 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 458              	.LVL46:
 459              	.L33:
 985:Generated_Source\PSoC6/ADC.h **** 
 986:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_GetResult16(ADC_SAR__HW, chan);
 460              		.loc 4 986 0
 461 0078 0021     		movs	r1, #0
 462 007a 4448     		ldr	r0, .L37+20
 463 007c FFF7FEFF 		bl	Cy_SAR_GetResult16
 464              	.LVL47:
 465 0080 08EE900A 		vmov	s17, r0	@ int
 466              	.LVL48:
 467              	.LBE63:
 468              	.LBE62:
 469              	.LBB64:
 470              	.LBB65:
 984:Generated_Source\PSoC6/ADC.h **** 
 471              		.loc 4 984 0
 472 0084 3E4B     		ldr	r3, .L37+8
 473 0086 1B68     		ldr	r3, [r3]
 474 0088 03EB8303 		add	r3, r3, r3, lsl #2
 475 008c 9A00     		lsls	r2, r3, #2
 476 008e 3D4B     		ldr	r3, .L37+12
 477 0090 1A44     		add	r2, r2, r3
 478 0092 5368     		ldr	r3, [r2, #4]
 479 0094 012B     		cmp	r3, #1
 480 0096 04D8     		bhi	.L34
 481 0098 4FF47671 		mov	r1, #984
 482 009c 3A48     		ldr	r0, .L37+16
 483 009e FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 484              	.LVL49:
 485              	.L34:
 486              		.loc 4 986 0
 487 00a2 3A4D     		ldr	r5, .L37+20
 488 00a4 0121     		movs	r1, #1
 489 00a6 2846     		mov	r0, r5
 490 00a8 FFF7FEFF 		bl	Cy_SAR_GetResult16
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 64


 491              	.LVL50:
 492 00ac 08EE100A 		vmov	s16, r0	@ int
 493              	.LVL51:
 494              	.LBE65:
 495              	.LBE64:
 496              	.LBB66:
 497              	.LBB67:
 987:Generated_Source\PSoC6/ADC.h **** }
 988:Generated_Source\PSoC6/ADC.h **** 
 989:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 990:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_GetResult32
 991:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
 992:Generated_Source\PSoC6/ADC.h **** *
 993:Generated_Source\PSoC6/ADC.h **** * \brief Gets the data available in the channel result data register.
 994:Generated_Source\PSoC6/ADC.h **** *
 995:Generated_Source\PSoC6/ADC.h **** * \param chan The ADC channel to read the result from. The first
 996:Generated_Source\PSoC6/ADC.h **** * channel is 0.
 997:Generated_Source\PSoC6/ADC.h **** *
 998:Generated_Source\PSoC6/ADC.h **** * \return Returns converted data as a signed 32-bit integer.
 999:Generated_Source\PSoC6/ADC.h **** *
1000:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1001:Generated_Source\PSoC6/ADC.h **** *
1002:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1003:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan)
1004:Generated_Source\PSoC6/ADC.h **** {
1005:Generated_Source\PSoC6/ADC.h ****     int32_t finalResult;
1006:Generated_Source\PSoC6/ADC.h **** 
1007:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1008:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1009:Generated_Source\PSoC6/ADC.h **** 
1010:Generated_Source\PSoC6/ADC.h ****     finalResult = Cy_SAR_GetResult32(ADC_SAR__HW, chan);
1011:Generated_Source\PSoC6/ADC.h **** 
1012:Generated_Source\PSoC6/ADC.h ****     return finalResult;
1013:Generated_Source\PSoC6/ADC.h **** }
1014:Generated_Source\PSoC6/ADC.h **** 
1015:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1016:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLowLimit
1017:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1018:Generated_Source\PSoC6/ADC.h **** *
1019:Generated_Source\PSoC6/ADC.h **** * \brief Sets the low limit parameter for a limit condition.
1020:Generated_Source\PSoC6/ADC.h **** *
1021:Generated_Source\PSoC6/ADC.h **** * \param lowLimit The low limit for a limit condition.
1022:Generated_Source\PSoC6/ADC.h **** *
1023:Generated_Source\PSoC6/ADC.h **** * \return None
1024:Generated_Source\PSoC6/ADC.h **** *
1025:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1026:Generated_Source\PSoC6/ADC.h **** *
1027:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1028:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit)
1029:Generated_Source\PSoC6/ADC.h **** {
1030:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetLowLimit(ADC_SAR__HW, lowLimit);
1031:Generated_Source\PSoC6/ADC.h **** }
1032:Generated_Source\PSoC6/ADC.h **** 
1033:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1034:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetHighLimit
1035:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1036:Generated_Source\PSoC6/ADC.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 65


1037:Generated_Source\PSoC6/ADC.h **** * \brief Sets the high limit parameter for a limit condition.
1038:Generated_Source\PSoC6/ADC.h **** *
1039:Generated_Source\PSoC6/ADC.h **** * \param highLimit The high limit for a limit condition.
1040:Generated_Source\PSoC6/ADC.h **** *
1041:Generated_Source\PSoC6/ADC.h **** * \return None
1042:Generated_Source\PSoC6/ADC.h **** *
1043:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1044:Generated_Source\PSoC6/ADC.h **** *
1045:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1046:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit)
1047:Generated_Source\PSoC6/ADC.h **** {
1048:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetHighLimit(ADC_SAR__HW, highLimit);
1049:Generated_Source\PSoC6/ADC.h **** }
1050:Generated_Source\PSoC6/ADC.h **** 
1051:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1052:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetLimitMask
1053:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1054:Generated_Source\PSoC6/ADC.h **** *
1055:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel limit condition mask.
1056:Generated_Source\PSoC6/ADC.h **** *
1057:Generated_Source\PSoC6/ADC.h **** *
1058:Generated_Source\PSoC6/ADC.h **** * \param limitMask
1059:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a limit condition interrupt.
1060:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the limit condition interrupt for channel N.
1061:Generated_Source\PSoC6/ADC.h **** * The limitMask cannot be larger than the number of channels.
1062:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1063:Generated_Source\PSoC6/ADC.h **** *
1064:Generated_Source\PSoC6/ADC.h **** * \return None
1065:Generated_Source\PSoC6/ADC.h **** *
1066:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1067:Generated_Source\PSoC6/ADC.h **** *
1068:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1069:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask)
1070:Generated_Source\PSoC6/ADC.h **** {
1071:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetRangeInterruptMask(ADC_SAR__HW, limitMask);
1072:Generated_Source\PSoC6/ADC.h **** }
1073:Generated_Source\PSoC6/ADC.h **** 
1074:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1075:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetSatMask
1076:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1077:Generated_Source\PSoC6/ADC.h **** *
1078:Generated_Source\PSoC6/ADC.h **** * \brief Sets the channel saturation event mask.
1079:Generated_Source\PSoC6/ADC.h **** *
1080:Generated_Source\PSoC6/ADC.h **** * \param satMask
1081:Generated_Source\PSoC6/ADC.h **** * Sets which channels can cause a saturation event interrupt.
1082:Generated_Source\PSoC6/ADC.h **** * Bit N of the mask enables the saturation event interrupt for channel N.
1083:Generated_Source\PSoC6/ADC.h **** * The satMask cannot be larger than the number of channels.
1084:Generated_Source\PSoC6/ADC.h **** * If a channel is not enabled, it cannot cause any interrupts.
1085:Generated_Source\PSoC6/ADC.h **** *
1086:Generated_Source\PSoC6/ADC.h **** * \return None
1087:Generated_Source\PSoC6/ADC.h **** *
1088:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1089:Generated_Source\PSoC6/ADC.h **** *
1090:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1091:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask)
1092:Generated_Source\PSoC6/ADC.h **** {
1093:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_SetSatInterruptMask(ADC_SAR__HW, satMask);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 66


1094:Generated_Source\PSoC6/ADC.h **** }
1095:Generated_Source\PSoC6/ADC.h **** 
1096:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1097:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetOffset
1098:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1099:Generated_Source\PSoC6/ADC.h **** *
1100:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC offset that is used by the functions ADC_CountsTo_uVolts,
1101:Generated_Source\PSoC6/ADC.h **** * ADC_CountsTo_mVolts, and ADC_CountsTo_Volts.
1102:Generated_Source\PSoC6/ADC.h **** *
1103:Generated_Source\PSoC6/ADC.h **** * Offset is applied to counts before unit scaling and gain.  All CountsTo_[mV, uV, V]olts()
1104:Generated_Source\PSoC6/ADC.h **** * functions use the following equation:
1105:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1106:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1107:Generated_Source\PSoC6/ADC.h **** *
1108:Generated_Source\PSoC6/ADC.h **** * To set channel 0's offset based on known V_offset_mV, use:
1109:Generated_Source\PSoC6/ADC.h **** *     ADC_SetOffset(0uL, -1 * V_offset_mV * (1uL << (Resolution - 1)) / V_ref_mV);
1110:Generated_Source\PSoC6/ADC.h **** *
1111:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1112:Generated_Source\PSoC6/ADC.h **** *
1113:Generated_Source\PSoC6/ADC.h **** * \param offset This value is a measured value when the inputs are shorted or
1114:Generated_Source\PSoC6/ADC.h **** * connected to the same input voltage.
1115:Generated_Source\PSoC6/ADC.h **** *
1116:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1117:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
1118:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: offset was set successfully
1119:Generated_Source\PSoC6/ADC.h **** *
1120:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1121:Generated_Source\PSoC6/ADC.h **** *
1122:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1123:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset)
1124:Generated_Source\PSoC6/ADC.h **** {
1125:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1126:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1127:Generated_Source\PSoC6/ADC.h **** 
1128:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetOffset(chan, offset);
1129:Generated_Source\PSoC6/ADC.h **** }
1130:Generated_Source\PSoC6/ADC.h **** 
1131:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1132:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_SetGain
1133:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1134:Generated_Source\PSoC6/ADC.h **** *
1135:Generated_Source\PSoC6/ADC.h **** * \brief Sets the ADC gain in counts per 10 volt for the voltage
1136:Generated_Source\PSoC6/ADC.h **** * conversion functions. This value is set by default by the reference and
1137:Generated_Source\PSoC6/ADC.h **** * input range settings. Gain is applied after offset and unit scaling.  All
1138:Generated_Source\PSoC6/ADC.h **** * CountsTo_[mV, uV, V]olts() functions use the following equation:
1139:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1140:Generated_Source\PSoC6/ADC.h **** * See CountsTo_Volts() for more about this formula.
1141:Generated_Source\PSoC6/ADC.h **** *
1142:Generated_Source\PSoC6/ADC.h **** * To set channel 0's gain based on known V_ref_mV, use:
1143:Generated_Source\PSoC6/ADC.h **** *     ADC_SetGain(0uL, 10000 * (1uL << (Resolution - 1)) / V_ref_mV);
1144:Generated_Source\PSoC6/ADC.h **** *
1145:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1146:Generated_Source\PSoC6/ADC.h **** *
1147:Generated_Source\PSoC6/ADC.h **** * \param adcGain ADC gain in counts per 10 volt.
1148:Generated_Source\PSoC6/ADC.h **** *
1149:Generated_Source\PSoC6/ADC.h **** * \return cy_en_sar_status_t
1150:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_BAD_PARAM: channel number is equal to or greater than CY_SAR_MAX_NUM_CHANNELS
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 67


1151:Generated_Source\PSoC6/ADC.h **** * - CY_SAR_SUCCESS: gain was set successfully
1152:Generated_Source\PSoC6/ADC.h **** *
1153:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1154:Generated_Source\PSoC6/ADC.h **** *
1155:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1156:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain)
1157:Generated_Source\PSoC6/ADC.h **** {
1158:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1159:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1160:Generated_Source\PSoC6/ADC.h **** 
1161:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_SetGain(chan, adcGain);
1162:Generated_Source\PSoC6/ADC.h **** }
1163:Generated_Source\PSoC6/ADC.h **** 
1164:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1165:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_Volts
1166:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1167:Generated_Source\PSoC6/ADC.h **** *
1168:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to Volts as a float32. For example, if the ADC
1169:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 0.534.
1170:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1171:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1172:Generated_Source\PSoC6/ADC.h **** *
1173:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1174:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1175:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1176:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1177:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1178:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1179:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1180:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1181:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1182:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1183:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1184:Generated_Source\PSoC6/ADC.h **** *
1185:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1186:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1187:Generated_Source\PSoC6/ADC.h **** *
1188:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1189:Generated_Source\PSoC6/ADC.h **** *
1190:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1191:Generated_Source\PSoC6/ADC.h **** *
1192:Generated_Source\PSoC6/ADC.h **** * \return Result in Volts.
1193:Generated_Source\PSoC6/ADC.h **** *
1194:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1195:Generated_Source\PSoC6/ADC.h **** *
1196:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1197:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts)
1198:Generated_Source\PSoC6/ADC.h **** {
1199:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1200:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1201:Generated_Source\PSoC6/ADC.h **** 
1202:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_Volts(ADC_SAR__HW, chan, adcCounts);
1203:Generated_Source\PSoC6/ADC.h **** }
1204:Generated_Source\PSoC6/ADC.h **** 
1205:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1206:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_mVolts
1207:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 68


1208:Generated_Source\PSoC6/ADC.h **** *
1209:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to millivolts as an int16. For example, if the ADC
1210:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534.
1211:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1212:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1213:Generated_Source\PSoC6/ADC.h **** *
1214:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1215:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1216:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1217:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1218:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1219:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1220:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1221:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1222:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1223:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
1224:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1225:Generated_Source\PSoC6/ADC.h **** *
1226:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1227:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1228:Generated_Source\PSoC6/ADC.h **** *
1229:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1230:Generated_Source\PSoC6/ADC.h **** *
1231:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1232:Generated_Source\PSoC6/ADC.h **** *
1233:Generated_Source\PSoC6/ADC.h **** * \return Result in mV.
1234:Generated_Source\PSoC6/ADC.h **** *
1235:Generated_Source\PSoC6/ADC.h **** * \sideeffect None.
1236:Generated_Source\PSoC6/ADC.h **** *
1237:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1238:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts)
1239:Generated_Source\PSoC6/ADC.h **** {
1240:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1241:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1242:Generated_Source\PSoC6/ADC.h **** 
1243:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_mVolts(ADC_SAR__HW, chan, adcCounts);
1244:Generated_Source\PSoC6/ADC.h **** }
1245:Generated_Source\PSoC6/ADC.h **** 
1246:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1247:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_CountsTo_uVolts
1248:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1249:Generated_Source\PSoC6/ADC.h **** *
1250:Generated_Source\PSoC6/ADC.h **** * \brief Converts the ADC output to microvolts as an int32. For example, if the ADC
1251:Generated_Source\PSoC6/ADC.h **** * measured 0.534 volts, the return value would be 534000.
1252:Generated_Source\PSoC6/ADC.h **** * The calculation of voltage depends on the contents of Cy_SAR_offset[],
1253:Generated_Source\PSoC6/ADC.h **** * Cy_SAR_countsPer10Volt[], and other parameters.  The equation used is:
1254:Generated_Source\PSoC6/ADC.h **** *
1255:Generated_Source\PSoC6/ADC.h **** *     V = (Counts/AvgDivider - Offset)*TEN_VOLT/Gain
1256:Generated_Source\PSoC6/ADC.h **** * -Counts = Raw Counts from SAR register
1257:Generated_Source\PSoC6/ADC.h **** * -AvgDivider = divider based on averaging mode
1258:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Sum: AvgDivider = number averaged
1259:Generated_Source\PSoC6/ADC.h **** *         Note: The divider should be a maximum of 16. If using more averages,
1260:Generated_Source\PSoC6/ADC.h **** *         pre-scale Counts by (number averaged / 16)
1261:Generated_Source\PSoC6/ADC.h **** *     -Interleaved, Sum: AvgDivider = number averaged
1262:Generated_Source\PSoC6/ADC.h **** *     -Sequential, Fixed: AvgDivider = 1
1263:Generated_Source\PSoC6/ADC.h **** * -Offset = Cy_SAR_offset[]
1264:Generated_Source\PSoC6/ADC.h **** * -TEN_VOLT = 10V constant and unit scalar.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 69


1265:Generated_Source\PSoC6/ADC.h **** * -Gain = Cy_SAR_countsPer10Volt[]
1266:Generated_Source\PSoC6/ADC.h **** *
1267:Generated_Source\PSoC6/ADC.h **** * When the Vref is based on Vdda, the value used for Vdda is set for the project
1268:Generated_Source\PSoC6/ADC.h **** * in the System tab of the DWR.
1269:Generated_Source\PSoC6/ADC.h **** *
1270:Generated_Source\PSoC6/ADC.h **** * \param chan ADC channel number.
1271:Generated_Source\PSoC6/ADC.h **** *
1272:Generated_Source\PSoC6/ADC.h **** * \param adcCounts Result from the ADC conversion.
1273:Generated_Source\PSoC6/ADC.h **** *
1274:Generated_Source\PSoC6/ADC.h **** * \return Result in microvolts.
1275:Generated_Source\PSoC6/ADC.h **** *
1276:Generated_Source\PSoC6/ADC.h **** * \sideeffect None
1277:Generated_Source\PSoC6/ADC.h **** *
1278:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1279:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts)
1280:Generated_Source\PSoC6/ADC.h **** {
1281:Generated_Source\PSoC6/ADC.h ****     /* Halt CPU in debug mode if channel is out of valid range */
1282:Generated_Source\PSoC6/ADC.h ****     CY_ASSERT(chan < ADC_allConfigs[ADC_currentConfig].numChannels);
1283:Generated_Source\PSoC6/ADC.h **** 
1284:Generated_Source\PSoC6/ADC.h ****     return Cy_SAR_CountsTo_uVolts(ADC_SAR__HW, chan, adcCounts);
1285:Generated_Source\PSoC6/ADC.h **** }
1286:Generated_Source\PSoC6/ADC.h **** 
1287:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1288:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Sleep
1289:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1290:Generated_Source\PSoC6/ADC.h **** *
1291:Generated_Source\PSoC6/ADC.h **** * \brief This is the preferred routine to prepare the component for sleep. The
1292:Generated_Source\PSoC6/ADC.h **** * ADC_Sleep() routine saves the current component state. Then it
1293:Generated_Source\PSoC6/ADC.h **** * calls the ADC_Stop() function.
1294:Generated_Source\PSoC6/ADC.h **** *
1295:Generated_Source\PSoC6/ADC.h **** * Calling this routine directly is not needed.
1296:Generated_Source\PSoC6/ADC.h **** * The ADC_DeepSleepCallbackStruct will ensure this routine
1297:Generated_Source\PSoC6/ADC.h **** * is called before the device enters Deep Sleep mode.
1298:Generated_Source\PSoC6/ADC.h **** *
1299:Generated_Source\PSoC6/ADC.h **** * \param None
1300:Generated_Source\PSoC6/ADC.h **** *
1301:Generated_Source\PSoC6/ADC.h **** * \return None
1302:Generated_Source\PSoC6/ADC.h **** *
1303:Generated_Source\PSoC6/ADC.h **** * \sideeffect If this function is called twice in the enable state of the
1304:Generated_Source\PSoC6/ADC.h **** * component, the disabled state of the component will be stored. So
1305:Generated_Source\PSoC6/ADC.h **** * ADC_Enable() and ADC_StartConvert() must be called
1306:Generated_Source\PSoC6/ADC.h **** * after ADC_Wakeup() in this case.
1307:Generated_Source\PSoC6/ADC.h **** *
1308:Generated_Source\PSoC6/ADC.h **** * \globalvars
1309:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup (W)
1310:Generated_Source\PSoC6/ADC.h **** *
1311:Generated_Source\PSoC6/ADC.h **** * \globalvars
1312:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup
1313:Generated_Source\PSoC6/ADC.h **** *
1314:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1315:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void)
1316:Generated_Source\PSoC6/ADC.h **** {
1317:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Sleep(ADC_SAR__HW);
 498              		.loc 4 1317 0
 499 00b0 2846     		mov	r0, r5
 500 00b2 FFF7FEFF 		bl	Cy_SAR_Sleep
 501              	.LVL52:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 70


 502              	.LBE67:
 503              	.LBE66:
 504              	.LBB68:
 505              	.LBB69:
 506              		.file 5 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/gpio/cy_gpio.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \file cy_gpio.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \version 1.10.1
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Provides an API declaration of the GPIO driver
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ********************************************************************************
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \copyright
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * You may use this file only in accordance with the license, terms, conditions,
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * disclaimers, and limitations in the end user license agreement accompanying
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * the software package with which this file was provided.
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio General Purpose Input Output (GPIO)
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * The GPIO driver provides an API to configure and access device Input/Output pins.
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * IO pins include all general purpose types such as GPIO, SIO, HSIO, AUXIO, and
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * their variants.
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Initialization can be performed either at the port level or by configuring the
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * individual pins. For efficient use of code space, port
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuration should be used in the field. Refer to the product device header files 
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * for the list of supported ports and pins.
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Single pin configuration is performed by using \ref Cy_GPIO_Pin_FastInit 
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   (provide specific values) or \ref Cy_GPIO_Pin_Init (provide a filled
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_pin_config_t structure).
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - An entire port can be configured using \ref Cy_GPIO_Port_Init. Provide a filled 
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   cy_stc_gpio_prt_config_t structure. The values in the structure are 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   bitfields representing the desired value for each pin in the port.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Pin configuration and management is based on the port address and pin number.
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \ref Cy_GPIO_PortToAddr function can optionally be used to calculate the port
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   address from the port number at run-time.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Once the pin/port initialization is complete, each pin can be accessed by 
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * specifying the port (GPIO_PRT_Type) and the pin (0-7) in the provided API 
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * functions.
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_configuration Configuration Considerations
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 1. Pin multiplexing is controlled through the High-Speed IO Matrix (HSIOM) selection.
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    This allows the pin to connect to signal sources/sinks throughout the device,
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    as defined by the pin HSIOM selection options (en_hsiom_sel_t).
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 2. All pins are initialized to High-Z drive mode with HSIOM connected to CPU (SW
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    control digital pin only) at Power-On-Reset(POR).
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 3. Some API functions perform read-modify-write operations on shared port
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    registers. These functions are not thread safe and care must be taken when
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *    called by the application.
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 71


  53:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Multiple pins on a port can be updated using direct port register writes with an
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * appropriate port mask. An example is shown below, highlighting the different ways of 
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * configuring Port 1 pins using,
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * 
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data register
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data set register
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * - Port output data clear register
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c Cy_GPIO_Snippet
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_more_information More Information
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_MISRA MISRA-C Compliance]
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>MISRA Rule</th>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Class (Required/Advisory)</th>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Rule Description</th>
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <th>Description of Deviation(s)</th>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>16.7</td>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A</td>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>A pointer parameter in a function prototype should be declared as pointer 
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         to const if the pointer is not used to modify the addressed object.</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>The objects pointed to by the base addresses of the GPIO port are not always modified.
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         While a const qualifier can be used in select scenarios, it brings little benefit
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         in adding this to the affected functions. </td>
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \section group_gpio_changelog Changelog
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * <table class="doxtable">
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10.1</td>
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Updated description for the functions: \ref Cy_GPIO_GetInterruptStatus, 
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         \ref Cy_GPIO_GetInterruptMask, \ref Cy_GPIO_GetInterruptStatusMasked.
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *         Minor documentation edits.
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     </td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Documentation update and clarification</td>
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.10</td>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Added input parameter validation to the API functions</td>
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   <tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>1.0</td>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td>Initial version</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *     <td></td>
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   </tr>
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * </table>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_macros Macros
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 72


 110:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_functions Functions
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_init       Initialization Functions
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_gpio       GPIO Functions
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_sio        SIO Functions
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *   \defgroup group_gpio_functions_interrupt  Port Interrupt Functions
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \}
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_data_structures Data Structures
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_enums Enumerated Types
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if !defined(CY_GPIO_H)
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_H
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include <stddef.h>
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "syslib/cy_syslib.h"
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #include "cy_device_headers.h"
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if defined(__cplusplus)
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** extern "C" {
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \addtogroup group_gpio_macros
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver major version */
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MAJOR       1
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** Driver minor version */
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRV_VERSION_MINOR       10
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** GPIO driver ID */
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_ID CY_PDL_DRV_ID(0x16u)
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Enumerations
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_enums
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * GPIO Driver error codes
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef enum 
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_SUCCESS   = 0x00u,                                    /**< Returned successful */
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_GPIO_BAD_PARAM = CY_GPIO_ID | CY_PDL_STATUS_ERROR | 0x01u, /**< Bad parameter was passed */
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_en_gpio_status_t;
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_enums */
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 73


 167:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *       Configuration Structures
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_data_structures
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a port of GPIO pins */
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct {
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t out;           /**< Initial output data for the IO pins in the port */
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrMask;      /**< Interrupt enable mask for the port interrupt */
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intrCfg;       /**< Port pin interrupt edge detection configuration */
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfg;           /**< Port pin drive modes and input buffer enable configuration */
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgIn;         /**< Port pin input buffer configuration */
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgOut;        /**< Port pin output buffer configuration */
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t cfgSIO;        /**< Port SIO pins configuration */
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel0Active;    /**< HSIOM selection for port pins 0,1,2,3 */
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t sel1Active;    /**< HSIOM selection for port pins 4,5,6,7 */
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_prt_config_t;
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** This structure is used to initialize a single GPIO pin */
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** typedef struct {
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t outVal;         /**< Pin output state */
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveMode;      /**< Drive mode */
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     en_hsiom_sel_t hsiom;   /**< HSIOM selection */
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intEdge;        /**< Interrupt Edge type */
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t intMask;        /**< Interrupt enable mask */
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtrip;          /**< Input buffer voltage trip type */
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t slewRate;       /**< Output buffer slew rate */
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t driveSel;       /**< Drive strength */
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vregEn;         /**< SIO pair output buffer mode */
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t ibufMode;       /**< SIO pair input buffer mode */
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vtripSel;       /**< SIO pair input buffer trip point */
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vrefSel;        /**< SIO pair reference voltage for input buffer trip point */
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t vohSel;         /**< SIO pair regulated voltage output level */
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** } cy_stc_gpio_pin_config_t;
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_data_structures */
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Constants
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \cond INTERNAL */
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* General Constants */
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_HALF                       (4UL)      /**< Half-way point of a GPIO port */
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_DEINIT                     (0UL)      /**< De-init value for port registers */
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* GPIO Masks */
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_MASK                     (0x1FUL)   /**< HSIOM selection mask */
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_OUT_MASK                       (0x01UL)   /**< Single pin mask for OUT register */
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IN_MASK                        (0x01UL)   /**< Single pin mask for IN register */
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_DM_MASK                    (0x0FUL)   /**< Single pin mask for drive mode in CF
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 74


 224:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_IN_VTRIP_SEL_MASK          (0x01UL)   /**< Single pin mask for VTRIP selection 
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_SLOW_MASK              (0x01UL)   /**< Single pin mask for slew rate in CFG
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_SEL_MASK         (0x03UL)   /**< Single pin mask for drive strength i
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_STATUS_MASK               (0x01UL)   /**< Single pin mask for interrupt status
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EN_MASK                   (0x01UL)   /**< Single pin mask for interrupt status
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_MASKED_MASK               (0x01UL)   /**< Single pin mask for masked interrupt
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_SET_MASK                  (0x01UL)   /**< Single pin mask for setting the inte
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_EDGE_MASK                 (0x03UL)   /**< Single pin mask for interrupt edge t
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FLT_EDGE_MASK             (0x07UL)   /**< Single pin mask for setting filtered
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* SIO Masks */
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREG_EN_MASK                   (0x01UL)   /**< Single SIO pin mask for voltage regu
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_MASK                      (0x01UL)   /**< Single SIO pin mask for input buffer
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IBUF_SHIFT                     (0x01UL)   /**< Single SIO pin shift for input buffe
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_MASK                 (0x01UL)   /**< Single SIO pin mask for the input bu
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_SEL_SHIFT                (0x02UL)   /**< Single SIO pin shift for the input b
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_MASK                  (0x03UL)   /**< Single SIO pin mask for voltage refe
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VREF_SEL_SHIFT                 (0x03UL)   /**< Single SIO pin shift for voltage ref
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_MASK                   (0x07UL)   /**< Single SIO pin mask for VOH */
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VOH_SEL_SHIFT                  (0x05UL)   /**< Single SIO pin shift for VOH */
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Special mask for SIO pin pair setting */
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_ODD_PIN_MASK               (0x00FEUL) /**< SIO pin pair selection mask */
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SIO_PIN_MASK                   (0x00FFUL) /**< SIO pin pair mask */
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Offsets */
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_HSIOM_OFFSET                   (3UL)      /**< Offset for HSIOM */
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_MODE_OFFSET              (2UL)      /**< Offset for Drive mode */
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INBUF_OFFSET                   (3UL)      /**< Offset for input buffer */
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_OUT_DRIVE_OFFSET           (16UL)     /**< Offset for drive strength */
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_CFG_OFFSET                (1UL)      /**< Offset for interrupt config */
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FILT_OFFSET               (18UL)     /**< Offset for filtered interrupt config
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_CFG_SIO_OFFSET                 (2UL)      /**< Offset for SIO config */
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation constants */
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PINS_MAX                       (8UL)      /**< Number of pins in the port */
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_PINS_MASK                  (0x0000000FFUL)
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK     (GPIO_PRT_INTR_CFG_EDGE0_SEL_Msk | \
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE1_SEL_Msk | \
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE2_SEL_Msk | \
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE3_SEL_Msk | \
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE4_SEL_Msk | \
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE5_SEL_Msk | \
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE6_SEL_Msk | \
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_EDGE7_SEL_Msk)            
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INTR_CFG_RANGE_MASK        (CY_GPIO_PRT_INTR_CFG_EDGE_SEL_MASK | \
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_EDGE_SEL_Msk | \
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 GPIO_PRT_INTR_CFG_FLT_SEL_Msk)
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_INT_MASK_MASK              (0x0000001FFUL)
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_PRT_SEL_ACTIVE_MASK            (0x1FFFFFFFUL)
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /* Parameter validation macros */
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_VALID(pinNum)           (CY_GPIO_PINS_MAX > (pinNum))
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_FILTER_PIN_VALID(pinNum)    (CY_GPIO_PINS_MAX >= (pinNum))
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VALUE_VALID(outVal)         (1UL >= (outVal))
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DM_VALID(driveMode)         (0U == ((driveMode) & (uint32_t)~CY_GPIO_CFG_DM_MASK
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 75


 281:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_HSIOM_VALID(hsiom)          (0U == ((hsiom) & (uint32_t)~CY_GPIO_HSIOM_MASK))
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INT_EDGE_VALID(intEdge)     ((CY_GPIO_INTR_DISABLE  == (intEdge)) || \
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_RISING   == (intEdge)) || \
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_FALLING  == (intEdge)) || \
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_INTR_BOTH     == (intEdge)))
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_DRIVE_SEL_VALID(driveSel)   ((CY_GPIO_DRIVE_FULL    == (driveSel)) || \
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_2     == (driveSel)) || \
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_4     == (driveSel)) || \
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_GPIO_DRIVE_1_8     == (driveSel)))
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VREF_SEL_VALID(vrefSel)     ((CY_SIO_VREF_PINREF    == (vrefSel)) || \
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_1_2V      == (vrefSel)) || \
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_A    == (vrefSel)) || \
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VREF_AMUX_B    == (vrefSel)))
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_VOH_SEL_VALID(vrefSel)      ((CY_SIO_VOH_1_00       == (vrefSel)) || \
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_25       == (vrefSel)) || \
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_49       == (vrefSel)) || \
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_1_67       == (vrefSel)) || \
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_08       == (vrefSel)) || \
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_50       == (vrefSel)) || \
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_2_78       == (vrefSel)) || \
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                                                 (CY_SIO_VOH_4_16       == (vrefSel)))
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****                    
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_PIN_BIT_VALID(pinBit)       (0U == ((pinBit) & (uint32_t)~CY_GPIO_PRT_PINS_MASK)
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_CFG_VALID(intrCfg)     (0U == ((intrCfg) & (uint32_t)~CY_GPIO_PRT_INTR_CFG_
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_INTR_MASK_VALID(intrMask)   (0U == ((intrMask) & (uint32_t)~CY_GPIO_PRT_INT_MASK
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_IS_SEL_ACT_VALID(selActive)    (0U == ((selActive) & (uint32_t)~CY_GPIO_PRT_SEL_ACT
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \endcond */
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Constants
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_macros
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveModes Pin drive mode
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive mode of the pin.
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_ANALOG                      (0x00UL) /**< \brief Analog High-Z. Input buffer off
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_IN_OFF               (0x02UL) /**< \brief Resistive Pull-Up. Input buffer
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN_IN_OFF             (0x03UL) /**< \brief Resistive Pull-Down. Input buff
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW_IN_OFF         (0x04UL) /**< \brief Open Drain, Drives Low. Input b
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH_IN_OFF        (0x05UL) /**< \brief Open Drain, Drives High. Input 
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG_IN_OFF               (0x06UL) /**< \brief Strong Drive. Input buffer off 
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN_IN_OFF          (0x07UL) /**< \brief Resistive Pull-Up/Down. Input b
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_HIGHZ                       (0x08UL) /**< \brief Digital High-Z. Input buffer on
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP                      (0x0AUL) /**< \brief Resistive Pull-Up. Input buffer
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 76


 338:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLDOWN                    (0x0BUL) /**< \brief Resistive Pull-Down. Input buff
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESLOW                (0x0CUL) /**< \brief Open Drain, Drives Low. Input b
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_OD_DRIVESHIGH               (0x0DUL) /**< \brief Open Drain, Drives High. Input 
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_STRONG                      (0x0EUL) /**< \brief Strong Drive. Input buffer on *
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DM_PULLUP_DOWN                 (0x0FUL) /**< \brief Resistive Pull-Up/Down. Input b
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_vtrip Voltage trip mode
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the voltage trip type on the pin.
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_CMOS                     (0x00UL) /**< \brief Input buffer compatible with CM
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_VTRIP_TTL                      (0x01UL) /**< \brief Input buffer compatible with TT
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_slewRate Slew Rate Mode
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the slew rate of the pin.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_FAST                      (0x00UL) /**< \brief Fast slew rate */
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_SLEW_SLOW                      (0x01UL) /**< \brief Slow slew rate */
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_driveStrength Pin drive strength
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the drive strength of the pin.
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_FULL                     (0x00UL) /**< \brief Full drive strength: Max drive 
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_2                      (0x01UL) /**< \brief 1/2 drive strength: 1/2 drive c
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_4                      (0x02UL) /**< \brief 1/4 drive strength: 1/4 drive c
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_DRIVE_1_8                      (0x03UL) /**< \brief 1/8 drive strength: 1/8 drive c
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_interruptTrigger Interrupt trigger type
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the interrupt trigger type on the pin.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_DISABLE                   (0x00UL) /**< \brief Disable the pin interrupt gener
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_RISING                    (0x01UL) /**< \brief Rising-Edge interrupt */
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_FALLING                   (0x02UL) /**< \brief Falling-Edge interrupt */
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_GPIO_INTR_BOTH                      (0x03UL) /**< \brief Both-Edge interrupt */
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVreg SIO output buffer mode
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO output buffer mode on the pin.
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_UNREGULATED                (0x00UL) /**< \brief Unregulated output buffer */
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREG_REGULATED                  (0x01UL) /**< \brief Regulated output buffer */
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 77


 395:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioIbuf SIO input buffer mode
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer mode on the pin.
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_SINGLEENDED                (0x00UL) /**< \brief Single ended input buffer */
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_IBUF_DIFFERENTIAL               (0x01UL) /**< \brief Differential input buffer */
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVtrip SIO input buffer trip-point
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the SIO input buffer trip-point of the pin.
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_CMOS                      (0x00UL) /**< \brief CMOS input buffer (single-ended
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_TTL                       (0x01UL) /**< \brief TTL input buffer (single-ended)
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_5VDDIO_0_5VOH           (0x00UL) /**< \brief 0.5xVddio or 0.5xVoh (different
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VTRIP_0_4VDDIO_1_0VREF          (0x01UL) /**< \brief 0.4xVddio or 0.4xVoh (different
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVref SIO reference voltage for input buffer trip-point
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the reference voltage of SIO input buffer trip-point.
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_PINREF                     (0x00UL) /**< \brief Vref from analog pin */
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_1_2V                       (0x01UL) /**< \brief Vref from internal 1.2V referen
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_A                     (0x02UL) /**< \brief Vref from AMUXBUS_A */
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VREF_AMUX_B                     (0x03UL) /**< \brief Vref from AMUXBUS_B */
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \defgroup group_gpio_sioVoh Regulated output voltage level (Voh) and input buffer trip-point of a
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Constants to be used for setting the Voh and input buffer trip-point of an SIO pair
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_00                        (0x00UL) /**< \brief Voh = 1 x Reference */
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_25                        (0x01UL) /**< \brief Voh = 1.25 x Reference */
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_49                        (0x02UL) /**< \brief Voh = 1.49 x Reference */
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_1_67                        (0x03UL) /**< \brief Voh = 1.67 x Reference */
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_08                        (0x04UL) /**< \brief Voh = 2.08 x Reference */
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_50                        (0x05UL) /**< \brief Voh = 2.50 x Reference */
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_2_78                        (0x06UL) /**< \brief Voh = 2.78 x Reference */
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #define CY_SIO_VOH_4_16                        (0x07UL) /**< \brief Voh = 4.16 x Reference */
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} */
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_macros */
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /***************************************
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *        Function Prototypes
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ***************************************/
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 78


 452:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Pin_Init(GPIO_PRT_Type* base, uint32_t pinNum, const cy_stc_gpio_pin_co
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** cy_en_gpio_status_t Cy_GPIO_Port_Init(GPIO_PRT_Type* base, const cy_stc_gpio_prt_config_t *config);
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Pin_FastInit(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t driveMode, uint32_t outVal
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** void Cy_GPIO_Port_Deinit(GPIO_PRT_Type* base);
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value);
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum);
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum);
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum);
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum);
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum);
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum);
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Inv(GPIO_PRT_Type* base, uint32_t pinNum);
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDrivemode(GPIO_PRT_Type* base, uint32_t pinNum);
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtrip(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtrip(GPIO_PRT_Type* base, uint32_t pinNum);
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetSlewRate(GPIO_PRT_Type* base, uint32_t pinNum);
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetDriveSel(GPIO_PRT_Type* base, uint32_t pinNum);
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_gpio */
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_sio
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVregEn(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVregEn(GPIO_PRT_Type* base, uint32_t pinNum);
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetIbufMode(GPIO_PRT_Type* base, uint32_t pinNum);
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVtripSel(GPIO_PRT_Type* base, uint32_t pinNum);
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVrefSel(GPIO_PRT_Type* base, uint32_t pinNum);
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetVohSel(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value);
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetVohSel(GPIO_PRT_Type* base, uint32_t pinNum);
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_sio */
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_interrupt
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 79


 509:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatus(GPIO_PRT_Type* base, uint32_t pinNum);
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_ClearInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptMask(GPIO_PRT_Type* base, uint32_t pinNum);
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptStatusMasked(GPIO_PRT_Type* base, uint32_t pinNum);
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetSwInterrupt(GPIO_PRT_Type* base, uint32_t pinNum);
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptEdge(GPIO_PRT_Type* base, uint32_t pinNum);
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetFilter(GPIO_PRT_Type* base, uint32_t value);
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetFilter(GPIO_PRT_Type* base);
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_0_31 != 0) || defined (CY_DOXYGEN)
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause0(void);
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_0_31 != 0) */
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_32_63 != 0) || defined (CY_DOXYGEN)
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause1(void);
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_32_63 != 0) */
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_64_95 != 0) || defined (CY_DOXYGEN)
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause2(void);
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_64_95 != 0) */
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #if (IOSS_GPIO_GPIO_PORT_NR_96_127 != 0) || defined (CY_DOXYGEN)
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_GetInterruptCause3(void);
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** #endif /* (IOSS_GPIO_GPIO_PORT_NR_96_127 != 0) */
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_interrupt */
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_init
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_SetHSIOM
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Configures the HSIOM connection to the pin.
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Connects the specified High-Speed Input Output Multiplexer (HSIOM) selection
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * to the pin.
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 80


 566:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \note 
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function modifies a port register in a read-modify-write operation. It is
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * not thread safe as the resource is shared among multiple pins on a port.
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_SetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum, en_hsiom_sel_t value)
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t tempReg;
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_Type* portAddrHSIOM;
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_HSIOM_VALID(value));
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_Type*)(HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = portAddrHSIOM->PORT_SEL0 & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_HSIOM_OFFSE
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portAddrHSIOM->PORT_SEL0 = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << CY_GPIO_HS
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         tempReg = portAddrHSIOM->PORT_SEL1 & ~(CY_GPIO_HSIOM_MASK << (pinNum << CY_GPIO_HSIOM_OFFSE
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         portAddrHSIOM->PORT_SEL1 = tempReg | ((value & CY_GPIO_HSIOM_MASK) << (pinNum << CY_GPIO_HS
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_GetHSIOM
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Returns the current HSIOM multiplexer connection to the pin.
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * HSIOM input selection
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_SetHSIOM
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE en_hsiom_sel_t Cy_GPIO_GetHSIOM(GPIO_PRT_Type* base, uint32_t pinNum)
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t returnValue;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 81


 623:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     uint32_t portNum;
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     HSIOM_PRT_Type* portAddrHSIOM;
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portNum = ((uint32_t)(base) - GPIO_BASE) / GPIO_PRT_SECTION_SIZE;
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     portAddrHSIOM = (HSIOM_PRT_Type*)(HSIOM_BASE + (HSIOM_PRT_SECTION_SIZE * portNum));
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(pinNum < CY_GPIO_PRT_HALF)
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (portAddrHSIOM->PORT_SEL0 >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY_GPIO_HSIO
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         pinNum -= CY_GPIO_PRT_HALF;
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         returnValue = (portAddrHSIOM->PORT_SEL1 >> (pinNum << CY_GPIO_HSIOM_OFFSET)) & CY_GPIO_HSIO
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (en_hsiom_sel_t)returnValue;
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_PortToAddr
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Retrieves the port address based on the given port number.
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This is a helper function to calculate the port base address when given a port
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * number. It is to be used when pin access needs to be calculated at runtime.
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param portNum
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Port number
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Base address of the port register structure
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_PortToAddr
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE GPIO_PRT_Type* Cy_GPIO_PortToAddr(uint32_t portNum)
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     GPIO_PRT_Type* base;
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(portNum < (uint32_t)IOSS_GPIO_GPIO_PORT_NR)
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****          base = (GPIO_PRT_Type *)(GPIO_BASE + (GPIO_PRT_SECTION_SIZE * portNum));
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         /* Error: Return default base address */
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base = (GPIO_PRT_Type *)(GPIO_BASE);
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base);
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 82


 680:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /** \} group_gpio_functions_init */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /**
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \addtogroup group_gpio_functions_gpio
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \{
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** */
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Read
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Reads the current logic level on the input buffer of the pin.
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register.
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Bit position 8 is the routed pin through the port glitch filter.
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level present on the pin
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Read
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_Read(GPIO_PRT_Type* base, uint32_t pinNum)
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_FILTER_PIN_VALID(pinNum));
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base->IN >> (pinNum)) & CY_GPIO_IN_MASK;
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Write
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Write a logic 0 or logic 1 state to the output driver.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param value
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level to drive out on the pin
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 83


 737:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Write
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Write(GPIO_PRT_Type* base, uint32_t pinNum, uint32_t value)
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_VALUE_VALID(value));
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     /* Thread-safe: Directly access the pin registers instead of base->OUT */
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     if(0UL == value)
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base->OUT_CLR = CY_GPIO_OUT_MASK << pinNum;
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     else
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****         base->OUT_SET = CY_GPIO_OUT_MASK << pinNum;
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     }
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_ReadOut
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Reads the current logic level on the pin output driver.
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Logic level on the pin output driver
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_ReadOut
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE uint32_t Cy_GPIO_ReadOut(GPIO_PRT_Type* base, uint32_t pinNum)
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     return (base->OUT >> pinNum) & CY_GPIO_OUT_MASK;
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Set
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Set a pin output to logic state high.
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 84


 794:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Set
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Set(GPIO_PRT_Type* base, uint32_t pinNum)
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     base->OUT_SET = CY_GPIO_OUT_MASK << pinNum;
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** /*******************************************************************************
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Function Name: Cy_GPIO_Clr
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** ****************************************************************************//**
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \brief Set a pin output to logic state Low.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * This function should be used only for software driven pins. It does not have
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * any effect on peripheral driven pins.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param base
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Pointer to the pin's port register base address
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \param pinNum
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * Position of the pin bit-field within the port register
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \return
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * void
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \funcusage
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** * \snippet gpio/gpio_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_GPIO_Clr
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** *******************************************************************************/
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** __STATIC_INLINE void Cy_GPIO_Clr(GPIO_PRT_Type* base, uint32_t pinNum)
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** {
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     CY_ASSERT_L2(CY_GPIO_IS_PIN_VALID(pinNum));
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h ****     base->OUT_CLR = CY_GPIO_OUT_MASK << pinNum;
 507              		.loc 5 841 0
 508 00b6 0125     		movs	r5, #1
 509 00b8 354B     		ldr	r3, .L37+24
 510 00ba 5D60     		str	r5, [r3, #4]
 511              	.LVL53:
 512              	.LBE69:
 513              	.LBE68:
 180:temperature_task.c ****                     temperature = (B_CONSTANT/(logf(rThermistor/R_INFINITY)))+
 514              		.loc 1 180 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 85


 515 00bc B8EEC88A 		vcvt.f32.s32	s16, s16
 516 00c0 DFED347A 		vldr.32	s15, .L37+28
 517 00c4 28EE278A 		vmul.f32	s16, s16, s15
 518 00c8 F8EEE88A 		vcvt.f32.s32	s17, s17
 519 00cc 88EE287A 		vdiv.f32	s14, s16, s17
 520              	.LVL54:
 181:temperature_task.c ****                                                                 ABSOLUTE_ZERO;
 521              		.loc 1 181 0
 522 00d0 DFED317A 		vldr.32	s15, .L37+32
 523 00d4 C7EE276A 		vdiv.f32	s13, s14, s15
 524 00d8 16EE900A 		vmov	r0, s13
 525 00dc FFF7FEFF 		bl	logf
 526              	.LVL55:
 527 00e0 9FED2E7A 		vldr.32	s14, .L37+36
 528 00e4 06EE900A 		vmov	s13, r0
 529 00e8 C7EE267A 		vdiv.f32	s15, s14, s13
 530 00ec 9FED2C7A 		vldr.32	s14, .L37+40
 531 00f0 77EEC77A 		vsub.f32	s15, s15, s14
 532 00f4 CDED067A 		vstr.32	s15, [sp, #24]
 184:temperature_task.c **** 
 533              		.loc 1 184 0
 534 00f8 2A4B     		ldr	r3, .L37+44
 535 00fa 1D70     		strb	r5, [r3]
 187:temperature_task.c ****                     {
 536              		.loc 1 187 0
 537 00fc 64B1     		cbz	r4, .L35
 191:temperature_task.c ****                         bleCommandAndData.temperatureData = temperature;
 538              		.loc 1 191 0
 539 00fe 0223     		movs	r3, #2
 540 0100 8DF80C30 		strb	r3, [sp, #12]
 192:temperature_task.c ****                         xQueueSend(bleCommandQ, &bleCommandAndData,0u);
 541              		.loc 1 192 0
 542 0104 CDED047A 		vstr.32	s15, [sp, #16]
 193:temperature_task.c ****                     }
 543              		.loc 1 193 0
 544 0108 0023     		movs	r3, #0
 545 010a 1A46     		mov	r2, r3
 546 010c 03A9     		add	r1, sp, #12
 547 010e 2648     		ldr	r0, .L37+48
 548 0110 0068     		ldr	r0, [r0]
 549 0112 FFF7FEFF 		bl	xQueueGenericSend
 550              	.LVL56:
 551 0116 81E7     		b	.L24
 552              	.L35:
 197:temperature_task.c ****                     }
 553              		.loc 1 197 0
 554 0118 0223     		movs	r3, #2
 555 011a 0022     		movs	r2, #0
 556 011c 06A9     		add	r1, sp, #24
 557 011e 2348     		ldr	r0, .L37+52
 558 0120 0068     		ldr	r0, [r0]
 559 0122 FFF7FEFF 		bl	xQueueGenericSend
 560              	.LVL57:
 561 0126 79E7     		b	.L24
 562              	.LVL58:
 563              	.L31:
 203:temperature_task.c ****                         {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 86


 564              		.loc 1 203 0
 565 0128 1E4B     		ldr	r3, .L37+44
 566 012a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 567 012c 002B     		cmp	r3, #0
 568 012e 3FF475AF 		beq	.L24
 569              	.LVL59:
 570              	.LBB70:
 571              	.LBB71:
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/gpio/cy_gpio.h **** }
 572              		.loc 5 811 0
 573 0132 0122     		movs	r2, #1
 574 0134 164B     		ldr	r3, .L37+24
 575 0136 9A60     		str	r2, [r3, #8]
 576              	.LVL60:
 577              	.LBE71:
 578              	.LBE70:
 579              	.LBB72:
 580              	.LBB73:
1318:Generated_Source\PSoC6/ADC.h **** }
1319:Generated_Source\PSoC6/ADC.h **** 
1320:Generated_Source\PSoC6/ADC.h **** 
1321:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
1322:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Wakeup
1323:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//**
1324:Generated_Source\PSoC6/ADC.h **** *
1325:Generated_Source\PSoC6/ADC.h **** * \brief This is the preferred routine to restore the component to the state when
1326:Generated_Source\PSoC6/ADC.h **** * ADC_Sleep() was called.
1327:Generated_Source\PSoC6/ADC.h **** * If the component was enabled before the ADC_Sleep()
1328:Generated_Source\PSoC6/ADC.h **** * function was called, the ADC_Wakeup() function also re-enables the
1329:Generated_Source\PSoC6/ADC.h **** * component.
1330:Generated_Source\PSoC6/ADC.h **** *
1331:Generated_Source\PSoC6/ADC.h **** * Calling this routine directly is not needed.
1332:Generated_Source\PSoC6/ADC.h **** * The ADC_DeepSleepCallbackStruct will ensure this routine
1333:Generated_Source\PSoC6/ADC.h **** * is called after the device wakes up from Deep Sleep mode.
1334:Generated_Source\PSoC6/ADC.h **** *
1335:Generated_Source\PSoC6/ADC.h **** * \param None
1336:Generated_Source\PSoC6/ADC.h **** *
1337:Generated_Source\PSoC6/ADC.h **** * \return None
1338:Generated_Source\PSoC6/ADC.h **** *
1339:Generated_Source\PSoC6/ADC.h **** * \sideeffect
1340:Generated_Source\PSoC6/ADC.h **** * Calling this function without previously calling ADC_Sleep() may lead to
1341:Generated_Source\PSoC6/ADC.h **** * unpredictable results.
1342:Generated_Source\PSoC6/ADC.h **** *
1343:Generated_Source\PSoC6/ADC.h **** * \globalvars
1344:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup (R)
1345:Generated_Source\PSoC6/ADC.h **** *
1346:Generated_Source\PSoC6/ADC.h **** * \globalvars
1347:Generated_Source\PSoC6/ADC.h **** *  \ref ADC_backup
1348:Generated_Source\PSoC6/ADC.h **** *
1349:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
1350:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void)
1351:Generated_Source\PSoC6/ADC.h **** {
1352:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Wakeup(ADC_SAR__HW);
 581              		.loc 4 1352 0
 582 0138 1448     		ldr	r0, .L37+20
 583              	.LVL61:
 584 013a FFF7FEFF 		bl	Cy_SAR_Wakeup
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 87


 585              	.LVL62:
 586              	.LBE73:
 587              	.LBE72:
 209:temperature_task.c ****                             processingComplete = false;
 588              		.loc 1 209 0
 589 013e FFF7FEFF 		bl	ADC_StartConvert
 590              	.LVL63:
 210:temperature_task.c ****                         }    
 591              		.loc 1 210 0
 592 0142 0022     		movs	r2, #0
 593 0144 174B     		ldr	r3, .L37+44
 594 0146 1A70     		strb	r2, [r3]
 595 0148 68E7     		b	.L24
 596              	.LVL64:
 597              	.L26:
 598              	.LBB74:
 599              	.LBB75:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 600              		.loc 2 144 0
 601 014a 194A     		ldr	r2, .L37+56
 602 014c 0192     		str	r2, [sp, #4]
 603 014e 0293     		str	r3, [sp, #8]
 604              		.loc 2 146 0
 605 0150 0023     		movs	r3, #0
 606              	.LVL65:
 607 0152 1A46     		mov	r2, r3
 608 0154 01A9     		add	r1, sp, #4
 609 0156 1748     		ldr	r0, .L37+60
 610              	.LVL66:
 611 0158 0068     		ldr	r0, [r0]
 612 015a FFF7FEFF 		bl	xQueueGenericSend
 613              	.LVL67:
 614 015e 5DE7     		b	.L24
 615              	.LVL68:
 616              	.L25:
 617              	.LBE75:
 618              	.LBE74:
 619              	.LBB76:
 620              	.LBB77:
 144:uart_debug.h  **** 										.errorCode     = errCode};
 621              		.loc 2 144 0
 622 0160 154B     		ldr	r3, .L37+64
 623 0162 0193     		str	r3, [sp, #4]
 624 0164 0022     		movs	r2, #0
 625 0166 0292     		str	r2, [sp, #8]
 626              		.loc 2 146 0
 627 0168 1346     		mov	r3, r2
 628 016a 01A9     		add	r1, sp, #4
 629 016c 1148     		ldr	r0, .L37+60
 630              	.LVL69:
 631 016e 0068     		ldr	r0, [r0]
 632 0170 FFF7FEFF 		bl	xQueueGenericSend
 633              	.LVL70:
 634 0174 52E7     		b	.L24
 635              	.L38:
 636 0176 00BF     		.align	2
 637              	.L37:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 88


 638 0178 00000000 		.word	isrADC
 639 017c 00000000 		.word	temperatureCommandQ
 640 0180 00000000 		.word	ADC_currentConfig
 641 0184 00000000 		.word	ADC_allConfigs
 642 0188 10010000 		.word	.LC6
 643 018c 00001D41 		.word	1092419584
 644 0190 00053240 		.word	1077019904
 645 0194 00401C46 		.word	1176256512
 646 0198 F54BF43D 		.word	1039420405
 647 019c 00405345 		.word	1163083776
 648 01a0 33938843 		.word	1133024051
 649 01a4 00000000 		.word	.LANCHOR0
 650 01a8 00000000 		.word	bleCommandQ
 651 01ac 00000000 		.word	temperatureDataQ
 652 01b0 30010000 		.word	.LC7
 653 01b4 00000000 		.word	debugMessageQ
 654 01b8 70010000 		.word	.LC8
 655              	.LBE77:
 656              	.LBE76:
 657              		.cfi_endproc
 658              	.LFE714:
 659              		.size	Task_Temperature, .-Task_Temperature
 660              		.comm	xTimer_Temperature,4,4
 661              		.comm	temperatureDataQ,4,4
 662              		.comm	temperatureCommandQ,4,4
 663              		.section	.rodata.str1.4,"aMS",%progbits,1
 664              		.align	2
 665              	.LC0:
 666 0000 4661696C 		.ascii	"Failure! : Temperature  - Sending data to temperatu"
 666      75726521 
 666      203A2054 
 666      656D7065 
 666      72617475 
 667 0033 72657175 		.ascii	"requeue\000"
 667      65756500 
 668 003b 00       		.space	1
 669              	.LC1:
 670 003c 54656D70 		.ascii	"Temperature Timer\000"
 670      65726174 
 670      75726520 
 670      54696D65 
 670      7200
 671 004e 0000     		.space	2
 672              	.LC2:
 673 0050 4661696C 		.ascii	"Failure! : Temperature  - Timer initialization\000"
 673      75726521 
 673      203A2054 
 673      656D7065 
 673      72617475 
 674 007f 00       		.space	1
 675              	.LC3:
 676 0080 4661696C 		.ascii	"Failure! : Temperature  - Timer creation\000"
 676      75726521 
 676      203A2054 
 676      656D7065 
 676      72617475 
 677 00a9 000000   		.space	3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 89


 678              	.LC4:
 679 00ac 4661696C 		.ascii	"Failure! : Temperature - Timer update \000"
 679      75726521 
 679      203A2054 
 679      656D7065 
 679      72617475 
 680 00d3 00       		.space	1
 681              	.LC5:
 682 00d4 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 682      72617465 
 682      645F536F 
 682      75726365 
 682      5C50536F 
 683 0104 722F6379 		.ascii	"r/cy_sar.h\000"
 683      5F736172 
 683      2E6800
 684 010f 00       		.space	1
 685              	.LC6:
 686 0110 47656E65 		.ascii	"Generated_Source\\PSoC6/ADC.h\000"
 686      72617465 
 686      645F536F 
 686      75726365 
 686      5C50536F 
 687 012d 000000   		.space	3
 688              	.LC7:
 689 0130 4572726F 		.ascii	"Error!   : Temperature - Invalid command received ."
 689      72212020 
 689      203A2054 
 689      656D7065 
 689      72617475 
 690 0163 4572726F 		.ascii	"Error Code:\000"
 690      7220436F 
 690      64653A00 
 691 016f 00       		.space	1
 692              	.LC8:
 693 0170 5761726E 		.ascii	"Warning! : Temperature - Task Timed out \000"
 693      696E6721 
 693      203A2054 
 693      656D7065 
 693      72617475 
 694              		.bss
 695              		.set	.LANCHOR0,. + 0
 696              		.type	processingComplete, %object
 697              		.size	processingComplete, 1
 698              	processingComplete:
 699 0000 00       		.space	1
 700              		.text
 701              	.Letext0:
 702              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 703              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 704              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_gpio.h"
 705              		.file 9 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_sar.h"
 706              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 707              		.file 11 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/rtc/cy_rtc.h"
 708              		.file 12 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/tcpwm/cy_tcpwm_counter.h"
 709              		.file 13 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 710              		.file 14 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 90


 711              		.file 15 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 712              		.file 16 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 713              		.file 17 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 714              		.file 18 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_dis.h"
 715              		.file 19 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_hts.h"
 716              		.file 20 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_event_handler.h"
 717              		.file 21 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
 718              		.file 22 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/queue.h"
 719              		.file 23 "temperature_task.h"
 720              		.file 24 "ble_task.h"
 721              		.file 25 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 722              		.file 26 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 723              		.file 27 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 724              		.file 28 "Generated_Source\\PSoC6/DEBUG_UART.h"
 725              		.file 29 "Generated_Source\\PSoC6/Counter_ms.h"
 726              		.file 30 "Generated_Source\\PSoC6/Timer_PPG.h"
 727              		.file 31 "Generated_Source\\PSoC6/Timer_IMU.h"
 728              		.file 32 "Generated_Source\\PSoC6/RTC.h"
 729              		.file 33 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 730              		.file 34 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 731              		.section	.debug_info,"",%progbits
 732              	.Ldebug_info0:
 733 0000 911A0000 		.4byte	0x1a91
 734 0004 0400     		.2byte	0x4
 735 0006 00000000 		.4byte	.Ldebug_abbrev0
 736 000a 04       		.byte	0x4
 737 000b 01       		.uleb128 0x1
 738 000c F0050000 		.4byte	.LASF417
 739 0010 0C       		.byte	0xc
 740 0011 241E0000 		.4byte	.LASF418
 741 0015 73130000 		.4byte	.LASF419
 742 0019 00000000 		.4byte	.Ldebug_ranges0+0
 743 001d 00000000 		.4byte	0
 744 0021 00000000 		.4byte	.Ldebug_line0
 745 0025 02       		.uleb128 0x2
 746 0026 04       		.byte	0x4
 747 0027 04       		.byte	0x4
 748 0028 A70D0000 		.4byte	.LASF0
 749 002c 03       		.uleb128 0x3
 750 002d 04       		.byte	0x4
 751 002e 05       		.byte	0x5
 752 002f 696E7400 		.ascii	"int\000"
 753 0033 02       		.uleb128 0x2
 754 0034 04       		.byte	0x4
 755 0035 07       		.byte	0x7
 756 0036 DF020000 		.4byte	.LASF1
 757 003a 02       		.uleb128 0x2
 758 003b 08       		.byte	0x8
 759 003c 05       		.byte	0x5
 760 003d 40120000 		.4byte	.LASF2
 761 0041 02       		.uleb128 0x2
 762 0042 08       		.byte	0x8
 763 0043 04       		.byte	0x4
 764 0044 1E170000 		.4byte	.LASF3
 765 0048 02       		.uleb128 0x2
 766 0049 01       		.byte	0x1
 767 004a 06       		.byte	0x6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 91


 768 004b B4200000 		.4byte	.LASF4
 769 004f 04       		.uleb128 0x4
 770 0050 F31B0000 		.4byte	.LASF6
 771 0054 06       		.byte	0x6
 772 0055 1D       		.byte	0x1d
 773 0056 5A000000 		.4byte	0x5a
 774 005a 02       		.uleb128 0x2
 775 005b 01       		.byte	0x1
 776 005c 08       		.byte	0x8
 777 005d 17180000 		.4byte	.LASF5
 778 0061 04       		.uleb128 0x4
 779 0062 69130000 		.4byte	.LASF7
 780 0066 06       		.byte	0x6
 781 0067 29       		.byte	0x29
 782 0068 6C000000 		.4byte	0x6c
 783 006c 02       		.uleb128 0x2
 784 006d 02       		.byte	0x2
 785 006e 05       		.byte	0x5
 786 006f EF000000 		.4byte	.LASF8
 787 0073 02       		.uleb128 0x2
 788 0074 02       		.byte	0x2
 789 0075 07       		.byte	0x7
 790 0076 C7200000 		.4byte	.LASF9
 791 007a 04       		.uleb128 0x4
 792 007b 9C030000 		.4byte	.LASF10
 793 007f 06       		.byte	0x6
 794 0080 3F       		.byte	0x3f
 795 0081 85000000 		.4byte	0x85
 796 0085 02       		.uleb128 0x2
 797 0086 04       		.byte	0x4
 798 0087 05       		.byte	0x5
 799 0088 D1190000 		.4byte	.LASF11
 800 008c 04       		.uleb128 0x4
 801 008d 801E0000 		.4byte	.LASF12
 802 0091 06       		.byte	0x6
 803 0092 41       		.byte	0x41
 804 0093 97000000 		.4byte	0x97
 805 0097 02       		.uleb128 0x2
 806 0098 04       		.byte	0x4
 807 0099 07       		.byte	0x7
 808 009a 2D1D0000 		.4byte	.LASF13
 809 009e 02       		.uleb128 0x2
 810 009f 08       		.byte	0x8
 811 00a0 07       		.byte	0x7
 812 00a1 E3090000 		.4byte	.LASF14
 813 00a5 02       		.uleb128 0x2
 814 00a6 04       		.byte	0x4
 815 00a7 07       		.byte	0x7
 816 00a8 241D0000 		.4byte	.LASF15
 817 00ac 05       		.uleb128 0x5
 818 00ad 04       		.byte	0x4
 819 00ae 06       		.uleb128 0x6
 820 00af 04       		.byte	0x4
 821 00b0 B4000000 		.4byte	0xb4
 822 00b4 02       		.uleb128 0x2
 823 00b5 01       		.byte	0x1
 824 00b6 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 92


 825 00b7 0B0F0000 		.4byte	.LASF16
 826 00bb 02       		.uleb128 0x2
 827 00bc 08       		.byte	0x8
 828 00bd 04       		.byte	0x4
 829 00be 570C0000 		.4byte	.LASF17
 830 00c2 04       		.uleb128 0x4
 831 00c3 B6100000 		.4byte	.LASF18
 832 00c7 07       		.byte	0x7
 833 00c8 18       		.byte	0x18
 834 00c9 4F000000 		.4byte	0x4f
 835 00cd 04       		.uleb128 0x4
 836 00ce 85090000 		.4byte	.LASF19
 837 00d2 07       		.byte	0x7
 838 00d3 20       		.byte	0x20
 839 00d4 61000000 		.4byte	0x61
 840 00d8 04       		.uleb128 0x4
 841 00d9 841D0000 		.4byte	.LASF20
 842 00dd 07       		.byte	0x7
 843 00de 2C       		.byte	0x2c
 844 00df 7A000000 		.4byte	0x7a
 845 00e3 04       		.uleb128 0x4
 846 00e4 1C080000 		.4byte	.LASF21
 847 00e8 07       		.byte	0x7
 848 00e9 30       		.byte	0x30
 849 00ea 8C000000 		.4byte	0x8c
 850 00ee 07       		.uleb128 0x7
 851 00ef E3000000 		.4byte	0xe3
 852 00f3 08       		.uleb128 0x8
 853 00f4 EE000000 		.4byte	0xee
 854 00f8 09       		.uleb128 0x9
 855 00f9 F3000000 		.4byte	0xf3
 856 00fd 08010000 		.4byte	0x108
 857 0101 0A       		.uleb128 0xa
 858 0102 A5000000 		.4byte	0xa5
 859 0106 01       		.byte	0x1
 860 0107 00       		.byte	0
 861 0108 09       		.uleb128 0x9
 862 0109 EE000000 		.4byte	0xee
 863 010d 18010000 		.4byte	0x118
 864 0111 0A       		.uleb128 0xa
 865 0112 A5000000 		.4byte	0xa5
 866 0116 0F       		.byte	0xf
 867 0117 00       		.byte	0
 868 0118 09       		.uleb128 0x9
 869 0119 F3000000 		.4byte	0xf3
 870 011d 28010000 		.4byte	0x128
 871 0121 0A       		.uleb128 0xa
 872 0122 A5000000 		.4byte	0xa5
 873 0126 02       		.byte	0x2
 874 0127 00       		.byte	0
 875 0128 09       		.uleb128 0x9
 876 0129 F3000000 		.4byte	0xf3
 877 012d 38010000 		.4byte	0x138
 878 0131 0A       		.uleb128 0xa
 879 0132 A5000000 		.4byte	0xa5
 880 0136 0F       		.byte	0xf
 881 0137 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 93


 882 0138 09       		.uleb128 0x9
 883 0139 F3000000 		.4byte	0xf3
 884 013d 48010000 		.4byte	0x148
 885 0141 0A       		.uleb128 0xa
 886 0142 A5000000 		.4byte	0xa5
 887 0146 0E       		.byte	0xe
 888 0147 00       		.byte	0
 889 0148 0B       		.uleb128 0xb
 890 0149 80       		.byte	0x80
 891 014a 08       		.byte	0x8
 892 014b 22       		.byte	0x22
 893 014c 1C020000 		.4byte	0x21c
 894 0150 0C       		.uleb128 0xc
 895 0151 4F555400 		.ascii	"OUT\000"
 896 0155 08       		.byte	0x8
 897 0156 23       		.byte	0x23
 898 0157 EE000000 		.4byte	0xee
 899 015b 00       		.byte	0
 900 015c 0D       		.uleb128 0xd
 901 015d 5C090000 		.4byte	.LASF22
 902 0161 08       		.byte	0x8
 903 0162 24       		.byte	0x24
 904 0163 EE000000 		.4byte	0xee
 905 0167 04       		.byte	0x4
 906 0168 0D       		.uleb128 0xd
 907 0169 B4040000 		.4byte	.LASF23
 908 016d 08       		.byte	0x8
 909 016e 25       		.byte	0x25
 910 016f EE000000 		.4byte	0xee
 911 0173 08       		.byte	0x8
 912 0174 0D       		.uleb128 0xd
 913 0175 EB1B0000 		.4byte	.LASF24
 914 0179 08       		.byte	0x8
 915 017a 26       		.byte	0x26
 916 017b EE000000 		.4byte	0xee
 917 017f 0C       		.byte	0xc
 918 0180 0C       		.uleb128 0xc
 919 0181 494E00   		.ascii	"IN\000"
 920 0184 08       		.byte	0x8
 921 0185 27       		.byte	0x27
 922 0186 F3000000 		.4byte	0xf3
 923 018a 10       		.byte	0x10
 924 018b 0D       		.uleb128 0xd
 925 018c CA0D0000 		.4byte	.LASF25
 926 0190 08       		.byte	0x8
 927 0191 28       		.byte	0x28
 928 0192 EE000000 		.4byte	0xee
 929 0196 14       		.byte	0x14
 930 0197 0D       		.uleb128 0xd
 931 0198 1C0E0000 		.4byte	.LASF26
 932 019c 08       		.byte	0x8
 933 019d 29       		.byte	0x29
 934 019e EE000000 		.4byte	0xee
 935 01a2 18       		.byte	0x18
 936 01a3 0D       		.uleb128 0xd
 937 01a4 DB1C0000 		.4byte	.LASF27
 938 01a8 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 94


 939 01a9 2A       		.byte	0x2a
 940 01aa F3000000 		.4byte	0xf3
 941 01ae 1C       		.byte	0x1c
 942 01af 0D       		.uleb128 0xd
 943 01b0 2A050000 		.4byte	.LASF28
 944 01b4 08       		.byte	0x8
 945 01b5 2B       		.byte	0x2b
 946 01b6 EE000000 		.4byte	0xee
 947 01ba 20       		.byte	0x20
 948 01bb 0D       		.uleb128 0xd
 949 01bc D51E0000 		.4byte	.LASF29
 950 01c0 08       		.byte	0x8
 951 01c1 2C       		.byte	0x2c
 952 01c2 EE000000 		.4byte	0xee
 953 01c6 24       		.byte	0x24
 954 01c7 0C       		.uleb128 0xc
 955 01c8 43464700 		.ascii	"CFG\000"
 956 01cc 08       		.byte	0x8
 957 01cd 2D       		.byte	0x2d
 958 01ce EE000000 		.4byte	0xee
 959 01d2 28       		.byte	0x28
 960 01d3 0D       		.uleb128 0xd
 961 01d4 8E070000 		.4byte	.LASF30
 962 01d8 08       		.byte	0x8
 963 01d9 2E       		.byte	0x2e
 964 01da EE000000 		.4byte	0xee
 965 01de 2C       		.byte	0x2c
 966 01df 0D       		.uleb128 0xd
 967 01e0 660B0000 		.4byte	.LASF31
 968 01e4 08       		.byte	0x8
 969 01e5 2F       		.byte	0x2f
 970 01e6 EE000000 		.4byte	0xee
 971 01ea 30       		.byte	0x30
 972 01eb 0D       		.uleb128 0xd
 973 01ec CA210000 		.4byte	.LASF32
 974 01f0 08       		.byte	0x8
 975 01f1 30       		.byte	0x30
 976 01f2 EE000000 		.4byte	0xee
 977 01f6 34       		.byte	0x34
 978 01f7 0D       		.uleb128 0xd
 979 01f8 26000000 		.4byte	.LASF33
 980 01fc 08       		.byte	0x8
 981 01fd 31       		.byte	0x31
 982 01fe F3000000 		.4byte	0xf3
 983 0202 38       		.byte	0x38
 984 0203 0D       		.uleb128 0xd
 985 0204 301B0000 		.4byte	.LASF34
 986 0208 08       		.byte	0x8
 987 0209 32       		.byte	0x32
 988 020a EE000000 		.4byte	0xee
 989 020e 3C       		.byte	0x3c
 990 020f 0D       		.uleb128 0xd
 991 0210 09190000 		.4byte	.LASF35
 992 0214 08       		.byte	0x8
 993 0215 33       		.byte	0x33
 994 0216 21020000 		.4byte	0x221
 995 021a 40       		.byte	0x40
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 95


 996 021b 00       		.byte	0
 997 021c 07       		.uleb128 0x7
 998 021d 28010000 		.4byte	0x128
 999 0221 08       		.uleb128 0x8
 1000 0222 1C020000 		.4byte	0x21c
 1001 0226 04       		.uleb128 0x4
 1002 0227 CF0D0000 		.4byte	.LASF36
 1003 022b 08       		.byte	0x8
 1004 022c 34       		.byte	0x34
 1005 022d 48010000 		.4byte	0x148
 1006 0231 0E       		.uleb128 0xe
 1007 0232 2440     		.2byte	0x4024
 1008 0234 08       		.byte	0x8
 1009 0235 39       		.byte	0x39
 1010 0236 BC020000 		.4byte	0x2bc
 1011 023a 0C       		.uleb128 0xc
 1012 023b 50525400 		.ascii	"PRT\000"
 1013 023f 08       		.byte	0x8
 1014 0240 3A       		.byte	0x3a
 1015 0241 BC020000 		.4byte	0x2bc
 1016 0245 00       		.byte	0
 1017 0246 0F       		.uleb128 0xf
 1018 0247 3A000000 		.4byte	.LASF37
 1019 024b 08       		.byte	0x8
 1020 024c 3B       		.byte	0x3b
 1021 024d F3000000 		.4byte	0xf3
 1022 0251 0040     		.2byte	0x4000
 1023 0253 0F       		.uleb128 0xf
 1024 0254 46000000 		.4byte	.LASF38
 1025 0258 08       		.byte	0x8
 1026 0259 3C       		.byte	0x3c
 1027 025a F3000000 		.4byte	0xf3
 1028 025e 0440     		.2byte	0x4004
 1029 0260 0F       		.uleb128 0xf
 1030 0261 01110000 		.4byte	.LASF39
 1031 0265 08       		.byte	0x8
 1032 0266 3D       		.byte	0x3d
 1033 0267 F3000000 		.4byte	0xf3
 1034 026b 0840     		.2byte	0x4008
 1035 026d 0F       		.uleb128 0xf
 1036 026e 0D110000 		.4byte	.LASF40
 1037 0272 08       		.byte	0x8
 1038 0273 3E       		.byte	0x3e
 1039 0274 F3000000 		.4byte	0xf3
 1040 0278 0C40     		.2byte	0x400c
 1041 027a 0F       		.uleb128 0xf
 1042 027b 2F000000 		.4byte	.LASF41
 1043 027f 08       		.byte	0x8
 1044 0280 3F       		.byte	0x3f
 1045 0281 F3000000 		.4byte	0xf3
 1046 0285 1040     		.2byte	0x4010
 1047 0287 0F       		.uleb128 0xf
 1048 0288 CC0C0000 		.4byte	.LASF42
 1049 028c 08       		.byte	0x8
 1050 028d 40       		.byte	0x40
 1051 028e EE000000 		.4byte	0xee
 1052 0292 1440     		.2byte	0x4014
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 96


 1053 0294 0F       		.uleb128 0xf
 1054 0295 A6200000 		.4byte	.LASF43
 1055 0299 08       		.byte	0x8
 1056 029a 41       		.byte	0x41
 1057 029b EE000000 		.4byte	0xee
 1058 029f 1840     		.2byte	0x4018
 1059 02a1 0F       		.uleb128 0xf
 1060 02a2 1E140000 		.4byte	.LASF44
 1061 02a6 08       		.byte	0x8
 1062 02a7 42       		.byte	0x42
 1063 02a8 F3000000 		.4byte	0xf3
 1064 02ac 1C40     		.2byte	0x401c
 1065 02ae 0F       		.uleb128 0xf
 1066 02af 5D170000 		.4byte	.LASF45
 1067 02b3 08       		.byte	0x8
 1068 02b4 43       		.byte	0x43
 1069 02b5 EE000000 		.4byte	0xee
 1070 02b9 2040     		.2byte	0x4020
 1071 02bb 00       		.byte	0
 1072 02bc 09       		.uleb128 0x9
 1073 02bd 26020000 		.4byte	0x226
 1074 02c1 CC020000 		.4byte	0x2cc
 1075 02c5 0A       		.uleb128 0xa
 1076 02c6 A5000000 		.4byte	0xa5
 1077 02ca 7F       		.byte	0x7f
 1078 02cb 00       		.byte	0
 1079 02cc 04       		.uleb128 0x4
 1080 02cd A91E0000 		.4byte	.LASF46
 1081 02d1 08       		.byte	0x8
 1082 02d2 44       		.byte	0x44
 1083 02d3 31020000 		.4byte	0x231
 1084 02d7 0E       		.uleb128 0xe
 1085 02d8 080F     		.2byte	0xf08
 1086 02da 09       		.byte	0x9
 1087 02db 21       		.byte	0x21
 1088 02dc 5F050000 		.4byte	0x55f
 1089 02e0 0D       		.uleb128 0xd
 1090 02e1 CD220000 		.4byte	.LASF47
 1091 02e5 09       		.byte	0x9
 1092 02e6 22       		.byte	0x22
 1093 02e7 EE000000 		.4byte	0xee
 1094 02eb 00       		.byte	0
 1095 02ec 0D       		.uleb128 0xd
 1096 02ed BD140000 		.4byte	.LASF48
 1097 02f1 09       		.byte	0x9
 1098 02f2 23       		.byte	0x23
 1099 02f3 EE000000 		.4byte	0xee
 1100 02f7 04       		.byte	0x4
 1101 02f8 0D       		.uleb128 0xd
 1102 02f9 26000000 		.4byte	.LASF33
 1103 02fd 09       		.byte	0x9
 1104 02fe 24       		.byte	0x24
 1105 02ff 64050000 		.4byte	0x564
 1106 0303 08       		.byte	0x8
 1107 0304 0D       		.uleb128 0xd
 1108 0305 F5040000 		.4byte	.LASF49
 1109 0309 09       		.byte	0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 97


 1110 030a 25       		.byte	0x25
 1111 030b EE000000 		.4byte	0xee
 1112 030f 10       		.byte	0x10
 1113 0310 0D       		.uleb128 0xd
 1114 0311 410A0000 		.4byte	.LASF50
 1115 0315 09       		.byte	0x9
 1116 0316 26       		.byte	0x26
 1117 0317 EE000000 		.4byte	0xee
 1118 031b 14       		.byte	0x14
 1119 031c 0D       		.uleb128 0xd
 1120 031d 8C1A0000 		.4byte	.LASF51
 1121 0321 09       		.byte	0x9
 1122 0322 27       		.byte	0x27
 1123 0323 EE000000 		.4byte	0xee
 1124 0327 18       		.byte	0x18
 1125 0328 0D       		.uleb128 0xd
 1126 0329 9F0C0000 		.4byte	.LASF52
 1127 032d 09       		.byte	0x9
 1128 032e 28       		.byte	0x28
 1129 032f EE000000 		.4byte	0xee
 1130 0333 1C       		.byte	0x1c
 1131 0334 0D       		.uleb128 0xd
 1132 0335 E8010000 		.4byte	.LASF53
 1133 0339 09       		.byte	0x9
 1134 033a 29       		.byte	0x29
 1135 033b EE000000 		.4byte	0xee
 1136 033f 20       		.byte	0x20
 1137 0340 0D       		.uleb128 0xd
 1138 0341 260E0000 		.4byte	.LASF54
 1139 0345 09       		.byte	0x9
 1140 0346 2A       		.byte	0x2a
 1141 0347 EE000000 		.4byte	0xee
 1142 034b 24       		.byte	0x24
 1143 034c 0D       		.uleb128 0xd
 1144 034d 09190000 		.4byte	.LASF35
 1145 0351 09       		.byte	0x9
 1146 0352 2B       		.byte	0x2b
 1147 0353 7E050000 		.4byte	0x57e
 1148 0357 28       		.byte	0x28
 1149 0358 0D       		.uleb128 0xd
 1150 0359 DE210000 		.4byte	.LASF55
 1151 035d 09       		.byte	0x9
 1152 035e 2C       		.byte	0x2c
 1153 035f 83050000 		.4byte	0x583
 1154 0363 80       		.byte	0x80
 1155 0364 0D       		.uleb128 0xd
 1156 0365 13190000 		.4byte	.LASF56
 1157 0369 09       		.byte	0x9
 1158 036a 2D       		.byte	0x2d
 1159 036b 8D050000 		.4byte	0x58d
 1160 036f C0       		.byte	0xc0
 1161 0370 0F       		.uleb128 0xf
 1162 0371 EB1A0000 		.4byte	.LASF57
 1163 0375 09       		.byte	0x9
 1164 0376 2E       		.byte	0x2e
 1165 0377 97050000 		.4byte	0x597
 1166 037b 0001     		.2byte	0x100
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 98


 1167 037d 0F       		.uleb128 0xf
 1168 037e 1D190000 		.4byte	.LASF58
 1169 0382 09       		.byte	0x9
 1170 0383 2F       		.byte	0x2f
 1171 0384 A1050000 		.4byte	0x5a1
 1172 0388 4001     		.2byte	0x140
 1173 038a 0F       		.uleb128 0xf
 1174 038b 52140000 		.4byte	.LASF59
 1175 038f 09       		.byte	0x9
 1176 0390 30       		.byte	0x30
 1177 0391 AB050000 		.4byte	0x5ab
 1178 0395 8001     		.2byte	0x180
 1179 0397 0F       		.uleb128 0xf
 1180 0398 27190000 		.4byte	.LASF60
 1181 039c 09       		.byte	0x9
 1182 039d 31       		.byte	0x31
 1183 039e B5050000 		.4byte	0x5b5
 1184 03a2 C001     		.2byte	0x1c0
 1185 03a4 0F       		.uleb128 0xf
 1186 03a5 7D020000 		.4byte	.LASF61
 1187 03a9 09       		.byte	0x9
 1188 03aa 32       		.byte	0x32
 1189 03ab F3000000 		.4byte	0xf3
 1190 03af 0002     		.2byte	0x200
 1191 03b1 0F       		.uleb128 0xf
 1192 03b2 D91D0000 		.4byte	.LASF62
 1193 03b6 09       		.byte	0x9
 1194 03b7 33       		.byte	0x33
 1195 03b8 F3000000 		.4byte	0xf3
 1196 03bc 0402     		.2byte	0x204
 1197 03be 0F       		.uleb128 0xf
 1198 03bf E1030000 		.4byte	.LASF63
 1199 03c3 09       		.byte	0x9
 1200 03c4 34       		.byte	0x34
 1201 03c5 F3000000 		.4byte	0xf3
 1202 03c9 0802     		.2byte	0x208
 1203 03cb 0F       		.uleb128 0xf
 1204 03cc 00040000 		.4byte	.LASF64
 1205 03d0 09       		.byte	0x9
 1206 03d1 35       		.byte	0x35
 1207 03d2 F3000000 		.4byte	0xf3
 1208 03d6 0C02     		.2byte	0x20c
 1209 03d8 0F       		.uleb128 0xf
 1210 03d9 CA0D0000 		.4byte	.LASF25
 1211 03dd 09       		.byte	0x9
 1212 03de 36       		.byte	0x36
 1213 03df EE000000 		.4byte	0xee
 1214 03e3 1002     		.2byte	0x210
 1215 03e5 0F       		.uleb128 0xf
 1216 03e6 2A050000 		.4byte	.LASF28
 1217 03ea 09       		.byte	0x9
 1218 03eb 37       		.byte	0x37
 1219 03ec EE000000 		.4byte	0xee
 1220 03f0 1402     		.2byte	0x214
 1221 03f2 0F       		.uleb128 0xf
 1222 03f3 1C0E0000 		.4byte	.LASF26
 1223 03f7 09       		.byte	0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 99


 1224 03f8 38       		.byte	0x38
 1225 03f9 EE000000 		.4byte	0xee
 1226 03fd 1802     		.2byte	0x218
 1227 03ff 0F       		.uleb128 0xf
 1228 0400 DB1C0000 		.4byte	.LASF27
 1229 0404 09       		.byte	0x9
 1230 0405 39       		.byte	0x39
 1231 0406 F3000000 		.4byte	0xf3
 1232 040a 1C02     		.2byte	0x21c
 1233 040c 0F       		.uleb128 0xf
 1234 040d E7040000 		.4byte	.LASF65
 1235 0411 09       		.byte	0x9
 1236 0412 3A       		.byte	0x3a
 1237 0413 EE000000 		.4byte	0xee
 1238 0417 2002     		.2byte	0x220
 1239 0419 0F       		.uleb128 0xf
 1240 041a 640C0000 		.4byte	.LASF66
 1241 041e 09       		.byte	0x9
 1242 041f 3B       		.byte	0x3b
 1243 0420 EE000000 		.4byte	0xee
 1244 0424 2402     		.2byte	0x224
 1245 0426 0F       		.uleb128 0xf
 1246 0427 341F0000 		.4byte	.LASF67
 1247 042b 09       		.byte	0x9
 1248 042c 3C       		.byte	0x3c
 1249 042d EE000000 		.4byte	0xee
 1250 0431 2802     		.2byte	0x228
 1251 0433 0F       		.uleb128 0xf
 1252 0434 A9190000 		.4byte	.LASF68
 1253 0438 09       		.byte	0x9
 1254 0439 3D       		.byte	0x3d
 1255 043a F3000000 		.4byte	0xf3
 1256 043e 2C02     		.2byte	0x22c
 1257 0440 0F       		.uleb128 0xf
 1258 0441 7B140000 		.4byte	.LASF69
 1259 0445 09       		.byte	0x9
 1260 0446 3E       		.byte	0x3e
 1261 0447 EE000000 		.4byte	0xee
 1262 044b 3002     		.2byte	0x230
 1263 044d 0F       		.uleb128 0xf
 1264 044e 29110000 		.4byte	.LASF70
 1265 0452 09       		.byte	0x9
 1266 0453 3F       		.byte	0x3f
 1267 0454 EE000000 		.4byte	0xee
 1268 0458 3402     		.2byte	0x234
 1269 045a 0F       		.uleb128 0xf
 1270 045b A0020000 		.4byte	.LASF71
 1271 045f 09       		.byte	0x9
 1272 0460 40       		.byte	0x40
 1273 0461 EE000000 		.4byte	0xee
 1274 0465 3802     		.2byte	0x238
 1275 0467 0F       		.uleb128 0xf
 1276 0468 CB120000 		.4byte	.LASF72
 1277 046c 09       		.byte	0x9
 1278 046d 41       		.byte	0x41
 1279 046e F3000000 		.4byte	0xf3
 1280 0472 3C02     		.2byte	0x23c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 100


 1281 0474 0F       		.uleb128 0xf
 1282 0475 0F030000 		.4byte	.LASF73
 1283 0479 09       		.byte	0x9
 1284 047a 42       		.byte	0x42
 1285 047b F3000000 		.4byte	0xf3
 1286 047f 4002     		.2byte	0x240
 1287 0481 0F       		.uleb128 0xf
 1288 0482 31190000 		.4byte	.LASF74
 1289 0486 09       		.byte	0x9
 1290 0487 43       		.byte	0x43
 1291 0488 BF050000 		.4byte	0x5bf
 1292 048c 4402     		.2byte	0x244
 1293 048e 0F       		.uleb128 0xf
 1294 048f 6E0B0000 		.4byte	.LASF75
 1295 0493 09       		.byte	0x9
 1296 0494 44       		.byte	0x44
 1297 0495 EE000000 		.4byte	0xee
 1298 0499 8002     		.2byte	0x280
 1299 049b 0F       		.uleb128 0xf
 1300 049c 3B190000 		.4byte	.LASF76
 1301 04a0 09       		.byte	0x9
 1302 04a1 45       		.byte	0x45
 1303 04a2 C9050000 		.4byte	0x5c9
 1304 04a6 8402     		.2byte	0x284
 1305 04a8 0F       		.uleb128 0xf
 1306 04a9 1F050000 		.4byte	.LASF77
 1307 04ad 09       		.byte	0x9
 1308 04ae 46       		.byte	0x46
 1309 04af F3000000 		.4byte	0xf3
 1310 04b3 9002     		.2byte	0x290
 1311 04b5 0F       		.uleb128 0xf
 1312 04b6 45190000 		.4byte	.LASF78
 1313 04ba 09       		.byte	0x9
 1314 04bb 47       		.byte	0x47
 1315 04bc D3050000 		.4byte	0x5d3
 1316 04c0 9402     		.2byte	0x294
 1317 04c2 0F       		.uleb128 0xf
 1318 04c3 C3210000 		.4byte	.LASF79
 1319 04c7 09       		.byte	0x9
 1320 04c8 48       		.byte	0x48
 1321 04c9 F3000000 		.4byte	0xf3
 1322 04cd A002     		.2byte	0x2a0
 1323 04cf 0F       		.uleb128 0xf
 1324 04d0 AD100000 		.4byte	.LASF80
 1325 04d4 09       		.byte	0x9
 1326 04d5 49       		.byte	0x49
 1327 04d6 F3000000 		.4byte	0xf3
 1328 04da A402     		.2byte	0x2a4
 1329 04dc 0F       		.uleb128 0xf
 1330 04dd 4F190000 		.4byte	.LASF81
 1331 04e1 09       		.byte	0x9
 1332 04e2 4A       		.byte	0x4a
 1333 04e3 DD050000 		.4byte	0x5dd
 1334 04e7 A802     		.2byte	0x2a8
 1335 04e9 0F       		.uleb128 0xf
 1336 04ea A91D0000 		.4byte	.LASF82
 1337 04ee 09       		.byte	0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 101


 1338 04ef 4B       		.byte	0x4b
 1339 04f0 EE000000 		.4byte	0xee
 1340 04f4 0003     		.2byte	0x300
 1341 04f6 0F       		.uleb128 0xf
 1342 04f7 73150000 		.4byte	.LASF83
 1343 04fb 09       		.byte	0x9
 1344 04fc 4C       		.byte	0x4c
 1345 04fd EE000000 		.4byte	0xee
 1346 0501 0403     		.2byte	0x304
 1347 0503 0F       		.uleb128 0xf
 1348 0504 59190000 		.4byte	.LASF84
 1349 0508 09       		.byte	0x9
 1350 0509 4D       		.byte	0x4d
 1351 050a F7050000 		.4byte	0x5f7
 1352 050e 0803     		.2byte	0x308
 1353 0510 0F       		.uleb128 0xf
 1354 0511 6D120000 		.4byte	.LASF85
 1355 0515 09       		.byte	0x9
 1356 0516 4E       		.byte	0x4e
 1357 0517 EE000000 		.4byte	0xee
 1358 051b 4003     		.2byte	0x340
 1359 051d 0F       		.uleb128 0xf
 1360 051e BE190000 		.4byte	.LASF86
 1361 0522 09       		.byte	0x9
 1362 0523 4F       		.byte	0x4f
 1363 0524 EE000000 		.4byte	0xee
 1364 0528 4403     		.2byte	0x344
 1365 052a 0F       		.uleb128 0xf
 1366 052b 5B210000 		.4byte	.LASF87
 1367 052f 09       		.byte	0x9
 1368 0530 50       		.byte	0x50
 1369 0531 F3000000 		.4byte	0xf3
 1370 0535 4803     		.2byte	0x348
 1371 0537 0F       		.uleb128 0xf
 1372 0538 801F0000 		.4byte	.LASF88
 1373 053c 09       		.byte	0x9
 1374 053d 51       		.byte	0x51
 1375 053e 12060000 		.4byte	0x612
 1376 0542 4C03     		.2byte	0x34c
 1377 0544 0F       		.uleb128 0xf
 1378 0545 6C1E0000 		.4byte	.LASF89
 1379 0549 09       		.byte	0x9
 1380 054a 52       		.byte	0x52
 1381 054b EE000000 		.4byte	0xee
 1382 054f 000F     		.2byte	0xf00
 1383 0551 0F       		.uleb128 0xf
 1384 0552 761E0000 		.4byte	.LASF90
 1385 0556 09       		.byte	0x9
 1386 0557 53       		.byte	0x53
 1387 0558 EE000000 		.4byte	0xee
 1388 055c 040F     		.2byte	0xf04
 1389 055e 00       		.byte	0
 1390 055f 07       		.uleb128 0x7
 1391 0560 F8000000 		.4byte	0xf8
 1392 0564 08       		.uleb128 0x8
 1393 0565 5F050000 		.4byte	0x55f
 1394 0569 09       		.uleb128 0x9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 102


 1395 056a F3000000 		.4byte	0xf3
 1396 056e 79050000 		.4byte	0x579
 1397 0572 0A       		.uleb128 0xa
 1398 0573 A5000000 		.4byte	0xa5
 1399 0577 15       		.byte	0x15
 1400 0578 00       		.byte	0
 1401 0579 07       		.uleb128 0x7
 1402 057a 69050000 		.4byte	0x569
 1403 057e 08       		.uleb128 0x8
 1404 057f 79050000 		.4byte	0x579
 1405 0583 07       		.uleb128 0x7
 1406 0584 08010000 		.4byte	0x108
 1407 0588 07       		.uleb128 0x7
 1408 0589 28010000 		.4byte	0x128
 1409 058d 08       		.uleb128 0x8
 1410 058e 88050000 		.4byte	0x588
 1411 0592 07       		.uleb128 0x7
 1412 0593 28010000 		.4byte	0x128
 1413 0597 08       		.uleb128 0x8
 1414 0598 92050000 		.4byte	0x592
 1415 059c 07       		.uleb128 0x7
 1416 059d 28010000 		.4byte	0x128
 1417 05a1 08       		.uleb128 0x8
 1418 05a2 9C050000 		.4byte	0x59c
 1419 05a6 07       		.uleb128 0x7
 1420 05a7 28010000 		.4byte	0x128
 1421 05ab 08       		.uleb128 0x8
 1422 05ac A6050000 		.4byte	0x5a6
 1423 05b0 07       		.uleb128 0x7
 1424 05b1 28010000 		.4byte	0x128
 1425 05b5 08       		.uleb128 0x8
 1426 05b6 B0050000 		.4byte	0x5b0
 1427 05ba 07       		.uleb128 0x7
 1428 05bb 38010000 		.4byte	0x138
 1429 05bf 08       		.uleb128 0x8
 1430 05c0 BA050000 		.4byte	0x5ba
 1431 05c4 07       		.uleb128 0x7
 1432 05c5 18010000 		.4byte	0x118
 1433 05c9 08       		.uleb128 0x8
 1434 05ca C4050000 		.4byte	0x5c4
 1435 05ce 07       		.uleb128 0x7
 1436 05cf 18010000 		.4byte	0x118
 1437 05d3 08       		.uleb128 0x8
 1438 05d4 CE050000 		.4byte	0x5ce
 1439 05d8 07       		.uleb128 0x7
 1440 05d9 69050000 		.4byte	0x569
 1441 05dd 08       		.uleb128 0x8
 1442 05de D8050000 		.4byte	0x5d8
 1443 05e2 09       		.uleb128 0x9
 1444 05e3 F3000000 		.4byte	0xf3
 1445 05e7 F2050000 		.4byte	0x5f2
 1446 05eb 0A       		.uleb128 0xa
 1447 05ec A5000000 		.4byte	0xa5
 1448 05f0 0D       		.byte	0xd
 1449 05f1 00       		.byte	0
 1450 05f2 07       		.uleb128 0x7
 1451 05f3 E2050000 		.4byte	0x5e2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 103


 1452 05f7 08       		.uleb128 0x8
 1453 05f8 F2050000 		.4byte	0x5f2
 1454 05fc 09       		.uleb128 0x9
 1455 05fd F3000000 		.4byte	0xf3
 1456 0601 0D060000 		.4byte	0x60d
 1457 0605 10       		.uleb128 0x10
 1458 0606 A5000000 		.4byte	0xa5
 1459 060a EC02     		.2byte	0x2ec
 1460 060c 00       		.byte	0
 1461 060d 07       		.uleb128 0x7
 1462 060e FC050000 		.4byte	0x5fc
 1463 0612 08       		.uleb128 0x8
 1464 0613 0D060000 		.4byte	0x60d
 1465 0617 04       		.uleb128 0x4
 1466 0618 000C0000 		.4byte	.LASF91
 1467 061c 09       		.byte	0x9
 1468 061d 54       		.byte	0x54
 1469 061e D7020000 		.4byte	0x2d7
 1470 0622 11       		.uleb128 0x11
 1471 0623 E41A0000 		.4byte	.LASF92
 1472 0627 0A       		.byte	0xa
 1473 0628 C401     		.2byte	0x1c4
 1474 062a B4000000 		.4byte	0xb4
 1475 062e 02       		.uleb128 0x2
 1476 062f 01       		.byte	0x1
 1477 0630 02       		.byte	0x2
 1478 0631 5E0C0000 		.4byte	.LASF93
 1479 0635 12       		.uleb128 0x12
 1480 0636 01       		.byte	0x1
 1481 0637 5A000000 		.4byte	0x5a
 1482 063b 0B       		.byte	0xb
 1483 063c 6A01     		.2byte	0x16a
 1484 063e 4F060000 		.4byte	0x64f
 1485 0642 13       		.uleb128 0x13
 1486 0643 C5100000 		.4byte	.LASF94
 1487 0647 00       		.byte	0
 1488 0648 13       		.uleb128 0x13
 1489 0649 D0030000 		.4byte	.LASF95
 1490 064d 01       		.byte	0x1
 1491 064e 00       		.byte	0
 1492 064f 11       		.uleb128 0x11
 1493 0650 8B0A0000 		.4byte	.LASF96
 1494 0654 0B       		.byte	0xb
 1495 0655 6D01     		.2byte	0x16d
 1496 0657 35060000 		.4byte	0x635
 1497 065b 14       		.uleb128 0x14
 1498 065c 18       		.byte	0x18
 1499 065d 0B       		.byte	0xb
 1500 065e CE01     		.2byte	0x1ce
 1501 0660 B3060000 		.4byte	0x6b3
 1502 0664 15       		.uleb128 0x15
 1503 0665 B1010000 		.4byte	.LASF97
 1504 0669 0B       		.byte	0xb
 1505 066a D001     		.2byte	0x1d0
 1506 066c 4F060000 		.4byte	0x64f
 1507 0670 00       		.byte	0
 1508 0671 15       		.uleb128 0x15
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 104


 1509 0672 010E0000 		.4byte	.LASF98
 1510 0676 0B       		.byte	0xb
 1511 0677 D301     		.2byte	0x1d3
 1512 0679 E3000000 		.4byte	0xe3
 1513 067d 04       		.byte	0x4
 1514 067e 15       		.uleb128 0x15
 1515 067f B0020000 		.4byte	.LASF99
 1516 0683 0B       		.byte	0xb
 1517 0684 D501     		.2byte	0x1d5
 1518 0686 E3000000 		.4byte	0xe3
 1519 068a 08       		.byte	0x8
 1520 068b 15       		.uleb128 0x15
 1521 068c 930C0000 		.4byte	.LASF100
 1522 0690 0B       		.byte	0xb
 1523 0691 D801     		.2byte	0x1d8
 1524 0693 E3000000 		.4byte	0xe3
 1525 0697 0C       		.byte	0xc
 1526 0698 15       		.uleb128 0x15
 1527 0699 3E1B0000 		.4byte	.LASF101
 1528 069d 0B       		.byte	0xb
 1529 069e DC01     		.2byte	0x1dc
 1530 06a0 E3000000 		.4byte	0xe3
 1531 06a4 10       		.byte	0x10
 1532 06a5 15       		.uleb128 0x15
 1533 06a6 8D0C0000 		.4byte	.LASF102
 1534 06aa 0B       		.byte	0xb
 1535 06ab E001     		.2byte	0x1e0
 1536 06ad E3000000 		.4byte	0xe3
 1537 06b1 14       		.byte	0x14
 1538 06b2 00       		.byte	0
 1539 06b3 11       		.uleb128 0x11
 1540 06b4 34030000 		.4byte	.LASF103
 1541 06b8 0B       		.byte	0xb
 1542 06b9 E201     		.2byte	0x1e2
 1543 06bb 5B060000 		.4byte	0x65b
 1544 06bf 14       		.uleb128 0x14
 1545 06c0 30       		.byte	0x30
 1546 06c1 0B       		.byte	0xb
 1547 06c2 E501     		.2byte	0x1e5
 1548 06c4 E3060000 		.4byte	0x6e3
 1549 06c8 15       		.uleb128 0x15
 1550 06c9 800F0000 		.4byte	.LASF104
 1551 06cd 0B       		.byte	0xb
 1552 06ce E701     		.2byte	0x1e7
 1553 06d0 B3060000 		.4byte	0x6b3
 1554 06d4 00       		.byte	0
 1555 06d5 15       		.uleb128 0x15
 1556 06d6 760C0000 		.4byte	.LASF105
 1557 06da 0B       		.byte	0xb
 1558 06db E801     		.2byte	0x1e8
 1559 06dd B3060000 		.4byte	0x6b3
 1560 06e1 18       		.byte	0x18
 1561 06e2 00       		.byte	0
 1562 06e3 11       		.uleb128 0x11
 1563 06e4 BF030000 		.4byte	.LASF106
 1564 06e8 0B       		.byte	0xb
 1565 06e9 E901     		.2byte	0x1e9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 105


 1566 06eb BF060000 		.4byte	0x6bf
 1567 06ef 16       		.uleb128 0x16
 1568 06f0 DA200000 		.4byte	.LASF128
 1569 06f4 4C       		.byte	0x4c
 1570 06f5 0C       		.byte	0xc
 1571 06f6 2B       		.byte	0x2b
 1572 06f7 E0070000 		.4byte	0x7e0
 1573 06fb 0D       		.uleb128 0xd
 1574 06fc C0200000 		.4byte	.LASF107
 1575 0700 0C       		.byte	0xc
 1576 0701 2D       		.byte	0x2d
 1577 0702 E3000000 		.4byte	0xe3
 1578 0706 00       		.byte	0
 1579 0707 0D       		.uleb128 0xd
 1580 0708 D80F0000 		.4byte	.LASF108
 1581 070c 0C       		.byte	0xc
 1582 070d 2F       		.byte	0x2f
 1583 070e E3000000 		.4byte	0xe3
 1584 0712 04       		.byte	0x4
 1585 0713 0D       		.uleb128 0xd
 1586 0714 6A170000 		.4byte	.LASF109
 1587 0718 0C       		.byte	0xc
 1588 0719 30       		.byte	0x30
 1589 071a E3000000 		.4byte	0xe3
 1590 071e 08       		.byte	0x8
 1591 071f 0D       		.uleb128 0xd
 1592 0720 6F1A0000 		.4byte	.LASF110
 1593 0724 0C       		.byte	0xc
 1594 0725 31       		.byte	0x31
 1595 0726 E3000000 		.4byte	0xe3
 1596 072a 0C       		.byte	0xc
 1597 072b 0D       		.uleb128 0xd
 1598 072c F8180000 		.4byte	.LASF111
 1599 0730 0C       		.byte	0xc
 1600 0731 33       		.byte	0x33
 1601 0732 E3000000 		.4byte	0xe3
 1602 0736 10       		.byte	0x10
 1603 0737 0D       		.uleb128 0xd
 1604 0738 DE050000 		.4byte	.LASF112
 1605 073c 0C       		.byte	0xc
 1606 073d 34       		.byte	0x34
 1607 073e E3000000 		.4byte	0xe3
 1608 0742 14       		.byte	0x14
 1609 0743 0D       		.uleb128 0xd
 1610 0744 E7050000 		.4byte	.LASF113
 1611 0748 0C       		.byte	0xc
 1612 0749 35       		.byte	0x35
 1613 074a E3000000 		.4byte	0xe3
 1614 074e 18       		.byte	0x18
 1615 074f 0D       		.uleb128 0xd
 1616 0750 8A190000 		.4byte	.LASF114
 1617 0754 0C       		.byte	0xc
 1618 0755 36       		.byte	0x36
 1619 0756 2E060000 		.4byte	0x62e
 1620 075a 1C       		.byte	0x1c
 1621 075b 0D       		.uleb128 0xd
 1622 075c DB070000 		.4byte	.LASF115
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 106


 1623 0760 0C       		.byte	0xc
 1624 0761 38       		.byte	0x38
 1625 0762 E3000000 		.4byte	0xe3
 1626 0766 20       		.byte	0x20
 1627 0767 0D       		.uleb128 0xd
 1628 0768 2B0B0000 		.4byte	.LASF116
 1629 076c 0C       		.byte	0xc
 1630 076d 39       		.byte	0x39
 1631 076e E3000000 		.4byte	0xe3
 1632 0772 24       		.byte	0x24
 1633 0773 0D       		.uleb128 0xd
 1634 0774 D70E0000 		.4byte	.LASF117
 1635 0778 0C       		.byte	0xc
 1636 0779 3B       		.byte	0x3b
 1637 077a E3000000 		.4byte	0xe3
 1638 077e 28       		.byte	0x28
 1639 077f 0D       		.uleb128 0xd
 1640 0780 AD140000 		.4byte	.LASF118
 1641 0784 0C       		.byte	0xc
 1642 0785 3C       		.byte	0x3c
 1643 0786 E3000000 		.4byte	0xe3
 1644 078a 2C       		.byte	0x2c
 1645 078b 0D       		.uleb128 0xd
 1646 078c 79090000 		.4byte	.LASF119
 1647 0790 0C       		.byte	0xc
 1648 0791 3E       		.byte	0x3e
 1649 0792 E3000000 		.4byte	0xe3
 1650 0796 30       		.byte	0x30
 1651 0797 0D       		.uleb128 0xd
 1652 0798 1C0B0000 		.4byte	.LASF120
 1653 079c 0C       		.byte	0xc
 1654 079d 3F       		.byte	0x3f
 1655 079e E3000000 		.4byte	0xe3
 1656 07a2 34       		.byte	0x34
 1657 07a3 0D       		.uleb128 0xd
 1658 07a4 91030000 		.4byte	.LASF121
 1659 07a8 0C       		.byte	0xc
 1660 07a9 41       		.byte	0x41
 1661 07aa E3000000 		.4byte	0xe3
 1662 07ae 38       		.byte	0x38
 1663 07af 0D       		.uleb128 0xd
 1664 07b0 90000000 		.4byte	.LASF122
 1665 07b4 0C       		.byte	0xc
 1666 07b5 42       		.byte	0x42
 1667 07b6 E3000000 		.4byte	0xe3
 1668 07ba 3C       		.byte	0x3c
 1669 07bb 0D       		.uleb128 0xd
 1670 07bc CF040000 		.4byte	.LASF123
 1671 07c0 0C       		.byte	0xc
 1672 07c1 44       		.byte	0x44
 1673 07c2 E3000000 		.4byte	0xe3
 1674 07c6 40       		.byte	0x40
 1675 07c7 0D       		.uleb128 0xd
 1676 07c8 E7190000 		.4byte	.LASF124
 1677 07cc 0C       		.byte	0xc
 1678 07cd 45       		.byte	0x45
 1679 07ce E3000000 		.4byte	0xe3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 107


 1680 07d2 44       		.byte	0x44
 1681 07d3 0D       		.uleb128 0xd
 1682 07d4 CA1E0000 		.4byte	.LASF125
 1683 07d8 0C       		.byte	0xc
 1684 07d9 47       		.byte	0x47
 1685 07da E3000000 		.4byte	0xe3
 1686 07de 48       		.byte	0x48
 1687 07df 00       		.byte	0
 1688 07e0 04       		.uleb128 0x4
 1689 07e1 C4170000 		.4byte	.LASF126
 1690 07e5 0C       		.byte	0xc
 1691 07e6 48       		.byte	0x48
 1692 07e7 EF060000 		.4byte	0x6ef
 1693 07eb 06       		.uleb128 0x6
 1694 07ec 04       		.byte	0x4
 1695 07ed F1070000 		.4byte	0x7f1
 1696 07f1 17       		.uleb128 0x17
 1697 07f2 FC070000 		.4byte	0x7fc
 1698 07f6 18       		.uleb128 0x18
 1699 07f7 E3000000 		.4byte	0xe3
 1700 07fb 00       		.byte	0
 1701 07fc 11       		.uleb128 0x11
 1702 07fd 72000000 		.4byte	.LASF127
 1703 0801 0D       		.byte	0xd
 1704 0802 BF01     		.2byte	0x1bf
 1705 0804 EB070000 		.4byte	0x7eb
 1706 0808 19       		.uleb128 0x19
 1707 0809 691F0000 		.4byte	.LASF129
 1708 080d 24       		.byte	0x24
 1709 080e 0D       		.byte	0xd
 1710 080f 4102     		.2byte	0x241
 1711 0811 8B080000 		.4byte	0x88b
 1712 0815 15       		.uleb128 0x15
 1713 0816 BE100000 		.4byte	.LASF130
 1714 081a 0D       		.byte	0xd
 1715 081b 4402     		.2byte	0x244
 1716 081d EE000000 		.4byte	0xee
 1717 0821 00       		.byte	0
 1718 0822 15       		.uleb128 0x15
 1719 0823 7E0B0000 		.4byte	.LASF131
 1720 0827 0D       		.byte	0xd
 1721 0828 4602     		.2byte	0x246
 1722 082a AC000000 		.4byte	0xac
 1723 082e 04       		.byte	0x4
 1724 082f 15       		.uleb128 0x15
 1725 0830 C3220000 		.4byte	.LASF132
 1726 0834 0D       		.byte	0xd
 1727 0835 4702     		.2byte	0x247
 1728 0837 E3000000 		.4byte	0xe3
 1729 083b 08       		.byte	0x8
 1730 083c 15       		.uleb128 0x15
 1731 083d 4E100000 		.4byte	.LASF133
 1732 0841 0D       		.byte	0xd
 1733 0842 4802     		.2byte	0x248
 1734 0844 EE000000 		.4byte	0xee
 1735 0848 0C       		.byte	0xc
 1736 0849 15       		.uleb128 0x15
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 108


 1737 084a 9B160000 		.4byte	.LASF134
 1738 084e 0D       		.byte	0xd
 1739 084f 4A02     		.2byte	0x24a
 1740 0851 AC000000 		.4byte	0xac
 1741 0855 10       		.byte	0x10
 1742 0856 15       		.uleb128 0x15
 1743 0857 3C150000 		.4byte	.LASF135
 1744 085b 0D       		.byte	0xd
 1745 085c 4B02     		.2byte	0x24b
 1746 085e E3000000 		.4byte	0xe3
 1747 0862 14       		.byte	0x14
 1748 0863 15       		.uleb128 0x15
 1749 0864 6F030000 		.4byte	.LASF136
 1750 0868 0D       		.byte	0xd
 1751 0869 4C02     		.2byte	0x24c
 1752 086b EE000000 		.4byte	0xee
 1753 086f 18       		.byte	0x18
 1754 0870 15       		.uleb128 0x15
 1755 0871 360C0000 		.4byte	.LASF137
 1756 0875 0D       		.byte	0xd
 1757 0876 5202     		.2byte	0x252
 1758 0878 FC070000 		.4byte	0x7fc
 1759 087c 1C       		.byte	0x1c
 1760 087d 15       		.uleb128 0x15
 1761 087e A5100000 		.4byte	.LASF138
 1762 0882 0D       		.byte	0xd
 1763 0883 5502     		.2byte	0x255
 1764 0885 E3000000 		.4byte	0xe3
 1765 0889 20       		.byte	0x20
 1766 088a 00       		.byte	0
 1767 088b 11       		.uleb128 0x11
 1768 088c 86140000 		.4byte	.LASF139
 1769 0890 0D       		.byte	0xd
 1770 0891 5802     		.2byte	0x258
 1771 0893 08080000 		.4byte	0x808
 1772 0897 11       		.uleb128 0x11
 1773 0898 AB110000 		.4byte	.LASF140
 1774 089c 0E       		.byte	0xe
 1775 089d AB01     		.2byte	0x1ab
 1776 089f EB070000 		.4byte	0x7eb
 1777 08a3 19       		.uleb128 0x19
 1778 08a4 44090000 		.4byte	.LASF141
 1779 08a8 38       		.byte	0x38
 1780 08a9 0E       		.byte	0xe
 1781 08aa 4702     		.2byte	0x247
 1782 08ac 67090000 		.4byte	0x967
 1783 08b0 15       		.uleb128 0x15
 1784 08b1 F0010000 		.4byte	.LASF142
 1785 08b5 0E       		.byte	0xe
 1786 08b6 4A02     		.2byte	0x24a
 1787 08b8 EE000000 		.4byte	0xee
 1788 08bc 00       		.byte	0
 1789 08bd 15       		.uleb128 0x15
 1790 08be 85070000 		.4byte	.LASF143
 1791 08c2 0E       		.byte	0xe
 1792 08c3 4B02     		.2byte	0x24b
 1793 08c5 EE000000 		.4byte	0xee
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 109


 1794 08c9 04       		.byte	0x4
 1795 08ca 15       		.uleb128 0x15
 1796 08cb 14170000 		.4byte	.LASF144
 1797 08cf 0E       		.byte	0xe
 1798 08d0 4D02     		.2byte	0x24d
 1799 08d2 AC000000 		.4byte	0xac
 1800 08d6 08       		.byte	0x8
 1801 08d7 15       		.uleb128 0x15
 1802 08d8 D9040000 		.4byte	.LASF145
 1803 08dc 0E       		.byte	0xe
 1804 08dd 4E02     		.2byte	0x24e
 1805 08df E3000000 		.4byte	0xe3
 1806 08e3 0C       		.byte	0xc
 1807 08e4 15       		.uleb128 0x15
 1808 08e5 9F140000 		.4byte	.LASF146
 1809 08e9 0E       		.byte	0xe
 1810 08ea 4F02     		.2byte	0x24f
 1811 08ec EE000000 		.4byte	0xee
 1812 08f0 10       		.byte	0x10
 1813 08f1 15       		.uleb128 0x15
 1814 08f2 720F0000 		.4byte	.LASF147
 1815 08f6 0E       		.byte	0xe
 1816 08f7 5002     		.2byte	0x250
 1817 08f9 EE000000 		.4byte	0xee
 1818 08fd 14       		.byte	0x14
 1819 08fe 15       		.uleb128 0x15
 1820 08ff 7E0B0000 		.4byte	.LASF131
 1821 0903 0E       		.byte	0xe
 1822 0904 5202     		.2byte	0x252
 1823 0906 AC000000 		.4byte	0xac
 1824 090a 18       		.byte	0x18
 1825 090b 15       		.uleb128 0x15
 1826 090c C3220000 		.4byte	.LASF132
 1827 0910 0E       		.byte	0xe
 1828 0911 5302     		.2byte	0x253
 1829 0913 E3000000 		.4byte	0xe3
 1830 0917 1C       		.byte	0x1c
 1831 0918 15       		.uleb128 0x15
 1832 0919 4E100000 		.4byte	.LASF133
 1833 091d 0E       		.byte	0xe
 1834 091e 5402     		.2byte	0x254
 1835 0920 EE000000 		.4byte	0xee
 1836 0924 20       		.byte	0x20
 1837 0925 15       		.uleb128 0x15
 1838 0926 9B160000 		.4byte	.LASF134
 1839 092a 0E       		.byte	0xe
 1840 092b 5602     		.2byte	0x256
 1841 092d AC000000 		.4byte	0xac
 1842 0931 24       		.byte	0x24
 1843 0932 15       		.uleb128 0x15
 1844 0933 3C150000 		.4byte	.LASF135
 1845 0937 0E       		.byte	0xe
 1846 0938 5702     		.2byte	0x257
 1847 093a E3000000 		.4byte	0xe3
 1848 093e 28       		.byte	0x28
 1849 093f 15       		.uleb128 0x15
 1850 0940 6A1B0000 		.4byte	.LASF148
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 110


 1851 0944 0E       		.byte	0xe
 1852 0945 5802     		.2byte	0x258
 1853 0947 EE000000 		.4byte	0xee
 1854 094b 2C       		.byte	0x2c
 1855 094c 15       		.uleb128 0x15
 1856 094d 360C0000 		.4byte	.LASF137
 1857 0951 0E       		.byte	0xe
 1858 0952 5D02     		.2byte	0x25d
 1859 0954 97080000 		.4byte	0x897
 1860 0958 30       		.byte	0x30
 1861 0959 15       		.uleb128 0x15
 1862 095a A5100000 		.4byte	.LASF138
 1863 095e 0E       		.byte	0xe
 1864 095f 6002     		.2byte	0x260
 1865 0961 E3000000 		.4byte	0xe3
 1866 0965 34       		.byte	0x34
 1867 0966 00       		.byte	0
 1868 0967 11       		.uleb128 0x11
 1869 0968 25090000 		.4byte	.LASF149
 1870 096c 0E       		.byte	0xe
 1871 096d 6302     		.2byte	0x263
 1872 096f A3080000 		.4byte	0x8a3
 1873 0973 12       		.uleb128 0x12
 1874 0974 01       		.byte	0x1
 1875 0975 5A000000 		.4byte	0x5a
 1876 0979 03       		.byte	0x3
 1877 097a 0504     		.2byte	0x405
 1878 097c 99090000 		.4byte	0x999
 1879 0980 13       		.uleb128 0x13
 1880 0981 CA060000 		.4byte	.LASF150
 1881 0985 00       		.byte	0
 1882 0986 13       		.uleb128 0x13
 1883 0987 A20A0000 		.4byte	.LASF151
 1884 098b 01       		.byte	0x1
 1885 098c 13       		.uleb128 0x13
 1886 098d F30E0000 		.4byte	.LASF152
 1887 0991 02       		.byte	0x2
 1888 0992 13       		.uleb128 0x13
 1889 0993 1A030000 		.4byte	.LASF153
 1890 0997 03       		.byte	0x3
 1891 0998 00       		.byte	0
 1892 0999 11       		.uleb128 0x11
 1893 099a EA210000 		.4byte	.LASF154
 1894 099e 03       		.byte	0x3
 1895 099f 0A04     		.2byte	0x40a
 1896 09a1 73090000 		.4byte	0x973
 1897 09a5 12       		.uleb128 0x12
 1898 09a6 01       		.byte	0x1
 1899 09a7 5A000000 		.4byte	0x5a
 1900 09ab 03       		.byte	0x3
 1901 09ac 8604     		.2byte	0x486
 1902 09ae CB090000 		.4byte	0x9cb
 1903 09b2 13       		.uleb128 0x13
 1904 09b3 561E0000 		.4byte	.LASF155
 1905 09b7 00       		.byte	0
 1906 09b8 13       		.uleb128 0x13
 1907 09b9 35020000 		.4byte	.LASF156
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 111


 1908 09bd 01       		.byte	0x1
 1909 09be 13       		.uleb128 0x13
 1910 09bf 80120000 		.4byte	.LASF157
 1911 09c3 02       		.byte	0x2
 1912 09c4 13       		.uleb128 0x13
 1913 09c5 DD120000 		.4byte	.LASF158
 1914 09c9 04       		.byte	0x4
 1915 09ca 00       		.byte	0
 1916 09cb 14       		.uleb128 0x14
 1917 09cc 78       		.byte	0x78
 1918 09cd 03       		.byte	0x3
 1919 09ce F404     		.2byte	0x4f4
 1920 09d0 980A0000 		.4byte	0xa98
 1921 09d4 15       		.uleb128 0x15
 1922 09d5 170B0000 		.4byte	.LASF159
 1923 09d9 03       		.byte	0x3
 1924 09da F604     		.2byte	0x4f6
 1925 09dc E3000000 		.4byte	0xe3
 1926 09e0 00       		.byte	0
 1927 09e1 15       		.uleb128 0x15
 1928 09e2 371E0000 		.4byte	.LASF160
 1929 09e6 03       		.byte	0x3
 1930 09e7 F704     		.2byte	0x4f7
 1931 09e9 E3000000 		.4byte	0xe3
 1932 09ed 04       		.byte	0x4
 1933 09ee 15       		.uleb128 0x15
 1934 09ef 9D170000 		.4byte	.LASF161
 1935 09f3 03       		.byte	0x3
 1936 09f4 F804     		.2byte	0x4f8
 1937 09f6 E3000000 		.4byte	0xe3
 1938 09fa 08       		.byte	0x8
 1939 09fb 15       		.uleb128 0x15
 1940 09fc 290C0000 		.4byte	.LASF162
 1941 0a00 03       		.byte	0x3
 1942 0a01 F904     		.2byte	0x4f9
 1943 0a03 E3000000 		.4byte	0xe3
 1944 0a07 0C       		.byte	0xc
 1945 0a08 15       		.uleb128 0x15
 1946 0a09 4F0A0000 		.4byte	.LASF163
 1947 0a0d 03       		.byte	0x3
 1948 0a0e FA04     		.2byte	0x4fa
 1949 0a10 E3000000 		.4byte	0xe3
 1950 0a14 10       		.byte	0x10
 1951 0a15 15       		.uleb128 0x15
 1952 0a16 CA110000 		.4byte	.LASF164
 1953 0a1a 03       		.byte	0x3
 1954 0a1b FB04     		.2byte	0x4fb
 1955 0a1d 99090000 		.4byte	0x999
 1956 0a21 14       		.byte	0x14
 1957 0a22 15       		.uleb128 0x15
 1958 0a23 6B0F0000 		.4byte	.LASF165
 1959 0a27 03       		.byte	0x3
 1960 0a28 FC04     		.2byte	0x4fc
 1961 0a2a E3000000 		.4byte	0xe3
 1962 0a2e 18       		.byte	0x18
 1963 0a2f 15       		.uleb128 0x15
 1964 0a30 C9140000 		.4byte	.LASF166
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 112


 1965 0a34 03       		.byte	0x3
 1966 0a35 FD04     		.2byte	0x4fd
 1967 0a37 980A0000 		.4byte	0xa98
 1968 0a3b 1C       		.byte	0x1c
 1969 0a3c 15       		.uleb128 0x15
 1970 0a3d BA220000 		.4byte	.LASF167
 1971 0a41 03       		.byte	0x3
 1972 0a42 FE04     		.2byte	0x4fe
 1973 0a44 E3000000 		.4byte	0xe3
 1974 0a48 5C       		.byte	0x5c
 1975 0a49 15       		.uleb128 0x15
 1976 0a4a 5A050000 		.4byte	.LASF168
 1977 0a4e 03       		.byte	0x3
 1978 0a4f FF04     		.2byte	0x4ff
 1979 0a51 E3000000 		.4byte	0xe3
 1980 0a55 60       		.byte	0x60
 1981 0a56 15       		.uleb128 0x15
 1982 0a57 D4110000 		.4byte	.LASF169
 1983 0a5b 03       		.byte	0x3
 1984 0a5c 0005     		.2byte	0x500
 1985 0a5e E3000000 		.4byte	0xe3
 1986 0a62 64       		.byte	0x64
 1987 0a63 15       		.uleb128 0x15
 1988 0a64 0D180000 		.4byte	.LASF170
 1989 0a68 03       		.byte	0x3
 1990 0a69 0105     		.2byte	0x501
 1991 0a6b E3000000 		.4byte	0xe3
 1992 0a6f 68       		.byte	0x68
 1993 0a70 15       		.uleb128 0x15
 1994 0a71 79110000 		.4byte	.LASF171
 1995 0a75 03       		.byte	0x3
 1996 0a76 0205     		.2byte	0x502
 1997 0a78 E3000000 		.4byte	0xe3
 1998 0a7c 6C       		.byte	0x6c
 1999 0a7d 15       		.uleb128 0x15
 2000 0a7e 94210000 		.4byte	.LASF172
 2001 0a82 03       		.byte	0x3
 2002 0a83 0305     		.2byte	0x503
 2003 0a85 2E060000 		.4byte	0x62e
 2004 0a89 70       		.byte	0x70
 2005 0a8a 15       		.uleb128 0x15
 2006 0a8b 4B0E0000 		.4byte	.LASF173
 2007 0a8f 03       		.byte	0x3
 2008 0a90 0405     		.2byte	0x504
 2009 0a92 E3000000 		.4byte	0xe3
 2010 0a96 74       		.byte	0x74
 2011 0a97 00       		.byte	0
 2012 0a98 09       		.uleb128 0x9
 2013 0a99 E3000000 		.4byte	0xe3
 2014 0a9d A80A0000 		.4byte	0xaa8
 2015 0aa1 0A       		.uleb128 0xa
 2016 0aa2 A5000000 		.4byte	0xa5
 2017 0aa6 0F       		.byte	0xf
 2018 0aa7 00       		.byte	0
 2019 0aa8 11       		.uleb128 0x11
 2020 0aa9 FD0A0000 		.4byte	.LASF174
 2021 0aad 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 113


 2022 0aae 0505     		.2byte	0x505
 2023 0ab0 CB090000 		.4byte	0x9cb
 2024 0ab4 12       		.uleb128 0x12
 2025 0ab5 02       		.byte	0x2
 2026 0ab6 73000000 		.4byte	0x73
 2027 0aba 0F       		.byte	0xf
 2028 0abb 3F01     		.2byte	0x13f
 2029 0abd E60D0000 		.4byte	0xde6
 2030 0ac1 13       		.uleb128 0x13
 2031 0ac2 12090000 		.4byte	.LASF175
 2032 0ac6 00       		.byte	0
 2033 0ac7 1A       		.uleb128 0x1a
 2034 0ac8 72080000 		.4byte	.LASF176
 2035 0acc 0010     		.2byte	0x1000
 2036 0ace 1A       		.uleb128 0x1a
 2037 0acf F61C0000 		.4byte	.LASF177
 2038 0ad3 0110     		.2byte	0x1001
 2039 0ad5 1A       		.uleb128 0x1a
 2040 0ad6 AD0D0000 		.4byte	.LASF178
 2041 0ada 0210     		.2byte	0x1002
 2042 0adc 1A       		.uleb128 0x1a
 2043 0add 310E0000 		.4byte	.LASF179
 2044 0ae1 0310     		.2byte	0x1003
 2045 0ae3 1A       		.uleb128 0x1a
 2046 0ae4 1D010000 		.4byte	.LASF180
 2047 0ae8 0410     		.2byte	0x1004
 2048 0aea 1A       		.uleb128 0x1a
 2049 0aeb 0D220000 		.4byte	.LASF181
 2050 0aef 0510     		.2byte	0x1005
 2051 0af1 1A       		.uleb128 0x1a
 2052 0af2 AA170000 		.4byte	.LASF182
 2053 0af6 0020     		.2byte	0x2000
 2054 0af8 1A       		.uleb128 0x1a
 2055 0af9 9B1B0000 		.4byte	.LASF183
 2056 0afd 0120     		.2byte	0x2001
 2057 0aff 1A       		.uleb128 0x1a
 2058 0b00 34170000 		.4byte	.LASF184
 2059 0b04 0220     		.2byte	0x2002
 2060 0b06 1A       		.uleb128 0x1a
 2061 0b07 DD0D0000 		.4byte	.LASF185
 2062 0b0b 0320     		.2byte	0x2003
 2063 0b0d 1A       		.uleb128 0x1a
 2064 0b0e 28100000 		.4byte	.LASF186
 2065 0b12 0420     		.2byte	0x2004
 2066 0b14 1A       		.uleb128 0x1a
 2067 0b15 2B130000 		.4byte	.LASF187
 2068 0b19 0520     		.2byte	0x2005
 2069 0b1b 1A       		.uleb128 0x1a
 2070 0b1c 560D0000 		.4byte	.LASF188
 2071 0b20 0620     		.2byte	0x2006
 2072 0b22 1A       		.uleb128 0x1a
 2073 0b23 291C0000 		.4byte	.LASF189
 2074 0b27 0720     		.2byte	0x2007
 2075 0b29 1A       		.uleb128 0x1a
 2076 0b2a 101F0000 		.4byte	.LASF190
 2077 0b2e 0820     		.2byte	0x2008
 2078 0b30 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 114


 2079 0b31 8B1E0000 		.4byte	.LASF191
 2080 0b35 0920     		.2byte	0x2009
 2081 0b37 1A       		.uleb128 0x1a
 2082 0b38 E3080000 		.4byte	.LASF192
 2083 0b3c 0A20     		.2byte	0x200a
 2084 0b3e 1A       		.uleb128 0x1a
 2085 0b3f 2C040000 		.4byte	.LASF193
 2086 0b43 0B20     		.2byte	0x200b
 2087 0b45 1A       		.uleb128 0x1a
 2088 0b46 7E170000 		.4byte	.LASF194
 2089 0b4a 0C20     		.2byte	0x200c
 2090 0b4c 1A       		.uleb128 0x1a
 2091 0b4d 31080000 		.4byte	.LASF195
 2092 0b51 0D20     		.2byte	0x200d
 2093 0b53 1A       		.uleb128 0x1a
 2094 0b54 03100000 		.4byte	.LASF196
 2095 0b58 0E20     		.2byte	0x200e
 2096 0b5a 1A       		.uleb128 0x1a
 2097 0b5b 68180000 		.4byte	.LASF197
 2098 0b5f 0F20     		.2byte	0x200f
 2099 0b61 1A       		.uleb128 0x1a
 2100 0b62 FB120000 		.4byte	.LASF198
 2101 0b66 1020     		.2byte	0x2010
 2102 0b68 1A       		.uleb128 0x1a
 2103 0b69 F9140000 		.4byte	.LASF199
 2104 0b6d 1120     		.2byte	0x2011
 2105 0b6f 1A       		.uleb128 0x1a
 2106 0b70 DE1E0000 		.4byte	.LASF200
 2107 0b74 1220     		.2byte	0x2012
 2108 0b76 1A       		.uleb128 0x1a
 2109 0b77 4A020000 		.4byte	.LASF201
 2110 0b7b 1320     		.2byte	0x2013
 2111 0b7d 1A       		.uleb128 0x1a
 2112 0b7e 55110000 		.4byte	.LASF202
 2113 0b82 1420     		.2byte	0x2014
 2114 0b84 1A       		.uleb128 0x1a
 2115 0b85 98050000 		.4byte	.LASF203
 2116 0b89 1520     		.2byte	0x2015
 2117 0b8b 1A       		.uleb128 0x1a
 2118 0b8c 95070000 		.4byte	.LASF204
 2119 0b90 1620     		.2byte	0x2016
 2120 0b92 1A       		.uleb128 0x1a
 2121 0b93 83040000 		.4byte	.LASF205
 2122 0b97 1720     		.2byte	0x2017
 2123 0b99 1A       		.uleb128 0x1a
 2124 0b9a 86080000 		.4byte	.LASF206
 2125 0b9e 0030     		.2byte	0x3000
 2126 0ba0 1A       		.uleb128 0x1a
 2127 0ba1 CF0B0000 		.4byte	.LASF207
 2128 0ba5 0130     		.2byte	0x3001
 2129 0ba7 1A       		.uleb128 0x1a
 2130 0ba8 D90A0000 		.4byte	.LASF208
 2131 0bac 0230     		.2byte	0x3002
 2132 0bae 1A       		.uleb128 0x1a
 2133 0baf 671C0000 		.4byte	.LASF209
 2134 0bb3 0330     		.2byte	0x3003
 2135 0bb5 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 115


 2136 0bb6 240A0000 		.4byte	.LASF210
 2137 0bba 0430     		.2byte	0x3004
 2138 0bbc 1A       		.uleb128 0x1a
 2139 0bbd BC1C0000 		.4byte	.LASF211
 2140 0bc1 0530     		.2byte	0x3005
 2141 0bc3 1A       		.uleb128 0x1a
 2142 0bc4 00020000 		.4byte	.LASF212
 2143 0bc8 0630     		.2byte	0x3006
 2144 0bca 1A       		.uleb128 0x1a
 2145 0bcb 2D210000 		.4byte	.LASF213
 2146 0bcf 0730     		.2byte	0x3007
 2147 0bd1 1A       		.uleb128 0x1a
 2148 0bd2 FB130000 		.4byte	.LASF214
 2149 0bd6 0830     		.2byte	0x3008
 2150 0bd8 1A       		.uleb128 0x1a
 2151 0bd9 D50C0000 		.4byte	.LASF215
 2152 0bdd 0930     		.2byte	0x3009
 2153 0bdf 1A       		.uleb128 0x1a
 2154 0be0 8B1C0000 		.4byte	.LASF216
 2155 0be4 0A30     		.2byte	0x300a
 2156 0be6 1A       		.uleb128 0x1a
 2157 0be7 270F0000 		.4byte	.LASF217
 2158 0beb 0B30     		.2byte	0x300b
 2159 0bed 1A       		.uleb128 0x1a
 2160 0bee 3C010000 		.4byte	.LASF218
 2161 0bf2 0C30     		.2byte	0x300c
 2162 0bf4 1A       		.uleb128 0x1a
 2163 0bf5 B91A0000 		.4byte	.LASF219
 2164 0bf9 1130     		.2byte	0x3011
 2165 0bfb 1A       		.uleb128 0x1a
 2166 0bfc AE180000 		.4byte	.LASF220
 2167 0c00 1230     		.2byte	0x3012
 2168 0c02 1A       		.uleb128 0x1a
 2169 0c03 8C1D0000 		.4byte	.LASF221
 2170 0c07 1330     		.2byte	0x3013
 2171 0c09 1A       		.uleb128 0x1a
 2172 0c0a C51B0000 		.4byte	.LASF222
 2173 0c0e 1430     		.2byte	0x3014
 2174 0c10 1A       		.uleb128 0x1a
 2175 0c11 F6190000 		.4byte	.LASF223
 2176 0c15 1530     		.2byte	0x3015
 2177 0c17 1A       		.uleb128 0x1a
 2178 0c18 1D120000 		.4byte	.LASF224
 2179 0c1c 1630     		.2byte	0x3016
 2180 0c1e 1A       		.uleb128 0x1a
 2181 0c1f FB110000 		.4byte	.LASF225
 2182 0c23 1730     		.2byte	0x3017
 2183 0c25 1A       		.uleb128 0x1a
 2184 0c26 570E0000 		.4byte	.LASF226
 2185 0c2a 1830     		.2byte	0x3018
 2186 0c2c 1A       		.uleb128 0x1a
 2187 0c2d AE150000 		.4byte	.LASF227
 2188 0c31 0040     		.2byte	0x4000
 2189 0c33 1A       		.uleb128 0x1a
 2190 0c34 F6200000 		.4byte	.LASF228
 2191 0c38 0140     		.2byte	0x4001
 2192 0c3a 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 116


 2193 0c3b 78200000 		.4byte	.LASF229
 2194 0c3f 0240     		.2byte	0x4002
 2195 0c41 1A       		.uleb128 0x1a
 2196 0c42 FD1D0000 		.4byte	.LASF230
 2197 0c46 0340     		.2byte	0x4003
 2198 0c48 1A       		.uleb128 0x1a
 2199 0c49 38110000 		.4byte	.LASF231
 2200 0c4d 0440     		.2byte	0x4004
 2201 0c4f 1A       		.uleb128 0x1a
 2202 0c50 56220000 		.4byte	.LASF232
 2203 0c54 0540     		.2byte	0x4005
 2204 0c56 1A       		.uleb128 0x1a
 2205 0c57 9E000000 		.4byte	.LASF233
 2206 0c5b 0640     		.2byte	0x4006
 2207 0c5d 1A       		.uleb128 0x1a
 2208 0c5e AF0B0000 		.4byte	.LASF234
 2209 0c62 0740     		.2byte	0x4007
 2210 0c64 1A       		.uleb128 0x1a
 2211 0c65 4C030000 		.4byte	.LASF235
 2212 0c69 0840     		.2byte	0x4008
 2213 0c6b 1A       		.uleb128 0x1a
 2214 0c6c BB0A0000 		.4byte	.LASF236
 2215 0c70 0940     		.2byte	0x4009
 2216 0c72 1A       		.uleb128 0x1a
 2217 0c73 D2220000 		.4byte	.LASF237
 2218 0c77 0A40     		.2byte	0x400a
 2219 0c79 1A       		.uleb128 0x1a
 2220 0c7a 4B0F0000 		.4byte	.LASF238
 2221 0c7e 0B40     		.2byte	0x400b
 2222 0c80 1A       		.uleb128 0x1a
 2223 0c81 D4140000 		.4byte	.LASF239
 2224 0c85 0C40     		.2byte	0x400c
 2225 0c87 1A       		.uleb128 0x1a
 2226 0c88 7B100000 		.4byte	.LASF240
 2227 0c8c 0D40     		.2byte	0x400d
 2228 0c8e 1A       		.uleb128 0x1a
 2229 0c8f 13160000 		.4byte	.LASF241
 2230 0c93 0E40     		.2byte	0x400e
 2231 0c95 1A       		.uleb128 0x1a
 2232 0c96 3C0B0000 		.4byte	.LASF242
 2233 0c9a 0F40     		.2byte	0x400f
 2234 0c9c 1A       		.uleb128 0x1a
 2235 0c9d 99090000 		.4byte	.LASF243
 2236 0ca1 1040     		.2byte	0x4010
 2237 0ca3 1A       		.uleb128 0x1a
 2238 0ca4 471F0000 		.4byte	.LASF244
 2239 0ca8 1140     		.2byte	0x4011
 2240 0caa 1A       		.uleb128 0x1a
 2241 0cab 150D0000 		.4byte	.LASF245
 2242 0caf 1240     		.2byte	0x4012
 2243 0cb1 1A       		.uleb128 0x1a
 2244 0cb2 F51A0000 		.4byte	.LASF246
 2245 0cb6 1340     		.2byte	0x4013
 2246 0cb8 1A       		.uleb128 0x1a
 2247 0cb9 F2150000 		.4byte	.LASF247
 2248 0cbd 1440     		.2byte	0x4014
 2249 0cbf 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 117


 2250 0cc0 A3060000 		.4byte	.LASF248
 2251 0cc4 1540     		.2byte	0x4015
 2252 0cc6 1A       		.uleb128 0x1a
 2253 0cc7 26220000 		.4byte	.LASF249
 2254 0ccb 1640     		.2byte	0x4016
 2255 0ccd 1A       		.uleb128 0x1a
 2256 0cce E2170000 		.4byte	.LASF250
 2257 0cd2 1740     		.2byte	0x4017
 2258 0cd4 1A       		.uleb128 0x1a
 2259 0cd5 B2120000 		.4byte	.LASF251
 2260 0cd9 1840     		.2byte	0x4018
 2261 0cdb 1A       		.uleb128 0x1a
 2262 0cdc 171A0000 		.4byte	.LASF252
 2263 0ce0 1940     		.2byte	0x4019
 2264 0ce2 1A       		.uleb128 0x1a
 2265 0ce3 25180000 		.4byte	.LASF253
 2266 0ce7 0050     		.2byte	0x5000
 2267 0ce9 1A       		.uleb128 0x1a
 2268 0cea 03050000 		.4byte	.LASF254
 2269 0cee 0150     		.2byte	0x5001
 2270 0cf0 1A       		.uleb128 0x1a
 2271 0cf1 900B0000 		.4byte	.LASF255
 2272 0cf5 0250     		.2byte	0x5002
 2273 0cf7 1A       		.uleb128 0x1a
 2274 0cf8 28200000 		.4byte	.LASF256
 2275 0cfc 0350     		.2byte	0x5003
 2276 0cfe 1A       		.uleb128 0x1a
 2277 0cff 44070000 		.4byte	.LASF257
 2278 0d03 0450     		.2byte	0x5004
 2279 0d05 1A       		.uleb128 0x1a
 2280 0d06 40180000 		.4byte	.LASF258
 2281 0d0a 0550     		.2byte	0x5005
 2282 0d0c 1A       		.uleb128 0x1a
 2283 0d0d B60F0000 		.4byte	.LASF259
 2284 0d11 0650     		.2byte	0x5006
 2285 0d13 1A       		.uleb128 0x1a
 2286 0d14 4E040000 		.4byte	.LASF260
 2287 0d18 0750     		.2byte	0x5007
 2288 0d1a 1A       		.uleb128 0x1a
 2289 0d1b 70050000 		.4byte	.LASF261
 2290 0d1f 0850     		.2byte	0x5008
 2291 0d21 1A       		.uleb128 0x1a
 2292 0d22 C1070000 		.4byte	.LASF262
 2293 0d26 0950     		.2byte	0x5009
 2294 0d28 1A       		.uleb128 0x1a
 2295 0d29 EC070000 		.4byte	.LASF263
 2296 0d2d 0A50     		.2byte	0x500a
 2297 0d2f 1A       		.uleb128 0x1a
 2298 0d30 4F1A0000 		.4byte	.LASF264
 2299 0d34 0B50     		.2byte	0x500b
 2300 0d36 1A       		.uleb128 0x1a
 2301 0d37 93180000 		.4byte	.LASF265
 2302 0d3b 0C50     		.2byte	0x500c
 2303 0d3d 1A       		.uleb128 0x1a
 2304 0d3e 7A0D0000 		.4byte	.LASF266
 2305 0d42 0D50     		.2byte	0x500d
 2306 0d44 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 118


 2307 0d45 0E210000 		.4byte	.LASF267
 2308 0d49 0E50     		.2byte	0x500e
 2309 0d4b 1A       		.uleb128 0x1a
 2310 0d4c 090C0000 		.4byte	.LASF268
 2311 0d50 0F50     		.2byte	0x500f
 2312 0d52 1A       		.uleb128 0x1a
 2313 0d53 7B1B0000 		.4byte	.LASF269
 2314 0d57 1050     		.2byte	0x5010
 2315 0d59 1A       		.uleb128 0x1a
 2316 0d5a 13070000 		.4byte	.LASF270
 2317 0d5e 1150     		.2byte	0x5011
 2318 0d60 1A       		.uleb128 0x1a
 2319 0d61 60010000 		.4byte	.LASF271
 2320 0d65 1250     		.2byte	0x5012
 2321 0d67 1A       		.uleb128 0x1a
 2322 0d68 C1080000 		.4byte	.LASF272
 2323 0d6c 1350     		.2byte	0x5013
 2324 0d6e 1A       		.uleb128 0x1a
 2325 0d6f 63070000 		.4byte	.LASF273
 2326 0d73 1450     		.2byte	0x5014
 2327 0d75 1A       		.uleb128 0x1a
 2328 0d76 BE090000 		.4byte	.LASF274
 2329 0d7a 1550     		.2byte	0x5015
 2330 0d7c 1A       		.uleb128 0x1a
 2331 0d7d 47200000 		.4byte	.LASF275
 2332 0d81 1650     		.2byte	0x5016
 2333 0d83 1A       		.uleb128 0x1a
 2334 0d84 B4050000 		.4byte	.LASF276
 2335 0d88 1750     		.2byte	0x5017
 2336 0d8a 1A       		.uleb128 0x1a
 2337 0d8b 2E140000 		.4byte	.LASF277
 2338 0d8f 1850     		.2byte	0x5018
 2339 0d91 1A       		.uleb128 0x1a
 2340 0d92 6D210000 		.4byte	.LASF278
 2341 0d96 0060     		.2byte	0x6000
 2342 0d98 1A       		.uleb128 0x1a
 2343 0d99 8B1F0000 		.4byte	.LASF279
 2344 0d9d 0160     		.2byte	0x6001
 2345 0d9f 1A       		.uleb128 0x1a
 2346 0da0 BC1D0000 		.4byte	.LASF280
 2347 0da4 0260     		.2byte	0x6002
 2348 0da6 1A       		.uleb128 0x1a
 2349 0da7 D3150000 		.4byte	.LASF281
 2350 0dab 0360     		.2byte	0x6003
 2351 0dad 1A       		.uleb128 0x1a
 2352 0dae 4E120000 		.4byte	.LASF282
 2353 0db2 0460     		.2byte	0x6004
 2354 0db4 1A       		.uleb128 0x1a
 2355 0db5 481B0000 		.4byte	.LASF283
 2356 0db9 0560     		.2byte	0x6005
 2357 0dbb 1A       		.uleb128 0x1a
 2358 0dbc AA0C0000 		.4byte	.LASF284
 2359 0dc0 0660     		.2byte	0x6006
 2360 0dc2 1A       		.uleb128 0x1a
 2361 0dc3 52000000 		.4byte	.LASF285
 2362 0dc7 0760     		.2byte	0x6007
 2363 0dc9 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 119


 2364 0dca BB020000 		.4byte	.LASF286
 2365 0dce 0860     		.2byte	0x6008
 2366 0dd0 1A       		.uleb128 0x1a
 2367 0dd1 F9000000 		.4byte	.LASF287
 2368 0dd5 0960     		.2byte	0x6009
 2369 0dd7 1A       		.uleb128 0x1a
 2370 0dd8 4E150000 		.4byte	.LASF288
 2371 0ddc 0A60     		.2byte	0x600a
 2372 0dde 1A       		.uleb128 0x1a
 2373 0ddf 7E0C0000 		.4byte	.LASF289
 2374 0de3 FFFF     		.2byte	0xffff
 2375 0de5 00       		.byte	0
 2376 0de6 08       		.uleb128 0x8
 2377 0de7 C2000000 		.4byte	0xc2
 2378 0deb 14       		.uleb128 0x14
 2379 0dec 02       		.byte	0x2
 2380 0ded 10       		.byte	0x10
 2381 0dee 5B01     		.2byte	0x15b
 2382 0df0 0F0E0000 		.4byte	0xe0f
 2383 0df4 15       		.uleb128 0x15
 2384 0df5 9D200000 		.4byte	.LASF290
 2385 0df9 10       		.byte	0x10
 2386 0dfa 6501     		.2byte	0x165
 2387 0dfc C2000000 		.4byte	0xc2
 2388 0e00 00       		.byte	0
 2389 0e01 15       		.uleb128 0x15
 2390 0e02 110B0000 		.4byte	.LASF291
 2391 0e06 10       		.byte	0x10
 2392 0e07 6901     		.2byte	0x169
 2393 0e09 C2000000 		.4byte	0xc2
 2394 0e0d 01       		.byte	0x1
 2395 0e0e 00       		.byte	0
 2396 0e0f 11       		.uleb128 0x11
 2397 0e10 DF180000 		.4byte	.LASF292
 2398 0e14 10       		.byte	0x10
 2399 0e15 6B01     		.2byte	0x16b
 2400 0e17 EB0D0000 		.4byte	0xdeb
 2401 0e1b 1B       		.uleb128 0x1b
 2402 0e1c 01       		.byte	0x1
 2403 0e1d 5A000000 		.4byte	0x5a
 2404 0e21 11       		.byte	0x11
 2405 0e22 7E       		.byte	0x7e
 2406 0e23 400E0000 		.4byte	0xe40
 2407 0e27 13       		.uleb128 0x13
 2408 0e28 33050000 		.4byte	.LASF293
 2409 0e2c 00       		.byte	0
 2410 0e2d 13       		.uleb128 0x13
 2411 0e2e 5A0A0000 		.4byte	.LASF294
 2412 0e32 01       		.byte	0x1
 2413 0e33 13       		.uleb128 0x13
 2414 0e34 F80C0000 		.4byte	.LASF295
 2415 0e38 02       		.byte	0x2
 2416 0e39 13       		.uleb128 0x13
 2417 0e3a 7D0E0000 		.4byte	.LASF296
 2418 0e3e 03       		.byte	0x3
 2419 0e3f 00       		.byte	0
 2420 0e40 04       		.uleb128 0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 120


 2421 0e41 0E0A0000 		.4byte	.LASF297
 2422 0e45 11       		.byte	0x11
 2423 0e46 83       		.byte	0x83
 2424 0e47 1B0E0000 		.4byte	0xe1b
 2425 0e4b 1B       		.uleb128 0x1b
 2426 0e4c 01       		.byte	0x1
 2427 0e4d 5A000000 		.4byte	0x5a
 2428 0e51 11       		.byte	0x11
 2429 0e52 87       		.byte	0x87
 2430 0e53 880E0000 		.4byte	0xe88
 2431 0e57 13       		.uleb128 0x13
 2432 0e58 71220000 		.4byte	.LASF298
 2433 0e5c 00       		.byte	0
 2434 0e5d 13       		.uleb128 0x13
 2435 0e5e E2060000 		.4byte	.LASF299
 2436 0e62 01       		.byte	0x1
 2437 0e63 13       		.uleb128 0x13
 2438 0e64 63160000 		.4byte	.LASF300
 2439 0e68 02       		.byte	0x2
 2440 0e69 13       		.uleb128 0x13
 2441 0e6a 90220000 		.4byte	.LASF301
 2442 0e6e 03       		.byte	0x3
 2443 0e6f 13       		.uleb128 0x13
 2444 0e70 BF160000 		.4byte	.LASF302
 2445 0e74 04       		.byte	0x4
 2446 0e75 13       		.uleb128 0x13
 2447 0e76 AD0E0000 		.4byte	.LASF303
 2448 0e7a 05       		.byte	0x5
 2449 0e7b 13       		.uleb128 0x13
 2450 0e7c 38160000 		.4byte	.LASF304
 2451 0e80 06       		.byte	0x6
 2452 0e81 13       		.uleb128 0x13
 2453 0e82 C4010000 		.4byte	.LASF305
 2454 0e86 07       		.byte	0x7
 2455 0e87 00       		.byte	0
 2456 0e88 04       		.uleb128 0x4
 2457 0e89 15040000 		.4byte	.LASF306
 2458 0e8d 11       		.byte	0x11
 2459 0e8e 90       		.byte	0x90
 2460 0e8f 4B0E0000 		.4byte	0xe4b
 2461 0e93 1B       		.uleb128 0x1b
 2462 0e94 01       		.byte	0x1
 2463 0e95 5A000000 		.4byte	0x5a
 2464 0e99 12       		.byte	0x12
 2465 0e9a 29       		.byte	0x29
 2466 0e9b DC0E0000 		.4byte	0xedc
 2467 0e9f 13       		.uleb128 0x13
 2468 0ea0 5E140000 		.4byte	.LASF307
 2469 0ea4 00       		.byte	0
 2470 0ea5 13       		.uleb128 0x13
 2471 0ea6 890F0000 		.4byte	.LASF308
 2472 0eaa 01       		.byte	0x1
 2473 0eab 13       		.uleb128 0x13
 2474 0eac A6030000 		.4byte	.LASF309
 2475 0eb0 02       		.byte	0x2
 2476 0eb1 13       		.uleb128 0x13
 2477 0eb2 72190000 		.4byte	.LASF310
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 121


 2478 0eb6 03       		.byte	0x3
 2479 0eb7 13       		.uleb128 0x13
 2480 0eb8 FC160000 		.4byte	.LASF311
 2481 0ebc 04       		.byte	0x4
 2482 0ebd 13       		.uleb128 0x13
 2483 0ebe 3F0C0000 		.4byte	.LASF312
 2484 0ec2 05       		.byte	0x5
 2485 0ec3 13       		.uleb128 0x13
 2486 0ec4 FE1F0000 		.4byte	.LASF313
 2487 0ec8 06       		.byte	0x6
 2488 0ec9 13       		.uleb128 0x13
 2489 0eca 78030000 		.4byte	.LASF314
 2490 0ece 07       		.byte	0x7
 2491 0ecf 13       		.uleb128 0x13
 2492 0ed0 EE0B0000 		.4byte	.LASF315
 2493 0ed4 08       		.byte	0x8
 2494 0ed5 13       		.uleb128 0x13
 2495 0ed6 D9000000 		.4byte	.LASF316
 2496 0eda 09       		.byte	0x9
 2497 0edb 00       		.byte	0
 2498 0edc 1B       		.uleb128 0x1b
 2499 0edd 01       		.byte	0x1
 2500 0ede 5A000000 		.4byte	0x5a
 2501 0ee2 13       		.byte	0x13
 2502 0ee3 28       		.byte	0x28
 2503 0ee4 070F0000 		.4byte	0xf07
 2504 0ee8 13       		.uleb128 0x13
 2505 0ee9 9A120000 		.4byte	.LASF317
 2506 0eed 00       		.byte	0
 2507 0eee 13       		.uleb128 0x13
 2508 0eef 11000000 		.4byte	.LASF318
 2509 0ef3 01       		.byte	0x1
 2510 0ef4 13       		.uleb128 0x13
 2511 0ef5 97150000 		.4byte	.LASF319
 2512 0ef9 02       		.byte	0x2
 2513 0efa 13       		.uleb128 0x13
 2514 0efb 7F160000 		.4byte	.LASF320
 2515 0eff 03       		.byte	0x3
 2516 0f00 13       		.uleb128 0x13
 2517 0f01 060E0000 		.4byte	.LASF321
 2518 0f05 04       		.byte	0x4
 2519 0f06 00       		.byte	0
 2520 0f07 1B       		.uleb128 0x1b
 2521 0f08 01       		.byte	0x1
 2522 0f09 5A000000 		.4byte	0x5a
 2523 0f0d 13       		.byte	0x13
 2524 0f0e 32       		.byte	0x32
 2525 0f0f 260F0000 		.4byte	0xf26
 2526 0f13 13       		.uleb128 0x13
 2527 0f14 571C0000 		.4byte	.LASF322
 2528 0f18 00       		.byte	0
 2529 0f19 13       		.uleb128 0x13
 2530 0f1a E71C0000 		.4byte	.LASF323
 2531 0f1e 01       		.byte	0x1
 2532 0f1f 13       		.uleb128 0x13
 2533 0f20 B31E0000 		.4byte	.LASF324
 2534 0f24 02       		.byte	0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 122


 2535 0f25 00       		.byte	0
 2536 0f26 12       		.uleb128 0x12
 2537 0f27 01       		.byte	0x1
 2538 0f28 5A000000 		.4byte	0x5a
 2539 0f2c 14       		.byte	0x14
 2540 0f2d B108     		.2byte	0x8b1
 2541 0f2f 460F0000 		.4byte	0xf46
 2542 0f33 13       		.uleb128 0x13
 2543 0f34 9D0E0000 		.4byte	.LASF325
 2544 0f38 00       		.byte	0
 2545 0f39 13       		.uleb128 0x13
 2546 0f3a 091D0000 		.4byte	.LASF326
 2547 0f3e 01       		.byte	0x1
 2548 0f3f 13       		.uleb128 0x13
 2549 0f40 C7000000 		.4byte	.LASF327
 2550 0f44 02       		.byte	0x2
 2551 0f45 00       		.byte	0
 2552 0f46 0B       		.uleb128 0xb
 2553 0f47 14       		.byte	0x14
 2554 0f48 04       		.byte	0x4
 2555 0f49 3B       		.byte	0x3b
 2556 0f4a 8B0F0000 		.4byte	0xf8b
 2557 0f4e 0D       		.uleb128 0xd
 2558 0f4f F4030000 		.4byte	.LASF328
 2559 0f53 04       		.byte	0x4
 2560 0f54 3D       		.byte	0x3d
 2561 0f55 E3000000 		.4byte	0xe3
 2562 0f59 00       		.byte	0
 2563 0f5a 0D       		.uleb128 0xd
 2564 0f5b 8D090000 		.4byte	.LASF329
 2565 0f5f 04       		.byte	0x4
 2566 0f60 3E       		.byte	0x3e
 2567 0f61 E3000000 		.4byte	0xe3
 2568 0f65 04       		.byte	0x4
 2569 0f66 0D       		.uleb128 0xd
 2570 0f67 A8040000 		.4byte	.LASF330
 2571 0f6b 04       		.byte	0x4
 2572 0f6c 3F       		.byte	0x3f
 2573 0f6d 8B0F0000 		.4byte	0xf8b
 2574 0f71 08       		.byte	0x8
 2575 0f72 0D       		.uleb128 0xd
 2576 0f73 50210000 		.4byte	.LASF331
 2577 0f77 04       		.byte	0x4
 2578 0f78 40       		.byte	0x40
 2579 0f79 E3000000 		.4byte	0xe3
 2580 0f7d 0C       		.byte	0xc
 2581 0f7e 0D       		.uleb128 0xd
 2582 0f7f C11F0000 		.4byte	.LASF332
 2583 0f83 04       		.byte	0x4
 2584 0f84 45       		.byte	0x45
 2585 0f85 E3000000 		.4byte	0xe3
 2586 0f89 10       		.byte	0x10
 2587 0f8a 00       		.byte	0
 2588 0f8b 06       		.uleb128 0x6
 2589 0f8c 04       		.byte	0x4
 2590 0f8d 910F0000 		.4byte	0xf91
 2591 0f91 08       		.uleb128 0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 123


 2592 0f92 A80A0000 		.4byte	0xaa8
 2593 0f96 04       		.uleb128 0x4
 2594 0f97 85150000 		.4byte	.LASF333
 2595 0f9b 04       		.byte	0x4
 2596 0f9c 48       		.byte	0x48
 2597 0f9d 460F0000 		.4byte	0xf46
 2598 0fa1 04       		.uleb128 0x4
 2599 0fa2 4B130000 		.4byte	.LASF334
 2600 0fa6 15       		.byte	0x15
 2601 0fa7 62       		.byte	0x62
 2602 0fa8 85000000 		.4byte	0x85
 2603 0fac 04       		.uleb128 0x4
 2604 0fad B4160000 		.4byte	.LASF335
 2605 0fb1 15       		.byte	0x15
 2606 0fb2 69       		.byte	0x69
 2607 0fb3 E3000000 		.4byte	0xe3
 2608 0fb7 04       		.uleb128 0x4
 2609 0fb8 57100000 		.4byte	.LASF336
 2610 0fbc 16       		.byte	0x16
 2611 0fbd 58       		.byte	0x58
 2612 0fbe AC000000 		.4byte	0xac
 2613 0fc2 1B       		.uleb128 0x1b
 2614 0fc3 01       		.byte	0x1
 2615 0fc4 5A000000 		.4byte	0x5a
 2616 0fc8 17       		.byte	0x17
 2617 0fc9 3A       		.byte	0x3a
 2618 0fca E70F0000 		.4byte	0xfe7
 2619 0fce 13       		.uleb128 0x13
 2620 0fcf 0B080000 		.4byte	.LASF337
 2621 0fd3 00       		.byte	0
 2622 0fd4 13       		.uleb128 0x13
 2623 0fd5 2A170000 		.4byte	.LASF338
 2624 0fd9 01       		.byte	0x1
 2625 0fda 13       		.uleb128 0x13
 2626 0fdb 13200000 		.4byte	.LASF339
 2627 0fdf 02       		.byte	0x2
 2628 0fe0 13       		.uleb128 0x13
 2629 0fe1 97010000 		.4byte	.LASF340
 2630 0fe5 03       		.byte	0x3
 2631 0fe6 00       		.byte	0
 2632 0fe7 04       		.uleb128 0x4
 2633 0fe8 A2210000 		.4byte	.LASF341
 2634 0fec 17       		.byte	0x17
 2635 0fed 3F       		.byte	0x3f
 2636 0fee C20F0000 		.4byte	0xfc2
 2637 0ff2 0B       		.uleb128 0xb
 2638 0ff3 08       		.byte	0x8
 2639 0ff4 02       		.byte	0x2
 2640 0ff5 78       		.byte	0x78
 2641 0ff6 13100000 		.4byte	0x1013
 2642 0ffa 0D       		.uleb128 0xd
 2643 0ffb 7E1A0000 		.4byte	.LASF342
 2644 0fff 02       		.byte	0x2
 2645 1000 7A       		.byte	0x7a
 2646 1001 AE000000 		.4byte	0xae
 2647 1005 00       		.byte	0
 2648 1006 0D       		.uleb128 0xd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 124


 2649 1007 1A1D0000 		.4byte	.LASF343
 2650 100b 02       		.byte	0x2
 2651 100c 7B       		.byte	0x7b
 2652 100d E3000000 		.4byte	0xe3
 2653 1011 04       		.byte	0x4
 2654 1012 00       		.byte	0
 2655 1013 04       		.uleb128 0x4
 2656 1014 1D1B0000 		.4byte	.LASF344
 2657 1018 02       		.byte	0x2
 2658 1019 7C       		.byte	0x7c
 2659 101a F20F0000 		.4byte	0xff2
 2660 101e 1B       		.uleb128 0x1b
 2661 101f 01       		.byte	0x1
 2662 1020 5A000000 		.4byte	0x5a
 2663 1024 18       		.byte	0x18
 2664 1025 3C       		.byte	0x3c
 2665 1026 43100000 		.4byte	0x1043
 2666 102a 13       		.uleb128 0x13
 2667 102b 56130000 		.4byte	.LASF345
 2668 102f 00       		.byte	0
 2669 1030 13       		.uleb128 0x13
 2670 1031 6D040000 		.4byte	.LASF346
 2671 1035 01       		.byte	0x1
 2672 1036 13       		.uleb128 0x13
 2673 1037 E70F0000 		.4byte	.LASF347
 2674 103b 02       		.byte	0x2
 2675 103c 13       		.uleb128 0x13
 2676 103d 1F020000 		.4byte	.LASF348
 2677 1041 03       		.byte	0x3
 2678 1042 00       		.byte	0
 2679 1043 04       		.uleb128 0x4
 2680 1044 FA090000 		.4byte	.LASF349
 2681 1048 18       		.byte	0x18
 2682 1049 41       		.byte	0x41
 2683 104a 1E100000 		.4byte	0x101e
 2684 104e 0B       		.uleb128 0xb
 2685 104f 0C       		.byte	0xc
 2686 1050 18       		.byte	0x18
 2687 1051 44       		.byte	0x44
 2688 1052 7B100000 		.4byte	0x107b
 2689 1056 0D       		.uleb128 0xd
 2690 1057 46150000 		.4byte	.LASF350
 2691 105b 18       		.byte	0x18
 2692 105c 46       		.byte	0x46
 2693 105d 43100000 		.4byte	0x1043
 2694 1061 00       		.byte	0
 2695 1062 0D       		.uleb128 0xd
 2696 1063 19110000 		.4byte	.LASF351
 2697 1067 18       		.byte	0x18
 2698 1068 47       		.byte	0x47
 2699 1069 25000000 		.4byte	0x25
 2700 106d 04       		.byte	0x4
 2701 106e 0D       		.uleb128 0xd
 2702 106f 4E1E0000 		.4byte	.LASF352
 2703 1073 18       		.byte	0x18
 2704 1074 48       		.byte	0x48
 2705 1075 E3000000 		.4byte	0xe3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 125


 2706 1079 08       		.byte	0x8
 2707 107a 00       		.byte	0
 2708 107b 04       		.uleb128 0x4
 2709 107c 6A200000 		.4byte	.LASF353
 2710 1080 18       		.byte	0x18
 2711 1081 49       		.byte	0x49
 2712 1082 4E100000 		.4byte	0x104e
 2713 1086 04       		.uleb128 0x4
 2714 1087 64080000 		.4byte	.LASF354
 2715 108b 19       		.byte	0x19
 2716 108c 76       		.byte	0x76
 2717 108d AC000000 		.4byte	0xac
 2718 1091 1C       		.uleb128 0x1c
 2719 1092 981A0000 		.4byte	.LASF358
 2720 1096 02       		.byte	0x2
 2721 1097 8E       		.byte	0x8e
 2722 1098 03       		.byte	0x3
 2723 1099 BF100000 		.4byte	0x10bf
 2724 109d 1D       		.uleb128 0x1d
 2725 109e 66050000 		.4byte	.LASF355
 2726 10a2 02       		.byte	0x2
 2727 10a3 8E       		.byte	0x8e
 2728 10a4 AE000000 		.4byte	0xae
 2729 10a8 1D       		.uleb128 0x1d
 2730 10a9 A10F0000 		.4byte	.LASF356
 2731 10ad 02       		.byte	0x2
 2732 10ae 8E       		.byte	0x8e
 2733 10af E3000000 		.4byte	0xe3
 2734 10b3 1E       		.uleb128 0x1e
 2735 10b4 451A0000 		.4byte	.LASF371
 2736 10b8 02       		.byte	0x2
 2737 10b9 90       		.byte	0x90
 2738 10ba 13100000 		.4byte	0x1013
 2739 10be 00       		.byte	0
 2740 10bf 1F       		.uleb128 0x1f
 2741 10c0 3F1D0000 		.4byte	.LASF373
 2742 10c4 03       		.byte	0x3
 2743 10c5 FB05     		.2byte	0x5fb
 2744 10c7 E3000000 		.4byte	0xe3
 2745 10cb 03       		.byte	0x3
 2746 10cc DD100000 		.4byte	0x10dd
 2747 10d0 20       		.uleb128 0x20
 2748 10d1 3F090000 		.4byte	.LASF357
 2749 10d5 03       		.byte	0x3
 2750 10d6 FB05     		.2byte	0x5fb
 2751 10d8 DD100000 		.4byte	0x10dd
 2752 10dc 00       		.byte	0
 2753 10dd 06       		.uleb128 0x6
 2754 10de 04       		.byte	0x4
 2755 10df E3100000 		.4byte	0x10e3
 2756 10e3 08       		.uleb128 0x8
 2757 10e4 17060000 		.4byte	0x617
 2758 10e8 21       		.uleb128 0x21
 2759 10e9 26150000 		.4byte	.LASF359
 2760 10ed 03       		.byte	0x3
 2761 10ee 1706     		.2byte	0x617
 2762 10f0 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 126


 2763 10f1 0E110000 		.4byte	0x110e
 2764 10f5 20       		.uleb128 0x20
 2765 10f6 3F090000 		.4byte	.LASF357
 2766 10fa 03       		.byte	0x3
 2767 10fb 1706     		.2byte	0x617
 2768 10fd 0E110000 		.4byte	0x110e
 2769 1101 20       		.uleb128 0x20
 2770 1102 BA220000 		.4byte	.LASF167
 2771 1106 03       		.byte	0x3
 2772 1107 1706     		.2byte	0x617
 2773 1109 E3000000 		.4byte	0xe3
 2774 110d 00       		.byte	0
 2775 110e 06       		.uleb128 0x6
 2776 110f 04       		.byte	0x4
 2777 1110 17060000 		.4byte	0x617
 2778 1114 21       		.uleb128 0x21
 2779 1115 421E0000 		.4byte	.LASF360
 2780 1119 05       		.byte	0x5
 2781 111a 4503     		.2byte	0x345
 2782 111c 03       		.byte	0x3
 2783 111d 3A110000 		.4byte	0x113a
 2784 1121 20       		.uleb128 0x20
 2785 1122 3F090000 		.4byte	.LASF357
 2786 1126 05       		.byte	0x5
 2787 1127 4503     		.2byte	0x345
 2788 1129 3A110000 		.4byte	0x113a
 2789 112d 20       		.uleb128 0x20
 2790 112e B51D0000 		.4byte	.LASF361
 2791 1132 05       		.byte	0x5
 2792 1133 4503     		.2byte	0x345
 2793 1135 E3000000 		.4byte	0xe3
 2794 1139 00       		.byte	0
 2795 113a 06       		.uleb128 0x6
 2796 113b 04       		.byte	0x4
 2797 113c 26020000 		.4byte	0x226
 2798 1140 22       		.uleb128 0x22
 2799 1141 E90E0000 		.4byte	.LASF362
 2800 1145 04       		.byte	0x4
 2801 1146 2305     		.2byte	0x523
 2802 1148 03       		.byte	0x3
 2803 1149 22       		.uleb128 0x22
 2804 114a B8210000 		.4byte	.LASF363
 2805 114e 04       		.byte	0x4
 2806 114f 4605     		.2byte	0x546
 2807 1151 03       		.byte	0x3
 2808 1152 21       		.uleb128 0x21
 2809 1153 AD1A0000 		.4byte	.LASF364
 2810 1157 05       		.byte	0x5
 2811 1158 2703     		.2byte	0x327
 2812 115a 03       		.byte	0x3
 2813 115b 78110000 		.4byte	0x1178
 2814 115f 20       		.uleb128 0x20
 2815 1160 3F090000 		.4byte	.LASF357
 2816 1164 05       		.byte	0x5
 2817 1165 2703     		.2byte	0x327
 2818 1167 3A110000 		.4byte	0x113a
 2819 116b 20       		.uleb128 0x20
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 127


 2820 116c B51D0000 		.4byte	.LASF361
 2821 1170 05       		.byte	0x5
 2822 1171 2703     		.2byte	0x327
 2823 1173 E3000000 		.4byte	0xe3
 2824 1177 00       		.byte	0
 2825 1178 23       		.uleb128 0x23
 2826 1179 E2110000 		.4byte	.LASF367
 2827 117d 01       		.byte	0x1
 2828 117e 2001     		.2byte	0x120
 2829 1180 00000000 		.4byte	.LFB716
 2830 1184 44000000 		.4byte	.LFE716-.LFB716
 2831 1188 01       		.uleb128 0x1
 2832 1189 9C       		.byte	0x9c
 2833 118a 2B120000 		.4byte	0x122b
 2834 118e 24       		.uleb128 0x24
 2835 118f E41B0000 		.4byte	.LASF370
 2836 1193 01       		.byte	0x1
 2837 1194 2001     		.2byte	0x120
 2838 1196 86100000 		.4byte	0x1086
 2839 119a 00000000 		.4byte	.LLST0
 2840 119e 25       		.uleb128 0x25
 2841 119f D1180000 		.4byte	.LASF365
 2842 11a3 01       		.byte	0x1
 2843 11a4 2301     		.2byte	0x123
 2844 11a6 A10F0000 		.4byte	0xfa1
 2845 11aa 21000000 		.4byte	.LLST1
 2846 11ae 26       		.uleb128 0x26
 2847 11af D9100000 		.4byte	.LASF366
 2848 11b3 01       		.byte	0x1
 2849 11b4 2901     		.2byte	0x129
 2850 11b6 E70F0000 		.4byte	0xfe7
 2851 11ba 02       		.uleb128 0x2
 2852 11bb 91       		.byte	0x91
 2853 11bc 77       		.sleb128 -9
 2854 11bd 27       		.uleb128 0x27
 2855 11be 91100000 		.4byte	0x1091
 2856 11c2 1C000000 		.4byte	.LBB30
 2857 11c6 14000000 		.4byte	.LBE30-.LBB30
 2858 11ca 01       		.byte	0x1
 2859 11cb 3001     		.2byte	0x130
 2860 11cd 10120000 		.4byte	0x1210
 2861 11d1 28       		.uleb128 0x28
 2862 11d2 A8100000 		.4byte	0x10a8
 2863 11d6 34000000 		.4byte	.LLST2
 2864 11da 28       		.uleb128 0x28
 2865 11db 9D100000 		.4byte	0x109d
 2866 11df 48000000 		.4byte	.LLST3
 2867 11e3 29       		.uleb128 0x29
 2868 11e4 1C000000 		.4byte	.LBB31
 2869 11e8 14000000 		.4byte	.LBE31-.LBB31
 2870 11ec 2A       		.uleb128 0x2a
 2871 11ed B3100000 		.4byte	0x10b3
 2872 11f1 02       		.uleb128 0x2
 2873 11f2 91       		.byte	0x91
 2874 11f3 6C       		.sleb128 -20
 2875 11f4 2B       		.uleb128 0x2b
 2876 11f5 30000000 		.4byte	.LVL5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 128


 2877 11f9 EF190000 		.4byte	0x19ef
 2878 11fd 2C       		.uleb128 0x2c
 2879 11fe 01       		.uleb128 0x1
 2880 11ff 51       		.byte	0x51
 2881 1200 02       		.uleb128 0x2
 2882 1201 91       		.byte	0x91
 2883 1202 6C       		.sleb128 -20
 2884 1203 2C       		.uleb128 0x2c
 2885 1204 01       		.uleb128 0x1
 2886 1205 52       		.byte	0x52
 2887 1206 01       		.uleb128 0x1
 2888 1207 30       		.byte	0x30
 2889 1208 2C       		.uleb128 0x2c
 2890 1209 01       		.uleb128 0x1
 2891 120a 53       		.byte	0x53
 2892 120b 01       		.uleb128 0x1
 2893 120c 30       		.byte	0x30
 2894 120d 00       		.byte	0
 2895 120e 00       		.byte	0
 2896 120f 00       		.byte	0
 2897 1210 2B       		.uleb128 0x2b
 2898 1211 18000000 		.4byte	.LVL2
 2899 1215 EF190000 		.4byte	0x19ef
 2900 1219 2C       		.uleb128 0x2c
 2901 121a 01       		.uleb128 0x1
 2902 121b 51       		.byte	0x51
 2903 121c 02       		.uleb128 0x2
 2904 121d 91       		.byte	0x91
 2905 121e 77       		.sleb128 -9
 2906 121f 2C       		.uleb128 0x2c
 2907 1220 01       		.uleb128 0x1
 2908 1221 52       		.byte	0x52
 2909 1222 01       		.uleb128 0x1
 2910 1223 30       		.byte	0x30
 2911 1224 2C       		.uleb128 0x2c
 2912 1225 01       		.uleb128 0x1
 2913 1226 53       		.byte	0x53
 2914 1227 01       		.uleb128 0x1
 2915 1228 30       		.byte	0x30
 2916 1229 00       		.byte	0
 2917 122a 00       		.byte	0
 2918 122b 23       		.uleb128 0x23
 2919 122c 65100000 		.4byte	.LASF368
 2920 1230 01       		.byte	0x1
 2921 1231 4301     		.2byte	0x143
 2922 1233 00000000 		.4byte	.LFB717
 2923 1237 7C000000 		.4byte	.LFE717-.LFB717
 2924 123b 01       		.uleb128 0x1
 2925 123c 9C       		.byte	0x9c
 2926 123d 53130000 		.4byte	0x1353
 2927 1241 25       		.uleb128 0x25
 2928 1242 D1180000 		.4byte	.LASF365
 2929 1246 01       		.byte	0x1
 2930 1247 4601     		.2byte	0x146
 2931 1249 A10F0000 		.4byte	0xfa1
 2932 124d 60000000 		.4byte	.LLST4
 2933 1251 27       		.uleb128 0x27
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 129


 2934 1252 91100000 		.4byte	0x1091
 2935 1256 34000000 		.4byte	.LBB32
 2936 125a 16000000 		.4byte	.LBE32-.LBB32
 2937 125e 01       		.byte	0x1
 2938 125f 5601     		.2byte	0x156
 2939 1261 A4120000 		.4byte	0x12a4
 2940 1265 28       		.uleb128 0x28
 2941 1266 A8100000 		.4byte	0x10a8
 2942 126a 73000000 		.4byte	.LLST5
 2943 126e 28       		.uleb128 0x28
 2944 126f 9D100000 		.4byte	0x109d
 2945 1273 87000000 		.4byte	.LLST6
 2946 1277 29       		.uleb128 0x29
 2947 1278 34000000 		.4byte	.LBB33
 2948 127c 16000000 		.4byte	.LBE33-.LBB33
 2949 1280 2A       		.uleb128 0x2a
 2950 1281 B3100000 		.4byte	0x10b3
 2951 1285 02       		.uleb128 0x2
 2952 1286 91       		.byte	0x91
 2953 1287 70       		.sleb128 -16
 2954 1288 2B       		.uleb128 0x2b
 2955 1289 48000000 		.4byte	.LVL11
 2956 128d EF190000 		.4byte	0x19ef
 2957 1291 2C       		.uleb128 0x2c
 2958 1292 01       		.uleb128 0x1
 2959 1293 51       		.byte	0x51
 2960 1294 02       		.uleb128 0x2
 2961 1295 91       		.byte	0x91
 2962 1296 70       		.sleb128 -16
 2963 1297 2C       		.uleb128 0x2c
 2964 1298 01       		.uleb128 0x1
 2965 1299 52       		.byte	0x52
 2966 129a 01       		.uleb128 0x1
 2967 129b 30       		.byte	0x30
 2968 129c 2C       		.uleb128 0x2c
 2969 129d 01       		.uleb128 0x1
 2970 129e 53       		.byte	0x53
 2971 129f 01       		.uleb128 0x1
 2972 12a0 30       		.byte	0x30
 2973 12a1 00       		.byte	0
 2974 12a2 00       		.byte	0
 2975 12a3 00       		.byte	0
 2976 12a4 27       		.uleb128 0x27
 2977 12a5 91100000 		.4byte	0x1091
 2978 12a9 4A000000 		.4byte	.LBB34
 2979 12ad 14000000 		.4byte	.LBE34-.LBB34
 2980 12b1 01       		.byte	0x1
 2981 12b2 5B01     		.2byte	0x15b
 2982 12b4 F7120000 		.4byte	0x12f7
 2983 12b8 28       		.uleb128 0x28
 2984 12b9 A8100000 		.4byte	0x10a8
 2985 12bd 9F000000 		.4byte	.LLST7
 2986 12c1 28       		.uleb128 0x28
 2987 12c2 9D100000 		.4byte	0x109d
 2988 12c6 B3000000 		.4byte	.LLST8
 2989 12ca 29       		.uleb128 0x29
 2990 12cb 4A000000 		.4byte	.LBB35
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 130


 2991 12cf 14000000 		.4byte	.LBE35-.LBB35
 2992 12d3 2A       		.uleb128 0x2a
 2993 12d4 B3100000 		.4byte	0x10b3
 2994 12d8 02       		.uleb128 0x2
 2995 12d9 91       		.byte	0x91
 2996 12da 70       		.sleb128 -16
 2997 12db 2B       		.uleb128 0x2b
 2998 12dc 5E000000 		.4byte	.LVL13
 2999 12e0 EF190000 		.4byte	0x19ef
 3000 12e4 2C       		.uleb128 0x2c
 3001 12e5 01       		.uleb128 0x1
 3002 12e6 51       		.byte	0x51
 3003 12e7 02       		.uleb128 0x2
 3004 12e8 91       		.byte	0x91
 3005 12e9 70       		.sleb128 -16
 3006 12ea 2C       		.uleb128 0x2c
 3007 12eb 01       		.uleb128 0x1
 3008 12ec 52       		.byte	0x52
 3009 12ed 01       		.uleb128 0x1
 3010 12ee 30       		.byte	0x30
 3011 12ef 2C       		.uleb128 0x2c
 3012 12f0 01       		.uleb128 0x1
 3013 12f1 53       		.byte	0x53
 3014 12f2 01       		.uleb128 0x1
 3015 12f3 30       		.byte	0x30
 3016 12f4 00       		.byte	0
 3017 12f5 00       		.byte	0
 3018 12f6 00       		.byte	0
 3019 12f7 2D       		.uleb128 0x2d
 3020 12f8 16000000 		.4byte	.LVL6
 3021 12fc FB190000 		.4byte	0x19fb
 3022 1300 29130000 		.4byte	0x1329
 3023 1304 2C       		.uleb128 0x2c
 3024 1305 01       		.uleb128 0x1
 3025 1306 50       		.byte	0x50
 3026 1307 05       		.uleb128 0x5
 3027 1308 03       		.byte	0x3
 3028 1309 3C000000 		.4byte	.LC1
 3029 130d 2C       		.uleb128 0x2c
 3030 130e 01       		.uleb128 0x1
 3031 130f 51       		.byte	0x51
 3032 1310 03       		.uleb128 0x3
 3033 1311 0A       		.byte	0xa
 3034 1312 1027     		.2byte	0x2710
 3035 1314 2C       		.uleb128 0x2c
 3036 1315 01       		.uleb128 0x1
 3037 1316 52       		.byte	0x52
 3038 1317 01       		.uleb128 0x1
 3039 1318 31       		.byte	0x31
 3040 1319 2C       		.uleb128 0x2c
 3041 131a 01       		.uleb128 0x1
 3042 131b 53       		.byte	0x53
 3043 131c 01       		.uleb128 0x1
 3044 131d 30       		.byte	0x30
 3045 131e 2C       		.uleb128 0x2c
 3046 131f 02       		.uleb128 0x2
 3047 1320 7D       		.byte	0x7d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 131


 3048 1321 00       		.sleb128 0
 3049 1322 05       		.uleb128 0x5
 3050 1323 03       		.byte	0x3
 3051 1324 00000000 		.4byte	TemperatureTimerCallback
 3052 1328 00       		.byte	0
 3053 1329 2E       		.uleb128 0x2e
 3054 132a 22000000 		.4byte	.LVL7
 3055 132e 071A0000 		.4byte	0x1a07
 3056 1332 2B       		.uleb128 0x2b
 3057 1333 30000000 		.4byte	.LVL8
 3058 1337 131A0000 		.4byte	0x1a13
 3059 133b 2C       		.uleb128 0x2c
 3060 133c 01       		.uleb128 0x1
 3061 133d 50       		.byte	0x50
 3062 133e 02       		.uleb128 0x2
 3063 133f 74       		.byte	0x74
 3064 1340 00       		.sleb128 0
 3065 1341 2C       		.uleb128 0x2c
 3066 1342 01       		.uleb128 0x1
 3067 1343 51       		.byte	0x51
 3068 1344 01       		.uleb128 0x1
 3069 1345 31       		.byte	0x31
 3070 1346 2C       		.uleb128 0x2c
 3071 1347 01       		.uleb128 0x1
 3072 1348 53       		.byte	0x53
 3073 1349 01       		.uleb128 0x1
 3074 134a 30       		.byte	0x30
 3075 134b 2C       		.uleb128 0x2c
 3076 134c 02       		.uleb128 0x2
 3077 134d 7D       		.byte	0x7d
 3078 134e 00       		.sleb128 0
 3079 134f 01       		.uleb128 0x1
 3080 1350 30       		.byte	0x30
 3081 1351 00       		.byte	0
 3082 1352 00       		.byte	0
 3083 1353 23       		.uleb128 0x23
 3084 1354 66020000 		.4byte	.LASF369
 3085 1358 01       		.byte	0x1
 3086 1359 6C01     		.2byte	0x16c
 3087 135b 00000000 		.4byte	.LFB718
 3088 135f 40000000 		.4byte	.LFE718-.LFB718
 3089 1363 01       		.uleb128 0x1
 3090 1364 9C       		.byte	0x9c
 3091 1365 04140000 		.4byte	0x1404
 3092 1369 24       		.uleb128 0x24
 3093 136a C0200000 		.4byte	.LASF107
 3094 136e 01       		.byte	0x1
 3095 136f 6C01     		.2byte	0x16c
 3096 1371 AC0F0000 		.4byte	0xfac
 3097 1375 CB000000 		.4byte	.LLST9
 3098 1379 25       		.uleb128 0x25
 3099 137a D1180000 		.4byte	.LASF365
 3100 137e 01       		.byte	0x1
 3101 137f 6F01     		.2byte	0x16f
 3102 1381 A10F0000 		.4byte	0xfa1
 3103 1385 F7000000 		.4byte	.LLST10
 3104 1389 27       		.uleb128 0x27
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 132


 3105 138a 91100000 		.4byte	0x1091
 3106 138e 1A000000 		.4byte	.LBB36
 3107 1392 14000000 		.4byte	.LBE36-.LBB36
 3108 1396 01       		.byte	0x1
 3109 1397 7701     		.2byte	0x177
 3110 1399 DC130000 		.4byte	0x13dc
 3111 139d 28       		.uleb128 0x28
 3112 139e A8100000 		.4byte	0x10a8
 3113 13a2 0A010000 		.4byte	.LLST11
 3114 13a6 28       		.uleb128 0x28
 3115 13a7 9D100000 		.4byte	0x109d
 3116 13ab 1E010000 		.4byte	.LLST12
 3117 13af 29       		.uleb128 0x29
 3118 13b0 1A000000 		.4byte	.LBB37
 3119 13b4 14000000 		.4byte	.LBE37-.LBB37
 3120 13b8 2A       		.uleb128 0x2a
 3121 13b9 B3100000 		.4byte	0x10b3
 3122 13bd 02       		.uleb128 0x2
 3123 13be 91       		.byte	0x91
 3124 13bf 70       		.sleb128 -16
 3125 13c0 2B       		.uleb128 0x2b
 3126 13c1 2E000000 		.4byte	.LVL19
 3127 13c5 EF190000 		.4byte	0x19ef
 3128 13c9 2C       		.uleb128 0x2c
 3129 13ca 01       		.uleb128 0x1
 3130 13cb 51       		.byte	0x51
 3131 13cc 02       		.uleb128 0x2
 3132 13cd 91       		.byte	0x91
 3133 13ce 70       		.sleb128 -16
 3134 13cf 2C       		.uleb128 0x2c
 3135 13d0 01       		.uleb128 0x1
 3136 13d1 52       		.byte	0x52
 3137 13d2 01       		.uleb128 0x1
 3138 13d3 30       		.byte	0x30
 3139 13d4 2C       		.uleb128 0x2c
 3140 13d5 01       		.uleb128 0x1
 3141 13d6 53       		.byte	0x53
 3142 13d7 01       		.uleb128 0x1
 3143 13d8 30       		.byte	0x30
 3144 13d9 00       		.byte	0
 3145 13da 00       		.byte	0
 3146 13db 00       		.byte	0
 3147 13dc 2B       		.uleb128 0x2b
 3148 13dd 16000000 		.4byte	.LVL16
 3149 13e1 131A0000 		.4byte	0x1a13
 3150 13e5 2C       		.uleb128 0x2c
 3151 13e6 01       		.uleb128 0x1
 3152 13e7 50       		.byte	0x50
 3153 13e8 02       		.uleb128 0x2
 3154 13e9 74       		.byte	0x74
 3155 13ea 00       		.sleb128 0
 3156 13eb 2C       		.uleb128 0x2c
 3157 13ec 01       		.uleb128 0x1
 3158 13ed 51       		.byte	0x51
 3159 13ee 01       		.uleb128 0x1
 3160 13ef 34       		.byte	0x34
 3161 13f0 2C       		.uleb128 0x2c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 133


 3162 13f1 01       		.uleb128 0x1
 3163 13f2 52       		.byte	0x52
 3164 13f3 03       		.uleb128 0x3
 3165 13f4 F3       		.byte	0xf3
 3166 13f5 01       		.uleb128 0x1
 3167 13f6 50       		.byte	0x50
 3168 13f7 2C       		.uleb128 0x2c
 3169 13f8 01       		.uleb128 0x1
 3170 13f9 53       		.byte	0x53
 3171 13fa 01       		.uleb128 0x1
 3172 13fb 30       		.byte	0x30
 3173 13fc 2C       		.uleb128 0x2c
 3174 13fd 02       		.uleb128 0x2
 3175 13fe 7D       		.byte	0x7d
 3176 13ff 00       		.sleb128 0
 3177 1400 01       		.uleb128 0x1
 3178 1401 30       		.byte	0x30
 3179 1402 00       		.byte	0
 3180 1403 00       		.byte	0
 3181 1404 2F       		.uleb128 0x2f
 3182 1405 F9010000 		.4byte	.LASF420
 3183 1409 01       		.byte	0x1
 3184 140a F4       		.byte	0xf4
 3185 140b 00000000 		.4byte	.LFB715
 3186 140f 6C000000 		.4byte	.LFE715-.LFB715
 3187 1413 01       		.uleb128 0x1
 3188 1414 9C       		.byte	0x9c
 3189 1415 28150000 		.4byte	0x1528
 3190 1419 30       		.uleb128 0x30
 3191 141a D1180000 		.4byte	.LASF365
 3192 141e 01       		.byte	0x1
 3193 141f F7       		.byte	0xf7
 3194 1420 A10F0000 		.4byte	0xfa1
 3195 1424 36010000 		.4byte	.LLST13
 3196 1428 1E       		.uleb128 0x1e
 3197 1429 840B0000 		.4byte	.LASF372
 3198 142d 01       		.byte	0x1
 3199 142e FA       		.byte	0xfa
 3200 142f E3000000 		.4byte	0xe3
 3201 1433 26       		.uleb128 0x26
 3202 1434 D9100000 		.4byte	.LASF366
 3203 1438 01       		.byte	0x1
 3204 1439 0701     		.2byte	0x107
 3205 143b E70F0000 		.4byte	0xfe7
 3206 143f 02       		.uleb128 0x2
 3207 1440 91       		.byte	0x91
 3208 1441 77       		.sleb128 -9
 3209 1442 31       		.uleb128 0x31
 3210 1443 BF100000 		.4byte	0x10bf
 3211 1447 04000000 		.4byte	.LBB38
 3212 144b 06000000 		.4byte	.LBE38-.LBB38
 3213 144f 01       		.byte	0x1
 3214 1450 FD       		.byte	0xfd
 3215 1451 5F140000 		.4byte	0x145f
 3216 1455 28       		.uleb128 0x28
 3217 1456 D0100000 		.4byte	0x10d0
 3218 145a 49010000 		.4byte	.LLST14
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 134


 3219 145e 00       		.byte	0
 3220 145f 27       		.uleb128 0x27
 3221 1460 E8100000 		.4byte	0x10e8
 3222 1464 0A000000 		.4byte	.LBB40
 3223 1468 18000000 		.4byte	.LBE40-.LBB40
 3224 146c 01       		.byte	0x1
 3225 146d 0001     		.2byte	0x100
 3226 146f 9C140000 		.4byte	0x149c
 3227 1473 32       		.uleb128 0x32
 3228 1474 01110000 		.4byte	0x1101
 3229 1478 28       		.uleb128 0x28
 3230 1479 F5100000 		.4byte	0x10f5
 3231 147d 61010000 		.4byte	.LLST15
 3232 1481 2B       		.uleb128 0x2b
 3233 1482 18000000 		.4byte	.LVL22
 3234 1486 1F1A0000 		.4byte	0x1a1f
 3235 148a 2C       		.uleb128 0x2c
 3236 148b 01       		.uleb128 0x1
 3237 148c 50       		.byte	0x50
 3238 148d 05       		.uleb128 0x5
 3239 148e 03       		.byte	0x3
 3240 148f D4000000 		.4byte	.LC5
 3241 1493 2C       		.uleb128 0x2c
 3242 1494 01       		.uleb128 0x1
 3243 1495 51       		.byte	0x51
 3244 1496 03       		.uleb128 0x3
 3245 1497 0A       		.byte	0xa
 3246 1498 1906     		.2byte	0x619
 3247 149a 00       		.byte	0
 3248 149b 00       		.byte	0
 3249 149c 27       		.uleb128 0x27
 3250 149d BF100000 		.4byte	0x10bf
 3251 14a1 22000000 		.4byte	.LBB42
 3252 14a5 04000000 		.4byte	.LBE42-.LBB42
 3253 14a9 01       		.byte	0x1
 3254 14aa 0401     		.2byte	0x104
 3255 14ac BA140000 		.4byte	0x14ba
 3256 14b0 28       		.uleb128 0x28
 3257 14b1 D0100000 		.4byte	0x10d0
 3258 14b5 79010000 		.4byte	.LLST16
 3259 14b9 00       		.byte	0
 3260 14ba 27       		.uleb128 0x27
 3261 14bb 91100000 		.4byte	0x1091
 3262 14bf 3E000000 		.4byte	.LBB44
 3263 14c3 14000000 		.4byte	.LBE44-.LBB44
 3264 14c7 01       		.byte	0x1
 3265 14c8 0E01     		.2byte	0x10e
 3266 14ca 0D150000 		.4byte	0x150d
 3267 14ce 28       		.uleb128 0x28
 3268 14cf A8100000 		.4byte	0x10a8
 3269 14d3 91010000 		.4byte	.LLST17
 3270 14d7 28       		.uleb128 0x28
 3271 14d8 9D100000 		.4byte	0x109d
 3272 14dc A5010000 		.4byte	.LLST18
 3273 14e0 29       		.uleb128 0x29
 3274 14e1 3E000000 		.4byte	.LBB45
 3275 14e5 14000000 		.4byte	.LBE45-.LBB45
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 135


 3276 14e9 2A       		.uleb128 0x2a
 3277 14ea B3100000 		.4byte	0x10b3
 3278 14ee 02       		.uleb128 0x2
 3279 14ef 91       		.byte	0x91
 3280 14f0 6C       		.sleb128 -20
 3281 14f1 2B       		.uleb128 0x2b
 3282 14f2 52000000 		.4byte	.LVL28
 3283 14f6 EF190000 		.4byte	0x19ef
 3284 14fa 2C       		.uleb128 0x2c
 3285 14fb 01       		.uleb128 0x1
 3286 14fc 51       		.byte	0x51
 3287 14fd 02       		.uleb128 0x2
 3288 14fe 91       		.byte	0x91
 3289 14ff 6C       		.sleb128 -20
 3290 1500 2C       		.uleb128 0x2c
 3291 1501 01       		.uleb128 0x1
 3292 1502 52       		.byte	0x52
 3293 1503 01       		.uleb128 0x1
 3294 1504 30       		.byte	0x30
 3295 1505 2C       		.uleb128 0x2c
 3296 1506 01       		.uleb128 0x1
 3297 1507 53       		.byte	0x53
 3298 1508 01       		.uleb128 0x1
 3299 1509 30       		.byte	0x30
 3300 150a 00       		.byte	0
 3301 150b 00       		.byte	0
 3302 150c 00       		.byte	0
 3303 150d 2B       		.uleb128 0x2b
 3304 150e 3A000000 		.4byte	.LVL25
 3305 1512 2B1A0000 		.4byte	0x1a2b
 3306 1516 2C       		.uleb128 0x2c
 3307 1517 01       		.uleb128 0x1
 3308 1518 51       		.byte	0x51
 3309 1519 02       		.uleb128 0x2
 3310 151a 91       		.byte	0x91
 3311 151b 77       		.sleb128 -9
 3312 151c 2C       		.uleb128 0x2c
 3313 151d 01       		.uleb128 0x1
 3314 151e 52       		.byte	0x52
 3315 151f 01       		.uleb128 0x1
 3316 1520 30       		.byte	0x30
 3317 1521 2C       		.uleb128 0x2c
 3318 1522 01       		.uleb128 0x1
 3319 1523 53       		.byte	0x53
 3320 1524 01       		.uleb128 0x1
 3321 1525 30       		.byte	0x30
 3322 1526 00       		.byte	0
 3323 1527 00       		.byte	0
 3324 1528 1F       		.uleb128 0x1f
 3325 1529 ED1D0000 		.4byte	.LASF374
 3326 152d 04       		.byte	0x4
 3327 152e D503     		.2byte	0x3d5
 3328 1530 CD000000 		.4byte	0xcd
 3329 1534 03       		.byte	0x3
 3330 1535 46150000 		.4byte	0x1546
 3331 1539 20       		.uleb128 0x20
 3332 153a E40E0000 		.4byte	.LASF375
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 136


 3333 153e 04       		.byte	0x4
 3334 153f D503     		.2byte	0x3d5
 3335 1541 E3000000 		.4byte	0xe3
 3336 1545 00       		.byte	0
 3337 1546 33       		.uleb128 0x33
 3338 1547 B0080000 		.4byte	.LASF421
 3339 154b 01       		.byte	0x1
 3340 154c 6B       		.byte	0x6b
 3341 154d 00000000 		.4byte	.LFB714
 3342 1551 BC010000 		.4byte	.LFE714-.LFB714
 3343 1555 01       		.uleb128 0x1
 3344 1556 9C       		.byte	0x9c
 3345 1557 96180000 		.4byte	0x1896
 3346 155b 34       		.uleb128 0x34
 3347 155c 9C190000 		.4byte	.LASF376
 3348 1560 01       		.byte	0x1
 3349 1561 6B       		.byte	0x6b
 3350 1562 AC000000 		.4byte	0xac
 3351 1566 BD010000 		.4byte	.LLST19
 3352 156a 35       		.uleb128 0x35
 3353 156b D9100000 		.4byte	.LASF366
 3354 156f 01       		.byte	0x1
 3355 1570 6E       		.byte	0x6e
 3356 1571 E70F0000 		.4byte	0xfe7
 3357 1575 02       		.uleb128 0x2
 3358 1576 91       		.byte	0x91
 3359 1577 67       		.sleb128 -25
 3360 1578 30       		.uleb128 0x30
 3361 1579 D1180000 		.4byte	.LASF365
 3362 157d 01       		.byte	0x1
 3363 157e 71       		.byte	0x71
 3364 157f A10F0000 		.4byte	0xfa1
 3365 1583 DE010000 		.4byte	.LLST20
 3366 1587 30       		.uleb128 0x30
 3367 1588 591D0000 		.4byte	.LASF377
 3368 158c 01       		.byte	0x1
 3369 158d 75       		.byte	0x75
 3370 158e 2E060000 		.4byte	0x62e
 3371 1592 28020000 		.4byte	.LLST21
 3372 1596 1E       		.uleb128 0x1e
 3373 1597 54080000 		.4byte	.LASF378
 3374 159b 01       		.byte	0x1
 3375 159c 78       		.byte	0x78
 3376 159d CD000000 		.4byte	0xcd
 3377 15a1 1E       		.uleb128 0x1e
 3378 15a2 B21F0000 		.4byte	.LASF379
 3379 15a6 01       		.byte	0x1
 3380 15a7 78       		.byte	0x78
 3381 15a8 CD000000 		.4byte	0xcd
 3382 15ac 30       		.uleb128 0x30
 3383 15ad 25080000 		.4byte	.LASF380
 3384 15b1 01       		.byte	0x1
 3385 15b2 79       		.byte	0x79
 3386 15b3 25000000 		.4byte	0x25
 3387 15b7 6A020000 		.4byte	.LLST22
 3388 15bb 35       		.uleb128 0x35
 3389 15bc B8010000 		.4byte	.LASF381
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 137


 3390 15c0 01       		.byte	0x1
 3391 15c1 79       		.byte	0x79
 3392 15c2 25000000 		.4byte	0x25
 3393 15c6 02       		.uleb128 0x2
 3394 15c7 91       		.byte	0x91
 3395 15c8 60       		.sleb128 -32
 3396 15c9 35       		.uleb128 0x35
 3397 15ca 790A0000 		.4byte	.LASF382
 3398 15ce 01       		.byte	0x1
 3399 15cf 7C       		.byte	0x7c
 3400 15d0 7B100000 		.4byte	0x107b
 3401 15d4 02       		.uleb128 0x2
 3402 15d5 91       		.byte	0x91
 3403 15d6 54       		.sleb128 -44
 3404 15d7 31       		.uleb128 0x31
 3405 15d8 28150000 		.4byte	0x1528
 3406 15dc 5C000000 		.4byte	.LBB62
 3407 15e0 28000000 		.4byte	.LBE62-.LBB62
 3408 15e4 01       		.byte	0x1
 3409 15e5 A7       		.byte	0xa7
 3410 15e6 2A160000 		.4byte	0x162a
 3411 15ea 28       		.uleb128 0x28
 3412 15eb 39150000 		.4byte	0x1539
 3413 15ef 90020000 		.4byte	.LLST23
 3414 15f3 2D       		.uleb128 0x2d
 3415 15f4 78000000 		.4byte	.LVL46
 3416 15f8 1F1A0000 		.4byte	0x1a1f
 3417 15fc 11160000 		.4byte	0x1611
 3418 1600 2C       		.uleb128 0x2c
 3419 1601 01       		.uleb128 0x1
 3420 1602 50       		.byte	0x50
 3421 1603 05       		.uleb128 0x5
 3422 1604 03       		.byte	0x3
 3423 1605 10010000 		.4byte	.LC6
 3424 1609 2C       		.uleb128 0x2c
 3425 160a 01       		.uleb128 0x1
 3426 160b 51       		.byte	0x51
 3427 160c 03       		.uleb128 0x3
 3428 160d 0A       		.byte	0xa
 3429 160e D803     		.2byte	0x3d8
 3430 1610 00       		.byte	0
 3431 1611 2B       		.uleb128 0x2b
 3432 1612 80000000 		.4byte	.LVL47
 3433 1616 371A0000 		.4byte	0x1a37
 3434 161a 2C       		.uleb128 0x2c
 3435 161b 01       		.uleb128 0x1
 3436 161c 50       		.byte	0x50
 3437 161d 05       		.uleb128 0x5
 3438 161e 0C       		.byte	0xc
 3439 161f 00001D41 		.4byte	0x411d0000
 3440 1623 2C       		.uleb128 0x2c
 3441 1624 01       		.uleb128 0x1
 3442 1625 51       		.byte	0x51
 3443 1626 01       		.uleb128 0x1
 3444 1627 30       		.byte	0x30
 3445 1628 00       		.byte	0
 3446 1629 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 138


 3447 162a 31       		.uleb128 0x31
 3448 162b 28150000 		.4byte	0x1528
 3449 162f 84000000 		.4byte	.LBB64
 3450 1633 2C000000 		.4byte	.LBE64-.LBB64
 3451 1637 01       		.byte	0x1
 3452 1638 A8       		.byte	0xa8
 3453 1639 7A160000 		.4byte	0x167a
 3454 163d 28       		.uleb128 0x28
 3455 163e 39150000 		.4byte	0x1539
 3456 1642 A4020000 		.4byte	.LLST24
 3457 1646 2D       		.uleb128 0x2d
 3458 1647 A2000000 		.4byte	.LVL49
 3459 164b 1F1A0000 		.4byte	0x1a1f
 3460 164f 64160000 		.4byte	0x1664
 3461 1653 2C       		.uleb128 0x2c
 3462 1654 01       		.uleb128 0x1
 3463 1655 50       		.byte	0x50
 3464 1656 05       		.uleb128 0x5
 3465 1657 03       		.byte	0x3
 3466 1658 10010000 		.4byte	.LC6
 3467 165c 2C       		.uleb128 0x2c
 3468 165d 01       		.uleb128 0x1
 3469 165e 51       		.byte	0x51
 3470 165f 03       		.uleb128 0x3
 3471 1660 0A       		.byte	0xa
 3472 1661 D803     		.2byte	0x3d8
 3473 1663 00       		.byte	0
 3474 1664 2B       		.uleb128 0x2b
 3475 1665 AC000000 		.4byte	.LVL50
 3476 1669 371A0000 		.4byte	0x1a37
 3477 166d 2C       		.uleb128 0x2c
 3478 166e 01       		.uleb128 0x1
 3479 166f 50       		.byte	0x50
 3480 1670 02       		.uleb128 0x2
 3481 1671 75       		.byte	0x75
 3482 1672 00       		.sleb128 0
 3483 1673 2C       		.uleb128 0x2c
 3484 1674 01       		.uleb128 0x1
 3485 1675 51       		.byte	0x51
 3486 1676 01       		.uleb128 0x1
 3487 1677 31       		.byte	0x31
 3488 1678 00       		.byte	0
 3489 1679 00       		.byte	0
 3490 167a 31       		.uleb128 0x31
 3491 167b 40110000 		.4byte	0x1140
 3492 167f B0000000 		.4byte	.LBB66
 3493 1683 06000000 		.4byte	.LBE66-.LBB66
 3494 1687 01       		.byte	0x1
 3495 1688 AC       		.byte	0xac
 3496 1689 9E160000 		.4byte	0x169e
 3497 168d 2B       		.uleb128 0x2b
 3498 168e B6000000 		.4byte	.LVL52
 3499 1692 431A0000 		.4byte	0x1a43
 3500 1696 2C       		.uleb128 0x2c
 3501 1697 01       		.uleb128 0x1
 3502 1698 50       		.byte	0x50
 3503 1699 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 139


 3504 169a 75       		.byte	0x75
 3505 169b 00       		.sleb128 0
 3506 169c 00       		.byte	0
 3507 169d 00       		.byte	0
 3508 169e 31       		.uleb128 0x31
 3509 169f 14110000 		.4byte	0x1114
 3510 16a3 B6000000 		.4byte	.LBB68
 3511 16a7 06000000 		.4byte	.LBE68-.LBB68
 3512 16ab 01       		.byte	0x1
 3513 16ac B0       		.byte	0xb0
 3514 16ad C4160000 		.4byte	0x16c4
 3515 16b1 28       		.uleb128 0x28
 3516 16b2 2D110000 		.4byte	0x112d
 3517 16b6 B8020000 		.4byte	.LLST25
 3518 16ba 28       		.uleb128 0x28
 3519 16bb 21110000 		.4byte	0x1121
 3520 16bf CC020000 		.4byte	.LLST26
 3521 16c3 00       		.byte	0
 3522 16c4 31       		.uleb128 0x31
 3523 16c5 52110000 		.4byte	0x1152
 3524 16c9 32010000 		.4byte	.LBB70
 3525 16cd 06000000 		.4byte	.LBE70-.LBB70
 3526 16d1 01       		.byte	0x1
 3527 16d2 CD       		.byte	0xcd
 3528 16d3 EA160000 		.4byte	0x16ea
 3529 16d7 28       		.uleb128 0x28
 3530 16d8 6B110000 		.4byte	0x116b
 3531 16dc E4020000 		.4byte	.LLST27
 3532 16e0 28       		.uleb128 0x28
 3533 16e1 5F110000 		.4byte	0x115f
 3534 16e5 F8020000 		.4byte	.LLST28
 3535 16e9 00       		.byte	0
 3536 16ea 31       		.uleb128 0x31
 3537 16eb 49110000 		.4byte	0x1149
 3538 16ef 38010000 		.4byte	.LBB72
 3539 16f3 06000000 		.4byte	.LBE72-.LBB72
 3540 16f7 01       		.byte	0x1
 3541 16f8 D0       		.byte	0xd0
 3542 16f9 11170000 		.4byte	0x1711
 3543 16fd 2B       		.uleb128 0x2b
 3544 16fe 3E010000 		.4byte	.LVL62
 3545 1702 4F1A0000 		.4byte	0x1a4f
 3546 1706 2C       		.uleb128 0x2c
 3547 1707 01       		.uleb128 0x1
 3548 1708 50       		.byte	0x50
 3549 1709 05       		.uleb128 0x5
 3550 170a 0C       		.byte	0xc
 3551 170b 00001D41 		.4byte	0x411d0000
 3552 170f 00       		.byte	0
 3553 1710 00       		.byte	0
 3554 1711 31       		.uleb128 0x31
 3555 1712 91100000 		.4byte	0x1091
 3556 1716 4A010000 		.4byte	.LBB74
 3557 171a 16000000 		.4byte	.LBE74-.LBB74
 3558 171e 01       		.byte	0x1
 3559 171f D9       		.byte	0xd9
 3560 1720 63170000 		.4byte	0x1763
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 140


 3561 1724 28       		.uleb128 0x28
 3562 1725 A8100000 		.4byte	0x10a8
 3563 1729 10030000 		.4byte	.LLST29
 3564 172d 28       		.uleb128 0x28
 3565 172e 9D100000 		.4byte	0x109d
 3566 1732 2F030000 		.4byte	.LLST30
 3567 1736 29       		.uleb128 0x29
 3568 1737 4A010000 		.4byte	.LBB75
 3569 173b 16000000 		.4byte	.LBE75-.LBB75
 3570 173f 2A       		.uleb128 0x2a
 3571 1740 B3100000 		.4byte	0x10b3
 3572 1744 02       		.uleb128 0x2
 3573 1745 91       		.byte	0x91
 3574 1746 4C       		.sleb128 -52
 3575 1747 2B       		.uleb128 0x2b
 3576 1748 5E010000 		.4byte	.LVL67
 3577 174c EF190000 		.4byte	0x19ef
 3578 1750 2C       		.uleb128 0x2c
 3579 1751 01       		.uleb128 0x1
 3580 1752 51       		.byte	0x51
 3581 1753 02       		.uleb128 0x2
 3582 1754 91       		.byte	0x91
 3583 1755 4C       		.sleb128 -52
 3584 1756 2C       		.uleb128 0x2c
 3585 1757 01       		.uleb128 0x1
 3586 1758 52       		.byte	0x52
 3587 1759 01       		.uleb128 0x1
 3588 175a 30       		.byte	0x30
 3589 175b 2C       		.uleb128 0x2c
 3590 175c 01       		.uleb128 0x1
 3591 175d 53       		.byte	0x53
 3592 175e 01       		.uleb128 0x1
 3593 175f 30       		.byte	0x30
 3594 1760 00       		.byte	0
 3595 1761 00       		.byte	0
 3596 1762 00       		.byte	0
 3597 1763 31       		.uleb128 0x31
 3598 1764 91100000 		.4byte	0x1091
 3599 1768 60010000 		.4byte	.LBB76
 3600 176c 5C000000 		.4byte	.LBE76-.LBB76
 3601 1770 01       		.byte	0x1
 3602 1771 E2       		.byte	0xe2
 3603 1772 B5170000 		.4byte	0x17b5
 3604 1776 36       		.uleb128 0x36
 3605 1777 A8100000 		.4byte	0x10a8
 3606 177b 00       		.byte	0
 3607 177c 37       		.uleb128 0x37
 3608 177d 9D100000 		.4byte	0x109d
 3609 1781 06       		.uleb128 0x6
 3610 1782 03       		.byte	0x3
 3611 1783 70010000 		.4byte	.LC8
 3612 1787 9F       		.byte	0x9f
 3613 1788 29       		.uleb128 0x29
 3614 1789 60010000 		.4byte	.LBB77
 3615 178d 5C000000 		.4byte	.LBE77-.LBB77
 3616 1791 2A       		.uleb128 0x2a
 3617 1792 B3100000 		.4byte	0x10b3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 141


 3618 1796 02       		.uleb128 0x2
 3619 1797 91       		.byte	0x91
 3620 1798 4C       		.sleb128 -52
 3621 1799 2B       		.uleb128 0x2b
 3622 179a 74010000 		.4byte	.LVL70
 3623 179e EF190000 		.4byte	0x19ef
 3624 17a2 2C       		.uleb128 0x2c
 3625 17a3 01       		.uleb128 0x1
 3626 17a4 51       		.byte	0x51
 3627 17a5 02       		.uleb128 0x2
 3628 17a6 91       		.byte	0x91
 3629 17a7 4C       		.sleb128 -52
 3630 17a8 2C       		.uleb128 0x2c
 3631 17a9 01       		.uleb128 0x1
 3632 17aa 52       		.byte	0x52
 3633 17ab 01       		.uleb128 0x1
 3634 17ac 30       		.byte	0x30
 3635 17ad 2C       		.uleb128 0x2c
 3636 17ae 01       		.uleb128 0x1
 3637 17af 53       		.byte	0x53
 3638 17b0 01       		.uleb128 0x1
 3639 17b1 30       		.byte	0x30
 3640 17b2 00       		.byte	0
 3641 17b3 00       		.byte	0
 3642 17b4 00       		.byte	0
 3643 17b5 2D       		.uleb128 0x2d
 3644 17b6 0E000000 		.4byte	.LVL32
 3645 17ba 5B1A0000 		.4byte	0x1a5b
 3646 17be CC170000 		.4byte	0x17cc
 3647 17c2 2C       		.uleb128 0x2c
 3648 17c3 01       		.uleb128 0x1
 3649 17c4 50       		.byte	0x50
 3650 17c5 05       		.uleb128 0x5
 3651 17c6 03       		.byte	0x3
 3652 17c7 00000000 		.4byte	isrADC
 3653 17cb 00       		.byte	0
 3654 17cc 2E       		.uleb128 0x2e
 3655 17cd 12000000 		.4byte	.LVL33
 3656 17d1 661A0000 		.4byte	0x1a66
 3657 17d5 2E       		.uleb128 0x2e
 3658 17d6 16000000 		.4byte	.LVL34
 3659 17da 711A0000 		.4byte	0x1a71
 3660 17de 2E       		.uleb128 0x2e
 3661 17df 1A000000 		.4byte	.LVL35
 3662 17e3 2B120000 		.4byte	0x122b
 3663 17e7 2D       		.uleb128 0x2d
 3664 17e8 2E000000 		.4byte	.LVL37
 3665 17ec 7C1A0000 		.4byte	0x1a7c
 3666 17f0 06180000 		.4byte	0x1806
 3667 17f4 2C       		.uleb128 0x2c
 3668 17f5 01       		.uleb128 0x1
 3669 17f6 51       		.byte	0x51
 3670 17f7 02       		.uleb128 0x2
 3671 17f8 91       		.byte	0x91
 3672 17f9 67       		.sleb128 -25
 3673 17fa 2C       		.uleb128 0x2c
 3674 17fb 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 142


 3675 17fc 52       		.byte	0x52
 3676 17fd 02       		.uleb128 0x2
 3677 17fe 09       		.byte	0x9
 3678 17ff FF       		.byte	0xff
 3679 1800 2C       		.uleb128 0x2c
 3680 1801 01       		.uleb128 0x1
 3681 1802 53       		.byte	0x53
 3682 1803 01       		.uleb128 0x1
 3683 1804 30       		.byte	0x30
 3684 1805 00       		.byte	0
 3685 1806 2D       		.uleb128 0x2d
 3686 1807 4C000000 		.4byte	.LVL40
 3687 180b 53130000 		.4byte	0x1353
 3688 180f 1A180000 		.4byte	0x181a
 3689 1813 2C       		.uleb128 0x2c
 3690 1814 01       		.uleb128 0x1
 3691 1815 50       		.byte	0x50
 3692 1816 02       		.uleb128 0x2
 3693 1817 08       		.byte	0x8
 3694 1818 64       		.byte	0x64
 3695 1819 00       		.byte	0
 3696 181a 2D       		.uleb128 0x2d
 3697 181b 58000000 		.4byte	.LVL43
 3698 181f 53130000 		.4byte	0x1353
 3699 1823 2F180000 		.4byte	0x182f
 3700 1827 2C       		.uleb128 0x2c
 3701 1828 01       		.uleb128 0x1
 3702 1829 50       		.byte	0x50
 3703 182a 03       		.uleb128 0x3
 3704 182b 0A       		.byte	0xa
 3705 182c 1027     		.2byte	0x2710
 3706 182e 00       		.byte	0
 3707 182f 2D       		.uleb128 0x2d
 3708 1830 E0000000 		.4byte	.LVL55
 3709 1834 881A0000 		.4byte	0x1a88
 3710 1838 50180000 		.4byte	0x1850
 3711 183c 2C       		.uleb128 0x2c
 3712 183d 01       		.uleb128 0x1
 3713 183e 50       		.byte	0x50
 3714 183f 0F       		.uleb128 0xf
 3715 1840 F5       		.byte	0xf5
 3716 1841 50       		.uleb128 0x50
 3717 1842 25       		.uleb128 0x25
 3718 1843 F5       		.byte	0xf5
 3719 1844 51       		.uleb128 0x51
 3720 1845 25       		.uleb128 0x25
 3721 1846 1B       		.byte	0x1b
 3722 1847 F4       		.byte	0xf4
 3723 1848 25       		.uleb128 0x25
 3724 1849 04       		.byte	0x4
 3725 184a F54BF43D 		.4byte	0x3df44bf5
 3726 184e 1B       		.byte	0x1b
 3727 184f 00       		.byte	0
 3728 1850 2D       		.uleb128 0x2d
 3729 1851 16010000 		.4byte	.LVL56
 3730 1855 EF190000 		.4byte	0x19ef
 3731 1859 6E180000 		.4byte	0x186e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 143


 3732 185d 2C       		.uleb128 0x2c
 3733 185e 01       		.uleb128 0x1
 3734 185f 51       		.byte	0x51
 3735 1860 02       		.uleb128 0x2
 3736 1861 91       		.byte	0x91
 3737 1862 54       		.sleb128 -44
 3738 1863 2C       		.uleb128 0x2c
 3739 1864 01       		.uleb128 0x1
 3740 1865 52       		.byte	0x52
 3741 1866 01       		.uleb128 0x1
 3742 1867 30       		.byte	0x30
 3743 1868 2C       		.uleb128 0x2c
 3744 1869 01       		.uleb128 0x1
 3745 186a 53       		.byte	0x53
 3746 186b 01       		.uleb128 0x1
 3747 186c 30       		.byte	0x30
 3748 186d 00       		.byte	0
 3749 186e 2D       		.uleb128 0x2d
 3750 186f 26010000 		.4byte	.LVL57
 3751 1873 EF190000 		.4byte	0x19ef
 3752 1877 8C180000 		.4byte	0x188c
 3753 187b 2C       		.uleb128 0x2c
 3754 187c 01       		.uleb128 0x1
 3755 187d 51       		.byte	0x51
 3756 187e 02       		.uleb128 0x2
 3757 187f 91       		.byte	0x91
 3758 1880 60       		.sleb128 -32
 3759 1881 2C       		.uleb128 0x2c
 3760 1882 01       		.uleb128 0x1
 3761 1883 52       		.byte	0x52
 3762 1884 01       		.uleb128 0x1
 3763 1885 30       		.byte	0x30
 3764 1886 2C       		.uleb128 0x2c
 3765 1887 01       		.uleb128 0x1
 3766 1888 53       		.byte	0x53
 3767 1889 01       		.uleb128 0x1
 3768 188a 32       		.byte	0x32
 3769 188b 00       		.byte	0
 3770 188c 2E       		.uleb128 0x2e
 3771 188d 42010000 		.4byte	.LVL63
 3772 1891 711A0000 		.4byte	0x1a71
 3773 1895 00       		.byte	0
 3774 1896 35       		.uleb128 0x35
 3775 1897 BC040000 		.4byte	.LASF383
 3776 189b 01       		.byte	0x1
 3777 189c 58       		.byte	0x58
 3778 189d 2E060000 		.4byte	0x62e
 3779 18a1 05       		.uleb128 0x5
 3780 18a2 03       		.byte	0x3
 3781 18a3 00000000 		.4byte	processingComplete
 3782 18a7 38       		.uleb128 0x38
 3783 18a8 DA190000 		.4byte	.LASF384
 3784 18ac 1A       		.byte	0x1a
 3785 18ad EA07     		.2byte	0x7ea
 3786 18af B3180000 		.4byte	0x18b3
 3787 18b3 07       		.uleb128 0x7
 3788 18b4 D8000000 		.4byte	0xd8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 144


 3789 18b8 09       		.uleb128 0x9
 3790 18b9 E60D0000 		.4byte	0xde6
 3791 18bd C8180000 		.4byte	0x18c8
 3792 18c1 0A       		.uleb128 0xa
 3793 18c2 A5000000 		.4byte	0xa5
 3794 18c6 0B       		.byte	0xb
 3795 18c7 00       		.byte	0
 3796 18c8 38       		.uleb128 0x38
 3797 18c9 FD1B0000 		.4byte	.LASF385
 3798 18cd 0B       		.byte	0xb
 3799 18ce FC02     		.2byte	0x2fc
 3800 18d0 D4180000 		.4byte	0x18d4
 3801 18d4 08       		.uleb128 0x8
 3802 18d5 B8180000 		.4byte	0x18b8
 3803 18d9 38       		.uleb128 0x38
 3804 18da 89110000 		.4byte	.LASF386
 3805 18de 11       		.byte	0x11
 3806 18df 2202     		.2byte	0x222
 3807 18e1 400E0000 		.4byte	0xe40
 3808 18e5 09       		.uleb128 0x9
 3809 18e6 0F0E0000 		.4byte	0xe0f
 3810 18ea F5180000 		.4byte	0x18f5
 3811 18ee 0A       		.uleb128 0xa
 3812 18ef A5000000 		.4byte	0xa5
 3813 18f3 00       		.byte	0
 3814 18f4 00       		.byte	0
 3815 18f5 38       		.uleb128 0x38
 3816 18f6 EC020000 		.4byte	.LASF387
 3817 18fa 11       		.byte	0x11
 3818 18fb 2C02     		.2byte	0x22c
 3819 18fd E5180000 		.4byte	0x18e5
 3820 1901 09       		.uleb128 0x9
 3821 1902 880E0000 		.4byte	0xe88
 3822 1906 11190000 		.4byte	0x1911
 3823 190a 0A       		.uleb128 0xa
 3824 190b A5000000 		.4byte	0xa5
 3825 190f 00       		.byte	0
 3826 1910 00       		.byte	0
 3827 1911 38       		.uleb128 0x38
 3828 1912 00000000 		.4byte	.LASF388
 3829 1916 11       		.byte	0x11
 3830 1917 2D02     		.2byte	0x22d
 3831 1919 01190000 		.4byte	0x1901
 3832 191d 39       		.uleb128 0x39
 3833 191e 82010000 		.4byte	.LASF389
 3834 1922 1B       		.byte	0x1b
 3835 1923 5E       		.byte	0x5e
 3836 1924 8B080000 		.4byte	0x88b
 3837 1928 38       		.uleb128 0x38
 3838 1929 EC1F0000 		.4byte	.LASF390
 3839 192d 04       		.byte	0x4
 3840 192e 6001     		.2byte	0x160
 3841 1930 E3000000 		.4byte	0xe3
 3842 1934 09       		.uleb128 0x9
 3843 1935 44190000 		.4byte	0x1944
 3844 1939 44190000 		.4byte	0x1944
 3845 193d 0A       		.uleb128 0xa
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 145


 3846 193e A5000000 		.4byte	0xa5
 3847 1942 00       		.byte	0
 3848 1943 00       		.byte	0
 3849 1944 08       		.uleb128 0x8
 3850 1945 960F0000 		.4byte	0xf96
 3851 1949 38       		.uleb128 0x38
 3852 194a 63190000 		.4byte	.LASF391
 3853 194e 04       		.byte	0x4
 3854 194f 6401     		.2byte	0x164
 3855 1951 55190000 		.4byte	0x1955
 3856 1955 08       		.uleb128 0x8
 3857 1956 34190000 		.4byte	0x1934
 3858 195a 39       		.uleb128 0x39
 3859 195b E9160000 		.4byte	.LASF392
 3860 195f 1C       		.byte	0x1c
 3861 1960 87       		.byte	0x87
 3862 1961 67090000 		.4byte	0x967
 3863 1965 39       		.uleb128 0x39
 3864 1966 CC1F0000 		.4byte	.LASF393
 3865 196a 1D       		.byte	0x1d
 3866 196b 1F       		.byte	0x1f
 3867 196c 70190000 		.4byte	0x1970
 3868 1970 08       		.uleb128 0x8
 3869 1971 E0070000 		.4byte	0x7e0
 3870 1975 39       		.uleb128 0x39
 3871 1976 33070000 		.4byte	.LASF394
 3872 197a 1E       		.byte	0x1e
 3873 197b 1F       		.byte	0x1f
 3874 197c 70190000 		.4byte	0x1970
 3875 1980 39       		.uleb128 0x39
 3876 1981 131C0000 		.4byte	.LASF395
 3877 1985 1F       		.byte	0x1f
 3878 1986 1F       		.byte	0x1f
 3879 1987 70190000 		.4byte	0x1970
 3880 198b 39       		.uleb128 0x39
 3881 198c FE020000 		.4byte	.LASF396
 3882 1990 20       		.byte	0x20
 3883 1991 7C       		.byte	0x7c
 3884 1992 2E060000 		.4byte	0x62e
 3885 1996 39       		.uleb128 0x39
 3886 1997 04090000 		.4byte	.LASF397
 3887 199b 20       		.byte	0x20
 3888 199c 7D       		.byte	0x7d
 3889 199d A1190000 		.4byte	0x19a1
 3890 19a1 08       		.uleb128 0x8
 3891 19a2 E3060000 		.4byte	0x6e3
 3892 19a6 3A       		.uleb128 0x3a
 3893 19a7 E7130000 		.4byte	.LASF398
 3894 19ab 01       		.byte	0x1
 3895 19ac 50       		.byte	0x50
 3896 19ad B70F0000 		.4byte	0xfb7
 3897 19b1 05       		.uleb128 0x5
 3898 19b2 03       		.byte	0x3
 3899 19b3 00000000 		.4byte	temperatureCommandQ
 3900 19b7 3A       		.uleb128 0x3a
 3901 19b8 8F020000 		.4byte	.LASF399
 3902 19bc 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 146


 3903 19bd 51       		.byte	0x51
 3904 19be B70F0000 		.4byte	0xfb7
 3905 19c2 05       		.uleb128 0x5
 3906 19c3 03       		.byte	0x3
 3907 19c4 00000000 		.4byte	temperatureDataQ
 3908 19c8 39       		.uleb128 0x39
 3909 19c9 DE1F0000 		.4byte	.LASF400
 3910 19cd 02       		.byte	0x2
 3911 19ce 7F       		.byte	0x7f
 3912 19cf B70F0000 		.4byte	0xfb7
 3913 19d3 39       		.uleb128 0x39
 3914 19d4 D2210000 		.4byte	.LASF401
 3915 19d8 18       		.byte	0x18
 3916 19d9 4C       		.byte	0x4c
 3917 19da B70F0000 		.4byte	0xfb7
 3918 19de 3A       		.uleb128 0x3a
 3919 19df A1160000 		.4byte	.LASF402
 3920 19e3 01       		.byte	0x1
 3921 19e4 54       		.byte	0x54
 3922 19e5 86100000 		.4byte	0x1086
 3923 19e9 05       		.uleb128 0x5
 3924 19ea 03       		.byte	0x3
 3925 19eb 00000000 		.4byte	xTimer_Temperature
 3926 19ef 3B       		.uleb128 0x3b
 3927 19f0 950D0000 		.4byte	.LASF403
 3928 19f4 950D0000 		.4byte	.LASF403
 3929 19f8 16       		.byte	0x16
 3930 19f9 B402     		.2byte	0x2b4
 3931 19fb 3B       		.uleb128 0x3b
 3932 19fc A90F0000 		.4byte	.LASF404
 3933 1a00 A90F0000 		.4byte	.LASF404
 3934 1a04 19       		.byte	0x19
 3935 1a05 0D01     		.2byte	0x10d
 3936 1a07 3B       		.uleb128 0x3b
 3937 1a08 99110000 		.4byte	.LASF405
 3938 1a0c 99110000 		.4byte	.LASF405
 3939 1a10 21       		.byte	0x21
 3940 1a11 0805     		.2byte	0x508
 3941 1a13 3B       		.uleb128 0x3b
 3942 1a14 EC100000 		.4byte	.LASF406
 3943 1a18 EC100000 		.4byte	.LASF406
 3944 1a1c 19       		.byte	0x19
 3945 1a1d 1A05     		.2byte	0x51a
 3946 1a1f 3B       		.uleb128 0x3b
 3947 1a20 100F0000 		.4byte	.LASF407
 3948 1a24 100F0000 		.4byte	.LASF407
 3949 1a28 0A       		.byte	0xa
 3950 1a29 2A03     		.2byte	0x32a
 3951 1a2b 3B       		.uleb128 0x3b
 3952 1a2c 3D0D0000 		.4byte	.LASF408
 3953 1a30 3D0D0000 		.4byte	.LASF408
 3954 1a34 16       		.byte	0x16
 3955 1a35 A005     		.2byte	0x5a0
 3956 1a37 3B       		.uleb128 0x3b
 3957 1a38 711D0000 		.4byte	.LASF409
 3958 1a3c 711D0000 		.4byte	.LASF409
 3959 1a40 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 147


 3960 1a41 2405     		.2byte	0x524
 3961 1a43 3B       		.uleb128 0x3b
 3962 1a44 B4070000 		.4byte	.LASF410
 3963 1a48 B4070000 		.4byte	.LASF410
 3964 1a4c 03       		.byte	0x3
 3965 1a4d 2E05     		.2byte	0x52e
 3966 1a4f 3B       		.uleb128 0x3b
 3967 1a50 4C050000 		.4byte	.LASF411
 3968 1a54 4C050000 		.4byte	.LASF411
 3969 1a58 03       		.byte	0x3
 3970 1a59 2F05     		.2byte	0x52f
 3971 1a5b 3C       		.uleb128 0x3c
 3972 1a5c 72170000 		.4byte	.LASF412
 3973 1a60 72170000 		.4byte	.LASF412
 3974 1a64 04       		.byte	0x4
 3975 1a65 58       		.byte	0x58
 3976 1a66 3C       		.uleb128 0x3c
 3977 1a67 D8130000 		.4byte	.LASF413
 3978 1a6b D8130000 		.4byte	.LASF413
 3979 1a6f 04       		.byte	0x4
 3980 1a70 7D       		.byte	0x7d
 3981 1a71 3C       		.uleb128 0x3c
 3982 1a72 AB1C0000 		.4byte	.LASF414
 3983 1a76 AB1C0000 		.4byte	.LASF414
 3984 1a7a 04       		.byte	0x4
 3985 1a7b 5A       		.byte	0x5a
 3986 1a7c 3B       		.uleb128 0x3b
 3987 1a7d 64090000 		.4byte	.LASF415
 3988 1a81 64090000 		.4byte	.LASF415
 3989 1a85 16       		.byte	0x16
 3990 1a86 F503     		.2byte	0x3f5
 3991 1a88 3B       		.uleb128 0x3b
 3992 1a89 241C0000 		.4byte	.LASF416
 3993 1a8d 241C0000 		.4byte	.LASF416
 3994 1a91 22       		.byte	0x22
 3995 1a92 8201     		.2byte	0x182
 3996 1a94 00       		.byte	0
 3997              		.section	.debug_abbrev,"",%progbits
 3998              	.Ldebug_abbrev0:
 3999 0000 01       		.uleb128 0x1
 4000 0001 11       		.uleb128 0x11
 4001 0002 01       		.byte	0x1
 4002 0003 25       		.uleb128 0x25
 4003 0004 0E       		.uleb128 0xe
 4004 0005 13       		.uleb128 0x13
 4005 0006 0B       		.uleb128 0xb
 4006 0007 03       		.uleb128 0x3
 4007 0008 0E       		.uleb128 0xe
 4008 0009 1B       		.uleb128 0x1b
 4009 000a 0E       		.uleb128 0xe
 4010 000b 55       		.uleb128 0x55
 4011 000c 17       		.uleb128 0x17
 4012 000d 11       		.uleb128 0x11
 4013 000e 01       		.uleb128 0x1
 4014 000f 10       		.uleb128 0x10
 4015 0010 17       		.uleb128 0x17
 4016 0011 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 148


 4017 0012 00       		.byte	0
 4018 0013 02       		.uleb128 0x2
 4019 0014 24       		.uleb128 0x24
 4020 0015 00       		.byte	0
 4021 0016 0B       		.uleb128 0xb
 4022 0017 0B       		.uleb128 0xb
 4023 0018 3E       		.uleb128 0x3e
 4024 0019 0B       		.uleb128 0xb
 4025 001a 03       		.uleb128 0x3
 4026 001b 0E       		.uleb128 0xe
 4027 001c 00       		.byte	0
 4028 001d 00       		.byte	0
 4029 001e 03       		.uleb128 0x3
 4030 001f 24       		.uleb128 0x24
 4031 0020 00       		.byte	0
 4032 0021 0B       		.uleb128 0xb
 4033 0022 0B       		.uleb128 0xb
 4034 0023 3E       		.uleb128 0x3e
 4035 0024 0B       		.uleb128 0xb
 4036 0025 03       		.uleb128 0x3
 4037 0026 08       		.uleb128 0x8
 4038 0027 00       		.byte	0
 4039 0028 00       		.byte	0
 4040 0029 04       		.uleb128 0x4
 4041 002a 16       		.uleb128 0x16
 4042 002b 00       		.byte	0
 4043 002c 03       		.uleb128 0x3
 4044 002d 0E       		.uleb128 0xe
 4045 002e 3A       		.uleb128 0x3a
 4046 002f 0B       		.uleb128 0xb
 4047 0030 3B       		.uleb128 0x3b
 4048 0031 0B       		.uleb128 0xb
 4049 0032 49       		.uleb128 0x49
 4050 0033 13       		.uleb128 0x13
 4051 0034 00       		.byte	0
 4052 0035 00       		.byte	0
 4053 0036 05       		.uleb128 0x5
 4054 0037 0F       		.uleb128 0xf
 4055 0038 00       		.byte	0
 4056 0039 0B       		.uleb128 0xb
 4057 003a 0B       		.uleb128 0xb
 4058 003b 00       		.byte	0
 4059 003c 00       		.byte	0
 4060 003d 06       		.uleb128 0x6
 4061 003e 0F       		.uleb128 0xf
 4062 003f 00       		.byte	0
 4063 0040 0B       		.uleb128 0xb
 4064 0041 0B       		.uleb128 0xb
 4065 0042 49       		.uleb128 0x49
 4066 0043 13       		.uleb128 0x13
 4067 0044 00       		.byte	0
 4068 0045 00       		.byte	0
 4069 0046 07       		.uleb128 0x7
 4070 0047 35       		.uleb128 0x35
 4071 0048 00       		.byte	0
 4072 0049 49       		.uleb128 0x49
 4073 004a 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 149


 4074 004b 00       		.byte	0
 4075 004c 00       		.byte	0
 4076 004d 08       		.uleb128 0x8
 4077 004e 26       		.uleb128 0x26
 4078 004f 00       		.byte	0
 4079 0050 49       		.uleb128 0x49
 4080 0051 13       		.uleb128 0x13
 4081 0052 00       		.byte	0
 4082 0053 00       		.byte	0
 4083 0054 09       		.uleb128 0x9
 4084 0055 01       		.uleb128 0x1
 4085 0056 01       		.byte	0x1
 4086 0057 49       		.uleb128 0x49
 4087 0058 13       		.uleb128 0x13
 4088 0059 01       		.uleb128 0x1
 4089 005a 13       		.uleb128 0x13
 4090 005b 00       		.byte	0
 4091 005c 00       		.byte	0
 4092 005d 0A       		.uleb128 0xa
 4093 005e 21       		.uleb128 0x21
 4094 005f 00       		.byte	0
 4095 0060 49       		.uleb128 0x49
 4096 0061 13       		.uleb128 0x13
 4097 0062 2F       		.uleb128 0x2f
 4098 0063 0B       		.uleb128 0xb
 4099 0064 00       		.byte	0
 4100 0065 00       		.byte	0
 4101 0066 0B       		.uleb128 0xb
 4102 0067 13       		.uleb128 0x13
 4103 0068 01       		.byte	0x1
 4104 0069 0B       		.uleb128 0xb
 4105 006a 0B       		.uleb128 0xb
 4106 006b 3A       		.uleb128 0x3a
 4107 006c 0B       		.uleb128 0xb
 4108 006d 3B       		.uleb128 0x3b
 4109 006e 0B       		.uleb128 0xb
 4110 006f 01       		.uleb128 0x1
 4111 0070 13       		.uleb128 0x13
 4112 0071 00       		.byte	0
 4113 0072 00       		.byte	0
 4114 0073 0C       		.uleb128 0xc
 4115 0074 0D       		.uleb128 0xd
 4116 0075 00       		.byte	0
 4117 0076 03       		.uleb128 0x3
 4118 0077 08       		.uleb128 0x8
 4119 0078 3A       		.uleb128 0x3a
 4120 0079 0B       		.uleb128 0xb
 4121 007a 3B       		.uleb128 0x3b
 4122 007b 0B       		.uleb128 0xb
 4123 007c 49       		.uleb128 0x49
 4124 007d 13       		.uleb128 0x13
 4125 007e 38       		.uleb128 0x38
 4126 007f 0B       		.uleb128 0xb
 4127 0080 00       		.byte	0
 4128 0081 00       		.byte	0
 4129 0082 0D       		.uleb128 0xd
 4130 0083 0D       		.uleb128 0xd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 150


 4131 0084 00       		.byte	0
 4132 0085 03       		.uleb128 0x3
 4133 0086 0E       		.uleb128 0xe
 4134 0087 3A       		.uleb128 0x3a
 4135 0088 0B       		.uleb128 0xb
 4136 0089 3B       		.uleb128 0x3b
 4137 008a 0B       		.uleb128 0xb
 4138 008b 49       		.uleb128 0x49
 4139 008c 13       		.uleb128 0x13
 4140 008d 38       		.uleb128 0x38
 4141 008e 0B       		.uleb128 0xb
 4142 008f 00       		.byte	0
 4143 0090 00       		.byte	0
 4144 0091 0E       		.uleb128 0xe
 4145 0092 13       		.uleb128 0x13
 4146 0093 01       		.byte	0x1
 4147 0094 0B       		.uleb128 0xb
 4148 0095 05       		.uleb128 0x5
 4149 0096 3A       		.uleb128 0x3a
 4150 0097 0B       		.uleb128 0xb
 4151 0098 3B       		.uleb128 0x3b
 4152 0099 0B       		.uleb128 0xb
 4153 009a 01       		.uleb128 0x1
 4154 009b 13       		.uleb128 0x13
 4155 009c 00       		.byte	0
 4156 009d 00       		.byte	0
 4157 009e 0F       		.uleb128 0xf
 4158 009f 0D       		.uleb128 0xd
 4159 00a0 00       		.byte	0
 4160 00a1 03       		.uleb128 0x3
 4161 00a2 0E       		.uleb128 0xe
 4162 00a3 3A       		.uleb128 0x3a
 4163 00a4 0B       		.uleb128 0xb
 4164 00a5 3B       		.uleb128 0x3b
 4165 00a6 0B       		.uleb128 0xb
 4166 00a7 49       		.uleb128 0x49
 4167 00a8 13       		.uleb128 0x13
 4168 00a9 38       		.uleb128 0x38
 4169 00aa 05       		.uleb128 0x5
 4170 00ab 00       		.byte	0
 4171 00ac 00       		.byte	0
 4172 00ad 10       		.uleb128 0x10
 4173 00ae 21       		.uleb128 0x21
 4174 00af 00       		.byte	0
 4175 00b0 49       		.uleb128 0x49
 4176 00b1 13       		.uleb128 0x13
 4177 00b2 2F       		.uleb128 0x2f
 4178 00b3 05       		.uleb128 0x5
 4179 00b4 00       		.byte	0
 4180 00b5 00       		.byte	0
 4181 00b6 11       		.uleb128 0x11
 4182 00b7 16       		.uleb128 0x16
 4183 00b8 00       		.byte	0
 4184 00b9 03       		.uleb128 0x3
 4185 00ba 0E       		.uleb128 0xe
 4186 00bb 3A       		.uleb128 0x3a
 4187 00bc 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 151


 4188 00bd 3B       		.uleb128 0x3b
 4189 00be 05       		.uleb128 0x5
 4190 00bf 49       		.uleb128 0x49
 4191 00c0 13       		.uleb128 0x13
 4192 00c1 00       		.byte	0
 4193 00c2 00       		.byte	0
 4194 00c3 12       		.uleb128 0x12
 4195 00c4 04       		.uleb128 0x4
 4196 00c5 01       		.byte	0x1
 4197 00c6 0B       		.uleb128 0xb
 4198 00c7 0B       		.uleb128 0xb
 4199 00c8 49       		.uleb128 0x49
 4200 00c9 13       		.uleb128 0x13
 4201 00ca 3A       		.uleb128 0x3a
 4202 00cb 0B       		.uleb128 0xb
 4203 00cc 3B       		.uleb128 0x3b
 4204 00cd 05       		.uleb128 0x5
 4205 00ce 01       		.uleb128 0x1
 4206 00cf 13       		.uleb128 0x13
 4207 00d0 00       		.byte	0
 4208 00d1 00       		.byte	0
 4209 00d2 13       		.uleb128 0x13
 4210 00d3 28       		.uleb128 0x28
 4211 00d4 00       		.byte	0
 4212 00d5 03       		.uleb128 0x3
 4213 00d6 0E       		.uleb128 0xe
 4214 00d7 1C       		.uleb128 0x1c
 4215 00d8 0B       		.uleb128 0xb
 4216 00d9 00       		.byte	0
 4217 00da 00       		.byte	0
 4218 00db 14       		.uleb128 0x14
 4219 00dc 13       		.uleb128 0x13
 4220 00dd 01       		.byte	0x1
 4221 00de 0B       		.uleb128 0xb
 4222 00df 0B       		.uleb128 0xb
 4223 00e0 3A       		.uleb128 0x3a
 4224 00e1 0B       		.uleb128 0xb
 4225 00e2 3B       		.uleb128 0x3b
 4226 00e3 05       		.uleb128 0x5
 4227 00e4 01       		.uleb128 0x1
 4228 00e5 13       		.uleb128 0x13
 4229 00e6 00       		.byte	0
 4230 00e7 00       		.byte	0
 4231 00e8 15       		.uleb128 0x15
 4232 00e9 0D       		.uleb128 0xd
 4233 00ea 00       		.byte	0
 4234 00eb 03       		.uleb128 0x3
 4235 00ec 0E       		.uleb128 0xe
 4236 00ed 3A       		.uleb128 0x3a
 4237 00ee 0B       		.uleb128 0xb
 4238 00ef 3B       		.uleb128 0x3b
 4239 00f0 05       		.uleb128 0x5
 4240 00f1 49       		.uleb128 0x49
 4241 00f2 13       		.uleb128 0x13
 4242 00f3 38       		.uleb128 0x38
 4243 00f4 0B       		.uleb128 0xb
 4244 00f5 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 152


 4245 00f6 00       		.byte	0
 4246 00f7 16       		.uleb128 0x16
 4247 00f8 13       		.uleb128 0x13
 4248 00f9 01       		.byte	0x1
 4249 00fa 03       		.uleb128 0x3
 4250 00fb 0E       		.uleb128 0xe
 4251 00fc 0B       		.uleb128 0xb
 4252 00fd 0B       		.uleb128 0xb
 4253 00fe 3A       		.uleb128 0x3a
 4254 00ff 0B       		.uleb128 0xb
 4255 0100 3B       		.uleb128 0x3b
 4256 0101 0B       		.uleb128 0xb
 4257 0102 01       		.uleb128 0x1
 4258 0103 13       		.uleb128 0x13
 4259 0104 00       		.byte	0
 4260 0105 00       		.byte	0
 4261 0106 17       		.uleb128 0x17
 4262 0107 15       		.uleb128 0x15
 4263 0108 01       		.byte	0x1
 4264 0109 27       		.uleb128 0x27
 4265 010a 19       		.uleb128 0x19
 4266 010b 01       		.uleb128 0x1
 4267 010c 13       		.uleb128 0x13
 4268 010d 00       		.byte	0
 4269 010e 00       		.byte	0
 4270 010f 18       		.uleb128 0x18
 4271 0110 05       		.uleb128 0x5
 4272 0111 00       		.byte	0
 4273 0112 49       		.uleb128 0x49
 4274 0113 13       		.uleb128 0x13
 4275 0114 00       		.byte	0
 4276 0115 00       		.byte	0
 4277 0116 19       		.uleb128 0x19
 4278 0117 13       		.uleb128 0x13
 4279 0118 01       		.byte	0x1
 4280 0119 03       		.uleb128 0x3
 4281 011a 0E       		.uleb128 0xe
 4282 011b 0B       		.uleb128 0xb
 4283 011c 0B       		.uleb128 0xb
 4284 011d 3A       		.uleb128 0x3a
 4285 011e 0B       		.uleb128 0xb
 4286 011f 3B       		.uleb128 0x3b
 4287 0120 05       		.uleb128 0x5
 4288 0121 01       		.uleb128 0x1
 4289 0122 13       		.uleb128 0x13
 4290 0123 00       		.byte	0
 4291 0124 00       		.byte	0
 4292 0125 1A       		.uleb128 0x1a
 4293 0126 28       		.uleb128 0x28
 4294 0127 00       		.byte	0
 4295 0128 03       		.uleb128 0x3
 4296 0129 0E       		.uleb128 0xe
 4297 012a 1C       		.uleb128 0x1c
 4298 012b 05       		.uleb128 0x5
 4299 012c 00       		.byte	0
 4300 012d 00       		.byte	0
 4301 012e 1B       		.uleb128 0x1b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 153


 4302 012f 04       		.uleb128 0x4
 4303 0130 01       		.byte	0x1
 4304 0131 0B       		.uleb128 0xb
 4305 0132 0B       		.uleb128 0xb
 4306 0133 49       		.uleb128 0x49
 4307 0134 13       		.uleb128 0x13
 4308 0135 3A       		.uleb128 0x3a
 4309 0136 0B       		.uleb128 0xb
 4310 0137 3B       		.uleb128 0x3b
 4311 0138 0B       		.uleb128 0xb
 4312 0139 01       		.uleb128 0x1
 4313 013a 13       		.uleb128 0x13
 4314 013b 00       		.byte	0
 4315 013c 00       		.byte	0
 4316 013d 1C       		.uleb128 0x1c
 4317 013e 2E       		.uleb128 0x2e
 4318 013f 01       		.byte	0x1
 4319 0140 03       		.uleb128 0x3
 4320 0141 0E       		.uleb128 0xe
 4321 0142 3A       		.uleb128 0x3a
 4322 0143 0B       		.uleb128 0xb
 4323 0144 3B       		.uleb128 0x3b
 4324 0145 0B       		.uleb128 0xb
 4325 0146 27       		.uleb128 0x27
 4326 0147 19       		.uleb128 0x19
 4327 0148 20       		.uleb128 0x20
 4328 0149 0B       		.uleb128 0xb
 4329 014a 01       		.uleb128 0x1
 4330 014b 13       		.uleb128 0x13
 4331 014c 00       		.byte	0
 4332 014d 00       		.byte	0
 4333 014e 1D       		.uleb128 0x1d
 4334 014f 05       		.uleb128 0x5
 4335 0150 00       		.byte	0
 4336 0151 03       		.uleb128 0x3
 4337 0152 0E       		.uleb128 0xe
 4338 0153 3A       		.uleb128 0x3a
 4339 0154 0B       		.uleb128 0xb
 4340 0155 3B       		.uleb128 0x3b
 4341 0156 0B       		.uleb128 0xb
 4342 0157 49       		.uleb128 0x49
 4343 0158 13       		.uleb128 0x13
 4344 0159 00       		.byte	0
 4345 015a 00       		.byte	0
 4346 015b 1E       		.uleb128 0x1e
 4347 015c 34       		.uleb128 0x34
 4348 015d 00       		.byte	0
 4349 015e 03       		.uleb128 0x3
 4350 015f 0E       		.uleb128 0xe
 4351 0160 3A       		.uleb128 0x3a
 4352 0161 0B       		.uleb128 0xb
 4353 0162 3B       		.uleb128 0x3b
 4354 0163 0B       		.uleb128 0xb
 4355 0164 49       		.uleb128 0x49
 4356 0165 13       		.uleb128 0x13
 4357 0166 00       		.byte	0
 4358 0167 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 154


 4359 0168 1F       		.uleb128 0x1f
 4360 0169 2E       		.uleb128 0x2e
 4361 016a 01       		.byte	0x1
 4362 016b 03       		.uleb128 0x3
 4363 016c 0E       		.uleb128 0xe
 4364 016d 3A       		.uleb128 0x3a
 4365 016e 0B       		.uleb128 0xb
 4366 016f 3B       		.uleb128 0x3b
 4367 0170 05       		.uleb128 0x5
 4368 0171 27       		.uleb128 0x27
 4369 0172 19       		.uleb128 0x19
 4370 0173 49       		.uleb128 0x49
 4371 0174 13       		.uleb128 0x13
 4372 0175 20       		.uleb128 0x20
 4373 0176 0B       		.uleb128 0xb
 4374 0177 01       		.uleb128 0x1
 4375 0178 13       		.uleb128 0x13
 4376 0179 00       		.byte	0
 4377 017a 00       		.byte	0
 4378 017b 20       		.uleb128 0x20
 4379 017c 05       		.uleb128 0x5
 4380 017d 00       		.byte	0
 4381 017e 03       		.uleb128 0x3
 4382 017f 0E       		.uleb128 0xe
 4383 0180 3A       		.uleb128 0x3a
 4384 0181 0B       		.uleb128 0xb
 4385 0182 3B       		.uleb128 0x3b
 4386 0183 05       		.uleb128 0x5
 4387 0184 49       		.uleb128 0x49
 4388 0185 13       		.uleb128 0x13
 4389 0186 00       		.byte	0
 4390 0187 00       		.byte	0
 4391 0188 21       		.uleb128 0x21
 4392 0189 2E       		.uleb128 0x2e
 4393 018a 01       		.byte	0x1
 4394 018b 03       		.uleb128 0x3
 4395 018c 0E       		.uleb128 0xe
 4396 018d 3A       		.uleb128 0x3a
 4397 018e 0B       		.uleb128 0xb
 4398 018f 3B       		.uleb128 0x3b
 4399 0190 05       		.uleb128 0x5
 4400 0191 27       		.uleb128 0x27
 4401 0192 19       		.uleb128 0x19
 4402 0193 20       		.uleb128 0x20
 4403 0194 0B       		.uleb128 0xb
 4404 0195 01       		.uleb128 0x1
 4405 0196 13       		.uleb128 0x13
 4406 0197 00       		.byte	0
 4407 0198 00       		.byte	0
 4408 0199 22       		.uleb128 0x22
 4409 019a 2E       		.uleb128 0x2e
 4410 019b 00       		.byte	0
 4411 019c 03       		.uleb128 0x3
 4412 019d 0E       		.uleb128 0xe
 4413 019e 3A       		.uleb128 0x3a
 4414 019f 0B       		.uleb128 0xb
 4415 01a0 3B       		.uleb128 0x3b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 155


 4416 01a1 05       		.uleb128 0x5
 4417 01a2 27       		.uleb128 0x27
 4418 01a3 19       		.uleb128 0x19
 4419 01a4 20       		.uleb128 0x20
 4420 01a5 0B       		.uleb128 0xb
 4421 01a6 00       		.byte	0
 4422 01a7 00       		.byte	0
 4423 01a8 23       		.uleb128 0x23
 4424 01a9 2E       		.uleb128 0x2e
 4425 01aa 01       		.byte	0x1
 4426 01ab 03       		.uleb128 0x3
 4427 01ac 0E       		.uleb128 0xe
 4428 01ad 3A       		.uleb128 0x3a
 4429 01ae 0B       		.uleb128 0xb
 4430 01af 3B       		.uleb128 0x3b
 4431 01b0 05       		.uleb128 0x5
 4432 01b1 27       		.uleb128 0x27
 4433 01b2 19       		.uleb128 0x19
 4434 01b3 11       		.uleb128 0x11
 4435 01b4 01       		.uleb128 0x1
 4436 01b5 12       		.uleb128 0x12
 4437 01b6 06       		.uleb128 0x6
 4438 01b7 40       		.uleb128 0x40
 4439 01b8 18       		.uleb128 0x18
 4440 01b9 9742     		.uleb128 0x2117
 4441 01bb 19       		.uleb128 0x19
 4442 01bc 01       		.uleb128 0x1
 4443 01bd 13       		.uleb128 0x13
 4444 01be 00       		.byte	0
 4445 01bf 00       		.byte	0
 4446 01c0 24       		.uleb128 0x24
 4447 01c1 05       		.uleb128 0x5
 4448 01c2 00       		.byte	0
 4449 01c3 03       		.uleb128 0x3
 4450 01c4 0E       		.uleb128 0xe
 4451 01c5 3A       		.uleb128 0x3a
 4452 01c6 0B       		.uleb128 0xb
 4453 01c7 3B       		.uleb128 0x3b
 4454 01c8 05       		.uleb128 0x5
 4455 01c9 49       		.uleb128 0x49
 4456 01ca 13       		.uleb128 0x13
 4457 01cb 02       		.uleb128 0x2
 4458 01cc 17       		.uleb128 0x17
 4459 01cd 00       		.byte	0
 4460 01ce 00       		.byte	0
 4461 01cf 25       		.uleb128 0x25
 4462 01d0 34       		.uleb128 0x34
 4463 01d1 00       		.byte	0
 4464 01d2 03       		.uleb128 0x3
 4465 01d3 0E       		.uleb128 0xe
 4466 01d4 3A       		.uleb128 0x3a
 4467 01d5 0B       		.uleb128 0xb
 4468 01d6 3B       		.uleb128 0x3b
 4469 01d7 05       		.uleb128 0x5
 4470 01d8 49       		.uleb128 0x49
 4471 01d9 13       		.uleb128 0x13
 4472 01da 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 156


 4473 01db 17       		.uleb128 0x17
 4474 01dc 00       		.byte	0
 4475 01dd 00       		.byte	0
 4476 01de 26       		.uleb128 0x26
 4477 01df 34       		.uleb128 0x34
 4478 01e0 00       		.byte	0
 4479 01e1 03       		.uleb128 0x3
 4480 01e2 0E       		.uleb128 0xe
 4481 01e3 3A       		.uleb128 0x3a
 4482 01e4 0B       		.uleb128 0xb
 4483 01e5 3B       		.uleb128 0x3b
 4484 01e6 05       		.uleb128 0x5
 4485 01e7 49       		.uleb128 0x49
 4486 01e8 13       		.uleb128 0x13
 4487 01e9 02       		.uleb128 0x2
 4488 01ea 18       		.uleb128 0x18
 4489 01eb 00       		.byte	0
 4490 01ec 00       		.byte	0
 4491 01ed 27       		.uleb128 0x27
 4492 01ee 1D       		.uleb128 0x1d
 4493 01ef 01       		.byte	0x1
 4494 01f0 31       		.uleb128 0x31
 4495 01f1 13       		.uleb128 0x13
 4496 01f2 11       		.uleb128 0x11
 4497 01f3 01       		.uleb128 0x1
 4498 01f4 12       		.uleb128 0x12
 4499 01f5 06       		.uleb128 0x6
 4500 01f6 58       		.uleb128 0x58
 4501 01f7 0B       		.uleb128 0xb
 4502 01f8 59       		.uleb128 0x59
 4503 01f9 05       		.uleb128 0x5
 4504 01fa 01       		.uleb128 0x1
 4505 01fb 13       		.uleb128 0x13
 4506 01fc 00       		.byte	0
 4507 01fd 00       		.byte	0
 4508 01fe 28       		.uleb128 0x28
 4509 01ff 05       		.uleb128 0x5
 4510 0200 00       		.byte	0
 4511 0201 31       		.uleb128 0x31
 4512 0202 13       		.uleb128 0x13
 4513 0203 02       		.uleb128 0x2
 4514 0204 17       		.uleb128 0x17
 4515 0205 00       		.byte	0
 4516 0206 00       		.byte	0
 4517 0207 29       		.uleb128 0x29
 4518 0208 0B       		.uleb128 0xb
 4519 0209 01       		.byte	0x1
 4520 020a 11       		.uleb128 0x11
 4521 020b 01       		.uleb128 0x1
 4522 020c 12       		.uleb128 0x12
 4523 020d 06       		.uleb128 0x6
 4524 020e 00       		.byte	0
 4525 020f 00       		.byte	0
 4526 0210 2A       		.uleb128 0x2a
 4527 0211 34       		.uleb128 0x34
 4528 0212 00       		.byte	0
 4529 0213 31       		.uleb128 0x31
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 157


 4530 0214 13       		.uleb128 0x13
 4531 0215 02       		.uleb128 0x2
 4532 0216 18       		.uleb128 0x18
 4533 0217 00       		.byte	0
 4534 0218 00       		.byte	0
 4535 0219 2B       		.uleb128 0x2b
 4536 021a 898201   		.uleb128 0x4109
 4537 021d 01       		.byte	0x1
 4538 021e 11       		.uleb128 0x11
 4539 021f 01       		.uleb128 0x1
 4540 0220 31       		.uleb128 0x31
 4541 0221 13       		.uleb128 0x13
 4542 0222 00       		.byte	0
 4543 0223 00       		.byte	0
 4544 0224 2C       		.uleb128 0x2c
 4545 0225 8A8201   		.uleb128 0x410a
 4546 0228 00       		.byte	0
 4547 0229 02       		.uleb128 0x2
 4548 022a 18       		.uleb128 0x18
 4549 022b 9142     		.uleb128 0x2111
 4550 022d 18       		.uleb128 0x18
 4551 022e 00       		.byte	0
 4552 022f 00       		.byte	0
 4553 0230 2D       		.uleb128 0x2d
 4554 0231 898201   		.uleb128 0x4109
 4555 0234 01       		.byte	0x1
 4556 0235 11       		.uleb128 0x11
 4557 0236 01       		.uleb128 0x1
 4558 0237 31       		.uleb128 0x31
 4559 0238 13       		.uleb128 0x13
 4560 0239 01       		.uleb128 0x1
 4561 023a 13       		.uleb128 0x13
 4562 023b 00       		.byte	0
 4563 023c 00       		.byte	0
 4564 023d 2E       		.uleb128 0x2e
 4565 023e 898201   		.uleb128 0x4109
 4566 0241 00       		.byte	0
 4567 0242 11       		.uleb128 0x11
 4568 0243 01       		.uleb128 0x1
 4569 0244 31       		.uleb128 0x31
 4570 0245 13       		.uleb128 0x13
 4571 0246 00       		.byte	0
 4572 0247 00       		.byte	0
 4573 0248 2F       		.uleb128 0x2f
 4574 0249 2E       		.uleb128 0x2e
 4575 024a 01       		.byte	0x1
 4576 024b 3F       		.uleb128 0x3f
 4577 024c 19       		.uleb128 0x19
 4578 024d 03       		.uleb128 0x3
 4579 024e 0E       		.uleb128 0xe
 4580 024f 3A       		.uleb128 0x3a
 4581 0250 0B       		.uleb128 0xb
 4582 0251 3B       		.uleb128 0x3b
 4583 0252 0B       		.uleb128 0xb
 4584 0253 27       		.uleb128 0x27
 4585 0254 19       		.uleb128 0x19
 4586 0255 11       		.uleb128 0x11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 158


 4587 0256 01       		.uleb128 0x1
 4588 0257 12       		.uleb128 0x12
 4589 0258 06       		.uleb128 0x6
 4590 0259 40       		.uleb128 0x40
 4591 025a 18       		.uleb128 0x18
 4592 025b 9742     		.uleb128 0x2117
 4593 025d 19       		.uleb128 0x19
 4594 025e 01       		.uleb128 0x1
 4595 025f 13       		.uleb128 0x13
 4596 0260 00       		.byte	0
 4597 0261 00       		.byte	0
 4598 0262 30       		.uleb128 0x30
 4599 0263 34       		.uleb128 0x34
 4600 0264 00       		.byte	0
 4601 0265 03       		.uleb128 0x3
 4602 0266 0E       		.uleb128 0xe
 4603 0267 3A       		.uleb128 0x3a
 4604 0268 0B       		.uleb128 0xb
 4605 0269 3B       		.uleb128 0x3b
 4606 026a 0B       		.uleb128 0xb
 4607 026b 49       		.uleb128 0x49
 4608 026c 13       		.uleb128 0x13
 4609 026d 02       		.uleb128 0x2
 4610 026e 17       		.uleb128 0x17
 4611 026f 00       		.byte	0
 4612 0270 00       		.byte	0
 4613 0271 31       		.uleb128 0x31
 4614 0272 1D       		.uleb128 0x1d
 4615 0273 01       		.byte	0x1
 4616 0274 31       		.uleb128 0x31
 4617 0275 13       		.uleb128 0x13
 4618 0276 11       		.uleb128 0x11
 4619 0277 01       		.uleb128 0x1
 4620 0278 12       		.uleb128 0x12
 4621 0279 06       		.uleb128 0x6
 4622 027a 58       		.uleb128 0x58
 4623 027b 0B       		.uleb128 0xb
 4624 027c 59       		.uleb128 0x59
 4625 027d 0B       		.uleb128 0xb
 4626 027e 01       		.uleb128 0x1
 4627 027f 13       		.uleb128 0x13
 4628 0280 00       		.byte	0
 4629 0281 00       		.byte	0
 4630 0282 32       		.uleb128 0x32
 4631 0283 05       		.uleb128 0x5
 4632 0284 00       		.byte	0
 4633 0285 31       		.uleb128 0x31
 4634 0286 13       		.uleb128 0x13
 4635 0287 00       		.byte	0
 4636 0288 00       		.byte	0
 4637 0289 33       		.uleb128 0x33
 4638 028a 2E       		.uleb128 0x2e
 4639 028b 01       		.byte	0x1
 4640 028c 3F       		.uleb128 0x3f
 4641 028d 19       		.uleb128 0x19
 4642 028e 03       		.uleb128 0x3
 4643 028f 0E       		.uleb128 0xe
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 159


 4644 0290 3A       		.uleb128 0x3a
 4645 0291 0B       		.uleb128 0xb
 4646 0292 3B       		.uleb128 0x3b
 4647 0293 0B       		.uleb128 0xb
 4648 0294 27       		.uleb128 0x27
 4649 0295 19       		.uleb128 0x19
 4650 0296 8701     		.uleb128 0x87
 4651 0298 19       		.uleb128 0x19
 4652 0299 11       		.uleb128 0x11
 4653 029a 01       		.uleb128 0x1
 4654 029b 12       		.uleb128 0x12
 4655 029c 06       		.uleb128 0x6
 4656 029d 40       		.uleb128 0x40
 4657 029e 18       		.uleb128 0x18
 4658 029f 9742     		.uleb128 0x2117
 4659 02a1 19       		.uleb128 0x19
 4660 02a2 01       		.uleb128 0x1
 4661 02a3 13       		.uleb128 0x13
 4662 02a4 00       		.byte	0
 4663 02a5 00       		.byte	0
 4664 02a6 34       		.uleb128 0x34
 4665 02a7 05       		.uleb128 0x5
 4666 02a8 00       		.byte	0
 4667 02a9 03       		.uleb128 0x3
 4668 02aa 0E       		.uleb128 0xe
 4669 02ab 3A       		.uleb128 0x3a
 4670 02ac 0B       		.uleb128 0xb
 4671 02ad 3B       		.uleb128 0x3b
 4672 02ae 0B       		.uleb128 0xb
 4673 02af 49       		.uleb128 0x49
 4674 02b0 13       		.uleb128 0x13
 4675 02b1 02       		.uleb128 0x2
 4676 02b2 17       		.uleb128 0x17
 4677 02b3 00       		.byte	0
 4678 02b4 00       		.byte	0
 4679 02b5 35       		.uleb128 0x35
 4680 02b6 34       		.uleb128 0x34
 4681 02b7 00       		.byte	0
 4682 02b8 03       		.uleb128 0x3
 4683 02b9 0E       		.uleb128 0xe
 4684 02ba 3A       		.uleb128 0x3a
 4685 02bb 0B       		.uleb128 0xb
 4686 02bc 3B       		.uleb128 0x3b
 4687 02bd 0B       		.uleb128 0xb
 4688 02be 49       		.uleb128 0x49
 4689 02bf 13       		.uleb128 0x13
 4690 02c0 02       		.uleb128 0x2
 4691 02c1 18       		.uleb128 0x18
 4692 02c2 00       		.byte	0
 4693 02c3 00       		.byte	0
 4694 02c4 36       		.uleb128 0x36
 4695 02c5 05       		.uleb128 0x5
 4696 02c6 00       		.byte	0
 4697 02c7 31       		.uleb128 0x31
 4698 02c8 13       		.uleb128 0x13
 4699 02c9 1C       		.uleb128 0x1c
 4700 02ca 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 160


 4701 02cb 00       		.byte	0
 4702 02cc 00       		.byte	0
 4703 02cd 37       		.uleb128 0x37
 4704 02ce 05       		.uleb128 0x5
 4705 02cf 00       		.byte	0
 4706 02d0 31       		.uleb128 0x31
 4707 02d1 13       		.uleb128 0x13
 4708 02d2 02       		.uleb128 0x2
 4709 02d3 18       		.uleb128 0x18
 4710 02d4 00       		.byte	0
 4711 02d5 00       		.byte	0
 4712 02d6 38       		.uleb128 0x38
 4713 02d7 34       		.uleb128 0x34
 4714 02d8 00       		.byte	0
 4715 02d9 03       		.uleb128 0x3
 4716 02da 0E       		.uleb128 0xe
 4717 02db 3A       		.uleb128 0x3a
 4718 02dc 0B       		.uleb128 0xb
 4719 02dd 3B       		.uleb128 0x3b
 4720 02de 05       		.uleb128 0x5
 4721 02df 49       		.uleb128 0x49
 4722 02e0 13       		.uleb128 0x13
 4723 02e1 3F       		.uleb128 0x3f
 4724 02e2 19       		.uleb128 0x19
 4725 02e3 3C       		.uleb128 0x3c
 4726 02e4 19       		.uleb128 0x19
 4727 02e5 00       		.byte	0
 4728 02e6 00       		.byte	0
 4729 02e7 39       		.uleb128 0x39
 4730 02e8 34       		.uleb128 0x34
 4731 02e9 00       		.byte	0
 4732 02ea 03       		.uleb128 0x3
 4733 02eb 0E       		.uleb128 0xe
 4734 02ec 3A       		.uleb128 0x3a
 4735 02ed 0B       		.uleb128 0xb
 4736 02ee 3B       		.uleb128 0x3b
 4737 02ef 0B       		.uleb128 0xb
 4738 02f0 49       		.uleb128 0x49
 4739 02f1 13       		.uleb128 0x13
 4740 02f2 3F       		.uleb128 0x3f
 4741 02f3 19       		.uleb128 0x19
 4742 02f4 3C       		.uleb128 0x3c
 4743 02f5 19       		.uleb128 0x19
 4744 02f6 00       		.byte	0
 4745 02f7 00       		.byte	0
 4746 02f8 3A       		.uleb128 0x3a
 4747 02f9 34       		.uleb128 0x34
 4748 02fa 00       		.byte	0
 4749 02fb 03       		.uleb128 0x3
 4750 02fc 0E       		.uleb128 0xe
 4751 02fd 3A       		.uleb128 0x3a
 4752 02fe 0B       		.uleb128 0xb
 4753 02ff 3B       		.uleb128 0x3b
 4754 0300 0B       		.uleb128 0xb
 4755 0301 49       		.uleb128 0x49
 4756 0302 13       		.uleb128 0x13
 4757 0303 3F       		.uleb128 0x3f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 161


 4758 0304 19       		.uleb128 0x19
 4759 0305 02       		.uleb128 0x2
 4760 0306 18       		.uleb128 0x18
 4761 0307 00       		.byte	0
 4762 0308 00       		.byte	0
 4763 0309 3B       		.uleb128 0x3b
 4764 030a 2E       		.uleb128 0x2e
 4765 030b 00       		.byte	0
 4766 030c 3F       		.uleb128 0x3f
 4767 030d 19       		.uleb128 0x19
 4768 030e 3C       		.uleb128 0x3c
 4769 030f 19       		.uleb128 0x19
 4770 0310 6E       		.uleb128 0x6e
 4771 0311 0E       		.uleb128 0xe
 4772 0312 03       		.uleb128 0x3
 4773 0313 0E       		.uleb128 0xe
 4774 0314 3A       		.uleb128 0x3a
 4775 0315 0B       		.uleb128 0xb
 4776 0316 3B       		.uleb128 0x3b
 4777 0317 05       		.uleb128 0x5
 4778 0318 00       		.byte	0
 4779 0319 00       		.byte	0
 4780 031a 3C       		.uleb128 0x3c
 4781 031b 2E       		.uleb128 0x2e
 4782 031c 00       		.byte	0
 4783 031d 3F       		.uleb128 0x3f
 4784 031e 19       		.uleb128 0x19
 4785 031f 3C       		.uleb128 0x3c
 4786 0320 19       		.uleb128 0x19
 4787 0321 6E       		.uleb128 0x6e
 4788 0322 0E       		.uleb128 0xe
 4789 0323 03       		.uleb128 0x3
 4790 0324 0E       		.uleb128 0xe
 4791 0325 3A       		.uleb128 0x3a
 4792 0326 0B       		.uleb128 0xb
 4793 0327 3B       		.uleb128 0x3b
 4794 0328 0B       		.uleb128 0xb
 4795 0329 00       		.byte	0
 4796 032a 00       		.byte	0
 4797 032b 00       		.byte	0
 4798              		.section	.debug_loc,"",%progbits
 4799              	.Ldebug_loc0:
 4800              	.LLST0:
 4801 0000 00000000 		.4byte	.LVL0
 4802 0004 12000000 		.4byte	.LVL1
 4803 0008 0100     		.2byte	0x1
 4804 000a 50       		.byte	0x50
 4805 000b 12000000 		.4byte	.LVL1
 4806 000f 44000000 		.4byte	.LFE716
 4807 0013 0400     		.2byte	0x4
 4808 0015 F3       		.byte	0xf3
 4809 0016 01       		.uleb128 0x1
 4810 0017 50       		.byte	0x50
 4811 0018 9F       		.byte	0x9f
 4812 0019 00000000 		.4byte	0
 4813 001d 00000000 		.4byte	0
 4814              	.LLST1:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 162


 4815 0021 18000000 		.4byte	.LVL2
 4816 0025 2A000000 		.4byte	.LVL4
 4817 0029 0100     		.2byte	0x1
 4818 002b 50       		.byte	0x50
 4819 002c 00000000 		.4byte	0
 4820 0030 00000000 		.4byte	0
 4821              	.LLST2:
 4822 0034 1C000000 		.4byte	.LVL3
 4823 0038 30000000 		.4byte	.LVL5
 4824 003c 0200     		.2byte	0x2
 4825 003e 30       		.byte	0x30
 4826 003f 9F       		.byte	0x9f
 4827 0040 00000000 		.4byte	0
 4828 0044 00000000 		.4byte	0
 4829              	.LLST3:
 4830 0048 1C000000 		.4byte	.LVL3
 4831 004c 30000000 		.4byte	.LVL5
 4832 0050 0600     		.2byte	0x6
 4833 0052 03       		.byte	0x3
 4834 0053 00000000 		.4byte	.LC0
 4835 0057 9F       		.byte	0x9f
 4836 0058 00000000 		.4byte	0
 4837 005c 00000000 		.4byte	0
 4838              	.LLST4:
 4839 0060 30000000 		.4byte	.LVL8
 4840 0064 42000000 		.4byte	.LVL10
 4841 0068 0100     		.2byte	0x1
 4842 006a 50       		.byte	0x50
 4843 006b 00000000 		.4byte	0
 4844 006f 00000000 		.4byte	0
 4845              	.LLST5:
 4846 0073 34000000 		.4byte	.LVL9
 4847 0077 4A000000 		.4byte	.LVL12
 4848 007b 0200     		.2byte	0x2
 4849 007d 30       		.byte	0x30
 4850 007e 9F       		.byte	0x9f
 4851 007f 00000000 		.4byte	0
 4852 0083 00000000 		.4byte	0
 4853              	.LLST6:
 4854 0087 34000000 		.4byte	.LVL9
 4855 008b 4A000000 		.4byte	.LVL12
 4856 008f 0600     		.2byte	0x6
 4857 0091 03       		.byte	0x3
 4858 0092 50000000 		.4byte	.LC2
 4859 0096 9F       		.byte	0x9f
 4860 0097 00000000 		.4byte	0
 4861 009b 00000000 		.4byte	0
 4862              	.LLST7:
 4863 009f 4A000000 		.4byte	.LVL12
 4864 00a3 5E000000 		.4byte	.LVL13
 4865 00a7 0200     		.2byte	0x2
 4866 00a9 30       		.byte	0x30
 4867 00aa 9F       		.byte	0x9f
 4868 00ab 00000000 		.4byte	0
 4869 00af 00000000 		.4byte	0
 4870              	.LLST8:
 4871 00b3 4A000000 		.4byte	.LVL12
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 163


 4872 00b7 5E000000 		.4byte	.LVL13
 4873 00bb 0600     		.2byte	0x6
 4874 00bd 03       		.byte	0x3
 4875 00be 80000000 		.4byte	.LC3
 4876 00c2 9F       		.byte	0x9f
 4877 00c3 00000000 		.4byte	0
 4878 00c7 00000000 		.4byte	0
 4879              	.LLST9:
 4880 00cb 00000000 		.4byte	.LVL14
 4881 00cf 12000000 		.4byte	.LVL15
 4882 00d3 0100     		.2byte	0x1
 4883 00d5 50       		.byte	0x50
 4884 00d6 12000000 		.4byte	.LVL15
 4885 00da 15000000 		.4byte	.LVL16-1
 4886 00de 0100     		.2byte	0x1
 4887 00e0 52       		.byte	0x52
 4888 00e1 15000000 		.4byte	.LVL16-1
 4889 00e5 40000000 		.4byte	.LFE718
 4890 00e9 0400     		.2byte	0x4
 4891 00eb F3       		.byte	0xf3
 4892 00ec 01       		.uleb128 0x1
 4893 00ed 50       		.byte	0x50
 4894 00ee 9F       		.byte	0x9f
 4895 00ef 00000000 		.4byte	0
 4896 00f3 00000000 		.4byte	0
 4897              	.LLST10:
 4898 00f7 16000000 		.4byte	.LVL16
 4899 00fb 28000000 		.4byte	.LVL18
 4900 00ff 0100     		.2byte	0x1
 4901 0101 50       		.byte	0x50
 4902 0102 00000000 		.4byte	0
 4903 0106 00000000 		.4byte	0
 4904              	.LLST11:
 4905 010a 1A000000 		.4byte	.LVL17
 4906 010e 2E000000 		.4byte	.LVL19
 4907 0112 0200     		.2byte	0x2
 4908 0114 30       		.byte	0x30
 4909 0115 9F       		.byte	0x9f
 4910 0116 00000000 		.4byte	0
 4911 011a 00000000 		.4byte	0
 4912              	.LLST12:
 4913 011e 1A000000 		.4byte	.LVL17
 4914 0122 2E000000 		.4byte	.LVL19
 4915 0126 0600     		.2byte	0x6
 4916 0128 03       		.byte	0x3
 4917 0129 AC000000 		.4byte	.LC4
 4918 012d 9F       		.byte	0x9f
 4919 012e 00000000 		.4byte	0
 4920 0132 00000000 		.4byte	0
 4921              	.LLST13:
 4922 0136 3A000000 		.4byte	.LVL25
 4923 013a 4C000000 		.4byte	.LVL27
 4924 013e 0100     		.2byte	0x1
 4925 0140 50       		.byte	0x50
 4926 0141 00000000 		.4byte	0
 4927 0145 00000000 		.4byte	0
 4928              	.LLST14:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 164


 4929 0149 04000000 		.4byte	.LVL20
 4930 014d 0A000000 		.4byte	.LVL21
 4931 0151 0600     		.2byte	0x6
 4932 0153 0C       		.byte	0xc
 4933 0154 00001D41 		.4byte	0x411d0000
 4934 0158 9F       		.byte	0x9f
 4935 0159 00000000 		.4byte	0
 4936 015d 00000000 		.4byte	0
 4937              	.LLST15:
 4938 0161 0A000000 		.4byte	.LVL21
 4939 0165 22000000 		.4byte	.LVL23
 4940 0169 0600     		.2byte	0x6
 4941 016b 0C       		.byte	0xc
 4942 016c 00001D41 		.4byte	0x411d0000
 4943 0170 9F       		.byte	0x9f
 4944 0171 00000000 		.4byte	0
 4945 0175 00000000 		.4byte	0
 4946              	.LLST16:
 4947 0179 22000000 		.4byte	.LVL23
 4948 017d 26000000 		.4byte	.LVL24
 4949 0181 0600     		.2byte	0x6
 4950 0183 0C       		.byte	0xc
 4951 0184 00001D41 		.4byte	0x411d0000
 4952 0188 9F       		.byte	0x9f
 4953 0189 00000000 		.4byte	0
 4954 018d 00000000 		.4byte	0
 4955              	.LLST17:
 4956 0191 3E000000 		.4byte	.LVL26
 4957 0195 52000000 		.4byte	.LVL28
 4958 0199 0200     		.2byte	0x2
 4959 019b 30       		.byte	0x30
 4960 019c 9F       		.byte	0x9f
 4961 019d 00000000 		.4byte	0
 4962 01a1 00000000 		.4byte	0
 4963              	.LLST18:
 4964 01a5 3E000000 		.4byte	.LVL26
 4965 01a9 52000000 		.4byte	.LVL28
 4966 01ad 0600     		.2byte	0x6
 4967 01af 03       		.byte	0x3
 4968 01b0 00000000 		.4byte	.LC0
 4969 01b4 9F       		.byte	0x9f
 4970 01b5 00000000 		.4byte	0
 4971 01b9 00000000 		.4byte	0
 4972              	.LLST19:
 4973 01bd 00000000 		.4byte	.LVL29
 4974 01c1 0A000000 		.4byte	.LVL31
 4975 01c5 0100     		.2byte	0x1
 4976 01c7 50       		.byte	0x50
 4977 01c8 0A000000 		.4byte	.LVL31
 4978 01cc BC010000 		.4byte	.LFE714
 4979 01d0 0400     		.2byte	0x4
 4980 01d2 F3       		.byte	0xf3
 4981 01d3 01       		.uleb128 0x1
 4982 01d4 50       		.byte	0x50
 4983 01d5 9F       		.byte	0x9f
 4984 01d6 00000000 		.4byte	0
 4985 01da 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 165


 4986              	.LLST20:
 4987 01de 2E000000 		.4byte	.LVL37
 4988 01e2 48000000 		.4byte	.LVL39
 4989 01e6 0100     		.2byte	0x1
 4990 01e8 50       		.byte	0x50
 4991 01e9 50000000 		.4byte	.LVL41
 4992 01ed 54000000 		.4byte	.LVL42
 4993 01f1 0100     		.2byte	0x1
 4994 01f3 50       		.byte	0x50
 4995 01f4 5C000000 		.4byte	.LVL44
 4996 01f8 74000000 		.4byte	.LVL45
 4997 01fc 0100     		.2byte	0x1
 4998 01fe 50       		.byte	0x50
 4999 01ff 28010000 		.4byte	.LVL58
 5000 0203 3A010000 		.4byte	.LVL61
 5001 0207 0100     		.2byte	0x1
 5002 0209 50       		.byte	0x50
 5003 020a 4A010000 		.4byte	.LVL64
 5004 020e 58010000 		.4byte	.LVL66
 5005 0212 0100     		.2byte	0x1
 5006 0214 50       		.byte	0x50
 5007 0215 60010000 		.4byte	.LVL68
 5008 0219 6E010000 		.4byte	.LVL69
 5009 021d 0100     		.2byte	0x1
 5010 021f 50       		.byte	0x50
 5011 0220 00000000 		.4byte	0
 5012 0224 00000000 		.4byte	0
 5013              	.LLST21:
 5014 0228 08000000 		.4byte	.LVL30
 5015 022c 1C000000 		.4byte	.LVL36
 5016 0230 0200     		.2byte	0x2
 5017 0232 30       		.byte	0x30
 5018 0233 9F       		.byte	0x9f
 5019 0234 1C000000 		.4byte	.LVL36
 5020 0238 46000000 		.4byte	.LVL38
 5021 023c 0100     		.2byte	0x1
 5022 023e 54       		.byte	0x54
 5023 023f 46000000 		.4byte	.LVL38
 5024 0243 50000000 		.4byte	.LVL41
 5025 0247 0200     		.2byte	0x2
 5026 0249 31       		.byte	0x31
 5027 024a 9F       		.byte	0x9f
 5028 024b 50000000 		.4byte	.LVL41
 5029 024f 5C000000 		.4byte	.LVL44
 5030 0253 0200     		.2byte	0x2
 5031 0255 30       		.byte	0x30
 5032 0256 9F       		.byte	0x9f
 5033 0257 5C000000 		.4byte	.LVL44
 5034 025b BC010000 		.4byte	.LFE714
 5035 025f 0100     		.2byte	0x1
 5036 0261 54       		.byte	0x54
 5037 0262 00000000 		.4byte	0
 5038 0266 00000000 		.4byte	0
 5039              	.LLST22:
 5040 026a D0000000 		.4byte	.LVL54
 5041 026e DF000000 		.4byte	.LVL55-1
 5042 0272 0200     		.2byte	0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 166


 5043 0274 90       		.byte	0x90
 5044 0275 4E       		.uleb128 0x4e
 5045 0276 DF000000 		.4byte	.LVL55-1
 5046 027a 28010000 		.4byte	.LVL58
 5047 027e 0800     		.2byte	0x8
 5048 0280 F5       		.byte	0xf5
 5049 0281 50       		.uleb128 0x50
 5050 0282 25       		.uleb128 0x25
 5051 0283 F5       		.byte	0xf5
 5052 0284 51       		.uleb128 0x51
 5053 0285 25       		.uleb128 0x25
 5054 0286 1B       		.byte	0x1b
 5055 0287 9F       		.byte	0x9f
 5056 0288 00000000 		.4byte	0
 5057 028c 00000000 		.4byte	0
 5058              	.LLST23:
 5059 0290 5C000000 		.4byte	.LVL44
 5060 0294 84000000 		.4byte	.LVL48
 5061 0298 0200     		.2byte	0x2
 5062 029a 30       		.byte	0x30
 5063 029b 9F       		.byte	0x9f
 5064 029c 00000000 		.4byte	0
 5065 02a0 00000000 		.4byte	0
 5066              	.LLST24:
 5067 02a4 84000000 		.4byte	.LVL48
 5068 02a8 B0000000 		.4byte	.LVL51
 5069 02ac 0200     		.2byte	0x2
 5070 02ae 31       		.byte	0x31
 5071 02af 9F       		.byte	0x9f
 5072 02b0 00000000 		.4byte	0
 5073 02b4 00000000 		.4byte	0
 5074              	.LLST25:
 5075 02b8 B6000000 		.4byte	.LVL52
 5076 02bc BC000000 		.4byte	.LVL53
 5077 02c0 0200     		.2byte	0x2
 5078 02c2 30       		.byte	0x30
 5079 02c3 9F       		.byte	0x9f
 5080 02c4 00000000 		.4byte	0
 5081 02c8 00000000 		.4byte	0
 5082              	.LLST26:
 5083 02cc B6000000 		.4byte	.LVL52
 5084 02d0 BC000000 		.4byte	.LVL53
 5085 02d4 0600     		.2byte	0x6
 5086 02d6 0C       		.byte	0xc
 5087 02d7 00053240 		.4byte	0x40320500
 5088 02db 9F       		.byte	0x9f
 5089 02dc 00000000 		.4byte	0
 5090 02e0 00000000 		.4byte	0
 5091              	.LLST27:
 5092 02e4 32010000 		.4byte	.LVL59
 5093 02e8 38010000 		.4byte	.LVL60
 5094 02ec 0200     		.2byte	0x2
 5095 02ee 30       		.byte	0x30
 5096 02ef 9F       		.byte	0x9f
 5097 02f0 00000000 		.4byte	0
 5098 02f4 00000000 		.4byte	0
 5099              	.LLST28:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 167


 5100 02f8 32010000 		.4byte	.LVL59
 5101 02fc 38010000 		.4byte	.LVL60
 5102 0300 0600     		.2byte	0x6
 5103 0302 0C       		.byte	0xc
 5104 0303 00053240 		.4byte	0x40320500
 5105 0307 9F       		.byte	0x9f
 5106 0308 00000000 		.4byte	0
 5107 030c 00000000 		.4byte	0
 5108              	.LLST29:
 5109 0310 4A010000 		.4byte	.LVL64
 5110 0314 52010000 		.4byte	.LVL65
 5111 0318 0100     		.2byte	0x1
 5112 031a 53       		.byte	0x53
 5113 031b 52010000 		.4byte	.LVL65
 5114 031f 5D010000 		.4byte	.LVL67-1
 5115 0323 0200     		.2byte	0x2
 5116 0325 91       		.byte	0x91
 5117 0326 50       		.sleb128 -48
 5118 0327 00000000 		.4byte	0
 5119 032b 00000000 		.4byte	0
 5120              	.LLST30:
 5121 032f 4A010000 		.4byte	.LVL64
 5122 0333 60010000 		.4byte	.LVL68
 5123 0337 0600     		.2byte	0x6
 5124 0339 03       		.byte	0x3
 5125 033a 30010000 		.4byte	.LC7
 5126 033e 9F       		.byte	0x9f
 5127 033f 00000000 		.4byte	0
 5128 0343 00000000 		.4byte	0
 5129              		.section	.debug_aranges,"",%progbits
 5130 0000 3C000000 		.4byte	0x3c
 5131 0004 0200     		.2byte	0x2
 5132 0006 00000000 		.4byte	.Ldebug_info0
 5133 000a 04       		.byte	0x4
 5134 000b 00       		.byte	0
 5135 000c 0000     		.2byte	0
 5136 000e 0000     		.2byte	0
 5137 0010 00000000 		.4byte	.LFB716
 5138 0014 44000000 		.4byte	.LFE716-.LFB716
 5139 0018 00000000 		.4byte	.LFB717
 5140 001c 7C000000 		.4byte	.LFE717-.LFB717
 5141 0020 00000000 		.4byte	.LFB718
 5142 0024 40000000 		.4byte	.LFE718-.LFB718
 5143 0028 00000000 		.4byte	.LFB715
 5144 002c 6C000000 		.4byte	.LFE715-.LFB715
 5145 0030 00000000 		.4byte	.LFB714
 5146 0034 BC010000 		.4byte	.LFE714-.LFB714
 5147 0038 00000000 		.4byte	0
 5148 003c 00000000 		.4byte	0
 5149              		.section	.debug_ranges,"",%progbits
 5150              	.Ldebug_ranges0:
 5151 0000 00000000 		.4byte	.LFB716
 5152 0004 44000000 		.4byte	.LFE716
 5153 0008 00000000 		.4byte	.LFB717
 5154 000c 7C000000 		.4byte	.LFE717
 5155 0010 00000000 		.4byte	.LFB718
 5156 0014 40000000 		.4byte	.LFE718
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 168


 5157 0018 00000000 		.4byte	.LFB715
 5158 001c 6C000000 		.4byte	.LFE715
 5159 0020 00000000 		.4byte	.LFB714
 5160 0024 BC010000 		.4byte	.LFE714
 5161 0028 00000000 		.4byte	0
 5162 002c 00000000 		.4byte	0
 5163              		.section	.debug_line,"",%progbits
 5164              	.Ldebug_line0:
 5165 0000 B7060000 		.section	.debug_str,"MS",%progbits,1
 5165      0200BA05 
 5165      00000201 
 5165      FB0E0D00 
 5165      01010101 
 5166              	.LASF388:
 5167 0000 63795F62 		.ascii	"cy_ble_connState\000"
 5167      6C655F63 
 5167      6F6E6E53 
 5167      74617465 
 5167      00
 5168              	.LASF318:
 5169 0011 43595F42 		.ascii	"CY_BLE_HTS_TEMP_TYPE\000"
 5169      4C455F48 
 5169      54535F54 
 5169      454D505F 
 5169      54595045 
 5170              	.LASF33:
 5171 0026 52455345 		.ascii	"RESERVED\000"
 5171      52564544 
 5171      00
 5172              	.LASF41:
 5173 002f 5644445F 		.ascii	"VDD_ACTIVE\000"
 5173      41435449 
 5173      564500
 5174              	.LASF37:
 5175 003a 494E5452 		.ascii	"INTR_CAUSE0\000"
 5175      5F434155 
 5175      53453000 
 5176              	.LASF38:
 5177 0046 494E5452 		.ascii	"INTR_CAUSE1\000"
 5177      5F434155 
 5177      53453100 
 5178              	.LASF285:
 5179 0052 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 5179      4C455F45 
 5179      56545F4C 
 5179      32434150 
 5179      5F434246 
 5180              	.LASF127:
 5181 0072 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 5181      625F7363 
 5181      625F7370 
 5181      695F6861 
 5181      6E646C65 
 5182              	.LASF122:
 5183 0090 73746F70 		.ascii	"stopInputMode\000"
 5183      496E7075 
 5183      744D6F64 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 169


 5183      6500
 5184              	.LASF233:
 5185 009e 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 5185      4C455F45 
 5185      56545F47 
 5185      4150505F 
 5185      41445645 
 5186              	.LASF327:
 5187 00c7 43595F42 		.ascii	"CY_BLE_SRVI_COUNT\000"
 5187      4C455F53 
 5187      5256495F 
 5187      434F554E 
 5187      5400
 5188              	.LASF316:
 5189 00d9 43595F42 		.ascii	"CY_BLE_DIS_CHAR_COUNT\000"
 5189      4C455F44 
 5189      49535F43 
 5189      4841525F 
 5189      434F554E 
 5190              	.LASF8:
 5191 00ef 73686F72 		.ascii	"short int\000"
 5191      7420696E 
 5191      7400
 5192              	.LASF287:
 5193 00f9 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 5193      4C455F45 
 5193      56545F4C 
 5193      32434150 
 5193      5F434246 
 5194              	.LASF180:
 5195 011d 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 5195      4C455F45 
 5195      56545F50 
 5195      454E4449 
 5195      4E475F46 
 5196              	.LASF218:
 5197 013c 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 5197      4C455F45 
 5197      56545F41 
 5197      45535F43 
 5197      434D5F44 
 5198              	.LASF271:
 5199 0160 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 5199      4C455F45 
 5199      56545F47 
 5199      41545443 
 5199      5F48414E 
 5200              	.LASF389:
 5201 0182 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 5201      494E4B5F 
 5201      5350494D 
 5201      5F636F6E 
 5201      74657874 
 5202              	.LASF340:
 5203 0197 54454D50 		.ascii	"TEMPERATURE_TIMER_EXPIRED\000"
 5203      45524154 
 5203      5552455F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 170


 5203      54494D45 
 5203      525F4558 
 5204              	.LASF97:
 5205 01b1 666F726D 		.ascii	"format\000"
 5205      617400
 5206              	.LASF381:
 5207 01b8 74656D70 		.ascii	"temperature\000"
 5207      65726174 
 5207      75726500 
 5208              	.LASF305:
 5209 01c4 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 5209      4C455F43 
 5209      4F4E4E5F 
 5209      53544154 
 5209      455F434C 
 5210              	.LASF53:
 5211 01e8 4348414E 		.ascii	"CHAN_EN\000"
 5211      5F454E00 
 5212              	.LASF142:
 5213 01f0 74785374 		.ascii	"txStatus\000"
 5213      61747573 
 5213      00
 5214              	.LASF420:
 5215 01f9 69737241 		.ascii	"isrADC\000"
 5215      444300
 5216              	.LASF212:
 5217 0200 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 5217      4C455F45 
 5217      56545F53 
 5217      45545F54 
 5217      585F5057 
 5218              	.LASF348:
 5219 021f 53454E44 		.ascii	"SEND_IMU_NOTIFICATION\000"
 5219      5F494D55 
 5219      5F4E4F54 
 5219      49464943 
 5219      4154494F 
 5220              	.LASF156:
 5221 0235 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 5221      41525F49 
 5221      4E54525F 
 5221      454F535F 
 5221      4D41534B 
 5222              	.LASF201:
 5223 024a 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 5223      4C455F45 
 5223      56545F47 
 5223      45545F50 
 5223      48595F43 
 5224              	.LASF369:
 5225 0266 54656D70 		.ascii	"TemperatureTimerUpdate\000"
 5225      65726174 
 5225      75726554 
 5225      696D6572 
 5225      55706461 
 5226              	.LASF61:
 5227 027d 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 171


 5227      5F574F52 
 5227      4B5F5550 
 5227      44415445 
 5227      4400
 5228              	.LASF399:
 5229 028f 74656D70 		.ascii	"temperatureDataQ\000"
 5229      65726174 
 5229      75726544 
 5229      61746151 
 5229      00
 5230              	.LASF71:
 5231 02a0 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 5231      455F494E 
 5231      54525F4D 
 5231      41534B00 
 5232              	.LASF99:
 5233 02b0 6461794F 		.ascii	"dayOfMonth\000"
 5233      664D6F6E 
 5233      746800
 5234              	.LASF286:
 5235 02bb 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 5235      4C455F45 
 5235      56545F4C 
 5235      32434150 
 5235      5F434246 
 5236              	.LASF1:
 5237 02df 756E7369 		.ascii	"unsigned int\000"
 5237      676E6564 
 5237      20696E74 
 5237      00
 5238              	.LASF387:
 5239 02ec 63795F62 		.ascii	"cy_ble_connHandle\000"
 5239      6C655F63 
 5239      6F6E6E48 
 5239      616E646C 
 5239      6500
 5240              	.LASF396:
 5241 02fe 5254435F 		.ascii	"RTC_rtcDstStatus\000"
 5241      72746344 
 5241      73745374 
 5241      61747573 
 5241      00
 5242              	.LASF73:
 5243 030f 494E5452 		.ascii	"INTR_CAUSE\000"
 5243      5F434155 
 5243      534500
 5244              	.LASF153:
 5245 031a 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 5245      41525F52 
 5245      414E4745 
 5245      5F434F4E 
 5245      445F4F55 
 5246              	.LASF103:
 5247 0334 63795F73 		.ascii	"cy_stc_rtc_dst_format_t\000"
 5247      74635F72 
 5247      74635F64 
 5247      73745F66 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 172


 5247      6F726D61 
 5248              	.LASF235:
 5249 034c 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 5249      4C455F45 
 5249      56545F47 
 5249      41505F44 
 5249      45564943 
 5250              	.LASF136:
 5251 036f 74784275 		.ascii	"txBufIdx\000"
 5251      66496478 
 5251      00
 5252              	.LASF314:
 5253 0378 43595F42 		.ascii	"CY_BLE_DIS_REG_CERT_DATA\000"
 5253      4C455F44 
 5253      49535F52 
 5253      45475F43 
 5253      4552545F 
 5254              	.LASF121:
 5255 0391 73746172 		.ascii	"startInput\000"
 5255      74496E70 
 5255      757400
 5256              	.LASF10:
 5257 039c 5F5F696E 		.ascii	"__int32_t\000"
 5257      7433325F 
 5257      7400
 5258              	.LASF309:
 5259 03a6 43595F42 		.ascii	"CY_BLE_DIS_SERIAL_NUMBER\000"
 5259      4C455F44 
 5259      49535F53 
 5259      45524941 
 5259      4C5F4E55 
 5260              	.LASF106:
 5261 03bf 63795F73 		.ascii	"cy_stc_rtc_dst_t\000"
 5261      74635F72 
 5261      74635F64 
 5261      73745F74 
 5261      00
 5262              	.LASF95:
 5263 03d0 43595F52 		.ascii	"CY_RTC_DST_FIXED\000"
 5263      54435F44 
 5263      53545F46 
 5263      49584544 
 5263      00
 5264              	.LASF63:
 5265 03e1 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 5265      5F574F52 
 5265      4B5F4E45 
 5265      5756414C 
 5265      554500
 5266              	.LASF328:
 5267 03f4 6368616E 		.ascii	"channelBase\000"
 5267      6E656C42 
 5267      61736500 
 5268              	.LASF64:
 5269 0400 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 5269      5F524553 
 5269      554C545F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 173


 5269      4E455756 
 5269      414C5545 
 5270              	.LASF306:
 5271 0415 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 5271      6E5F626C 
 5271      655F636F 
 5271      6E6E5F73 
 5271      74617465 
 5272              	.LASF193:
 5273 042c 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 5273      4C455F45 
 5273      56545F47 
 5273      45545F4C 
 5273      4F43414C 
 5274              	.LASF260:
 5275 044e 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 5275      4C455F45 
 5275      56545F47 
 5275      41545443 
 5275      5F46494E 
 5276              	.LASF346:
 5277 046d 48414E44 		.ascii	"HANDLE_GPIO_INTERRUPT\000"
 5277      4C455F47 
 5277      50494F5F 
 5277      494E5445 
 5277      52525550 
 5278              	.LASF205:
 5279 0483 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 5279      4C455F45 
 5279      56545F53 
 5279      45545F50 
 5279      52495641 
 5280              	.LASF330:
 5281 04a8 6877436F 		.ascii	"hwConfigStc\000"
 5281      6E666967 
 5281      53746300 
 5282              	.LASF23:
 5283 04b4 4F55545F 		.ascii	"OUT_SET\000"
 5283      53455400 
 5284              	.LASF383:
 5285 04bc 70726F63 		.ascii	"processingComplete\000"
 5285      65737369 
 5285      6E67436F 
 5285      6D706C65 
 5285      746500
 5286              	.LASF123:
 5287 04cf 73746F70 		.ascii	"stopInput\000"
 5287      496E7075 
 5287      7400
 5288              	.LASF145:
 5289 04d9 72785269 		.ascii	"rxRingBufSize\000"
 5289      6E674275 
 5289      6653697A 
 5289      6500
 5290              	.LASF65:
 5291 04e7 53415455 		.ascii	"SATURATE_INTR\000"
 5291      52415445 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 174


 5291      5F494E54 
 5291      5200
 5292              	.LASF49:
 5293 04f5 53414D50 		.ascii	"SAMPLE_TIME01\000"
 5293      4C455F54 
 5293      494D4530 
 5293      3100
 5294              	.LASF254:
 5295 0503 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 5295      4C455F45 
 5295      56545F47 
 5295      4154545F 
 5295      434F4E4E 
 5296              	.LASF77:
 5297 051f 494E4A5F 		.ascii	"INJ_RESULT\000"
 5297      52455355 
 5297      4C5400
 5298              	.LASF28:
 5299 052a 494E5452 		.ascii	"INTR_SET\000"
 5299      5F534554 
 5299      00
 5300              	.LASF293:
 5301 0533 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 5301      4C455F41 
 5301      44565F53 
 5301      54415445 
 5301      5F53544F 
 5302              	.LASF411:
 5303 054c 43795F53 		.ascii	"Cy_SAR_Wakeup\000"
 5303      41525F57 
 5303      616B6575 
 5303      7000
 5304              	.LASF168:
 5305 055a 73617449 		.ascii	"satIntrMask\000"
 5305      6E74724D 
 5305      61736B00 
 5306              	.LASF355:
 5307 0566 73747269 		.ascii	"stringPtr\000"
 5307      6E675074 
 5307      7200
 5308              	.LASF261:
 5309 0570 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 5309      4C455F45 
 5309      56545F47 
 5309      41545443 
 5309      5F46494E 
 5310              	.LASF203:
 5311 0598 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 5311      4C455F45 
 5311      56545F53 
 5311      45545F50 
 5311      48595F43 
 5312              	.LASF276:
 5313 05b4 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 5313      4C455F45 
 5313      56545F47 
 5313      41545453 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 175


 5313      5F524541 
 5314              	.LASF112:
 5315 05de 636F6D70 		.ascii	"compare0\000"
 5315      61726530 
 5315      00
 5316              	.LASF113:
 5317 05e7 636F6D70 		.ascii	"compare1\000"
 5317      61726531 
 5317      00
 5318              	.LASF417:
 5319 05f0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 5319      43313120 
 5319      352E342E 
 5319      31203230 
 5319      31363036 
 5320 0623 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 5320      20726576 
 5320      6973696F 
 5320      6E203233 
 5320      37373135 
 5321 0656 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 5321      70202D6D 
 5321      6670753D 
 5321      66707634 
 5321      2D73702D 
 5322 0689 65637469 		.ascii	"ections -ffat-lto-objects\000"
 5322      6F6E7320 
 5322      2D666661 
 5322      742D6C74 
 5322      6F2D6F62 
 5323              	.LASF248:
 5324 06a3 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 5324      4C455F45 
 5324      56545F47 
 5324      41505F52 
 5324      45534F4C 
 5325              	.LASF150:
 5326 06ca 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 5326      41525F52 
 5326      414E4745 
 5326      5F434F4E 
 5326      445F4245 
 5327              	.LASF299:
 5328 06e2 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 5328      4C455F43 
 5328      4F4E4E5F 
 5328      53544154 
 5328      455F434C 
 5329              	.LASF270:
 5330 0713 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 5330      4C455F45 
 5330      56545F47 
 5330      41545443 
 5330      5F455845 
 5331              	.LASF394:
 5332 0733 54696D65 		.ascii	"Timer_PPG_config\000"
 5332      725F5050 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 176


 5332      475F636F 
 5332      6E666967 
 5332      00
 5333              	.LASF257:
 5334 0744 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 5334      4C455F45 
 5334      56545F47 
 5334      41545443 
 5334      5F584348 
 5335              	.LASF273:
 5336 0763 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 5336      4C455F45 
 5336      56545F47 
 5336      41545453 
 5336      5F48414E 
 5337              	.LASF143:
 5338 0785 72785374 		.ascii	"rxStatus\000"
 5338      61747573 
 5338      00
 5339              	.LASF30:
 5340 078e 4346475F 		.ascii	"CFG_IN\000"
 5340      494E00
 5341              	.LASF204:
 5342 0795 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 5342      4C455F45 
 5342      56545F50 
 5342      48595F55 
 5342      50444154 
 5343              	.LASF410:
 5344 07b4 43795F53 		.ascii	"Cy_SAR_Sleep\000"
 5344      41525F53 
 5344      6C656570 
 5344      00
 5345              	.LASF262:
 5346 07c1 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 5346      4C455F45 
 5346      56545F47 
 5346      41545443 
 5346      5F524541 
 5347              	.LASF115:
 5348 07db 696E7465 		.ascii	"interruptSources\000"
 5348      72727570 
 5348      74536F75 
 5348      72636573 
 5348      00
 5349              	.LASF263:
 5350 07ec 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 5350      4C455F45 
 5350      56545F47 
 5350      41545443 
 5350      5F524541 
 5351              	.LASF337:
 5352 080b 53454E44 		.ascii	"SEND_TEMPERATURE\000"
 5352      5F54454D 
 5352      50455241 
 5352      54555245 
 5352      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 177


 5353              	.LASF21:
 5354 081c 75696E74 		.ascii	"uint32_t\000"
 5354      33325F74 
 5354      00
 5355              	.LASF380:
 5356 0825 72546865 		.ascii	"rThermistor\000"
 5356      726D6973 
 5356      746F7200 
 5357              	.LASF195:
 5358 0831 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 5358      4C455F45 
 5358      56545F53 
 5358      45545F52 
 5358      50415F45 
 5359              	.LASF378:
 5360 0854 636F756E 		.ascii	"countThermistor\000"
 5360      74546865 
 5360      726D6973 
 5360      746F7200 
 5361              	.LASF354:
 5362 0864 54696D65 		.ascii	"TimerHandle_t\000"
 5362      7248616E 
 5362      646C655F 
 5362      7400
 5363              	.LASF176:
 5364 0872 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 5364      4C455F45 
 5364      56545F53 
 5364      5441434B 
 5364      5F4F4E00 
 5365              	.LASF206:
 5366 0886 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 5366      4C455F45 
 5366      56545F4C 
 5366      4C5F434E 
 5366      54524C5F 
 5367              	.LASF421:
 5368 08b0 5461736B 		.ascii	"Task_Temperature\000"
 5368      5F54656D 
 5368      70657261 
 5368      74757265 
 5368      00
 5369              	.LASF272:
 5370 08c1 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 5370      4C455F45 
 5370      56545F47 
 5370      41545443 
 5370      5F48414E 
 5371              	.LASF192:
 5372 08e3 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 5372      4C455F45 
 5372      56545F47 
 5372      45545F50 
 5372      4545525F 
 5373              	.LASF397:
 5374 0904 5254435F 		.ascii	"RTC_dstConfig\000"
 5374      64737443 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 178


 5374      6F6E6669 
 5374      6700
 5375              	.LASF175:
 5376 0912 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 5376      4C455F45 
 5376      56545F49 
 5376      4E56414C 
 5376      494400
 5377              	.LASF149:
 5378 0925 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 5378      74635F73 
 5378      63625F75 
 5378      6172745F 
 5378      636F6E74 
 5379              	.LASF357:
 5380 093f 62617365 		.ascii	"base\000"
 5380      00
 5381              	.LASF141:
 5382 0944 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 5382      74635F73 
 5382      63625F75 
 5382      6172745F 
 5382      636F6E74 
 5383              	.LASF22:
 5384 095c 4F55545F 		.ascii	"OUT_CLR\000"
 5384      434C5200 
 5385              	.LASF415:
 5386 0964 78517565 		.ascii	"xQueueGenericReceive\000"
 5386      75654765 
 5386      6E657269 
 5386      63526563 
 5386      65697665 
 5387              	.LASF119:
 5388 0979 72656C6F 		.ascii	"reloadInput\000"
 5388      6164496E 
 5388      70757400 
 5389              	.LASF19:
 5390 0985 696E7431 		.ascii	"int16_t\000"
 5390      365F7400 
 5391              	.LASF329:
 5392 098d 6E756D43 		.ascii	"numChannels\000"
 5392      68616E6E 
 5392      656C7300 
 5393              	.LASF243:
 5394 0999 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 5394      4C455F45 
 5394      56545F47 
 5394      41505F45 
 5394      4E48414E 
 5395              	.LASF274:
 5396 09be 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 5396      4C455F45 
 5396      56545F47 
 5396      41545453 
 5396      5F444154 
 5397              	.LASF14:
 5398 09e3 6C6F6E67 		.ascii	"long long unsigned int\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 179


 5398      206C6F6E 
 5398      6720756E 
 5398      7369676E 
 5398      65642069 
 5399              	.LASF349:
 5400 09fa 626C655F 		.ascii	"ble_commands_list_t\000"
 5400      636F6D6D 
 5400      616E6473 
 5400      5F6C6973 
 5400      745F7400 
 5401              	.LASF297:
 5402 0a0e 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 5402      6E5F626C 
 5402      655F6164 
 5402      765F7374 
 5402      6174655F 
 5403              	.LASF210:
 5404 0a24 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 5404      4C455F45 
 5404      56545F47 
 5404      45545F52 
 5404      5353495F 
 5405              	.LASF50:
 5406 0a41 53414D50 		.ascii	"SAMPLE_TIME23\000"
 5406      4C455F54 
 5406      494D4532 
 5406      3300
 5407              	.LASF163:
 5408 0a4f 72616E67 		.ascii	"rangeThres\000"
 5408      65546872 
 5408      657300
 5409              	.LASF294:
 5410 0a5a 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 5410      4C455F41 
 5410      44565F53 
 5410      54415445 
 5410      5F414456 
 5411              	.LASF382:
 5412 0a79 626C6543 		.ascii	"bleCommandAndData\000"
 5412      6F6D6D61 
 5412      6E64416E 
 5412      64446174 
 5412      6100
 5413              	.LASF96:
 5414 0a8b 63795F65 		.ascii	"cy_en_rtc_dst_format_t\000"
 5414      6E5F7274 
 5414      635F6473 
 5414      745F666F 
 5414      726D6174 
 5415              	.LASF151:
 5416 0aa2 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 5416      41525F52 
 5416      414E4745 
 5416      5F434F4E 
 5416      445F494E 
 5417              	.LASF236:
 5418 0abb 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 180


 5418      4C455F45 
 5418      56545F47 
 5418      41505F45 
 5418      4E435259 
 5419              	.LASF208:
 5420 0ad9 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 5420      4C455F45 
 5420      56545F53 
 5420      45545F44 
 5420      45564943 
 5421              	.LASF174:
 5422 0afd 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 5422      74635F73 
 5422      61725F63 
 5422      6F6E6669 
 5422      675F7400 
 5423              	.LASF291:
 5424 0b11 61747449 		.ascii	"attId\000"
 5424      6400
 5425              	.LASF159:
 5426 0b17 6374726C 		.ascii	"ctrl\000"
 5426      00
 5427              	.LASF120:
 5428 0b1c 73746172 		.ascii	"startInputMode\000"
 5428      74496E70 
 5428      75744D6F 
 5428      646500
 5429              	.LASF116:
 5430 0b2b 63617074 		.ascii	"captureInputMode\000"
 5430      75726549 
 5430      6E707574 
 5430      4D6F6465 
 5430      00
 5431              	.LASF242:
 5432 0b3c 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 5432      4C455F45 
 5432      56545F47 
 5432      41505F4F 
 5432      4F425F47 
 5433              	.LASF31:
 5434 0b66 4346475F 		.ascii	"CFG_OUT\000"
 5434      4F555400 
 5435              	.LASF75:
 5436 0b6e 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 5436      4348414E 
 5436      5F434F4E 
 5436      46494700 
 5437              	.LASF131:
 5438 0b7e 72784275 		.ascii	"rxBuf\000"
 5438      6600
 5439              	.LASF372:
 5440 0b84 696E7472 		.ascii	"intr_status\000"
 5440      5F737461 
 5440      74757300 
 5441              	.LASF255:
 5442 0b90 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 5442      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 181


 5442      56545F47 
 5442      4154545F 
 5442      44495343 
 5443              	.LASF234:
 5444 0baf 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 5444      4C455F45 
 5444      56545F47 
 5444      41505F44 
 5444      45564943 
 5445              	.LASF207:
 5446 0bcf 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 5446      4C455F45 
 5446      56545F53 
 5446      4F46545F 
 5446      52455345 
 5447              	.LASF315:
 5448 0bee 43595F42 		.ascii	"CY_BLE_DIS_PNP_ID\000"
 5448      4C455F44 
 5448      49535F50 
 5448      4E505F49 
 5448      4400
 5449              	.LASF91:
 5450 0c00 5341525F 		.ascii	"SAR_Type\000"
 5450      54797065 
 5450      00
 5451              	.LASF268:
 5452 0c09 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 5452      4C455F45 
 5452      56545F47 
 5452      41545453 
 5452      5F505245 
 5453              	.LASF162:
 5454 0c29 73616D70 		.ascii	"sampleTime23\000"
 5454      6C655469 
 5454      6D653233 
 5454      00
 5455              	.LASF137:
 5456 0c36 63624576 		.ascii	"cbEvents\000"
 5456      656E7473 
 5456      00
 5457              	.LASF312:
 5458 0c3f 43595F42 		.ascii	"CY_BLE_DIS_SOFTWARE_REV\000"
 5458      4C455F44 
 5458      49535F53 
 5458      4F465457 
 5458      4152455F 
 5459              	.LASF17:
 5460 0c57 646F7562 		.ascii	"double\000"
 5460      6C6500
 5461              	.LASF93:
 5462 0c5e 5F426F6F 		.ascii	"_Bool\000"
 5462      6C00
 5463              	.LASF66:
 5464 0c64 53415455 		.ascii	"SATURATE_INTR_SET\000"
 5464      52415445 
 5464      5F494E54 
 5464      525F5345 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 182


 5464      5400
 5465              	.LASF105:
 5466 0c76 73746F70 		.ascii	"stopDst\000"
 5466      44737400 
 5467              	.LASF289:
 5468 0c7e 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 5468      4C455F45 
 5468      56545F4D 
 5468      415800
 5469              	.LASF102:
 5470 0c8d 6D6F6E74 		.ascii	"month\000"
 5470      6800
 5471              	.LASF100:
 5472 0c93 7765656B 		.ascii	"weekOfMonth\000"
 5472      4F664D6F 
 5472      6E746800 
 5473              	.LASF52:
 5474 0c9f 52414E47 		.ascii	"RANGE_COND\000"
 5474      455F434F 
 5474      4E4400
 5475              	.LASF284:
 5476 0caa 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 5476      4C455F45 
 5476      56545F4C 
 5476      32434150 
 5476      5F434246 
 5477              	.LASF42:
 5478 0ccc 5644445F 		.ascii	"VDD_INTR\000"
 5478      494E5452 
 5478      00
 5479              	.LASF215:
 5480 0cd5 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 5480      4C455F45 
 5480      56545F52 
 5480      414E444F 
 5480      4D5F4E55 
 5481              	.LASF295:
 5482 0cf8 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 5482      4C455F41 
 5482      44565F53 
 5482      54415445 
 5482      5F414456 
 5483              	.LASF245:
 5484 0d15 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 5484      4C455F45 
 5484      56545F47 
 5484      41505F53 
 5484      4D505F4E 
 5485              	.LASF408:
 5486 0d3d 78517565 		.ascii	"xQueueGenericSendFromISR\000"
 5486      75654765 
 5486      6E657269 
 5486      6353656E 
 5486      6446726F 
 5487              	.LASF188:
 5488 0d56 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 5488      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 183


 5488      56545F53 
 5488      45545F44 
 5488      4154415F 
 5489              	.LASF266:
 5490 0d7a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 5490      4C455F45 
 5490      56545F47 
 5490      41545443 
 5490      5F575249 
 5491              	.LASF403:
 5492 0d95 78517565 		.ascii	"xQueueGenericSend\000"
 5492      75654765 
 5492      6E657269 
 5492      6353656E 
 5492      6400
 5493              	.LASF0:
 5494 0da7 666C6F61 		.ascii	"float\000"
 5494      7400
 5495              	.LASF178:
 5496 0dad 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 5496      4C455F45 
 5496      56545F53 
 5496      5441434B 
 5496      5F425553 
 5497              	.LASF25:
 5498 0dca 494E5452 		.ascii	"INTR\000"
 5498      00
 5499              	.LASF36:
 5500 0dcf 4750494F 		.ascii	"GPIO_PRT_Type\000"
 5500      5F505254 
 5500      5F547970 
 5500      6500
 5501              	.LASF185:
 5502 0ddd 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 5502      4C455F45 
 5502      56545F47 
 5502      45545F43 
 5502      48414E4E 
 5503              	.LASF98:
 5504 0e01 686F7572 		.ascii	"hour\000"
 5504      00
 5505              	.LASF321:
 5506 0e06 43595F42 		.ascii	"CY_BLE_HTS_CHAR_COUNT\000"
 5506      4C455F48 
 5506      54535F43 
 5506      4841525F 
 5506      434F554E 
 5507              	.LASF26:
 5508 0e1c 494E5452 		.ascii	"INTR_MASK\000"
 5508      5F4D4153 
 5508      4B00
 5509              	.LASF54:
 5510 0e26 53544152 		.ascii	"START_CTRL\000"
 5510      545F4354 
 5510      524C00
 5511              	.LASF179:
 5512 0e31 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 184


 5512      4C455F45 
 5512      56545F4D 
 5512      454D4F52 
 5512      595F5245 
 5513              	.LASF173:
 5514 0e4b 76726566 		.ascii	"vrefMvValue\000"
 5514      4D765661 
 5514      6C756500 
 5515              	.LASF226:
 5516 0e57 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 5516      4C455F45 
 5516      56545F53 
 5516      45545F43 
 5516      4F4E4E5F 
 5517              	.LASF296:
 5518 0e7d 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 5518      4C455F41 
 5518      44565F53 
 5518      54415445 
 5518      5F53544F 
 5519              	.LASF325:
 5520 0e9d 43595F42 		.ascii	"CY_BLE_SRVI_GAP\000"
 5520      4C455F53 
 5520      5256495F 
 5520      47415000 
 5521              	.LASF303:
 5522 0ead 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 5522      4C455F43 
 5522      4F4E4E5F 
 5522      53544154 
 5522      455F434C 
 5523              	.LASF117:
 5524 0ed7 63617074 		.ascii	"captureInput\000"
 5524      75726549 
 5524      6E707574 
 5524      00
 5525              	.LASF375:
 5526 0ee4 6368616E 		.ascii	"chan\000"
 5526      00
 5527              	.LASF362:
 5528 0ee9 4144435F 		.ascii	"ADC_Sleep\000"
 5528      536C6565 
 5528      7000
 5529              	.LASF152:
 5530 0ef3 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 5530      41525F52 
 5530      414E4745 
 5530      5F434F4E 
 5530      445F4142 
 5531              	.LASF16:
 5532 0f0b 63686172 		.ascii	"char\000"
 5532      00
 5533              	.LASF407:
 5534 0f10 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 5534      79734C69 
 5534      625F4173 
 5534      73657274 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 185


 5534      4661696C 
 5535              	.LASF217:
 5536 0f27 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 5536      4C455F45 
 5536      56545F41 
 5536      45535F43 
 5536      434D5F45 
 5537              	.LASF238:
 5538 0f4b 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 5538      4C455F45 
 5538      56545F47 
 5538      4150435F 
 5538      5343414E 
 5539              	.LASF165:
 5540 0f6b 6368616E 		.ascii	"chanEn\000"
 5540      456E00
 5541              	.LASF147:
 5542 0f72 72785269 		.ascii	"rxRingBufTail\000"
 5542      6E674275 
 5542      66546169 
 5542      6C00
 5543              	.LASF104:
 5544 0f80 73746172 		.ascii	"startDst\000"
 5544      74447374 
 5544      00
 5545              	.LASF308:
 5546 0f89 43595F42 		.ascii	"CY_BLE_DIS_MODEL_NUMBER\000"
 5546      4C455F44 
 5546      49535F4D 
 5546      4F44454C 
 5546      5F4E554D 
 5547              	.LASF356:
 5548 0fa1 65727243 		.ascii	"errCode\000"
 5548      6F646500 
 5549              	.LASF404:
 5550 0fa9 7854696D 		.ascii	"xTimerCreate\000"
 5550      65724372 
 5550      65617465 
 5550      00
 5551              	.LASF259:
 5552 0fb6 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 5552      4C455F45 
 5552      56545F47 
 5552      41545443 
 5552      5F524541 
 5553              	.LASF108:
 5554 0fd8 636C6F63 		.ascii	"clockPrescaler\000"
 5554      6B507265 
 5554      7363616C 
 5554      657200
 5555              	.LASF347:
 5556 0fe7 53454E44 		.ascii	"SEND_TEMPERATURE_INDICATION\000"
 5556      5F54454D 
 5556      50455241 
 5556      54555245 
 5556      5F494E44 
 5557              	.LASF196:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 186


 5558 1003 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 5558      4C455F45 
 5558      56545F53 
 5558      45545F48 
 5558      4F53545F 
 5559              	.LASF186:
 5560 1028 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 5560      4C455F45 
 5560      56545F4C 
 5560      455F5345 
 5560      545F4556 
 5561              	.LASF133:
 5562 104e 72784275 		.ascii	"rxBufIdx\000"
 5562      66496478 
 5562      00
 5563              	.LASF336:
 5564 1057 51756575 		.ascii	"QueueHandle_t\000"
 5564      6548616E 
 5564      646C655F 
 5564      7400
 5565              	.LASF368:
 5566 1065 54656D70 		.ascii	"TemperatureTimerStart\000"
 5566      65726174 
 5566      75726554 
 5566      696D6572 
 5566      53746172 
 5567              	.LASF240:
 5568 107b 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 5568      4C455F45 
 5568      56545F47 
 5568      41505F4E 
 5568      554D4552 
 5569              	.LASF138:
 5570 10a5 696E6974 		.ascii	"initKey\000"
 5570      4B657900 
 5571              	.LASF80:
 5572 10ad 4156475F 		.ascii	"AVG_STAT\000"
 5572      53544154 
 5572      00
 5573              	.LASF18:
 5574 10b6 75696E74 		.ascii	"uint8_t\000"
 5574      385F7400 
 5575              	.LASF130:
 5576 10be 73746174 		.ascii	"status\000"
 5576      757300
 5577              	.LASF94:
 5578 10c5 43595F52 		.ascii	"CY_RTC_DST_RELATIVE\000"
 5578      54435F44 
 5578      53545F52 
 5578      454C4154 
 5578      49564500 
 5579              	.LASF366:
 5580 10d9 74656D70 		.ascii	"temperatureCommand\000"
 5580      65726174 
 5580      75726543 
 5580      6F6D6D61 
 5580      6E6400
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 187


 5581              	.LASF406:
 5582 10ec 7854696D 		.ascii	"xTimerGenericCommand\000"
 5582      65724765 
 5582      6E657269 
 5582      63436F6D 
 5582      6D616E64 
 5583              	.LASF39:
 5584 1101 494E5452 		.ascii	"INTR_CAUSE2\000"
 5584      5F434155 
 5584      53453200 
 5585              	.LASF40:
 5586 110d 494E5452 		.ascii	"INTR_CAUSE3\000"
 5586      5F434155 
 5586      53453300 
 5587              	.LASF351:
 5588 1119 74656D70 		.ascii	"temperatureData\000"
 5588      65726174 
 5588      75726544 
 5588      61746100 
 5589              	.LASF70:
 5590 1129 52414E47 		.ascii	"RANGE_INTR_SET\000"
 5590      455F494E 
 5590      54525F53 
 5590      455400
 5591              	.LASF231:
 5592 1138 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 5592      4C455F45 
 5592      56545F47 
 5592      41505F41 
 5592      5554485F 
 5593              	.LASF202:
 5594 1155 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 5594      4C455F45 
 5594      56545F53 
 5594      45545F44 
 5594      45464155 
 5595              	.LASF171:
 5596 1179 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 5596      77697463 
 5596      68537143 
 5596      74726C00 
 5597              	.LASF386:
 5598 1189 63795F62 		.ascii	"cy_ble_advState\000"
 5598      6C655F61 
 5598      64765374 
 5598      61746500 
 5599              	.LASF405:
 5600 1199 78546173 		.ascii	"xTaskGetTickCount\000"
 5600      6B476574 
 5600      5469636B 
 5600      436F756E 
 5600      7400
 5601              	.LASF140:
 5602 11ab 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 5602      625F7363 
 5602      625F7561 
 5602      72745F68 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 188


 5602      616E646C 
 5603              	.LASF164:
 5604 11ca 72616E67 		.ascii	"rangeCond\000"
 5604      65436F6E 
 5604      6400
 5605              	.LASF169:
 5606 11d4 72616E67 		.ascii	"rangeIntrMask\000"
 5606      65496E74 
 5606      724D6173 
 5606      6B00
 5607              	.LASF367:
 5608 11e2 54656D70 		.ascii	"TemperatureTimerCallback\000"
 5608      65726174 
 5608      75726554 
 5608      696D6572 
 5608      43616C6C 
 5609              	.LASF225:
 5610 11fb 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 5610      4C455F45 
 5610      56545F53 
 5610      45545F43 
 5610      455F4C45 
 5611              	.LASF224:
 5612 121d 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 5612      4C455F45 
 5612      56545F53 
 5612      45545F45 
 5612      56454E54 
 5613              	.LASF2:
 5614 1240 6C6F6E67 		.ascii	"long long int\000"
 5614      206C6F6E 
 5614      6720696E 
 5614      7400
 5615              	.LASF282:
 5616 124e 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 5616      4C455F45 
 5616      56545F4C 
 5616      32434150 
 5616      5F434246 
 5617              	.LASF85:
 5618 126d 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 5618      53574954 
 5618      43485F44 
 5618      535F4354 
 5618      524C00
 5619              	.LASF157:
 5620 1280 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 5620      41525F49 
 5620      4E54525F 
 5620      4F564552 
 5620      464C4F57 
 5621              	.LASF317:
 5622 129a 43595F42 		.ascii	"CY_BLE_HTS_TEMP_MEASURE\000"
 5622      4C455F48 
 5622      54535F54 
 5622      454D505F 
 5622      4D454153 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 189


 5623              	.LASF251:
 5624 12b2 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 5624      4C455F45 
 5624      56545F47 
 5624      41505F43 
 5624      4F4E4E5F 
 5625              	.LASF72:
 5626 12cb 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 5626      455F494E 
 5626      54525F4D 
 5626      41534B45 
 5626      4400
 5627              	.LASF158:
 5628 12dd 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 5628      41525F49 
 5628      4E54525F 
 5628      46575F43 
 5628      4F4C4C49 
 5629              	.LASF198:
 5630 12fb 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 5630      4C455F45 
 5630      56545F52 
 5630      454D4F56 
 5630      455F4445 
 5631              	.LASF187:
 5632 132b 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 5632      4C455F45 
 5632      56545F4C 
 5632      455F5049 
 5632      4E475F41 
 5633              	.LASF334:
 5634 134b 42617365 		.ascii	"BaseType_t\000"
 5634      54797065 
 5634      5F7400
 5635              	.LASF345:
 5636 1356 50524F43 		.ascii	"PROCESS_BLE_EVENTS\000"
 5636      4553535F 
 5636      424C455F 
 5636      4556454E 
 5636      545300
 5637              	.LASF7:
 5638 1369 5F5F696E 		.ascii	"__int16_t\000"
 5638      7431365F 
 5638      7400
 5639              	.LASF419:
 5640 1373 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 5640      73657273 
 5640      5C636F64 
 5640      79675C67 
 5640      69745C70 
 5641 13a1 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\CE218138_BLE_Thermometer_RTOS01.c"
 5641      54435F49 
 5641      4D552E63 
 5641      7964736E 
 5641      5C434532 
 5642 13d3 7964736E 		.ascii	"ydsn\000"
 5642      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 190


 5643              	.LASF413:
 5644 13d8 4144435F 		.ascii	"ADC_IRQ_Enable\000"
 5644      4952515F 
 5644      456E6162 
 5644      6C6500
 5645              	.LASF398:
 5646 13e7 74656D70 		.ascii	"temperatureCommandQ\000"
 5646      65726174 
 5646      75726543 
 5646      6F6D6D61 
 5646      6E645100 
 5647              	.LASF214:
 5648 13fb 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 5648      4C455F45 
 5648      56545F53 
 5648      45545F43 
 5648      4C4B5F43 
 5649              	.LASF44:
 5650 141e 5644445F 		.ascii	"VDD_INTR_MASKED\000"
 5650      494E5452 
 5650      5F4D4153 
 5650      4B454400 
 5651              	.LASF277:
 5652 142e 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 5652      4C455F45 
 5652      56545F47 
 5652      41545443 
 5652      5F4C4F4E 
 5653              	.LASF59:
 5654 1452 4348414E 		.ascii	"CHAN_RESULT\000"
 5654      5F524553 
 5654      554C5400 
 5655              	.LASF307:
 5656 145e 43595F42 		.ascii	"CY_BLE_DIS_MANUFACTURER_NAME\000"
 5656      4C455F44 
 5656      49535F4D 
 5656      414E5546 
 5656      41435455 
 5657              	.LASF69:
 5658 147b 52414E47 		.ascii	"RANGE_INTR\000"
 5658      455F494E 
 5658      545200
 5659              	.LASF139:
 5660 1486 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 5660      74635F73 
 5660      63625F73 
 5660      70695F63 
 5660      6F6E7465 
 5661              	.LASF146:
 5662 149f 72785269 		.ascii	"rxRingBufHead\000"
 5662      6E674275 
 5662      66486561 
 5662      6400
 5663              	.LASF118:
 5664 14ad 72656C6F 		.ascii	"reloadInputMode\000"
 5664      6164496E 
 5664      7075744D 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 191


 5664      6F646500 
 5665              	.LASF48:
 5666 14bd 53414D50 		.ascii	"SAMPLE_CTRL\000"
 5666      4C455F43 
 5666      54524C00 
 5667              	.LASF166:
 5668 14c9 6368616E 		.ascii	"chanConfig\000"
 5668      436F6E66 
 5668      696700
 5669              	.LASF239:
 5670 14d4 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 5670      4C455F45 
 5670      56545F47 
 5670      41505F4B 
 5670      4559494E 
 5671              	.LASF199:
 5672 14f9 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 5672      4C455F45 
 5672      56545F41 
 5672      44445F44 
 5672      45564943 
 5673              	.LASF359:
 5674 1526 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 5674      41525F43 
 5674      6C656172 
 5674      496E7465 
 5674      72727570 
 5675              	.LASF135:
 5676 153c 74784275 		.ascii	"txBufSize\000"
 5676      6653697A 
 5676      6500
 5677              	.LASF350:
 5678 1546 636F6D6D 		.ascii	"command\000"
 5678      616E6400 
 5679              	.LASF288:
 5680 154e 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 5680      4C455F45 
 5680      56545F4C 
 5680      32434150 
 5680      5F434246 
 5681              	.LASF83:
 5682 1573 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 5682      53574954 
 5682      43485F43 
 5682      4C454152 
 5682      3000
 5683              	.LASF333:
 5684 1585 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 5684      434F4E46 
 5684      49475F53 
 5684      54525543 
 5684      5400
 5685              	.LASF319:
 5686 1597 43595F42 		.ascii	"CY_BLE_HTS_INTERM_TEMP\000"
 5686      4C455F48 
 5686      54535F49 
 5686      4E544552 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 192


 5686      4D5F5445 
 5687              	.LASF227:
 5688 15ae 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 5688      4C455F45 
 5688      56545F47 
 5688      4150435F 
 5688      5343414E 
 5689              	.LASF281:
 5690 15d3 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 5690      4C455F45 
 5690      56545F4C 
 5690      32434150 
 5690      5F434246 
 5691              	.LASF247:
 5692 15f2 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 5692      4C455F45 
 5692      56545F47 
 5692      41505F4B 
 5692      4559535F 
 5693              	.LASF241:
 5694 1613 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 5694      4C455F45 
 5694      56545F47 
 5694      41505F4B 
 5694      45595052 
 5695              	.LASF304:
 5696 1638 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 5696      4C455F43 
 5696      4F4E4E5F 
 5696      53544154 
 5696      455F434C 
 5697              	.LASF300:
 5698 1663 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 5698      4C455F43 
 5698      4F4E4E5F 
 5698      53544154 
 5698      455F434F 
 5699              	.LASF320:
 5700 167f 43595F42 		.ascii	"CY_BLE_HTS_MEASURE_INTERVAL\000"
 5700      4C455F48 
 5700      54535F4D 
 5700      45415355 
 5700      52455F49 
 5701              	.LASF134:
 5702 169b 74784275 		.ascii	"txBuf\000"
 5702      6600
 5703              	.LASF402:
 5704 16a1 7854696D 		.ascii	"xTimer_Temperature\000"
 5704      65725F54 
 5704      656D7065 
 5704      72617475 
 5704      726500
 5705              	.LASF335:
 5706 16b4 5469636B 		.ascii	"TickType_t\000"
 5706      54797065 
 5706      5F7400
 5707              	.LASF302:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 193


 5708 16bf 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 5708      4C455F43 
 5708      4F4E4E5F 
 5708      53544154 
 5708      455F434C 
 5709              	.LASF392:
 5710 16e9 44454255 		.ascii	"DEBUG_UART_context\000"
 5710      475F5541 
 5710      52545F63 
 5710      6F6E7465 
 5710      787400
 5711              	.LASF311:
 5712 16fc 43595F42 		.ascii	"CY_BLE_DIS_FIRMWARE_REV\000"
 5712      4C455F44 
 5712      49535F46 
 5712      49524D57 
 5712      4152455F 
 5713              	.LASF144:
 5714 1714 72785269 		.ascii	"rxRingBuf\000"
 5714      6E674275 
 5714      6600
 5715              	.LASF3:
 5716 171e 6C6F6E67 		.ascii	"long double\000"
 5716      20646F75 
 5716      626C6500 
 5717              	.LASF338:
 5718 172a 53454E44 		.ascii	"SEND_NONE\000"
 5718      5F4E4F4E 
 5718      4500
 5719              	.LASF184:
 5720 1734 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 5720      4C455F45 
 5720      56545F52 
 5720      4541445F 
 5720      41555448 
 5721              	.LASF45:
 5722 175d 5644445F 		.ascii	"VDD_INTR_SET\000"
 5722      494E5452 
 5722      5F534554 
 5722      00
 5723              	.LASF109:
 5724 176a 72756E4D 		.ascii	"runMode\000"
 5724      6F646500 
 5725              	.LASF412:
 5726 1772 4144435F 		.ascii	"ADC_StartEx\000"
 5726      53746172 
 5726      74457800 
 5727              	.LASF194:
 5728 177e 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 5728      4C455F45 
 5728      56545F53 
 5728      45545F52 
 5728      50415F54 
 5729              	.LASF161:
 5730 179d 73616D70 		.ascii	"sampleTime01\000"
 5730      6C655469 
 5730      6D653031 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 194


 5730      00
 5731              	.LASF182:
 5732 17aa 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 5732      4C455F45 
 5732      56545F48 
 5732      41524457 
 5732      4152455F 
 5733              	.LASF126:
 5734 17c4 63795F73 		.ascii	"cy_stc_tcpwm_counter_config_t\000"
 5734      74635F74 
 5734      6370776D 
 5734      5F636F75 
 5734      6E746572 
 5735              	.LASF250:
 5736 17e2 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 5736      4C455F45 
 5736      56545F47 
 5736      41505F43 
 5736      52454154 
 5737              	.LASF170:
 5738 180d 6D757853 		.ascii	"muxSwitch\000"
 5738      77697463 
 5738      6800
 5739              	.LASF5:
 5740 1817 756E7369 		.ascii	"unsigned char\000"
 5740      676E6564 
 5740      20636861 
 5740      7200
 5741              	.LASF253:
 5742 1825 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 5742      4C455F45 
 5742      56545F47 
 5742      41545443 
 5742      5F455252 
 5743              	.LASF258:
 5744 1840 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 5744      4C455F45 
 5744      56545F47 
 5744      41545443 
 5744      5F524541 
 5745              	.LASF197:
 5746 1868 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 5746      4C455F45 
 5746      56545F41 
 5746      44445F44 
 5746      45564943 
 5747              	.LASF265:
 5748 1893 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 5748      4C455F45 
 5748      56545F47 
 5748      41545453 
 5748      5F575249 
 5749              	.LASF220:
 5750 18ae 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 5750      4C455F45 
 5750      56545F53 
 5750      5441434B 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 195


 5750      5F534855 
 5751              	.LASF365:
 5752 18d1 72746F73 		.ascii	"rtosApiResult\000"
 5752      41706952 
 5752      6573756C 
 5752      7400
 5753              	.LASF292:
 5754 18df 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 5754      74635F62 
 5754      6C655F63 
 5754      6F6E6E5F 
 5754      68616E64 
 5755              	.LASF111:
 5756 18f8 636F6D70 		.ascii	"compareOrCapture\000"
 5756      6172654F 
 5756      72436170 
 5756      74757265 
 5756      00
 5757              	.LASF35:
 5758 1909 52455345 		.ascii	"RESERVED1\000"
 5758      52564544 
 5758      3100
 5759              	.LASF56:
 5760 1913 52455345 		.ascii	"RESERVED2\000"
 5760      52564544 
 5760      3200
 5761              	.LASF58:
 5762 191d 52455345 		.ascii	"RESERVED3\000"
 5762      52564544 
 5762      3300
 5763              	.LASF60:
 5764 1927 52455345 		.ascii	"RESERVED4\000"
 5764      52564544 
 5764      3400
 5765              	.LASF74:
 5766 1931 52455345 		.ascii	"RESERVED5\000"
 5766      52564544 
 5766      3500
 5767              	.LASF76:
 5768 193b 52455345 		.ascii	"RESERVED6\000"
 5768      52564544 
 5768      3600
 5769              	.LASF78:
 5770 1945 52455345 		.ascii	"RESERVED7\000"
 5770      52564544 
 5770      3700
 5771              	.LASF81:
 5772 194f 52455345 		.ascii	"RESERVED8\000"
 5772      52564544 
 5772      3800
 5773              	.LASF84:
 5774 1959 52455345 		.ascii	"RESERVED9\000"
 5774      52564544 
 5774      3900
 5775              	.LASF391:
 5776 1963 4144435F 		.ascii	"ADC_allConfigs\000"
 5776      616C6C43 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 196


 5776      6F6E6669 
 5776      677300
 5777              	.LASF310:
 5778 1972 43595F42 		.ascii	"CY_BLE_DIS_HARDWARE_REV\000"
 5778      4C455F44 
 5778      49535F48 
 5778      41524457 
 5778      4152455F 
 5779              	.LASF114:
 5780 198a 656E6162 		.ascii	"enableCompareSwap\000"
 5780      6C65436F 
 5780      6D706172 
 5780      65537761 
 5780      7000
 5781              	.LASF376:
 5782 199c 70765061 		.ascii	"pvParameters\000"
 5782      72616D65 
 5782      74657273 
 5782      00
 5783              	.LASF68:
 5784 19a9 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 5784      52415445 
 5784      5F494E54 
 5784      525F4D41 
 5784      534B4544 
 5785              	.LASF86:
 5786 19be 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 5786      53574954 
 5786      43485F53 
 5786      515F4354 
 5786      524C00
 5787              	.LASF11:
 5788 19d1 6C6F6E67 		.ascii	"long int\000"
 5788      20696E74 
 5788      00
 5789              	.LASF384:
 5790 19da 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5790      52784275 
 5790      66666572 
 5790      00
 5791              	.LASF124:
 5792 19e7 636F756E 		.ascii	"countInputMode\000"
 5792      74496E70 
 5792      75744D6F 
 5792      646500
 5793              	.LASF223:
 5794 19f6 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 5794      4C455F45 
 5794      56545F41 
 5794      45535F43 
 5794      4D41435F 
 5795              	.LASF252:
 5796 1a17 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 5796      4C455F45 
 5796      56545F47 
 5796      4150505F 
 5796      55504441 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 197


 5797              	.LASF371:
 5798 1a45 7072696E 		.ascii	"printData\000"
 5798      74446174 
 5798      6100
 5799              	.LASF264:
 5800 1a4f 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 5800      4C455F45 
 5800      56545F47 
 5800      41545443 
 5800      5F524541 
 5801              	.LASF110:
 5802 1a6f 636F756E 		.ascii	"countDirection\000"
 5802      74446972 
 5802      65637469 
 5802      6F6E00
 5803              	.LASF342:
 5804 1a7e 73747269 		.ascii	"stringPointer\000"
 5804      6E67506F 
 5804      696E7465 
 5804      7200
 5805              	.LASF51:
 5806 1a8c 52414E47 		.ascii	"RANGE_THRES\000"
 5806      455F5448 
 5806      52455300 
 5807              	.LASF358:
 5808 1a98 53656E64 		.ascii	"SendToDebugPrintTask\000"
 5808      546F4465 
 5808      62756750 
 5808      72696E74 
 5808      5461736B 
 5809              	.LASF364:
 5810 1aad 43795F47 		.ascii	"Cy_GPIO_Set\000"
 5810      50494F5F 
 5810      53657400 
 5811              	.LASF219:
 5812 1ab9 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 5812      4C455F45 
 5812      56545F53 
 5812      45545F53 
 5812      4C415645 
 5813              	.LASF92:
 5814 1ae4 63686172 		.ascii	"char_t\000"
 5814      5F7400
 5815              	.LASF57:
 5816 1aeb 4348414E 		.ascii	"CHAN_WORK\000"
 5816      5F574F52 
 5816      4B00
 5817              	.LASF246:
 5818 1af5 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 5818      4C455F45 
 5818      56545F47 
 5818      41505F44 
 5818      45564943 
 5819              	.LASF344:
 5820 1b1d 64656275 		.ascii	"debug_print_data_t\000"
 5820      675F7072 
 5820      696E745F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 198


 5820      64617461 
 5820      5F7400
 5821              	.LASF34:
 5822 1b30 4346475F 		.ascii	"CFG_IN_GPIO5V\000"
 5822      494E5F47 
 5822      50494F35 
 5822      5600
 5823              	.LASF101:
 5824 1b3e 6461794F 		.ascii	"dayOfWeek\000"
 5824      66576565 
 5824      6B00
 5825              	.LASF283:
 5826 1b48 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 5826      4C455F45 
 5826      56545F4C 
 5826      32434150 
 5826      5F434246 
 5827              	.LASF148:
 5828 1b6a 74784C65 		.ascii	"txLeftToTransmit\000"
 5828      6674546F 
 5828      5472616E 
 5828      736D6974 
 5828      00
 5829              	.LASF269:
 5830 1b7b 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 5830      4C455F45 
 5830      56545F47 
 5830      41545453 
 5830      5F455845 
 5831              	.LASF183:
 5832 1b9b 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 5832      4C455F45 
 5832      56545F57 
 5832      52495445 
 5832      5F415554 
 5833              	.LASF222:
 5834 1bc5 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 5834      4C455F45 
 5834      56545F52 
 5834      4144494F 
 5834      5F564F4C 
 5835              	.LASF370:
 5836 1be4 7854696D 		.ascii	"xTimer\000"
 5836      657200
 5837              	.LASF24:
 5838 1beb 4F55545F 		.ascii	"OUT_INV\000"
 5838      494E5600 
 5839              	.LASF6:
 5840 1bf3 5F5F7569 		.ascii	"__uint8_t\000"
 5840      6E74385F 
 5840      7400
 5841              	.LASF385:
 5842 1bfd 63795F52 		.ascii	"cy_RTC_daysInMonthTbl\000"
 5842      54435F64 
 5842      61797349 
 5842      6E4D6F6E 
 5842      74685462 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 199


 5843              	.LASF395:
 5844 1c13 54696D65 		.ascii	"Timer_IMU_config\000"
 5844      725F494D 
 5844      555F636F 
 5844      6E666967 
 5844      00
 5845              	.LASF416:
 5846 1c24 6C6F6766 		.ascii	"logf\000"
 5846      00
 5847              	.LASF189:
 5848 1c29 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 5848      4C455F45 
 5848      56545F53 
 5848      45545F53 
 5848      55474745 
 5849              	.LASF322:
 5850 1c57 43595F42 		.ascii	"CY_BLE_HTS_CCCD\000"
 5850      4C455F48 
 5850      54535F43 
 5850      43434400 
 5851              	.LASF209:
 5852 1c67 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 5852      4C455F45 
 5852      56545F47 
 5852      45545F44 
 5852      45564943 
 5853              	.LASF216:
 5854 1c8b 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 5854      4C455F45 
 5854      56545F41 
 5854      45535F45 
 5854      4E435259 
 5855              	.LASF414:
 5856 1cab 4144435F 		.ascii	"ADC_StartConvert\000"
 5856      53746172 
 5856      74436F6E 
 5856      76657274 
 5856      00
 5857              	.LASF211:
 5858 1cbc 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 5858      4C455F45 
 5858      56545F47 
 5858      45545F54 
 5858      585F5057 
 5859              	.LASF27:
 5860 1cdb 494E5452 		.ascii	"INTR_MASKED\000"
 5860      5F4D4153 
 5860      4B454400 
 5861              	.LASF323:
 5862 1ce7 43595F42 		.ascii	"CY_BLE_HTS_VRD\000"
 5862      4C455F48 
 5862      54535F56 
 5862      524400
 5863              	.LASF177:
 5864 1cf6 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 5864      4C455F45 
 5864      56545F54 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 200


 5864      494D454F 
 5864      555400
 5865              	.LASF326:
 5866 1d09 43595F42 		.ascii	"CY_BLE_SRVI_GATT\000"
 5866      4C455F53 
 5866      5256495F 
 5866      47415454 
 5866      00
 5867              	.LASF343:
 5868 1d1a 6572726F 		.ascii	"errorCode\000"
 5868      72436F64 
 5868      6500
 5869              	.LASF15:
 5870 1d24 73697A65 		.ascii	"sizetype\000"
 5870      74797065 
 5870      00
 5871              	.LASF13:
 5872 1d2d 6C6F6E67 		.ascii	"long unsigned int\000"
 5872      20756E73 
 5872      69676E65 
 5872      6420696E 
 5872      7400
 5873              	.LASF373:
 5874 1d3f 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 5874      41525F47 
 5874      6574496E 
 5874      74657272 
 5874      75707453 
 5875              	.LASF377:
 5876 1d59 73656E64 		.ascii	"sendTemperatureDataFast\000"
 5876      54656D70 
 5876      65726174 
 5876      75726544 
 5876      61746146 
 5877              	.LASF409:
 5878 1d71 43795F53 		.ascii	"Cy_SAR_GetResult16\000"
 5878      41525F47 
 5878      65745265 
 5878      73756C74 
 5878      313600
 5879              	.LASF20:
 5880 1d84 696E7433 		.ascii	"int32_t\000"
 5880      325F7400 
 5881              	.LASF221:
 5882 1d8c 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 5882      4C455F45 
 5882      56545F52 
 5882      4144494F 
 5882      5F54454D 
 5883              	.LASF82:
 5884 1da9 4D55585F 		.ascii	"MUX_SWITCH0\000"
 5884      53574954 
 5884      43483000 
 5885              	.LASF361:
 5886 1db5 70696E4E 		.ascii	"pinNum\000"
 5886      756D00
 5887              	.LASF280:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 201


 5888 1dbc 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 5888      4C455F45 
 5888      56545F4C 
 5888      32434150 
 5888      5F434F4D 
 5889              	.LASF62:
 5890 1dd9 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 5890      5F524553 
 5890      554C545F 
 5890      55504441 
 5890      54454400 
 5891              	.LASF374:
 5892 1ded 4144435F 		.ascii	"ADC_GetResult16\000"
 5892      47657452 
 5892      6573756C 
 5892      74313600 
 5893              	.LASF230:
 5894 1dfd 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 5894      4C455F45 
 5894      56545F47 
 5894      41505F50 
 5894      4153534B 
 5895              	.LASF418:
 5896 1e24 74656D70 		.ascii	"temperature_task.c\000"
 5896      65726174 
 5896      7572655F 
 5896      7461736B 
 5896      2E6300
 5897              	.LASF160:
 5898 1e37 73616D70 		.ascii	"sampleCtrl\000"
 5898      6C654374 
 5898      726C00
 5899              	.LASF360:
 5900 1e42 43795F47 		.ascii	"Cy_GPIO_Clr\000"
 5900      50494F5F 
 5900      436C7200 
 5901              	.LASF352:
 5902 1e4e 696D7544 		.ascii	"imuData\000"
 5902      61746100 
 5903              	.LASF155:
 5904 1e56 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 5904      41525F49 
 5904      4E54525F 
 5904      4D41534B 
 5904      5F4E4F4E 
 5905              	.LASF89:
 5906 1e6c 414E415F 		.ascii	"ANA_TRIM0\000"
 5906      5452494D 
 5906      3000
 5907              	.LASF90:
 5908 1e76 414E415F 		.ascii	"ANA_TRIM1\000"
 5908      5452494D 
 5908      3100
 5909              	.LASF12:
 5910 1e80 5F5F7569 		.ascii	"__uint32_t\000"
 5910      6E743332 
 5910      5F7400
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 202


 5911              	.LASF191:
 5912 1e8b 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 5912      4C455F45 
 5912      56545F44 
 5912      4154415F 
 5912      4C454E47 
 5913              	.LASF46:
 5914 1ea9 4750494F 		.ascii	"GPIO_Type\000"
 5914      5F547970 
 5914      6500
 5915              	.LASF324:
 5916 1eb3 43595F42 		.ascii	"CY_BLE_HTS_DESCR_COUNT\000"
 5916      4C455F48 
 5916      54535F44 
 5916      45534352 
 5916      5F434F55 
 5917              	.LASF125:
 5918 1eca 636F756E 		.ascii	"countInput\000"
 5918      74496E70 
 5918      757400
 5919              	.LASF29:
 5920 1ed5 494E5452 		.ascii	"INTR_CFG\000"
 5920      5F434647 
 5920      00
 5921              	.LASF200:
 5922 1ede 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 5922      4C455F45 
 5922      56545F52 
 5922      454D4F56 
 5922      455F4445 
 5923              	.LASF190:
 5924 1f10 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 5924      4C455F45 
 5924      56545F47 
 5924      45545F44 
 5924      4154415F 
 5925              	.LASF67:
 5926 1f34 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 5926      52415445 
 5926      5F494E54 
 5926      525F4D41 
 5926      534B00
 5927              	.LASF244:
 5928 1f47 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 5928      4C455F45 
 5928      56545F47 
 5928      4150435F 
 5928      44495245 
 5929              	.LASF129:
 5930 1f69 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 5930      74635F73 
 5930      63625F73 
 5930      70695F63 
 5930      6F6E7465 
 5931              	.LASF88:
 5932 1f80 52455345 		.ascii	"RESERVED10\000"
 5932      52564544 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 203


 5932      313000
 5933              	.LASF279:
 5934 1f8b 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 5934      4C455F45 
 5934      56545F4C 
 5934      32434150 
 5934      5F434F4E 
 5935              	.LASF379:
 5936 1fb2 636F756E 		.ascii	"countReference\000"
 5936      74526566 
 5936      6572656E 
 5936      636500
 5937              	.LASF332:
 5938 1fc1 636C6B44 		.ascii	"clkDivider\000"
 5938      69766964 
 5938      657200
 5939              	.LASF393:
 5940 1fcc 436F756E 		.ascii	"Counter_ms_config\000"
 5940      7465725F 
 5940      6D735F63 
 5940      6F6E6669 
 5940      6700
 5941              	.LASF400:
 5942 1fde 64656275 		.ascii	"debugMessageQ\000"
 5942      674D6573 
 5942      73616765 
 5942      5100
 5943              	.LASF390:
 5944 1fec 4144435F 		.ascii	"ADC_currentConfig\000"
 5944      63757272 
 5944      656E7443 
 5944      6F6E6669 
 5944      6700
 5945              	.LASF313:
 5946 1ffe 43595F42 		.ascii	"CY_BLE_DIS_SYSTEM_ID\000"
 5946      4C455F44 
 5946      49535F53 
 5946      59535445 
 5946      4D5F4944 
 5947              	.LASF339:
 5948 2013 48414E44 		.ascii	"HANDLE_ADC_INTERRUPT\000"
 5948      4C455F41 
 5948      44435F49 
 5948      4E544552 
 5948      52555054 
 5949              	.LASF256:
 5950 2028 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 5950      4C455F45 
 5950      56545F47 
 5950      41545453 
 5950      5F58434E 
 5951              	.LASF275:
 5952 2047 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 5952      4C455F45 
 5952      56545F47 
 5952      41545443 
 5952      5F53544F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 204


 5953              	.LASF353:
 5954 206a 626C655F 		.ascii	"ble_command_t\000"
 5954      636F6D6D 
 5954      616E645F 
 5954      7400
 5955              	.LASF229:
 5956 2078 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 5956      4C455F45 
 5956      56545F47 
 5956      41505F50 
 5956      4153534B 
 5957              	.LASF290:
 5958 209d 62644861 		.ascii	"bdHandle\000"
 5958      6E646C65 
 5958      00
 5959              	.LASF43:
 5960 20a6 5644445F 		.ascii	"VDD_INTR_MASK\000"
 5960      494E5452 
 5960      5F4D4153 
 5960      4B00
 5961              	.LASF4:
 5962 20b4 7369676E 		.ascii	"signed char\000"
 5962      65642063 
 5962      68617200 
 5963              	.LASF107:
 5964 20c0 70657269 		.ascii	"period\000"
 5964      6F6400
 5965              	.LASF9:
 5966 20c7 73686F72 		.ascii	"short unsigned int\000"
 5966      7420756E 
 5966      7369676E 
 5966      65642069 
 5966      6E7400
 5967              	.LASF128:
 5968 20da 63795F73 		.ascii	"cy_stc_tcpwm_counter_config\000"
 5968      74635F74 
 5968      6370776D 
 5968      5F636F75 
 5968      6E746572 
 5969              	.LASF228:
 5970 20f6 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 5970      4C455F45 
 5970      56545F47 
 5970      41505F41 
 5970      5554485F 
 5971              	.LASF267:
 5972 210e 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 5972      4C455F45 
 5972      56545F47 
 5972      41545453 
 5972      5F575249 
 5973              	.LASF213:
 5974 212d 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 5974      4C455F45 
 5974      56545F47 
 5974      45545F43 
 5974      4C4B5F43 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 205


 5975              	.LASF331:
 5976 2150 6D697363 		.ascii	"miscConfig\000"
 5976      436F6E66 
 5976      696700
 5977              	.LASF87:
 5978 215b 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 5978      53574954 
 5978      43485F53 
 5978      54415455 
 5978      5300
 5979              	.LASF278:
 5980 216d 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 5980      4C455F45 
 5980      56545F4C 
 5980      32434150 
 5980      5F434F4E 
 5981              	.LASF172:
 5982 2194 636F6E66 		.ascii	"configRouting\000"
 5982      6967526F 
 5982      7574696E 
 5982      6700
 5983              	.LASF341:
 5984 21a2 74656D70 		.ascii	"temperature_command_t\000"
 5984      65726174 
 5984      7572655F 
 5984      636F6D6D 
 5984      616E645F 
 5985              	.LASF363:
 5986 21b8 4144435F 		.ascii	"ADC_Wakeup\000"
 5986      57616B65 
 5986      757000
 5987              	.LASF79:
 5988 21c3 53544154 		.ascii	"STATUS\000"
 5988      555300
 5989              	.LASF32:
 5990 21ca 4346475F 		.ascii	"CFG_SIO\000"
 5990      53494F00 
 5991              	.LASF401:
 5992 21d2 626C6543 		.ascii	"bleCommandQ\000"
 5992      6F6D6D61 
 5992      6E645100 
 5993              	.LASF55:
 5994 21de 4348414E 		.ascii	"CHAN_CONFIG\000"
 5994      5F434F4E 
 5994      46494700 
 5995              	.LASF154:
 5996 21ea 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 5996      6E5F7361 
 5996      725F7261 
 5996      6E67655F 
 5996      64657465 
 5997              	.LASF181:
 5998 220d 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 5998      4C455F45 
 5998      56545F46 
 5998      4C415348 
 5998      5F434F52 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccZ9HR9Q.s 			page 206


 5999              	.LASF249:
 6000 2226 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 6000      4C455F45 
 6000      56545F47 
 6000      41505F47 
 6000      454E5F53 
 6001              	.LASF232:
 6002 2256 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 6002      4C455F45 
 6002      56545F47 
 6002      41505F41 
 6002      5554485F 
 6003              	.LASF298:
 6004 2271 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 6004      4C455F43 
 6004      4F4E4E5F 
 6004      53544154 
 6004      455F4449 
 6005              	.LASF301:
 6006 2290 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 6006      4C455F43 
 6006      4F4E4E5F 
 6006      53544154 
 6006      455F434C 
 6007              	.LASF167:
 6008 22ba 696E7472 		.ascii	"intrMask\000"
 6008      4D61736B 
 6008      00
 6009              	.LASF132:
 6010 22c3 72784275 		.ascii	"rxBufSize\000"
 6010      6653697A 
 6010      6500
 6011              	.LASF47:
 6012 22cd 4354524C 		.ascii	"CTRL\000"
 6012      00
 6013              	.LASF237:
 6014 22d2 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 6014      4C455F45 
 6014      56545F47 
 6014      41505F43 
 6014      4F4E4E45 
 6015              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
