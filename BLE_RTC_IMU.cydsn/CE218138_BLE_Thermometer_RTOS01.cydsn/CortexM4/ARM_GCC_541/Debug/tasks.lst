ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB721:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    is the industry's de facto standard.                               *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** */
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Standard includes. */
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <stdlib.h>
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <string.h>
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task.h is included from an application file. */
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* FreeRTOS includes. */
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "FreeRTOS.h"
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "task.h"
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "timers.h"
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "StackMacros.h"
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** functions but without including stdio.h here. */
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#include <stdio.h>
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * global, rather than file scope.
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define static
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	microcontroller architecture. */
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	state task. */
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			--uxTopPriority;																			\
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	being used. */
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	architecture being used. */
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																								\
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** count overflows. */
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {																									\
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** to its original value when it is released. */
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* See the comments above the definition of
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** } tskTCB;
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef tskTCB TCB_t;
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static variables must be declared volatile. */
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** accessed from a critical section. */
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint +e956 */
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /**
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is in any other state.
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * creation of the first user task.
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and its TCB deleted.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * a suspended list, etc.).
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * set to a value other than 1.
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * will exit the Blocked state.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * human readable tables of task information.
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 */
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * under the control of the scheduler.
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function - use them. */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = NULL;
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not static allocation is being used. */
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const char * const pcName,
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							void * const pvParameters,
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the TCB then the stack. */
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allocation is being used. */
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				be deleted later if required. */
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB = NULL;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxStack;
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxStack != NULL )
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it again. */
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxStack );
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = NULL;
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t x;
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	by the port. */
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		performed. */
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			break;
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xRegions;
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	updated. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				fails, but we will report the failure. */
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			so far. */
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTaskNumber++;
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then it should run now. */
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being deleted. */
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready list. */
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not return. */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTaskNumber++;
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				required. */
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task that has just been deleted. */
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been deleted. */
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			block. */
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				tick time is less than the wake time. */
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY();
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is resumed.
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				executing task. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eReturn;
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxStateList;
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eRunning;
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lists. */
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eBlocked;
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					indefinitely? */
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eSuspended;
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eBlocked;
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					all. */
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					eReturn = eDeleted;
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eReady;
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being queried. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being changed. */
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority than the calling task. */
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						raised above that of the running task? */
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but the running task must already be the highest
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					there may now be another task of higher priority that
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is ready to execute. */
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					require a yield as the running task must be above the
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new priority of the task being modified. */
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					currently using an inherited priority. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				being used for anything else. */
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						there is no need to check again and the port level
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						reset macro can be called directly. */
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				optimised task selection is not being used. */
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being suspended. */
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			suspended list. */
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is. */
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vTaskSwitchContext();
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
  28              		.loc 1 1657 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		section. */
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 0
  35 0000 0246     		mov	r2, r0
  36 0002 08B9     		cbnz	r0, .L2
  37              		.loc 1 1665 0 is_stmt 0 discriminator 1
  38              		.syntax unified
  39              	@ 1665 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
  40 0004 72B6     		 cpsid i 
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L3:
  45 0006 FEE7     		b	.L3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 31


  46              	.L2:
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  47              		.loc 1 1668 0 is_stmt 1
  48 0008 4169     		ldr	r1, [r0, #20]
  49 000a 0B4B     		ldr	r3, .L12
  50 000c 9942     		cmp	r1, r3
  51 000e 01D1     		bne	.L7
  52 0010 0123     		movs	r3, #1
  53 0012 00E0     		b	.L4
  54              	.L7:
  55 0014 0023     		movs	r3, #0
  56              	.L4:
  57              		.loc 1 1668 0 is_stmt 0 discriminator 4
  58 0016 43B1     		cbz	r3, .L8
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  59              		.loc 1 1671 0 is_stmt 1
  60 0018 926A     		ldr	r2, [r2, #40]
  61 001a 0849     		ldr	r1, .L12+4
  62 001c 8A42     		cmp	r2, r1
  63 001e 06D0     		beq	.L9
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
  64              		.loc 1 1675 0
  65 0020 02B1     		cbz	r2, .L6
  66 0022 0023     		movs	r3, #0
  67              	.L6:
  68              		.loc 1 1675 0 is_stmt 0 discriminator 4
  69 0024 2BB9     		cbnz	r3, .L11
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  70              		.loc 1 1658 0 is_stmt 1
  71 0026 0020     		movs	r0, #0
  72              	.LVL1:
  73 0028 7047     		bx	lr
  74              	.LVL2:
  75              	.L8:
  76 002a 0020     		movs	r0, #0
  77              	.LVL3:
  78 002c 7047     		bx	lr
  79              	.LVL4:
  80              	.L9:
  81 002e 0020     		movs	r0, #0
  82              	.LVL5:
  83 0030 7047     		bx	lr
  84              	.LVL6:
  85              	.L11:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
  86              		.loc 1 1677 0
  87 0032 0120     		movs	r0, #1
  88              	.LVL7:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 32


1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  89              		.loc 1 1695 0
  90 0034 7047     		bx	lr
  91              	.L13:
  92 0036 00BF     		.align	2
  93              	.L12:
  94 0038 00000000 		.word	.LANCHOR0
  95 003c 14000000 		.word	.LANCHOR0+20
  96              		.cfi_endproc
  97              	.LFE721:
  98              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
  99              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 100              		.align	2
 101              		.thumb
 102              		.thumb_func
 103              		.type	prvResetNextTaskUnblockTime, %function
 104              	prvResetNextTaskUnblockTime:
 105              	.LFB748:
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		currently executing task. */
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 33


1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						next yield. */
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 34


1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unsuspended. */
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xYieldRequired;
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskStartScheduler( void )
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 35


1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												"IDLE",
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( void * ) NULL,
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( void * ) NULL,
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		starts to run. */
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 36


1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the run time counter time base. */
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portable interface. */
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function will not return. */
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		or the timer task. */
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskEndScheduler( void )
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSuspendAll( void )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 37


1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xReturn;
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		running. */
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			processed. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 38


2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				appropriate ready list. */
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					task then a yield must be performed. */
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 39


2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					important for low power tickless implementations, where
2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					state. */
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				time. */
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						do
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							else
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							--uxPendedCounts;
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						uxPendedTicks = 0;
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 40


2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xAlreadyYielded;
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTicks = xTickCount;
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xTicks;
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTickCount;
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 41


2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t. */
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queried. */
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t x;
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cNextChar;
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mismatch. */
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Characters didn't match. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						found. */
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 42


2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxReturn != NULL )
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The handle has been found. */
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxReturn;
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t* pxTCB;
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the ready lists. */
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxQueue--;
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Found the handle. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the delayed lists. */
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 43


2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the suspended list. */
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the deleted list. */
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Ready state. */
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				do
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxQueue--;
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Blocked state. */
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 44


2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task in the Suspended state. */
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xIdleTaskHandle;
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 45


2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 1. */
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		each stepped tick. */
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended. */
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 46


2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch if preemption is turned off. */
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						is unsuspended. */
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTaskResumeAll();
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xItemValue;
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks to be unblocked. */
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		block. */
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		delayed lists if it wraps to 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 47


2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		look any further down the list. */
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( ;; )
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					to the maximum possible value so it is extremely
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unlikely that the
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					next time through. */
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be removed from the Blocked state. */
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						item value is the time at which the task at the head
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						state -	so record the item value in
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 48


2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it from the event list. */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list. */
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority that is equal to or higher than the
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						currently executing task. */
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 49


2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vApplicationTickHook();
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		++uxPendedTicks;
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		scheduler is locked. */
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationTickHook();
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xSwitchRequired;
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		getting set. */
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 50


2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 51


2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSwitchContext( void )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch. */
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 52


2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		optimised asm code. */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to this task. */
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event groups implementation. */
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	task that is not in the Blocked state. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 53


2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the task level). */
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function should not be called by application code hence the
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		can be used in place of vListInsert. */
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TIMERS */
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	called from a critical section within an ISR. */
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the delayed list, and add it to the ready list.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 54


2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxEventList is not empty. */
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pending until the scheduler is resumed. */
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should force a context switch now. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 55


2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event flags implementation. */
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the new item value in the event list. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event flags. */
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	lists. */
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		a higher priority than the calling task.  This allows
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task to know if it should force a context
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch now. */
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 56


3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				but has the same result. */
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				specified is the maximum block time then the task should block
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The tick count is greater than the time at which
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			was called. */
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 57


3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskMissedYield( void )
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = 0U;
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * -----------------------------------------------------------
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The Idle task.
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * ----------------------------------------------------------
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 58


3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) pvParameters;
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( ;; )
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			see if any other task has become available.  If we are using
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			will automatically get the processor anyway. */
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD();
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timeslice.
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskYIELD();
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allows the application designer to add background functionality
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			without the overhead of a separate task.
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationIdleHook();
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 59


3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		user defined low power mode	implementations require
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			test of the expected idle time is performed without the
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			valid. */
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					time can be sampled again, and this time its value can
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be used. */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) xTaskResumeAll();
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 60


3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupts. */
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 61


3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = NULL;
3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pvReturn;
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task. */
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	using list2. */
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 62


3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xListIsEmpty;
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		too often in the idle task. */
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( void ) xTaskResumeAll();
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				TCB_t *pxTCB;
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 63


3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being in the Blocked state. */
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xTaskResumeAll();
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		just set to whatever is passed in. */
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( eState != eInvalid )
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 64


3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask++;
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 65


3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulCount = 0U;
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulCount++;
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 66


3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the stack and TCB. */
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			check what was statically allocated before trying to free the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			memory. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be freed. */
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				only memory that must be freed. */
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing needs to be freed. */
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 106              		.loc 1 3647 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 111              		.loc 1 3650 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 67


 112 0000 094B     		ldr	r3, .L19
 113 0002 9B6A     		ldr	r3, [r3, #40]
 114 0004 1B68     		ldr	r3, [r3]
 115 0006 0BB9     		cbnz	r3, .L18
 116 0008 0123     		movs	r3, #1
 117 000a 00E0     		b	.L15
 118              	.L18:
 119 000c 0023     		movs	r3, #0
 120              	.L15:
 121              		.loc 1 3650 0 is_stmt 0 discriminator 4
 122 000e 23B1     		cbz	r3, .L16
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		there is an item in the delayed list. */
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 123              		.loc 1 3656 0 is_stmt 1
 124 0010 4FF0FF32 		mov	r2, #-1
 125 0014 044B     		ldr	r3, .L19
 126 0016 DA62     		str	r2, [r3, #44]
 127 0018 7047     		bx	lr
 128              	.L16:
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from the Blocked state. */
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 129              		.loc 1 3664 0
 130 001a 034B     		ldr	r3, .L19
 131 001c 9A6A     		ldr	r2, [r3, #40]
 132 001e D268     		ldr	r2, [r2, #12]
 133 0020 D268     		ldr	r2, [r2, #12]
 134              	.LVL8:
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 135              		.loc 1 3665 0
 136 0022 5268     		ldr	r2, [r2, #4]
 137              	.LVL9:
 138 0024 DA62     		str	r2, [r3, #44]
 139 0026 7047     		bx	lr
 140              	.L20:
 141              		.align	2
 142              	.L19:
 143 0028 00000000 		.word	.LANCHOR0
 144              		.cfi_endproc
 145              	.LFE748:
 146              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 147              		.section	.text.prvDeleteTCB,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 151              		.type	prvDeleteTCB, %function
 152              	prvDeleteTCB:
 153              	.LFB747:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 68


3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 154              		.loc 1 3593 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL10:
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
 164              		.loc 1 3611 0
 165 0004 006B     		ldr	r0, [r0, #48]
 166              	.LVL11:
 167 0006 FFF7FEFF 		bl	vPortFree
 168              	.LVL12:
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 169              		.loc 1 3612 0
 170 000a 2046     		mov	r0, r4
 171 000c FFF7FEFF 		bl	vPortFree
 172              	.LVL13:
 173 0010 10BD     		pop	{r4, pc}
 174              		.cfi_endproc
 175              	.LFE747:
 176              		.size	prvDeleteTCB, .-prvDeleteTCB
 177 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 178              		.align	2
 179              		.thumb
 180              		.thumb_func
 181              		.type	prvInitialiseNewTask, %function
 182              	prvInitialiseNewTask:
 183              	.LFB712:
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 775 0
 185              		.cfi_startproc
 186              		@ args = 16, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL14:
 189 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 190              		.cfi_def_cfa_offset 32
 191              		.cfi_offset 4, -32
 192              		.cfi_offset 5, -28
 193              		.cfi_offset 6, -24
 194              		.cfi_offset 7, -20
 195              		.cfi_offset 8, -16
 196              		.cfi_offset 9, -12
 197              		.cfi_offset 10, -8
 198              		.cfi_offset 14, -4
 199 0004 8246     		mov	r10, r0
 200 0006 8946     		mov	r9, r1
 201 0008 1546     		mov	r5, r2
 202 000a 9846     		mov	r8, r3
 203 000c 089F     		ldr	r7, [sp, #32]
 204 000e 099E     		ldr	r6, [sp, #36]
 205 0010 0A9C     		ldr	r4, [sp, #40]
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 69


 206              		.loc 1 797 0
 207 0012 9200     		lsls	r2, r2, #2
 208              	.LVL15:
 209 0014 A521     		movs	r1, #165
 210              	.LVL16:
 211 0016 206B     		ldr	r0, [r4, #48]
 212              	.LVL17:
 213 0018 FFF7FEFF 		bl	memset
 214              	.LVL18:
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 215              		.loc 1 807 0
 216 001c 236B     		ldr	r3, [r4, #48]
 217 001e 05F18042 		add	r2, r5, #1073741824
 218 0022 013A     		subs	r2, r2, #1
 219 0024 03EB8205 		add	r5, r3, r2, lsl #2
 220              	.LVL19:
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 221              		.loc 1 808 0
 222 0028 25F00705 		bic	r5, r5, #7
 223              	.LVL20:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 224              		.loc 1 827 0
 225 002c 0023     		movs	r3, #0
 226 002e 08E0     		b	.L24
 227              	.LVL21:
 228              	.L26:
 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 229              		.loc 1 829 0
 230 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 231 0034 E218     		adds	r2, r4, r3
 232 0036 82F83410 		strb	r1, [r2, #52]
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 233              		.loc 1 834 0
 234 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 235 003e 12B1     		cbz	r2, .L25
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 236              		.loc 1 827 0 discriminator 2
 237 0040 0133     		adds	r3, r3, #1
 238              	.LVL22:
 239              	.L24:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 240              		.loc 1 827 0 is_stmt 0 discriminator 1
 241 0042 0F2B     		cmp	r3, #15
 242 0044 F4D9     		bls	.L26
 243              	.L25:
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 244              		.loc 1 846 0 is_stmt 1
 245 0046 0023     		movs	r3, #0
 246              	.LVL23:
 247 0048 84F84330 		strb	r3, [r4, #67]
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 248              		.loc 1 850 0
 249 004c 132F     		cmp	r7, #19
 250 004e 00D9     		bls	.L27
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 251              		.loc 1 852 0
 252 0050 1327     		movs	r7, #19
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 70


 253              	.L27:
 254              	.LVL24:
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 255              		.loc 1 859 0
 256 0052 E762     		str	r7, [r4, #44]
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 257              		.loc 1 867 0
 258 0054 201D     		adds	r0, r4, #4
 259 0056 FFF7FEFF 		bl	vListInitialiseItem
 260              	.LVL25:
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 261              		.loc 1 868 0
 262 005a 04F11800 		add	r0, r4, #24
 263 005e FFF7FEFF 		bl	vListInitialiseItem
 264              	.LVL26:
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 265              		.loc 1 872 0
 266 0062 2461     		str	r4, [r4, #16]
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 267              		.loc 1 875 0
 268 0064 C7F11403 		rsb	r3, r7, #20
 269 0068 A361     		str	r3, [r4, #24]
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 270              		.loc 1 876 0
 271 006a 6462     		str	r4, [r4, #36]
 272              	.LVL27:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 273              		.loc 1 909 0
 274 006c 0023     		movs	r3, #0
 275 006e 06E0     		b	.L28
 276              	.LVL28:
 277              	.L29:
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 278              		.loc 1 911 0 discriminator 3
 279 0070 03F11002 		add	r2, r3, #16
 280 0074 04EB8202 		add	r2, r4, r2, lsl #2
 281 0078 0021     		movs	r1, #0
 282 007a 5160     		str	r1, [r2, #4]
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 283              		.loc 1 909 0 discriminator 3
 284 007c 0133     		adds	r3, r3, #1
 285              	.LVL29:
 286              	.L28:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 287              		.loc 1 909 0 is_stmt 0 discriminator 1
 288 007e 042B     		cmp	r3, #4
 289 0080 F6D9     		bls	.L29
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 290              		.loc 1 918 0 is_stmt 1
 291 0082 0023     		movs	r3, #0
 292              	.LVL30:
 293 0084 A365     		str	r3, [r4, #88]
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 294              		.loc 1 919 0
 295 0086 84F85C30 		strb	r3, [r4, #92]
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 296              		.loc 1 946 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 71


 297 008a 4246     		mov	r2, r8
 298 008c 5146     		mov	r1, r10
 299 008e 2846     		mov	r0, r5
 300 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 301              	.LVL31:
 302 0094 2060     		str	r0, [r4]
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 303              		.loc 1 950 0
 304 0096 06B1     		cbz	r6, .L23
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 305              		.loc 1 954 0
 306 0098 3460     		str	r4, [r6]
 307              	.L23:
 308 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 309              		.cfi_endproc
 310              	.LFE712:
 311              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 312 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 313              		.align	2
 314              		.thumb
 315              		.thumb_func
 316              		.type	prvInitialiseTaskLists, %function
 317              	prvInitialiseTaskLists:
 318              	.LFB745:
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
 319              		.loc 1 3345 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 70B5     		push	{r4, r5, r6, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 4, -16
 326              		.cfi_offset 5, -12
 327              		.cfi_offset 6, -8
 328              		.cfi_offset 14, -4
 329              	.LVL32:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 330              		.loc 1 3348 0
 331 0002 0024     		movs	r4, #0
 332 0004 07E0     		b	.L34
 333              	.LVL33:
 334              	.L35:
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 335              		.loc 1 3350 0 discriminator 3
 336 0006 04EB8402 		add	r2, r4, r4, lsl #2
 337 000a 9300     		lsls	r3, r2, #2
 338 000c 1048     		ldr	r0, .L37
 339 000e 1844     		add	r0, r0, r3
 340 0010 FFF7FEFF 		bl	vListInitialise
 341              	.LVL34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 342              		.loc 1 3348 0 discriminator 3
 343 0014 0134     		adds	r4, r4, #1
 344              	.LVL35:
 345              	.L34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 346              		.loc 1 3348 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 72


 347 0016 132C     		cmp	r4, #19
 348 0018 F5D9     		bls	.L35
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 349              		.loc 1 3353 0 is_stmt 1
 350 001a 0E4C     		ldr	r4, .L37+4
 351              	.LVL36:
 352 001c 04F5E076 		add	r6, r4, #448
 353 0020 3046     		mov	r0, r6
 354 0022 FFF7FEFF 		bl	vListInitialise
 355              	.LVL37:
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 356              		.loc 1 3354 0
 357 0026 04F5EA75 		add	r5, r4, #468
 358 002a 2846     		mov	r0, r5
 359 002c FFF7FEFF 		bl	vListInitialise
 360              	.LVL38:
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 361              		.loc 1 3355 0
 362 0030 04F11400 		add	r0, r4, #20
 363 0034 FFF7FEFF 		bl	vListInitialise
 364              	.LVL39:
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 365              		.loc 1 3359 0
 366 0038 04F5F470 		add	r0, r4, #488
 367 003c FFF7FEFF 		bl	vListInitialise
 368              	.LVL40:
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 369              		.loc 1 3365 0
 370 0040 2046     		mov	r0, r4
 371 0042 FFF7FEFF 		bl	vListInitialise
 372              	.LVL41:
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 373              		.loc 1 3371 0
 374 0046 A662     		str	r6, [r4, #40]
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 375              		.loc 1 3372 0
 376 0048 C4F8FC51 		str	r5, [r4, #508]
 377 004c 70BD     		pop	{r4, r5, r6, pc}
 378              	.L38:
 379 004e 00BF     		.align	2
 380              	.L37:
 381 0050 30000000 		.word	.LANCHOR0+48
 382 0054 00000000 		.word	.LANCHOR0
 383              		.cfi_endproc
 384              	.LFE745:
 385              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 386              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 387              		.align	2
 388              		.thumb
 389              		.thumb_func
 390              		.type	prvAddNewTaskToReadyList, %function
 391              	prvAddNewTaskToReadyList:
 392              	.LFB713:
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 393              		.loc 1 964 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 73


 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL42:
 398 0000 38B5     		push	{r3, r4, r5, lr}
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 3, -16
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 5, -8
 403              		.cfi_offset 14, -4
 404 0002 0446     		mov	r4, r0
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 405              		.loc 1 967 0
 406 0004 FFF7FEFF 		bl	vPortEnterCritical
 407              	.LVL43:
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 408              		.loc 1 969 0
 409 0008 264B     		ldr	r3, .L45
 410 000a D3F80022 		ldr	r2, [r3, #512]
 411 000e 0132     		adds	r2, r2, #1
 412 0010 C3F80022 		str	r2, [r3, #512]
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 413              		.loc 1 970 0
 414 0014 D3F80432 		ldr	r3, [r3, #516]
 415 0018 4BB9     		cbnz	r3, .L40
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 416              		.loc 1 974 0
 417 001a 224B     		ldr	r3, .L45
 418 001c C3F80442 		str	r4, [r3, #516]
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 419              		.loc 1 976 0
 420 0020 D3F80032 		ldr	r3, [r3, #512]
 421 0024 012B     		cmp	r3, #1
 422 0026 10D1     		bne	.L41
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 423              		.loc 1 981 0
 424 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 425              	.LVL44:
 426 002c 0DE0     		b	.L41
 427              	.L40:
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 428              		.loc 1 993 0
 429 002e 1D4B     		ldr	r3, .L45
 430 0030 D3F80832 		ldr	r3, [r3, #520]
 431 0034 4BB9     		cbnz	r3, .L41
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 432              		.loc 1 995 0
 433 0036 1B4B     		ldr	r3, .L45
 434 0038 D3F80432 		ldr	r3, [r3, #516]
 435 003c DA6A     		ldr	r2, [r3, #44]
 436 003e E36A     		ldr	r3, [r4, #44]
 437 0040 9A42     		cmp	r2, r3
 438 0042 02D8     		bhi	.L41
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 439              		.loc 1 997 0
 440 0044 174B     		ldr	r3, .L45
 441 0046 C3F80442 		str	r4, [r3, #516]
 442              	.L41:
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 74


 443              		.loc 1 1010 0
 444 004a 164A     		ldr	r2, .L45
 445 004c D2F80C32 		ldr	r3, [r2, #524]
 446 0050 0133     		adds	r3, r3, #1
 447 0052 C2F80C32 		str	r3, [r2, #524]
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 448              		.loc 1 1020 0
 449 0056 E36A     		ldr	r3, [r4, #44]
 450 0058 D2F81022 		ldr	r2, [r2, #528]
 451 005c 9342     		cmp	r3, r2
 452 005e 02D9     		bls	.L42
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 453              		.loc 1 1020 0 is_stmt 0 discriminator 1
 454 0060 104A     		ldr	r2, .L45
 455 0062 C2F81032 		str	r3, [r2, #528]
 456              	.L42:
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 457              		.loc 1 1020 0 discriminator 3
 458 0066 0F4D     		ldr	r5, .L45
 459 0068 05F13000 		add	r0, r5, #48
 460 006c 03EB8303 		add	r3, r3, r3, lsl #2
 461 0070 9A00     		lsls	r2, r3, #2
 462 0072 211D     		adds	r1, r4, #4
 463 0074 1044     		add	r0, r0, r2
 464 0076 FFF7FEFF 		bl	vListInsertEnd
 465              	.LVL45:
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 466              		.loc 1 1024 0 is_stmt 1 discriminator 3
 467 007a FFF7FEFF 		bl	vPortExitCritical
 468              	.LVL46:
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 469              		.loc 1 1026 0 discriminator 3
 470 007e D5F80832 		ldr	r3, [r5, #520]
 471 0082 6BB1     		cbz	r3, .L39
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 472              		.loc 1 1030 0
 473 0084 D5F80432 		ldr	r3, [r5, #516]
 474 0088 DA6A     		ldr	r2, [r3, #44]
 475 008a E36A     		ldr	r3, [r4, #44]
 476 008c 9A42     		cmp	r2, r3
 477 008e 07D2     		bcs	.L39
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 478              		.loc 1 1032 0
 479 0090 4FF08052 		mov	r2, #268435456
 480 0094 044B     		ldr	r3, .L45+4
 481 0096 1A60     		str	r2, [r3]
 482              		.syntax unified
 483              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 484 0098 BFF34F8F 		dsb
 485              	@ 0 "" 2
 486              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 487 009c BFF36F8F 		isb
 488              	@ 0 "" 2
 489              		.thumb
 490              		.syntax unified
 491              	.L39:
 492 00a0 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 75


 493              	.LVL47:
 494              	.L46:
 495 00a2 00BF     		.align	2
 496              	.L45:
 497 00a4 00000000 		.word	.LANCHOR0
 498 00a8 04ED00E0 		.word	-536810236
 499              		.cfi_endproc
 500              	.LFE713:
 501              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 502              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 503              		.align	2
 504              		.thumb
 505              		.thumb_func
 506              		.type	prvAddCurrentTaskToDelayedList, %function
 507              	prvAddCurrentTaskToDelayedList:
 508              	.LFB758:
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		individual execution thread. */
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 76


3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	being used for anything else. */
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to be moved into a new list. */
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Just inherit the priority. */
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 77


3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			be the running state task. */
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task? */
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the	holding task from the ready	list. */
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 78


3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new	ready list. */
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					running to give back the mutex. */
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This is only actually required in the corner case whereby
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					in an order different to that in which they were taken.
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a task is waiting on it or not. */
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskEnterCritical( void )
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			critical section. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 79


3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskExitCritical( void )
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portENABLE_INTERRUPTS();
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	size_t x;
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Start by copying the entire string. */
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 80


3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		printed out. */
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Terminate. */
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return the new end of string. */
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return &( pcBuffer[ x ] );
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cStatus;
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays task names, states and stack usage.
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * snprintf() implementation!).
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskList().
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 81


3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										to prevent static checking errors. */
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										cStatus = 0x00;
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				can be printed in tabular form more easily. */
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the rest of the string. */
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 82


4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * in both absolute and percentage terms.
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a full snprintf() implementation!).
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* For percentage calculations. */
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulTotalTime /= 100UL;
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Avoid divide by zero errors. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 83


4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulTotalTime > 0 )
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Write the task name to the string, padding with
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					easily. */
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 84


4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queues and semaphores. */
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxReturn;
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxCurrentTCB;
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 85


4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulReturn != 0UL )
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ulReturn;
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 86


4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				clear the value to zero. */
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				have changed. */
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			unblocked because of a timeout. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was not received. */
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 87


4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was already pending or a notification was
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				received while the task was waiting. */
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 88


4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY();
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					because it will automatically get reset to a new value when
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					earliest possible time. */
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 89


4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 90


4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction :
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 91


4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			semaphore. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 92


4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 93


4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		its notification state cleared. */
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFAIL;
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 509              		.loc 1 4704 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL48:
 514 0000 70B5     		push	{r4, r5, r6, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 4, -16
 517              		.cfi_offset 5, -12
 518              		.cfi_offset 6, -8
 519              		.cfi_offset 14, -4
 520 0002 0446     		mov	r4, r0
 521 0004 0E46     		mov	r6, r1
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTimeToWake;
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 522              		.loc 1 4706 0
 523 0006 174B     		ldr	r3, .L52
 524 0008 D3F81452 		ldr	r5, [r3, #532]
 525              	.LVL49:
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		when the task leaves the Blocked state. */
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 94


4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	as the same list item is used for both lists. */
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 526              		.loc 1 4719 0
 527 000c D3F80402 		ldr	r0, [r3, #516]
 528              	.LVL50:
 529 0010 0430     		adds	r0, r0, #4
 530 0012 FFF7FEFF 		bl	uxListRemove
 531              	.LVL51:
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 532              		.loc 1 4732 0
 533 0016 B4F1FF3F 		cmp	r4, #-1
 534 001a 07D1     		bne	.L48
 535              		.loc 1 4732 0 is_stmt 0 discriminator 1
 536 001c 36B1     		cbz	r6, .L48
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			indefinitely. */
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 537              		.loc 1 4737 0 is_stmt 1
 538 001e 1148     		ldr	r0, .L52
 539 0020 D0F80412 		ldr	r1, [r0, #516]
 540 0024 0431     		adds	r1, r1, #4
 541 0026 FFF7FEFF 		bl	vListInsertEnd
 542              	.LVL52:
 543 002a 70BD     		pop	{r4, r5, r6, pc}
 544              	.LVL53:
 545              	.L48:
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			kernel will manage it correctly. */
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 546              		.loc 1 4744 0
 547 002c 2C44     		add	r4, r4, r5
 548              	.LVL54:
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 549              		.loc 1 4747 0
 550 002e 0D4B     		ldr	r3, .L52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 95


 551 0030 D3F80432 		ldr	r3, [r3, #516]
 552 0034 5C60     		str	r4, [r3, #4]
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 553              		.loc 1 4749 0
 554 0036 A542     		cmp	r5, r4
 555 0038 08D9     		bls	.L50
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list. */
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 556              		.loc 1 4753 0
 557 003a 0A4B     		ldr	r3, .L52
 558 003c D3F8FC01 		ldr	r0, [r3, #508]
 559 0040 D3F80412 		ldr	r1, [r3, #516]
 560 0044 0431     		adds	r1, r1, #4
 561 0046 FFF7FEFF 		bl	vListInsert
 562              	.LVL55:
 563 004a 70BD     		pop	{r4, r5, r6, pc}
 564              	.LVL56:
 565              	.L50:
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 566              		.loc 1 4759 0
 567 004c 054D     		ldr	r5, .L52
 568              	.LVL57:
 569 004e A86A     		ldr	r0, [r5, #40]
 570 0050 D5F80412 		ldr	r1, [r5, #516]
 571 0054 0431     		adds	r1, r1, #4
 572 0056 FFF7FEFF 		bl	vListInsert
 573              	.LVL58:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				needs to be updated too. */
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 574              		.loc 1 4764 0
 575 005a EB6A     		ldr	r3, [r5, #44]
 576 005c 9C42     		cmp	r4, r3
 577 005e 00D2     		bcs	.L47
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 578              		.loc 1 4766 0
 579 0060 EC62     		str	r4, [r5, #44]
 580              	.L47:
 581 0062 70BD     		pop	{r4, r5, r6, pc}
 582              	.LVL59:
 583              	.L53:
 584              		.align	2
 585              	.L52:
 586 0064 00000000 		.word	.LANCHOR0
 587              		.cfi_endproc
 588              	.LFE758:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 96


 589              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 590              		.section	.text.xTaskCreate,"ax",%progbits
 591              		.align	2
 592              		.global	xTaskCreate
 593              		.thumb
 594              		.thumb_func
 595              		.type	xTaskCreate, %function
 596              	xTaskCreate:
 597              	.LFB711:
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 598              		.loc 1 682 0
 599              		.cfi_startproc
 600              		@ args = 8, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL60:
 603 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 604              		.cfi_def_cfa_offset 28
 605              		.cfi_offset 4, -28
 606              		.cfi_offset 5, -24
 607              		.cfi_offset 6, -20
 608              		.cfi_offset 7, -16
 609              		.cfi_offset 8, -12
 610              		.cfi_offset 9, -8
 611              		.cfi_offset 14, -4
 612 0004 85B0     		sub	sp, sp, #20
 613              		.cfi_def_cfa_offset 48
 614 0006 0646     		mov	r6, r0
 615 0008 0F46     		mov	r7, r1
 616 000a 1546     		mov	r5, r2
 617 000c 9846     		mov	r8, r3
 618              	.LBB18:
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 619              		.loc 1 716 0
 620 000e 9000     		lsls	r0, r2, #2
 621              	.LVL61:
 622 0010 FFF7FEFF 		bl	pvPortMalloc
 623              	.LVL62:
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 624              		.loc 1 718 0
 625 0014 60B1     		cbz	r0, .L58
 626 0016 8146     		mov	r9, r0
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 627              		.loc 1 721 0
 628 0018 6020     		movs	r0, #96
 629              	.LVL63:
 630 001a FFF7FEFF 		bl	pvPortMalloc
 631              	.LVL64:
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 632              		.loc 1 723 0
 633 001e 0446     		mov	r4, r0
 634 0020 10B1     		cbz	r0, .L56
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 635              		.loc 1 726 0
 636 0022 C0F83090 		str	r9, [r0, #48]
 637 0026 04E0     		b	.L55
 638              	.L56:
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 97


 639              		.loc 1 732 0
 640 0028 4846     		mov	r0, r9
 641              	.LVL65:
 642 002a FFF7FEFF 		bl	vPortFree
 643              	.LVL66:
 644 002e 00E0     		b	.L55
 645              	.LVL67:
 646              	.L58:
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 647              		.loc 1 737 0
 648 0030 0024     		movs	r4, #0
 649              	.LVL68:
 650              	.L55:
 651              	.LBE18:
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 652              		.loc 1 742 0
 653 0032 8CB1     		cbz	r4, .L59
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 654              		.loc 1 752 0
 655 0034 0023     		movs	r3, #0
 656 0036 0393     		str	r3, [sp, #12]
 657 0038 0294     		str	r4, [sp, #8]
 658 003a 0D9B     		ldr	r3, [sp, #52]
 659 003c 0193     		str	r3, [sp, #4]
 660 003e 0C9B     		ldr	r3, [sp, #48]
 661 0040 0093     		str	r3, [sp]
 662 0042 4346     		mov	r3, r8
 663 0044 2A46     		mov	r2, r5
 664 0046 3946     		mov	r1, r7
 665 0048 3046     		mov	r0, r6
 666 004a FFF7FEFF 		bl	prvInitialiseNewTask
 667              	.LVL69:
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 668              		.loc 1 753 0
 669 004e 2046     		mov	r0, r4
 670 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 671              	.LVL70:
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 672              		.loc 1 754 0
 673 0054 0120     		movs	r0, #1
 674 0056 01E0     		b	.L57
 675              	.LVL71:
 676              	.L59:
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 677              		.loc 1 758 0
 678 0058 4FF0FF30 		mov	r0, #-1
 679              	.L57:
 680              	.LVL72:
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 681              		.loc 1 762 0
 682 005c 05B0     		add	sp, sp, #20
 683              		.cfi_def_cfa_offset 28
 684              		@ sp needed
 685 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 686              		.cfi_endproc
 687              	.LFE711:
 688              		.size	xTaskCreate, .-xTaskCreate
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 98


 689 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 690              		.align	2
 691              		.global	vTaskDelete
 692              		.thumb
 693              		.thumb_func
 694              		.type	vTaskDelete, %function
 695              	vTaskDelete:
 696              	.LFB714:
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 697              		.loc 1 1049 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              	.LVL73:
 702 0000 70B5     		push	{r4, r5, r6, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
 708 0002 0446     		mov	r4, r0
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 709              		.loc 1 1052 0
 710 0004 FFF7FEFF 		bl	vPortEnterCritical
 711              	.LVL74:
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 712              		.loc 1 1056 0
 713 0008 14B9     		cbnz	r4, .L62
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 714              		.loc 1 1056 0 is_stmt 0 discriminator 1
 715 000a 244B     		ldr	r3, .L70
 716 000c D3F80442 		ldr	r4, [r3, #516]
 717              	.LVL75:
 718              	.L62:
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 719              		.loc 1 1059 0 is_stmt 1 discriminator 4
 720 0010 261D     		adds	r6, r4, #4
 721 0012 3046     		mov	r0, r6
 722 0014 FFF7FEFF 		bl	uxListRemove
 723              	.LVL76:
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 724              		.loc 1 1069 0 discriminator 4
 725 0018 A36A     		ldr	r3, [r4, #40]
 726 001a 1BB1     		cbz	r3, .L63
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 727              		.loc 1 1071 0
 728 001c 04F11800 		add	r0, r4, #24
 729 0020 FFF7FEFF 		bl	uxListRemove
 730              	.LVL77:
 731              	.L63:
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 732              		.loc 1 1082 0
 733 0024 1D4B     		ldr	r3, .L70
 734 0026 D3F80C22 		ldr	r2, [r3, #524]
 735 002a 0132     		adds	r2, r2, #1
 736 002c C3F80C22 		str	r2, [r3, #524]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 99


 737              		.loc 1 1084 0
 738 0030 D3F80432 		ldr	r3, [r3, #516]
 739 0034 9C42     		cmp	r4, r3
 740 0036 0BD1     		bne	.L64
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 741              		.loc 1 1091 0
 742 0038 184D     		ldr	r5, .L70
 743 003a 3146     		mov	r1, r6
 744 003c 05F5F470 		add	r0, r5, #488
 745 0040 FFF7FEFF 		bl	vListInsertEnd
 746              	.LVL78:
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 747              		.loc 1 1096 0
 748 0044 D5F81832 		ldr	r3, [r5, #536]
 749 0048 0133     		adds	r3, r3, #1
 750 004a C5F81832 		str	r3, [r5, #536]
 751 004e 0AE0     		b	.L65
 752              	.L64:
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 753              		.loc 1 1107 0
 754 0050 124A     		ldr	r2, .L70
 755 0052 D2F80032 		ldr	r3, [r2, #512]
 756 0056 013B     		subs	r3, r3, #1
 757 0058 C2F80032 		str	r3, [r2, #512]
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 758              		.loc 1 1108 0
 759 005c 2046     		mov	r0, r4
 760 005e FFF7FEFF 		bl	prvDeleteTCB
 761              	.LVL79:
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 762              		.loc 1 1112 0
 763 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 764              	.LVL80:
 765              	.L65:
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 766              		.loc 1 1117 0
 767 0066 FFF7FEFF 		bl	vPortExitCritical
 768              	.LVL81:
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 769              		.loc 1 1121 0
 770 006a 0C4B     		ldr	r3, .L70
 771 006c D3F80832 		ldr	r3, [r3, #520]
 772 0070 93B1     		cbz	r3, .L61
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 773              		.loc 1 1123 0
 774 0072 0A4B     		ldr	r3, .L70
 775 0074 D3F80432 		ldr	r3, [r3, #516]
 776 0078 9C42     		cmp	r4, r3
 777 007a 0DD1     		bne	.L61
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 778              		.loc 1 1125 0
 779 007c 074B     		ldr	r3, .L70
 780 007e D3F81C32 		ldr	r3, [r3, #540]
 781 0082 0BB1     		cbz	r3, .L67
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 782              		.loc 1 1125 0 is_stmt 0 discriminator 1
 783              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 100


 784              	@ 1125 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 785 0084 72B6     		 cpsid i 
 786              	@ 0 "" 2
 787              		.thumb
 788              		.syntax unified
 789              	.L68:
 790 0086 FEE7     		b	.L68
 791              	.L67:
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 792              		.loc 1 1126 0 is_stmt 1
 793 0088 4FF08052 		mov	r2, #268435456
 794 008c 044B     		ldr	r3, .L70+4
 795 008e 1A60     		str	r2, [r3]
 796              		.syntax unified
 797              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 798 0090 BFF34F8F 		dsb
 799              	@ 0 "" 2
 800              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 801 0094 BFF36F8F 		isb
 802              	@ 0 "" 2
 803              		.thumb
 804              		.syntax unified
 805              	.L61:
 806 0098 70BD     		pop	{r4, r5, r6, pc}
 807              	.LVL82:
 808              	.L71:
 809 009a 00BF     		.align	2
 810              	.L70:
 811 009c 00000000 		.word	.LANCHOR0
 812 00a0 04ED00E0 		.word	-536810236
 813              		.cfi_endproc
 814              	.LFE714:
 815              		.size	vTaskDelete, .-vTaskDelete
 816              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 817              		.align	2
 818              		.global	uxTaskPriorityGet
 819              		.thumb
 820              		.thumb_func
 821              		.type	uxTaskPriorityGet, %function
 822              	uxTaskPriorityGet:
 823              	.LFB717:
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 824              		.loc 1 1341 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL83:
 829 0000 10B5     		push	{r4, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833 0002 0446     		mov	r4, r0
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 834              		.loc 1 1345 0
 835 0004 FFF7FEFF 		bl	vPortEnterCritical
 836              	.LVL84:
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 101


 837              		.loc 1 1349 0
 838 0008 14B9     		cbnz	r4, .L73
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 839              		.loc 1 1349 0 is_stmt 0 discriminator 1
 840 000a 044B     		ldr	r3, .L75
 841 000c D3F80442 		ldr	r4, [r3, #516]
 842              	.LVL85:
 843              	.L73:
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 844              		.loc 1 1350 0 is_stmt 1 discriminator 4
 845 0010 E46A     		ldr	r4, [r4, #44]
 846              	.LVL86:
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 847              		.loc 1 1352 0 discriminator 4
 848 0012 FFF7FEFF 		bl	vPortExitCritical
 849              	.LVL87:
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 850              		.loc 1 1355 0 discriminator 4
 851 0016 2046     		mov	r0, r4
 852 0018 10BD     		pop	{r4, pc}
 853              	.LVL88:
 854              	.L76:
 855 001a 00BF     		.align	2
 856              	.L75:
 857 001c 00000000 		.word	.LANCHOR0
 858              		.cfi_endproc
 859              	.LFE717:
 860              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 861              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 862              		.align	2
 863              		.global	uxTaskPriorityGetFromISR
 864              		.thumb
 865              		.thumb_func
 866              		.type	uxTaskPriorityGetFromISR, %function
 867              	uxTaskPriorityGetFromISR:
 868              	.LFB718:
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 869              		.loc 1 1363 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL89:
 874 0000 10B5     		push	{r4, lr}
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 4, -8
 877              		.cfi_offset 14, -4
 878 0002 0446     		mov	r4, r0
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 879              		.loc 1 1383 0
 880 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 881              	.LVL90:
 882              	.LBB19:
 883              	.LBB20:
 884              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     All rights reserved
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 102


   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 103


  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** */
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  */
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR        char
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT       float
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE      double
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG        long
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT       short
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE  uint32_t
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE   long
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint16_t TickType_t;
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffff
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #else
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint32_t TickType_t;
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     not need to be guarded with a critical section. */
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC 1
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH              ( -1 )
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS            ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT            8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 104


 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD()                                                            \
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {                                                                              \
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Set a PendSV to request a context switch. */                            \
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;                            \
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****                                                                                \
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Barriers are normally not required but do ensure the code is completely \
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     within the specified behaviour for the architecture. */                    \
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "dsb" );                                                   \
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "isb" );                                                   \
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }                                                                              \
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG         ( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT        ( 1UL << 28UL )
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )       portEND_SWITCHING_ISR( x )
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()       ulPortRaiseBASEPRI()
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)    vPortSetBASEPRI(x)
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                __asm volatile   ( " cpsid i " )
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                 __asm volatile   ( " cpsie i " )
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()                    vPortEnterCritical()
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()                     vPortExitCritical()
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site. */
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()     vPortValidateInterruptPriority()
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE    __inline
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portFORCE_INLINE inline __attribute__(( always_inline))
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 105


 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdFALSE;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     else
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdTRUE;
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 191:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return xReturn;
 192:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 193:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 195:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 197:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 198:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 199:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 200:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 201:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %0, %1                                                 \n" \
 202:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %0                                            \n" \
 203:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 204:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 205:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 206:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 207:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 208:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 209:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 211:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 213:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 885              		.loc 2 215 0
 886              		.syntax unified
 887              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 888 0008 EFF31183 		    mrs r3, basepri                                            
 889 000c 4FF02F02 	    mov r2, #47                                                 
 890 0010 82F31188 	    msr basepri, r2                                            
 891 0014 BFF36F8F 	    isb                                                        
 892 0018 BFF34F8F 	    dsb                                                        
 893              	
 894              	@ 0 "" 2
 895              		.thumb
 896              		.syntax unified
 897              	.LBE20:
 898              	.LBE19:
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 899              		.loc 1 1389 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 106


 900 001c 14B9     		cbnz	r4, .L78
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 901              		.loc 1 1389 0 is_stmt 0 discriminator 1
 902 001e 034A     		ldr	r2, .L80
 903 0020 D2F80442 		ldr	r4, [r2, #516]
 904              	.LVL91:
 905              	.L78:
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 906              		.loc 1 1390 0 is_stmt 1 discriminator 4
 907 0024 E06A     		ldr	r0, [r4, #44]
 908              	.LVL92:
 909              	.LBB21:
 910              	.LBB22:
 216:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 217:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mrs %0, basepri                                            \n" \
 218:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %1, %2                                                 \n" \
 219:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %1                                            \n" \
 220:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 221:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 222:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY
 223:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 224:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 225:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* This return will not be reached but is necessary to prevent compiler
 226:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     warnings. */
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return ulOriginalBASEPRI;
 228:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 229:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 231:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 233:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 911              		.loc 2 233 0 discriminator 4
 912              		.syntax unified
 913              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 914 0026 83F31188 		    msr basepri, r3  
 915              	@ 0 "" 2
 916              	.LVL93:
 917              		.thumb
 918              		.syntax unified
 919              	.LBE22:
 920              	.LBE21:
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 921              		.loc 1 1395 0 discriminator 4
 922 002a 10BD     		pop	{r4, pc}
 923              	.LVL94:
 924              	.L81:
 925              		.align	2
 926              	.L80:
 927 002c 00000000 		.word	.LANCHOR0
 928              		.cfi_endproc
 929              	.LFE718:
 930              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 931              		.section	.text.vTaskPrioritySet,"ax",%progbits
 932              		.align	2
 933              		.global	vTaskPrioritySet
 934              		.thumb
 935              		.thumb_func
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 107


 936              		.type	vTaskPrioritySet, %function
 937              	vTaskPrioritySet:
 938              	.LFB719:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 939              		.loc 1 1403 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL95:
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 944              		.loc 1 1408 0
 945 0000 1329     		cmp	r1, #19
 946 0002 01D9     		bls	.L83
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 947              		.loc 1 1408 0 is_stmt 0 discriminator 1
 948              		.syntax unified
 949              	@ 1408 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 950 0004 72B6     		 cpsid i 
 951              	@ 0 "" 2
 952              		.thumb
 953              		.syntax unified
 954              	.L84:
 955 0006 FEE7     		b	.L84
 956              	.L83:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 957              		.loc 1 1403 0 is_stmt 1
 958 0008 70B5     		push	{r4, r5, r6, lr}
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 000a 0446     		mov	r4, r0
 965 000c 0D46     		mov	r5, r1
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 966              		.loc 1 1411 0
 967 000e 1329     		cmp	r1, #19
 968 0010 00D9     		bls	.L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 969              		.loc 1 1413 0
 970 0012 1325     		movs	r5, #19
 971              	.L85:
 972              	.LVL96:
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 973              		.loc 1 1420 0
 974 0014 FFF7FEFF 		bl	vPortEnterCritical
 975              	.LVL97:
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976              		.loc 1 1424 0
 977 0018 14B9     		cbnz	r4, .L86
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 978              		.loc 1 1424 0 is_stmt 0 discriminator 1
 979 001a 2A4B     		ldr	r3, .L100
 980 001c D3F80442 		ldr	r4, [r3, #516]
 981              	.LVL98:
 982              	.L86:
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 108


 983              		.loc 1 1434 0 is_stmt 1 discriminator 4
 984 0020 E36A     		ldr	r3, [r4, #44]
 985              	.LVL99:
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 986              		.loc 1 1438 0 discriminator 4
 987 0022 9D42     		cmp	r5, r3
 988 0024 4AD0     		beq	.L87
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 989              		.loc 1 1442 0
 990 0026 0CD9     		bls	.L88
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 991              		.loc 1 1444 0
 992 0028 264A     		ldr	r2, .L100
 993 002a D2F80422 		ldr	r2, [r2, #516]
 994 002e 9442     		cmp	r4, r2
 995 0030 0ED0     		beq	.L95
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 996              		.loc 1 1449 0
 997 0032 244A     		ldr	r2, .L100
 998 0034 D2F80422 		ldr	r2, [r2, #516]
 999 0038 D26A     		ldr	r2, [r2, #44]
 1000 003a 9542     		cmp	r5, r2
 1001 003c 0AD2     		bcs	.L96
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1002              		.loc 1 1406 0
 1003 003e 0026     		movs	r6, #0
 1004 0040 0BE0     		b	.L89
 1005              	.L88:
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1006              		.loc 1 1465 0
 1007 0042 204A     		ldr	r2, .L100
 1008 0044 D2F80422 		ldr	r2, [r2, #516]
 1009 0048 9442     		cmp	r4, r2
 1010 004a 05D0     		beq	.L97
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1011              		.loc 1 1406 0
 1012 004c 0026     		movs	r6, #0
 1013 004e 04E0     		b	.L89
 1014              	.L95:
 1015 0050 0026     		movs	r6, #0
 1016 0052 02E0     		b	.L89
 1017              	.L96:
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1018              		.loc 1 1451 0
 1019 0054 0126     		movs	r6, #1
 1020 0056 00E0     		b	.L89
 1021              	.L97:
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1022              		.loc 1 1470 0
 1023 0058 0126     		movs	r6, #1
 1024              	.L89:
 1025              	.LVL100:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1026              		.loc 1 1502 0
 1027 005a E562     		str	r5, [r4, #44]
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1028              		.loc 1 1508 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 109


 1029 005c A269     		ldr	r2, [r4, #24]
 1030 005e 002A     		cmp	r2, #0
 1031 0060 02DB     		blt	.L90
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1032              		.loc 1 1510 0
 1033 0062 C5F11405 		rsb	r5, r5, #20
 1034              	.LVL101:
 1035 0066 A561     		str	r5, [r4, #24]
 1036              	.L90:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1037              		.loc 1 1521 0
 1038 0068 6169     		ldr	r1, [r4, #20]
 1039 006a 03EB8303 		add	r3, r3, r3, lsl #2
 1040              	.LVL102:
 1041 006e 9A00     		lsls	r2, r3, #2
 1042 0070 154B     		ldr	r3, .L100+4
 1043 0072 1A44     		add	r2, r2, r3
 1044 0074 9142     		cmp	r1, r2
 1045 0076 01D1     		bne	.L98
 1046 0078 0123     		movs	r3, #1
 1047 007a 00E0     		b	.L91
 1048              	.L98:
 1049 007c 0023     		movs	r3, #0
 1050              	.L91:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1051              		.loc 1 1521 0 is_stmt 0 discriminator 4
 1052 007e A3B1     		cbz	r3, .L92
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1053              		.loc 1 1526 0 is_stmt 1
 1054 0080 251D     		adds	r5, r4, #4
 1055 0082 2846     		mov	r0, r5
 1056 0084 FFF7FEFF 		bl	uxListRemove
 1057              	.LVL103:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1058              		.loc 1 1537 0
 1059 0088 E36A     		ldr	r3, [r4, #44]
 1060 008a 0E4A     		ldr	r2, .L100
 1061 008c D2F81022 		ldr	r2, [r2, #528]
 1062 0090 9342     		cmp	r3, r2
 1063 0092 02D9     		bls	.L93
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1064              		.loc 1 1537 0 is_stmt 0 discriminator 1
 1065 0094 0B4A     		ldr	r2, .L100
 1066 0096 C2F81032 		str	r3, [r2, #528]
 1067              	.L93:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1068              		.loc 1 1537 0 discriminator 3
 1069 009a 03EB8303 		add	r3, r3, r3, lsl #2
 1070 009e 9A00     		lsls	r2, r3, #2
 1071 00a0 2946     		mov	r1, r5
 1072 00a2 0948     		ldr	r0, .L100+4
 1073 00a4 1044     		add	r0, r0, r2
 1074 00a6 FFF7FEFF 		bl	vListInsertEnd
 1075              	.LVL104:
 1076              	.L92:
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1077              		.loc 1 1544 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 110


 1078 00aa 3EB1     		cbz	r6, .L87
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1079              		.loc 1 1546 0
 1080 00ac 4FF08052 		mov	r2, #268435456
 1081 00b0 064B     		ldr	r3, .L100+8
 1082 00b2 1A60     		str	r2, [r3]
 1083              		.syntax unified
 1084              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1085 00b4 BFF34F8F 		dsb
 1086              	@ 0 "" 2
 1087              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1088 00b8 BFF36F8F 		isb
 1089              	@ 0 "" 2
 1090              	.LVL105:
 1091              		.thumb
 1092              		.syntax unified
 1093              	.L87:
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1094              		.loc 1 1558 0
 1095 00bc FFF7FEFF 		bl	vPortExitCritical
 1096              	.LVL106:
 1097 00c0 70BD     		pop	{r4, r5, r6, pc}
 1098              	.LVL107:
 1099              	.L101:
 1100 00c2 00BF     		.align	2
 1101              	.L100:
 1102 00c4 00000000 		.word	.LANCHOR0
 1103 00c8 30000000 		.word	.LANCHOR0+48
 1104 00cc 04ED00E0 		.word	-536810236
 1105              		.cfi_endproc
 1106              	.LFE719:
 1107              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1108              		.section	.text.vTaskResume,"ax",%progbits
 1109              		.align	2
 1110              		.global	vTaskResume
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	vTaskResume, %function
 1114              	vTaskResume:
 1115              	.LFB722:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1116              		.loc 1 1703 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              	.LVL108:
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1121              		.loc 1 1707 0
 1122 0000 08B9     		cbnz	r0, .L103
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1123              		.loc 1 1707 0 is_stmt 0 discriminator 1
 1124              		.syntax unified
 1125              	@ 1707 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1126 0002 72B6     		 cpsid i 
 1127              	@ 0 "" 2
 1128              		.thumb
 1129              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 111


 1130              	.L104:
 1131 0004 FEE7     		b	.L104
 1132              	.L103:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1133              		.loc 1 1703 0 is_stmt 1
 1134 0006 70B5     		push	{r4, r5, r6, lr}
 1135              		.cfi_def_cfa_offset 16
 1136              		.cfi_offset 4, -16
 1137              		.cfi_offset 5, -12
 1138              		.cfi_offset 6, -8
 1139              		.cfi_offset 14, -4
 1140 0008 0446     		mov	r4, r0
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1141              		.loc 1 1711 0
 1142 000a 88B3     		cbz	r0, .L102
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1143              		.loc 1 1711 0 is_stmt 0 discriminator 1
 1144 000c 194B     		ldr	r3, .L109
 1145 000e D3F80432 		ldr	r3, [r3, #516]
 1146 0012 9842     		cmp	r0, r3
 1147 0014 2CD0     		beq	.L102
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1148              		.loc 1 1713 0 is_stmt 1
 1149 0016 FFF7FEFF 		bl	vPortEnterCritical
 1150              	.LVL109:
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1151              		.loc 1 1715 0
 1152 001a 2046     		mov	r0, r4
 1153 001c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1154              	.LVL110:
 1155 0020 20B3     		cbz	r0, .L106
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1156              		.loc 1 1721 0
 1157 0022 261D     		adds	r6, r4, #4
 1158 0024 3046     		mov	r0, r6
 1159 0026 FFF7FEFF 		bl	uxListRemove
 1160              	.LVL111:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1161              		.loc 1 1722 0
 1162 002a E36A     		ldr	r3, [r4, #44]
 1163 002c 114A     		ldr	r2, .L109
 1164 002e D2F81022 		ldr	r2, [r2, #528]
 1165 0032 9342     		cmp	r3, r2
 1166 0034 02D9     		bls	.L107
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1167              		.loc 1 1722 0 is_stmt 0 discriminator 1
 1168 0036 0F4A     		ldr	r2, .L109
 1169 0038 C2F81032 		str	r3, [r2, #528]
 1170              	.L107:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1171              		.loc 1 1722 0 discriminator 3
 1172 003c 0D4D     		ldr	r5, .L109
 1173 003e 05F13000 		add	r0, r5, #48
 1174 0042 03EB8303 		add	r3, r3, r3, lsl #2
 1175 0046 9A00     		lsls	r2, r3, #2
 1176 0048 3146     		mov	r1, r6
 1177 004a 1044     		add	r0, r0, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 112


 1178 004c FFF7FEFF 		bl	vListInsertEnd
 1179              	.LVL112:
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1180              		.loc 1 1725 0 is_stmt 1 discriminator 3
 1181 0050 E26A     		ldr	r2, [r4, #44]
 1182 0052 D5F80432 		ldr	r3, [r5, #516]
 1183 0056 DB6A     		ldr	r3, [r3, #44]
 1184 0058 9A42     		cmp	r2, r3
 1185 005a 07D3     		bcc	.L106
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1186              		.loc 1 1730 0
 1187 005c 4FF08052 		mov	r2, #268435456
 1188 0060 054B     		ldr	r3, .L109+4
 1189 0062 1A60     		str	r2, [r3]
 1190              		.syntax unified
 1191              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1192 0064 BFF34F8F 		dsb
 1193              	@ 0 "" 2
 1194              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1195 0068 BFF36F8F 		isb
 1196              	@ 0 "" 2
 1197              		.thumb
 1198              		.syntax unified
 1199              	.L106:
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1200              		.loc 1 1742 0
 1201 006c FFF7FEFF 		bl	vPortExitCritical
 1202              	.LVL113:
 1203              	.L102:
 1204 0070 70BD     		pop	{r4, r5, r6, pc}
 1205              	.LVL114:
 1206              	.L110:
 1207 0072 00BF     		.align	2
 1208              	.L109:
 1209 0074 00000000 		.word	.LANCHOR0
 1210 0078 04ED00E0 		.word	-536810236
 1211              		.cfi_endproc
 1212              	.LFE722:
 1213              		.size	vTaskResume, .-vTaskResume
 1214              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1215              		.align	2
 1216              		.global	xTaskResumeFromISR
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	xTaskResumeFromISR, %function
 1220              	xTaskResumeFromISR:
 1221              	.LFB723:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1222              		.loc 1 1757 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL115:
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1227              		.loc 1 1762 0
 1228 0000 08B9     		cbnz	r0, .L112
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 113


 1229              		.loc 1 1762 0 is_stmt 0 discriminator 1
 1230              		.syntax unified
 1231              	@ 1762 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1232 0002 72B6     		 cpsid i 
 1233              	@ 0 "" 2
 1234              		.thumb
 1235              		.syntax unified
 1236              	.L113:
 1237 0004 FEE7     		b	.L113
 1238              	.L112:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1239              		.loc 1 1757 0 is_stmt 1
 1240 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1241              		.cfi_def_cfa_offset 24
 1242              		.cfi_offset 3, -24
 1243              		.cfi_offset 4, -20
 1244              		.cfi_offset 5, -16
 1245              		.cfi_offset 6, -12
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0008 0446     		mov	r4, r0
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1249              		.loc 1 1780 0
 1250 000a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1251              	.LVL116:
 1252              	.LBB23:
 1253              	.LBB24:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 1254              		.loc 2 215 0
 1255              		.syntax unified
 1256              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1257 000e EFF31187 		    mrs r7, basepri                                            
 1258 0012 4FF02F03 	    mov r3, #47                                                 
 1259 0016 83F31188 	    msr basepri, r3                                            
 1260 001a BFF36F8F 	    isb                                                        
 1261 001e BFF34F8F 	    dsb                                                        
 1262              	
 1263              	@ 0 "" 2
 1264              		.thumb
 1265              		.syntax unified
 1266              	.LBE24:
 1267              	.LBE23:
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1268              		.loc 1 1784 0
 1269 0022 2046     		mov	r0, r4
 1270 0024 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1271              	.LVL117:
 1272 0028 50B3     		cbz	r0, .L118
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1273              		.loc 1 1789 0
 1274 002a 184B     		ldr	r3, .L121
 1275 002c D3F81C32 		ldr	r3, [r3, #540]
 1276 0030 FBB9     		cbnz	r3, .L115
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1277              		.loc 1 1793 0
 1278 0032 E26A     		ldr	r2, [r4, #44]
 1279 0034 154B     		ldr	r3, .L121
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 114


 1280 0036 D3F80432 		ldr	r3, [r3, #516]
 1281 003a DB6A     		ldr	r3, [r3, #44]
 1282 003c 9A42     		cmp	r2, r3
 1283 003e 01D2     		bcs	.L119
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1284              		.loc 1 1758 0
 1285 0040 0025     		movs	r5, #0
 1286 0042 00E0     		b	.L116
 1287              	.L119:
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1288              		.loc 1 1795 0
 1289 0044 0125     		movs	r5, #1
 1290              	.L116:
 1291              	.LVL118:
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1292              		.loc 1 1802 0
 1293 0046 261D     		adds	r6, r4, #4
 1294 0048 3046     		mov	r0, r6
 1295 004a FFF7FEFF 		bl	uxListRemove
 1296              	.LVL119:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1297              		.loc 1 1803 0
 1298 004e E36A     		ldr	r3, [r4, #44]
 1299 0050 0E4A     		ldr	r2, .L121
 1300 0052 D2F81022 		ldr	r2, [r2, #528]
 1301 0056 9342     		cmp	r3, r2
 1302 0058 02D9     		bls	.L117
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1303              		.loc 1 1803 0 is_stmt 0 discriminator 1
 1304 005a 0C4A     		ldr	r2, .L121
 1305 005c C2F81032 		str	r3, [r2, #528]
 1306              	.L117:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1307              		.loc 1 1803 0 discriminator 3
 1308 0060 03EB8303 		add	r3, r3, r3, lsl #2
 1309 0064 9A00     		lsls	r2, r3, #2
 1310 0066 3146     		mov	r1, r6
 1311 0068 0948     		ldr	r0, .L121+4
 1312 006a 1044     		add	r0, r0, r2
 1313 006c FFF7FEFF 		bl	vListInsertEnd
 1314              	.LVL120:
 1315 0070 07E0     		b	.L114
 1316              	.LVL121:
 1317              	.L115:
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1318              		.loc 1 1810 0 is_stmt 1
 1319 0072 04F11801 		add	r1, r4, #24
 1320 0076 0748     		ldr	r0, .L121+8
 1321 0078 FFF7FEFF 		bl	vListInsertEnd
 1322              	.LVL122:
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1323              		.loc 1 1758 0
 1324 007c 0025     		movs	r5, #0
 1325 007e 00E0     		b	.L114
 1326              	.L118:
 1327 0080 0025     		movs	r5, #0
 1328              	.LVL123:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 115


 1329              	.L114:
 1330              	.LBB25:
 1331              	.LBB26:
 1332              		.loc 2 233 0
 1333              		.syntax unified
 1334              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1335 0082 87F31188 		    msr basepri, r7  
 1336              	@ 0 "" 2
 1337              	.LVL124:
 1338              		.thumb
 1339              		.syntax unified
 1340              	.LBE26:
 1341              	.LBE25:
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1342              		.loc 1 1821 0
 1343 0086 2846     		mov	r0, r5
 1344 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1345              	.LVL125:
 1346              	.L122:
 1347 008a 00BF     		.align	2
 1348              	.L121:
 1349 008c 00000000 		.word	.LANCHOR0
 1350 0090 30000000 		.word	.LANCHOR0+48
 1351 0094 14000000 		.word	.LANCHOR0+20
 1352              		.cfi_endproc
 1353              	.LFE723:
 1354              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1355              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1356              		.align	2
 1357              		.global	vTaskStartScheduler
 1358              		.thumb
 1359              		.thumb_func
 1360              		.type	vTaskStartScheduler, %function
 1361              	vTaskStartScheduler:
 1362              	.LFB724:
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 1363              		.loc 1 1827 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367 0000 00B5     		push	{lr}
 1368              		.cfi_def_cfa_offset 4
 1369              		.cfi_offset 14, -4
 1370 0002 83B0     		sub	sp, sp, #12
 1371              		.cfi_def_cfa_offset 16
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1372              		.loc 1 1860 0
 1373 0004 124B     		ldr	r3, .L129
 1374 0006 0193     		str	r3, [sp, #4]
 1375 0008 0023     		movs	r3, #0
 1376 000a 0093     		str	r3, [sp]
 1377 000c 8022     		movs	r2, #128
 1378 000e 1149     		ldr	r1, .L129+4
 1379 0010 1148     		ldr	r0, .L129+8
 1380 0012 FFF7FEFF 		bl	xTaskCreate
 1381              	.LVL126:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 116


 1382              		.loc 1 1870 0
 1383 0016 0128     		cmp	r0, #1
 1384 0018 01D1     		bne	.L124
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1385              		.loc 1 1872 0
 1386 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1387              	.LVL127:
 1388              	.L124:
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1389              		.loc 1 1881 0
 1390 001e 0128     		cmp	r0, #1
 1391 0020 0DD1     		bne	.L125
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1392              		.loc 1 1888 0
 1393              		.syntax unified
 1394              	@ 1888 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1395 0022 72B6     		 cpsid i 
 1396              	@ 0 "" 2
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1397              		.loc 1 1898 0
 1398              		.thumb
 1399              		.syntax unified
 1400 0024 0D4B     		ldr	r3, .L129+12
 1401 0026 4FF0FF32 		mov	r2, #-1
 1402 002a DA62     		str	r2, [r3, #44]
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1403              		.loc 1 1899 0
 1404 002c 0122     		movs	r2, #1
 1405 002e C3F80822 		str	r2, [r3, #520]
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1406              		.loc 1 1900 0
 1407 0032 0022     		movs	r2, #0
 1408 0034 C3F81422 		str	r2, [r3, #532]
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1409              		.loc 1 1909 0
 1410 0038 FFF7FEFF 		bl	xPortStartScheduler
 1411              	.LVL128:
 1412 003c 04E0     		b	.L123
 1413              	.LVL129:
 1414              	.L125:
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1415              		.loc 1 1924 0
 1416 003e B0F1FF3F 		cmp	r0, #-1
 1417 0042 01D1     		bne	.L123
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1418              		.loc 1 1924 0 is_stmt 0 discriminator 1
 1419              		.syntax unified
 1420              	@ 1924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1421 0044 72B6     		 cpsid i 
 1422              	@ 0 "" 2
 1423              		.thumb
 1424              		.syntax unified
 1425              	.L127:
 1426 0046 FEE7     		b	.L127
 1427              	.LVL130:
 1428              	.L123:
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 117


 1429              		.loc 1 1930 0 is_stmt 1
 1430 0048 03B0     		add	sp, sp, #12
 1431              		.cfi_def_cfa_offset 4
 1432              		@ sp needed
 1433 004a 5DF804FB 		ldr	pc, [sp], #4
 1434              	.L130:
 1435 004e 00BF     		.align	2
 1436              	.L129:
 1437 0050 20020000 		.word	.LANCHOR0+544
 1438 0054 00000000 		.word	.LC0
 1439 0058 00000000 		.word	prvIdleTask
 1440 005c 00000000 		.word	.LANCHOR0
 1441              		.cfi_endproc
 1442              	.LFE724:
 1443              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1444              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1445              		.align	2
 1446              		.global	vTaskEndScheduler
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	vTaskEndScheduler, %function
 1450              	vTaskEndScheduler:
 1451              	.LFB725:
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1452              		.loc 1 1934 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 08B5     		push	{r3, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1460              		.loc 1 1938 0
 1461              		.syntax unified
 1462              	@ 1938 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1463 0002 72B6     		 cpsid i 
 1464              	@ 0 "" 2
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
 1465              		.loc 1 1939 0
 1466              		.thumb
 1467              		.syntax unified
 1468 0004 0022     		movs	r2, #0
 1469 0006 034B     		ldr	r3, .L133
 1470 0008 C3F80822 		str	r2, [r3, #520]
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1471              		.loc 1 1940 0
 1472 000c FFF7FEFF 		bl	vPortEndScheduler
 1473              	.LVL131:
 1474 0010 08BD     		pop	{r3, pc}
 1475              	.L134:
 1476 0012 00BF     		.align	2
 1477              	.L133:
 1478 0014 00000000 		.word	.LANCHOR0
 1479              		.cfi_endproc
 1480              	.LFE725:
 1481              		.size	vTaskEndScheduler, .-vTaskEndScheduler
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 118


 1482              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1483              		.align	2
 1484              		.global	vTaskSuspendAll
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	vTaskSuspendAll, %function
 1488              	vTaskSuspendAll:
 1489              	.LFB726:
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1490              		.loc 1 1945 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1495              		.loc 1 1950 0
 1496 0000 034A     		ldr	r2, .L136
 1497 0002 D2F81C32 		ldr	r3, [r2, #540]
 1498 0006 0133     		adds	r3, r3, #1
 1499 0008 C2F81C32 		str	r3, [r2, #540]
 1500 000c 7047     		bx	lr
 1501              	.L137:
 1502 000e 00BF     		.align	2
 1503              	.L136:
 1504 0010 00000000 		.word	.LANCHOR0
 1505              		.cfi_endproc
 1506              	.LFE726:
 1507              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1508              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1509              		.align	2
 1510              		.global	xTaskGetTickCount
 1511              		.thumb
 1512              		.thumb_func
 1513              		.type	xTaskGetTickCount, %function
 1514              	xTaskGetTickCount:
 1515              	.LFB728:
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
 1516              		.loc 1 2128 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1521              		.loc 1 2134 0
 1522 0000 014B     		ldr	r3, .L139
 1523 0002 D3F81402 		ldr	r0, [r3, #532]
 1524              	.LVL132:
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1525              		.loc 1 2139 0
 1526 0006 7047     		bx	lr
 1527              	.L140:
 1528              		.align	2
 1529              	.L139:
 1530 0008 00000000 		.word	.LANCHOR0
 1531              		.cfi_endproc
 1532              	.LFE728:
 1533              		.size	xTaskGetTickCount, .-xTaskGetTickCount
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 119


 1534              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1535              		.align	2
 1536              		.global	xTaskGetTickCountFromISR
 1537              		.thumb
 1538              		.thumb_func
 1539              		.type	xTaskGetTickCountFromISR, %function
 1540              	xTaskGetTickCountFromISR:
 1541              	.LFB729:
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
 1542              		.loc 1 2143 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546 0000 08B5     		push	{r3, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 3, -8
 1549              		.cfi_offset 14, -4
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1550              		.loc 1 2161 0
 1551 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1552              	.LVL133:
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1553              		.loc 1 2165 0
 1554 0006 024B     		ldr	r3, .L143
 1555 0008 D3F81402 		ldr	r0, [r3, #532]
 1556              	.LVL134:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1557              		.loc 1 2170 0
 1558 000c 08BD     		pop	{r3, pc}
 1559              	.L144:
 1560 000e 00BF     		.align	2
 1561              	.L143:
 1562 0010 00000000 		.word	.LANCHOR0
 1563              		.cfi_endproc
 1564              	.LFE729:
 1565              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1566              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1567              		.align	2
 1568              		.global	uxTaskGetNumberOfTasks
 1569              		.thumb
 1570              		.thumb_func
 1571              		.type	uxTaskGetNumberOfTasks, %function
 1572              	uxTaskGetNumberOfTasks:
 1573              	.LFB730:
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1574              		.loc 1 2174 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1579              		.loc 1 2177 0
 1580 0000 014B     		ldr	r3, .L146
 1581 0002 D3F80002 		ldr	r0, [r3, #512]
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1582              		.loc 1 2178 0
 1583 0006 7047     		bx	lr
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 120


 1584              	.L147:
 1585              		.align	2
 1586              	.L146:
 1587 0008 00000000 		.word	.LANCHOR0
 1588              		.cfi_endproc
 1589              	.LFE730:
 1590              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1591              		.section	.text.pcTaskGetName,"ax",%progbits
 1592              		.align	2
 1593              		.global	pcTaskGetName
 1594              		.thumb
 1595              		.thumb_func
 1596              		.type	pcTaskGetName, %function
 1597              	pcTaskGetName:
 1598              	.LFB731:
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
 1599              		.loc 1 2182 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604              	.LVL135:
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1605              		.loc 1 2187 0
 1606 0000 0346     		mov	r3, r0
 1607 0002 10B9     		cbnz	r0, .L149
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1608              		.loc 1 2187 0 is_stmt 0 discriminator 1
 1609 0004 044B     		ldr	r3, .L152
 1610 0006 D3F80432 		ldr	r3, [r3, #516]
 1611              	.LVL136:
 1612              	.L149:
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1613              		.loc 1 2188 0 is_stmt 1 discriminator 4
 1614 000a 0BB9     		cbnz	r3, .L150
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1615              		.loc 1 2188 0 is_stmt 0 discriminator 1
 1616              		.syntax unified
 1617              	@ 2188 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1618 000c 72B6     		 cpsid i 
 1619              	@ 0 "" 2
 1620              		.thumb
 1621              		.syntax unified
 1622              	.L151:
 1623 000e FEE7     		b	.L151
 1624              	.L150:
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1625              		.loc 1 2190 0 is_stmt 1
 1626 0010 03F13400 		add	r0, r3, #52
 1627 0014 7047     		bx	lr
 1628              	.L153:
 1629 0016 00BF     		.align	2
 1630              	.L152:
 1631 0018 00000000 		.word	.LANCHOR0
 1632              		.cfi_endproc
 1633              	.LFE731:
 1634              		.size	pcTaskGetName, .-pcTaskGetName
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 121


 1635              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1636              		.align	2
 1637              		.global	xTaskIncrementTick
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	xTaskIncrementTick, %function
 1641              	xTaskIncrementTick:
 1642              	.LFB732:
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
 1643              		.loc 1 2500 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1648              		.cfi_def_cfa_offset 24
 1649              		.cfi_offset 4, -24
 1650              		.cfi_offset 5, -20
 1651              		.cfi_offset 6, -16
 1652              		.cfi_offset 7, -12
 1653              		.cfi_offset 8, -8
 1654              		.cfi_offset 14, -4
 1655              	.LVL137:
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1656              		.loc 1 2509 0
 1657 0004 394B     		ldr	r3, .L174
 1658 0006 D3F81C32 		ldr	r3, [r3, #540]
 1659 000a 002B     		cmp	r3, #0
 1660 000c 5ED1     		bne	.L155
 1661              	.LBB27:
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1662              		.loc 1 2513 0
 1663 000e 374B     		ldr	r3, .L174
 1664 0010 D3F81442 		ldr	r4, [r3, #532]
 1665 0014 0134     		adds	r4, r4, #1
 1666              	.LVL138:
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1667              		.loc 1 2517 0
 1668 0016 C3F81442 		str	r4, [r3, #532]
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1669              		.loc 1 2519 0
 1670 001a 94B9     		cbnz	r4, .L156
 1671              	.LBB28:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1672              		.loc 1 2521 0
 1673 001c 9B6A     		ldr	r3, [r3, #40]
 1674 001e 1B68     		ldr	r3, [r3]
 1675 0020 0BB1     		cbz	r3, .L157
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1676              		.loc 1 2521 0 is_stmt 0 discriminator 1
 1677              		.syntax unified
 1678              	@ 2521 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1679 0022 72B6     		 cpsid i 
 1680              	@ 0 "" 2
 1681              		.thumb
 1682              		.syntax unified
 1683              	.L158:
 1684 0024 FEE7     		b	.L158
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 122


 1685              	.L157:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1686              		.loc 1 2521 0 discriminator 2
 1687 0026 314B     		ldr	r3, .L174
 1688 0028 9A6A     		ldr	r2, [r3, #40]
 1689              	.LVL139:
 1690 002a D3F8FC11 		ldr	r1, [r3, #508]
 1691 002e 9962     		str	r1, [r3, #40]
 1692 0030 C3F8FC21 		str	r2, [r3, #508]
 1693 0034 D3F82422 		ldr	r2, [r3, #548]
 1694              	.LVL140:
 1695 0038 0132     		adds	r2, r2, #1
 1696 003a C3F82422 		str	r2, [r3, #548]
 1697              	.LVL141:
 1698 003e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1699              	.LVL142:
 1700              	.L156:
 1701              	.LBE28:
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1702              		.loc 1 2532 0 is_stmt 1
 1703 0042 2A4B     		ldr	r3, .L174
 1704 0044 DB6A     		ldr	r3, [r3, #44]
 1705 0046 9C42     		cmp	r4, r3
 1706 0048 03D2     		bcs	.L169
 1707              	.LBE27:
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1708              		.loc 1 2503 0
 1709 004a 0026     		movs	r6, #0
 1710 004c 45E0     		b	.L160
 1711              	.LVL143:
 1712              	.L171:
 1713              	.LBB29:
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1714              		.loc 1 2598 0
 1715 004e 0126     		movs	r6, #1
 1716              	.LVL144:
 1717 0050 00E0     		b	.L159
 1718              	.LVL145:
 1719              	.L169:
 1720 0052 0026     		movs	r6, #0
 1721              	.LVL146:
 1722              	.L159:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1723              		.loc 1 2536 0
 1724 0054 254B     		ldr	r3, .L174
 1725 0056 9B6A     		ldr	r3, [r3, #40]
 1726 0058 1B68     		ldr	r3, [r3]
 1727 005a 0BB9     		cbnz	r3, .L170
 1728 005c 0123     		movs	r3, #1
 1729 005e 00E0     		b	.L161
 1730              	.L170:
 1731 0060 0023     		movs	r3, #0
 1732              	.L161:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1733              		.loc 1 2536 0 is_stmt 0 discriminator 4
 1734 0062 23B1     		cbz	r3, .L162
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 123


 1735              		.loc 1 2543 0 is_stmt 1
 1736 0064 4FF0FF32 		mov	r2, #-1
 1737 0068 204B     		ldr	r3, .L174
 1738 006a DA62     		str	r2, [r3, #44]
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1739              		.loc 1 2544 0
 1740 006c 35E0     		b	.L160
 1741              	.L162:
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1742              		.loc 1 2552 0
 1743 006e 1F4B     		ldr	r3, .L174
 1744 0070 9B6A     		ldr	r3, [r3, #40]
 1745 0072 DB68     		ldr	r3, [r3, #12]
 1746 0074 DD68     		ldr	r5, [r3, #12]
 1747              	.LVL147:
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1748              		.loc 1 2553 0
 1749 0076 6B68     		ldr	r3, [r5, #4]
 1750              	.LVL148:
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1751              		.loc 1 2555 0
 1752 0078 9C42     		cmp	r4, r3
 1753 007a 02D2     		bcs	.L163
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
 1754              		.loc 1 2562 0
 1755 007c 1B4A     		ldr	r2, .L174
 1756 007e D362     		str	r3, [r2, #44]
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1757              		.loc 1 2563 0
 1758 0080 2BE0     		b	.L160
 1759              	.L163:
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1760              		.loc 1 2571 0
 1761 0082 05F10408 		add	r8, r5, #4
 1762 0086 4046     		mov	r0, r8
 1763 0088 FFF7FEFF 		bl	uxListRemove
 1764              	.LVL149:
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1765              		.loc 1 2575 0
 1766 008c AB6A     		ldr	r3, [r5, #40]
 1767 008e 1BB1     		cbz	r3, .L164
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1768              		.loc 1 2577 0
 1769 0090 05F11800 		add	r0, r5, #24
 1770 0094 FFF7FEFF 		bl	uxListRemove
 1771              	.LVL150:
 1772              	.L164:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1773              		.loc 1 2586 0
 1774 0098 EB6A     		ldr	r3, [r5, #44]
 1775 009a 144A     		ldr	r2, .L174
 1776 009c D2F81022 		ldr	r2, [r2, #528]
 1777 00a0 9342     		cmp	r3, r2
 1778 00a2 02D9     		bls	.L165
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1779              		.loc 1 2586 0 is_stmt 0 discriminator 1
 1780 00a4 114A     		ldr	r2, .L174
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 124


 1781 00a6 C2F81032 		str	r3, [r2, #528]
 1782              	.L165:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1783              		.loc 1 2586 0 discriminator 3
 1784 00aa 104F     		ldr	r7, .L174
 1785 00ac 07F13000 		add	r0, r7, #48
 1786 00b0 03EB8303 		add	r3, r3, r3, lsl #2
 1787 00b4 9A00     		lsls	r2, r3, #2
 1788 00b6 4146     		mov	r1, r8
 1789 00b8 1044     		add	r0, r0, r2
 1790 00ba FFF7FEFF 		bl	vListInsertEnd
 1791              	.LVL151:
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 1792              		.loc 1 2596 0 is_stmt 1 discriminator 3
 1793 00be EA6A     		ldr	r2, [r5, #44]
 1794 00c0 D7F80432 		ldr	r3, [r7, #516]
 1795 00c4 DB6A     		ldr	r3, [r3, #44]
 1796 00c6 9A42     		cmp	r2, r3
 1797 00c8 C1D2     		bcs	.L171
 1798 00ca C3E7     		b	.L159
 1799              	.LVL152:
 1800              	.L155:
 1801              	.LBE29:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1802              		.loc 1 2643 0
 1803 00cc 074A     		ldr	r2, .L174
 1804 00ce D2F82832 		ldr	r3, [r2, #552]
 1805 00d2 0133     		adds	r3, r3, #1
 1806 00d4 C2F82832 		str	r3, [r2, #552]
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1807              		.loc 1 2503 0
 1808 00d8 0026     		movs	r6, #0
 1809              	.LVL153:
 1810              	.L160:
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1811              		.loc 1 2656 0
 1812 00da 044B     		ldr	r3, .L174
 1813 00dc D3F82C32 		ldr	r3, [r3, #556]
 1814 00e0 03B1     		cbz	r3, .L168
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1815              		.loc 1 2658 0
 1816 00e2 0126     		movs	r6, #1
 1817              	.LVL154:
 1818              	.L168:
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1819              		.loc 1 2668 0
 1820 00e4 3046     		mov	r0, r6
 1821 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1822              	.LVL155:
 1823              	.L175:
 1824 00ea 00BF     		.align	2
 1825              	.L174:
 1826 00ec 00000000 		.word	.LANCHOR0
 1827              		.cfi_endproc
 1828              	.LFE732:
 1829              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 1830              		.section	.text.xTaskResumeAll,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 125


 1831              		.align	2
 1832              		.global	xTaskResumeAll
 1833              		.thumb
 1834              		.thumb_func
 1835              		.type	xTaskResumeAll, %function
 1836              	xTaskResumeAll:
 1837              	.LFB727:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1838              		.loc 1 2018 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842              	.LVL156:
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1843              		.loc 1 2024 0
 1844 0000 364B     		ldr	r3, .L192
 1845 0002 D3F81C32 		ldr	r3, [r3, #540]
 1846 0006 0BB9     		cbnz	r3, .L177
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1847              		.loc 1 2024 0 is_stmt 0 discriminator 1
 1848              		.syntax unified
 1849              	@ 2024 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1850 0008 72B6     		 cpsid i 
 1851              	@ 0 "" 2
 1852              		.thumb
 1853              		.syntax unified
 1854              	.L178:
 1855 000a FEE7     		b	.L178
 1856              	.L177:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1857              		.loc 1 2018 0 is_stmt 1
 1858 000c 70B5     		push	{r4, r5, r6, lr}
 1859              		.cfi_def_cfa_offset 16
 1860              		.cfi_offset 4, -16
 1861              		.cfi_offset 5, -12
 1862              		.cfi_offset 6, -8
 1863              		.cfi_offset 14, -4
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1864              		.loc 1 2031 0
 1865 000e FFF7FEFF 		bl	vPortEnterCritical
 1866              	.LVL157:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1867              		.loc 1 2033 0
 1868 0012 324B     		ldr	r3, .L192
 1869 0014 D3F81C22 		ldr	r2, [r3, #540]
 1870 0018 013A     		subs	r2, r2, #1
 1871 001a C3F81C22 		str	r2, [r3, #540]
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1872              		.loc 1 2035 0
 1873 001e D3F81C32 		ldr	r3, [r3, #540]
 1874 0022 002B     		cmp	r3, #0
 1875 0024 52D1     		bne	.L188
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1876              		.loc 1 2037 0
 1877 0026 2D4B     		ldr	r3, .L192
 1878 0028 D3F80032 		ldr	r3, [r3, #512]
 1879 002c 3BBB     		cbnz	r3, .L189
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 126


2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1880              		.loc 1 2020 0
 1881 002e 0024     		movs	r4, #0
 1882 0030 4FE0     		b	.L179
 1883              	.LVL158:
 1884              	.L183:
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1885              		.loc 1 2043 0
 1886 0032 2A4D     		ldr	r5, .L192
 1887 0034 2B6A     		ldr	r3, [r5, #32]
 1888 0036 DC68     		ldr	r4, [r3, #12]
 1889              	.LVL159:
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1890              		.loc 1 2044 0
 1891 0038 04F11800 		add	r0, r4, #24
 1892 003c FFF7FEFF 		bl	uxListRemove
 1893              	.LVL160:
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1894              		.loc 1 2045 0
 1895 0040 261D     		adds	r6, r4, #4
 1896 0042 3046     		mov	r0, r6
 1897 0044 FFF7FEFF 		bl	uxListRemove
 1898              	.LVL161:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1899              		.loc 1 2046 0
 1900 0048 E36A     		ldr	r3, [r4, #44]
 1901 004a D5F81022 		ldr	r2, [r5, #528]
 1902 004e 9342     		cmp	r3, r2
 1903 0050 01D9     		bls	.L181
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1904              		.loc 1 2046 0 is_stmt 0 discriminator 1
 1905 0052 C5F81032 		str	r3, [r5, #528]
 1906              	.L181:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1907              		.loc 1 2046 0 discriminator 3
 1908 0056 214D     		ldr	r5, .L192
 1909 0058 05F13000 		add	r0, r5, #48
 1910 005c 03EB8303 		add	r3, r3, r3, lsl #2
 1911 0060 9A00     		lsls	r2, r3, #2
 1912 0062 3146     		mov	r1, r6
 1913 0064 1044     		add	r0, r0, r2
 1914 0066 FFF7FEFF 		bl	vListInsertEnd
 1915              	.LVL162:
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1916              		.loc 1 2050 0 is_stmt 1 discriminator 3
 1917 006a E26A     		ldr	r2, [r4, #44]
 1918 006c D5F80432 		ldr	r3, [r5, #516]
 1919 0070 DB6A     		ldr	r3, [r3, #44]
 1920 0072 9A42     		cmp	r2, r3
 1921 0074 04D3     		bcc	.L180
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1922              		.loc 1 2052 0
 1923 0076 0122     		movs	r2, #1
 1924 0078 C5F82C22 		str	r2, [r5, #556]
 1925 007c 00E0     		b	.L180
 1926              	.LVL163:
 1927              	.L189:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 127


 1928 007e 0024     		movs	r4, #0
 1929              	.LVL164:
 1930              	.L180:
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1931              		.loc 1 2041 0
 1932 0080 164B     		ldr	r3, .L192
 1933 0082 5B69     		ldr	r3, [r3, #20]
 1934 0084 002B     		cmp	r3, #0
 1935 0086 D4D1     		bne	.L183
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1936              		.loc 1 2060 0
 1937 0088 0CB1     		cbz	r4, .L184
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1938              		.loc 1 2068 0
 1939 008a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1940              	.LVL165:
 1941              	.L184:
 1942              	.LBB30:
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1943              		.loc 1 2076 0
 1944 008e 134B     		ldr	r3, .L192
 1945 0090 D3F82842 		ldr	r4, [r3, #552]
 1946              	.LVL166:
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1947              		.loc 1 2078 0
 1948 0094 64B1     		cbz	r4, .L185
 1949              	.L187:
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
 1950              		.loc 1 2082 0
 1951 0096 FFF7FEFF 		bl	xTaskIncrementTick
 1952              	.LVL167:
 1953 009a 18B1     		cbz	r0, .L186
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
 1954              		.loc 1 2084 0
 1955 009c 0122     		movs	r2, #1
 1956 009e 0F4B     		ldr	r3, .L192
 1957 00a0 C3F82C22 		str	r2, [r3, #556]
 1958              	.L186:
 1959              	.LVL168:
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1960              		.loc 1 2091 0
 1961 00a4 013C     		subs	r4, r4, #1
 1962              	.LVL169:
 1963 00a6 F6D1     		bne	.L187
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1964              		.loc 1 2093 0
 1965 00a8 0022     		movs	r2, #0
 1966 00aa 0C4B     		ldr	r3, .L192
 1967 00ac C3F82822 		str	r2, [r3, #552]
 1968              	.L185:
 1969              	.LBE30:
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1970              		.loc 1 2101 0
 1971 00b0 0A4B     		ldr	r3, .L192
 1972 00b2 D3F82C32 		ldr	r3, [r3, #556]
 1973 00b6 5BB1     		cbz	r3, .L190
 1974              	.LVL170:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 128


2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1975              		.loc 1 2108 0
 1976 00b8 4FF08052 		mov	r2, #268435456
 1977 00bc 084B     		ldr	r3, .L192+4
 1978 00be 1A60     		str	r2, [r3]
 1979              		.syntax unified
 1980              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1981 00c0 BFF34F8F 		dsb
 1982              	@ 0 "" 2
 1983              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1984 00c4 BFF36F8F 		isb
 1985              	@ 0 "" 2
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1986              		.loc 1 2105 0
 1987              		.thumb
 1988              		.syntax unified
 1989 00c8 0124     		movs	r4, #1
 1990              	.LVL171:
 1991 00ca 02E0     		b	.L179
 1992              	.LVL172:
 1993              	.L188:
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1994              		.loc 1 2020 0
 1995 00cc 0024     		movs	r4, #0
 1996 00ce 00E0     		b	.L179
 1997              	.LVL173:
 1998              	.L190:
 1999 00d0 0024     		movs	r4, #0
 2000              	.LVL174:
 2001              	.L179:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2002              		.loc 1 2121 0
 2003 00d2 FFF7FEFF 		bl	vPortExitCritical
 2004              	.LVL175:
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2005              		.loc 1 2124 0
 2006 00d6 2046     		mov	r0, r4
 2007 00d8 70BD     		pop	{r4, r5, r6, pc}
 2008              	.LVL176:
 2009              	.L193:
 2010 00da 00BF     		.align	2
 2011              	.L192:
 2012 00dc 00000000 		.word	.LANCHOR0
 2013 00e0 04ED00E0 		.word	-536810236
 2014              		.cfi_endproc
 2015              	.LFE727:
 2016              		.size	xTaskResumeAll, .-xTaskResumeAll
 2017              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2018              		.align	2
 2019              		.global	vTaskDelayUntil
 2020              		.thumb
 2021              		.thumb_func
 2022              		.type	vTaskDelayUntil, %function
 2023              	vTaskDelayUntil:
 2024              	.LFB715:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2025              		.loc 1 1141 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 129


 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              	.LVL177:
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2030              		.loc 1 1145 0
 2031 0000 08B9     		cbnz	r0, .L195
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2032              		.loc 1 1145 0 is_stmt 0 discriminator 1
 2033              		.syntax unified
 2034              	@ 1145 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2035 0002 72B6     		 cpsid i 
 2036              	@ 0 "" 2
 2037              		.thumb
 2038              		.syntax unified
 2039              	.L196:
 2040 0004 FEE7     		b	.L196
 2041              	.L195:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2042              		.loc 1 1141 0 is_stmt 1
 2043 0006 38B5     		push	{r3, r4, r5, lr}
 2044              		.cfi_def_cfa_offset 16
 2045              		.cfi_offset 3, -16
 2046              		.cfi_offset 4, -12
 2047              		.cfi_offset 5, -8
 2048              		.cfi_offset 14, -4
 2049 0008 0546     		mov	r5, r0
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2050              		.loc 1 1146 0
 2051 000a 09B9     		cbnz	r1, .L197
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2052              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2053              		.syntax unified
 2054              	@ 1146 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2055 000c 72B6     		 cpsid i 
 2056              	@ 0 "" 2
 2057              		.thumb
 2058              		.syntax unified
 2059              	.L198:
 2060 000e FEE7     		b	.L198
 2061              	.L197:
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2062              		.loc 1 1147 0 is_stmt 1
 2063 0010 1A4B     		ldr	r3, .L210
 2064 0012 D3F81C32 		ldr	r3, [r3, #540]
 2065 0016 0BB1     		cbz	r3, .L199
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2066              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2067              		.syntax unified
 2068              	@ 1147 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2069 0018 72B6     		 cpsid i 
 2070              	@ 0 "" 2
 2071              		.thumb
 2072              		.syntax unified
 2073              	.L200:
 2074 001a FEE7     		b	.L200
 2075              	.L199:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 130


 2076 001c 0C46     		mov	r4, r1
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2077              		.loc 1 1149 0 is_stmt 1
 2078 001e FFF7FEFF 		bl	vTaskSuspendAll
 2079              	.LVL178:
 2080              	.LBB31:
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2081              		.loc 1 1153 0
 2082 0022 164B     		ldr	r3, .L210
 2083 0024 D3F81402 		ldr	r0, [r3, #532]
 2084              	.LVL179:
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2085              		.loc 1 1156 0
 2086 0028 2A68     		ldr	r2, [r5]
 2087 002a A318     		adds	r3, r4, r2
 2088              	.LVL180:
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2089              		.loc 1 1158 0
 2090 002c 9042     		cmp	r0, r2
 2091 002e 05D2     		bcs	.L201
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2092              		.loc 1 1165 0
 2093 0030 9A42     		cmp	r2, r3
 2094 0032 09D9     		bls	.L205
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2095              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2096 0034 9842     		cmp	r0, r3
 2097 0036 09D3     		bcc	.L206
 2098              	.LBE31:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2099              		.loc 1 1143 0 is_stmt 1
 2100 0038 0022     		movs	r2, #0
 2101 003a 0CE0     		b	.L202
 2102              	.L201:
 2103              	.LBB32:
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2104              		.loc 1 1179 0
 2105 003c 9A42     		cmp	r2, r3
 2106 003e 07D8     		bhi	.L207
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2107              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2108 0040 9842     		cmp	r0, r3
 2109 0042 07D3     		bcc	.L208
 2110              	.LBE32:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2111              		.loc 1 1143 0 is_stmt 1
 2112 0044 0022     		movs	r2, #0
 2113 0046 06E0     		b	.L202
 2114              	.L205:
 2115 0048 0022     		movs	r2, #0
 2116 004a 04E0     		b	.L202
 2117              	.L206:
 2118              	.LBB33:
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2119              		.loc 1 1167 0
 2120 004c 0122     		movs	r2, #1
 2121 004e 02E0     		b	.L202
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 131


 2122              	.L207:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2123              		.loc 1 1181 0
 2124 0050 0122     		movs	r2, #1
 2125 0052 00E0     		b	.L202
 2126              	.L208:
 2127 0054 0122     		movs	r2, #1
 2128              	.L202:
 2129              	.LVL181:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2130              		.loc 1 1190 0
 2131 0056 2B60     		str	r3, [r5]
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2132              		.loc 1 1192 0
 2133 0058 1AB1     		cbz	r2, .L203
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2134              		.loc 1 1198 0
 2135 005a 0021     		movs	r1, #0
 2136 005c 181A     		subs	r0, r3, r0
 2137              	.LVL182:
 2138 005e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2139              	.LVL183:
 2140              	.L203:
 2141              	.LBE33:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2142              		.loc 1 1205 0
 2143 0062 FFF7FEFF 		bl	xTaskResumeAll
 2144              	.LVL184:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2145              		.loc 1 1209 0
 2146 0066 38B9     		cbnz	r0, .L194
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2147              		.loc 1 1211 0
 2148 0068 4FF08052 		mov	r2, #268435456
 2149 006c 044B     		ldr	r3, .L210+4
 2150 006e 1A60     		str	r2, [r3]
 2151              		.syntax unified
 2152              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2153 0070 BFF34F8F 		dsb
 2154              	@ 0 "" 2
 2155              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2156 0074 BFF36F8F 		isb
 2157              	@ 0 "" 2
 2158              		.thumb
 2159              		.syntax unified
 2160              	.L194:
 2161 0078 38BD     		pop	{r3, r4, r5, pc}
 2162              	.LVL185:
 2163              	.L211:
 2164 007a 00BF     		.align	2
 2165              	.L210:
 2166 007c 00000000 		.word	.LANCHOR0
 2167 0080 04ED00E0 		.word	-536810236
 2168              		.cfi_endproc
 2169              	.LFE715:
 2170              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2171              		.section	.text.vTaskDelay,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 132


 2172              		.align	2
 2173              		.global	vTaskDelay
 2174              		.thumb
 2175              		.thumb_func
 2176              		.type	vTaskDelay, %function
 2177              	vTaskDelay:
 2178              	.LFB716:
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2179              		.loc 1 1225 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              	.LVL186:
 2184 0000 10B5     		push	{r4, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 4, -8
 2187              		.cfi_offset 14, -4
 2188              	.LVL187:
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2189              		.loc 1 1229 0
 2190 0002 78B1     		cbz	r0, .L217
 2191 0004 0446     		mov	r4, r0
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2192              		.loc 1 1231 0
 2193 0006 0D4B     		ldr	r3, .L219
 2194 0008 D3F81C32 		ldr	r3, [r3, #540]
 2195 000c 0BB1     		cbz	r3, .L214
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2196              		.loc 1 1231 0 is_stmt 0 discriminator 1
 2197              		.syntax unified
 2198              	@ 1231 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2199 000e 72B6     		 cpsid i 
 2200              	@ 0 "" 2
 2201              		.thumb
 2202              		.syntax unified
 2203              	.L215:
 2204 0010 FEE7     		b	.L215
 2205              	.L214:
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2206              		.loc 1 1232 0 is_stmt 1
 2207 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2208              	.LVL188:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2209              		.loc 1 1243 0
 2210 0016 0021     		movs	r1, #0
 2211 0018 2046     		mov	r0, r4
 2212 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2213              	.LVL189:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2214              		.loc 1 1245 0
 2215 001e FFF7FEFF 		bl	xTaskResumeAll
 2216              	.LVL190:
 2217 0022 00E0     		b	.L213
 2218              	.LVL191:
 2219              	.L217:
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2220              		.loc 1 1226 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 133


 2221 0024 0020     		movs	r0, #0
 2222              	.LVL192:
 2223              	.L213:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2224              		.loc 1 1254 0
 2225 0026 38B9     		cbnz	r0, .L212
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2226              		.loc 1 1256 0
 2227 0028 4FF08052 		mov	r2, #268435456
 2228 002c 044B     		ldr	r3, .L219+4
 2229 002e 1A60     		str	r2, [r3]
 2230              		.syntax unified
 2231              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2232 0030 BFF34F8F 		dsb
 2233              	@ 0 "" 2
 2234              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2235 0034 BFF36F8F 		isb
 2236              	@ 0 "" 2
 2237              		.thumb
 2238              		.syntax unified
 2239              	.L212:
 2240 0038 10BD     		pop	{r4, pc}
 2241              	.L220:
 2242 003a 00BF     		.align	2
 2243              	.L219:
 2244 003c 00000000 		.word	.LANCHOR0
 2245 0040 04ED00E0 		.word	-536810236
 2246              		.cfi_endproc
 2247              	.LFE716:
 2248              		.size	vTaskDelay, .-vTaskDelay
 2249              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2250              		.align	2
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	prvCheckTasksWaitingTermination, %function
 2254              	prvCheckTasksWaitingTermination:
 2255              	.LFB746:
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2256              		.loc 1 3377 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260 0000 38B5     		push	{r3, r4, r5, lr}
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 3, -16
 2263              		.cfi_offset 4, -12
 2264              		.cfi_offset 5, -8
 2265              		.cfi_offset 14, -4
 2266              	.LBB34:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2267              		.loc 1 3387 0
 2268 0002 1FE0     		b	.L223
 2269              	.L224:
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2270              		.loc 1 3389 0
 2271 0004 FFF7FEFF 		bl	vTaskSuspendAll
 2272              	.LVL193:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 134


3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2273              		.loc 1 3391 0
 2274 0008 114B     		ldr	r3, .L226
 2275 000a D3F8E841 		ldr	r4, [r3, #488]
 2276              	.LVL194:
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2277              		.loc 1 3393 0
 2278 000e FFF7FEFF 		bl	xTaskResumeAll
 2279              	.LVL195:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2280              		.loc 1 3395 0
 2281 0012 BCB1     		cbz	r4, .L223
 2282              	.LBB35:
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2283              		.loc 1 3399 0
 2284 0014 FFF7FEFF 		bl	vPortEnterCritical
 2285              	.LVL196:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2286              		.loc 1 3401 0
 2287 0018 0D4C     		ldr	r4, .L226
 2288              	.LVL197:
 2289 001a D4F8F431 		ldr	r3, [r4, #500]
 2290 001e DD68     		ldr	r5, [r3, #12]
 2291              	.LVL198:
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2292              		.loc 1 3402 0
 2293 0020 281D     		adds	r0, r5, #4
 2294 0022 FFF7FEFF 		bl	uxListRemove
 2295              	.LVL199:
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2296              		.loc 1 3403 0
 2297 0026 D4F80032 		ldr	r3, [r4, #512]
 2298 002a 013B     		subs	r3, r3, #1
 2299 002c C4F80032 		str	r3, [r4, #512]
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2300              		.loc 1 3404 0
 2301 0030 D4F81832 		ldr	r3, [r4, #536]
 2302 0034 013B     		subs	r3, r3, #1
 2303 0036 C4F81832 		str	r3, [r4, #536]
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2304              		.loc 1 3406 0
 2305 003a FFF7FEFF 		bl	vPortExitCritical
 2306              	.LVL200:
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2307              		.loc 1 3408 0
 2308 003e 2846     		mov	r0, r5
 2309 0040 FFF7FEFF 		bl	prvDeleteTCB
 2310              	.LVL201:
 2311              	.L223:
 2312              	.LBE35:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2313              		.loc 1 3387 0
 2314 0044 024B     		ldr	r3, .L226
 2315 0046 D3F81832 		ldr	r3, [r3, #536]
 2316 004a 002B     		cmp	r3, #0
 2317 004c DAD1     		bne	.L224
 2318              	.LBE34:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 135


3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2319              		.loc 1 3417 0
 2320 004e 38BD     		pop	{r3, r4, r5, pc}
 2321              	.L227:
 2322              		.align	2
 2323              	.L226:
 2324 0050 00000000 		.word	.LANCHOR0
 2325              		.cfi_endproc
 2326              	.LFE746:
 2327              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 2328              		.section	.text.prvIdleTask,"ax",%progbits
 2329              		.align	2
 2330              		.thumb
 2331              		.thumb_func
 2332              		.type	prvIdleTask, %function
 2333              	prvIdleTask:
 2334              	.LFB742:
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
 2335              		.loc 1 3143 0
 2336              		.cfi_startproc
 2337              		@ Volatile: function does not return.
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              	.LVL202:
 2341 0000 08B5     		push	{r3, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 3, -8
 2344              		.cfi_offset 14, -4
 2345              	.LVL203:
 2346              	.L230:
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2347              		.loc 1 3154 0
 2348 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 2349              	.LVL204:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2350              		.loc 1 3177 0
 2351 0006 074B     		ldr	r3, .L232
 2352 0008 1B6B     		ldr	r3, [r3, #48]
 2353 000a 012B     		cmp	r3, #1
 2354 000c 07D9     		bls	.L229
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2355              		.loc 1 3179 0
 2356 000e 4FF08052 		mov	r2, #268435456
 2357 0012 054B     		ldr	r3, .L232+4
 2358 0014 1A60     		str	r2, [r3]
 2359              		.syntax unified
 2360              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2361 0016 BFF34F8F 		dsb
 2362              	@ 0 "" 2
 2363              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2364 001a BFF36F8F 		isb
 2365              	@ 0 "" 2
 2366              		.thumb
 2367              		.syntax unified
 2368              	.L229:
 2369              	.LBB36:
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 136


 2370              		.loc 1 3197 0
 2371 001e FFF7FEFF 		bl	vApplicationIdleHook
 2372              	.LVL205:
 2373              	.LBE36:
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2374              		.loc 1 3245 0
 2375 0022 EEE7     		b	.L230
 2376              	.L233:
 2377              		.align	2
 2378              	.L232:
 2379 0024 00000000 		.word	.LANCHOR0
 2380 0028 04ED00E0 		.word	-536810236
 2381              		.cfi_endproc
 2382              	.LFE742:
 2383              		.size	prvIdleTask, .-prvIdleTask
 2384              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2385              		.align	2
 2386              		.global	vTaskSwitchContext
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	vTaskSwitchContext, %function
 2390              	vTaskSwitchContext:
 2391              	.LFB733:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2392              		.loc 1 2762 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 0, uses_anonymous_args = 0
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2396              		.loc 1 2763 0
 2397 0000 2D4B     		ldr	r3, .L245
 2398 0002 D3F81C32 		ldr	r3, [r3, #540]
 2399 0006 23B1     		cbz	r3, .L235
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2400              		.loc 1 2767 0
 2401 0008 0122     		movs	r2, #1
 2402 000a 2B4B     		ldr	r3, .L245
 2403 000c C3F82C22 		str	r2, [r3, #556]
 2404 0010 7047     		bx	lr
 2405              	.L235:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2406              		.loc 1 2762 0
 2407 0012 10B5     		push	{r4, lr}
 2408              		.cfi_def_cfa_offset 8
 2409              		.cfi_offset 4, -8
 2410              		.cfi_offset 14, -4
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2411              		.loc 1 2771 0
 2412 0014 284B     		ldr	r3, .L245
 2413 0016 0022     		movs	r2, #0
 2414 0018 C3F82C22 		str	r2, [r3, #556]
 2415              	.LBB37:
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2416              		.loc 1 2803 0
 2417 001c D3F80432 		ldr	r3, [r3, #516]
 2418 0020 1B6B     		ldr	r3, [r3, #48]
 2419              	.LVL206:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 137


2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2420              		.loc 1 2806 0
 2421 0022 1A68     		ldr	r2, [r3]
 2422 0024 B2F1A53F 		cmp	r2, #-1515870811
 2423 0028 0BD1     		bne	.L237
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2424              		.loc 1 2807 0 discriminator 1
 2425 002a 5A68     		ldr	r2, [r3, #4]
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2426              		.loc 1 2806 0 discriminator 1
 2427 002c B2F1A53F 		cmp	r2, #-1515870811
 2428 0030 07D1     		bne	.L237
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2429              		.loc 1 2808 0
 2430 0032 9A68     		ldr	r2, [r3, #8]
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2431              		.loc 1 2807 0
 2432 0034 B2F1A53F 		cmp	r2, #-1515870811
 2433 0038 03D1     		bne	.L237
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 2434              		.loc 1 2809 0
 2435 003a DB68     		ldr	r3, [r3, #12]
 2436              	.LVL207:
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2437              		.loc 1 2808 0
 2438 003c B3F1A53F 		cmp	r3, #-1515870811
 2439 0040 07D0     		beq	.L238
 2440              	.L237:
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 2441              		.loc 1 2811 0
 2442 0042 1D4B     		ldr	r3, .L245
 2443 0044 D3F80402 		ldr	r0, [r3, #516]
 2444 0048 D3F80412 		ldr	r1, [r3, #516]
 2445 004c 3431     		adds	r1, r1, #52
 2446 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2447              	.LVL208:
 2448              	.L238:
 2449              	.LBE37:
 2450              	.LBB38:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2451              		.loc 1 2817 0
 2452 0052 194B     		ldr	r3, .L245
 2453 0054 D3F81032 		ldr	r3, [r3, #528]
 2454              	.LVL209:
 2455 0058 03E0     		b	.L239
 2456              	.L242:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2457              		.loc 1 2817 0 is_stmt 0 discriminator 5
 2458 005a 0BB9     		cbnz	r3, .L240
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2459              		.loc 1 2817 0 discriminator 2
 2460              		.syntax unified
 2461              	@ 2817 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2462 005c 72B6     		 cpsid i 
 2463              	@ 0 "" 2
 2464              		.thumb
 2465              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 138


 2466              	.L241:
 2467 005e FEE7     		b	.L241
 2468              	.L240:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2469              		.loc 1 2817 0 discriminator 3
 2470 0060 013B     		subs	r3, r3, #1
 2471              	.LVL210:
 2472              	.L239:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2473              		.loc 1 2817 0 discriminator 4
 2474 0062 03EB8301 		add	r1, r3, r3, lsl #2
 2475 0066 8A00     		lsls	r2, r1, #2
 2476 0068 1349     		ldr	r1, .L245
 2477 006a 0A44     		add	r2, r2, r1
 2478 006c 126B     		ldr	r2, [r2, #48]
 2479 006e 002A     		cmp	r2, #0
 2480 0070 F3D0     		beq	.L242
 2481              	.LVL211:
 2482              	.LBB39:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2483              		.loc 1 2817 0 discriminator 6
 2484 0072 0846     		mov	r0, r1
 2485 0074 9900     		lsls	r1, r3, #2
 2486 0076 CC18     		adds	r4, r1, r3
 2487 0078 A200     		lsls	r2, r4, #2
 2488 007a 0244     		add	r2, r2, r0
 2489 007c 546B     		ldr	r4, [r2, #52]
 2490 007e 6468     		ldr	r4, [r4, #4]
 2491 0080 5463     		str	r4, [r2, #52]
 2492 0082 3030     		adds	r0, r0, #48
 2493 0084 1944     		add	r1, r1, r3
 2494 0086 8A00     		lsls	r2, r1, #2
 2495 0088 0832     		adds	r2, r2, #8
 2496 008a 0244     		add	r2, r2, r0
 2497 008c 9442     		cmp	r4, r2
 2498 008e 06D1     		bne	.L243
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2499              		.loc 1 2817 0 discriminator 7
 2500 0090 6068     		ldr	r0, [r4, #4]
 2501 0092 03EB8301 		add	r1, r3, r3, lsl #2
 2502 0096 8A00     		lsls	r2, r1, #2
 2503 0098 0749     		ldr	r1, .L245
 2504 009a 0A44     		add	r2, r2, r1
 2505 009c 5063     		str	r0, [r2, #52]
 2506              	.L243:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2507              		.loc 1 2817 0 discriminator 9
 2508 009e 0649     		ldr	r1, .L245
 2509 00a0 03EB8300 		add	r0, r3, r3, lsl #2
 2510 00a4 8200     		lsls	r2, r0, #2
 2511 00a6 0A44     		add	r2, r2, r1
 2512 00a8 526B     		ldr	r2, [r2, #52]
 2513 00aa D268     		ldr	r2, [r2, #12]
 2514 00ac C1F80422 		str	r2, [r1, #516]
 2515              	.LBE39:
 2516 00b0 C1F81032 		str	r3, [r1, #528]
 2517 00b4 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 139


 2518              	.L246:
 2519 00b6 00BF     		.align	2
 2520              	.L245:
 2521 00b8 00000000 		.word	.LANCHOR0
 2522              	.LBE38:
 2523              		.cfi_endproc
 2524              	.LFE733:
 2525              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2526              		.section	.text.vTaskSuspend,"ax",%progbits
 2527              		.align	2
 2528              		.global	vTaskSuspend
 2529              		.thumb
 2530              		.thumb_func
 2531              		.type	vTaskSuspend, %function
 2532              	vTaskSuspend:
 2533              	.LFB720:
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 2534              		.loc 1 1567 0 is_stmt 1
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 0
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              	.LVL212:
 2539 0000 70B5     		push	{r4, r5, r6, lr}
 2540              		.cfi_def_cfa_offset 16
 2541              		.cfi_offset 4, -16
 2542              		.cfi_offset 5, -12
 2543              		.cfi_offset 6, -8
 2544              		.cfi_offset 14, -4
 2545 0002 0446     		mov	r4, r0
1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2546              		.loc 1 1570 0
 2547 0004 FFF7FEFF 		bl	vPortEnterCritical
 2548              	.LVL213:
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2549              		.loc 1 1574 0
 2550 0008 14B9     		cbnz	r4, .L248
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2551              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2552 000a 214B     		ldr	r3, .L257
 2553 000c D3F80442 		ldr	r4, [r3, #516]
 2554              	.LVL214:
 2555              	.L248:
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2556              		.loc 1 1580 0 is_stmt 1 discriminator 4
 2557 0010 261D     		adds	r6, r4, #4
 2558 0012 3046     		mov	r0, r6
 2559 0014 FFF7FEFF 		bl	uxListRemove
 2560              	.LVL215:
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2561              		.loc 1 1590 0 discriminator 4
 2562 0018 A36A     		ldr	r3, [r4, #40]
 2563 001a 1BB1     		cbz	r3, .L249
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2564              		.loc 1 1592 0
 2565 001c 04F11800 		add	r0, r4, #24
 2566 0020 FFF7FEFF 		bl	uxListRemove
 2567              	.LVL216:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 140


 2568              	.L249:
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2569              		.loc 1 1599 0
 2570 0024 1A4D     		ldr	r5, .L257
 2571 0026 3146     		mov	r1, r6
 2572 0028 2846     		mov	r0, r5
 2573 002a FFF7FEFF 		bl	vListInsertEnd
 2574              	.LVL217:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2575              		.loc 1 1601 0
 2576 002e FFF7FEFF 		bl	vPortExitCritical
 2577              	.LVL218:
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2578              		.loc 1 1603 0
 2579 0032 D5F80832 		ldr	r3, [r5, #520]
 2580 0036 2BB1     		cbz	r3, .L250
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2581              		.loc 1 1607 0
 2582 0038 FFF7FEFF 		bl	vPortEnterCritical
 2583              	.LVL219:
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2584              		.loc 1 1609 0
 2585 003c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2586              	.LVL220:
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2587              		.loc 1 1611 0
 2588 0040 FFF7FEFF 		bl	vPortExitCritical
 2589              	.LVL221:
 2590              	.L250:
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2591              		.loc 1 1618 0
 2592 0044 124B     		ldr	r3, .L257
 2593 0046 D3F80432 		ldr	r3, [r3, #516]
 2594 004a 9C42     		cmp	r4, r3
 2595 004c 1FD1     		bne	.L247
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2596              		.loc 1 1620 0
 2597 004e 104B     		ldr	r3, .L257
 2598 0050 D3F80832 		ldr	r3, [r3, #520]
 2599 0054 73B1     		cbz	r3, .L252
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2600              		.loc 1 1623 0
 2601 0056 0E4B     		ldr	r3, .L257
 2602 0058 D3F81C32 		ldr	r3, [r3, #540]
 2603 005c 0BB1     		cbz	r3, .L253
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2604              		.loc 1 1623 0 is_stmt 0 discriminator 1
 2605              		.syntax unified
 2606              	@ 1623 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2607 005e 72B6     		 cpsid i 
 2608              	@ 0 "" 2
 2609              		.thumb
 2610              		.syntax unified
 2611              	.L254:
 2612 0060 FEE7     		b	.L254
 2613              	.L253:
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 141


 2614              		.loc 1 1624 0 is_stmt 1
 2615 0062 4FF08052 		mov	r2, #268435456
 2616 0066 0B4B     		ldr	r3, .L257+4
 2617 0068 1A60     		str	r2, [r3]
 2618              		.syntax unified
 2619              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2620 006a BFF34F8F 		dsb
 2621              	@ 0 "" 2
 2622              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2623 006e BFF36F8F 		isb
 2624              	@ 0 "" 2
 2625              		.thumb
 2626              		.syntax unified
 2627 0072 70BD     		pop	{r4, r5, r6, pc}
 2628              	.LVL222:
 2629              	.L252:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2630              		.loc 1 1631 0
 2631 0074 064B     		ldr	r3, .L257
 2632 0076 1A68     		ldr	r2, [r3]
 2633 0078 D3F80032 		ldr	r3, [r3, #512]
 2634 007c 9A42     		cmp	r2, r3
 2635 007e 04D1     		bne	.L255
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2636              		.loc 1 1637 0
 2637 0080 0022     		movs	r2, #0
 2638 0082 034B     		ldr	r3, .L257
 2639 0084 C3F80422 		str	r2, [r3, #516]
 2640 0088 70BD     		pop	{r4, r5, r6, pc}
 2641              	.LVL223:
 2642              	.L255:
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2643              		.loc 1 1641 0
 2644 008a FFF7FEFF 		bl	vTaskSwitchContext
 2645              	.LVL224:
 2646              	.L247:
 2647 008e 70BD     		pop	{r4, r5, r6, pc}
 2648              	.LVL225:
 2649              	.L258:
 2650              		.align	2
 2651              	.L257:
 2652 0090 00000000 		.word	.LANCHOR0
 2653 0094 04ED00E0 		.word	-536810236
 2654              		.cfi_endproc
 2655              	.LFE720:
 2656              		.size	vTaskSuspend, .-vTaskSuspend
 2657              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2658              		.align	2
 2659              		.global	vTaskPlaceOnEventList
 2660              		.thumb
 2661              		.thumb_func
 2662              		.type	vTaskPlaceOnEventList, %function
 2663              	vTaskPlaceOnEventList:
 2664              	.LFB734:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2665              		.loc 1 2832 0
 2666              		.cfi_startproc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 142


 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL226:
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2670              		.loc 1 2833 0
 2671 0000 08B9     		cbnz	r0, .L260
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2672              		.loc 1 2833 0 is_stmt 0 discriminator 1
 2673              		.syntax unified
 2674              	@ 2833 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2675 0002 72B6     		 cpsid i 
 2676              	@ 0 "" 2
 2677              		.thumb
 2678              		.syntax unified
 2679              	.L261:
 2680 0004 FEE7     		b	.L261
 2681              	.L260:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2682              		.loc 1 2832 0 is_stmt 1
 2683 0006 10B5     		push	{r4, lr}
 2684              		.cfi_def_cfa_offset 8
 2685              		.cfi_offset 4, -8
 2686              		.cfi_offset 14, -4
 2687 0008 0C46     		mov	r4, r1
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2688              		.loc 1 2842 0
 2689 000a 054B     		ldr	r3, .L263
 2690 000c D3F80412 		ldr	r1, [r3, #516]
 2691              	.LVL227:
 2692 0010 1831     		adds	r1, r1, #24
 2693 0012 FFF7FEFF 		bl	vListInsert
 2694              	.LVL228:
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2695              		.loc 1 2844 0
 2696 0016 0121     		movs	r1, #1
 2697 0018 2046     		mov	r0, r4
 2698 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2699              	.LVL229:
 2700 001e 10BD     		pop	{r4, pc}
 2701              	.LVL230:
 2702              	.L264:
 2703              		.align	2
 2704              	.L263:
 2705 0020 00000000 		.word	.LANCHOR0
 2706              		.cfi_endproc
 2707              	.LFE734:
 2708              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2709              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2710              		.align	2
 2711              		.global	vTaskPlaceOnUnorderedEventList
 2712              		.thumb
 2713              		.thumb_func
 2714              		.type	vTaskPlaceOnUnorderedEventList, %function
 2715              	vTaskPlaceOnUnorderedEventList:
 2716              	.LFB735:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2717              		.loc 1 2849 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 143


 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 0
 2720              		@ frame_needed = 0, uses_anonymous_args = 0
 2721              	.LVL231:
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2722              		.loc 1 2850 0
 2723 0000 08B9     		cbnz	r0, .L266
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2724              		.loc 1 2850 0 is_stmt 0 discriminator 1
 2725              		.syntax unified
 2726              	@ 2850 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2727 0002 72B6     		 cpsid i 
 2728              	@ 0 "" 2
 2729              		.thumb
 2730              		.syntax unified
 2731              	.L267:
 2732 0004 FEE7     		b	.L267
 2733              	.L266:
 2734 0006 0346     		mov	r3, r0
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2735              		.loc 1 2854 0 is_stmt 1
 2736 0008 0C48     		ldr	r0, .L271
 2737              	.LVL232:
 2738 000a D0F81C02 		ldr	r0, [r0, #540]
 2739 000e 08B9     		cbnz	r0, .L268
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2740              		.loc 1 2854 0 is_stmt 0 discriminator 1
 2741              		.syntax unified
 2742              	@ 2854 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2743 0010 72B6     		 cpsid i 
 2744              	@ 0 "" 2
 2745              		.thumb
 2746              		.syntax unified
 2747              	.L269:
 2748 0012 FEE7     		b	.L269
 2749              	.L268:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2750              		.loc 1 2849 0 is_stmt 1
 2751 0014 10B5     		push	{r4, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 4, -8
 2754              		.cfi_offset 14, -4
 2755 0016 1846     		mov	r0, r3
 2756 0018 1446     		mov	r4, r2
 2757 001a 0B46     		mov	r3, r1
 2758              	.LVL233:
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2759              		.loc 1 2859 0
 2760 001c 074A     		ldr	r2, .L271
 2761              	.LVL234:
 2762 001e D2F80412 		ldr	r1, [r2, #516]
 2763              	.LVL235:
 2764 0022 43F00043 		orr	r3, r3, #-2147483648
 2765              	.LVL236:
 2766 0026 8B61     		str	r3, [r1, #24]
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2767              		.loc 1 2866 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 144


 2768 0028 D2F80412 		ldr	r1, [r2, #516]
 2769 002c 1831     		adds	r1, r1, #24
 2770 002e FFF7FEFF 		bl	vListInsertEnd
 2771              	.LVL237:
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2772              		.loc 1 2868 0
 2773 0032 0121     		movs	r1, #1
 2774 0034 2046     		mov	r0, r4
 2775 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2776              	.LVL238:
 2777 003a 10BD     		pop	{r4, pc}
 2778              	.LVL239:
 2779              	.L272:
 2780              		.align	2
 2781              	.L271:
 2782 003c 00000000 		.word	.LANCHOR0
 2783              		.cfi_endproc
 2784              	.LFE735:
 2785              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2786              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2787              		.align	2
 2788              		.global	vTaskPlaceOnEventListRestricted
 2789              		.thumb
 2790              		.thumb_func
 2791              		.type	vTaskPlaceOnEventListRestricted, %function
 2792              	vTaskPlaceOnEventListRestricted:
 2793              	.LFB736:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2794              		.loc 1 2875 0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 0
 2797              		@ frame_needed = 0, uses_anonymous_args = 0
 2798              	.LVL240:
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2799              		.loc 1 2876 0
 2800 0000 08B9     		cbnz	r0, .L274
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2801              		.loc 1 2876 0 is_stmt 0 discriminator 1
 2802              		.syntax unified
 2803              	@ 2876 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2804 0002 72B6     		 cpsid i 
 2805              	@ 0 "" 2
 2806              		.thumb
 2807              		.syntax unified
 2808              	.L275:
 2809 0004 FEE7     		b	.L275
 2810              	.L274:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2811              		.loc 1 2875 0 is_stmt 1
 2812 0006 38B5     		push	{r3, r4, r5, lr}
 2813              		.cfi_def_cfa_offset 16
 2814              		.cfi_offset 3, -16
 2815              		.cfi_offset 4, -12
 2816              		.cfi_offset 5, -8
 2817              		.cfi_offset 14, -4
 2818 0008 0C46     		mov	r4, r1
 2819 000a 1546     		mov	r5, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 145


2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2820              		.loc 1 2888 0
 2821 000c 064A     		ldr	r2, .L279
 2822              	.LVL241:
 2823 000e D2F80412 		ldr	r1, [r2, #516]
 2824              	.LVL242:
 2825 0012 1831     		adds	r1, r1, #24
 2826 0014 FFF7FEFF 		bl	vListInsertEnd
 2827              	.LVL243:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2828              		.loc 1 2893 0
 2829 0018 0DB1     		cbz	r5, .L276
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2830              		.loc 1 2895 0
 2831 001a 4FF0FF34 		mov	r4, #-1
 2832              	.LVL244:
 2833              	.L276:
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2834              		.loc 1 2899 0
 2835 001e 2946     		mov	r1, r5
 2836 0020 2046     		mov	r0, r4
 2837 0022 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2838              	.LVL245:
 2839 0026 38BD     		pop	{r3, r4, r5, pc}
 2840              	.LVL246:
 2841              	.L280:
 2842              		.align	2
 2843              	.L279:
 2844 0028 00000000 		.word	.LANCHOR0
 2845              		.cfi_endproc
 2846              	.LFE736:
 2847              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 2848              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2849              		.align	2
 2850              		.global	xTaskRemoveFromEventList
 2851              		.thumb
 2852              		.thumb_func
 2853              		.type	xTaskRemoveFromEventList, %function
 2854              	xTaskRemoveFromEventList:
 2855              	.LFB737:
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2856              		.loc 1 2906 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 0, uses_anonymous_args = 0
 2860              	.LVL247:
 2861 0000 38B5     		push	{r3, r4, r5, lr}
 2862              		.cfi_def_cfa_offset 16
 2863              		.cfi_offset 3, -16
 2864              		.cfi_offset 4, -12
 2865              		.cfi_offset 5, -8
 2866              		.cfi_offset 14, -4
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2867              		.loc 1 2923 0
 2868 0002 C368     		ldr	r3, [r0, #12]
 2869 0004 DC68     		ldr	r4, [r3, #12]
 2870              	.LVL248:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 146


2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2871              		.loc 1 2924 0
 2872 0006 0CB9     		cbnz	r4, .L282
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2873              		.loc 1 2924 0 is_stmt 0 discriminator 1
 2874              		.syntax unified
 2875              	@ 2924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2876 0008 72B6     		 cpsid i 
 2877              	@ 0 "" 2
 2878              		.thumb
 2879              		.syntax unified
 2880              	.L283:
 2881 000a FEE7     		b	.L283
 2882              	.L282:
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2883              		.loc 1 2925 0 is_stmt 1
 2884 000c 04F11805 		add	r5, r4, #24
 2885 0010 2846     		mov	r0, r5
 2886              	.LVL249:
 2887 0012 FFF7FEFF 		bl	uxListRemove
 2888              	.LVL250:
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2889              		.loc 1 2927 0
 2890 0016 164B     		ldr	r3, .L290
 2891 0018 D3F81C32 		ldr	r3, [r3, #540]
 2892 001c ABB9     		cbnz	r3, .L284
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2893              		.loc 1 2929 0
 2894 001e 251D     		adds	r5, r4, #4
 2895 0020 2846     		mov	r0, r5
 2896 0022 FFF7FEFF 		bl	uxListRemove
 2897              	.LVL251:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2898              		.loc 1 2930 0
 2899 0026 E36A     		ldr	r3, [r4, #44]
 2900 0028 114A     		ldr	r2, .L290
 2901 002a D2F81022 		ldr	r2, [r2, #528]
 2902 002e 9342     		cmp	r3, r2
 2903 0030 02D9     		bls	.L285
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2904              		.loc 1 2930 0 is_stmt 0 discriminator 1
 2905 0032 0F4A     		ldr	r2, .L290
 2906 0034 C2F81032 		str	r3, [r2, #528]
 2907              	.L285:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2908              		.loc 1 2930 0 discriminator 3
 2909 0038 03EB8303 		add	r3, r3, r3, lsl #2
 2910 003c 9A00     		lsls	r2, r3, #2
 2911 003e 2946     		mov	r1, r5
 2912 0040 0C48     		ldr	r0, .L290+4
 2913 0042 1044     		add	r0, r0, r2
 2914 0044 FFF7FEFF 		bl	vListInsertEnd
 2915              	.LVL252:
 2916 0048 03E0     		b	.L286
 2917              	.L284:
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2918              		.loc 1 2936 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 147


 2919 004a 2946     		mov	r1, r5
 2920 004c 0A48     		ldr	r0, .L290+8
 2921 004e FFF7FEFF 		bl	vListInsertEnd
 2922              	.LVL253:
 2923              	.L286:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2924              		.loc 1 2939 0
 2925 0052 E26A     		ldr	r2, [r4, #44]
 2926 0054 064B     		ldr	r3, .L290
 2927 0056 D3F80432 		ldr	r3, [r3, #516]
 2928 005a DB6A     		ldr	r3, [r3, #44]
 2929 005c 9A42     		cmp	r2, r3
 2930 005e 04D9     		bls	.L288
 2931              	.LVL254:
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2932              		.loc 1 2948 0
 2933 0060 0120     		movs	r0, #1
 2934 0062 034B     		ldr	r3, .L290
 2935 0064 C3F82C02 		str	r0, [r3, #556]
 2936 0068 38BD     		pop	{r3, r4, r5, pc}
 2937              	.LVL255:
 2938              	.L288:
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2939              		.loc 1 2952 0
 2940 006a 0020     		movs	r0, #0
 2941              	.LVL256:
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2942              		.loc 1 2970 0
 2943 006c 38BD     		pop	{r3, r4, r5, pc}
 2944              	.LVL257:
 2945              	.L291:
 2946 006e 00BF     		.align	2
 2947              	.L290:
 2948 0070 00000000 		.word	.LANCHOR0
 2949 0074 30000000 		.word	.LANCHOR0+48
 2950 0078 14000000 		.word	.LANCHOR0+20
 2951              		.cfi_endproc
 2952              	.LFE737:
 2953              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 2954              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 2955              		.align	2
 2956              		.global	xTaskRemoveFromUnorderedEventList
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	xTaskRemoveFromUnorderedEventList, %function
 2960              	xTaskRemoveFromUnorderedEventList:
 2961              	.LFB738:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2962              		.loc 1 2974 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL258:
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2967              		.loc 1 2980 0
 2968 0000 194B     		ldr	r3, .L301
 2969 0002 D3F81C32 		ldr	r3, [r3, #540]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 148


 2970 0006 0BB9     		cbnz	r3, .L293
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2971              		.loc 1 2980 0 is_stmt 0 discriminator 1
 2972              		.syntax unified
 2973              	@ 2980 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2974 0008 72B6     		 cpsid i 
 2975              	@ 0 "" 2
 2976              		.thumb
 2977              		.syntax unified
 2978              	.L294:
 2979 000a FEE7     		b	.L294
 2980              	.L293:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2981              		.loc 1 2974 0 is_stmt 1
 2982 000c 70B5     		push	{r4, r5, r6, lr}
 2983              		.cfi_def_cfa_offset 16
 2984              		.cfi_offset 4, -16
 2985              		.cfi_offset 5, -12
 2986              		.cfi_offset 6, -8
 2987              		.cfi_offset 14, -4
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2988              		.loc 1 2983 0
 2989 000e 41F00043 		orr	r3, r1, #-2147483648
 2990 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2991              		.loc 1 2987 0
 2992 0014 C468     		ldr	r4, [r0, #12]
 2993              	.LVL259:
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2994              		.loc 1 2988 0
 2995 0016 0CB9     		cbnz	r4, .L295
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2996              		.loc 1 2988 0 is_stmt 0 discriminator 1
 2997              		.syntax unified
 2998              	@ 2988 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2999 0018 72B6     		 cpsid i 
 3000              	@ 0 "" 2
 3001              		.thumb
 3002              		.syntax unified
 3003              	.L296:
 3004 001a FEE7     		b	.L296
 3005              	.L295:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3006              		.loc 1 2989 0 is_stmt 1
 3007 001c FFF7FEFF 		bl	uxListRemove
 3008              	.LVL260:
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3009              		.loc 1 2994 0
 3010 0020 261D     		adds	r6, r4, #4
 3011 0022 3046     		mov	r0, r6
 3012 0024 FFF7FEFF 		bl	uxListRemove
 3013              	.LVL261:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3014              		.loc 1 2995 0
 3015 0028 E36A     		ldr	r3, [r4, #44]
 3016 002a 0F4A     		ldr	r2, .L301
 3017 002c D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 149


 3018 0030 9342     		cmp	r3, r2
 3019 0032 02D9     		bls	.L297
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3020              		.loc 1 2995 0 is_stmt 0 discriminator 1
 3021 0034 0C4A     		ldr	r2, .L301
 3022 0036 C2F81032 		str	r3, [r2, #528]
 3023              	.L297:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3024              		.loc 1 2995 0 discriminator 3
 3025 003a 0B4D     		ldr	r5, .L301
 3026 003c 05F13000 		add	r0, r5, #48
 3027 0040 03EB8303 		add	r3, r3, r3, lsl #2
 3028 0044 9A00     		lsls	r2, r3, #2
 3029 0046 3146     		mov	r1, r6
 3030 0048 1044     		add	r0, r0, r2
 3031 004a FFF7FEFF 		bl	vListInsertEnd
 3032              	.LVL262:
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3033              		.loc 1 2997 0 is_stmt 1 discriminator 3
 3034 004e E26A     		ldr	r2, [r4, #44]
 3035 0050 D5F80432 		ldr	r3, [r5, #516]
 3036 0054 DB6A     		ldr	r3, [r3, #44]
 3037 0056 9A42     		cmp	r2, r3
 3038 0058 03D9     		bls	.L299
 3039              	.LVL263:
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3040              		.loc 1 3007 0
 3041 005a 0120     		movs	r0, #1
 3042 005c C5F82C02 		str	r0, [r5, #556]
 3043 0060 70BD     		pop	{r4, r5, r6, pc}
 3044              	.LVL264:
 3045              	.L299:
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3046              		.loc 1 3011 0
 3047 0062 0020     		movs	r0, #0
 3048              	.LVL265:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3049              		.loc 1 3015 0
 3050 0064 70BD     		pop	{r4, r5, r6, pc}
 3051              	.LVL266:
 3052              	.L302:
 3053 0066 00BF     		.align	2
 3054              	.L301:
 3055 0068 00000000 		.word	.LANCHOR0
 3056              		.cfi_endproc
 3057              	.LFE738:
 3058              		.size	xTaskRemoveFromUnorderedEventList, .-xTaskRemoveFromUnorderedEventList
 3059              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3060              		.align	2
 3061              		.global	vTaskSetTimeOutState
 3062              		.thumb
 3063              		.thumb_func
 3064              		.type	vTaskSetTimeOutState, %function
 3065              	vTaskSetTimeOutState:
 3066              	.LFB739:
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3067              		.loc 1 3019 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 150


 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 0
 3070              		@ frame_needed = 0, uses_anonymous_args = 0
 3071              		@ link register save eliminated.
 3072              	.LVL267:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3073              		.loc 1 3020 0
 3074 0000 08B9     		cbnz	r0, .L304
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3075              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3076              		.syntax unified
 3077              	@ 3020 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3078 0002 72B6     		 cpsid i 
 3079              	@ 0 "" 2
 3080              		.thumb
 3081              		.syntax unified
 3082              	.L305:
 3083 0004 FEE7     		b	.L305
 3084              	.L304:
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3085              		.loc 1 3021 0 is_stmt 1
 3086 0006 044A     		ldr	r2, .L306
 3087 0008 D2F82412 		ldr	r1, [r2, #548]
 3088 000c 0160     		str	r1, [r0]
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3089              		.loc 1 3022 0
 3090 000e D2F81422 		ldr	r2, [r2, #532]
 3091 0012 4260     		str	r2, [r0, #4]
 3092 0014 7047     		bx	lr
 3093              	.L307:
 3094 0016 00BF     		.align	2
 3095              	.L306:
 3096 0018 00000000 		.word	.LANCHOR0
 3097              		.cfi_endproc
 3098              	.LFE739:
 3099              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3100              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3101              		.align	2
 3102              		.global	xTaskCheckForTimeOut
 3103              		.thumb
 3104              		.thumb_func
 3105              		.type	xTaskCheckForTimeOut, %function
 3106              	xTaskCheckForTimeOut:
 3107              	.LFB740:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3108              		.loc 1 3027 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 0
 3111              		@ frame_needed = 0, uses_anonymous_args = 0
 3112              	.LVL268:
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3113              		.loc 1 3030 0
 3114 0000 08B9     		cbnz	r0, .L309
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3115              		.loc 1 3030 0 is_stmt 0 discriminator 1
 3116              		.syntax unified
 3117              	@ 3030 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 151


 3118 0002 72B6     		 cpsid i 
 3119              	@ 0 "" 2
 3120              		.thumb
 3121              		.syntax unified
 3122              	.L310:
 3123 0004 FEE7     		b	.L310
 3124              	.L309:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3125              		.loc 1 3027 0 is_stmt 1
 3126 0006 38B5     		push	{r3, r4, r5, lr}
 3127              		.cfi_def_cfa_offset 16
 3128              		.cfi_offset 3, -16
 3129              		.cfi_offset 4, -12
 3130              		.cfi_offset 5, -8
 3131              		.cfi_offset 14, -4
 3132 0008 0446     		mov	r4, r0
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3133              		.loc 1 3031 0
 3134 000a 09B9     		cbnz	r1, .L311
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3135              		.loc 1 3031 0 is_stmt 0 discriminator 1
 3136              		.syntax unified
 3137              	@ 3031 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3138 000c 72B6     		 cpsid i 
 3139              	@ 0 "" 2
 3140              		.thumb
 3141              		.syntax unified
 3142              	.L312:
 3143 000e FEE7     		b	.L312
 3144              	.L311:
 3145 0010 0D46     		mov	r5, r1
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3146              		.loc 1 3033 0 is_stmt 1
 3147 0012 FFF7FEFF 		bl	vPortEnterCritical
 3148              	.LVL269:
 3149              	.LBB40:
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3150              		.loc 1 3036 0
 3151 0016 124B     		ldr	r3, .L319
 3152 0018 D3F81412 		ldr	r1, [r3, #532]
 3153              	.LVL270:
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3154              		.loc 1 3050 0
 3155 001c 2A68     		ldr	r2, [r5]
 3156 001e B2F1FF3F 		cmp	r2, #-1
 3157 0022 13D0     		beq	.L315
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3158              		.loc 1 3060 0
 3159 0024 2068     		ldr	r0, [r4]
 3160 0026 D3F82432 		ldr	r3, [r3, #548]
 3161 002a 9842     		cmp	r0, r3
 3162 002c 02D0     		beq	.L314
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3163              		.loc 1 3060 0 is_stmt 0 discriminator 1
 3164 002e 6368     		ldr	r3, [r4, #4]
 3165 0030 9942     		cmp	r1, r3
 3166 0032 0DD2     		bcs	.L316
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 152


 3167              	.L314:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3168              		.loc 1 3069 0 is_stmt 1
 3169 0034 6368     		ldr	r3, [r4, #4]
 3170 0036 C81A     		subs	r0, r1, r3
 3171 0038 8242     		cmp	r2, r0
 3172 003a 0BD9     		bls	.L317
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3173              		.loc 1 3072 0
 3174 003c 5B1A     		subs	r3, r3, r1
 3175 003e 1344     		add	r3, r3, r2
 3176 0040 2B60     		str	r3, [r5]
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
 3177              		.loc 1 3073 0
 3178 0042 2046     		mov	r0, r4
 3179 0044 FFF7FEFF 		bl	vTaskSetTimeOutState
 3180              	.LVL271:
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3181              		.loc 1 3074 0
 3182 0048 0024     		movs	r4, #0
 3183              	.LVL272:
 3184 004a 04E0     		b	.L313
 3185              	.LVL273:
 3186              	.L315:
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3187              		.loc 1 3055 0
 3188 004c 0024     		movs	r4, #0
 3189              	.LVL274:
 3190 004e 02E0     		b	.L313
 3191              	.LVL275:
 3192              	.L316:
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3193              		.loc 1 3067 0
 3194 0050 0124     		movs	r4, #1
 3195              	.LVL276:
 3196 0052 00E0     		b	.L313
 3197              	.LVL277:
 3198              	.L317:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3199              		.loc 1 3078 0
 3200 0054 0124     		movs	r4, #1
 3201              	.LVL278:
 3202              	.L313:
 3203              	.LBE40:
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3204              		.loc 1 3081 0
 3205 0056 FFF7FEFF 		bl	vPortExitCritical
 3206              	.LVL279:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3207              		.loc 1 3084 0
 3208 005a 2046     		mov	r0, r4
 3209 005c 38BD     		pop	{r3, r4, r5, pc}
 3210              	.LVL280:
 3211              	.L320:
 3212 005e 00BF     		.align	2
 3213              	.L319:
 3214 0060 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 153


 3215              		.cfi_endproc
 3216              	.LFE740:
 3217              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3218              		.section	.text.vTaskMissedYield,"ax",%progbits
 3219              		.align	2
 3220              		.global	vTaskMissedYield
 3221              		.thumb
 3222              		.thumb_func
 3223              		.type	vTaskMissedYield, %function
 3224              	vTaskMissedYield:
 3225              	.LFB741:
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3226              		.loc 1 3088 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              		@ link register save eliminated.
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3231              		.loc 1 3089 0
 3232 0000 0122     		movs	r2, #1
 3233 0002 024B     		ldr	r3, .L322
 3234 0004 C3F82C22 		str	r2, [r3, #556]
 3235 0008 7047     		bx	lr
 3236              	.L323:
 3237 000a 00BF     		.align	2
 3238              	.L322:
 3239 000c 00000000 		.word	.LANCHOR0
 3240              		.cfi_endproc
 3241              	.LFE741:
 3242              		.size	vTaskMissedYield, .-vTaskMissedYield
 3243              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3244              		.align	2
 3245              		.global	vTaskSetThreadLocalStoragePointer
 3246              		.thumb
 3247              		.thumb_func
 3248              		.type	vTaskSetThreadLocalStoragePointer, %function
 3249              	vTaskSetThreadLocalStoragePointer:
 3250              	.LFB743:
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 3251              		.loc 1 3292 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              		@ link register save eliminated.
 3256              	.LVL281:
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3257              		.loc 1 3295 0
 3258 0000 0429     		cmp	r1, #4
 3259 0002 07DC     		bgt	.L324
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3260              		.loc 1 3297 0
 3261 0004 10B9     		cbnz	r0, .L326
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3262              		.loc 1 3297 0 is_stmt 0 discriminator 1
 3263 0006 044B     		ldr	r3, .L327
 3264 0008 D3F80402 		ldr	r0, [r3, #516]
 3265              	.LVL282:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 154


 3266              	.L326:
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3267              		.loc 1 3298 0 is_stmt 1 discriminator 4
 3268 000c 1031     		adds	r1, r1, #16
 3269              	.LVL283:
 3270 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3271              	.LVL284:
 3272 0012 4A60     		str	r2, [r1, #4]
 3273              	.LVL285:
 3274              	.L324:
 3275 0014 7047     		bx	lr
 3276              	.L328:
 3277 0016 00BF     		.align	2
 3278              	.L327:
 3279 0018 00000000 		.word	.LANCHOR0
 3280              		.cfi_endproc
 3281              	.LFE743:
 3282              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3283              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3284              		.align	2
 3285              		.global	pvTaskGetThreadLocalStoragePointer
 3286              		.thumb
 3287              		.thumb_func
 3288              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3289              	pvTaskGetThreadLocalStoragePointer:
 3290              	.LFB744:
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
 3291              		.loc 1 3308 0
 3292              		.cfi_startproc
 3293              		@ args = 0, pretend = 0, frame = 0
 3294              		@ frame_needed = 0, uses_anonymous_args = 0
 3295              		@ link register save eliminated.
 3296              	.LVL286:
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3297              		.loc 1 3312 0
 3298 0000 0429     		cmp	r1, #4
 3299 0002 08DC     		bgt	.L332
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3300              		.loc 1 3314 0
 3301 0004 10B9     		cbnz	r0, .L331
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3302              		.loc 1 3314 0 is_stmt 0 discriminator 1
 3303 0006 054B     		ldr	r3, .L333
 3304 0008 D3F80402 		ldr	r0, [r3, #516]
 3305              	.LVL287:
 3306              	.L331:
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3307              		.loc 1 3315 0 is_stmt 1 discriminator 4
 3308 000c 1031     		adds	r1, r1, #16
 3309              	.LVL288:
 3310 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3311              	.LVL289:
 3312 0012 4068     		ldr	r0, [r0, #4]
 3313              	.LVL290:
 3314 0014 7047     		bx	lr
 3315              	.LVL291:
 3316              	.L332:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 155


3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3317              		.loc 1 3319 0
 3318 0016 0020     		movs	r0, #0
 3319              	.LVL292:
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3320              		.loc 1 3323 0
 3321 0018 7047     		bx	lr
 3322              	.L334:
 3323 001a 00BF     		.align	2
 3324              	.L333:
 3325 001c 00000000 		.word	.LANCHOR0
 3326              		.cfi_endproc
 3327              	.LFE744:
 3328              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3329              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3330              		.align	2
 3331              		.global	xTaskGetCurrentTaskHandle
 3332              		.thumb
 3333              		.thumb_func
 3334              		.type	xTaskGetCurrentTaskHandle, %function
 3335              	xTaskGetCurrentTaskHandle:
 3336              	.LFB749:
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 3337              		.loc 1 3673 0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 3341              		@ link register save eliminated.
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3342              		.loc 1 3679 0
 3343 0000 014B     		ldr	r3, .L336
 3344 0002 D3F80402 		ldr	r0, [r3, #516]
 3345              	.LVL293:
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3346              		.loc 1 3682 0
 3347 0006 7047     		bx	lr
 3348              	.L337:
 3349              		.align	2
 3350              	.L336:
 3351 0008 00000000 		.word	.LANCHOR0
 3352              		.cfi_endproc
 3353              	.LFE749:
 3354              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3355              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3356              		.align	2
 3357              		.global	xTaskGetSchedulerState
 3358              		.thumb
 3359              		.thumb_func
 3360              		.type	xTaskGetSchedulerState, %function
 3361              	xTaskGetSchedulerState:
 3362              	.LFB750:
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3363              		.loc 1 3690 0
 3364              		.cfi_startproc
 3365              		@ args = 0, pretend = 0, frame = 0
 3366              		@ frame_needed = 0, uses_anonymous_args = 0
 3367              		@ link register save eliminated.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 156


3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3368              		.loc 1 3693 0
 3369 0000 064B     		ldr	r3, .L342
 3370 0002 D3F80832 		ldr	r3, [r3, #520]
 3371 0006 2BB1     		cbz	r3, .L340
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3372              		.loc 1 3699 0
 3373 0008 044B     		ldr	r3, .L342
 3374 000a D3F81C32 		ldr	r3, [r3, #540]
 3375 000e 1BB9     		cbnz	r3, .L341
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3376              		.loc 1 3701 0
 3377 0010 0220     		movs	r0, #2
 3378 0012 7047     		bx	lr
 3379              	.L340:
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3380              		.loc 1 3695 0
 3381 0014 0120     		movs	r0, #1
 3382 0016 7047     		bx	lr
 3383              	.L341:
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3384              		.loc 1 3705 0
 3385 0018 0020     		movs	r0, #0
 3386              	.LVL294:
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3387              		.loc 1 3710 0
 3388 001a 7047     		bx	lr
 3389              	.L343:
 3390              		.align	2
 3391              	.L342:
 3392 001c 00000000 		.word	.LANCHOR0
 3393              		.cfi_endproc
 3394              	.LFE750:
 3395              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3396              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3397              		.align	2
 3398              		.global	uxTaskResetEventItemValue
 3399              		.thumb
 3400              		.thumb_func
 3401              		.type	uxTaskResetEventItemValue, %function
 3402              	uxTaskResetEventItemValue:
 3403              	.LFB751:
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
 3404              		.loc 1 4174 0
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 0
 3407              		@ frame_needed = 0, uses_anonymous_args = 0
 3408              		@ link register save eliminated.
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3409              		.loc 1 4177 0
 3410 0000 064B     		ldr	r3, .L345
 3411 0002 D3F80422 		ldr	r2, [r3, #516]
 3412 0006 9069     		ldr	r0, [r2, #24]
 3413              	.LVL295:
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3414              		.loc 1 4181 0
 3415 0008 D3F80422 		ldr	r2, [r3, #516]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 157


 3416 000c D3F80432 		ldr	r3, [r3, #516]
 3417 0010 DB6A     		ldr	r3, [r3, #44]
 3418 0012 C3F11403 		rsb	r3, r3, #20
 3419 0016 9361     		str	r3, [r2, #24]
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3420              		.loc 1 4184 0
 3421 0018 7047     		bx	lr
 3422              	.L346:
 3423 001a 00BF     		.align	2
 3424              	.L345:
 3425 001c 00000000 		.word	.LANCHOR0
 3426              		.cfi_endproc
 3427              	.LFE751:
 3428              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3429              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3430              		.align	2
 3431              		.global	ulTaskNotifyTake
 3432              		.thumb
 3433              		.thumb_func
 3434              		.type	ulTaskNotifyTake, %function
 3435              	ulTaskNotifyTake:
 3436              	.LFB752:
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
 3437              		.loc 1 4207 0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 0
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 3441              	.LVL296:
 3442 0000 38B5     		push	{r3, r4, r5, lr}
 3443              		.cfi_def_cfa_offset 16
 3444              		.cfi_offset 3, -16
 3445              		.cfi_offset 4, -12
 3446              		.cfi_offset 5, -8
 3447              		.cfi_offset 14, -4
 3448 0002 0546     		mov	r5, r0
 3449 0004 0C46     		mov	r4, r1
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3450              		.loc 1 4210 0
 3451 0006 FFF7FEFF 		bl	vPortEnterCritical
 3452              	.LVL297:
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3453              		.loc 1 4213 0
 3454 000a 1B4B     		ldr	r3, .L352
 3455 000c D3F80432 		ldr	r3, [r3, #516]
 3456 0010 9B6D     		ldr	r3, [r3, #88]
 3457 0012 93B9     		cbnz	r3, .L348
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3458              		.loc 1 4216 0
 3459 0014 184B     		ldr	r3, .L352
 3460 0016 D3F80432 		ldr	r3, [r3, #516]
 3461 001a 0122     		movs	r2, #1
 3462 001c 83F85C20 		strb	r2, [r3, #92]
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3463              		.loc 1 4218 0
 3464 0020 5CB1     		cbz	r4, .L348
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3465              		.loc 1 4220 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 158


 3466 0022 1146     		mov	r1, r2
 3467 0024 2046     		mov	r0, r4
 3468 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3469              	.LVL298:
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3470              		.loc 1 4227 0
 3471 002a 4FF08052 		mov	r2, #268435456
 3472 002e 134B     		ldr	r3, .L352+4
 3473 0030 1A60     		str	r2, [r3]
 3474              		.syntax unified
 3475              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3476 0032 BFF34F8F 		dsb
 3477              	@ 0 "" 2
 3478              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3479 0036 BFF36F8F 		isb
 3480              	@ 0 "" 2
 3481              		.thumb
 3482              		.syntax unified
 3483              	.L348:
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3484              		.loc 1 4239 0
 3485 003a FFF7FEFF 		bl	vPortExitCritical
 3486              	.LVL299:
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3487              		.loc 1 4241 0
 3488 003e FFF7FEFF 		bl	vPortEnterCritical
 3489              	.LVL300:
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3490              		.loc 1 4244 0
 3491 0042 0D4B     		ldr	r3, .L352
 3492 0044 D3F80432 		ldr	r3, [r3, #516]
 3493 0048 9C6D     		ldr	r4, [r3, #88]
 3494              	.LVL301:
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3495              		.loc 1 4246 0
 3496 004a 5CB1     		cbz	r4, .L349
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3497              		.loc 1 4248 0
 3498 004c 2DB1     		cbz	r5, .L350
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3499              		.loc 1 4250 0
 3500 004e 0A4B     		ldr	r3, .L352
 3501 0050 D3F80432 		ldr	r3, [r3, #516]
 3502 0054 0022     		movs	r2, #0
 3503 0056 9A65     		str	r2, [r3, #88]
 3504 0058 04E0     		b	.L349
 3505              	.L350:
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3506              		.loc 1 4254 0
 3507 005a 074B     		ldr	r3, .L352
 3508 005c D3F80432 		ldr	r3, [r3, #516]
 3509 0060 621E     		subs	r2, r4, #1
 3510 0062 9A65     		str	r2, [r3, #88]
 3511              	.L349:
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3512              		.loc 1 4262 0
 3513 0064 044B     		ldr	r3, .L352
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 159


 3514 0066 D3F80432 		ldr	r3, [r3, #516]
 3515 006a 0022     		movs	r2, #0
 3516 006c 83F85C20 		strb	r2, [r3, #92]
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3517              		.loc 1 4264 0
 3518 0070 FFF7FEFF 		bl	vPortExitCritical
 3519              	.LVL302:
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3520              		.loc 1 4267 0
 3521 0074 2046     		mov	r0, r4
 3522 0076 38BD     		pop	{r3, r4, r5, pc}
 3523              	.LVL303:
 3524              	.L353:
 3525              		.align	2
 3526              	.L352:
 3527 0078 00000000 		.word	.LANCHOR0
 3528 007c 04ED00E0 		.word	-536810236
 3529              		.cfi_endproc
 3530              	.LFE752:
 3531              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3532              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3533              		.align	2
 3534              		.global	xTaskNotifyWait
 3535              		.thumb
 3536              		.thumb_func
 3537              		.type	xTaskNotifyWait, %function
 3538              	xTaskNotifyWait:
 3539              	.LFB753:
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3540              		.loc 1 4275 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 0
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              	.LVL304:
 3545 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3546              		.cfi_def_cfa_offset 24
 3547              		.cfi_offset 3, -24
 3548              		.cfi_offset 4, -20
 3549              		.cfi_offset 5, -16
 3550              		.cfi_offset 6, -12
 3551              		.cfi_offset 7, -8
 3552              		.cfi_offset 14, -4
 3553 0002 0746     		mov	r7, r0
 3554 0004 0C46     		mov	r4, r1
 3555 0006 1546     		mov	r5, r2
 3556 0008 1E46     		mov	r6, r3
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3557              		.loc 1 4278 0
 3558 000a FFF7FEFF 		bl	vPortEnterCritical
 3559              	.LVL305:
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3560              		.loc 1 4281 0
 3561 000e 234B     		ldr	r3, .L360
 3562 0010 D3F80432 		ldr	r3, [r3, #516]
 3563 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3564 0018 DBB2     		uxtb	r3, r3
 3565 001a 022B     		cmp	r3, #2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 160


 3566 001c 18D0     		beq	.L355
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3567              		.loc 1 4286 0
 3568 001e 1F4B     		ldr	r3, .L360
 3569 0020 D3F80422 		ldr	r2, [r3, #516]
 3570 0024 906D     		ldr	r0, [r2, #88]
 3571 0026 20EA0700 		bic	r0, r0, r7
 3572 002a 9065     		str	r0, [r2, #88]
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3573              		.loc 1 4289 0
 3574 002c D3F80432 		ldr	r3, [r3, #516]
 3575 0030 0122     		movs	r2, #1
 3576 0032 83F85C20 		strb	r2, [r3, #92]
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3577              		.loc 1 4291 0
 3578 0036 5EB1     		cbz	r6, .L355
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3579              		.loc 1 4293 0
 3580 0038 1146     		mov	r1, r2
 3581 003a 3046     		mov	r0, r6
 3582 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3583              	.LVL306:
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3584              		.loc 1 4300 0
 3585 0040 4FF08052 		mov	r2, #268435456
 3586 0044 164B     		ldr	r3, .L360+4
 3587 0046 1A60     		str	r2, [r3]
 3588              		.syntax unified
 3589              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3590 0048 BFF34F8F 		dsb
 3591              	@ 0 "" 2
 3592              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3593 004c BFF36F8F 		isb
 3594              	@ 0 "" 2
 3595              		.thumb
 3596              		.syntax unified
 3597              	.L355:
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3598              		.loc 1 4312 0
 3599 0050 FFF7FEFF 		bl	vPortExitCritical
 3600              	.LVL307:
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3601              		.loc 1 4314 0
 3602 0054 FFF7FEFF 		bl	vPortEnterCritical
 3603              	.LVL308:
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3604              		.loc 1 4318 0
 3605 0058 25B1     		cbz	r5, .L356
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3606              		.loc 1 4322 0
 3607 005a 104B     		ldr	r3, .L360
 3608 005c D3F80432 		ldr	r3, [r3, #516]
 3609 0060 9B6D     		ldr	r3, [r3, #88]
 3610 0062 2B60     		str	r3, [r5]
 3611              	.L356:
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3612              		.loc 1 4329 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 161


 3613 0064 0D4B     		ldr	r3, .L360
 3614 0066 D3F80432 		ldr	r3, [r3, #516]
 3615 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3616 006e DBB2     		uxtb	r3, r3
 3617 0070 012B     		cmp	r3, #1
 3618 0072 08D0     		beq	.L358
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
 3619              		.loc 1 4338 0
 3620 0074 094B     		ldr	r3, .L360
 3621 0076 D3F80432 		ldr	r3, [r3, #516]
 3622 007a 996D     		ldr	r1, [r3, #88]
 3623 007c 21EA0401 		bic	r1, r1, r4
 3624 0080 9965     		str	r1, [r3, #88]
 3625              	.LVL309:
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3626              		.loc 1 4339 0
 3627 0082 0124     		movs	r4, #1
 3628              	.LVL310:
 3629 0084 00E0     		b	.L357
 3630              	.LVL311:
 3631              	.L358:
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3632              		.loc 1 4332 0
 3633 0086 0024     		movs	r4, #0
 3634              	.LVL312:
 3635              	.L357:
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3636              		.loc 1 4342 0
 3637 0088 044B     		ldr	r3, .L360
 3638 008a D3F80432 		ldr	r3, [r3, #516]
 3639 008e 0022     		movs	r2, #0
 3640 0090 83F85C20 		strb	r2, [r3, #92]
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3641              		.loc 1 4344 0
 3642 0094 FFF7FEFF 		bl	vPortExitCritical
 3643              	.LVL313:
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3644              		.loc 1 4347 0
 3645 0098 2046     		mov	r0, r4
 3646 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3647              	.LVL314:
 3648              	.L361:
 3649              		.align	2
 3650              	.L360:
 3651 009c 00000000 		.word	.LANCHOR0
 3652 00a0 04ED00E0 		.word	-536810236
 3653              		.cfi_endproc
 3654              	.LFE753:
 3655              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3656              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3657              		.align	2
 3658              		.global	xTaskGenericNotify
 3659              		.thumb
 3660              		.thumb_func
 3661              		.type	xTaskGenericNotify, %function
 3662              	xTaskGenericNotify:
 3663              	.LFB754:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 162


4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3664              		.loc 1 4355 0
 3665              		.cfi_startproc
 3666              		@ args = 0, pretend = 0, frame = 0
 3667              		@ frame_needed = 0, uses_anonymous_args = 0
 3668              	.LVL315:
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3669              		.loc 1 4360 0
 3670 0000 08B9     		cbnz	r0, .L363
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3671              		.loc 1 4360 0 is_stmt 0 discriminator 1
 3672              		.syntax unified
 3673              	@ 4360 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3674 0002 72B6     		 cpsid i 
 3675              	@ 0 "" 2
 3676              		.thumb
 3677              		.syntax unified
 3678              	.L364:
 3679 0004 FEE7     		b	.L364
 3680              	.L363:
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3681              		.loc 1 4355 0 is_stmt 1
 3682 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3683              		.cfi_def_cfa_offset 24
 3684              		.cfi_offset 3, -24
 3685              		.cfi_offset 4, -20
 3686              		.cfi_offset 5, -16
 3687              		.cfi_offset 6, -12
 3688              		.cfi_offset 7, -8
 3689              		.cfi_offset 14, -4
 3690 0008 0446     		mov	r4, r0
 3691 000a 1F46     		mov	r7, r3
 3692 000c 1546     		mov	r5, r2
 3693 000e 0E46     		mov	r6, r1
 3694              	.LVL316:
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3695              		.loc 1 4363 0
 3696 0010 FFF7FEFF 		bl	vPortEnterCritical
 3697              	.LVL317:
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3698              		.loc 1 4365 0
 3699 0014 0FB1     		cbz	r7, .L365
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3700              		.loc 1 4367 0
 3701 0016 A36D     		ldr	r3, [r4, #88]
 3702 0018 3B60     		str	r3, [r7]
 3703              	.L365:
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3704              		.loc 1 4370 0
 3705 001a 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3706 001e DBB2     		uxtb	r3, r3
 3707              	.LVL318:
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3708              		.loc 1 4372 0
 3709 0020 0222     		movs	r2, #2
 3710 0022 84F85C20 		strb	r2, [r4, #92]
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 163


 3711              		.loc 1 4374 0
 3712 0026 6A1E     		subs	r2, r5, #1
 3713 0028 032A     		cmp	r2, #3
 3714 002a 15D8     		bhi	.L376
 3715 002c DFE802F0 		tbb	[pc, r2]
 3716              	.L368:
 3717 0030 02       		.byte	(.L367-.L368)/2
 3718 0031 07       		.byte	(.L369-.L368)/2
 3719 0032 0C       		.byte	(.L370-.L368)/2
 3720 0033 0F       		.byte	(.L371-.L368)/2
 3721              		.p2align 1
 3722              	.L367:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3723              		.loc 1 4377 0
 3724 0034 A26D     		ldr	r2, [r4, #88]
 3725 0036 1643     		orrs	r6, r6, r2
 3726              	.LVL319:
 3727 0038 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3728              		.loc 1 4357 0
 3729 003a 0125     		movs	r5, #1
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3730              		.loc 1 4378 0
 3731 003c 0FE0     		b	.L366
 3732              	.LVL320:
 3733              	.L369:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3734              		.loc 1 4381 0
 3735 003e A26D     		ldr	r2, [r4, #88]
 3736 0040 0132     		adds	r2, r2, #1
 3737 0042 A265     		str	r2, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3738              		.loc 1 4357 0
 3739 0044 0125     		movs	r5, #1
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3740              		.loc 1 4382 0
 3741 0046 0AE0     		b	.L366
 3742              	.L370:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3743              		.loc 1 4385 0
 3744 0048 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3745              		.loc 1 4357 0
 3746 004a 0125     		movs	r5, #1
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3747              		.loc 1 4386 0
 3748 004c 07E0     		b	.L366
 3749              	.L371:
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3750              		.loc 1 4389 0
 3751 004e 022B     		cmp	r3, #2
 3752 0050 04D0     		beq	.L377
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3753              		.loc 1 4391 0
 3754 0052 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3755              		.loc 1 4357 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 164


 3756 0054 0125     		movs	r5, #1
 3757 0056 02E0     		b	.L366
 3758              	.L376:
 3759 0058 0125     		movs	r5, #1
 3760 005a 00E0     		b	.L366
 3761              	.L377:
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3762              		.loc 1 4396 0
 3763 005c 0025     		movs	r5, #0
 3764              	.LVL321:
 3765              	.L366:
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3766              		.loc 1 4410 0
 3767 005e 012B     		cmp	r3, #1
 3768 0060 27D1     		bne	.L372
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 3769              		.loc 1 4412 0
 3770 0062 261D     		adds	r6, r4, #4
 3771 0064 3046     		mov	r0, r6
 3772 0066 FFF7FEFF 		bl	uxListRemove
 3773              	.LVL322:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3774              		.loc 1 4413 0
 3775 006a E36A     		ldr	r3, [r4, #44]
 3776 006c 134A     		ldr	r2, .L379
 3777 006e D2F81022 		ldr	r2, [r2, #528]
 3778 0072 9342     		cmp	r3, r2
 3779 0074 02D9     		bls	.L373
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3780              		.loc 1 4413 0 is_stmt 0 discriminator 1
 3781 0076 114A     		ldr	r2, .L379
 3782 0078 C2F81032 		str	r3, [r2, #528]
 3783              	.L373:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3784              		.loc 1 4413 0 discriminator 3
 3785 007c 03EB8303 		add	r3, r3, r3, lsl #2
 3786 0080 9A00     		lsls	r2, r3, #2
 3787 0082 3146     		mov	r1, r6
 3788 0084 0E48     		ldr	r0, .L379+4
 3789 0086 1044     		add	r0, r0, r2
 3790 0088 FFF7FEFF 		bl	vListInsertEnd
 3791              	.LVL323:
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3792              		.loc 1 4416 0 is_stmt 1 discriminator 3
 3793 008c A36A     		ldr	r3, [r4, #40]
 3794 008e 0BB1     		cbz	r3, .L374
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3795              		.loc 1 4416 0 is_stmt 0 discriminator 1
 3796              		.syntax unified
 3797              	@ 4416 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3798 0090 72B6     		 cpsid i 
 3799              	@ 0 "" 2
 3800              		.thumb
 3801              		.syntax unified
 3802              	.L375:
 3803 0092 FEE7     		b	.L375
 3804              	.L374:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 165


4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3805              		.loc 1 4434 0 is_stmt 1
 3806 0094 E26A     		ldr	r2, [r4, #44]
 3807 0096 094B     		ldr	r3, .L379
 3808 0098 D3F80432 		ldr	r3, [r3, #516]
 3809 009c DB6A     		ldr	r3, [r3, #44]
 3810 009e 9A42     		cmp	r2, r3
 3811 00a0 07D9     		bls	.L372
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3812              		.loc 1 4438 0
 3813 00a2 4FF08052 		mov	r2, #268435456
 3814 00a6 074B     		ldr	r3, .L379+8
 3815 00a8 1A60     		str	r2, [r3]
 3816              		.syntax unified
 3817              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3818 00aa BFF34F8F 		dsb
 3819              	@ 0 "" 2
 3820              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3821 00ae BFF36F8F 		isb
 3822              	@ 0 "" 2
 3823              		.thumb
 3824              		.syntax unified
 3825              	.L372:
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3826              		.loc 1 4450 0
 3827 00b2 FFF7FEFF 		bl	vPortExitCritical
 3828              	.LVL324:
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3829              		.loc 1 4453 0
 3830 00b6 2846     		mov	r0, r5
 3831 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3832              	.LVL325:
 3833              	.L380:
 3834 00ba 00BF     		.align	2
 3835              	.L379:
 3836 00bc 00000000 		.word	.LANCHOR0
 3837 00c0 30000000 		.word	.LANCHOR0+48
 3838 00c4 04ED00E0 		.word	-536810236
 3839              		.cfi_endproc
 3840              	.LFE754:
 3841              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 3842              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 3843              		.align	2
 3844              		.global	xTaskGenericNotifyFromISR
 3845              		.thumb
 3846              		.thumb_func
 3847              		.type	xTaskGenericNotifyFromISR, %function
 3848              	xTaskGenericNotifyFromISR:
 3849              	.LFB755:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3850              		.loc 1 4461 0
 3851              		.cfi_startproc
 3852              		@ args = 4, pretend = 0, frame = 0
 3853              		@ frame_needed = 0, uses_anonymous_args = 0
 3854              	.LVL326:
 3855 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3856              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 166


 3857              		.cfi_offset 3, -32
 3858              		.cfi_offset 4, -28
 3859              		.cfi_offset 5, -24
 3860              		.cfi_offset 6, -20
 3861              		.cfi_offset 7, -16
 3862              		.cfi_offset 8, -12
 3863              		.cfi_offset 9, -8
 3864              		.cfi_offset 14, -4
 3865 0004 089E     		ldr	r6, [sp, #32]
 3866              	.LVL327:
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3867              		.loc 1 4467 0
 3868 0006 08B9     		cbnz	r0, .L382
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3869              		.loc 1 4467 0 is_stmt 0 discriminator 1
 3870              		.syntax unified
 3871              	@ 4467 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3872 0008 72B6     		 cpsid i 
 3873              	@ 0 "" 2
 3874              		.thumb
 3875              		.syntax unified
 3876              	.L383:
 3877 000a FEE7     		b	.L383
 3878              	.L382:
 3879 000c 0446     		mov	r4, r0
 3880 000e 9946     		mov	r9, r3
 3881 0010 1546     		mov	r5, r2
 3882 0012 8846     		mov	r8, r1
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3883              		.loc 1 4485 0 is_stmt 1
 3884 0014 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3885              	.LVL328:
 3886              	.LBB41:
 3887              	.LBB42:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 3888              		.loc 2 215 0
 3889              		.syntax unified
 3890              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 3891 0018 EFF31187 		    mrs r7, basepri                                            
 3892 001c 4FF02F03 	    mov r3, #47                                                 
 3893 0020 83F31188 	    msr basepri, r3                                            
 3894 0024 BFF36F8F 	    isb                                                        
 3895 0028 BFF34F8F 	    dsb                                                        
 3896              	
 3897              	@ 0 "" 2
 3898              		.thumb
 3899              		.syntax unified
 3900              	.LBE42:
 3901              	.LBE41:
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3902              		.loc 1 4491 0
 3903 002c B9F1000F 		cmp	r9, #0
 3904 0030 02D0     		beq	.L384
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3905              		.loc 1 4493 0
 3906 0032 A36D     		ldr	r3, [r4, #88]
 3907 0034 C9F80030 		str	r3, [r9]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 167


 3908              	.L384:
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 3909              		.loc 1 4496 0
 3910 0038 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3911 003c DBB2     		uxtb	r3, r3
 3912              	.LVL329:
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3913              		.loc 1 4497 0
 3914 003e 0222     		movs	r2, #2
 3915 0040 84F85C20 		strb	r2, [r4, #92]
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3916              		.loc 1 4499 0
 3917 0044 6A1E     		subs	r2, r5, #1
 3918 0046 032A     		cmp	r2, #3
 3919 0048 18D8     		bhi	.L398
 3920 004a DFE802F0 		tbb	[pc, r2]
 3921              	.L387:
 3922 004e 02       		.byte	(.L386-.L387)/2
 3923 004f 08       		.byte	(.L388-.L387)/2
 3924 0050 0D       		.byte	(.L389-.L387)/2
 3925 0051 11       		.byte	(.L390-.L387)/2
 3926              		.p2align 1
 3927              	.L386:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3928              		.loc 1 4502 0
 3929 0052 A26D     		ldr	r2, [r4, #88]
 3930 0054 42EA0802 		orr	r2, r2, r8
 3931 0058 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3932              		.loc 1 4464 0
 3933 005a 0125     		movs	r5, #1
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3934              		.loc 1 4503 0
 3935 005c 11E0     		b	.L385
 3936              	.L388:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3937              		.loc 1 4506 0
 3938 005e A26D     		ldr	r2, [r4, #88]
 3939 0060 0132     		adds	r2, r2, #1
 3940 0062 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3941              		.loc 1 4464 0
 3942 0064 0125     		movs	r5, #1
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3943              		.loc 1 4507 0
 3944 0066 0CE0     		b	.L385
 3945              	.L389:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3946              		.loc 1 4510 0
 3947 0068 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3948              		.loc 1 4464 0
 3949 006c 0125     		movs	r5, #1
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3950              		.loc 1 4511 0
 3951 006e 08E0     		b	.L385
 3952              	.L390:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 168


4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3953              		.loc 1 4514 0
 3954 0070 022B     		cmp	r3, #2
 3955 0072 05D0     		beq	.L399
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3956              		.loc 1 4516 0
 3957 0074 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3958              		.loc 1 4464 0
 3959 0078 0125     		movs	r5, #1
 3960 007a 02E0     		b	.L385
 3961              	.L398:
 3962 007c 0125     		movs	r5, #1
 3963 007e 00E0     		b	.L385
 3964              	.L399:
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3965              		.loc 1 4521 0
 3966 0080 0025     		movs	r5, #0
 3967              	.L385:
 3968              	.LVL330:
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3969              		.loc 1 4535 0
 3970 0082 012B     		cmp	r3, #1
 3971 0084 32D1     		bne	.L391
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3972              		.loc 1 4538 0
 3973 0086 A36A     		ldr	r3, [r4, #40]
 3974              	.LVL331:
 3975 0088 0BB1     		cbz	r3, .L392
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3976              		.loc 1 4538 0 is_stmt 0 discriminator 1
 3977              		.syntax unified
 3978              	@ 4538 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3979 008a 72B6     		 cpsid i 
 3980              	@ 0 "" 2
 3981              		.thumb
 3982              		.syntax unified
 3983              	.L393:
 3984 008c FEE7     		b	.L393
 3985              	.L392:
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3986              		.loc 1 4540 0 is_stmt 1
 3987 008e 1A4B     		ldr	r3, .L401
 3988 0090 D3F81C32 		ldr	r3, [r3, #540]
 3989 0094 B3B9     		cbnz	r3, .L394
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3990              		.loc 1 4542 0
 3991 0096 04F10408 		add	r8, r4, #4
 3992              	.LVL332:
 3993 009a 4046     		mov	r0, r8
 3994 009c FFF7FEFF 		bl	uxListRemove
 3995              	.LVL333:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3996              		.loc 1 4543 0
 3997 00a0 E36A     		ldr	r3, [r4, #44]
 3998 00a2 154A     		ldr	r2, .L401
 3999 00a4 D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 169


 4000 00a8 9342     		cmp	r3, r2
 4001 00aa 02D9     		bls	.L395
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4002              		.loc 1 4543 0 is_stmt 0 discriminator 1
 4003 00ac 124A     		ldr	r2, .L401
 4004 00ae C2F81032 		str	r3, [r2, #528]
 4005              	.L395:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4006              		.loc 1 4543 0 discriminator 3
 4007 00b2 03EB8303 		add	r3, r3, r3, lsl #2
 4008 00b6 9A00     		lsls	r2, r3, #2
 4009 00b8 4146     		mov	r1, r8
 4010 00ba 1048     		ldr	r0, .L401+4
 4011 00bc 1044     		add	r0, r0, r2
 4012 00be FFF7FEFF 		bl	vListInsertEnd
 4013              	.LVL334:
 4014 00c2 04E0     		b	.L396
 4015              	.LVL335:
 4016              	.L394:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4017              		.loc 1 4549 0 is_stmt 1
 4018 00c4 04F11801 		add	r1, r4, #24
 4019 00c8 0D48     		ldr	r0, .L401+8
 4020 00ca FFF7FEFF 		bl	vListInsertEnd
 4021              	.LVL336:
 4022              	.L396:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4023              		.loc 1 4552 0
 4024 00ce E26A     		ldr	r2, [r4, #44]
 4025 00d0 094B     		ldr	r3, .L401
 4026 00d2 D3F80432 		ldr	r3, [r3, #516]
 4027 00d6 DB6A     		ldr	r3, [r3, #44]
 4028 00d8 9A42     		cmp	r2, r3
 4029 00da 07D9     		bls	.L391
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4030              		.loc 1 4556 0
 4031 00dc 16B1     		cbz	r6, .L397
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4032              		.loc 1 4558 0
 4033 00de 0123     		movs	r3, #1
 4034 00e0 3360     		str	r3, [r6]
 4035 00e2 03E0     		b	.L391
 4036              	.L397:
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4037              		.loc 1 4565 0
 4038 00e4 0122     		movs	r2, #1
 4039 00e6 044B     		ldr	r3, .L401
 4040 00e8 C3F82C22 		str	r2, [r3, #556]
 4041              	.L391:
 4042              	.LVL337:
 4043              	.LBB43:
 4044              	.LBB44:
 4045              		.loc 2 233 0
 4046              		.syntax unified
 4047              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4048 00ec 87F31188 		    msr basepri, r7  
 4049              	@ 0 "" 2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 170


 4050              	.LVL338:
 4051              		.thumb
 4052              		.syntax unified
 4053              	.LBE44:
 4054              	.LBE43:
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4055              		.loc 1 4577 0
 4056 00f0 2846     		mov	r0, r5
 4057 00f2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4058              	.LVL339:
 4059              	.L402:
 4060 00f6 00BF     		.align	2
 4061              	.L401:
 4062 00f8 00000000 		.word	.LANCHOR0
 4063 00fc 30000000 		.word	.LANCHOR0+48
 4064 0100 14000000 		.word	.LANCHOR0+20
 4065              		.cfi_endproc
 4066              	.LFE755:
 4067              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4068              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4069              		.align	2
 4070              		.global	vTaskNotifyGiveFromISR
 4071              		.thumb
 4072              		.thumb_func
 4073              		.type	vTaskNotifyGiveFromISR, %function
 4074              	vTaskNotifyGiveFromISR:
 4075              	.LFB756:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4076              		.loc 1 4585 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 0
 4079              		@ frame_needed = 0, uses_anonymous_args = 0
 4080              	.LVL340:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4081              		.loc 1 4590 0
 4082 0000 08B9     		cbnz	r0, .L404
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4083              		.loc 1 4590 0 is_stmt 0 discriminator 1
 4084              		.syntax unified
 4085              	@ 4590 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4086 0002 72B6     		 cpsid i 
 4087              	@ 0 "" 2
 4088              		.thumb
 4089              		.syntax unified
 4090              	.L405:
 4091 0004 FEE7     		b	.L405
 4092              	.L404:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4093              		.loc 1 4585 0 is_stmt 1
 4094 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4095              		.cfi_def_cfa_offset 24
 4096              		.cfi_offset 3, -24
 4097              		.cfi_offset 4, -20
 4098              		.cfi_offset 5, -16
 4099              		.cfi_offset 6, -12
 4100              		.cfi_offset 7, -8
 4101              		.cfi_offset 14, -4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 171


 4102 0008 0446     		mov	r4, r0
 4103 000a 0D46     		mov	r5, r1
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4104              		.loc 1 4608 0
 4105 000c FFF7FEFF 		bl	vPortValidateInterruptPriority
 4106              	.LVL341:
 4107              	.LBB45:
 4108              	.LBB46:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 4109              		.loc 2 215 0
 4110              		.syntax unified
 4111              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4112 0010 EFF31186 		    mrs r6, basepri                                            
 4113 0014 4FF02F03 	    mov r3, #47                                                 
 4114 0018 83F31188 	    msr basepri, r3                                            
 4115 001c BFF36F8F 	    isb                                                        
 4116 0020 BFF34F8F 	    dsb                                                        
 4117              	
 4118              	@ 0 "" 2
 4119              		.thumb
 4120              		.syntax unified
 4121              	.LBE46:
 4122              	.LBE45:
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4123              		.loc 1 4614 0
 4124 0024 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4125 0028 DBB2     		uxtb	r3, r3
 4126              	.LVL342:
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4127              		.loc 1 4615 0
 4128 002a 0222     		movs	r2, #2
 4129 002c 84F85C20 		strb	r2, [r4, #92]
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4130              		.loc 1 4619 0
 4131 0030 A26D     		ldr	r2, [r4, #88]
 4132 0032 0132     		adds	r2, r2, #1
 4133 0034 A265     		str	r2, [r4, #88]
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4134              		.loc 1 4625 0
 4135 0036 012B     		cmp	r3, #1
 4136 0038 31D1     		bne	.L406
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4137              		.loc 1 4628 0
 4138 003a A36A     		ldr	r3, [r4, #40]
 4139              	.LVL343:
 4140 003c 0BB1     		cbz	r3, .L407
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4141              		.loc 1 4628 0 is_stmt 0 discriminator 1
 4142              		.syntax unified
 4143              	@ 4628 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4144 003e 72B6     		 cpsid i 
 4145              	@ 0 "" 2
 4146              		.thumb
 4147              		.syntax unified
 4148              	.L408:
 4149 0040 FEE7     		b	.L408
 4150              	.L407:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 172


4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4151              		.loc 1 4630 0 is_stmt 1
 4152 0042 184B     		ldr	r3, .L414
 4153 0044 D3F81C32 		ldr	r3, [r3, #540]
 4154 0048 ABB9     		cbnz	r3, .L409
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4155              		.loc 1 4632 0
 4156 004a 271D     		adds	r7, r4, #4
 4157 004c 3846     		mov	r0, r7
 4158 004e FFF7FEFF 		bl	uxListRemove
 4159              	.LVL344:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4160              		.loc 1 4633 0
 4161 0052 E36A     		ldr	r3, [r4, #44]
 4162 0054 134A     		ldr	r2, .L414
 4163 0056 D2F81022 		ldr	r2, [r2, #528]
 4164 005a 9342     		cmp	r3, r2
 4165 005c 02D9     		bls	.L410
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4166              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4167 005e 114A     		ldr	r2, .L414
 4168 0060 C2F81032 		str	r3, [r2, #528]
 4169              	.L410:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4170              		.loc 1 4633 0 discriminator 3
 4171 0064 03EB8303 		add	r3, r3, r3, lsl #2
 4172 0068 9A00     		lsls	r2, r3, #2
 4173 006a 3946     		mov	r1, r7
 4174 006c 0E48     		ldr	r0, .L414+4
 4175 006e 1044     		add	r0, r0, r2
 4176 0070 FFF7FEFF 		bl	vListInsertEnd
 4177              	.LVL345:
 4178 0074 04E0     		b	.L411
 4179              	.L409:
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4180              		.loc 1 4639 0 is_stmt 1
 4181 0076 04F11801 		add	r1, r4, #24
 4182 007a 0C48     		ldr	r0, .L414+8
 4183 007c FFF7FEFF 		bl	vListInsertEnd
 4184              	.LVL346:
 4185              	.L411:
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4186              		.loc 1 4642 0
 4187 0080 E26A     		ldr	r2, [r4, #44]
 4188 0082 084B     		ldr	r3, .L414
 4189 0084 D3F80432 		ldr	r3, [r3, #516]
 4190 0088 DB6A     		ldr	r3, [r3, #44]
 4191 008a 9A42     		cmp	r2, r3
 4192 008c 07D9     		bls	.L406
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4193              		.loc 1 4646 0
 4194 008e 15B1     		cbz	r5, .L412
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4195              		.loc 1 4648 0
 4196 0090 0123     		movs	r3, #1
 4197 0092 2B60     		str	r3, [r5]
 4198 0094 03E0     		b	.L406
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 173


 4199              	.L412:
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4200              		.loc 1 4655 0
 4201 0096 0122     		movs	r2, #1
 4202 0098 024B     		ldr	r3, .L414
 4203 009a C3F82C22 		str	r2, [r3, #556]
 4204              	.L406:
 4205              	.LVL347:
 4206              	.LBB47:
 4207              	.LBB48:
 4208              		.loc 2 233 0
 4209              		.syntax unified
 4210              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4211 009e 86F31188 		    msr basepri, r6  
 4212              	@ 0 "" 2
 4213              	.LVL348:
 4214              		.thumb
 4215              		.syntax unified
 4216 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4217              	.LVL349:
 4218              	.L415:
 4219              		.align	2
 4220              	.L414:
 4221 00a4 00000000 		.word	.LANCHOR0
 4222 00a8 30000000 		.word	.LANCHOR0+48
 4223 00ac 14000000 		.word	.LANCHOR0+20
 4224              	.LBE48:
 4225              	.LBE47:
 4226              		.cfi_endproc
 4227              	.LFE756:
 4228              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4229              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4230              		.align	2
 4231              		.global	xTaskNotifyStateClear
 4232              		.thumb
 4233              		.thumb_func
 4234              		.type	xTaskNotifyStateClear, %function
 4235              	xTaskNotifyStateClear:
 4236              	.LFB757:
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 4237              		.loc 1 4674 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              	.LVL350:
 4242 0000 10B5     		push	{r4, lr}
 4243              		.cfi_def_cfa_offset 8
 4244              		.cfi_offset 4, -8
 4245              		.cfi_offset 14, -4
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4246              		.loc 1 4680 0
 4247 0002 0446     		mov	r4, r0
 4248 0004 10B9     		cbnz	r0, .L417
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4249              		.loc 1 4680 0 is_stmt 0 discriminator 1
 4250 0006 0A4B     		ldr	r3, .L421
 4251 0008 D3F80442 		ldr	r4, [r3, #516]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 174


 4252              	.LVL351:
 4253              	.L417:
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 4254              		.loc 1 4682 0 is_stmt 1 discriminator 4
 4255 000c FFF7FEFF 		bl	vPortEnterCritical
 4256              	.LVL352:
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4257              		.loc 1 4684 0 discriminator 4
 4258 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4259 0014 DBB2     		uxtb	r3, r3
 4260 0016 022B     		cmp	r3, #2
 4261 0018 04D1     		bne	.L419
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 4262              		.loc 1 4686 0
 4263 001a 0023     		movs	r3, #0
 4264 001c 84F85C30 		strb	r3, [r4, #92]
 4265              	.LVL353:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4266              		.loc 1 4687 0
 4267 0020 0124     		movs	r4, #1
 4268              	.LVL354:
 4269 0022 00E0     		b	.L418
 4270              	.LVL355:
 4271              	.L419:
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4272              		.loc 1 4691 0
 4273 0024 0024     		movs	r4, #0
 4274              	.LVL356:
 4275              	.L418:
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4276              		.loc 1 4694 0
 4277 0026 FFF7FEFF 		bl	vPortExitCritical
 4278              	.LVL357:
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4279              		.loc 1 4697 0
 4280 002a 2046     		mov	r0, r4
 4281 002c 10BD     		pop	{r4, pc}
 4282              	.LVL358:
 4283              	.L422:
 4284 002e 00BF     		.align	2
 4285              	.L421:
 4286 0030 00000000 		.word	.LANCHOR0
 4287              		.cfi_endproc
 4288              	.LFE757:
 4289              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4290              		.global	pxCurrentTCB
 4291              		.section	.rodata.str1.4,"aMS",%progbits,1
 4292              		.align	2
 4293              	.LC0:
 4294 0000 49444C45 		.ascii	"IDLE\000"
 4294      00
 4295              		.bss
 4296              		.align	2
 4297              		.set	.LANCHOR0,. + 0
 4298              		.type	xSuspendedTaskList, %object
 4299              		.size	xSuspendedTaskList, 20
 4300              	xSuspendedTaskList:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 175


 4301 0000 00000000 		.space	20
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4302              		.type	xPendingReadyList, %object
 4303              		.size	xPendingReadyList, 20
 4304              	xPendingReadyList:
 4305 0014 00000000 		.space	20
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4306              		.type	pxDelayedTaskList, %object
 4307              		.size	pxDelayedTaskList, 4
 4308              	pxDelayedTaskList:
 4309 0028 00000000 		.space	4
 4310              		.type	xNextTaskUnblockTime, %object
 4311              		.size	xNextTaskUnblockTime, 4
 4312              	xNextTaskUnblockTime:
 4313 002c 00000000 		.space	4
 4314              		.type	pxReadyTasksLists, %object
 4315              		.size	pxReadyTasksLists, 400
 4316              	pxReadyTasksLists:
 4317 0030 00000000 		.space	400
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4318              		.type	xDelayedTaskList1, %object
 4319              		.size	xDelayedTaskList1, 20
 4320              	xDelayedTaskList1:
 4321 01c0 00000000 		.space	20
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4322              		.type	xDelayedTaskList2, %object
 4323              		.size	xDelayedTaskList2, 20
 4324              	xDelayedTaskList2:
 4325 01d4 00000000 		.space	20
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4326              		.type	xTasksWaitingTermination, %object
 4327              		.size	xTasksWaitingTermination, 20
 4328              	xTasksWaitingTermination:
 4329 01e8 00000000 		.space	20
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4330              		.type	pxOverflowDelayedTaskList, %object
 4331              		.size	pxOverflowDelayedTaskList, 4
 4332              	pxOverflowDelayedTaskList:
 4333 01fc 00000000 		.space	4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 176


 4334              		.type	uxCurrentNumberOfTasks, %object
 4335              		.size	uxCurrentNumberOfTasks, 4
 4336              	uxCurrentNumberOfTasks:
 4337 0200 00000000 		.space	4
 4338              		.type	pxCurrentTCB, %object
 4339              		.size	pxCurrentTCB, 4
 4340              	pxCurrentTCB:
 4341 0204 00000000 		.space	4
 4342              		.type	xSchedulerRunning, %object
 4343              		.size	xSchedulerRunning, 4
 4344              	xSchedulerRunning:
 4345 0208 00000000 		.space	4
 4346              		.type	uxTaskNumber, %object
 4347              		.size	uxTaskNumber, 4
 4348              	uxTaskNumber:
 4349 020c 00000000 		.space	4
 4350              		.type	uxTopReadyPriority, %object
 4351              		.size	uxTopReadyPriority, 4
 4352              	uxTopReadyPriority:
 4353 0210 00000000 		.space	4
 4354              		.type	xTickCount, %object
 4355              		.size	xTickCount, 4
 4356              	xTickCount:
 4357 0214 00000000 		.space	4
 4358              		.type	uxDeletedTasksWaitingCleanUp, %object
 4359              		.size	uxDeletedTasksWaitingCleanUp, 4
 4360              	uxDeletedTasksWaitingCleanUp:
 4361 0218 00000000 		.space	4
 4362              		.type	uxSchedulerSuspended, %object
 4363              		.size	uxSchedulerSuspended, 4
 4364              	uxSchedulerSuspended:
 4365 021c 00000000 		.space	4
 4366              		.type	xIdleTaskHandle, %object
 4367              		.size	xIdleTaskHandle, 4
 4368              	xIdleTaskHandle:
 4369 0220 00000000 		.space	4
 4370              		.type	xNumOfOverflows, %object
 4371              		.size	xNumOfOverflows, 4
 4372              	xNumOfOverflows:
 4373 0224 00000000 		.space	4
 4374              		.type	uxPendedTicks, %object
 4375              		.size	uxPendedTicks, 4
 4376              	uxPendedTicks:
 4377 0228 00000000 		.space	4
 4378              		.type	xYieldPending, %object
 4379              		.size	xYieldPending, 4
 4380              	xYieldPending:
 4381 022c 00000000 		.space	4
 4382              		.text
 4383              	.Letext0:
 4384              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4385              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4386              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4387              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/rtc/cy_rtc.h"
 4388              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/tcpwm/cy_tcpwm_counter.h"
 4389              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 4390              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_uart.h"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 177


 4391              		.file 10 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
 4392              		.file 11 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 4393              		.file 12 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 4394              		.file 13 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 4395              		.file 14 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_dis.h"
 4396              		.file 15 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_hts.h"
 4397              		.file 16 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_event_handler.h"
 4398              		.file 17 "Generated_Source\\PSoC6/ADC.h"
 4399              		.file 18 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/projdefs.h"
 4400              		.file 19 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/list.h"
 4401              		.file 20 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 4402              		.file 21 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4403              		.file 22 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 4404              		.file 23 "Generated_Source\\PSoC6/DEBUG_UART.h"
 4405              		.file 24 "Generated_Source\\PSoC6/Counter_ms.h"
 4406              		.file 25 "Generated_Source\\PSoC6/Timer_PPG.h"
 4407              		.file 26 "Generated_Source\\PSoC6/Timer_IMU.h"
 4408              		.file 27 "Generated_Source\\PSoC6/RTC.h"
 4409              		.file 28 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/portable.h"
 4410              		.file 29 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 4411              		.file 30 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 4412              		.section	.debug_info,"",%progbits
 4413              	.Ldebug_info0:
 4414 0000 56280000 		.4byte	0x2856
 4415 0004 0400     		.2byte	0x4
 4416 0006 00000000 		.4byte	.Ldebug_abbrev0
 4417 000a 04       		.byte	0x4
 4418 000b 01       		.uleb128 0x1
 4419 000c B7060000 		.4byte	.LASF469
 4420 0010 0C       		.byte	0xc
 4421 0011 63130000 		.4byte	.LASF470
 4422 0015 A2160000 		.4byte	.LASF471
 4423 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4424 001d 00000000 		.4byte	0
 4425 0021 00000000 		.4byte	.Ldebug_line0
 4426 0025 02       		.uleb128 0x2
 4427 0026 DC0D0000 		.4byte	.LASF4
 4428 002a 03       		.byte	0x3
 4429 002b D8       		.byte	0xd8
 4430 002c 30000000 		.4byte	0x30
 4431 0030 03       		.uleb128 0x3
 4432 0031 04       		.byte	0x4
 4433 0032 07       		.byte	0x7
 4434 0033 25030000 		.4byte	.LASF0
 4435 0037 04       		.uleb128 0x4
 4436 0038 04       		.byte	0x4
 4437 0039 05       		.byte	0x5
 4438 003a 696E7400 		.ascii	"int\000"
 4439 003e 03       		.uleb128 0x3
 4440 003f 08       		.byte	0x8
 4441 0040 05       		.byte	0x5
 4442 0041 90150000 		.4byte	.LASF1
 4443 0045 03       		.uleb128 0x3
 4444 0046 08       		.byte	0x8
 4445 0047 04       		.byte	0x4
 4446 0048 CB1A0000 		.4byte	.LASF2
 4447 004c 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 178


 4448 004d 01       		.byte	0x1
 4449 004e 06       		.byte	0x6
 4450 004f 32250000 		.4byte	.LASF3
 4451 0053 02       		.uleb128 0x2
 4452 0054 C21F0000 		.4byte	.LASF5
 4453 0058 04       		.byte	0x4
 4454 0059 1D       		.byte	0x1d
 4455 005a 5E000000 		.4byte	0x5e
 4456 005e 03       		.uleb128 0x3
 4457 005f 01       		.byte	0x1
 4458 0060 08       		.byte	0x8
 4459 0061 E81B0000 		.4byte	.LASF6
 4460 0065 03       		.uleb128 0x3
 4461 0066 02       		.byte	0x2
 4462 0067 05       		.byte	0x5
 4463 0068 271D0000 		.4byte	.LASF7
 4464 006c 02       		.uleb128 0x2
 4465 006d EC0B0000 		.4byte	.LASF8
 4466 0071 04       		.byte	0x4
 4467 0072 2B       		.byte	0x2b
 4468 0073 77000000 		.4byte	0x77
 4469 0077 03       		.uleb128 0x3
 4470 0078 02       		.byte	0x2
 4471 0079 07       		.byte	0x7
 4472 007a 45250000 		.4byte	.LASF9
 4473 007e 02       		.uleb128 0x2
 4474 007f 27040000 		.4byte	.LASF10
 4475 0083 04       		.byte	0x4
 4476 0084 3F       		.byte	0x3f
 4477 0085 89000000 		.4byte	0x89
 4478 0089 03       		.uleb128 0x3
 4479 008a 04       		.byte	0x4
 4480 008b 05       		.byte	0x5
 4481 008c AB1D0000 		.4byte	.LASF11
 4482 0090 02       		.uleb128 0x2
 4483 0091 51220000 		.4byte	.LASF12
 4484 0095 04       		.byte	0x4
 4485 0096 41       		.byte	0x41
 4486 0097 9B000000 		.4byte	0x9b
 4487 009b 03       		.uleb128 0x3
 4488 009c 04       		.byte	0x4
 4489 009d 07       		.byte	0x7
 4490 009e 4C210000 		.4byte	.LASF13
 4491 00a2 03       		.uleb128 0x3
 4492 00a3 08       		.byte	0x8
 4493 00a4 07       		.byte	0x7
 4494 00a5 C5090000 		.4byte	.LASF14
 4495 00a9 03       		.uleb128 0x3
 4496 00aa 04       		.byte	0x4
 4497 00ab 07       		.byte	0x7
 4498 00ac 24210000 		.4byte	.LASF15
 4499 00b0 05       		.uleb128 0x5
 4500 00b1 04       		.byte	0x4
 4501 00b2 06       		.uleb128 0x6
 4502 00b3 04       		.byte	0x4
 4503 00b4 B8000000 		.4byte	0xb8
 4504 00b8 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 179


 4505 00b9 01       		.byte	0x1
 4506 00ba 08       		.byte	0x8
 4507 00bb BE110000 		.4byte	.LASF16
 4508 00bf 06       		.uleb128 0x6
 4509 00c0 04       		.byte	0x4
 4510 00c1 C5000000 		.4byte	0xc5
 4511 00c5 07       		.uleb128 0x7
 4512 00c6 B8000000 		.4byte	0xb8
 4513 00ca 02       		.uleb128 0x2
 4514 00cb ED130000 		.4byte	.LASF17
 4515 00cf 05       		.byte	0x5
 4516 00d0 18       		.byte	0x18
 4517 00d1 53000000 		.4byte	0x53
 4518 00d5 02       		.uleb128 0x2
 4519 00d6 0F1B0000 		.4byte	.LASF18
 4520 00da 05       		.byte	0x5
 4521 00db 24       		.byte	0x24
 4522 00dc 6C000000 		.4byte	0x6c
 4523 00e0 02       		.uleb128 0x2
 4524 00e1 7F210000 		.4byte	.LASF19
 4525 00e5 05       		.byte	0x5
 4526 00e6 2C       		.byte	0x2c
 4527 00e7 7E000000 		.4byte	0x7e
 4528 00eb 02       		.uleb128 0x2
 4529 00ec 6A030000 		.4byte	.LASF20
 4530 00f0 05       		.byte	0x5
 4531 00f1 30       		.byte	0x30
 4532 00f2 90000000 		.4byte	0x90
 4533 00f6 08       		.uleb128 0x8
 4534 00f7 EB000000 		.4byte	0xeb
 4535 00fb 08       		.uleb128 0x8
 4536 00fc CA000000 		.4byte	0xca
 4537 0100 03       		.uleb128 0x3
 4538 0101 04       		.byte	0x4
 4539 0102 04       		.byte	0x4
 4540 0103 6B210000 		.4byte	.LASF21
 4541 0107 03       		.uleb128 0x3
 4542 0108 08       		.byte	0x8
 4543 0109 04       		.byte	0x4
 4544 010a 040E0000 		.4byte	.LASF22
 4545 010e 06       		.uleb128 0x6
 4546 010f 04       		.byte	0x4
 4547 0110 EB000000 		.4byte	0xeb
 4548 0114 03       		.uleb128 0x3
 4549 0115 01       		.byte	0x1
 4550 0116 02       		.byte	0x2
 4551 0117 2C250000 		.4byte	.LASF23
 4552 011b 09       		.uleb128 0x9
 4553 011c 01       		.byte	0x1
 4554 011d 5E000000 		.4byte	0x5e
 4555 0121 06       		.byte	0x6
 4556 0122 6A01     		.2byte	0x16a
 4557 0124 35010000 		.4byte	0x135
 4558 0128 0A       		.uleb128 0xa
 4559 0129 FC130000 		.4byte	.LASF24
 4560 012d 00       		.byte	0
 4561 012e 0A       		.uleb128 0xa
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 180


 4562 012f B41D0000 		.4byte	.LASF25
 4563 0133 01       		.byte	0x1
 4564 0134 00       		.byte	0
 4565 0135 0B       		.uleb128 0xb
 4566 0136 F70B0000 		.4byte	.LASF26
 4567 013a 06       		.byte	0x6
 4568 013b 6D01     		.2byte	0x16d
 4569 013d 1B010000 		.4byte	0x11b
 4570 0141 0C       		.uleb128 0xc
 4571 0142 18       		.byte	0x18
 4572 0143 06       		.byte	0x6
 4573 0144 CE01     		.2byte	0x1ce
 4574 0146 99010000 		.4byte	0x199
 4575 014a 0D       		.uleb128 0xd
 4576 014b C8010000 		.4byte	.LASF27
 4577 014f 06       		.byte	0x6
 4578 0150 D001     		.2byte	0x1d0
 4579 0152 35010000 		.4byte	0x135
 4580 0156 00       		.byte	0
 4581 0157 0D       		.uleb128 0xd
 4582 0158 98100000 		.4byte	.LASF28
 4583 015c 06       		.byte	0x6
 4584 015d D301     		.2byte	0x1d3
 4585 015f EB000000 		.4byte	0xeb
 4586 0163 04       		.byte	0x4
 4587 0164 0D       		.uleb128 0xd
 4588 0165 F6020000 		.4byte	.LASF29
 4589 0169 06       		.byte	0x6
 4590 016a D501     		.2byte	0x1d5
 4591 016c EB000000 		.4byte	0xeb
 4592 0170 08       		.byte	0x8
 4593 0171 0D       		.uleb128 0xd
 4594 0172 A10E0000 		.4byte	.LASF30
 4595 0176 06       		.byte	0x6
 4596 0177 D801     		.2byte	0x1d8
 4597 0179 EB000000 		.4byte	0xeb
 4598 017d 0C       		.byte	0xc
 4599 017e 0D       		.uleb128 0xd
 4600 017f C71E0000 		.4byte	.LASF31
 4601 0183 06       		.byte	0x6
 4602 0184 DC01     		.2byte	0x1dc
 4603 0186 EB000000 		.4byte	0xeb
 4604 018a 10       		.byte	0x10
 4605 018b 0D       		.uleb128 0xd
 4606 018c 02260000 		.4byte	.LASF32
 4607 0190 06       		.byte	0x6
 4608 0191 E001     		.2byte	0x1e0
 4609 0193 EB000000 		.4byte	0xeb
 4610 0197 14       		.byte	0x14
 4611 0198 00       		.byte	0
 4612 0199 0B       		.uleb128 0xb
 4613 019a 99030000 		.4byte	.LASF33
 4614 019e 06       		.byte	0x6
 4615 019f E201     		.2byte	0x1e2
 4616 01a1 41010000 		.4byte	0x141
 4617 01a5 0C       		.uleb128 0xc
 4618 01a6 30       		.byte	0x30
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 181


 4619 01a7 06       		.byte	0x6
 4620 01a8 E501     		.2byte	0x1e5
 4621 01aa C9010000 		.4byte	0x1c9
 4622 01ae 0D       		.uleb128 0xd
 4623 01af 9F1E0000 		.4byte	.LASF34
 4624 01b3 06       		.byte	0x6
 4625 01b4 E701     		.2byte	0x1e7
 4626 01b6 99010000 		.4byte	0x199
 4627 01ba 00       		.byte	0
 4628 01bb 0D       		.uleb128 0xd
 4629 01bc 570E0000 		.4byte	.LASF35
 4630 01c0 06       		.byte	0x6
 4631 01c1 E801     		.2byte	0x1e8
 4632 01c3 99010000 		.4byte	0x199
 4633 01c7 18       		.byte	0x18
 4634 01c8 00       		.byte	0
 4635 01c9 0B       		.uleb128 0xb
 4636 01ca 4A040000 		.4byte	.LASF36
 4637 01ce 06       		.byte	0x6
 4638 01cf E901     		.2byte	0x1e9
 4639 01d1 A5010000 		.4byte	0x1a5
 4640 01d5 0E       		.uleb128 0xe
 4641 01d6 AD0E0000 		.4byte	.LASF58
 4642 01da 4C       		.byte	0x4c
 4643 01db 07       		.byte	0x7
 4644 01dc 2B       		.byte	0x2b
 4645 01dd C6020000 		.4byte	0x2c6
 4646 01e1 0F       		.uleb128 0xf
 4647 01e2 3E250000 		.4byte	.LASF37
 4648 01e6 07       		.byte	0x7
 4649 01e7 2D       		.byte	0x2d
 4650 01e8 EB000000 		.4byte	0xeb
 4651 01ec 00       		.byte	0
 4652 01ed 0F       		.uleb128 0xf
 4653 01ee CA120000 		.4byte	.LASF38
 4654 01f2 07       		.byte	0x7
 4655 01f3 2F       		.byte	0x2f
 4656 01f4 EB000000 		.4byte	0xeb
 4657 01f8 04       		.byte	0x4
 4658 01f9 0F       		.uleb128 0xf
 4659 01fa 241B0000 		.4byte	.LASF39
 4660 01fe 07       		.byte	0x7
 4661 01ff 30       		.byte	0x30
 4662 0200 EB000000 		.4byte	0xeb
 4663 0204 08       		.byte	0x8
 4664 0205 0F       		.uleb128 0xf
 4665 0206 5D1A0000 		.4byte	.LASF40
 4666 020a 07       		.byte	0x7
 4667 020b 31       		.byte	0x31
 4668 020c EB000000 		.4byte	0xeb
 4669 0210 0C       		.byte	0xc
 4670 0211 0F       		.uleb128 0xf
 4671 0212 CA1C0000 		.4byte	.LASF41
 4672 0216 07       		.byte	0x7
 4673 0217 33       		.byte	0x33
 4674 0218 EB000000 		.4byte	0xeb
 4675 021c 10       		.byte	0x10
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 182


 4676 021d 0F       		.uleb128 0xf
 4677 021e A5060000 		.4byte	.LASF42
 4678 0222 07       		.byte	0x7
 4679 0223 34       		.byte	0x34
 4680 0224 EB000000 		.4byte	0xeb
 4681 0228 14       		.byte	0x14
 4682 0229 0F       		.uleb128 0xf
 4683 022a AE060000 		.4byte	.LASF43
 4684 022e 07       		.byte	0x7
 4685 022f 35       		.byte	0x35
 4686 0230 EB000000 		.4byte	0xeb
 4687 0234 18       		.byte	0x18
 4688 0235 0F       		.uleb128 0xf
 4689 0236 811D0000 		.4byte	.LASF44
 4690 023a 07       		.byte	0x7
 4691 023b 36       		.byte	0x36
 4692 023c 14010000 		.4byte	0x114
 4693 0240 1C       		.byte	0x1c
 4694 0241 0F       		.uleb128 0xf
 4695 0242 B8080000 		.4byte	.LASF45
 4696 0246 07       		.byte	0x7
 4697 0247 38       		.byte	0x38
 4698 0248 EB000000 		.4byte	0xeb
 4699 024c 20       		.byte	0x20
 4700 024d 0F       		.uleb128 0xf
 4701 024e DC0C0000 		.4byte	.LASF46
 4702 0252 07       		.byte	0x7
 4703 0253 39       		.byte	0x39
 4704 0254 EB000000 		.4byte	0xeb
 4705 0258 24       		.byte	0x24
 4706 0259 0F       		.uleb128 0xf
 4707 025a 80110000 		.4byte	.LASF47
 4708 025e 07       		.byte	0x7
 4709 025f 3B       		.byte	0x3b
 4710 0260 EB000000 		.4byte	0xeb
 4711 0264 28       		.byte	0x28
 4712 0265 0F       		.uleb128 0xf
 4713 0266 1F180000 		.4byte	.LASF48
 4714 026a 07       		.byte	0x7
 4715 026b 3C       		.byte	0x3c
 4716 026c EB000000 		.4byte	0xeb
 4717 0270 2C       		.byte	0x2c
 4718 0271 0F       		.uleb128 0xf
 4719 0272 A30A0000 		.4byte	.LASF49
 4720 0276 07       		.byte	0x7
 4721 0277 3E       		.byte	0x3e
 4722 0278 EB000000 		.4byte	0xeb
 4723 027c 30       		.byte	0x30
 4724 027d 0F       		.uleb128 0xf
 4725 027e DD150000 		.4byte	.LASF50
 4726 0282 07       		.byte	0x7
 4727 0283 3F       		.byte	0x3f
 4728 0284 EB000000 		.4byte	0xeb
 4729 0288 34       		.byte	0x34
 4730 0289 0F       		.uleb128 0xf
 4731 028a 03040000 		.4byte	.LASF51
 4732 028e 07       		.byte	0x7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 183


 4733 028f 41       		.byte	0x41
 4734 0290 EB000000 		.4byte	0xeb
 4735 0294 38       		.byte	0x38
 4736 0295 0F       		.uleb128 0xf
 4737 0296 98000000 		.4byte	.LASF52
 4738 029a 07       		.byte	0x7
 4739 029b 42       		.byte	0x42
 4740 029c EB000000 		.4byte	0xeb
 4741 02a0 3C       		.byte	0x3c
 4742 02a1 0F       		.uleb128 0xf
 4743 02a2 33230000 		.4byte	.LASF53
 4744 02a6 07       		.byte	0x7
 4745 02a7 44       		.byte	0x44
 4746 02a8 EB000000 		.4byte	0xeb
 4747 02ac 40       		.byte	0x40
 4748 02ad 0F       		.uleb128 0xf
 4749 02ae D21D0000 		.4byte	.LASF54
 4750 02b2 07       		.byte	0x7
 4751 02b3 45       		.byte	0x45
 4752 02b4 EB000000 		.4byte	0xeb
 4753 02b8 44       		.byte	0x44
 4754 02b9 0F       		.uleb128 0xf
 4755 02ba 91120000 		.4byte	.LASF55
 4756 02be 07       		.byte	0x7
 4757 02bf 47       		.byte	0x47
 4758 02c0 EB000000 		.4byte	0xeb
 4759 02c4 48       		.byte	0x48
 4760 02c5 00       		.byte	0
 4761 02c6 02       		.uleb128 0x2
 4762 02c7 881B0000 		.4byte	.LASF56
 4763 02cb 07       		.byte	0x7
 4764 02cc 48       		.byte	0x48
 4765 02cd D5010000 		.4byte	0x1d5
 4766 02d1 06       		.uleb128 0x6
 4767 02d2 04       		.byte	0x4
 4768 02d3 D7020000 		.4byte	0x2d7
 4769 02d7 10       		.uleb128 0x10
 4770 02d8 E2020000 		.4byte	0x2e2
 4771 02dc 11       		.uleb128 0x11
 4772 02dd EB000000 		.4byte	0xeb
 4773 02e1 00       		.byte	0
 4774 02e2 0B       		.uleb128 0xb
 4775 02e3 7A000000 		.4byte	.LASF57
 4776 02e7 08       		.byte	0x8
 4777 02e8 BF01     		.2byte	0x1bf
 4778 02ea D1020000 		.4byte	0x2d1
 4779 02ee 12       		.uleb128 0x12
 4780 02ef BD200000 		.4byte	.LASF59
 4781 02f3 24       		.byte	0x24
 4782 02f4 08       		.byte	0x8
 4783 02f5 4102     		.2byte	0x241
 4784 02f7 71030000 		.4byte	0x371
 4785 02fb 0D       		.uleb128 0xd
 4786 02fc F5130000 		.4byte	.LASF60
 4787 0300 08       		.byte	0x8
 4788 0301 4402     		.2byte	0x244
 4789 0303 F6000000 		.4byte	0xf6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 184


 4790 0307 00       		.byte	0
 4791 0308 0D       		.uleb128 0xd
 4792 0309 570D0000 		.4byte	.LASF61
 4793 030d 08       		.byte	0x8
 4794 030e 4602     		.2byte	0x246
 4795 0310 B0000000 		.4byte	0xb0
 4796 0314 04       		.byte	0x4
 4797 0315 0D       		.uleb128 0xd
 4798 0316 86270000 		.4byte	.LASF62
 4799 031a 08       		.byte	0x8
 4800 031b 4702     		.2byte	0x247
 4801 031d EB000000 		.4byte	0xeb
 4802 0321 08       		.byte	0x8
 4803 0322 0D       		.uleb128 0xd
 4804 0323 4B130000 		.4byte	.LASF63
 4805 0327 08       		.byte	0x8
 4806 0328 4802     		.2byte	0x248
 4807 032a F6000000 		.4byte	0xf6
 4808 032e 0C       		.byte	0xc
 4809 032f 0D       		.uleb128 0xd
 4810 0330 571A0000 		.4byte	.LASF64
 4811 0334 08       		.byte	0x8
 4812 0335 4A02     		.2byte	0x24a
 4813 0337 B0000000 		.4byte	0xb0
 4814 033b 10       		.byte	0x10
 4815 033c 0D       		.uleb128 0xd
 4816 033d AA180000 		.4byte	.LASF65
 4817 0341 08       		.byte	0x8
 4818 0342 4B02     		.2byte	0x24b
 4819 0344 EB000000 		.4byte	0xeb
 4820 0348 14       		.byte	0x14
 4821 0349 0D       		.uleb128 0xd
 4822 034a E1030000 		.4byte	.LASF66
 4823 034e 08       		.byte	0x8
 4824 034f 4C02     		.2byte	0x24c
 4825 0351 F6000000 		.4byte	0xf6
 4826 0355 18       		.byte	0x18
 4827 0356 0D       		.uleb128 0xd
 4828 0357 F00D0000 		.4byte	.LASF67
 4829 035b 08       		.byte	0x8
 4830 035c 5202     		.2byte	0x252
 4831 035e E2020000 		.4byte	0x2e2
 4832 0362 1C       		.byte	0x1c
 4833 0363 0D       		.uleb128 0xd
 4834 0364 CC130000 		.4byte	.LASF68
 4835 0368 08       		.byte	0x8
 4836 0369 5502     		.2byte	0x255
 4837 036b EB000000 		.4byte	0xeb
 4838 036f 20       		.byte	0x20
 4839 0370 00       		.byte	0
 4840 0371 0B       		.uleb128 0xb
 4841 0372 DE170000 		.4byte	.LASF69
 4842 0376 08       		.byte	0x8
 4843 0377 5802     		.2byte	0x258
 4844 0379 EE020000 		.4byte	0x2ee
 4845 037d 0B       		.uleb128 0xb
 4846 037e F9140000 		.4byte	.LASF70
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 185


 4847 0382 09       		.byte	0x9
 4848 0383 AB01     		.2byte	0x1ab
 4849 0385 D1020000 		.4byte	0x2d1
 4850 0389 12       		.uleb128 0x12
 4851 038a 690A0000 		.4byte	.LASF71
 4852 038e 38       		.byte	0x38
 4853 038f 09       		.byte	0x9
 4854 0390 4702     		.2byte	0x247
 4855 0392 4D040000 		.4byte	0x44d
 4856 0396 0D       		.uleb128 0xd
 4857 0397 E6010000 		.4byte	.LASF72
 4858 039b 09       		.byte	0x9
 4859 039c 4A02     		.2byte	0x24a
 4860 039e F6000000 		.4byte	0xf6
 4861 03a2 00       		.byte	0
 4862 03a3 0D       		.uleb128 0xd
 4863 03a4 68080000 		.4byte	.LASF73
 4864 03a8 09       		.byte	0x9
 4865 03a9 4B02     		.2byte	0x24b
 4866 03ab F6000000 		.4byte	0xf6
 4867 03af 04       		.byte	0x4
 4868 03b0 0D       		.uleb128 0xd
 4869 03b1 C11A0000 		.4byte	.LASF74
 4870 03b5 09       		.byte	0x9
 4871 03b6 4D02     		.2byte	0x24d
 4872 03b8 B0000000 		.4byte	0xb0
 4873 03bc 08       		.byte	0x8
 4874 03bd 0D       		.uleb128 0xd
 4875 03be 28100000 		.4byte	.LASF75
 4876 03c2 09       		.byte	0x9
 4877 03c3 4E02     		.2byte	0x24e
 4878 03c5 EB000000 		.4byte	0xeb
 4879 03c9 0C       		.byte	0xc
 4880 03ca 0D       		.uleb128 0xd
 4881 03cb FF170000 		.4byte	.LASF76
 4882 03cf 09       		.byte	0x9
 4883 03d0 4F02     		.2byte	0x24f
 4884 03d2 F6000000 		.4byte	0xf6
 4885 03d6 10       		.byte	0x10
 4886 03d7 0D       		.uleb128 0xd
 4887 03d8 13120000 		.4byte	.LASF77
 4888 03dc 09       		.byte	0x9
 4889 03dd 5002     		.2byte	0x250
 4890 03df F6000000 		.4byte	0xf6
 4891 03e3 14       		.byte	0x14
 4892 03e4 0D       		.uleb128 0xd
 4893 03e5 570D0000 		.4byte	.LASF61
 4894 03e9 09       		.byte	0x9
 4895 03ea 5202     		.2byte	0x252
 4896 03ec B0000000 		.4byte	0xb0
 4897 03f0 18       		.byte	0x18
 4898 03f1 0D       		.uleb128 0xd
 4899 03f2 86270000 		.4byte	.LASF62
 4900 03f6 09       		.byte	0x9
 4901 03f7 5302     		.2byte	0x253
 4902 03f9 EB000000 		.4byte	0xeb
 4903 03fd 1C       		.byte	0x1c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 186


 4904 03fe 0D       		.uleb128 0xd
 4905 03ff 4B130000 		.4byte	.LASF63
 4906 0403 09       		.byte	0x9
 4907 0404 5402     		.2byte	0x254
 4908 0406 F6000000 		.4byte	0xf6
 4909 040a 20       		.byte	0x20
 4910 040b 0D       		.uleb128 0xd
 4911 040c 571A0000 		.4byte	.LASF64
 4912 0410 09       		.byte	0x9
 4913 0411 5602     		.2byte	0x256
 4914 0413 B0000000 		.4byte	0xb0
 4915 0417 24       		.byte	0x24
 4916 0418 0D       		.uleb128 0xd
 4917 0419 AA180000 		.4byte	.LASF65
 4918 041d 09       		.byte	0x9
 4919 041e 5702     		.2byte	0x257
 4920 0420 EB000000 		.4byte	0xeb
 4921 0424 28       		.byte	0x28
 4922 0425 0D       		.uleb128 0xd
 4923 0426 4E1E0000 		.4byte	.LASF78
 4924 042a 09       		.byte	0x9
 4925 042b 5802     		.2byte	0x258
 4926 042d F6000000 		.4byte	0xf6
 4927 0431 2C       		.byte	0x2c
 4928 0432 0D       		.uleb128 0xd
 4929 0433 F00D0000 		.4byte	.LASF67
 4930 0437 09       		.byte	0x9
 4931 0438 5D02     		.2byte	0x25d
 4932 043a 7D030000 		.4byte	0x37d
 4933 043e 30       		.byte	0x30
 4934 043f 0D       		.uleb128 0xd
 4935 0440 CC130000 		.4byte	.LASF68
 4936 0444 09       		.byte	0x9
 4937 0445 6002     		.2byte	0x260
 4938 0447 EB000000 		.4byte	0xeb
 4939 044b 34       		.byte	0x34
 4940 044c 00       		.byte	0
 4941 044d 0B       		.uleb128 0xb
 4942 044e 6D040000 		.4byte	.LASF79
 4943 0452 09       		.byte	0x9
 4944 0453 6302     		.2byte	0x263
 4945 0455 89030000 		.4byte	0x389
 4946 0459 09       		.uleb128 0x9
 4947 045a 01       		.byte	0x1
 4948 045b 5E000000 		.4byte	0x5e
 4949 045f 0A       		.byte	0xa
 4950 0460 0504     		.2byte	0x405
 4951 0462 7F040000 		.4byte	0x47f
 4952 0466 0A       		.uleb128 0xa
 4953 0467 91070000 		.4byte	.LASF80
 4954 046b 00       		.byte	0
 4955 046c 0A       		.uleb128 0xa
 4956 046d 3E0D0000 		.4byte	.LASF81
 4957 0471 01       		.byte	0x1
 4958 0472 0A       		.uleb128 0xa
 4959 0473 8D110000 		.4byte	.LASF82
 4960 0477 02       		.byte	0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 187


 4961 0478 0A       		.uleb128 0xa
 4962 0479 7F030000 		.4byte	.LASF83
 4963 047d 03       		.byte	0x3
 4964 047e 00       		.byte	0
 4965 047f 0B       		.uleb128 0xb
 4966 0480 4A260000 		.4byte	.LASF84
 4967 0484 0A       		.byte	0xa
 4968 0485 0A04     		.2byte	0x40a
 4969 0487 59040000 		.4byte	0x459
 4970 048b 0C       		.uleb128 0xc
 4971 048c 78       		.byte	0x78
 4972 048d 0A       		.byte	0xa
 4973 048e F404     		.2byte	0x4f4
 4974 0490 58050000 		.4byte	0x558
 4975 0494 0D       		.uleb128 0xd
 4976 0495 9D0C0000 		.4byte	.LASF85
 4977 0499 0A       		.byte	0xa
 4978 049a F604     		.2byte	0x4f6
 4979 049c EB000000 		.4byte	0xeb
 4980 04a0 00       		.byte	0
 4981 04a1 0D       		.uleb128 0xd
 4982 04a2 DE210000 		.4byte	.LASF86
 4983 04a6 0A       		.byte	0xa
 4984 04a7 F704     		.2byte	0x4f7
 4985 04a9 EB000000 		.4byte	0xeb
 4986 04ad 04       		.byte	0x4
 4987 04ae 0D       		.uleb128 0xd
 4988 04af 97020000 		.4byte	.LASF87
 4989 04b3 0A       		.byte	0xa
 4990 04b4 F804     		.2byte	0x4f8
 4991 04b6 EB000000 		.4byte	0xeb
 4992 04ba 08       		.byte	0x8
 4993 04bb 0D       		.uleb128 0xd
 4994 04bc E30D0000 		.4byte	.LASF88
 4995 04c0 0A       		.byte	0xa
 4996 04c1 F904     		.2byte	0x4f9
 4997 04c3 EB000000 		.4byte	0xeb
 4998 04c7 0C       		.byte	0xc
 4999 04c8 0D       		.uleb128 0xd
 5000 04c9 C20B0000 		.4byte	.LASF89
 5001 04cd 0A       		.byte	0xa
 5002 04ce FA04     		.2byte	0x4fa
 5003 04d0 EB000000 		.4byte	0xeb
 5004 04d4 10       		.byte	0x10
 5005 04d5 0D       		.uleb128 0xd
 5006 04d6 2B150000 		.4byte	.LASF90
 5007 04da 0A       		.byte	0xa
 5008 04db FB04     		.2byte	0x4fb
 5009 04dd 7F040000 		.4byte	0x47f
 5010 04e1 14       		.byte	0x14
 5011 04e2 0D       		.uleb128 0xd
 5012 04e3 F2110000 		.4byte	.LASF91
 5013 04e7 0A       		.byte	0xa
 5014 04e8 FC04     		.2byte	0x4fc
 5015 04ea EB000000 		.4byte	0xeb
 5016 04ee 18       		.byte	0x18
 5017 04ef 0D       		.uleb128 0xd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 188


 5018 04f0 4D180000 		.4byte	.LASF92
 5019 04f4 0A       		.byte	0xa
 5020 04f5 FD04     		.2byte	0x4fd
 5021 04f7 58050000 		.4byte	0x558
 5022 04fb 1C       		.byte	0x1c
 5023 04fc 0D       		.uleb128 0xd
 5024 04fd 6B270000 		.4byte	.LASF93
 5025 0501 0A       		.byte	0xa
 5026 0502 FE04     		.2byte	0x4fe
 5027 0504 EB000000 		.4byte	0xeb
 5028 0508 5C       		.byte	0x5c
 5029 0509 0D       		.uleb128 0xd
 5030 050a FD050000 		.4byte	.LASF94
 5031 050e 0A       		.byte	0xa
 5032 050f FF04     		.2byte	0x4ff
 5033 0511 EB000000 		.4byte	0xeb
 5034 0515 60       		.byte	0x60
 5035 0516 0D       		.uleb128 0xd
 5036 0517 3C260000 		.4byte	.LASF95
 5037 051b 0A       		.byte	0xa
 5038 051c 0005     		.2byte	0x500
 5039 051e EB000000 		.4byte	0xeb
 5040 0522 64       		.byte	0x64
 5041 0523 0D       		.uleb128 0xd
 5042 0524 D11B0000 		.4byte	.LASF96
 5043 0528 0A       		.byte	0xa
 5044 0529 0105     		.2byte	0x501
 5045 052b EB000000 		.4byte	0xeb
 5046 052f 68       		.byte	0x68
 5047 0530 0D       		.uleb128 0xd
 5048 0531 B5140000 		.4byte	.LASF97
 5049 0535 0A       		.byte	0xa
 5050 0536 0205     		.2byte	0x502
 5051 0538 EB000000 		.4byte	0xeb
 5052 053c 6C       		.byte	0x6c
 5053 053d 0D       		.uleb128 0xd
 5054 053e F4250000 		.4byte	.LASF98
 5055 0542 0A       		.byte	0xa
 5056 0543 0305     		.2byte	0x503
 5057 0545 14010000 		.4byte	0x114
 5058 0549 70       		.byte	0x70
 5059 054a 0D       		.uleb128 0xd
 5060 054b DA100000 		.4byte	.LASF99
 5061 054f 0A       		.byte	0xa
 5062 0550 0405     		.2byte	0x504
 5063 0552 EB000000 		.4byte	0xeb
 5064 0556 74       		.byte	0x74
 5065 0557 00       		.byte	0
 5066 0558 13       		.uleb128 0x13
 5067 0559 EB000000 		.4byte	0xeb
 5068 055d 68050000 		.4byte	0x568
 5069 0561 14       		.uleb128 0x14
 5070 0562 A9000000 		.4byte	0xa9
 5071 0566 0F       		.byte	0xf
 5072 0567 00       		.byte	0
 5073 0568 0B       		.uleb128 0xb
 5074 0569 830C0000 		.4byte	.LASF100
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 189


 5075 056d 0A       		.byte	0xa
 5076 056e 0505     		.2byte	0x505
 5077 0570 8B040000 		.4byte	0x48b
 5078 0574 09       		.uleb128 0x9
 5079 0575 02       		.byte	0x2
 5080 0576 77000000 		.4byte	0x77
 5081 057a 0B       		.byte	0xb
 5082 057b 3F01     		.2byte	0x13f
 5083 057d A6080000 		.4byte	0x8a6
 5084 0581 0A       		.uleb128 0xa
 5085 0582 1A0A0000 		.4byte	.LASF101
 5086 0586 00       		.byte	0
 5087 0587 15       		.uleb128 0x15
 5088 0588 40090000 		.4byte	.LASF102
 5089 058c 0010     		.2byte	0x1000
 5090 058e 15       		.uleb128 0x15
 5091 058f 00210000 		.4byte	.LASF103
 5092 0593 0110     		.2byte	0x1001
 5093 0595 15       		.uleb128 0x15
 5094 0596 4C0A0000 		.4byte	.LASF104
 5095 059a 0210     		.2byte	0x1002
 5096 059c 15       		.uleb128 0x15
 5097 059d C0100000 		.4byte	.LASF105
 5098 05a1 0310     		.2byte	0x1003
 5099 05a3 15       		.uleb128 0x15
 5100 05a4 3A010000 		.4byte	.LASF106
 5101 05a8 0410     		.2byte	0x1004
 5102 05aa 15       		.uleb128 0x15
 5103 05ab 0E040000 		.4byte	.LASF107
 5104 05af 0510     		.2byte	0x1005
 5105 05b1 15       		.uleb128 0x15
 5106 05b2 6E1B0000 		.4byte	.LASF108
 5107 05b6 0020     		.2byte	0x2000
 5108 05b8 15       		.uleb128 0x15
 5109 05b9 531F0000 		.4byte	.LASF109
 5110 05bd 0120     		.2byte	0x2001
 5111 05bf 15       		.uleb128 0x15
 5112 05c0 D71A0000 		.4byte	.LASF110
 5113 05c4 0220     		.2byte	0x2002
 5114 05c6 15       		.uleb128 0x15
 5115 05c7 74100000 		.4byte	.LASF111
 5116 05cb 0320     		.2byte	0x2003
 5117 05cd 15       		.uleb128 0x15
 5118 05ce 25130000 		.4byte	.LASF112
 5119 05d2 0420     		.2byte	0x2004
 5120 05d4 15       		.uleb128 0x15
 5121 05d5 5A160000 		.4byte	.LASF113
 5122 05d9 0520     		.2byte	0x2005
 5123 05db 15       		.uleb128 0x15
 5124 05dc 990F0000 		.4byte	.LASF114
 5125 05e0 0620     		.2byte	0x2006
 5126 05e2 15       		.uleb128 0x15
 5127 05e3 1C200000 		.4byte	.LASF115
 5128 05e7 0720     		.2byte	0x2007
 5129 05e9 15       		.uleb128 0x15
 5130 05ea F70A0000 		.4byte	.LASF116
 5131 05ee 0820     		.2byte	0x2008
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 190


 5132 05f0 15       		.uleb128 0x15
 5133 05f1 2F180000 		.4byte	.LASF117
 5134 05f5 0920     		.2byte	0x2009
 5135 05f7 15       		.uleb128 0x15
 5136 05f8 DC090000 		.4byte	.LASF118
 5137 05fc 0A20     		.2byte	0x200a
 5138 05fe 15       		.uleb128 0x15
 5139 05ff 810A0000 		.4byte	.LASF119
 5140 0603 0B20     		.2byte	0x200b
 5141 0605 15       		.uleb128 0x15
 5142 0606 2C1B0000 		.4byte	.LASF120
 5143 060a 0C20     		.2byte	0x200c
 5144 060c 15       		.uleb128 0x15
 5145 060d 0E090000 		.4byte	.LASF121
 5146 0611 0D20     		.2byte	0x200d
 5147 0613 15       		.uleb128 0x15
 5148 0614 00130000 		.4byte	.LASF122
 5149 0618 0E20     		.2byte	0x200e
 5150 061a 15       		.uleb128 0x15
 5151 061b 391C0000 		.4byte	.LASF123
 5152 061f 0F20     		.2byte	0x200f
 5153 0621 15       		.uleb128 0x15
 5154 0622 1D160000 		.4byte	.LASF124
 5155 0626 1020     		.2byte	0x2010
 5156 0628 15       		.uleb128 0x15
 5157 0629 7D180000 		.4byte	.LASF125
 5158 062d 1120     		.2byte	0x2011
 5159 062f 15       		.uleb128 0x15
 5160 0630 D4220000 		.4byte	.LASF126
 5161 0634 1220     		.2byte	0x2012
 5162 0636 15       		.uleb128 0x15
 5163 0637 47190000 		.4byte	.LASF127
 5164 063b 1320     		.2byte	0x2013
 5165 063d 15       		.uleb128 0x15
 5166 063e 91140000 		.4byte	.LASF128
 5167 0642 1420     		.2byte	0x2014
 5168 0644 15       		.uleb128 0x15
 5169 0645 4A060000 		.4byte	.LASF129
 5170 0649 1520     		.2byte	0x2015
 5171 064b 15       		.uleb128 0x15
 5172 064c DD260000 		.4byte	.LASF130
 5173 0650 1620     		.2byte	0x2016
 5174 0652 15       		.uleb128 0x15
 5175 0653 E1040000 		.4byte	.LASF131
 5176 0657 1720     		.2byte	0x2017
 5177 0659 15       		.uleb128 0x15
 5178 065a 54090000 		.4byte	.LASF132
 5179 065e 0030     		.2byte	0x3000
 5180 0660 15       		.uleb128 0x15
 5181 0661 7D0D0000 		.4byte	.LASF133
 5182 0665 0130     		.2byte	0x3001
 5183 0667 15       		.uleb128 0x15
 5184 0668 5F0C0000 		.4byte	.LASF134
 5185 066c 0230     		.2byte	0x3002
 5186 066e 15       		.uleb128 0x15
 5187 066f 5A200000 		.4byte	.LASF135
 5188 0673 0330     		.2byte	0x3003
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 191


 5189 0675 15       		.uleb128 0x15
 5190 0676 750B0000 		.4byte	.LASF136
 5191 067a 0430     		.2byte	0x3004
 5192 067c 15       		.uleb128 0x15
 5193 067d 9E200000 		.4byte	.LASF137
 5194 0681 0530     		.2byte	0x3005
 5195 0683 15       		.uleb128 0x15
 5196 0684 03020000 		.4byte	.LASF138
 5197 0688 0630     		.2byte	0x3006
 5198 068a 15       		.uleb128 0x15
 5199 068b 99250000 		.4byte	.LASF139
 5200 068f 0730     		.2byte	0x3007
 5201 0691 15       		.uleb128 0x15
 5202 0692 41170000 		.4byte	.LASF140
 5203 0696 0830     		.2byte	0x3008
 5204 0698 15       		.uleb128 0x15
 5205 0699 0F0F0000 		.4byte	.LASF141
 5206 069d 0930     		.2byte	0x3009
 5207 069f 15       		.uleb128 0x15
 5208 06a0 7E200000 		.4byte	.LASF142
 5209 06a4 0A30     		.2byte	0x300a
 5210 06a6 15       		.uleb128 0x15
 5211 06a7 C3110000 		.4byte	.LASF143
 5212 06ab 0B30     		.2byte	0x300b
 5213 06ad 15       		.uleb128 0x15
 5214 06ae 59010000 		.4byte	.LASF144
 5215 06b2 0C30     		.2byte	0x300c
 5216 06b4 15       		.uleb128 0x15
 5217 06b5 10140000 		.4byte	.LASF145
 5218 06b9 1130     		.2byte	0x3011
 5219 06bb 15       		.uleb128 0x15
 5220 06bc 8E1C0000 		.4byte	.LASF146
 5221 06c0 1230     		.2byte	0x3012
 5222 06c2 15       		.uleb128 0x15
 5223 06c3 87210000 		.4byte	.LASF147
 5224 06c7 1330     		.2byte	0x3013
 5225 06c9 15       		.uleb128 0x15
 5226 06ca 901F0000 		.4byte	.LASF148
 5227 06ce 1430     		.2byte	0x3014
 5228 06d0 15       		.uleb128 0x15
 5229 06d1 E11D0000 		.4byte	.LASF149
 5230 06d5 1530     		.2byte	0x3015
 5231 06d7 15       		.uleb128 0x15
 5232 06d8 6D150000 		.4byte	.LASF150
 5233 06dc 1630     		.2byte	0x3016
 5234 06de 15       		.uleb128 0x15
 5235 06df 4B150000 		.4byte	.LASF151
 5236 06e3 1730     		.2byte	0x3017
 5237 06e5 15       		.uleb128 0x15
 5238 06e6 F6100000 		.4byte	.LASF152
 5239 06ea 1830     		.2byte	0x3018
 5240 06ec 15       		.uleb128 0x15
 5241 06ed 63190000 		.4byte	.LASF153
 5242 06f1 0040     		.2byte	0x4000
 5243 06f3 15       		.uleb128 0x15
 5244 06f4 87040000 		.4byte	.LASF154
 5245 06f8 0140     		.2byte	0x4001
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 192


 5246 06fa 15       		.uleb128 0x15
 5247 06fb CD240000 		.4byte	.LASF155
 5248 06ff 0240     		.2byte	0x4002
 5249 0701 15       		.uleb128 0x15
 5250 0702 12050000 		.4byte	.LASF156
 5251 0706 0340     		.2byte	0x4003
 5252 0708 15       		.uleb128 0x15
 5253 0709 74140000 		.4byte	.LASF157
 5254 070d 0440     		.2byte	0x4004
 5255 070f 15       		.uleb128 0x15
 5256 0710 AA260000 		.4byte	.LASF158
 5257 0714 0540     		.2byte	0x4005
 5258 0716 15       		.uleb128 0x15
 5259 0717 C5000000 		.4byte	.LASF159
 5260 071b 0640     		.2byte	0x4006
 5261 071d 15       		.uleb128 0x15
 5262 071e 5D0D0000 		.4byte	.LASF160
 5263 0722 0740     		.2byte	0x4007
 5264 0724 15       		.uleb128 0x15
 5265 0725 B1030000 		.4byte	.LASF161
 5266 0729 0840     		.2byte	0x4008
 5267 072b 15       		.uleb128 0x15
 5268 072c 410C0000 		.4byte	.LASF162
 5269 0730 0940     		.2byte	0x4009
 5270 0732 15       		.uleb128 0x15
 5271 0733 99270000 		.4byte	.LASF163
 5272 0737 0A40     		.2byte	0x400a
 5273 0739 15       		.uleb128 0x15
 5274 073a 71120000 		.4byte	.LASF164
 5275 073e 0B40     		.2byte	0x400b
 5276 0740 15       		.uleb128 0x15
 5277 0741 58180000 		.4byte	.LASF165
 5278 0745 0C40     		.2byte	0x400c
 5279 0747 15       		.uleb128 0x15
 5280 0748 2D0E0000 		.4byte	.LASF166
 5281 074c 0D40     		.2byte	0x400d
 5282 074e 15       		.uleb128 0x15
 5283 074f C8190000 		.4byte	.LASF167
 5284 0753 0E40     		.2byte	0x400e
 5285 0755 15       		.uleb128 0x15
 5286 0756 ED0C0000 		.4byte	.LASF168
 5287 075a 0F40     		.2byte	0x400f
 5288 075c 15       		.uleb128 0x15
 5289 075d 44140000 		.4byte	.LASF169
 5290 0761 1040     		.2byte	0x4010
 5291 0763 15       		.uleb128 0x15
 5292 0764 3D230000 		.4byte	.LASF170
 5293 0768 1140     		.2byte	0x4011
 5294 076a 15       		.uleb128 0x15
 5295 076b 5E0F0000 		.4byte	.LASF171
 5296 076f 1240     		.2byte	0x4012
 5297 0771 15       		.uleb128 0x15
 5298 0772 6F1E0000 		.4byte	.LASF172
 5299 0776 1340     		.2byte	0x4013
 5300 0778 15       		.uleb128 0x15
 5301 0779 A7190000 		.4byte	.LASF173
 5302 077d 1440     		.2byte	0x4014
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 193


 5303 077f 15       		.uleb128 0x15
 5304 0780 6A070000 		.4byte	.LASF174
 5305 0784 1540     		.2byte	0x4015
 5306 0786 15       		.uleb128 0x15
 5307 0787 53020000 		.4byte	.LASF175
 5308 078b 1640     		.2byte	0x4016
 5309 078d 15       		.uleb128 0x15
 5310 078e A61B0000 		.4byte	.LASF176
 5311 0792 1740     		.2byte	0x4017
 5312 0794 15       		.uleb128 0x15
 5313 0795 04160000 		.4byte	.LASF177
 5314 0799 1840     		.2byte	0x4018
 5315 079b 15       		.uleb128 0x15
 5316 079c F91C0000 		.4byte	.LASF178
 5317 07a0 1940     		.2byte	0x4019
 5318 07a2 15       		.uleb128 0x15
 5319 07a3 F61B0000 		.4byte	.LASF179
 5320 07a7 0050     		.2byte	0x5000
 5321 07a9 15       		.uleb128 0x15
 5322 07aa B6050000 		.4byte	.LASF180
 5323 07ae 0150     		.2byte	0x5001
 5324 07b0 15       		.uleb128 0x15
 5325 07b1 26240000 		.4byte	.LASF181
 5326 07b5 0250     		.2byte	0x5002
 5327 07b7 15       		.uleb128 0x15
 5328 07b8 8B240000 		.4byte	.LASF182
 5329 07bc 0350     		.2byte	0x5003
 5330 07be 15       		.uleb128 0x15
 5331 07bf 27080000 		.4byte	.LASF183
 5332 07c3 0450     		.2byte	0x5004
 5333 07c5 15       		.uleb128 0x15
 5334 07c6 111C0000 		.4byte	.LASF184
 5335 07ca 0550     		.2byte	0x5005
 5336 07cc 15       		.uleb128 0x15
 5337 07cd A8120000 		.4byte	.LASF185
 5338 07d1 0650     		.2byte	0x5006
 5339 07d3 15       		.uleb128 0x15
 5340 07d4 C2040000 		.4byte	.LASF186
 5341 07d8 0750     		.2byte	0x5007
 5342 07da 15       		.uleb128 0x15
 5343 07db 790E0000 		.4byte	.LASF187
 5344 07df 0850     		.2byte	0x5008
 5345 07e1 15       		.uleb128 0x15
 5346 07e2 97080000 		.4byte	.LASF188
 5347 07e6 0950     		.2byte	0x5009
 5348 07e8 15       		.uleb128 0x15
 5349 07e9 A6000000 		.4byte	.LASF189
 5350 07ed 0A50     		.2byte	0x500a
 5351 07ef 15       		.uleb128 0x15
 5352 07f0 96050000 		.4byte	.LASF190
 5353 07f4 0B50     		.2byte	0x500b
 5354 07f6 15       		.uleb128 0x15
 5355 07f7 731C0000 		.4byte	.LASF191
 5356 07fb 0C50     		.2byte	0x500c
 5357 07fd 15       		.uleb128 0x15
 5358 07fe C40F0000 		.4byte	.LASF192
 5359 0802 0D50     		.2byte	0x500d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 194


 5360 0804 15       		.uleb128 0x15
 5361 0805 7A250000 		.4byte	.LASF193
 5362 0809 0E50     		.2byte	0x500e
 5363 080b 15       		.uleb128 0x15
 5364 080c BC0D0000 		.4byte	.LASF194
 5365 0810 0F50     		.2byte	0x500f
 5366 0812 15       		.uleb128 0x15
 5367 0813 331F0000 		.4byte	.LASF195
 5368 0817 1050     		.2byte	0x5010
 5369 0819 15       		.uleb128 0x15
 5370 081a DA070000 		.4byte	.LASF196
 5371 081e 1150     		.2byte	0x5011
 5372 0820 15       		.uleb128 0x15
 5373 0821 7D010000 		.4byte	.LASF197
 5374 0825 1250     		.2byte	0x5012
 5375 0827 15       		.uleb128 0x15
 5376 0828 A3090000 		.4byte	.LASF198
 5377 082c 1350     		.2byte	0x5013
 5378 082e 15       		.uleb128 0x15
 5379 082f 46080000 		.4byte	.LASF199
 5380 0833 1450     		.2byte	0x5014
 5381 0835 15       		.uleb128 0x15
 5382 0836 D20A0000 		.4byte	.LASF200
 5383 083a 1550     		.2byte	0x5015
 5384 083c 15       		.uleb128 0x15
 5385 083d AA240000 		.4byte	.LASF201
 5386 0841 1650     		.2byte	0x5016
 5387 0843 15       		.uleb128 0x15
 5388 0844 66060000 		.4byte	.LASF202
 5389 0848 1750     		.2byte	0x5017
 5390 084a 15       		.uleb128 0x15
 5391 084b A2220000 		.4byte	.LASF203
 5392 084f 1850     		.2byte	0x5018
 5393 0851 15       		.uleb128 0x15
 5394 0852 CD250000 		.4byte	.LASF204
 5395 0856 0060     		.2byte	0x6000
 5396 0858 15       		.uleb128 0x15
 5397 0859 6E230000 		.4byte	.LASF205
 5398 085d 0160     		.2byte	0x6001
 5399 085f 15       		.uleb128 0x15
 5400 0860 57100000 		.4byte	.LASF206
 5401 0864 0260     		.2byte	0x6002
 5402 0866 15       		.uleb128 0x15
 5403 0867 88190000 		.4byte	.LASF207
 5404 086b 0360     		.2byte	0x6003
 5405 086d 15       		.uleb128 0x15
 5406 086e B5150000 		.4byte	.LASF208
 5407 0872 0460     		.2byte	0x6004
 5408 0874 15       		.uleb128 0x15
 5409 0875 E01E0000 		.4byte	.LASF209
 5410 0879 0560     		.2byte	0x6005
 5411 087b 15       		.uleb128 0x15
 5412 087c C90E0000 		.4byte	.LASF210
 5413 0880 0660     		.2byte	0x6006
 5414 0882 15       		.uleb128 0x15
 5415 0883 5A000000 		.4byte	.LASF211
 5416 0887 0760     		.2byte	0x6007
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 195


 5417 0889 15       		.uleb128 0x15
 5418 088a 01030000 		.4byte	.LASF212
 5419 088e 0860     		.2byte	0x6008
 5420 0890 15       		.uleb128 0x15
 5421 0891 16010000 		.4byte	.LASF213
 5422 0895 0960     		.2byte	0x6009
 5423 0897 15       		.uleb128 0x15
 5424 0898 C1180000 		.4byte	.LASF214
 5425 089c 0A60     		.2byte	0x600a
 5426 089e 15       		.uleb128 0x15
 5427 089f 5F0E0000 		.4byte	.LASF215
 5428 08a3 FFFF     		.2byte	0xffff
 5429 08a5 00       		.byte	0
 5430 08a6 07       		.uleb128 0x7
 5431 08a7 CA000000 		.4byte	0xca
 5432 08ab 0C       		.uleb128 0xc
 5433 08ac 02       		.byte	0x2
 5434 08ad 0C       		.byte	0xc
 5435 08ae 5B01     		.2byte	0x15b
 5436 08b0 CF080000 		.4byte	0x8cf
 5437 08b4 0D       		.uleb128 0xd
 5438 08b5 F2240000 		.4byte	.LASF216
 5439 08b9 0C       		.byte	0xc
 5440 08ba 6501     		.2byte	0x165
 5441 08bc CA000000 		.4byte	0xca
 5442 08c0 00       		.byte	0
 5443 08c1 0D       		.uleb128 0xd
 5444 08c2 970C0000 		.4byte	.LASF217
 5445 08c6 0C       		.byte	0xc
 5446 08c7 6901     		.2byte	0x169
 5447 08c9 CA000000 		.4byte	0xca
 5448 08cd 01       		.byte	0x1
 5449 08ce 00       		.byte	0
 5450 08cf 0B       		.uleb128 0xb
 5451 08d0 B11C0000 		.4byte	.LASF218
 5452 08d4 0C       		.byte	0xc
 5453 08d5 6B01     		.2byte	0x16b
 5454 08d7 AB080000 		.4byte	0x8ab
 5455 08db 16       		.uleb128 0x16
 5456 08dc 01       		.byte	0x1
 5457 08dd 5E000000 		.4byte	0x5e
 5458 08e1 0D       		.byte	0xd
 5459 08e2 7E       		.byte	0x7e
 5460 08e3 00090000 		.4byte	0x900
 5461 08e7 0A       		.uleb128 0xa
 5462 08e8 D2050000 		.4byte	.LASF219
 5463 08ec 00       		.byte	0
 5464 08ed 0A       		.uleb128 0xa
 5465 08ee CD0B0000 		.4byte	.LASF220
 5466 08f2 01       		.byte	0x1
 5467 08f3 0A       		.uleb128 0xa
 5468 08f4 320F0000 		.4byte	.LASF221
 5469 08f8 02       		.byte	0x2
 5470 08f9 0A       		.uleb128 0xa
 5471 08fa 26110000 		.4byte	.LASF222
 5472 08fe 03       		.byte	0x3
 5473 08ff 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 196


 5474 0900 02       		.uleb128 0x2
 5475 0901 5F0B0000 		.4byte	.LASF223
 5476 0905 0D       		.byte	0xd
 5477 0906 83       		.byte	0x83
 5478 0907 DB080000 		.4byte	0x8db
 5479 090b 16       		.uleb128 0x16
 5480 090c 01       		.byte	0x1
 5481 090d 5E000000 		.4byte	0x5e
 5482 0911 0D       		.byte	0xd
 5483 0912 87       		.byte	0x87
 5484 0913 48090000 		.4byte	0x948
 5485 0917 0A       		.uleb128 0xa
 5486 0918 EF080000 		.4byte	.LASF224
 5487 091c 00       		.byte	0
 5488 091d 0A       		.uleb128 0xa
 5489 091e A9070000 		.4byte	.LASF225
 5490 0922 01       		.byte	0x1
 5491 0923 0A       		.uleb128 0xa
 5492 0924 1F1A0000 		.4byte	.LASF226
 5493 0928 02       		.byte	0x2
 5494 0929 0A       		.uleb128 0xa
 5495 092a 41270000 		.4byte	.LASF227
 5496 092e 03       		.byte	0x3
 5497 092f 0A       		.uleb128 0xa
 5498 0930 B20C0000 		.4byte	.LASF228
 5499 0934 04       		.byte	0x4
 5500 0935 0A       		.uleb128 0xa
 5501 0936 56110000 		.4byte	.LASF229
 5502 093a 05       		.byte	0x5
 5503 093b 0A       		.uleb128 0xa
 5504 093c F4190000 		.4byte	.LASF230
 5505 0940 06       		.byte	0x6
 5506 0941 0A       		.uleb128 0xa
 5507 0942 04100000 		.4byte	.LASF231
 5508 0946 07       		.byte	0x7
 5509 0947 00       		.byte	0
 5510 0948 02       		.uleb128 0x2
 5511 0949 AB040000 		.4byte	.LASF232
 5512 094d 0D       		.byte	0xd
 5513 094e 90       		.byte	0x90
 5514 094f 0B090000 		.4byte	0x90b
 5515 0953 16       		.uleb128 0x16
 5516 0954 01       		.byte	0x1
 5517 0955 5E000000 		.4byte	0x5e
 5518 0959 0E       		.byte	0xe
 5519 095a 29       		.byte	0x29
 5520 095b 9C090000 		.4byte	0x99c
 5521 095f 0A       		.uleb128 0xa
 5522 0960 97170000 		.4byte	.LASF233
 5523 0964 00       		.byte	0
 5524 0965 0A       		.uleb128 0xa
 5525 0966 4C120000 		.4byte	.LASF234
 5526 096a 01       		.byte	0x1
 5527 096b 0A       		.uleb128 0xa
 5528 096c 31040000 		.4byte	.LASF235
 5529 0970 02       		.byte	0x2
 5530 0971 0A       		.uleb128 0xa
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 197


 5531 0972 541D0000 		.4byte	.LASF236
 5532 0976 03       		.byte	0x3
 5533 0977 0A       		.uleb128 0xa
 5534 0978 A01A0000 		.4byte	.LASF237
 5535 097c 04       		.byte	0x4
 5536 097d 0A       		.uleb128 0xa
 5537 097e 00000000 		.4byte	.LASF238
 5538 0982 05       		.byte	0x5
 5539 0983 0A       		.uleb128 0xa
 5540 0984 57240000 		.4byte	.LASF239
 5541 0988 06       		.byte	0x6
 5542 0989 0A       		.uleb128 0xa
 5543 098a EA030000 		.4byte	.LASF240
 5544 098e 07       		.byte	0x7
 5545 098f 0A       		.uleb128 0xa
 5546 0990 9C0D0000 		.4byte	.LASF241
 5547 0994 08       		.byte	0x8
 5548 0995 0A       		.uleb128 0xa
 5549 0996 00010000 		.4byte	.LASF242
 5550 099a 09       		.byte	0x9
 5551 099b 00       		.byte	0
 5552 099c 16       		.uleb128 0x16
 5553 099d 01       		.byte	0x1
 5554 099e 5E000000 		.4byte	0x5e
 5555 09a2 0F       		.byte	0xf
 5556 09a3 28       		.byte	0x28
 5557 09a4 C7090000 		.4byte	0x9c7
 5558 09a8 0A       		.uleb128 0xa
 5559 09a9 EC150000 		.4byte	.LASF243
 5560 09ad 00       		.byte	0
 5561 09ae 0A       		.uleb128 0xa
 5562 09af 35000000 		.4byte	.LASF244
 5563 09b3 01       		.byte	0x1
 5564 09b4 0A       		.uleb128 0xa
 5565 09b5 9E150000 		.4byte	.LASF245
 5566 09b9 02       		.byte	0x2
 5567 09ba 0A       		.uleb128 0xa
 5568 09bb 3B1A0000 		.4byte	.LASF246
 5569 09bf 03       		.byte	0x3
 5570 09c0 0A       		.uleb128 0xa
 5571 09c1 9D100000 		.4byte	.LASF247
 5572 09c5 04       		.byte	0x4
 5573 09c6 00       		.byte	0
 5574 09c7 16       		.uleb128 0x16
 5575 09c8 01       		.byte	0x1
 5576 09c9 5E000000 		.4byte	0x5e
 5577 09cd 0F       		.byte	0xf
 5578 09ce 32       		.byte	0x32
 5579 09cf E6090000 		.4byte	0x9e6
 5580 09d3 0A       		.uleb128 0xa
 5581 09d4 4A200000 		.4byte	.LASF248
 5582 09d8 00       		.byte	0
 5583 09d9 0A       		.uleb128 0xa
 5584 09da E9200000 		.4byte	.LASF249
 5585 09de 01       		.byte	0x1
 5586 09df 0A       		.uleb128 0xa
 5587 09e0 5C220000 		.4byte	.LASF250
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 198


 5588 09e4 02       		.byte	0x2
 5589 09e5 00       		.byte	0
 5590 09e6 09       		.uleb128 0x9
 5591 09e7 01       		.byte	0x1
 5592 09e8 5E000000 		.4byte	0x5e
 5593 09ec 10       		.byte	0x10
 5594 09ed B108     		.2byte	0x8b1
 5595 09ef 060A0000 		.4byte	0xa06
 5596 09f3 0A       		.uleb128 0xa
 5597 09f4 46110000 		.4byte	.LASF251
 5598 09f8 00       		.byte	0
 5599 09f9 0A       		.uleb128 0xa
 5600 09fa 13210000 		.4byte	.LASF252
 5601 09fe 01       		.byte	0x1
 5602 09ff 0A       		.uleb128 0xa
 5603 0a00 EE000000 		.4byte	.LASF253
 5604 0a04 02       		.byte	0x2
 5605 0a05 00       		.byte	0
 5606 0a06 17       		.uleb128 0x17
 5607 0a07 14       		.byte	0x14
 5608 0a08 11       		.byte	0x11
 5609 0a09 3B       		.byte	0x3b
 5610 0a0a 4B0A0000 		.4byte	0xa4b
 5611 0a0e 0F       		.uleb128 0xf
 5612 0a0f 9F040000 		.4byte	.LASF254
 5613 0a13 11       		.byte	0x11
 5614 0a14 3D       		.byte	0x3d
 5615 0a15 EB000000 		.4byte	0xeb
 5616 0a19 00       		.byte	0
 5617 0a1a 0F       		.uleb128 0xf
 5618 0a1b AF0A0000 		.4byte	.LASF255
 5619 0a1f 11       		.byte	0x11
 5620 0a20 3E       		.byte	0x3e
 5621 0a21 EB000000 		.4byte	0xeb
 5622 0a25 04       		.byte	0x4
 5623 0a26 0F       		.uleb128 0xf
 5624 0a27 06050000 		.4byte	.LASF256
 5625 0a2b 11       		.byte	0x11
 5626 0a2c 3F       		.byte	0x3f
 5627 0a2d 4B0A0000 		.4byte	0xa4b
 5628 0a31 08       		.byte	0x8
 5629 0a32 0F       		.uleb128 0xf
 5630 0a33 C2250000 		.4byte	.LASF257
 5631 0a37 11       		.byte	0x11
 5632 0a38 40       		.byte	0x40
 5633 0a39 EB000000 		.4byte	0xeb
 5634 0a3d 0C       		.byte	0xc
 5635 0a3e 0F       		.uleb128 0xf
 5636 0a3f C6230000 		.4byte	.LASF258
 5637 0a43 11       		.byte	0x11
 5638 0a44 45       		.byte	0x45
 5639 0a45 EB000000 		.4byte	0xeb
 5640 0a49 10       		.byte	0x10
 5641 0a4a 00       		.byte	0
 5642 0a4b 06       		.uleb128 0x6
 5643 0a4c 04       		.byte	0x4
 5644 0a4d 510A0000 		.4byte	0xa51
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 199


 5645 0a51 07       		.uleb128 0x7
 5646 0a52 68050000 		.4byte	0x568
 5647 0a56 02       		.uleb128 0x2
 5648 0a57 0A190000 		.4byte	.LASF259
 5649 0a5b 11       		.byte	0x11
 5650 0a5c 48       		.byte	0x48
 5651 0a5d 060A0000 		.4byte	0xa06
 5652 0a61 02       		.uleb128 0x2
 5653 0a62 64170000 		.4byte	.LASF260
 5654 0a66 12       		.byte	0x12
 5655 0a67 4D       		.byte	0x4d
 5656 0a68 6C0A0000 		.4byte	0xa6c
 5657 0a6c 06       		.uleb128 0x6
 5658 0a6d 04       		.byte	0x4
 5659 0a6e 720A0000 		.4byte	0xa72
 5660 0a72 10       		.uleb128 0x10
 5661 0a73 7D0A0000 		.4byte	0xa7d
 5662 0a77 11       		.uleb128 0x11
 5663 0a78 B0000000 		.4byte	0xb0
 5664 0a7c 00       		.byte	0
 5665 0a7d 02       		.uleb128 0x2
 5666 0a7e 73030000 		.4byte	.LASF261
 5667 0a82 02       		.byte	0x2
 5668 0a83 61       		.byte	0x61
 5669 0a84 EB000000 		.4byte	0xeb
 5670 0a88 02       		.uleb128 0x2
 5671 0a89 8A160000 		.4byte	.LASF262
 5672 0a8d 02       		.byte	0x2
 5673 0a8e 62       		.byte	0x62
 5674 0a8f 89000000 		.4byte	0x89
 5675 0a93 02       		.uleb128 0x2
 5676 0a94 E3080000 		.4byte	.LASF263
 5677 0a98 02       		.byte	0x2
 5678 0a99 63       		.byte	0x63
 5679 0a9a 9B000000 		.4byte	0x9b
 5680 0a9e 02       		.uleb128 0x2
 5681 0a9f C1130000 		.4byte	.LASF264
 5682 0aa3 02       		.byte	0x2
 5683 0aa4 69       		.byte	0x69
 5684 0aa5 EB000000 		.4byte	0xeb
 5685 0aa9 13       		.uleb128 0x13
 5686 0aaa B0000000 		.4byte	0xb0
 5687 0aae B90A0000 		.4byte	0xab9
 5688 0ab2 14       		.uleb128 0x14
 5689 0ab3 A9000000 		.4byte	0xa9
 5690 0ab7 04       		.byte	0x4
 5691 0ab8 00       		.byte	0
 5692 0ab9 0E       		.uleb128 0xe
 5693 0aba A40B0000 		.4byte	.LASF265
 5694 0abe 14       		.byte	0x14
 5695 0abf 13       		.byte	0x13
 5696 0ac0 B5       		.byte	0xb5
 5697 0ac1 020B0000 		.4byte	0xb02
 5698 0ac5 0F       		.uleb128 0xf
 5699 0ac6 A01D0000 		.4byte	.LASF266
 5700 0aca 13       		.byte	0x13
 5701 0acb B8       		.byte	0xb8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 200


 5702 0acc 9E0A0000 		.4byte	0xa9e
 5703 0ad0 00       		.byte	0
 5704 0ad1 0F       		.uleb128 0xf
 5705 0ad2 73170000 		.4byte	.LASF267
 5706 0ad6 13       		.byte	0x13
 5707 0ad7 B9       		.byte	0xb9
 5708 0ad8 020B0000 		.4byte	0xb02
 5709 0adc 04       		.byte	0x4
 5710 0add 0F       		.uleb128 0xf
 5711 0ade FB240000 		.4byte	.LASF268
 5712 0ae2 13       		.byte	0x13
 5713 0ae3 BA       		.byte	0xba
 5714 0ae4 020B0000 		.4byte	0xb02
 5715 0ae8 08       		.byte	0x8
 5716 0ae9 0F       		.uleb128 0xf
 5717 0aea BE230000 		.4byte	.LASF269
 5718 0aee 13       		.byte	0x13
 5719 0aef BB       		.byte	0xbb
 5720 0af0 B0000000 		.4byte	0xb0
 5721 0af4 0C       		.byte	0xc
 5722 0af5 0F       		.uleb128 0xf
 5723 0af6 2B1E0000 		.4byte	.LASF270
 5724 0afa 13       		.byte	0x13
 5725 0afb BC       		.byte	0xbc
 5726 0afc B0000000 		.4byte	0xb0
 5727 0b00 10       		.byte	0x10
 5728 0b01 00       		.byte	0
 5729 0b02 06       		.uleb128 0x6
 5730 0b03 04       		.byte	0x4
 5731 0b04 B90A0000 		.4byte	0xab9
 5732 0b08 02       		.uleb128 0x2
 5733 0b09 E7110000 		.4byte	.LASF271
 5734 0b0d 13       		.byte	0x13
 5735 0b0e BF       		.byte	0xbf
 5736 0b0f B90A0000 		.4byte	0xab9
 5737 0b13 0E       		.uleb128 0xe
 5738 0b14 0B0E0000 		.4byte	.LASF272
 5739 0b18 0C       		.byte	0xc
 5740 0b19 13       		.byte	0x13
 5741 0b1a C1       		.byte	0xc1
 5742 0b1b 440B0000 		.4byte	0xb44
 5743 0b1f 0F       		.uleb128 0xf
 5744 0b20 A01D0000 		.4byte	.LASF266
 5745 0b24 13       		.byte	0x13
 5746 0b25 C4       		.byte	0xc4
 5747 0b26 9E0A0000 		.4byte	0xa9e
 5748 0b2a 00       		.byte	0
 5749 0b2b 0F       		.uleb128 0xf
 5750 0b2c 73170000 		.4byte	.LASF267
 5751 0b30 13       		.byte	0x13
 5752 0b31 C5       		.byte	0xc5
 5753 0b32 020B0000 		.4byte	0xb02
 5754 0b36 04       		.byte	0x4
 5755 0b37 0F       		.uleb128 0xf
 5756 0b38 FB240000 		.4byte	.LASF268
 5757 0b3c 13       		.byte	0x13
 5758 0b3d C6       		.byte	0xc6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 201


 5759 0b3e 020B0000 		.4byte	0xb02
 5760 0b42 08       		.byte	0x8
 5761 0b43 00       		.byte	0
 5762 0b44 02       		.uleb128 0x2
 5763 0b45 54130000 		.4byte	.LASF273
 5764 0b49 13       		.byte	0x13
 5765 0b4a C8       		.byte	0xc8
 5766 0b4b 130B0000 		.4byte	0xb13
 5767 0b4f 0E       		.uleb128 0xe
 5768 0b50 39050000 		.4byte	.LASF274
 5769 0b54 14       		.byte	0x14
 5770 0b55 13       		.byte	0x13
 5771 0b56 CD       		.byte	0xcd
 5772 0b57 800B0000 		.4byte	0xb80
 5773 0b5b 0F       		.uleb128 0xf
 5774 0b5c 4A000000 		.4byte	.LASF275
 5775 0b60 13       		.byte	0x13
 5776 0b61 D0       		.byte	0xd0
 5777 0b62 930A0000 		.4byte	0xa93
 5778 0b66 00       		.byte	0
 5779 0b67 0F       		.uleb128 0xf
 5780 0b68 62030000 		.4byte	.LASF276
 5781 0b6c 13       		.byte	0x13
 5782 0b6d D1       		.byte	0xd1
 5783 0b6e 800B0000 		.4byte	0xb80
 5784 0b72 04       		.byte	0x4
 5785 0b73 0F       		.uleb128 0xf
 5786 0b74 D9120000 		.4byte	.LASF277
 5787 0b78 13       		.byte	0x13
 5788 0b79 D2       		.byte	0xd2
 5789 0b7a 440B0000 		.4byte	0xb44
 5790 0b7e 08       		.byte	0x8
 5791 0b7f 00       		.byte	0
 5792 0b80 06       		.uleb128 0x6
 5793 0b81 04       		.byte	0x4
 5794 0b82 080B0000 		.4byte	0xb08
 5795 0b86 02       		.uleb128 0x2
 5796 0b87 ED190000 		.4byte	.LASF278
 5797 0b8b 13       		.byte	0x13
 5798 0b8c D4       		.byte	0xd4
 5799 0b8d 4F0B0000 		.4byte	0xb4f
 5800 0b91 02       		.uleb128 0x2
 5801 0b92 E6180000 		.4byte	.LASF279
 5802 0b96 14       		.byte	0x14
 5803 0b97 67       		.byte	0x67
 5804 0b98 B0000000 		.4byte	0xb0
 5805 0b9c 16       		.uleb128 0x16
 5806 0b9d 01       		.byte	0x1
 5807 0b9e 5E000000 		.4byte	0x5e
 5808 0ba2 14       		.byte	0x14
 5809 0ba3 7C       		.byte	0x7c
 5810 0ba4 C70B0000 		.4byte	0xbc7
 5811 0ba8 0A       		.uleb128 0xa
 5812 0ba9 EC020000 		.4byte	.LASF280
 5813 0bad 00       		.byte	0
 5814 0bae 0A       		.uleb128 0xa
 5815 0baf B81A0000 		.4byte	.LASF281
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 202


 5816 0bb3 01       		.byte	0x1
 5817 0bb4 0A       		.uleb128 0xa
 5818 0bb5 F90D0000 		.4byte	.LASF282
 5819 0bb9 02       		.byte	0x2
 5820 0bba 0A       		.uleb128 0xa
 5821 0bbb BB0A0000 		.4byte	.LASF283
 5822 0bbf 03       		.byte	0x3
 5823 0bc0 0A       		.uleb128 0xa
 5824 0bc1 F9110000 		.4byte	.LASF284
 5825 0bc5 04       		.byte	0x4
 5826 0bc6 00       		.byte	0
 5827 0bc7 02       		.uleb128 0x2
 5828 0bc8 AE0D0000 		.4byte	.LASF285
 5829 0bcc 14       		.byte	0x14
 5830 0bcd 82       		.byte	0x82
 5831 0bce 9C0B0000 		.4byte	0xb9c
 5832 0bd2 0E       		.uleb128 0xe
 5833 0bd3 1C110000 		.4byte	.LASF286
 5834 0bd7 08       		.byte	0x8
 5835 0bd8 14       		.byte	0x14
 5836 0bd9 87       		.byte	0x87
 5837 0bda F70B0000 		.4byte	0xbf7
 5838 0bde 0F       		.uleb128 0xf
 5839 0bdf 09060000 		.4byte	.LASF287
 5840 0be3 14       		.byte	0x14
 5841 0be4 89       		.byte	0x89
 5842 0be5 880A0000 		.4byte	0xa88
 5843 0be9 00       		.byte	0
 5844 0bea 0F       		.uleb128 0xf
 5845 0beb 23170000 		.4byte	.LASF288
 5846 0bef 14       		.byte	0x14
 5847 0bf0 8A       		.byte	0x8a
 5848 0bf1 9E0A0000 		.4byte	0xa9e
 5849 0bf5 04       		.byte	0x4
 5850 0bf6 00       		.byte	0
 5851 0bf7 02       		.uleb128 0x2
 5852 0bf8 340D0000 		.4byte	.LASF289
 5853 0bfc 14       		.byte	0x14
 5854 0bfd 8B       		.byte	0x8b
 5855 0bfe D20B0000 		.4byte	0xbd2
 5856 0c02 0E       		.uleb128 0xe
 5857 0c03 001B0000 		.4byte	.LASF290
 5858 0c07 0C       		.byte	0xc
 5859 0c08 14       		.byte	0x14
 5860 0c09 90       		.byte	0x90
 5861 0c0a 330C0000 		.4byte	0xc33
 5862 0c0e 0F       		.uleb128 0xf
 5863 0c0f E9210000 		.4byte	.LASF291
 5864 0c13 14       		.byte	0x14
 5865 0c14 92       		.byte	0x92
 5866 0c15 B0000000 		.4byte	0xb0
 5867 0c19 00       		.byte	0
 5868 0c1a 0F       		.uleb128 0xf
 5869 0c1b 7A160000 		.4byte	.LASF292
 5870 0c1f 14       		.byte	0x14
 5871 0c20 93       		.byte	0x93
 5872 0c21 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 203


 5873 0c25 04       		.byte	0x4
 5874 0c26 0F       		.uleb128 0xf
 5875 0c27 D4030000 		.4byte	.LASF293
 5876 0c2b 14       		.byte	0x14
 5877 0c2c 94       		.byte	0x94
 5878 0c2d EB000000 		.4byte	0xeb
 5879 0c31 08       		.byte	0x8
 5880 0c32 00       		.byte	0
 5881 0c33 02       		.uleb128 0x2
 5882 0c34 D5140000 		.4byte	.LASF294
 5883 0c38 14       		.byte	0x14
 5884 0c39 95       		.byte	0x95
 5885 0c3a 020C0000 		.4byte	0xc02
 5886 0c3e 07       		.uleb128 0x7
 5887 0c3f BF000000 		.4byte	0xbf
 5888 0c43 06       		.uleb128 0x6
 5889 0c44 04       		.byte	0x4
 5890 0c45 7D0A0000 		.4byte	0xa7d
 5891 0c49 12       		.uleb128 0x12
 5892 0c4a EF010000 		.4byte	.LASF295
 5893 0c4e 60       		.byte	0x60
 5894 0c4f 01       		.byte	0x1
 5895 0c50 2501     		.2byte	0x125
 5896 0c52 CC0C0000 		.4byte	0xccc
 5897 0c56 0D       		.uleb128 0xd
 5898 0c57 6D260000 		.4byte	.LASF296
 5899 0c5b 01       		.byte	0x1
 5900 0c5c 2701     		.2byte	0x127
 5901 0c5e CC0C0000 		.4byte	0xccc
 5902 0c62 00       		.byte	0
 5903 0c63 0D       		.uleb128 0xd
 5904 0c64 3B060000 		.4byte	.LASF297
 5905 0c68 01       		.byte	0x1
 5906 0c69 2D01     		.2byte	0x12d
 5907 0c6b 080B0000 		.4byte	0xb08
 5908 0c6f 04       		.byte	0x4
 5909 0c70 0D       		.uleb128 0xd
 5910 0c71 5F230000 		.4byte	.LASF298
 5911 0c75 01       		.byte	0x1
 5912 0c76 2E01     		.2byte	0x12e
 5913 0c78 080B0000 		.4byte	0xb08
 5914 0c7c 18       		.byte	0x18
 5915 0c7d 0D       		.uleb128 0xd
 5916 0c7e CF010000 		.4byte	.LASF299
 5917 0c82 01       		.byte	0x1
 5918 0c83 2F01     		.2byte	0x12f
 5919 0c85 930A0000 		.4byte	0xa93
 5920 0c89 2C       		.byte	0x2c
 5921 0c8a 0D       		.uleb128 0xd
 5922 0c8b 971E0000 		.4byte	.LASF300
 5923 0c8f 01       		.byte	0x1
 5924 0c90 3001     		.2byte	0x130
 5925 0c92 430C0000 		.4byte	0xc43
 5926 0c96 30       		.byte	0x30
 5927 0c97 0D       		.uleb128 0xd
 5928 0c98 05220000 		.4byte	.LASF301
 5929 0c9c 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 204


 5930 0c9d 3101     		.2byte	0x131
 5931 0c9f D70C0000 		.4byte	0xcd7
 5932 0ca3 34       		.byte	0x34
 5933 0ca4 0D       		.uleb128 0xd
 5934 0ca5 170D0000 		.4byte	.LASF302
 5935 0ca9 01       		.byte	0x1
 5936 0caa 4A01     		.2byte	0x14a
 5937 0cac A90A0000 		.4byte	0xaa9
 5938 0cb0 44       		.byte	0x44
 5939 0cb1 0D       		.uleb128 0xd
 5940 0cb2 E6100000 		.4byte	.LASF303
 5941 0cb6 01       		.byte	0x1
 5942 0cb7 5D01     		.2byte	0x15d
 5943 0cb9 F6000000 		.4byte	0xf6
 5944 0cbd 58       		.byte	0x58
 5945 0cbe 0D       		.uleb128 0xd
 5946 0cbf 31120000 		.4byte	.LASF304
 5947 0cc3 01       		.byte	0x1
 5948 0cc4 5E01     		.2byte	0x15e
 5949 0cc6 FB000000 		.4byte	0xfb
 5950 0cca 5C       		.byte	0x5c
 5951 0ccb 00       		.byte	0
 5952 0ccc 06       		.uleb128 0x6
 5953 0ccd 04       		.byte	0x4
 5954 0cce D20C0000 		.4byte	0xcd2
 5955 0cd2 08       		.uleb128 0x8
 5956 0cd3 7D0A0000 		.4byte	0xa7d
 5957 0cd7 13       		.uleb128 0x13
 5958 0cd8 B8000000 		.4byte	0xb8
 5959 0cdc E70C0000 		.4byte	0xce7
 5960 0ce0 14       		.uleb128 0x14
 5961 0ce1 A9000000 		.4byte	0xa9
 5962 0ce5 0F       		.byte	0xf
 5963 0ce6 00       		.byte	0
 5964 0ce7 0B       		.uleb128 0xb
 5965 0ce8 B1080000 		.4byte	.LASF305
 5966 0cec 01       		.byte	0x1
 5967 0ced 6B01     		.2byte	0x16b
 5968 0cef 490C0000 		.4byte	0xc49
 5969 0cf3 0B       		.uleb128 0xb
 5970 0cf4 AB230000 		.4byte	.LASF306
 5971 0cf8 01       		.byte	0x1
 5972 0cf9 6F01     		.2byte	0x16f
 5973 0cfb E70C0000 		.4byte	0xce7
 5974 0cff 18       		.uleb128 0x18
 5975 0d00 18150000 		.4byte	.LASF472
 5976 0d04 02       		.byte	0x2
 5977 0d05 D3       		.byte	0xd3
 5978 0d06 EB000000 		.4byte	0xeb
 5979 0d0a 03       		.byte	0x3
 5980 0d0b 260D0000 		.4byte	0xd26
 5981 0d0f 19       		.uleb128 0x19
 5982 0d10 7E090000 		.4byte	.LASF307
 5983 0d14 02       		.byte	0x2
 5984 0d15 D5       		.byte	0xd5
 5985 0d16 EB000000 		.4byte	0xeb
 5986 0d1a 19       		.uleb128 0x19
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 205


 5987 0d1b 4D160000 		.4byte	.LASF308
 5988 0d1f 02       		.byte	0x2
 5989 0d20 D5       		.byte	0xd5
 5990 0d21 EB000000 		.4byte	0xeb
 5991 0d25 00       		.byte	0
 5992 0d26 1A       		.uleb128 0x1a
 5993 0d27 18060000 		.4byte	.LASF473
 5994 0d2b 02       		.byte	0x2
 5995 0d2c E7       		.byte	0xe7
 5996 0d2d 03       		.byte	0x3
 5997 0d2e 3E0D0000 		.4byte	0xd3e
 5998 0d32 1B       		.uleb128 0x1b
 5999 0d33 FB180000 		.4byte	.LASF474
 6000 0d37 02       		.byte	0x2
 6001 0d38 E7       		.byte	0xe7
 6002 0d39 EB000000 		.4byte	0xeb
 6003 0d3d 00       		.byte	0
 6004 0d3e 1C       		.uleb128 0x1c
 6005 0d3f 371E0000 		.4byte	.LASF367
 6006 0d43 01       		.byte	0x1
 6007 0d44 7806     		.2byte	0x678
 6008 0d46 880A0000 		.4byte	0xa88
 6009 0d4a 00000000 		.4byte	.LFB721
 6010 0d4e 40000000 		.4byte	.LFE721-.LFB721
 6011 0d52 01       		.uleb128 0x1
 6012 0d53 9C       		.byte	0x9c
 6013 0d54 890D0000 		.4byte	0xd89
 6014 0d58 1D       		.uleb128 0x1d
 6015 0d59 871A0000 		.4byte	.LASF313
 6016 0d5d 01       		.byte	0x1
 6017 0d5e 7806     		.2byte	0x678
 6018 0d60 890D0000 		.4byte	0xd89
 6019 0d64 00000000 		.4byte	.LLST0
 6020 0d68 1E       		.uleb128 0x1e
 6021 0d69 F8200000 		.4byte	.LASF309
 6022 0d6d 01       		.byte	0x1
 6023 0d6e 7A06     		.2byte	0x67a
 6024 0d70 880A0000 		.4byte	0xa88
 6025 0d74 69000000 		.4byte	.LLST1
 6026 0d78 1E       		.uleb128 0x1e
 6027 0d79 BC250000 		.4byte	.LASF310
 6028 0d7d 01       		.byte	0x1
 6029 0d7e 7B06     		.2byte	0x67b
 6030 0d80 990D0000 		.4byte	0xd99
 6031 0d84 88000000 		.4byte	.LLST2
 6032 0d88 00       		.byte	0
 6033 0d89 07       		.uleb128 0x7
 6034 0d8a 910B0000 		.4byte	0xb91
 6035 0d8e 06       		.uleb128 0x6
 6036 0d8f 04       		.byte	0x4
 6037 0d90 940D0000 		.4byte	0xd94
 6038 0d94 07       		.uleb128 0x7
 6039 0d95 F30C0000 		.4byte	0xcf3
 6040 0d99 07       		.uleb128 0x7
 6041 0d9a 8E0D0000 		.4byte	0xd8e
 6042 0d9e 1F       		.uleb128 0x1f
 6043 0d9f 07170000 		.4byte	.LASF311
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 206


 6044 0da3 01       		.byte	0x1
 6045 0da4 3E0E     		.2byte	0xe3e
 6046 0da6 00000000 		.4byte	.LFB748
 6047 0daa 2C000000 		.4byte	.LFE748-.LFB748
 6048 0dae 01       		.uleb128 0x1
 6049 0daf 9C       		.byte	0x9c
 6050 0db0 C50D0000 		.4byte	0xdc5
 6051 0db4 1E       		.uleb128 0x1e
 6052 0db5 BC250000 		.4byte	.LASF310
 6053 0db9 01       		.byte	0x1
 6054 0dba 400E     		.2byte	0xe40
 6055 0dbc C50D0000 		.4byte	0xdc5
 6056 0dc0 F1000000 		.4byte	.LLST3
 6057 0dc4 00       		.byte	0
 6058 0dc5 06       		.uleb128 0x6
 6059 0dc6 04       		.byte	0x4
 6060 0dc7 F30C0000 		.4byte	0xcf3
 6061 0dcb 1F       		.uleb128 0x1f
 6062 0dcc B3100000 		.4byte	.LASF312
 6063 0dd0 01       		.byte	0x1
 6064 0dd1 080E     		.2byte	0xe08
 6065 0dd3 00000000 		.4byte	.LFB747
 6066 0dd7 12000000 		.4byte	.LFE747-.LFB747
 6067 0ddb 01       		.uleb128 0x1
 6068 0ddc 9C       		.byte	0x9c
 6069 0ddd 0B0E0000 		.4byte	0xe0b
 6070 0de1 1D       		.uleb128 0x1d
 6071 0de2 BC250000 		.4byte	.LASF310
 6072 0de6 01       		.byte	0x1
 6073 0de7 080E     		.2byte	0xe08
 6074 0de9 C50D0000 		.4byte	0xdc5
 6075 0ded 04010000 		.4byte	.LLST4
 6076 0df1 20       		.uleb128 0x20
 6077 0df2 0A000000 		.4byte	.LVL12
 6078 0df6 96270000 		.4byte	0x2796
 6079 0dfa 21       		.uleb128 0x21
 6080 0dfb 10000000 		.4byte	.LVL13
 6081 0dff 96270000 		.4byte	0x2796
 6082 0e03 22       		.uleb128 0x22
 6083 0e04 01       		.uleb128 0x1
 6084 0e05 50       		.byte	0x50
 6085 0e06 02       		.uleb128 0x2
 6086 0e07 74       		.byte	0x74
 6087 0e08 00       		.sleb128 0
 6088 0e09 00       		.byte	0
 6089 0e0a 00       		.byte	0
 6090 0e0b 1F       		.uleb128 0x1f
 6091 0e0c 6C1D0000 		.4byte	.LASF314
 6092 0e10 01       		.byte	0x1
 6093 0e11 FF02     		.2byte	0x2ff
 6094 0e13 00000000 		.4byte	.LFB712
 6095 0e17 9E000000 		.4byte	.LFE712-.LFB712
 6096 0e1b 01       		.uleb128 0x1
 6097 0e1c 9C       		.byte	0x9c
 6098 0e1d 1B0F0000 		.4byte	0xf1b
 6099 0e21 1D       		.uleb128 0x1d
 6100 0e22 69140000 		.4byte	.LASF315
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 207


 6101 0e26 01       		.byte	0x1
 6102 0e27 FF02     		.2byte	0x2ff
 6103 0e29 610A0000 		.4byte	0xa61
 6104 0e2d 22010000 		.4byte	.LLST5
 6105 0e31 1D       		.uleb128 0x1d
 6106 0e32 BD0F0000 		.4byte	.LASF316
 6107 0e36 01       		.byte	0x1
 6108 0e37 0003     		.2byte	0x300
 6109 0e39 3E0C0000 		.4byte	0xc3e
 6110 0e3d 40010000 		.4byte	.LLST6
 6111 0e41 1D       		.uleb128 0x1d
 6112 0e42 3F120000 		.4byte	.LASF317
 6113 0e46 01       		.byte	0x1
 6114 0e47 0103     		.2byte	0x301
 6115 0e49 1B0F0000 		.4byte	0xf1b
 6116 0e4d 5E010000 		.4byte	.LLST7
 6117 0e51 1D       		.uleb128 0x1d
 6118 0e52 931D0000 		.4byte	.LASF318
 6119 0e56 01       		.byte	0x1
 6120 0e57 0203     		.2byte	0x302
 6121 0e59 200F0000 		.4byte	0xf20
 6122 0e5d 9B010000 		.4byte	.LLST8
 6123 0e61 1D       		.uleb128 0x1d
 6124 0e62 CF010000 		.4byte	.LASF299
 6125 0e66 01       		.byte	0x1
 6126 0e67 0303     		.2byte	0x303
 6127 0e69 930A0000 		.4byte	0xa93
 6128 0e6d B9010000 		.4byte	.LLST9
 6129 0e71 23       		.uleb128 0x23
 6130 0e72 FC260000 		.4byte	.LASF319
 6131 0e76 01       		.byte	0x1
 6132 0e77 0403     		.2byte	0x304
 6133 0e79 2B0F0000 		.4byte	0xf2b
 6134 0e7d 02       		.uleb128 0x2
 6135 0e7e 91       		.byte	0x91
 6136 0e7f 04       		.sleb128 4
 6137 0e80 23       		.uleb128 0x23
 6138 0e81 3B140000 		.4byte	.LASF320
 6139 0e85 01       		.byte	0x1
 6140 0e86 0503     		.2byte	0x305
 6141 0e88 C50D0000 		.4byte	0xdc5
 6142 0e8c 02       		.uleb128 0x2
 6143 0e8d 91       		.byte	0x91
 6144 0e8e 08       		.sleb128 8
 6145 0e8f 23       		.uleb128 0x23
 6146 0e90 82240000 		.4byte	.LASF321
 6147 0e94 01       		.byte	0x1
 6148 0e95 0603     		.2byte	0x306
 6149 0e97 3B0F0000 		.4byte	0xf3b
 6150 0e9b 02       		.uleb128 0x2
 6151 0e9c 91       		.byte	0x91
 6152 0e9d 0C       		.sleb128 12
 6153 0e9e 24       		.uleb128 0x24
 6154 0e9f 6D260000 		.4byte	.LASF296
 6155 0ea3 01       		.byte	0x1
 6156 0ea4 0803     		.2byte	0x308
 6157 0ea6 430C0000 		.4byte	0xc43
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 208


 6158 0eaa 01       		.uleb128 0x1
 6159 0eab 55       		.byte	0x55
 6160 0eac 25       		.uleb128 0x25
 6161 0ead 7800     		.ascii	"x\000"
 6162 0eaf 01       		.byte	0x1
 6163 0eb0 0903     		.2byte	0x309
 6164 0eb2 930A0000 		.4byte	0xa93
 6165 0eb6 D8010000 		.4byte	.LLST10
 6166 0eba 26       		.uleb128 0x26
 6167 0ebb 1C000000 		.4byte	.LVL18
 6168 0ebf A1270000 		.4byte	0x27a1
 6169 0ec3 D60E0000 		.4byte	0xed6
 6170 0ec7 22       		.uleb128 0x22
 6171 0ec8 01       		.uleb128 0x1
 6172 0ec9 51       		.byte	0x51
 6173 0eca 02       		.uleb128 0x2
 6174 0ecb 08       		.byte	0x8
 6175 0ecc A5       		.byte	0xa5
 6176 0ecd 22       		.uleb128 0x22
 6177 0ece 01       		.uleb128 0x1
 6178 0ecf 52       		.byte	0x52
 6179 0ed0 04       		.uleb128 0x4
 6180 0ed1 75       		.byte	0x75
 6181 0ed2 00       		.sleb128 0
 6182 0ed3 32       		.byte	0x32
 6183 0ed4 24       		.byte	0x24
 6184 0ed5 00       		.byte	0
 6185 0ed6 26       		.uleb128 0x26
 6186 0ed7 5A000000 		.4byte	.LVL25
 6187 0edb AC270000 		.4byte	0x27ac
 6188 0edf EA0E0000 		.4byte	0xeea
 6189 0ee3 22       		.uleb128 0x22
 6190 0ee4 01       		.uleb128 0x1
 6191 0ee5 50       		.byte	0x50
 6192 0ee6 02       		.uleb128 0x2
 6193 0ee7 74       		.byte	0x74
 6194 0ee8 04       		.sleb128 4
 6195 0ee9 00       		.byte	0
 6196 0eea 26       		.uleb128 0x26
 6197 0eeb 62000000 		.4byte	.LVL26
 6198 0eef AC270000 		.4byte	0x27ac
 6199 0ef3 FE0E0000 		.4byte	0xefe
 6200 0ef7 22       		.uleb128 0x22
 6201 0ef8 01       		.uleb128 0x1
 6202 0ef9 50       		.byte	0x50
 6203 0efa 02       		.uleb128 0x2
 6204 0efb 74       		.byte	0x74
 6205 0efc 18       		.sleb128 24
 6206 0efd 00       		.byte	0
 6207 0efe 21       		.uleb128 0x21
 6208 0eff 94000000 		.4byte	.LVL31
 6209 0f03 B8270000 		.4byte	0x27b8
 6210 0f07 22       		.uleb128 0x22
 6211 0f08 01       		.uleb128 0x1
 6212 0f09 50       		.byte	0x50
 6213 0f0a 02       		.uleb128 0x2
 6214 0f0b 75       		.byte	0x75
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 209


 6215 0f0c 00       		.sleb128 0
 6216 0f0d 22       		.uleb128 0x22
 6217 0f0e 01       		.uleb128 0x1
 6218 0f0f 51       		.byte	0x51
 6219 0f10 02       		.uleb128 0x2
 6220 0f11 7A       		.byte	0x7a
 6221 0f12 00       		.sleb128 0
 6222 0f13 22       		.uleb128 0x22
 6223 0f14 01       		.uleb128 0x1
 6224 0f15 52       		.byte	0x52
 6225 0f16 02       		.uleb128 0x2
 6226 0f17 78       		.byte	0x78
 6227 0f18 00       		.sleb128 0
 6228 0f19 00       		.byte	0
 6229 0f1a 00       		.byte	0
 6230 0f1b 07       		.uleb128 0x7
 6231 0f1c EB000000 		.4byte	0xeb
 6232 0f20 07       		.uleb128 0x7
 6233 0f21 B0000000 		.4byte	0xb0
 6234 0f25 06       		.uleb128 0x6
 6235 0f26 04       		.byte	0x4
 6236 0f27 910B0000 		.4byte	0xb91
 6237 0f2b 07       		.uleb128 0x7
 6238 0f2c 250F0000 		.4byte	0xf25
 6239 0f30 06       		.uleb128 0x6
 6240 0f31 04       		.byte	0x4
 6241 0f32 360F0000 		.4byte	0xf36
 6242 0f36 07       		.uleb128 0x7
 6243 0f37 330C0000 		.4byte	0xc33
 6244 0f3b 07       		.uleb128 0x7
 6245 0f3c 300F0000 		.4byte	0xf30
 6246 0f40 1F       		.uleb128 0x1f
 6247 0f41 93260000 		.4byte	.LASF322
 6248 0f45 01       		.byte	0x1
 6249 0f46 100D     		.2byte	0xd10
 6250 0f48 00000000 		.4byte	.LFB745
 6251 0f4c 58000000 		.4byte	.LFE745-.LFB745
 6252 0f50 01       		.uleb128 0x1
 6253 0f51 9C       		.byte	0x9c
 6254 0f52 E90F0000 		.4byte	0xfe9
 6255 0f56 1E       		.uleb128 0x1e
 6256 0f57 CF010000 		.4byte	.LASF299
 6257 0f5b 01       		.byte	0x1
 6258 0f5c 120D     		.2byte	0xd12
 6259 0f5e 930A0000 		.4byte	0xa93
 6260 0f62 02020000 		.4byte	.LLST11
 6261 0f66 26       		.uleb128 0x26
 6262 0f67 14000000 		.4byte	.LVL34
 6263 0f6b C3270000 		.4byte	0x27c3
 6264 0f6f 870F0000 		.4byte	0xf87
 6265 0f73 22       		.uleb128 0x22
 6266 0f74 01       		.uleb128 0x1
 6267 0f75 50       		.byte	0x50
 6268 0f76 0F       		.uleb128 0xf
 6269 0f77 74       		.byte	0x74
 6270 0f78 00       		.sleb128 0
 6271 0f79 32       		.byte	0x32
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 210


 6272 0f7a 24       		.byte	0x24
 6273 0f7b 74       		.byte	0x74
 6274 0f7c 00       		.sleb128 0
 6275 0f7d 22       		.byte	0x22
 6276 0f7e 32       		.byte	0x32
 6277 0f7f 24       		.byte	0x24
 6278 0f80 03       		.byte	0x3
 6279 0f81 30000000 		.4byte	.LANCHOR0+48
 6280 0f85 22       		.byte	0x22
 6281 0f86 00       		.byte	0
 6282 0f87 26       		.uleb128 0x26
 6283 0f88 26000000 		.4byte	.LVL37
 6284 0f8c C3270000 		.4byte	0x27c3
 6285 0f90 9B0F0000 		.4byte	0xf9b
 6286 0f94 22       		.uleb128 0x22
 6287 0f95 01       		.uleb128 0x1
 6288 0f96 50       		.byte	0x50
 6289 0f97 02       		.uleb128 0x2
 6290 0f98 76       		.byte	0x76
 6291 0f99 00       		.sleb128 0
 6292 0f9a 00       		.byte	0
 6293 0f9b 26       		.uleb128 0x26
 6294 0f9c 30000000 		.4byte	.LVL38
 6295 0fa0 C3270000 		.4byte	0x27c3
 6296 0fa4 AF0F0000 		.4byte	0xfaf
 6297 0fa8 22       		.uleb128 0x22
 6298 0fa9 01       		.uleb128 0x1
 6299 0faa 50       		.byte	0x50
 6300 0fab 02       		.uleb128 0x2
 6301 0fac 75       		.byte	0x75
 6302 0fad 00       		.sleb128 0
 6303 0fae 00       		.byte	0
 6304 0faf 26       		.uleb128 0x26
 6305 0fb0 38000000 		.4byte	.LVL39
 6306 0fb4 C3270000 		.4byte	0x27c3
 6307 0fb8 C30F0000 		.4byte	0xfc3
 6308 0fbc 22       		.uleb128 0x22
 6309 0fbd 01       		.uleb128 0x1
 6310 0fbe 50       		.byte	0x50
 6311 0fbf 02       		.uleb128 0x2
 6312 0fc0 74       		.byte	0x74
 6313 0fc1 14       		.sleb128 20
 6314 0fc2 00       		.byte	0
 6315 0fc3 26       		.uleb128 0x26
 6316 0fc4 40000000 		.4byte	.LVL40
 6317 0fc8 C3270000 		.4byte	0x27c3
 6318 0fcc D80F0000 		.4byte	0xfd8
 6319 0fd0 22       		.uleb128 0x22
 6320 0fd1 01       		.uleb128 0x1
 6321 0fd2 50       		.byte	0x50
 6322 0fd3 03       		.uleb128 0x3
 6323 0fd4 74       		.byte	0x74
 6324 0fd5 E803     		.sleb128 488
 6325 0fd7 00       		.byte	0
 6326 0fd8 21       		.uleb128 0x21
 6327 0fd9 46000000 		.4byte	.LVL41
 6328 0fdd C3270000 		.4byte	0x27c3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 211


 6329 0fe1 22       		.uleb128 0x22
 6330 0fe2 01       		.uleb128 0x1
 6331 0fe3 50       		.byte	0x50
 6332 0fe4 02       		.uleb128 0x2
 6333 0fe5 74       		.byte	0x74
 6334 0fe6 00       		.sleb128 0
 6335 0fe7 00       		.byte	0
 6336 0fe8 00       		.byte	0
 6337 0fe9 1F       		.uleb128 0x1f
 6338 0fea D4130000 		.4byte	.LASF323
 6339 0fee 01       		.byte	0x1
 6340 0fef C303     		.2byte	0x3c3
 6341 0ff1 00000000 		.4byte	.LFB713
 6342 0ff5 AC000000 		.4byte	.LFE713-.LFB713
 6343 0ff9 01       		.uleb128 0x1
 6344 0ffa 9C       		.byte	0x9c
 6345 0ffb 3F100000 		.4byte	0x103f
 6346 0fff 1D       		.uleb128 0x1d
 6347 1000 3B140000 		.4byte	.LASF320
 6348 1004 01       		.byte	0x1
 6349 1005 C303     		.2byte	0x3c3
 6350 1007 C50D0000 		.4byte	0xdc5
 6351 100b 21020000 		.4byte	.LLST12
 6352 100f 20       		.uleb128 0x20
 6353 1010 08000000 		.4byte	.LVL43
 6354 1014 CF270000 		.4byte	0x27cf
 6355 1018 20       		.uleb128 0x20
 6356 1019 2C000000 		.4byte	.LVL44
 6357 101d 400F0000 		.4byte	0xf40
 6358 1021 26       		.uleb128 0x26
 6359 1022 7A000000 		.4byte	.LVL45
 6360 1026 DA270000 		.4byte	0x27da
 6361 102a 35100000 		.4byte	0x1035
 6362 102e 22       		.uleb128 0x22
 6363 102f 01       		.uleb128 0x1
 6364 1030 51       		.byte	0x51
 6365 1031 02       		.uleb128 0x2
 6366 1032 74       		.byte	0x74
 6367 1033 04       		.sleb128 4
 6368 1034 00       		.byte	0
 6369 1035 20       		.uleb128 0x20
 6370 1036 7E000000 		.4byte	.LVL46
 6371 103a E6270000 		.4byte	0x27e6
 6372 103e 00       		.byte	0
 6373 103f 1F       		.uleb128 0x1f
 6374 1040 1D260000 		.4byte	.LASF324
 6375 1044 01       		.byte	0x1
 6376 1045 5F12     		.2byte	0x125f
 6377 1047 00000000 		.4byte	.LFB758
 6378 104b 68000000 		.4byte	.LFE758-.LFB758
 6379 104f 01       		.uleb128 0x1
 6380 1050 9C       		.byte	0x9c
 6381 1051 C8100000 		.4byte	0x10c8
 6382 1055 1D       		.uleb128 0x1d
 6383 1056 B1230000 		.4byte	.LASF325
 6384 105a 01       		.byte	0x1
 6385 105b 5F12     		.2byte	0x125f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 212


 6386 105d 9E0A0000 		.4byte	0xa9e
 6387 1061 4D020000 		.4byte	.LLST13
 6388 1065 1D       		.uleb128 0x1d
 6389 1066 BF210000 		.4byte	.LASF326
 6390 106a 01       		.byte	0x1
 6391 106b 5F12     		.2byte	0x125f
 6392 106d C8100000 		.4byte	0x10c8
 6393 1071 79020000 		.4byte	.LLST14
 6394 1075 1E       		.uleb128 0x1e
 6395 1076 58250000 		.4byte	.LASF327
 6396 107a 01       		.byte	0x1
 6397 107b 6112     		.2byte	0x1261
 6398 107d 9E0A0000 		.4byte	0xa9e
 6399 1081 A5020000 		.4byte	.LLST15
 6400 1085 1E       		.uleb128 0x1e
 6401 1086 71080000 		.4byte	.LASF328
 6402 108a 01       		.byte	0x1
 6403 108b 6212     		.2byte	0x1262
 6404 108d CD100000 		.4byte	0x10cd
 6405 1091 B8020000 		.4byte	.LLST16
 6406 1095 20       		.uleb128 0x20
 6407 1096 16000000 		.4byte	.LVL51
 6408 109a F1270000 		.4byte	0x27f1
 6409 109e 26       		.uleb128 0x26
 6410 109f 2A000000 		.4byte	.LVL52
 6411 10a3 DA270000 		.4byte	0x27da
 6412 10a7 B5100000 		.4byte	0x10b5
 6413 10ab 22       		.uleb128 0x22
 6414 10ac 01       		.uleb128 0x1
 6415 10ad 50       		.byte	0x50
 6416 10ae 05       		.uleb128 0x5
 6417 10af 03       		.byte	0x3
 6418 10b0 00000000 		.4byte	.LANCHOR0
 6419 10b4 00       		.byte	0
 6420 10b5 20       		.uleb128 0x20
 6421 10b6 4A000000 		.4byte	.LVL55
 6422 10ba FD270000 		.4byte	0x27fd
 6423 10be 20       		.uleb128 0x20
 6424 10bf 5A000000 		.4byte	.LVL58
 6425 10c3 FD270000 		.4byte	0x27fd
 6426 10c7 00       		.byte	0
 6427 10c8 07       		.uleb128 0x7
 6428 10c9 880A0000 		.4byte	0xa88
 6429 10cd 07       		.uleb128 0x7
 6430 10ce 9E0A0000 		.4byte	0xa9e
 6431 10d2 27       		.uleb128 0x27
 6432 10d3 1A240000 		.4byte	.LASF331
 6433 10d7 01       		.byte	0x1
 6434 10d8 A402     		.2byte	0x2a4
 6435 10da 880A0000 		.4byte	0xa88
 6436 10de 00000000 		.4byte	.LFB711
 6437 10e2 62000000 		.4byte	.LFE711-.LFB711
 6438 10e6 01       		.uleb128 0x1
 6439 10e7 9C       		.byte	0x9c
 6440 10e8 16120000 		.4byte	0x1216
 6441 10ec 1D       		.uleb128 0x1d
 6442 10ed 69140000 		.4byte	.LASF315
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 213


 6443 10f1 01       		.byte	0x1
 6444 10f2 A402     		.2byte	0x2a4
 6445 10f4 610A0000 		.4byte	0xa61
 6446 10f8 CB020000 		.4byte	.LLST17
 6447 10fc 1D       		.uleb128 0x1d
 6448 10fd BD0F0000 		.4byte	.LASF316
 6449 1101 01       		.byte	0x1
 6450 1102 A502     		.2byte	0x2a5
 6451 1104 3E0C0000 		.4byte	0xc3e
 6452 1108 E9020000 		.4byte	.LLST18
 6453 110c 1D       		.uleb128 0x1d
 6454 110d 2D0A0000 		.4byte	.LASF329
 6455 1111 01       		.byte	0x1
 6456 1112 A602     		.2byte	0x2a6
 6457 1114 16120000 		.4byte	0x1216
 6458 1118 07030000 		.4byte	.LLST19
 6459 111c 1D       		.uleb128 0x1d
 6460 111d 931D0000 		.4byte	.LASF318
 6461 1121 01       		.byte	0x1
 6462 1122 A702     		.2byte	0x2a7
 6463 1124 200F0000 		.4byte	0xf20
 6464 1128 28030000 		.4byte	.LLST20
 6465 112c 23       		.uleb128 0x23
 6466 112d CF010000 		.4byte	.LASF299
 6467 1131 01       		.byte	0x1
 6468 1132 A802     		.2byte	0x2a8
 6469 1134 930A0000 		.4byte	0xa93
 6470 1138 02       		.uleb128 0x2
 6471 1139 91       		.byte	0x91
 6472 113a 00       		.sleb128 0
 6473 113b 23       		.uleb128 0x23
 6474 113c FC260000 		.4byte	.LASF319
 6475 1140 01       		.byte	0x1
 6476 1141 A902     		.2byte	0x2a9
 6477 1143 2B0F0000 		.4byte	0xf2b
 6478 1147 02       		.uleb128 0x2
 6479 1148 91       		.byte	0x91
 6480 1149 04       		.sleb128 4
 6481 114a 1E       		.uleb128 0x1e
 6482 114b 3B140000 		.4byte	.LASF320
 6483 114f 01       		.byte	0x1
 6484 1150 AB02     		.2byte	0x2ab
 6485 1152 C50D0000 		.4byte	0xdc5
 6486 1156 46030000 		.4byte	.LLST21
 6487 115a 1E       		.uleb128 0x1e
 6488 115b F8200000 		.4byte	.LASF309
 6489 115f 01       		.byte	0x1
 6490 1160 AC02     		.2byte	0x2ac
 6491 1162 880A0000 		.4byte	0xa88
 6492 1166 6F030000 		.4byte	.LLST22
 6493 116a 28       		.uleb128 0x28
 6494 116b 0E000000 		.4byte	.LBB18
 6495 116f 24000000 		.4byte	.LBE18-.LBB18
 6496 1173 C2110000 		.4byte	0x11c2
 6497 1177 1E       		.uleb128 0x1e
 6498 1178 971E0000 		.4byte	.LASF300
 6499 117c 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 214


 6500 117d C902     		.2byte	0x2c9
 6501 117f 430C0000 		.4byte	0xc43
 6502 1183 8E030000 		.4byte	.LLST23
 6503 1187 26       		.uleb128 0x26
 6504 1188 14000000 		.4byte	.LVL62
 6505 118c 09280000 		.4byte	0x2809
 6506 1190 9D110000 		.4byte	0x119d
 6507 1194 22       		.uleb128 0x22
 6508 1195 01       		.uleb128 0x1
 6509 1196 50       		.byte	0x50
 6510 1197 04       		.uleb128 0x4
 6511 1198 75       		.byte	0x75
 6512 1199 00       		.sleb128 0
 6513 119a 32       		.byte	0x32
 6514 119b 24       		.byte	0x24
 6515 119c 00       		.byte	0
 6516 119d 26       		.uleb128 0x26
 6517 119e 1E000000 		.4byte	.LVL64
 6518 11a2 09280000 		.4byte	0x2809
 6519 11a6 B1110000 		.4byte	0x11b1
 6520 11aa 22       		.uleb128 0x22
 6521 11ab 01       		.uleb128 0x1
 6522 11ac 50       		.byte	0x50
 6523 11ad 02       		.uleb128 0x2
 6524 11ae 08       		.byte	0x8
 6525 11af 60       		.byte	0x60
 6526 11b0 00       		.byte	0
 6527 11b1 21       		.uleb128 0x21
 6528 11b2 2E000000 		.4byte	.LVL66
 6529 11b6 96270000 		.4byte	0x2796
 6530 11ba 22       		.uleb128 0x22
 6531 11bb 01       		.uleb128 0x1
 6532 11bc 50       		.byte	0x50
 6533 11bd 02       		.uleb128 0x2
 6534 11be 79       		.byte	0x79
 6535 11bf 00       		.sleb128 0
 6536 11c0 00       		.byte	0
 6537 11c1 00       		.byte	0
 6538 11c2 26       		.uleb128 0x26
 6539 11c3 4E000000 		.4byte	.LVL69
 6540 11c7 0B0E0000 		.4byte	0xe0b
 6541 11cb 05120000 		.4byte	0x1205
 6542 11cf 22       		.uleb128 0x22
 6543 11d0 01       		.uleb128 0x1
 6544 11d1 50       		.byte	0x50
 6545 11d2 02       		.uleb128 0x2
 6546 11d3 76       		.byte	0x76
 6547 11d4 00       		.sleb128 0
 6548 11d5 22       		.uleb128 0x22
 6549 11d6 01       		.uleb128 0x1
 6550 11d7 51       		.byte	0x51
 6551 11d8 02       		.uleb128 0x2
 6552 11d9 77       		.byte	0x77
 6553 11da 00       		.sleb128 0
 6554 11db 22       		.uleb128 0x22
 6555 11dc 01       		.uleb128 0x1
 6556 11dd 52       		.byte	0x52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 215


 6557 11de 02       		.uleb128 0x2
 6558 11df 75       		.byte	0x75
 6559 11e0 00       		.sleb128 0
 6560 11e1 22       		.uleb128 0x22
 6561 11e2 01       		.uleb128 0x1
 6562 11e3 53       		.byte	0x53
 6563 11e4 02       		.uleb128 0x2
 6564 11e5 78       		.byte	0x78
 6565 11e6 00       		.sleb128 0
 6566 11e7 22       		.uleb128 0x22
 6567 11e8 02       		.uleb128 0x2
 6568 11e9 7D       		.byte	0x7d
 6569 11ea 00       		.sleb128 0
 6570 11eb 03       		.uleb128 0x3
 6571 11ec 91       		.byte	0x91
 6572 11ed 00       		.sleb128 0
 6573 11ee 06       		.byte	0x6
 6574 11ef 22       		.uleb128 0x22
 6575 11f0 02       		.uleb128 0x2
 6576 11f1 7D       		.byte	0x7d
 6577 11f2 04       		.sleb128 4
 6578 11f3 03       		.uleb128 0x3
 6579 11f4 91       		.byte	0x91
 6580 11f5 04       		.sleb128 4
 6581 11f6 06       		.byte	0x6
 6582 11f7 22       		.uleb128 0x22
 6583 11f8 02       		.uleb128 0x2
 6584 11f9 7D       		.byte	0x7d
 6585 11fa 08       		.sleb128 8
 6586 11fb 02       		.uleb128 0x2
 6587 11fc 74       		.byte	0x74
 6588 11fd 00       		.sleb128 0
 6589 11fe 22       		.uleb128 0x22
 6590 11ff 02       		.uleb128 0x2
 6591 1200 7D       		.byte	0x7d
 6592 1201 0C       		.sleb128 12
 6593 1202 01       		.uleb128 0x1
 6594 1203 30       		.byte	0x30
 6595 1204 00       		.byte	0
 6596 1205 21       		.uleb128 0x21
 6597 1206 54000000 		.4byte	.LVL70
 6598 120a E90F0000 		.4byte	0xfe9
 6599 120e 22       		.uleb128 0x22
 6600 120f 01       		.uleb128 0x1
 6601 1210 50       		.byte	0x50
 6602 1211 02       		.uleb128 0x2
 6603 1212 74       		.byte	0x74
 6604 1213 00       		.sleb128 0
 6605 1214 00       		.byte	0
 6606 1215 00       		.byte	0
 6607 1216 07       		.uleb128 0x7
 6608 1217 D5000000 		.4byte	0xd5
 6609 121b 29       		.uleb128 0x29
 6610 121c 181B0000 		.4byte	.LASF336
 6611 1220 01       		.byte	0x1
 6612 1221 1804     		.2byte	0x418
 6613 1223 00000000 		.4byte	.LFB714
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 216


 6614 1227 A4000000 		.4byte	.LFE714-.LFB714
 6615 122b 01       		.uleb128 0x1
 6616 122c 9C       		.byte	0x9c
 6617 122d C4120000 		.4byte	0x12c4
 6618 1231 1D       		.uleb128 0x1d
 6619 1232 A81E0000 		.4byte	.LASF330
 6620 1236 01       		.byte	0x1
 6621 1237 1804     		.2byte	0x418
 6622 1239 910B0000 		.4byte	0xb91
 6623 123d B7030000 		.4byte	.LLST24
 6624 1241 1E       		.uleb128 0x1e
 6625 1242 BC250000 		.4byte	.LASF310
 6626 1246 01       		.byte	0x1
 6627 1247 1A04     		.2byte	0x41a
 6628 1249 C50D0000 		.4byte	0xdc5
 6629 124d D5030000 		.4byte	.LLST25
 6630 1251 20       		.uleb128 0x20
 6631 1252 08000000 		.4byte	.LVL74
 6632 1256 CF270000 		.4byte	0x27cf
 6633 125a 26       		.uleb128 0x26
 6634 125b 18000000 		.4byte	.LVL76
 6635 125f F1270000 		.4byte	0x27f1
 6636 1263 6E120000 		.4byte	0x126e
 6637 1267 22       		.uleb128 0x22
 6638 1268 01       		.uleb128 0x1
 6639 1269 50       		.byte	0x50
 6640 126a 02       		.uleb128 0x2
 6641 126b 76       		.byte	0x76
 6642 126c 00       		.sleb128 0
 6643 126d 00       		.byte	0
 6644 126e 26       		.uleb128 0x26
 6645 126f 24000000 		.4byte	.LVL77
 6646 1273 F1270000 		.4byte	0x27f1
 6647 1277 82120000 		.4byte	0x1282
 6648 127b 22       		.uleb128 0x22
 6649 127c 01       		.uleb128 0x1
 6650 127d 50       		.byte	0x50
 6651 127e 02       		.uleb128 0x2
 6652 127f 74       		.byte	0x74
 6653 1280 18       		.sleb128 24
 6654 1281 00       		.byte	0
 6655 1282 26       		.uleb128 0x26
 6656 1283 44000000 		.4byte	.LVL78
 6657 1287 DA270000 		.4byte	0x27da
 6658 128b 9D120000 		.4byte	0x129d
 6659 128f 22       		.uleb128 0x22
 6660 1290 01       		.uleb128 0x1
 6661 1291 50       		.byte	0x50
 6662 1292 03       		.uleb128 0x3
 6663 1293 75       		.byte	0x75
 6664 1294 E803     		.sleb128 488
 6665 1296 22       		.uleb128 0x22
 6666 1297 01       		.uleb128 0x1
 6667 1298 51       		.byte	0x51
 6668 1299 02       		.uleb128 0x2
 6669 129a 76       		.byte	0x76
 6670 129b 00       		.sleb128 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 217


 6671 129c 00       		.byte	0
 6672 129d 26       		.uleb128 0x26
 6673 129e 62000000 		.4byte	.LVL79
 6674 12a2 CB0D0000 		.4byte	0xdcb
 6675 12a6 B1120000 		.4byte	0x12b1
 6676 12aa 22       		.uleb128 0x22
 6677 12ab 01       		.uleb128 0x1
 6678 12ac 50       		.byte	0x50
 6679 12ad 02       		.uleb128 0x2
 6680 12ae 74       		.byte	0x74
 6681 12af 00       		.sleb128 0
 6682 12b0 00       		.byte	0
 6683 12b1 20       		.uleb128 0x20
 6684 12b2 66000000 		.4byte	.LVL80
 6685 12b6 9E0D0000 		.4byte	0xd9e
 6686 12ba 20       		.uleb128 0x20
 6687 12bb 6A000000 		.4byte	.LVL81
 6688 12bf E6270000 		.4byte	0x27e6
 6689 12c3 00       		.byte	0
 6690 12c4 27       		.uleb128 0x27
 6691 12c5 FD0E0000 		.4byte	.LASF332
 6692 12c9 01       		.byte	0x1
 6693 12ca 3C05     		.2byte	0x53c
 6694 12cc 930A0000 		.4byte	0xa93
 6695 12d0 00000000 		.4byte	.LFB717
 6696 12d4 20000000 		.4byte	.LFE717-.LFB717
 6697 12d8 01       		.uleb128 0x1
 6698 12d9 9C       		.byte	0x9c
 6699 12da 21130000 		.4byte	0x1321
 6700 12de 1D       		.uleb128 0x1d
 6701 12df 871A0000 		.4byte	.LASF313
 6702 12e3 01       		.byte	0x1
 6703 12e4 3C05     		.2byte	0x53c
 6704 12e6 910B0000 		.4byte	0xb91
 6705 12ea E8030000 		.4byte	.LLST26
 6706 12ee 1E       		.uleb128 0x1e
 6707 12ef BC250000 		.4byte	.LASF310
 6708 12f3 01       		.byte	0x1
 6709 12f4 3E05     		.2byte	0x53e
 6710 12f6 C50D0000 		.4byte	0xdc5
 6711 12fa 06040000 		.4byte	.LLST27
 6712 12fe 1E       		.uleb128 0x1e
 6713 12ff D4150000 		.4byte	.LASF333
 6714 1303 01       		.byte	0x1
 6715 1304 3F05     		.2byte	0x53f
 6716 1306 930A0000 		.4byte	0xa93
 6717 130a 19040000 		.4byte	.LLST28
 6718 130e 20       		.uleb128 0x20
 6719 130f 08000000 		.4byte	.LVL84
 6720 1313 CF270000 		.4byte	0x27cf
 6721 1317 20       		.uleb128 0x20
 6722 1318 16000000 		.4byte	.LVL87
 6723 131c E6270000 		.4byte	0x27e6
 6724 1320 00       		.byte	0
 6725 1321 27       		.uleb128 0x27
 6726 1322 C5170000 		.4byte	.LASF334
 6727 1326 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 218


 6728 1327 5205     		.2byte	0x552
 6729 1329 930A0000 		.4byte	0xa93
 6730 132d 00000000 		.4byte	.LFB718
 6731 1331 30000000 		.4byte	.LFE718-.LFB718
 6732 1335 01       		.uleb128 0x1
 6733 1336 9C       		.byte	0x9c
 6734 1337 C6130000 		.4byte	0x13c6
 6735 133b 1D       		.uleb128 0x1d
 6736 133c 871A0000 		.4byte	.LASF313
 6737 1340 01       		.byte	0x1
 6738 1341 5205     		.2byte	0x552
 6739 1343 910B0000 		.4byte	0xb91
 6740 1347 37040000 		.4byte	.LLST29
 6741 134b 1E       		.uleb128 0x1e
 6742 134c BC250000 		.4byte	.LASF310
 6743 1350 01       		.byte	0x1
 6744 1351 5405     		.2byte	0x554
 6745 1353 C50D0000 		.4byte	0xdc5
 6746 1357 55040000 		.4byte	.LLST30
 6747 135b 24       		.uleb128 0x24
 6748 135c D4150000 		.4byte	.LASF333
 6749 1360 01       		.byte	0x1
 6750 1361 5505     		.2byte	0x555
 6751 1363 930A0000 		.4byte	0xa93
 6752 1367 01       		.uleb128 0x1
 6753 1368 50       		.byte	0x50
 6754 1369 2A       		.uleb128 0x2a
 6755 136a 340B0000 		.4byte	.LASF335
 6756 136e 01       		.byte	0x1
 6757 136f 5505     		.2byte	0x555
 6758 1371 930A0000 		.4byte	0xa93
 6759 1375 2B       		.uleb128 0x2b
 6760 1376 FF0C0000 		.4byte	0xcff
 6761 137a 08000000 		.4byte	.LBB19
 6762 137e 14000000 		.4byte	.LBE19-.LBB19
 6763 1382 01       		.byte	0x1
 6764 1383 6905     		.2byte	0x569
 6765 1385 9E130000 		.4byte	0x139e
 6766 1389 2C       		.uleb128 0x2c
 6767 138a 08000000 		.4byte	.LBB20
 6768 138e 14000000 		.4byte	.LBE20-.LBB20
 6769 1392 2D       		.uleb128 0x2d
 6770 1393 0F0D0000 		.4byte	0xd0f
 6771 1397 2D       		.uleb128 0x2d
 6772 1398 1A0D0000 		.4byte	0xd1a
 6773 139c 00       		.byte	0
 6774 139d 00       		.byte	0
 6775 139e 2B       		.uleb128 0x2b
 6776 139f 260D0000 		.4byte	0xd26
 6777 13a3 26000000 		.4byte	.LBB21
 6778 13a7 04000000 		.4byte	.LBE21-.LBB21
 6779 13ab 01       		.byte	0x1
 6780 13ac 7005     		.2byte	0x570
 6781 13ae BC130000 		.4byte	0x13bc
 6782 13b2 2E       		.uleb128 0x2e
 6783 13b3 320D0000 		.4byte	0xd32
 6784 13b7 68040000 		.4byte	.LLST31
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 219


 6785 13bb 00       		.byte	0
 6786 13bc 20       		.uleb128 0x20
 6787 13bd 08000000 		.4byte	.LVL90
 6788 13c1 14280000 		.4byte	0x2814
 6789 13c5 00       		.byte	0
 6790 13c6 29       		.uleb128 0x29
 6791 13c7 36190000 		.4byte	.LASF337
 6792 13cb 01       		.byte	0x1
 6793 13cc 7A05     		.2byte	0x57a
 6794 13ce 00000000 		.4byte	.LFB719
 6795 13d2 D0000000 		.4byte	.LFE719-.LFB719
 6796 13d6 01       		.uleb128 0x1
 6797 13d7 9C       		.byte	0x9c
 6798 13d8 77140000 		.4byte	0x1477
 6799 13dc 1D       		.uleb128 0x1d
 6800 13dd 871A0000 		.4byte	.LASF313
 6801 13e1 01       		.byte	0x1
 6802 13e2 7A05     		.2byte	0x57a
 6803 13e4 910B0000 		.4byte	0xb91
 6804 13e8 7B040000 		.4byte	.LLST32
 6805 13ec 1D       		.uleb128 0x1d
 6806 13ed 33170000 		.4byte	.LASF338
 6807 13f1 01       		.byte	0x1
 6808 13f2 7A05     		.2byte	0x57a
 6809 13f4 930A0000 		.4byte	0xa93
 6810 13f8 99040000 		.4byte	.LLST33
 6811 13fc 1E       		.uleb128 0x1e
 6812 13fd BC250000 		.4byte	.LASF310
 6813 1401 01       		.byte	0x1
 6814 1402 7C05     		.2byte	0x57c
 6815 1404 C50D0000 		.4byte	0xdc5
 6816 1408 C3040000 		.4byte	.LLST34
 6817 140c 1E       		.uleb128 0x1e
 6818 140d 6C240000 		.4byte	.LASF339
 6819 1411 01       		.byte	0x1
 6820 1412 7D05     		.2byte	0x57d
 6821 1414 930A0000 		.4byte	0xa93
 6822 1418 D6040000 		.4byte	.LLST35
 6823 141c 1E       		.uleb128 0x1e
 6824 141d 95230000 		.4byte	.LASF340
 6825 1421 01       		.byte	0x1
 6826 1422 7D05     		.2byte	0x57d
 6827 1424 930A0000 		.4byte	0xa93
 6828 1428 E9040000 		.4byte	.LLST36
 6829 142c 1E       		.uleb128 0x1e
 6830 142d 31090000 		.4byte	.LASF341
 6831 1431 01       		.byte	0x1
 6832 1432 7E05     		.2byte	0x57e
 6833 1434 880A0000 		.4byte	0xa88
 6834 1438 FC040000 		.4byte	.LLST37
 6835 143c 20       		.uleb128 0x20
 6836 143d 18000000 		.4byte	.LVL97
 6837 1441 CF270000 		.4byte	0x27cf
 6838 1445 26       		.uleb128 0x26
 6839 1446 88000000 		.4byte	.LVL103
 6840 144a F1270000 		.4byte	0x27f1
 6841 144e 59140000 		.4byte	0x1459
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 220


 6842 1452 22       		.uleb128 0x22
 6843 1453 01       		.uleb128 0x1
 6844 1454 50       		.byte	0x50
 6845 1455 02       		.uleb128 0x2
 6846 1456 75       		.byte	0x75
 6847 1457 00       		.sleb128 0
 6848 1458 00       		.byte	0
 6849 1459 26       		.uleb128 0x26
 6850 145a AA000000 		.4byte	.LVL104
 6851 145e DA270000 		.4byte	0x27da
 6852 1462 6D140000 		.4byte	0x146d
 6853 1466 22       		.uleb128 0x22
 6854 1467 01       		.uleb128 0x1
 6855 1468 51       		.byte	0x51
 6856 1469 02       		.uleb128 0x2
 6857 146a 75       		.byte	0x75
 6858 146b 00       		.sleb128 0
 6859 146c 00       		.byte	0
 6860 146d 20       		.uleb128 0x20
 6861 146e C0000000 		.4byte	.LVL106
 6862 1472 E6270000 		.4byte	0x27e6
 6863 1476 00       		.byte	0
 6864 1477 29       		.uleb128 0x29
 6865 1478 7A260000 		.4byte	.LASF342
 6866 147c 01       		.byte	0x1
 6867 147d A606     		.2byte	0x6a6
 6868 147f 00000000 		.4byte	.LFB722
 6869 1483 7C000000 		.4byte	.LFE722-.LFB722
 6870 1487 01       		.uleb128 0x1
 6871 1488 9C       		.byte	0x9c
 6872 1489 FC140000 		.4byte	0x14fc
 6873 148d 1D       		.uleb128 0x1d
 6874 148e FA070000 		.4byte	.LASF343
 6875 1492 01       		.byte	0x1
 6876 1493 A606     		.2byte	0x6a6
 6877 1495 910B0000 		.4byte	0xb91
 6878 1499 1B050000 		.4byte	.LLST38
 6879 149d 1E       		.uleb128 0x1e
 6880 149e BC250000 		.4byte	.LASF310
 6881 14a2 01       		.byte	0x1
 6882 14a3 A806     		.2byte	0x6a8
 6883 14a5 FC140000 		.4byte	0x14fc
 6884 14a9 47050000 		.4byte	.LLST39
 6885 14ad 20       		.uleb128 0x20
 6886 14ae 1A000000 		.4byte	.LVL109
 6887 14b2 CF270000 		.4byte	0x27cf
 6888 14b6 26       		.uleb128 0x26
 6889 14b7 20000000 		.4byte	.LVL110
 6890 14bb 3E0D0000 		.4byte	0xd3e
 6891 14bf CA140000 		.4byte	0x14ca
 6892 14c3 22       		.uleb128 0x22
 6893 14c4 01       		.uleb128 0x1
 6894 14c5 50       		.byte	0x50
 6895 14c6 02       		.uleb128 0x2
 6896 14c7 74       		.byte	0x74
 6897 14c8 00       		.sleb128 0
 6898 14c9 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 221


 6899 14ca 26       		.uleb128 0x26
 6900 14cb 2A000000 		.4byte	.LVL111
 6901 14cf F1270000 		.4byte	0x27f1
 6902 14d3 DE140000 		.4byte	0x14de
 6903 14d7 22       		.uleb128 0x22
 6904 14d8 01       		.uleb128 0x1
 6905 14d9 50       		.byte	0x50
 6906 14da 02       		.uleb128 0x2
 6907 14db 76       		.byte	0x76
 6908 14dc 00       		.sleb128 0
 6909 14dd 00       		.byte	0
 6910 14de 26       		.uleb128 0x26
 6911 14df 50000000 		.4byte	.LVL112
 6912 14e3 DA270000 		.4byte	0x27da
 6913 14e7 F2140000 		.4byte	0x14f2
 6914 14eb 22       		.uleb128 0x22
 6915 14ec 01       		.uleb128 0x1
 6916 14ed 51       		.byte	0x51
 6917 14ee 02       		.uleb128 0x2
 6918 14ef 76       		.byte	0x76
 6919 14f0 00       		.sleb128 0
 6920 14f1 00       		.byte	0
 6921 14f2 20       		.uleb128 0x20
 6922 14f3 70000000 		.4byte	.LVL113
 6923 14f7 E6270000 		.4byte	0x27e6
 6924 14fb 00       		.byte	0
 6925 14fc 07       		.uleb128 0x7
 6926 14fd C50D0000 		.4byte	0xdc5
 6927 1501 27       		.uleb128 0x27
 6928 1502 AF0B0000 		.4byte	.LASF344
 6929 1506 01       		.byte	0x1
 6930 1507 DC06     		.2byte	0x6dc
 6931 1509 880A0000 		.4byte	0xa88
 6932 150d 00000000 		.4byte	.LFB723
 6933 1511 98000000 		.4byte	.LFE723-.LFB723
 6934 1515 01       		.uleb128 0x1
 6935 1516 9C       		.byte	0x9c
 6936 1517 FD150000 		.4byte	0x15fd
 6937 151b 1D       		.uleb128 0x1d
 6938 151c FA070000 		.4byte	.LASF343
 6939 1520 01       		.byte	0x1
 6940 1521 DC06     		.2byte	0x6dc
 6941 1523 910B0000 		.4byte	0xb91
 6942 1527 73050000 		.4byte	.LLST40
 6943 152b 1E       		.uleb128 0x1e
 6944 152c 31090000 		.4byte	.LASF341
 6945 1530 01       		.byte	0x1
 6946 1531 DE06     		.2byte	0x6de
 6947 1533 880A0000 		.4byte	0xa88
 6948 1537 9F050000 		.4byte	.LLST41
 6949 153b 1E       		.uleb128 0x1e
 6950 153c BC250000 		.4byte	.LASF310
 6951 1540 01       		.byte	0x1
 6952 1541 DF06     		.2byte	0x6df
 6953 1543 FC140000 		.4byte	0x14fc
 6954 1547 E0050000 		.4byte	.LLST42
 6955 154b 2A       		.uleb128 0x2a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 222


 6956 154c 2A270000 		.4byte	.LASF345
 6957 1550 01       		.byte	0x1
 6958 1551 E006     		.2byte	0x6e0
 6959 1553 930A0000 		.4byte	0xa93
 6960 1557 2B       		.uleb128 0x2b
 6961 1558 FF0C0000 		.4byte	0xcff
 6962 155c 0E000000 		.4byte	.LBB23
 6963 1560 14000000 		.4byte	.LBE23-.LBB23
 6964 1564 01       		.byte	0x1
 6965 1565 F606     		.2byte	0x6f6
 6966 1567 80150000 		.4byte	0x1580
 6967 156b 2C       		.uleb128 0x2c
 6968 156c 0E000000 		.4byte	.LBB24
 6969 1570 14000000 		.4byte	.LBE24-.LBB24
 6970 1574 2D       		.uleb128 0x2d
 6971 1575 0F0D0000 		.4byte	0xd0f
 6972 1579 2D       		.uleb128 0x2d
 6973 157a 1A0D0000 		.4byte	0xd1a
 6974 157e 00       		.byte	0
 6975 157f 00       		.byte	0
 6976 1580 2B       		.uleb128 0x2b
 6977 1581 260D0000 		.4byte	0xd26
 6978 1585 82000000 		.4byte	.LBB25
 6979 1589 04000000 		.4byte	.LBE25-.LBB25
 6980 158d 01       		.byte	0x1
 6981 158e 1A07     		.2byte	0x71a
 6982 1590 9E150000 		.4byte	0x159e
 6983 1594 2E       		.uleb128 0x2e
 6984 1595 320D0000 		.4byte	0xd32
 6985 1599 0C060000 		.4byte	.LLST43
 6986 159d 00       		.byte	0
 6987 159e 20       		.uleb128 0x20
 6988 159f 0E000000 		.4byte	.LVL116
 6989 15a3 14280000 		.4byte	0x2814
 6990 15a7 26       		.uleb128 0x26
 6991 15a8 28000000 		.4byte	.LVL117
 6992 15ac 3E0D0000 		.4byte	0xd3e
 6993 15b0 BB150000 		.4byte	0x15bb
 6994 15b4 22       		.uleb128 0x22
 6995 15b5 01       		.uleb128 0x1
 6996 15b6 50       		.byte	0x50
 6997 15b7 02       		.uleb128 0x2
 6998 15b8 74       		.byte	0x74
 6999 15b9 00       		.sleb128 0
 7000 15ba 00       		.byte	0
 7001 15bb 26       		.uleb128 0x26
 7002 15bc 4E000000 		.4byte	.LVL119
 7003 15c0 F1270000 		.4byte	0x27f1
 7004 15c4 CF150000 		.4byte	0x15cf
 7005 15c8 22       		.uleb128 0x22
 7006 15c9 01       		.uleb128 0x1
 7007 15ca 50       		.byte	0x50
 7008 15cb 02       		.uleb128 0x2
 7009 15cc 76       		.byte	0x76
 7010 15cd 00       		.sleb128 0
 7011 15ce 00       		.byte	0
 7012 15cf 26       		.uleb128 0x26
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 223


 7013 15d0 70000000 		.4byte	.LVL120
 7014 15d4 DA270000 		.4byte	0x27da
 7015 15d8 E3150000 		.4byte	0x15e3
 7016 15dc 22       		.uleb128 0x22
 7017 15dd 01       		.uleb128 0x1
 7018 15de 51       		.byte	0x51
 7019 15df 02       		.uleb128 0x2
 7020 15e0 76       		.byte	0x76
 7021 15e1 00       		.sleb128 0
 7022 15e2 00       		.byte	0
 7023 15e3 21       		.uleb128 0x21
 7024 15e4 7C000000 		.4byte	.LVL122
 7025 15e8 DA270000 		.4byte	0x27da
 7026 15ec 22       		.uleb128 0x22
 7027 15ed 01       		.uleb128 0x1
 7028 15ee 50       		.byte	0x50
 7029 15ef 05       		.uleb128 0x5
 7030 15f0 03       		.byte	0x3
 7031 15f1 14000000 		.4byte	.LANCHOR0+20
 7032 15f5 22       		.uleb128 0x22
 7033 15f6 01       		.uleb128 0x1
 7034 15f7 51       		.byte	0x51
 7035 15f8 02       		.uleb128 0x2
 7036 15f9 74       		.byte	0x74
 7037 15fa 18       		.sleb128 24
 7038 15fb 00       		.byte	0
 7039 15fc 00       		.byte	0
 7040 15fd 29       		.uleb128 0x29
 7041 15fe AB210000 		.4byte	.LASF346
 7042 1602 01       		.byte	0x1
 7043 1603 2207     		.2byte	0x722
 7044 1605 00000000 		.4byte	.LFB724
 7045 1609 60000000 		.4byte	.LFE724-.LFB724
 7046 160d 01       		.uleb128 0x1
 7047 160e 9C       		.byte	0x9c
 7048 160f 71160000 		.4byte	0x1671
 7049 1613 1E       		.uleb128 0x1e
 7050 1614 F8200000 		.4byte	.LASF309
 7051 1618 01       		.byte	0x1
 7052 1619 2407     		.2byte	0x724
 7053 161b 880A0000 		.4byte	0xa88
 7054 161f 1F060000 		.4byte	.LLST44
 7055 1623 26       		.uleb128 0x26
 7056 1624 16000000 		.4byte	.LVL126
 7057 1628 D2100000 		.4byte	0x10d2
 7058 162c 5E160000 		.4byte	0x165e
 7059 1630 22       		.uleb128 0x22
 7060 1631 01       		.uleb128 0x1
 7061 1632 50       		.byte	0x50
 7062 1633 05       		.uleb128 0x5
 7063 1634 03       		.byte	0x3
 7064 1635 00000000 		.4byte	prvIdleTask
 7065 1639 22       		.uleb128 0x22
 7066 163a 01       		.uleb128 0x1
 7067 163b 51       		.byte	0x51
 7068 163c 05       		.uleb128 0x5
 7069 163d 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 224


 7070 163e 00000000 		.4byte	.LC0
 7071 1642 22       		.uleb128 0x22
 7072 1643 01       		.uleb128 0x1
 7073 1644 52       		.byte	0x52
 7074 1645 02       		.uleb128 0x2
 7075 1646 08       		.byte	0x8
 7076 1647 80       		.byte	0x80
 7077 1648 22       		.uleb128 0x22
 7078 1649 01       		.uleb128 0x1
 7079 164a 53       		.byte	0x53
 7080 164b 01       		.uleb128 0x1
 7081 164c 30       		.byte	0x30
 7082 164d 22       		.uleb128 0x22
 7083 164e 02       		.uleb128 0x2
 7084 164f 7D       		.byte	0x7d
 7085 1650 00       		.sleb128 0
 7086 1651 01       		.uleb128 0x1
 7087 1652 30       		.byte	0x30
 7088 1653 22       		.uleb128 0x22
 7089 1654 02       		.uleb128 0x2
 7090 1655 7D       		.byte	0x7d
 7091 1656 04       		.sleb128 4
 7092 1657 05       		.uleb128 0x5
 7093 1658 03       		.byte	0x3
 7094 1659 20020000 		.4byte	.LANCHOR0+544
 7095 165d 00       		.byte	0
 7096 165e 20       		.uleb128 0x20
 7097 165f 1E000000 		.4byte	.LVL127
 7098 1663 1F280000 		.4byte	0x281f
 7099 1667 20       		.uleb128 0x20
 7100 1668 3C000000 		.4byte	.LVL128
 7101 166c 2B280000 		.4byte	0x282b
 7102 1670 00       		.byte	0
 7103 1671 29       		.uleb128 0x29
 7104 1672 EB0E0000 		.4byte	.LASF347
 7105 1676 01       		.byte	0x1
 7106 1677 8D07     		.2byte	0x78d
 7107 1679 00000000 		.4byte	.LFB725
 7108 167d 18000000 		.4byte	.LFE725-.LFB725
 7109 1681 01       		.uleb128 0x1
 7110 1682 9C       		.byte	0x9c
 7111 1683 91160000 		.4byte	0x1691
 7112 1687 20       		.uleb128 0x20
 7113 1688 10000000 		.4byte	.LVL131
 7114 168c 36280000 		.4byte	0x2836
 7115 1690 00       		.byte	0
 7116 1691 2F       		.uleb128 0x2f
 7117 1692 A20C0000 		.4byte	.LASF389
 7118 1696 01       		.byte	0x1
 7119 1697 9807     		.2byte	0x798
 7120 1699 00000000 		.4byte	.LFB726
 7121 169d 14000000 		.4byte	.LFE726-.LFB726
 7122 16a1 01       		.uleb128 0x1
 7123 16a2 9C       		.byte	0x9c
 7124 16a3 27       		.uleb128 0x27
 7125 16a4 0D180000 		.4byte	.LASF348
 7126 16a8 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 225


 7127 16a9 4F08     		.2byte	0x84f
 7128 16ab 9E0A0000 		.4byte	0xa9e
 7129 16af 00000000 		.4byte	.LFB728
 7130 16b3 0C000000 		.4byte	.LFE728-.LFB728
 7131 16b7 01       		.uleb128 0x1
 7132 16b8 9C       		.byte	0x9c
 7133 16b9 CC160000 		.4byte	0x16cc
 7134 16bd 24       		.uleb128 0x24
 7135 16be A4210000 		.4byte	.LASF349
 7136 16c2 01       		.byte	0x1
 7137 16c3 5108     		.2byte	0x851
 7138 16c5 9E0A0000 		.4byte	0xa9e
 7139 16c9 01       		.uleb128 0x1
 7140 16ca 50       		.byte	0x50
 7141 16cb 00       		.byte	0
 7142 16cc 27       		.uleb128 0x27
 7143 16cd 1B0B0000 		.4byte	.LASF350
 7144 16d1 01       		.byte	0x1
 7145 16d2 5E08     		.2byte	0x85e
 7146 16d4 9E0A0000 		.4byte	0xa9e
 7147 16d8 00000000 		.4byte	.LFB729
 7148 16dc 14000000 		.4byte	.LFE729-.LFB729
 7149 16e0 01       		.uleb128 0x1
 7150 16e1 9C       		.byte	0x9c
 7151 16e2 0B170000 		.4byte	0x170b
 7152 16e6 24       		.uleb128 0x24
 7153 16e7 F8200000 		.4byte	.LASF309
 7154 16eb 01       		.byte	0x1
 7155 16ec 6008     		.2byte	0x860
 7156 16ee 9E0A0000 		.4byte	0xa9e
 7157 16f2 01       		.uleb128 0x1
 7158 16f3 50       		.byte	0x50
 7159 16f4 30       		.uleb128 0x30
 7160 16f5 2A270000 		.4byte	.LASF345
 7161 16f9 01       		.byte	0x1
 7162 16fa 6108     		.2byte	0x861
 7163 16fc 930A0000 		.4byte	0xa93
 7164 1700 00       		.byte	0
 7165 1701 20       		.uleb128 0x20
 7166 1702 06000000 		.4byte	.LVL133
 7167 1706 14280000 		.4byte	0x2814
 7168 170a 00       		.byte	0
 7169 170b 31       		.uleb128 0x31
 7170 170c A4020000 		.4byte	.LASF475
 7171 1710 01       		.byte	0x1
 7172 1711 7D08     		.2byte	0x87d
 7173 1713 930A0000 		.4byte	0xa93
 7174 1717 00000000 		.4byte	.LFB730
 7175 171b 0C000000 		.4byte	.LFE730-.LFB730
 7176 171f 01       		.uleb128 0x1
 7177 1720 9C       		.byte	0x9c
 7178 1721 27       		.uleb128 0x27
 7179 1722 71210000 		.4byte	.LASF351
 7180 1726 01       		.byte	0x1
 7181 1727 8508     		.2byte	0x885
 7182 1729 B2000000 		.4byte	0xb2
 7183 172d 00000000 		.4byte	.LFB731
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 226


 7184 1731 1C000000 		.4byte	.LFE731-.LFB731
 7185 1735 01       		.uleb128 0x1
 7186 1736 9C       		.byte	0x9c
 7187 1737 5A170000 		.4byte	0x175a
 7188 173b 1D       		.uleb128 0x1d
 7189 173c 6C1A0000 		.4byte	.LASF352
 7190 1740 01       		.byte	0x1
 7191 1741 8508     		.2byte	0x885
 7192 1743 910B0000 		.4byte	0xb91
 7193 1747 48060000 		.4byte	.LLST45
 7194 174b 24       		.uleb128 0x24
 7195 174c BC250000 		.4byte	.LASF310
 7196 1750 01       		.byte	0x1
 7197 1751 8708     		.2byte	0x887
 7198 1753 C50D0000 		.4byte	0xdc5
 7199 1757 01       		.uleb128 0x1
 7200 1758 53       		.byte	0x53
 7201 1759 00       		.byte	0
 7202 175a 27       		.uleb128 0x27
 7203 175b 83050000 		.4byte	.LASF353
 7204 175f 01       		.byte	0x1
 7205 1760 C309     		.2byte	0x9c3
 7206 1762 880A0000 		.4byte	0xa88
 7207 1766 00000000 		.4byte	.LFB732
 7208 176a F0000000 		.4byte	.LFE732-.LFB732
 7209 176e 01       		.uleb128 0x1
 7210 176f 9C       		.byte	0x9c
 7211 1770 1A180000 		.4byte	0x181a
 7212 1774 1E       		.uleb128 0x1e
 7213 1775 BC250000 		.4byte	.LASF310
 7214 1779 01       		.byte	0x1
 7215 177a C509     		.2byte	0x9c5
 7216 177c C50D0000 		.4byte	0xdc5
 7217 1780 5B060000 		.4byte	.LLST46
 7218 1784 1E       		.uleb128 0x1e
 7219 1785 A01D0000 		.4byte	.LASF266
 7220 1789 01       		.byte	0x1
 7221 178a C609     		.2byte	0x9c6
 7222 178c 9E0A0000 		.4byte	0xa9e
 7223 1790 79060000 		.4byte	.LLST47
 7224 1794 1E       		.uleb128 0x1e
 7225 1795 5F1E0000 		.4byte	.LASF354
 7226 1799 01       		.byte	0x1
 7227 179a C709     		.2byte	0x9c7
 7228 179c 880A0000 		.4byte	0xa88
 7229 17a0 8C060000 		.4byte	.LLST48
 7230 17a4 32       		.uleb128 0x32
 7231 17a5 00000000 		.4byte	.Ldebug_ranges0+0
 7232 17a9 1E       		.uleb128 0x1e
 7233 17aa 71080000 		.4byte	.LASF328
 7234 17ae 01       		.byte	0x1
 7235 17af D109     		.2byte	0x9d1
 7236 17b1 CD100000 		.4byte	0x10cd
 7237 17b5 E4060000 		.4byte	.LLST49
 7238 17b9 28       		.uleb128 0x28
 7239 17ba 1C000000 		.4byte	.LBB28
 7240 17be 26000000 		.4byte	.LBE28-.LBB28
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 227


 7241 17c2 E0170000 		.4byte	0x17e0
 7242 17c6 1E       		.uleb128 0x1e
 7243 17c7 3A0C0000 		.4byte	.LASF355
 7244 17cb 01       		.byte	0x1
 7245 17cc D909     		.2byte	0x9d9
 7246 17ce 1A180000 		.4byte	0x181a
 7247 17d2 F7060000 		.4byte	.LLST50
 7248 17d6 20       		.uleb128 0x20
 7249 17d7 42000000 		.4byte	.LVL142
 7250 17db 9E0D0000 		.4byte	0xd9e
 7251 17df 00       		.byte	0
 7252 17e0 26       		.uleb128 0x26
 7253 17e1 8C000000 		.4byte	.LVL149
 7254 17e5 F1270000 		.4byte	0x27f1
 7255 17e9 F4170000 		.4byte	0x17f4
 7256 17ed 22       		.uleb128 0x22
 7257 17ee 01       		.uleb128 0x1
 7258 17ef 50       		.byte	0x50
 7259 17f0 02       		.uleb128 0x2
 7260 17f1 78       		.byte	0x78
 7261 17f2 00       		.sleb128 0
 7262 17f3 00       		.byte	0
 7263 17f4 26       		.uleb128 0x26
 7264 17f5 98000000 		.4byte	.LVL150
 7265 17f9 F1270000 		.4byte	0x27f1
 7266 17fd 08180000 		.4byte	0x1808
 7267 1801 22       		.uleb128 0x22
 7268 1802 01       		.uleb128 0x1
 7269 1803 50       		.byte	0x50
 7270 1804 02       		.uleb128 0x2
 7271 1805 75       		.byte	0x75
 7272 1806 18       		.sleb128 24
 7273 1807 00       		.byte	0
 7274 1808 21       		.uleb128 0x21
 7275 1809 BE000000 		.4byte	.LVL151
 7276 180d DA270000 		.4byte	0x27da
 7277 1811 22       		.uleb128 0x22
 7278 1812 01       		.uleb128 0x1
 7279 1813 51       		.byte	0x51
 7280 1814 02       		.uleb128 0x2
 7281 1815 78       		.byte	0x78
 7282 1816 00       		.sleb128 0
 7283 1817 00       		.byte	0
 7284 1818 00       		.byte	0
 7285 1819 00       		.byte	0
 7286 181a 06       		.uleb128 0x6
 7287 181b 04       		.byte	0x4
 7288 181c 860B0000 		.4byte	0xb86
 7289 1820 27       		.uleb128 0x27
 7290 1821 641C0000 		.4byte	.LASF356
 7291 1825 01       		.byte	0x1
 7292 1826 E107     		.2byte	0x7e1
 7293 1828 880A0000 		.4byte	0xa88
 7294 182c 00000000 		.4byte	.LFB727
 7295 1830 E4000000 		.4byte	.LFE727-.LFB727
 7296 1834 01       		.uleb128 0x1
 7297 1835 9C       		.byte	0x9c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 228


 7298 1836 D9180000 		.4byte	0x18d9
 7299 183a 1E       		.uleb128 0x1e
 7300 183b BC250000 		.4byte	.LASF310
 7301 183f 01       		.byte	0x1
 7302 1840 E307     		.2byte	0x7e3
 7303 1842 C50D0000 		.4byte	0xdc5
 7304 1846 19070000 		.4byte	.LLST51
 7305 184a 1E       		.uleb128 0x1e
 7306 184b DE230000 		.4byte	.LASF357
 7307 184f 01       		.byte	0x1
 7308 1850 E407     		.2byte	0x7e4
 7309 1852 880A0000 		.4byte	0xa88
 7310 1856 5B070000 		.4byte	.LLST52
 7311 185a 28       		.uleb128 0x28
 7312 185b 8E000000 		.4byte	.LBB30
 7313 185f 22000000 		.4byte	.LBE30-.LBB30
 7314 1863 81180000 		.4byte	0x1881
 7315 1867 1E       		.uleb128 0x1e
 7316 1868 22020000 		.4byte	.LASF358
 7317 186c 01       		.byte	0x1
 7318 186d 1C08     		.2byte	0x81c
 7319 186f 930A0000 		.4byte	0xa93
 7320 1873 9D070000 		.4byte	.LLST53
 7321 1877 20       		.uleb128 0x20
 7322 1878 9A000000 		.4byte	.LVL167
 7323 187c 5A170000 		.4byte	0x175a
 7324 1880 00       		.byte	0
 7325 1881 20       		.uleb128 0x20
 7326 1882 12000000 		.4byte	.LVL157
 7327 1886 CF270000 		.4byte	0x27cf
 7328 188a 26       		.uleb128 0x26
 7329 188b 40000000 		.4byte	.LVL160
 7330 188f F1270000 		.4byte	0x27f1
 7331 1893 9E180000 		.4byte	0x189e
 7332 1897 22       		.uleb128 0x22
 7333 1898 01       		.uleb128 0x1
 7334 1899 50       		.byte	0x50
 7335 189a 02       		.uleb128 0x2
 7336 189b 74       		.byte	0x74
 7337 189c 18       		.sleb128 24
 7338 189d 00       		.byte	0
 7339 189e 26       		.uleb128 0x26
 7340 189f 48000000 		.4byte	.LVL161
 7341 18a3 F1270000 		.4byte	0x27f1
 7342 18a7 B2180000 		.4byte	0x18b2
 7343 18ab 22       		.uleb128 0x22
 7344 18ac 01       		.uleb128 0x1
 7345 18ad 50       		.byte	0x50
 7346 18ae 02       		.uleb128 0x2
 7347 18af 76       		.byte	0x76
 7348 18b0 00       		.sleb128 0
 7349 18b1 00       		.byte	0
 7350 18b2 26       		.uleb128 0x26
 7351 18b3 6A000000 		.4byte	.LVL162
 7352 18b7 DA270000 		.4byte	0x27da
 7353 18bb C6180000 		.4byte	0x18c6
 7354 18bf 22       		.uleb128 0x22
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 229


 7355 18c0 01       		.uleb128 0x1
 7356 18c1 51       		.byte	0x51
 7357 18c2 02       		.uleb128 0x2
 7358 18c3 76       		.byte	0x76
 7359 18c4 00       		.sleb128 0
 7360 18c5 00       		.byte	0
 7361 18c6 20       		.uleb128 0x20
 7362 18c7 8E000000 		.4byte	.LVL165
 7363 18cb 9E0D0000 		.4byte	0xd9e
 7364 18cf 20       		.uleb128 0x20
 7365 18d0 D6000000 		.4byte	.LVL175
 7366 18d4 E6270000 		.4byte	0x27e6
 7367 18d8 00       		.byte	0
 7368 18d9 29       		.uleb128 0x29
 7369 18da 23230000 		.4byte	.LASF359
 7370 18de 01       		.byte	0x1
 7371 18df 7404     		.2byte	0x474
 7372 18e1 00000000 		.4byte	.LFB715
 7373 18e5 84000000 		.4byte	.LFE715-.LFB715
 7374 18e9 01       		.uleb128 0x1
 7375 18ea 9C       		.byte	0x9c
 7376 18eb 79190000 		.4byte	0x1979
 7377 18ef 1D       		.uleb128 0x1d
 7378 18f0 AF1F0000 		.4byte	.LASF360
 7379 18f4 01       		.byte	0x1
 7380 18f5 7404     		.2byte	0x474
 7381 18f7 7F190000 		.4byte	0x197f
 7382 18fb D3070000 		.4byte	.LLST54
 7383 18ff 1D       		.uleb128 0x1d
 7384 1900 1D250000 		.4byte	.LASF361
 7385 1904 01       		.byte	0x1
 7386 1905 7404     		.2byte	0x474
 7387 1907 CD100000 		.4byte	0x10cd
 7388 190b FF070000 		.4byte	.LLST55
 7389 190f 1E       		.uleb128 0x1e
 7390 1910 58250000 		.4byte	.LASF327
 7391 1914 01       		.byte	0x1
 7392 1915 7604     		.2byte	0x476
 7393 1917 9E0A0000 		.4byte	0xa9e
 7394 191b 2B080000 		.4byte	.LLST56
 7395 191f 24       		.uleb128 0x24
 7396 1920 DE230000 		.4byte	.LASF357
 7397 1924 01       		.byte	0x1
 7398 1925 7704     		.2byte	0x477
 7399 1927 880A0000 		.4byte	0xa88
 7400 192b 01       		.uleb128 0x1
 7401 192c 50       		.byte	0x50
 7402 192d 1E       		.uleb128 0x1e
 7403 192e 64120000 		.4byte	.LASF362
 7404 1932 01       		.byte	0x1
 7405 1933 7704     		.2byte	0x477
 7406 1935 880A0000 		.4byte	0xa88
 7407 1939 3E080000 		.4byte	.LLST57
 7408 193d 33       		.uleb128 0x33
 7409 193e 18000000 		.4byte	.Ldebug_ranges0+0x18
 7410 1942 66190000 		.4byte	0x1966
 7411 1946 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 230


 7412 1947 71080000 		.4byte	.LASF328
 7413 194b 01       		.byte	0x1
 7414 194c 8104     		.2byte	0x481
 7415 194e CD100000 		.4byte	0x10cd
 7416 1952 5D080000 		.4byte	.LLST58
 7417 1956 21       		.uleb128 0x21
 7418 1957 62000000 		.4byte	.LVL183
 7419 195b 3F100000 		.4byte	0x103f
 7420 195f 22       		.uleb128 0x22
 7421 1960 01       		.uleb128 0x1
 7422 1961 51       		.byte	0x51
 7423 1962 01       		.uleb128 0x1
 7424 1963 30       		.byte	0x30
 7425 1964 00       		.byte	0
 7426 1965 00       		.byte	0
 7427 1966 20       		.uleb128 0x20
 7428 1967 22000000 		.4byte	.LVL178
 7429 196b 91160000 		.4byte	0x1691
 7430 196f 20       		.uleb128 0x20
 7431 1970 66000000 		.4byte	.LVL184
 7432 1974 20180000 		.4byte	0x1820
 7433 1978 00       		.byte	0
 7434 1979 06       		.uleb128 0x6
 7435 197a 04       		.byte	0x4
 7436 197b 9E0A0000 		.4byte	0xa9e
 7437 197f 07       		.uleb128 0x7
 7438 1980 79190000 		.4byte	0x1979
 7439 1984 29       		.uleb128 0x29
 7440 1985 4C100000 		.4byte	.LASF363
 7441 1989 01       		.byte	0x1
 7442 198a C804     		.2byte	0x4c8
 7443 198c 00000000 		.4byte	.LFB716
 7444 1990 44000000 		.4byte	.LFE716-.LFB716
 7445 1994 01       		.uleb128 0x1
 7446 1995 9C       		.byte	0x9c
 7447 1996 E6190000 		.4byte	0x19e6
 7448 199a 1D       		.uleb128 0x1d
 7449 199b F7210000 		.4byte	.LASF364
 7450 199f 01       		.byte	0x1
 7451 19a0 C804     		.2byte	0x4c8
 7452 19a2 CD100000 		.4byte	0x10cd
 7453 19a6 70080000 		.4byte	.LLST59
 7454 19aa 1E       		.uleb128 0x1e
 7455 19ab DE230000 		.4byte	.LASF357
 7456 19af 01       		.byte	0x1
 7457 19b0 CA04     		.2byte	0x4ca
 7458 19b2 880A0000 		.4byte	0xa88
 7459 19b6 A7080000 		.4byte	.LLST60
 7460 19ba 20       		.uleb128 0x20
 7461 19bb 16000000 		.4byte	.LVL188
 7462 19bf 91160000 		.4byte	0x1691
 7463 19c3 26       		.uleb128 0x26
 7464 19c4 1E000000 		.4byte	.LVL189
 7465 19c8 3F100000 		.4byte	0x103f
 7466 19cc DC190000 		.4byte	0x19dc
 7467 19d0 22       		.uleb128 0x22
 7468 19d1 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 231


 7469 19d2 50       		.byte	0x50
 7470 19d3 02       		.uleb128 0x2
 7471 19d4 74       		.byte	0x74
 7472 19d5 00       		.sleb128 0
 7473 19d6 22       		.uleb128 0x22
 7474 19d7 01       		.uleb128 0x1
 7475 19d8 51       		.byte	0x51
 7476 19d9 01       		.uleb128 0x1
 7477 19da 30       		.byte	0x30
 7478 19db 00       		.byte	0
 7479 19dc 20       		.uleb128 0x20
 7480 19dd 22000000 		.4byte	.LVL190
 7481 19e1 20180000 		.4byte	0x1820
 7482 19e5 00       		.byte	0
 7483 19e6 1F       		.uleb128 0x1f
 7484 19e7 0A270000 		.4byte	.LASF365
 7485 19eb 01       		.byte	0x1
 7486 19ec 300D     		.2byte	0xd30
 7487 19ee 00000000 		.4byte	.LFB746
 7488 19f2 54000000 		.4byte	.LFE746-.LFB746
 7489 19f6 01       		.uleb128 0x1
 7490 19f7 9C       		.byte	0x9c
 7491 19f8 7D1A0000 		.4byte	0x1a7d
 7492 19fc 2C       		.uleb128 0x2c
 7493 19fd 02000000 		.4byte	.LBB34
 7494 1a01 4C000000 		.4byte	.LBE34-.LBB34
 7495 1a05 1E       		.uleb128 0x1e
 7496 1a06 E2120000 		.4byte	.LASF366
 7497 1a0a 01       		.byte	0x1
 7498 1a0b 370D     		.2byte	0xd37
 7499 1a0d 880A0000 		.4byte	0xa88
 7500 1a11 DD080000 		.4byte	.LLST61
 7501 1a15 28       		.uleb128 0x28
 7502 1a16 14000000 		.4byte	.LBB35
 7503 1a1a 30000000 		.4byte	.LBE35-.LBB35
 7504 1a1e 691A0000 		.4byte	0x1a69
 7505 1a22 1E       		.uleb128 0x1e
 7506 1a23 BC250000 		.4byte	.LASF310
 7507 1a27 01       		.byte	0x1
 7508 1a28 450D     		.2byte	0xd45
 7509 1a2a C50D0000 		.4byte	0xdc5
 7510 1a2e F7080000 		.4byte	.LLST62
 7511 1a32 20       		.uleb128 0x20
 7512 1a33 18000000 		.4byte	.LVL196
 7513 1a37 CF270000 		.4byte	0x27cf
 7514 1a3b 26       		.uleb128 0x26
 7515 1a3c 26000000 		.4byte	.LVL199
 7516 1a40 F1270000 		.4byte	0x27f1
 7517 1a44 4F1A0000 		.4byte	0x1a4f
 7518 1a48 22       		.uleb128 0x22
 7519 1a49 01       		.uleb128 0x1
 7520 1a4a 50       		.byte	0x50
 7521 1a4b 02       		.uleb128 0x2
 7522 1a4c 75       		.byte	0x75
 7523 1a4d 04       		.sleb128 4
 7524 1a4e 00       		.byte	0
 7525 1a4f 20       		.uleb128 0x20
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 232


 7526 1a50 3E000000 		.4byte	.LVL200
 7527 1a54 E6270000 		.4byte	0x27e6
 7528 1a58 21       		.uleb128 0x21
 7529 1a59 44000000 		.4byte	.LVL201
 7530 1a5d CB0D0000 		.4byte	0xdcb
 7531 1a61 22       		.uleb128 0x22
 7532 1a62 01       		.uleb128 0x1
 7533 1a63 50       		.byte	0x50
 7534 1a64 02       		.uleb128 0x2
 7535 1a65 75       		.byte	0x75
 7536 1a66 00       		.sleb128 0
 7537 1a67 00       		.byte	0
 7538 1a68 00       		.byte	0
 7539 1a69 20       		.uleb128 0x20
 7540 1a6a 08000000 		.4byte	.LVL193
 7541 1a6e 91160000 		.4byte	0x1691
 7542 1a72 20       		.uleb128 0x20
 7543 1a73 12000000 		.4byte	.LVL195
 7544 1a77 20180000 		.4byte	0x1820
 7545 1a7b 00       		.byte	0
 7546 1a7c 00       		.byte	0
 7547 1a7d 34       		.uleb128 0x34
 7548 1a7e 9C120000 		.4byte	.LASF368
 7549 1a82 01       		.byte	0x1
 7550 1a83 460C     		.2byte	0xc46
 7551 1a85 00000000 		.4byte	.LFB742
 7552 1a89 2C000000 		.4byte	.LFE742-.LFB742
 7553 1a8d 01       		.uleb128 0x1
 7554 1a8e 9C       		.byte	0x9c
 7555 1a8f CC1A0000 		.4byte	0x1acc
 7556 1a93 1D       		.uleb128 0x1d
 7557 1a94 931D0000 		.4byte	.LASF318
 7558 1a98 01       		.byte	0x1
 7559 1a99 460C     		.2byte	0xc46
 7560 1a9b B0000000 		.4byte	0xb0
 7561 1a9f 0A090000 		.4byte	.LLST63
 7562 1aa3 28       		.uleb128 0x28
 7563 1aa4 1E000000 		.4byte	.LBB36
 7564 1aa8 04000000 		.4byte	.LBE36-.LBB36
 7565 1aac C21A0000 		.4byte	0x1ac2
 7566 1ab0 35       		.uleb128 0x35
 7567 1ab1 90060000 		.4byte	.LASF467
 7568 1ab5 01       		.byte	0x1
 7569 1ab6 760C     		.2byte	0xc76
 7570 1ab8 20       		.uleb128 0x20
 7571 1ab9 22000000 		.4byte	.LVL205
 7572 1abd 41280000 		.4byte	0x2841
 7573 1ac1 00       		.byte	0
 7574 1ac2 20       		.uleb128 0x20
 7575 1ac3 06000000 		.4byte	.LVL204
 7576 1ac7 E6190000 		.4byte	0x19e6
 7577 1acb 00       		.byte	0
 7578 1acc 29       		.uleb128 0x29
 7579 1acd 4B1B0000 		.4byte	.LASF369
 7580 1ad1 01       		.byte	0x1
 7581 1ad2 C90A     		.2byte	0xac9
 7582 1ad4 00000000 		.4byte	.LFB733
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 233


 7583 1ad8 BC000000 		.4byte	.LFE733-.LFB733
 7584 1adc 01       		.uleb128 0x1
 7585 1add 9C       		.byte	0x9c
 7586 1ade 551B0000 		.4byte	0x1b55
 7587 1ae2 28       		.uleb128 0x28
 7588 1ae3 1C000000 		.4byte	.LBB37
 7589 1ae7 36000000 		.4byte	.LBE37-.LBB37
 7590 1aeb 1A1B0000 		.4byte	0x1b1a
 7591 1aef 1E       		.uleb128 0x1e
 7592 1af0 D5210000 		.4byte	.LASF370
 7593 1af4 01       		.byte	0x1
 7594 1af5 F30A     		.2byte	0xaf3
 7595 1af7 5B1B0000 		.4byte	0x1b5b
 7596 1afb 2B090000 		.4byte	.LLST64
 7597 1aff 36       		.uleb128 0x36
 7598 1b00 95160000 		.4byte	.LASF371
 7599 1b04 01       		.byte	0x1
 7600 1b05 F40A     		.2byte	0xaf4
 7601 1b07 1B0F0000 		.4byte	0xf1b
 7602 1b0b A5CB96AD 		.sleb128 -1515870811
 7602      7A
 7603 1b10 20       		.uleb128 0x20
 7604 1b11 52000000 		.4byte	.LVL208
 7605 1b15 4D280000 		.4byte	0x284d
 7606 1b19 00       		.byte	0
 7607 1b1a 2C       		.uleb128 0x2c
 7608 1b1b 52000000 		.4byte	.LBB38
 7609 1b1f 6A000000 		.4byte	.LBE38-.LBB38
 7610 1b23 24       		.uleb128 0x24
 7611 1b24 C6220000 		.4byte	.LASF372
 7612 1b28 01       		.byte	0x1
 7613 1b29 010B     		.2byte	0xb01
 7614 1b2b 930A0000 		.4byte	0xa93
 7615 1b2f 01       		.uleb128 0x1
 7616 1b30 53       		.byte	0x53
 7617 1b31 2C       		.uleb128 0x2c
 7618 1b32 72000000 		.4byte	.LBB39
 7619 1b36 3E000000 		.4byte	.LBE39-.LBB39
 7620 1b3a 24       		.uleb128 0x24
 7621 1b3b DA010000 		.4byte	.LASF373
 7622 1b3f 01       		.byte	0x1
 7623 1b40 010B     		.2byte	0xb01
 7624 1b42 601B0000 		.4byte	0x1b60
 7625 1b46 0B       		.uleb128 0xb
 7626 1b47 73       		.byte	0x73
 7627 1b48 00       		.sleb128 0
 7628 1b49 44       		.byte	0x44
 7629 1b4a 1E       		.byte	0x1e
 7630 1b4b 03       		.byte	0x3
 7631 1b4c 30000000 		.4byte	pxReadyTasksLists
 7632 1b50 22       		.byte	0x22
 7633 1b51 9F       		.byte	0x9f
 7634 1b52 00       		.byte	0
 7635 1b53 00       		.byte	0
 7636 1b54 00       		.byte	0
 7637 1b55 06       		.uleb128 0x6
 7638 1b56 04       		.byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 234


 7639 1b57 1B0F0000 		.4byte	0xf1b
 7640 1b5b 07       		.uleb128 0x7
 7641 1b5c 551B0000 		.4byte	0x1b55
 7642 1b60 07       		.uleb128 0x7
 7643 1b61 1A180000 		.4byte	0x181a
 7644 1b65 29       		.uleb128 0x29
 7645 1b66 D1230000 		.4byte	.LASF374
 7646 1b6a 01       		.byte	0x1
 7647 1b6b 1E06     		.2byte	0x61e
 7648 1b6d 00000000 		.4byte	.LFB720
 7649 1b71 98000000 		.4byte	.LFE720-.LFB720
 7650 1b75 01       		.uleb128 0x1
 7651 1b76 9C       		.byte	0x9c
 7652 1b77 141C0000 		.4byte	0x1c14
 7653 1b7b 1D       		.uleb128 0x1d
 7654 1b7c D11E0000 		.4byte	.LASF375
 7655 1b80 01       		.byte	0x1
 7656 1b81 1E06     		.2byte	0x61e
 7657 1b83 910B0000 		.4byte	0xb91
 7658 1b87 3E090000 		.4byte	.LLST65
 7659 1b8b 1E       		.uleb128 0x1e
 7660 1b8c BC250000 		.4byte	.LASF310
 7661 1b90 01       		.byte	0x1
 7662 1b91 2006     		.2byte	0x620
 7663 1b93 C50D0000 		.4byte	0xdc5
 7664 1b97 5C090000 		.4byte	.LLST66
 7665 1b9b 20       		.uleb128 0x20
 7666 1b9c 08000000 		.4byte	.LVL213
 7667 1ba0 CF270000 		.4byte	0x27cf
 7668 1ba4 26       		.uleb128 0x26
 7669 1ba5 18000000 		.4byte	.LVL215
 7670 1ba9 F1270000 		.4byte	0x27f1
 7671 1bad B81B0000 		.4byte	0x1bb8
 7672 1bb1 22       		.uleb128 0x22
 7673 1bb2 01       		.uleb128 0x1
 7674 1bb3 50       		.byte	0x50
 7675 1bb4 02       		.uleb128 0x2
 7676 1bb5 76       		.byte	0x76
 7677 1bb6 00       		.sleb128 0
 7678 1bb7 00       		.byte	0
 7679 1bb8 26       		.uleb128 0x26
 7680 1bb9 24000000 		.4byte	.LVL216
 7681 1bbd F1270000 		.4byte	0x27f1
 7682 1bc1 CC1B0000 		.4byte	0x1bcc
 7683 1bc5 22       		.uleb128 0x22
 7684 1bc6 01       		.uleb128 0x1
 7685 1bc7 50       		.byte	0x50
 7686 1bc8 02       		.uleb128 0x2
 7687 1bc9 74       		.byte	0x74
 7688 1bca 18       		.sleb128 24
 7689 1bcb 00       		.byte	0
 7690 1bcc 26       		.uleb128 0x26
 7691 1bcd 2E000000 		.4byte	.LVL217
 7692 1bd1 DA270000 		.4byte	0x27da
 7693 1bd5 E61B0000 		.4byte	0x1be6
 7694 1bd9 22       		.uleb128 0x22
 7695 1bda 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 235


 7696 1bdb 50       		.byte	0x50
 7697 1bdc 02       		.uleb128 0x2
 7698 1bdd 75       		.byte	0x75
 7699 1bde 00       		.sleb128 0
 7700 1bdf 22       		.uleb128 0x22
 7701 1be0 01       		.uleb128 0x1
 7702 1be1 51       		.byte	0x51
 7703 1be2 02       		.uleb128 0x2
 7704 1be3 76       		.byte	0x76
 7705 1be4 00       		.sleb128 0
 7706 1be5 00       		.byte	0
 7707 1be6 20       		.uleb128 0x20
 7708 1be7 32000000 		.4byte	.LVL218
 7709 1beb E6270000 		.4byte	0x27e6
 7710 1bef 20       		.uleb128 0x20
 7711 1bf0 3C000000 		.4byte	.LVL219
 7712 1bf4 CF270000 		.4byte	0x27cf
 7713 1bf8 20       		.uleb128 0x20
 7714 1bf9 40000000 		.4byte	.LVL220
 7715 1bfd 9E0D0000 		.4byte	0xd9e
 7716 1c01 20       		.uleb128 0x20
 7717 1c02 44000000 		.4byte	.LVL221
 7718 1c06 E6270000 		.4byte	0x27e6
 7719 1c0a 20       		.uleb128 0x20
 7720 1c0b 8E000000 		.4byte	.LVL224
 7721 1c0f CC1A0000 		.4byte	0x1acc
 7722 1c13 00       		.byte	0
 7723 1c14 29       		.uleb128 0x29
 7724 1c15 36100000 		.4byte	.LASF376
 7725 1c19 01       		.byte	0x1
 7726 1c1a 0F0B     		.2byte	0xb0f
 7727 1c1c 00000000 		.4byte	.LFB734
 7728 1c20 24000000 		.4byte	.LFE734-.LFB734
 7729 1c24 01       		.uleb128 0x1
 7730 1c25 9C       		.byte	0x9c
 7731 1c26 691C0000 		.4byte	0x1c69
 7732 1c2a 1D       		.uleb128 0x1d
 7733 1c2b 32030000 		.4byte	.LASF377
 7734 1c2f 01       		.byte	0x1
 7735 1c30 0F0B     		.2byte	0xb0f
 7736 1c32 601B0000 		.4byte	0x1b60
 7737 1c36 6F090000 		.4byte	.LLST67
 7738 1c3a 1D       		.uleb128 0x1d
 7739 1c3b B1230000 		.4byte	.LASF325
 7740 1c3f 01       		.byte	0x1
 7741 1c40 0F0B     		.2byte	0xb0f
 7742 1c42 CD100000 		.4byte	0x10cd
 7743 1c46 90090000 		.4byte	.LLST68
 7744 1c4a 20       		.uleb128 0x20
 7745 1c4b 16000000 		.4byte	.LVL228
 7746 1c4f FD270000 		.4byte	0x27fd
 7747 1c53 21       		.uleb128 0x21
 7748 1c54 1E000000 		.4byte	.LVL229
 7749 1c58 3F100000 		.4byte	0x103f
 7750 1c5c 22       		.uleb128 0x22
 7751 1c5d 01       		.uleb128 0x1
 7752 1c5e 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 236


 7753 1c5f 02       		.uleb128 0x2
 7754 1c60 74       		.byte	0x74
 7755 1c61 00       		.sleb128 0
 7756 1c62 22       		.uleb128 0x22
 7757 1c63 01       		.uleb128 0x1
 7758 1c64 51       		.byte	0x51
 7759 1c65 01       		.uleb128 0x1
 7760 1c66 31       		.byte	0x31
 7761 1c67 00       		.byte	0
 7762 1c68 00       		.byte	0
 7763 1c69 29       		.uleb128 0x29
 7764 1c6a 10220000 		.4byte	.LASF378
 7765 1c6e 01       		.byte	0x1
 7766 1c6f 200B     		.2byte	0xb20
 7767 1c71 00000000 		.4byte	.LFB735
 7768 1c75 40000000 		.4byte	.LFE735-.LFB735
 7769 1c79 01       		.uleb128 0x1
 7770 1c7a 9C       		.byte	0x9c
 7771 1c7b DA1C0000 		.4byte	0x1cda
 7772 1c7f 1D       		.uleb128 0x1d
 7773 1c80 32030000 		.4byte	.LASF377
 7774 1c84 01       		.byte	0x1
 7775 1c85 200B     		.2byte	0xb20
 7776 1c87 1A180000 		.4byte	0x181a
 7777 1c8b BC090000 		.4byte	.LLST69
 7778 1c8f 1D       		.uleb128 0x1d
 7779 1c90 A01D0000 		.4byte	.LASF266
 7780 1c94 01       		.byte	0x1
 7781 1c95 200B     		.2byte	0xb20
 7782 1c97 CD100000 		.4byte	0x10cd
 7783 1c9b F3090000 		.4byte	.LLST70
 7784 1c9f 1D       		.uleb128 0x1d
 7785 1ca0 B1230000 		.4byte	.LASF325
 7786 1ca4 01       		.byte	0x1
 7787 1ca5 200B     		.2byte	0xb20
 7788 1ca7 CD100000 		.4byte	0x10cd
 7789 1cab 1F0A0000 		.4byte	.LLST71
 7790 1caf 26       		.uleb128 0x26
 7791 1cb0 32000000 		.4byte	.LVL237
 7792 1cb4 DA270000 		.4byte	0x27da
 7793 1cb8 C41C0000 		.4byte	0x1cc4
 7794 1cbc 22       		.uleb128 0x22
 7795 1cbd 01       		.uleb128 0x1
 7796 1cbe 50       		.byte	0x50
 7797 1cbf 03       		.uleb128 0x3
 7798 1cc0 F3       		.byte	0xf3
 7799 1cc1 01       		.uleb128 0x1
 7800 1cc2 50       		.byte	0x50
 7801 1cc3 00       		.byte	0
 7802 1cc4 21       		.uleb128 0x21
 7803 1cc5 3A000000 		.4byte	.LVL238
 7804 1cc9 3F100000 		.4byte	0x103f
 7805 1ccd 22       		.uleb128 0x22
 7806 1cce 01       		.uleb128 0x1
 7807 1ccf 50       		.byte	0x50
 7808 1cd0 02       		.uleb128 0x2
 7809 1cd1 74       		.byte	0x74
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 237


 7810 1cd2 00       		.sleb128 0
 7811 1cd3 22       		.uleb128 0x22
 7812 1cd4 01       		.uleb128 0x1
 7813 1cd5 51       		.byte	0x51
 7814 1cd6 01       		.uleb128 0x1
 7815 1cd7 31       		.byte	0x31
 7816 1cd8 00       		.byte	0
 7817 1cd9 00       		.byte	0
 7818 1cda 29       		.uleb128 0x29
 7819 1cdb A1130000 		.4byte	.LASF379
 7820 1cdf 01       		.byte	0x1
 7821 1ce0 3A0B     		.2byte	0xb3a
 7822 1ce2 00000000 		.4byte	.LFB736
 7823 1ce6 2C000000 		.4byte	.LFE736-.LFB736
 7824 1cea 01       		.uleb128 0x1
 7825 1ceb 9C       		.byte	0x9c
 7826 1cec 401D0000 		.4byte	0x1d40
 7827 1cf0 1D       		.uleb128 0x1d
 7828 1cf1 32030000 		.4byte	.LASF377
 7829 1cf5 01       		.byte	0x1
 7830 1cf6 3A0B     		.2byte	0xb3a
 7831 1cf8 601B0000 		.4byte	0x1b60
 7832 1cfc 4B0A0000 		.4byte	.LLST72
 7833 1d00 1D       		.uleb128 0x1d
 7834 1d01 B1230000 		.4byte	.LASF325
 7835 1d05 01       		.byte	0x1
 7836 1d06 3A0B     		.2byte	0xb3a
 7837 1d08 9E0A0000 		.4byte	0xa9e
 7838 1d0c 6C0A0000 		.4byte	.LLST73
 7839 1d10 1D       		.uleb128 0x1d
 7840 1d11 1B0E0000 		.4byte	.LASF380
 7841 1d15 01       		.byte	0x1
 7842 1d16 3A0B     		.2byte	0xb3a
 7843 1d18 C8100000 		.4byte	0x10c8
 7844 1d1c 8A0A0000 		.4byte	.LLST74
 7845 1d20 20       		.uleb128 0x20
 7846 1d21 18000000 		.4byte	.LVL243
 7847 1d25 DA270000 		.4byte	0x27da
 7848 1d29 21       		.uleb128 0x21
 7849 1d2a 26000000 		.4byte	.LVL245
 7850 1d2e 3F100000 		.4byte	0x103f
 7851 1d32 22       		.uleb128 0x22
 7852 1d33 01       		.uleb128 0x1
 7853 1d34 50       		.byte	0x50
 7854 1d35 02       		.uleb128 0x2
 7855 1d36 74       		.byte	0x74
 7856 1d37 00       		.sleb128 0
 7857 1d38 22       		.uleb128 0x22
 7858 1d39 01       		.uleb128 0x1
 7859 1d3a 51       		.byte	0x51
 7860 1d3b 02       		.uleb128 0x2
 7861 1d3c 75       		.byte	0x75
 7862 1d3d 00       		.sleb128 0
 7863 1d3e 00       		.byte	0
 7864 1d3f 00       		.byte	0
 7865 1d40 27       		.uleb128 0x27
 7866 1d41 A5110000 		.4byte	.LASF381
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 238


 7867 1d45 01       		.byte	0x1
 7868 1d46 590B     		.2byte	0xb59
 7869 1d48 880A0000 		.4byte	0xa88
 7870 1d4c 00000000 		.4byte	.LFB737
 7871 1d50 7C000000 		.4byte	.LFE737-.LFB737
 7872 1d54 01       		.uleb128 0x1
 7873 1d55 9C       		.byte	0x9c
 7874 1d56 E01D0000 		.4byte	0x1de0
 7875 1d5a 1D       		.uleb128 0x1d
 7876 1d5b 32030000 		.4byte	.LASF377
 7877 1d5f 01       		.byte	0x1
 7878 1d60 590B     		.2byte	0xb59
 7879 1d62 EB1D0000 		.4byte	0x1deb
 7880 1d66 B60A0000 		.4byte	.LLST75
 7881 1d6a 1E       		.uleb128 0x1e
 7882 1d6b 0B0A0000 		.4byte	.LASF382
 7883 1d6f 01       		.byte	0x1
 7884 1d70 5B0B     		.2byte	0xb5b
 7885 1d72 C50D0000 		.4byte	0xdc5
 7886 1d76 D70A0000 		.4byte	.LLST76
 7887 1d7a 1E       		.uleb128 0x1e
 7888 1d7b F8200000 		.4byte	.LASF309
 7889 1d7f 01       		.byte	0x1
 7890 1d80 5C0B     		.2byte	0xb5c
 7891 1d82 880A0000 		.4byte	0xa88
 7892 1d86 EA0A0000 		.4byte	.LLST77
 7893 1d8a 26       		.uleb128 0x26
 7894 1d8b 16000000 		.4byte	.LVL250
 7895 1d8f F1270000 		.4byte	0x27f1
 7896 1d93 9E1D0000 		.4byte	0x1d9e
 7897 1d97 22       		.uleb128 0x22
 7898 1d98 01       		.uleb128 0x1
 7899 1d99 50       		.byte	0x50
 7900 1d9a 02       		.uleb128 0x2
 7901 1d9b 75       		.byte	0x75
 7902 1d9c 00       		.sleb128 0
 7903 1d9d 00       		.byte	0
 7904 1d9e 26       		.uleb128 0x26
 7905 1d9f 26000000 		.4byte	.LVL251
 7906 1da3 F1270000 		.4byte	0x27f1
 7907 1da7 B21D0000 		.4byte	0x1db2
 7908 1dab 22       		.uleb128 0x22
 7909 1dac 01       		.uleb128 0x1
 7910 1dad 50       		.byte	0x50
 7911 1dae 02       		.uleb128 0x2
 7912 1daf 75       		.byte	0x75
 7913 1db0 00       		.sleb128 0
 7914 1db1 00       		.byte	0
 7915 1db2 26       		.uleb128 0x26
 7916 1db3 48000000 		.4byte	.LVL252
 7917 1db7 DA270000 		.4byte	0x27da
 7918 1dbb C61D0000 		.4byte	0x1dc6
 7919 1dbf 22       		.uleb128 0x22
 7920 1dc0 01       		.uleb128 0x1
 7921 1dc1 51       		.byte	0x51
 7922 1dc2 02       		.uleb128 0x2
 7923 1dc3 75       		.byte	0x75
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 239


 7924 1dc4 00       		.sleb128 0
 7925 1dc5 00       		.byte	0
 7926 1dc6 21       		.uleb128 0x21
 7927 1dc7 52000000 		.4byte	.LVL253
 7928 1dcb DA270000 		.4byte	0x27da
 7929 1dcf 22       		.uleb128 0x22
 7930 1dd0 01       		.uleb128 0x1
 7931 1dd1 50       		.byte	0x50
 7932 1dd2 05       		.uleb128 0x5
 7933 1dd3 03       		.byte	0x3
 7934 1dd4 14000000 		.4byte	.LANCHOR0+20
 7935 1dd8 22       		.uleb128 0x22
 7936 1dd9 01       		.uleb128 0x1
 7937 1dda 51       		.byte	0x51
 7938 1ddb 02       		.uleb128 0x2
 7939 1ddc 75       		.byte	0x75
 7940 1ddd 00       		.sleb128 0
 7941 1dde 00       		.byte	0
 7942 1ddf 00       		.byte	0
 7943 1de0 06       		.uleb128 0x6
 7944 1de1 04       		.byte	0x4
 7945 1de2 E61D0000 		.4byte	0x1de6
 7946 1de6 07       		.uleb128 0x7
 7947 1de7 860B0000 		.4byte	0xb86
 7948 1deb 07       		.uleb128 0x7
 7949 1dec E01D0000 		.4byte	0x1de0
 7950 1df0 27       		.uleb128 0x27
 7951 1df1 2F220000 		.4byte	.LASF383
 7952 1df5 01       		.byte	0x1
 7953 1df6 9D0B     		.2byte	0xb9d
 7954 1df8 880A0000 		.4byte	0xa88
 7955 1dfc 00000000 		.4byte	.LFB738
 7956 1e00 6C000000 		.4byte	.LFE738-.LFB738
 7957 1e04 01       		.uleb128 0x1
 7958 1e05 9C       		.byte	0x9c
 7959 1e06 781E0000 		.4byte	0x1e78
 7960 1e0a 1D       		.uleb128 0x1d
 7961 1e0b C5260000 		.4byte	.LASF384
 7962 1e0f 01       		.byte	0x1
 7963 1e10 9D0B     		.2byte	0xb9d
 7964 1e12 800B0000 		.4byte	0xb80
 7965 1e16 090B0000 		.4byte	.LLST78
 7966 1e1a 1D       		.uleb128 0x1d
 7967 1e1b A01D0000 		.4byte	.LASF266
 7968 1e1f 01       		.byte	0x1
 7969 1e20 9D0B     		.2byte	0xb9d
 7970 1e22 CD100000 		.4byte	0x10cd
 7971 1e26 2A0B0000 		.4byte	.LLST79
 7972 1e2a 1E       		.uleb128 0x1e
 7973 1e2b 0B0A0000 		.4byte	.LASF382
 7974 1e2f 01       		.byte	0x1
 7975 1e30 9F0B     		.2byte	0xb9f
 7976 1e32 C50D0000 		.4byte	0xdc5
 7977 1e36 4B0B0000 		.4byte	.LLST80
 7978 1e3a 1E       		.uleb128 0x1e
 7979 1e3b F8200000 		.4byte	.LASF309
 7980 1e3f 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 240


 7981 1e40 A00B     		.2byte	0xba0
 7982 1e42 880A0000 		.4byte	0xa88
 7983 1e46 5E0B0000 		.4byte	.LLST81
 7984 1e4a 20       		.uleb128 0x20
 7985 1e4b 20000000 		.4byte	.LVL260
 7986 1e4f F1270000 		.4byte	0x27f1
 7987 1e53 26       		.uleb128 0x26
 7988 1e54 28000000 		.4byte	.LVL261
 7989 1e58 F1270000 		.4byte	0x27f1
 7990 1e5c 671E0000 		.4byte	0x1e67
 7991 1e60 22       		.uleb128 0x22
 7992 1e61 01       		.uleb128 0x1
 7993 1e62 50       		.byte	0x50
 7994 1e63 02       		.uleb128 0x2
 7995 1e64 76       		.byte	0x76
 7996 1e65 00       		.sleb128 0
 7997 1e66 00       		.byte	0
 7998 1e67 21       		.uleb128 0x21
 7999 1e68 4E000000 		.4byte	.LVL262
 8000 1e6c DA270000 		.4byte	0x27da
 8001 1e70 22       		.uleb128 0x22
 8002 1e71 01       		.uleb128 0x1
 8003 1e72 51       		.byte	0x51
 8004 1e73 02       		.uleb128 0x2
 8005 1e74 76       		.byte	0x76
 8006 1e75 00       		.sleb128 0
 8007 1e76 00       		.byte	0
 8008 1e77 00       		.byte	0
 8009 1e78 29       		.uleb128 0x29
 8010 1e79 55050000 		.4byte	.LASF385
 8011 1e7d 01       		.byte	0x1
 8012 1e7e CA0B     		.2byte	0xbca
 8013 1e80 00000000 		.4byte	.LFB739
 8014 1e84 1C000000 		.4byte	.LFE739-.LFB739
 8015 1e88 01       		.uleb128 0x1
 8016 1e89 9C       		.byte	0x9c
 8017 1e8a 9D1E0000 		.4byte	0x1e9d
 8018 1e8e 23       		.uleb128 0x23
 8019 1e8f BB170000 		.4byte	.LASF386
 8020 1e93 01       		.byte	0x1
 8021 1e94 CA0B     		.2byte	0xbca
 8022 1e96 A31E0000 		.4byte	0x1ea3
 8023 1e9a 01       		.uleb128 0x1
 8024 1e9b 50       		.byte	0x50
 8025 1e9c 00       		.byte	0
 8026 1e9d 06       		.uleb128 0x6
 8027 1e9e 04       		.byte	0x4
 8028 1e9f F70B0000 		.4byte	0xbf7
 8029 1ea3 07       		.uleb128 0x7
 8030 1ea4 9D1E0000 		.4byte	0x1e9d
 8031 1ea8 27       		.uleb128 0x27
 8032 1ea9 021F0000 		.4byte	.LASF387
 8033 1ead 01       		.byte	0x1
 8034 1eae D20B     		.2byte	0xbd2
 8035 1eb0 880A0000 		.4byte	0xa88
 8036 1eb4 00000000 		.4byte	.LFB740
 8037 1eb8 64000000 		.4byte	.LFE740-.LFB740
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 241


 8038 1ebc 01       		.uleb128 0x1
 8039 1ebd 9C       		.byte	0x9c
 8040 1ebe 331F0000 		.4byte	0x1f33
 8041 1ec2 1D       		.uleb128 0x1d
 8042 1ec3 BB170000 		.4byte	.LASF386
 8043 1ec7 01       		.byte	0x1
 8044 1ec8 D20B     		.2byte	0xbd2
 8045 1eca A31E0000 		.4byte	0x1ea3
 8046 1ece 7D0B0000 		.4byte	.LLST82
 8047 1ed2 1D       		.uleb128 0x1d
 8048 1ed3 08080000 		.4byte	.LASF388
 8049 1ed7 01       		.byte	0x1
 8050 1ed8 D20B     		.2byte	0xbd2
 8051 1eda 7F190000 		.4byte	0x197f
 8052 1ede F40B0000 		.4byte	.LLST83
 8053 1ee2 1E       		.uleb128 0x1e
 8054 1ee3 F8200000 		.4byte	.LASF309
 8055 1ee7 01       		.byte	0x1
 8056 1ee8 D40B     		.2byte	0xbd4
 8057 1eea 880A0000 		.4byte	0xa88
 8058 1eee 200C0000 		.4byte	.LLST84
 8059 1ef2 28       		.uleb128 0x28
 8060 1ef3 16000000 		.4byte	.LBB40
 8061 1ef7 40000000 		.4byte	.LBE40-.LBB40
 8062 1efb 201F0000 		.4byte	0x1f20
 8063 1eff 1E       		.uleb128 0x1e
 8064 1f00 71080000 		.4byte	.LASF328
 8065 1f04 01       		.byte	0x1
 8066 1f05 DC0B     		.2byte	0xbdc
 8067 1f07 CD100000 		.4byte	0x10cd
 8068 1f0b 4A0C0000 		.4byte	.LLST85
 8069 1f0f 21       		.uleb128 0x21
 8070 1f10 48000000 		.4byte	.LVL271
 8071 1f14 781E0000 		.4byte	0x1e78
 8072 1f18 22       		.uleb128 0x22
 8073 1f19 01       		.uleb128 0x1
 8074 1f1a 50       		.byte	0x50
 8075 1f1b 02       		.uleb128 0x2
 8076 1f1c 74       		.byte	0x74
 8077 1f1d 00       		.sleb128 0
 8078 1f1e 00       		.byte	0
 8079 1f1f 00       		.byte	0
 8080 1f20 20       		.uleb128 0x20
 8081 1f21 16000000 		.4byte	.LVL269
 8082 1f25 CF270000 		.4byte	0x27cf
 8083 1f29 20       		.uleb128 0x20
 8084 1f2a 5A000000 		.4byte	.LVL279
 8085 1f2e E6270000 		.4byte	0x27e6
 8086 1f32 00       		.byte	0
 8087 1f33 2F       		.uleb128 0x2f
 8088 1f34 2D210000 		.4byte	.LASF390
 8089 1f38 01       		.byte	0x1
 8090 1f39 0F0C     		.2byte	0xc0f
 8091 1f3b 00000000 		.4byte	.LFB741
 8092 1f3f 10000000 		.4byte	.LFE741-.LFB741
 8093 1f43 01       		.uleb128 0x1
 8094 1f44 9C       		.byte	0x9c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 242


 8095 1f45 29       		.uleb128 0x29
 8096 1f46 31020000 		.4byte	.LASF391
 8097 1f4a 01       		.byte	0x1
 8098 1f4b DB0C     		.2byte	0xcdb
 8099 1f4d 00000000 		.4byte	.LFB743
 8100 1f51 1C000000 		.4byte	.LFE743-.LFB743
 8101 1f55 01       		.uleb128 0x1
 8102 1f56 9C       		.byte	0x9c
 8103 1f57 9A1F0000 		.4byte	0x1f9a
 8104 1f5b 1D       		.uleb128 0x1d
 8105 1f5c DF0F0000 		.4byte	.LASF392
 8106 1f60 01       		.byte	0x1
 8107 1f61 DB0C     		.2byte	0xcdb
 8108 1f63 910B0000 		.4byte	0xb91
 8109 1f67 680C0000 		.4byte	.LLST86
 8110 1f6b 1D       		.uleb128 0x1d
 8111 1f6c E21F0000 		.4byte	.LASF393
 8112 1f70 01       		.byte	0x1
 8113 1f71 DB0C     		.2byte	0xcdb
 8114 1f73 880A0000 		.4byte	0xa88
 8115 1f77 7B0C0000 		.4byte	.LLST87
 8116 1f7b 23       		.uleb128 0x23
 8117 1f7c D5260000 		.4byte	.LASF394
 8118 1f80 01       		.byte	0x1
 8119 1f81 DB0C     		.2byte	0xcdb
 8120 1f83 B0000000 		.4byte	0xb0
 8121 1f87 01       		.uleb128 0x1
 8122 1f88 52       		.byte	0x52
 8123 1f89 1E       		.uleb128 0x1e
 8124 1f8a BC250000 		.4byte	.LASF310
 8125 1f8e 01       		.byte	0x1
 8126 1f8f DD0C     		.2byte	0xcdd
 8127 1f91 C50D0000 		.4byte	0xdc5
 8128 1f95 A90C0000 		.4byte	.LLST88
 8129 1f99 00       		.byte	0
 8130 1f9a 27       		.uleb128 0x27
 8131 1f9b 0E0C0000 		.4byte	.LASF395
 8132 1f9f 01       		.byte	0x1
 8133 1fa0 EB0C     		.2byte	0xceb
 8134 1fa2 B0000000 		.4byte	0xb0
 8135 1fa6 00000000 		.4byte	.LFB744
 8136 1faa 20000000 		.4byte	.LFE744-.LFB744
 8137 1fae 01       		.uleb128 0x1
 8138 1faf 9C       		.byte	0x9c
 8139 1fb0 F51F0000 		.4byte	0x1ff5
 8140 1fb4 1D       		.uleb128 0x1d
 8141 1fb5 6C1A0000 		.4byte	.LASF352
 8142 1fb9 01       		.byte	0x1
 8143 1fba EB0C     		.2byte	0xceb
 8144 1fbc 910B0000 		.4byte	0xb91
 8145 1fc0 BC0C0000 		.4byte	.LLST89
 8146 1fc4 1D       		.uleb128 0x1d
 8147 1fc5 E21F0000 		.4byte	.LASF393
 8148 1fc9 01       		.byte	0x1
 8149 1fca EB0C     		.2byte	0xceb
 8150 1fcc 880A0000 		.4byte	0xa88
 8151 1fd0 E80C0000 		.4byte	.LLST90
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 243


 8152 1fd4 1E       		.uleb128 0x1e
 8153 1fd5 310C0000 		.4byte	.LASF396
 8154 1fd9 01       		.byte	0x1
 8155 1fda ED0C     		.2byte	0xced
 8156 1fdc B0000000 		.4byte	0xb0
 8157 1fe0 130D0000 		.4byte	.LLST91
 8158 1fe4 1E       		.uleb128 0x1e
 8159 1fe5 BC250000 		.4byte	.LASF310
 8160 1fe9 01       		.byte	0x1
 8161 1fea EE0C     		.2byte	0xcee
 8162 1fec C50D0000 		.4byte	0xdc5
 8163 1ff0 490D0000 		.4byte	.LLST92
 8164 1ff4 00       		.byte	0
 8165 1ff5 27       		.uleb128 0x27
 8166 1ff6 EE230000 		.4byte	.LASF397
 8167 1ffa 01       		.byte	0x1
 8168 1ffb 580E     		.2byte	0xe58
 8169 1ffd 910B0000 		.4byte	0xb91
 8170 2001 00000000 		.4byte	.LFB749
 8171 2005 0C000000 		.4byte	.LFE749-.LFB749
 8172 2009 01       		.uleb128 0x1
 8173 200a 9C       		.byte	0x9c
 8174 200b 1E200000 		.4byte	0x201e
 8175 200f 24       		.uleb128 0x24
 8176 2010 F8200000 		.4byte	.LASF309
 8177 2014 01       		.byte	0x1
 8178 2015 5A0E     		.2byte	0xe5a
 8179 2017 910B0000 		.4byte	0xb91
 8180 201b 01       		.uleb128 0x1
 8181 201c 50       		.byte	0x50
 8182 201d 00       		.byte	0
 8183 201e 27       		.uleb128 0x27
 8184 201f BB020000 		.4byte	.LASF398
 8185 2023 01       		.byte	0x1
 8186 2024 690E     		.2byte	0xe69
 8187 2026 880A0000 		.4byte	0xa88
 8188 202a 00000000 		.4byte	.LFB750
 8189 202e 20000000 		.4byte	.LFE750-.LFB750
 8190 2032 01       		.uleb128 0x1
 8191 2033 9C       		.byte	0x9c
 8192 2034 47200000 		.4byte	0x2047
 8193 2038 24       		.uleb128 0x24
 8194 2039 F8200000 		.4byte	.LASF309
 8195 203d 01       		.byte	0x1
 8196 203e 6B0E     		.2byte	0xe6b
 8197 2040 880A0000 		.4byte	0xa88
 8198 2044 01       		.uleb128 0x1
 8199 2045 50       		.byte	0x50
 8200 2046 00       		.byte	0
 8201 2047 27       		.uleb128 0x27
 8202 2048 1C190000 		.4byte	.LASF399
 8203 204c 01       		.byte	0x1
 8204 204d 4D10     		.2byte	0x104d
 8205 204f 9E0A0000 		.4byte	0xa9e
 8206 2053 00000000 		.4byte	.LFB751
 8207 2057 20000000 		.4byte	.LFE751-.LFB751
 8208 205b 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 244


 8209 205c 9C       		.byte	0x9c
 8210 205d 70200000 		.4byte	0x2070
 8211 2061 24       		.uleb128 0x24
 8212 2062 D4150000 		.4byte	.LASF333
 8213 2066 01       		.byte	0x1
 8214 2067 4F10     		.2byte	0x104f
 8215 2069 9E0A0000 		.4byte	0xa9e
 8216 206d 01       		.uleb128 0x1
 8217 206e 50       		.byte	0x50
 8218 206f 00       		.byte	0
 8219 2070 27       		.uleb128 0x27
 8220 2071 B61E0000 		.4byte	.LASF400
 8221 2075 01       		.byte	0x1
 8222 2076 6E10     		.2byte	0x106e
 8223 2078 EB000000 		.4byte	0xeb
 8224 207c 00000000 		.4byte	.LFB752
 8225 2080 80000000 		.4byte	.LFE752-.LFB752
 8226 2084 01       		.uleb128 0x1
 8227 2085 9C       		.byte	0x9c
 8228 2086 F8200000 		.4byte	0x20f8
 8229 208a 1D       		.uleb128 0x1d
 8230 208b 3A0A0000 		.4byte	.LASF401
 8231 208f 01       		.byte	0x1
 8232 2090 6E10     		.2byte	0x106e
 8233 2092 880A0000 		.4byte	0xa88
 8234 2096 5C0D0000 		.4byte	.LLST93
 8235 209a 1D       		.uleb128 0x1d
 8236 209b B1230000 		.4byte	.LASF325
 8237 209f 01       		.byte	0x1
 8238 20a0 6E10     		.2byte	0x106e
 8239 20a2 9E0A0000 		.4byte	0xa9e
 8240 20a6 880D0000 		.4byte	.LLST94
 8241 20aa 1E       		.uleb128 0x1e
 8242 20ab 90270000 		.4byte	.LASF402
 8243 20af 01       		.byte	0x1
 8244 20b0 7010     		.2byte	0x1070
 8245 20b2 EB000000 		.4byte	0xeb
 8246 20b6 B40D0000 		.4byte	.LLST95
 8247 20ba 20       		.uleb128 0x20
 8248 20bb 0A000000 		.4byte	.LVL297
 8249 20bf CF270000 		.4byte	0x27cf
 8250 20c3 26       		.uleb128 0x26
 8251 20c4 2A000000 		.4byte	.LVL298
 8252 20c8 3F100000 		.4byte	0x103f
 8253 20cc DC200000 		.4byte	0x20dc
 8254 20d0 22       		.uleb128 0x22
 8255 20d1 01       		.uleb128 0x1
 8256 20d2 50       		.byte	0x50
 8257 20d3 02       		.uleb128 0x2
 8258 20d4 74       		.byte	0x74
 8259 20d5 00       		.sleb128 0
 8260 20d6 22       		.uleb128 0x22
 8261 20d7 01       		.uleb128 0x1
 8262 20d8 51       		.byte	0x51
 8263 20d9 01       		.uleb128 0x1
 8264 20da 31       		.byte	0x31
 8265 20db 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 245


 8266 20dc 20       		.uleb128 0x20
 8267 20dd 3E000000 		.4byte	.LVL299
 8268 20e1 E6270000 		.4byte	0x27e6
 8269 20e5 20       		.uleb128 0x20
 8270 20e6 42000000 		.4byte	.LVL300
 8271 20ea CF270000 		.4byte	0x27cf
 8272 20ee 20       		.uleb128 0x20
 8273 20ef 74000000 		.4byte	.LVL302
 8274 20f3 E6270000 		.4byte	0x27e6
 8275 20f7 00       		.byte	0
 8276 20f8 27       		.uleb128 0x27
 8277 20f9 21120000 		.4byte	.LASF403
 8278 20fd 01       		.byte	0x1
 8279 20fe B210     		.2byte	0x10b2
 8280 2100 880A0000 		.4byte	0xa88
 8281 2104 00000000 		.4byte	.LFB753
 8282 2108 A4000000 		.4byte	.LFE753-.LFB753
 8283 210c 01       		.uleb128 0x1
 8284 210d 9C       		.byte	0x9c
 8285 210e A0210000 		.4byte	0x21a0
 8286 2112 1D       		.uleb128 0x1d
 8287 2113 4A0B0000 		.4byte	.LASF404
 8288 2117 01       		.byte	0x1
 8289 2118 B210     		.2byte	0x10b2
 8290 211a EB000000 		.4byte	0xeb
 8291 211e D20D0000 		.4byte	.LLST96
 8292 2122 1D       		.uleb128 0x1d
 8293 2123 83020000 		.4byte	.LASF405
 8294 2127 01       		.byte	0x1
 8295 2128 B210     		.2byte	0x10b2
 8296 212a EB000000 		.4byte	0xeb
 8297 212e FE0D0000 		.4byte	.LLST97
 8298 2132 1D       		.uleb128 0x1d
 8299 2133 D4200000 		.4byte	.LASF406
 8300 2137 01       		.byte	0x1
 8301 2138 B210     		.2byte	0x10b2
 8302 213a 0E010000 		.4byte	0x10e
 8303 213e 430E0000 		.4byte	.LLST98
 8304 2142 1D       		.uleb128 0x1d
 8305 2143 B1230000 		.4byte	.LASF325
 8306 2147 01       		.byte	0x1
 8307 2148 B210     		.2byte	0x10b2
 8308 214a 9E0A0000 		.4byte	0xa9e
 8309 214e 6F0E0000 		.4byte	.LLST99
 8310 2152 1E       		.uleb128 0x1e
 8311 2153 F8200000 		.4byte	.LASF309
 8312 2157 01       		.byte	0x1
 8313 2158 B410     		.2byte	0x10b4
 8314 215a 880A0000 		.4byte	0xa88
 8315 215e 9B0E0000 		.4byte	.LLST100
 8316 2162 20       		.uleb128 0x20
 8317 2163 0E000000 		.4byte	.LVL305
 8318 2167 CF270000 		.4byte	0x27cf
 8319 216b 26       		.uleb128 0x26
 8320 216c 40000000 		.4byte	.LVL306
 8321 2170 3F100000 		.4byte	0x103f
 8322 2174 84210000 		.4byte	0x2184
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 246


 8323 2178 22       		.uleb128 0x22
 8324 2179 01       		.uleb128 0x1
 8325 217a 50       		.byte	0x50
 8326 217b 02       		.uleb128 0x2
 8327 217c 76       		.byte	0x76
 8328 217d 00       		.sleb128 0
 8329 217e 22       		.uleb128 0x22
 8330 217f 01       		.uleb128 0x1
 8331 2180 51       		.byte	0x51
 8332 2181 01       		.uleb128 0x1
 8333 2182 31       		.byte	0x31
 8334 2183 00       		.byte	0
 8335 2184 20       		.uleb128 0x20
 8336 2185 54000000 		.4byte	.LVL307
 8337 2189 E6270000 		.4byte	0x27e6
 8338 218d 20       		.uleb128 0x20
 8339 218e 58000000 		.4byte	.LVL308
 8340 2192 CF270000 		.4byte	0x27cf
 8341 2196 20       		.uleb128 0x20
 8342 2197 98000000 		.4byte	.LVL313
 8343 219b E6270000 		.4byte	0x27e6
 8344 219f 00       		.byte	0
 8345 21a0 27       		.uleb128 0x27
 8346 21a1 90090000 		.4byte	.LASF407
 8347 21a5 01       		.byte	0x1
 8348 21a6 0211     		.2byte	0x1102
 8349 21a8 880A0000 		.4byte	0xa88
 8350 21ac 00000000 		.4byte	.LFB754
 8351 21b0 C8000000 		.4byte	.LFE754-.LFB754
 8352 21b4 01       		.uleb128 0x1
 8353 21b5 9C       		.byte	0x9c
 8354 21b6 65220000 		.4byte	0x2265
 8355 21ba 1D       		.uleb128 0x1d
 8356 21bb 791A0000 		.4byte	.LASF408
 8357 21bf 01       		.byte	0x1
 8358 21c0 0211     		.2byte	0x1102
 8359 21c2 910B0000 		.4byte	0xb91
 8360 21c6 C50E0000 		.4byte	.LLST101
 8361 21ca 1D       		.uleb128 0x1d
 8362 21cb F7170000 		.4byte	.LASF409
 8363 21cf 01       		.byte	0x1
 8364 21d0 0211     		.2byte	0x1102
 8365 21d2 EB000000 		.4byte	0xeb
 8366 21d6 F10E0000 		.4byte	.LLST102
 8367 21da 1D       		.uleb128 0x1d
 8368 21db F3180000 		.4byte	.LASF410
 8369 21df 01       		.byte	0x1
 8370 21e0 0211     		.2byte	0x1102
 8371 21e2 C70B0000 		.4byte	0xbc7
 8372 21e6 360F0000 		.4byte	.LLST103
 8373 21ea 1D       		.uleb128 0x1d
 8374 21eb 7A170000 		.4byte	.LASF411
 8375 21ef 01       		.byte	0x1
 8376 21f0 0211     		.2byte	0x1102
 8377 21f2 0E010000 		.4byte	0x10e
 8378 21f6 570F0000 		.4byte	.LLST104
 8379 21fa 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 247


 8380 21fb BC250000 		.4byte	.LASF310
 8381 21ff 01       		.byte	0x1
 8382 2200 0411     		.2byte	0x1104
 8383 2202 C50D0000 		.4byte	0xdc5
 8384 2206 830F0000 		.4byte	.LLST105
 8385 220a 1E       		.uleb128 0x1e
 8386 220b F8200000 		.4byte	.LASF309
 8387 220f 01       		.byte	0x1
 8388 2210 0511     		.2byte	0x1105
 8389 2212 880A0000 		.4byte	0xa88
 8390 2216 A40F0000 		.4byte	.LLST106
 8391 221a 1E       		.uleb128 0x1e
 8392 221b 3F050000 		.4byte	.LASF412
 8393 221f 01       		.byte	0x1
 8394 2220 0611     		.2byte	0x1106
 8395 2222 CA000000 		.4byte	0xca
 8396 2226 CE0F0000 		.4byte	.LLST107
 8397 222a 20       		.uleb128 0x20
 8398 222b 14000000 		.4byte	.LVL317
 8399 222f CF270000 		.4byte	0x27cf
 8400 2233 26       		.uleb128 0x26
 8401 2234 6A000000 		.4byte	.LVL322
 8402 2238 F1270000 		.4byte	0x27f1
 8403 223c 47220000 		.4byte	0x2247
 8404 2240 22       		.uleb128 0x22
 8405 2241 01       		.uleb128 0x1
 8406 2242 50       		.byte	0x50
 8407 2243 02       		.uleb128 0x2
 8408 2244 76       		.byte	0x76
 8409 2245 00       		.sleb128 0
 8410 2246 00       		.byte	0
 8411 2247 26       		.uleb128 0x26
 8412 2248 8C000000 		.4byte	.LVL323
 8413 224c DA270000 		.4byte	0x27da
 8414 2250 5B220000 		.4byte	0x225b
 8415 2254 22       		.uleb128 0x22
 8416 2255 01       		.uleb128 0x1
 8417 2256 51       		.byte	0x51
 8418 2257 02       		.uleb128 0x2
 8419 2258 76       		.byte	0x76
 8420 2259 00       		.sleb128 0
 8421 225a 00       		.byte	0
 8422 225b 20       		.uleb128 0x20
 8423 225c B6000000 		.4byte	.LVL324
 8424 2260 E6270000 		.4byte	0x27e6
 8425 2264 00       		.byte	0
 8426 2265 27       		.uleb128 0x27
 8427 2266 C9080000 		.4byte	.LASF413
 8428 226a 01       		.byte	0x1
 8429 226b 6C11     		.2byte	0x116c
 8430 226d 880A0000 		.4byte	0xa88
 8431 2271 00000000 		.4byte	.LFB755
 8432 2275 04010000 		.4byte	.LFE755-.LFB755
 8433 2279 01       		.uleb128 0x1
 8434 227a 9C       		.byte	0x9c
 8435 227b 9D230000 		.4byte	0x239d
 8436 227f 1D       		.uleb128 0x1d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 248


 8437 2280 791A0000 		.4byte	.LASF408
 8438 2284 01       		.byte	0x1
 8439 2285 6C11     		.2byte	0x116c
 8440 2287 910B0000 		.4byte	0xb91
 8441 228b E10F0000 		.4byte	.LLST108
 8442 228f 1D       		.uleb128 0x1d
 8443 2290 F7170000 		.4byte	.LASF409
 8444 2294 01       		.byte	0x1
 8445 2295 6C11     		.2byte	0x116c
 8446 2297 EB000000 		.4byte	0xeb
 8447 229b 0D100000 		.4byte	.LLST109
 8448 229f 1D       		.uleb128 0x1d
 8449 22a0 F3180000 		.4byte	.LASF410
 8450 22a4 01       		.byte	0x1
 8451 22a5 6C11     		.2byte	0x116c
 8452 22a7 C70B0000 		.4byte	0xbc7
 8453 22ab 52100000 		.4byte	.LLST110
 8454 22af 1D       		.uleb128 0x1d
 8455 22b0 7A170000 		.4byte	.LASF411
 8456 22b4 01       		.byte	0x1
 8457 22b5 6C11     		.2byte	0x116c
 8458 22b7 0E010000 		.4byte	0x10e
 8459 22bb 73100000 		.4byte	.LLST111
 8460 22bf 1D       		.uleb128 0x1d
 8461 22c0 D2020000 		.4byte	.LASF414
 8462 22c4 01       		.byte	0x1
 8463 22c5 6C11     		.2byte	0x116c
 8464 22c7 9D230000 		.4byte	0x239d
 8465 22cb 9F100000 		.4byte	.LLST112
 8466 22cf 1E       		.uleb128 0x1e
 8467 22d0 BC250000 		.4byte	.LASF310
 8468 22d4 01       		.byte	0x1
 8469 22d5 6E11     		.2byte	0x116e
 8470 22d7 C50D0000 		.4byte	0xdc5
 8471 22db BF100000 		.4byte	.LLST113
 8472 22df 1E       		.uleb128 0x1e
 8473 22e0 3F050000 		.4byte	.LASF412
 8474 22e4 01       		.byte	0x1
 8475 22e5 6F11     		.2byte	0x116f
 8476 22e7 CA000000 		.4byte	0xca
 8477 22eb E0100000 		.4byte	.LLST114
 8478 22ef 1E       		.uleb128 0x1e
 8479 22f0 F8200000 		.4byte	.LASF309
 8480 22f4 01       		.byte	0x1
 8481 22f5 7011     		.2byte	0x1170
 8482 22f7 880A0000 		.4byte	0xa88
 8483 22fb F3100000 		.4byte	.LLST115
 8484 22ff 2A       		.uleb128 0x2a
 8485 2300 2A270000 		.4byte	.LASF345
 8486 2304 01       		.byte	0x1
 8487 2305 7111     		.2byte	0x1171
 8488 2307 930A0000 		.4byte	0xa93
 8489 230b 2B       		.uleb128 0x2b
 8490 230c FF0C0000 		.4byte	0xcff
 8491 2310 18000000 		.4byte	.LBB41
 8492 2314 14000000 		.4byte	.LBE41-.LBB41
 8493 2318 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 249


 8494 2319 8911     		.2byte	0x1189
 8495 231b 34230000 		.4byte	0x2334
 8496 231f 2C       		.uleb128 0x2c
 8497 2320 18000000 		.4byte	.LBB42
 8498 2324 14000000 		.4byte	.LBE42-.LBB42
 8499 2328 2D       		.uleb128 0x2d
 8500 2329 0F0D0000 		.4byte	0xd0f
 8501 232d 2D       		.uleb128 0x2d
 8502 232e 1A0D0000 		.4byte	0xd1a
 8503 2332 00       		.byte	0
 8504 2333 00       		.byte	0
 8505 2334 2B       		.uleb128 0x2b
 8506 2335 260D0000 		.4byte	0xd26
 8507 2339 EC000000 		.4byte	.LBB43
 8508 233d 04000000 		.4byte	.LBE43-.LBB43
 8509 2341 01       		.byte	0x1
 8510 2342 DE11     		.2byte	0x11de
 8511 2344 52230000 		.4byte	0x2352
 8512 2348 2E       		.uleb128 0x2e
 8513 2349 320D0000 		.4byte	0xd32
 8514 234d 1D110000 		.4byte	.LLST116
 8515 2351 00       		.byte	0
 8516 2352 20       		.uleb128 0x20
 8517 2353 18000000 		.4byte	.LVL328
 8518 2357 14280000 		.4byte	0x2814
 8519 235b 26       		.uleb128 0x26
 8520 235c A0000000 		.4byte	.LVL333
 8521 2360 F1270000 		.4byte	0x27f1
 8522 2364 6F230000 		.4byte	0x236f
 8523 2368 22       		.uleb128 0x22
 8524 2369 01       		.uleb128 0x1
 8525 236a 50       		.byte	0x50
 8526 236b 02       		.uleb128 0x2
 8527 236c 78       		.byte	0x78
 8528 236d 00       		.sleb128 0
 8529 236e 00       		.byte	0
 8530 236f 26       		.uleb128 0x26
 8531 2370 C2000000 		.4byte	.LVL334
 8532 2374 DA270000 		.4byte	0x27da
 8533 2378 83230000 		.4byte	0x2383
 8534 237c 22       		.uleb128 0x22
 8535 237d 01       		.uleb128 0x1
 8536 237e 51       		.byte	0x51
 8537 237f 02       		.uleb128 0x2
 8538 2380 78       		.byte	0x78
 8539 2381 00       		.sleb128 0
 8540 2382 00       		.byte	0
 8541 2383 21       		.uleb128 0x21
 8542 2384 CE000000 		.4byte	.LVL336
 8543 2388 DA270000 		.4byte	0x27da
 8544 238c 22       		.uleb128 0x22
 8545 238d 01       		.uleb128 0x1
 8546 238e 50       		.byte	0x50
 8547 238f 05       		.uleb128 0x5
 8548 2390 03       		.byte	0x3
 8549 2391 14000000 		.4byte	.LANCHOR0+20
 8550 2395 22       		.uleb128 0x22
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 250


 8551 2396 01       		.uleb128 0x1
 8552 2397 51       		.byte	0x51
 8553 2398 02       		.uleb128 0x2
 8554 2399 74       		.byte	0x74
 8555 239a 18       		.sleb128 24
 8556 239b 00       		.byte	0
 8557 239c 00       		.byte	0
 8558 239d 06       		.uleb128 0x6
 8559 239e 04       		.byte	0x4
 8560 239f 880A0000 		.4byte	0xa88
 8561 23a3 29       		.uleb128 0x29
 8562 23a4 021E0000 		.4byte	.LASF415
 8563 23a8 01       		.byte	0x1
 8564 23a9 E811     		.2byte	0x11e8
 8565 23ab 00000000 		.4byte	.LFB756
 8566 23af B0000000 		.4byte	.LFE756-.LFB756
 8567 23b3 01       		.uleb128 0x1
 8568 23b4 9C       		.byte	0x9c
 8569 23b5 97240000 		.4byte	0x2497
 8570 23b9 1D       		.uleb128 0x1d
 8571 23ba 791A0000 		.4byte	.LASF408
 8572 23be 01       		.byte	0x1
 8573 23bf E811     		.2byte	0x11e8
 8574 23c1 910B0000 		.4byte	0xb91
 8575 23c5 30110000 		.4byte	.LLST117
 8576 23c9 1D       		.uleb128 0x1d
 8577 23ca D2020000 		.4byte	.LASF414
 8578 23ce 01       		.byte	0x1
 8579 23cf E811     		.2byte	0x11e8
 8580 23d1 9D230000 		.4byte	0x239d
 8581 23d5 5C110000 		.4byte	.LLST118
 8582 23d9 1E       		.uleb128 0x1e
 8583 23da BC250000 		.4byte	.LASF310
 8584 23de 01       		.byte	0x1
 8585 23df EA11     		.2byte	0x11ea
 8586 23e1 C50D0000 		.4byte	0xdc5
 8587 23e5 88110000 		.4byte	.LLST119
 8588 23e9 1E       		.uleb128 0x1e
 8589 23ea 3F050000 		.4byte	.LASF412
 8590 23ee 01       		.byte	0x1
 8591 23ef EB11     		.2byte	0x11eb
 8592 23f1 CA000000 		.4byte	0xca
 8593 23f5 A9110000 		.4byte	.LLST120
 8594 23f9 2A       		.uleb128 0x2a
 8595 23fa 2A270000 		.4byte	.LASF345
 8596 23fe 01       		.byte	0x1
 8597 23ff EC11     		.2byte	0x11ec
 8598 2401 930A0000 		.4byte	0xa93
 8599 2405 2B       		.uleb128 0x2b
 8600 2406 FF0C0000 		.4byte	0xcff
 8601 240a 10000000 		.4byte	.LBB45
 8602 240e 14000000 		.4byte	.LBE45-.LBB45
 8603 2412 01       		.byte	0x1
 8604 2413 0412     		.2byte	0x1204
 8605 2415 2E240000 		.4byte	0x242e
 8606 2419 2C       		.uleb128 0x2c
 8607 241a 10000000 		.4byte	.LBB46
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 251


 8608 241e 14000000 		.4byte	.LBE46-.LBB46
 8609 2422 2D       		.uleb128 0x2d
 8610 2423 0F0D0000 		.4byte	0xd0f
 8611 2427 2D       		.uleb128 0x2d
 8612 2428 1A0D0000 		.4byte	0xd1a
 8613 242c 00       		.byte	0
 8614 242d 00       		.byte	0
 8615 242e 2B       		.uleb128 0x2b
 8616 242f 260D0000 		.4byte	0xd26
 8617 2433 9E000000 		.4byte	.LBB47
 8618 2437 12000000 		.4byte	.LBE47-.LBB47
 8619 243b 01       		.byte	0x1
 8620 243c 3812     		.2byte	0x1238
 8621 243e 4C240000 		.4byte	0x244c
 8622 2442 2E       		.uleb128 0x2e
 8623 2443 320D0000 		.4byte	0xd32
 8624 2447 BC110000 		.4byte	.LLST121
 8625 244b 00       		.byte	0
 8626 244c 20       		.uleb128 0x20
 8627 244d 10000000 		.4byte	.LVL341
 8628 2451 14280000 		.4byte	0x2814
 8629 2455 26       		.uleb128 0x26
 8630 2456 52000000 		.4byte	.LVL344
 8631 245a F1270000 		.4byte	0x27f1
 8632 245e 69240000 		.4byte	0x2469
 8633 2462 22       		.uleb128 0x22
 8634 2463 01       		.uleb128 0x1
 8635 2464 50       		.byte	0x50
 8636 2465 02       		.uleb128 0x2
 8637 2466 77       		.byte	0x77
 8638 2467 00       		.sleb128 0
 8639 2468 00       		.byte	0
 8640 2469 26       		.uleb128 0x26
 8641 246a 74000000 		.4byte	.LVL345
 8642 246e DA270000 		.4byte	0x27da
 8643 2472 7D240000 		.4byte	0x247d
 8644 2476 22       		.uleb128 0x22
 8645 2477 01       		.uleb128 0x1
 8646 2478 51       		.byte	0x51
 8647 2479 02       		.uleb128 0x2
 8648 247a 77       		.byte	0x77
 8649 247b 00       		.sleb128 0
 8650 247c 00       		.byte	0
 8651 247d 21       		.uleb128 0x21
 8652 247e 80000000 		.4byte	.LVL346
 8653 2482 DA270000 		.4byte	0x27da
 8654 2486 22       		.uleb128 0x22
 8655 2487 01       		.uleb128 0x1
 8656 2488 50       		.byte	0x50
 8657 2489 05       		.uleb128 0x5
 8658 248a 03       		.byte	0x3
 8659 248b 14000000 		.4byte	.LANCHOR0+20
 8660 248f 22       		.uleb128 0x22
 8661 2490 01       		.uleb128 0x1
 8662 2491 51       		.byte	0x51
 8663 2492 02       		.uleb128 0x2
 8664 2493 74       		.byte	0x74
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 252


 8665 2494 18       		.sleb128 24
 8666 2495 00       		.byte	0
 8667 2496 00       		.byte	0
 8668 2497 27       		.uleb128 0x27
 8669 2498 64250000 		.4byte	.LASF416
 8670 249c 01       		.byte	0x1
 8671 249d 4112     		.2byte	0x1241
 8672 249f 880A0000 		.4byte	0xa88
 8673 24a3 00000000 		.4byte	.LFB757
 8674 24a7 34000000 		.4byte	.LFE757-.LFB757
 8675 24ab 01       		.uleb128 0x1
 8676 24ac 9C       		.byte	0x9c
 8677 24ad F4240000 		.4byte	0x24f4
 8678 24b1 1D       		.uleb128 0x1d
 8679 24b2 871A0000 		.4byte	.LASF313
 8680 24b6 01       		.byte	0x1
 8681 24b7 4112     		.2byte	0x1241
 8682 24b9 910B0000 		.4byte	0xb91
 8683 24bd CF110000 		.4byte	.LLST122
 8684 24c1 1E       		.uleb128 0x1e
 8685 24c2 BC250000 		.4byte	.LASF310
 8686 24c6 01       		.byte	0x1
 8687 24c7 4312     		.2byte	0x1243
 8688 24c9 C50D0000 		.4byte	0xdc5
 8689 24cd E2110000 		.4byte	.LLST123
 8690 24d1 1E       		.uleb128 0x1e
 8691 24d2 F8200000 		.4byte	.LASF309
 8692 24d6 01       		.byte	0x1
 8693 24d7 4412     		.2byte	0x1244
 8694 24d9 880A0000 		.4byte	0xa88
 8695 24dd 00120000 		.4byte	.LLST124
 8696 24e1 20       		.uleb128 0x20
 8697 24e2 10000000 		.4byte	.LVL352
 8698 24e6 CF270000 		.4byte	0x27cf
 8699 24ea 20       		.uleb128 0x20
 8700 24eb 2A000000 		.4byte	.LVL357
 8701 24ef E6270000 		.4byte	0x27e6
 8702 24f3 00       		.byte	0
 8703 24f4 13       		.uleb128 0x13
 8704 24f5 860B0000 		.4byte	0xb86
 8705 24f9 04250000 		.4byte	0x2504
 8706 24fd 14       		.uleb128 0x14
 8707 24fe A9000000 		.4byte	0xa9
 8708 2502 13       		.byte	0x13
 8709 2503 00       		.byte	0
 8710 2504 24       		.uleb128 0x24
 8711 2505 5B040000 		.4byte	.LASF417
 8712 2509 01       		.byte	0x1
 8713 250a 7701     		.2byte	0x177
 8714 250c F4240000 		.4byte	0x24f4
 8715 2510 05       		.uleb128 0x5
 8716 2511 03       		.byte	0x3
 8717 2512 30000000 		.4byte	pxReadyTasksLists
 8718 2516 24       		.uleb128 0x24
 8719 2517 0A200000 		.4byte	.LASF418
 8720 251b 01       		.byte	0x1
 8721 251c 7801     		.2byte	0x178
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 253


 8722 251e 860B0000 		.4byte	0xb86
 8723 2522 05       		.uleb128 0x5
 8724 2523 03       		.byte	0x3
 8725 2524 C0010000 		.4byte	xDelayedTaskList1
 8726 2528 24       		.uleb128 0x24
 8727 2529 EB050000 		.4byte	.LASF419
 8728 252d 01       		.byte	0x1
 8729 252e 7901     		.2byte	0x179
 8730 2530 860B0000 		.4byte	0xb86
 8731 2534 05       		.uleb128 0x5
 8732 2535 03       		.byte	0x3
 8733 2536 D4010000 		.4byte	xDelayedTaskList2
 8734 253a 24       		.uleb128 0x24
 8735 253b 191E0000 		.4byte	.LASF420
 8736 253f 01       		.byte	0x1
 8737 2540 7A01     		.2byte	0x17a
 8738 2542 4C250000 		.4byte	0x254c
 8739 2546 05       		.uleb128 0x5
 8740 2547 03       		.byte	0x3
 8741 2548 28000000 		.4byte	pxDelayedTaskList
 8742 254c 08       		.uleb128 0x8
 8743 254d 1A180000 		.4byte	0x181a
 8744 2551 24       		.uleb128 0x24
 8745 2552 EA0F0000 		.4byte	.LASF421
 8746 2556 01       		.byte	0x1
 8747 2557 7B01     		.2byte	0x17b
 8748 2559 4C250000 		.4byte	0x254c
 8749 255d 05       		.uleb128 0x5
 8750 255e 03       		.byte	0x3
 8751 255f FC010000 		.4byte	pxOverflowDelayedTaskList
 8752 2563 24       		.uleb128 0x24
 8753 2564 920B0000 		.4byte	.LASF422
 8754 2568 01       		.byte	0x1
 8755 2569 7C01     		.2byte	0x17c
 8756 256b 860B0000 		.4byte	0xb86
 8757 256f 05       		.uleb128 0x5
 8758 2570 03       		.byte	0x3
 8759 2571 14000000 		.4byte	xPendingReadyList
 8760 2575 24       		.uleb128 0x24
 8761 2576 6A050000 		.4byte	.LASF423
 8762 257a 01       		.byte	0x1
 8763 257b 8001     		.2byte	0x180
 8764 257d 860B0000 		.4byte	0xb86
 8765 2581 05       		.uleb128 0x5
 8766 2582 03       		.byte	0x3
 8767 2583 E8010000 		.4byte	xTasksWaitingTermination
 8768 2587 24       		.uleb128 0x24
 8769 2588 06230000 		.4byte	.LASF424
 8770 258c 01       		.byte	0x1
 8771 258d 8101     		.2byte	0x181
 8772 258f 99250000 		.4byte	0x2599
 8773 2593 05       		.uleb128 0x5
 8774 2594 03       		.byte	0x3
 8775 2595 18020000 		.4byte	uxDeletedTasksWaitingCleanUp
 8776 2599 08       		.uleb128 0x8
 8777 259a 930A0000 		.4byte	0xa93
 8778 259e 24       		.uleb128 0x24
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 254


 8779 259f 860F0000 		.4byte	.LASF425
 8780 25a3 01       		.byte	0x1
 8781 25a4 8701     		.2byte	0x187
 8782 25a6 860B0000 		.4byte	0xb86
 8783 25aa 05       		.uleb128 0x5
 8784 25ab 03       		.byte	0x3
 8785 25ac 00000000 		.4byte	xSuspendedTaskList
 8786 25b0 24       		.uleb128 0x24
 8787 25b1 06250000 		.4byte	.LASF426
 8788 25b5 01       		.byte	0x1
 8789 25b6 8C01     		.2byte	0x18c
 8790 25b8 99250000 		.4byte	0x2599
 8791 25bc 05       		.uleb128 0x5
 8792 25bd 03       		.byte	0x3
 8793 25be 00020000 		.4byte	uxCurrentNumberOfTasks
 8794 25c2 24       		.uleb128 0x24
 8795 25c3 6E0E0000 		.4byte	.LASF427
 8796 25c7 01       		.byte	0x1
 8797 25c8 8D01     		.2byte	0x18d
 8798 25ca D4250000 		.4byte	0x25d4
 8799 25ce 05       		.uleb128 0x5
 8800 25cf 03       		.byte	0x3
 8801 25d0 14020000 		.4byte	xTickCount
 8802 25d4 08       		.uleb128 0x8
 8803 25d5 9E0A0000 		.4byte	0xa9e
 8804 25d9 24       		.uleb128 0x24
 8805 25da 7D1F0000 		.4byte	.LASF428
 8806 25de 01       		.byte	0x1
 8807 25df 8E01     		.2byte	0x18e
 8808 25e1 99250000 		.4byte	0x2599
 8809 25e5 05       		.uleb128 0x5
 8810 25e6 03       		.byte	0x3
 8811 25e7 10020000 		.4byte	uxTopReadyPriority
 8812 25eb 24       		.uleb128 0x24
 8813 25ec 3E030000 		.4byte	.LASF429
 8814 25f0 01       		.byte	0x1
 8815 25f1 8F01     		.2byte	0x18f
 8816 25f3 FD250000 		.4byte	0x25fd
 8817 25f7 05       		.uleb128 0x5
 8818 25f8 03       		.byte	0x3
 8819 25f9 08020000 		.4byte	xSchedulerRunning
 8820 25fd 08       		.uleb128 0x8
 8821 25fe 880A0000 		.4byte	0xa88
 8822 2602 24       		.uleb128 0x24
 8823 2603 3E210000 		.4byte	.LASF430
 8824 2607 01       		.byte	0x1
 8825 2608 9001     		.2byte	0x190
 8826 260a 99250000 		.4byte	0x2599
 8827 260e 05       		.uleb128 0x5
 8828 260f 03       		.byte	0x3
 8829 2610 28020000 		.4byte	uxPendedTicks
 8830 2614 24       		.uleb128 0x24
 8831 2615 C3270000 		.4byte	.LASF431
 8832 2619 01       		.byte	0x1
 8833 261a 9101     		.2byte	0x191
 8834 261c FD250000 		.4byte	0x25fd
 8835 2620 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 255


 8836 2621 03       		.byte	0x3
 8837 2622 2C020000 		.4byte	xYieldPending
 8838 2626 24       		.uleb128 0x24
 8839 2627 5E1B0000 		.4byte	.LASF432
 8840 262b 01       		.byte	0x1
 8841 262c 9201     		.2byte	0x192
 8842 262e FD250000 		.4byte	0x25fd
 8843 2632 05       		.uleb128 0x5
 8844 2633 03       		.byte	0x3
 8845 2634 24020000 		.4byte	xNumOfOverflows
 8846 2638 24       		.uleb128 0x24
 8847 2639 B4180000 		.4byte	.LASF433
 8848 263d 01       		.byte	0x1
 8849 263e 9301     		.2byte	0x193
 8850 2640 930A0000 		.4byte	0xa93
 8851 2644 05       		.uleb128 0x5
 8852 2645 03       		.byte	0x3
 8853 2646 0C020000 		.4byte	uxTaskNumber
 8854 264a 24       		.uleb128 0x24
 8855 264b E4140000 		.4byte	.LASF434
 8856 264f 01       		.byte	0x1
 8857 2650 9401     		.2byte	0x194
 8858 2652 D4250000 		.4byte	0x25d4
 8859 2656 05       		.uleb128 0x5
 8860 2657 03       		.byte	0x3
 8861 2658 2C000000 		.4byte	xNextTaskUnblockTime
 8862 265c 24       		.uleb128 0x24
 8863 265d E91F0000 		.4byte	.LASF435
 8864 2661 01       		.byte	0x1
 8865 2662 9501     		.2byte	0x195
 8866 2664 910B0000 		.4byte	0xb91
 8867 2668 05       		.uleb128 0x5
 8868 2669 03       		.byte	0x3
 8869 266a 20020000 		.4byte	xIdleTaskHandle
 8870 266e 24       		.uleb128 0x24
 8871 266f 08260000 		.4byte	.LASF436
 8872 2673 01       		.byte	0x1
 8873 2674 9F01     		.2byte	0x19f
 8874 2676 99250000 		.4byte	0x2599
 8875 267a 05       		.uleb128 0x5
 8876 267b 03       		.byte	0x3
 8877 267c 1C020000 		.4byte	uxSchedulerSuspended
 8878 2680 37       		.uleb128 0x37
 8879 2681 C51D0000 		.4byte	.LASF437
 8880 2685 15       		.byte	0x15
 8881 2686 EA07     		.2byte	0x7ea
 8882 2688 8C260000 		.4byte	0x268c
 8883 268c 08       		.uleb128 0x8
 8884 268d E0000000 		.4byte	0xe0
 8885 2691 13       		.uleb128 0x13
 8886 2692 A6080000 		.4byte	0x8a6
 8887 2696 A1260000 		.4byte	0x26a1
 8888 269a 14       		.uleb128 0x14
 8889 269b A9000000 		.4byte	0xa9
 8890 269f 0B       		.byte	0xb
 8891 26a0 00       		.byte	0
 8892 26a1 37       		.uleb128 0x37
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 256


 8893 26a2 CC1F0000 		.4byte	.LASF438
 8894 26a6 06       		.byte	0x6
 8895 26a7 FC02     		.2byte	0x2fc
 8896 26a9 AD260000 		.4byte	0x26ad
 8897 26ad 07       		.uleb128 0x7
 8898 26ae 91260000 		.4byte	0x2691
 8899 26b2 37       		.uleb128 0x37
 8900 26b3 C5140000 		.4byte	.LASF439
 8901 26b7 0D       		.byte	0xd
 8902 26b8 2202     		.2byte	0x222
 8903 26ba 00090000 		.4byte	0x900
 8904 26be 13       		.uleb128 0x13
 8905 26bf CF080000 		.4byte	0x8cf
 8906 26c3 CE260000 		.4byte	0x26ce
 8907 26c7 14       		.uleb128 0x14
 8908 26c8 A9000000 		.4byte	0xa9
 8909 26cc 00       		.byte	0
 8910 26cd 00       		.byte	0
 8911 26ce 37       		.uleb128 0x37
 8912 26cf 50030000 		.4byte	.LASF440
 8913 26d3 0D       		.byte	0xd
 8914 26d4 2C02     		.2byte	0x22c
 8915 26d6 BE260000 		.4byte	0x26be
 8916 26da 13       		.uleb128 0x13
 8917 26db 48090000 		.4byte	0x948
 8918 26df EA260000 		.4byte	0x26ea
 8919 26e3 14       		.uleb128 0x14
 8920 26e4 A9000000 		.4byte	0xa9
 8921 26e8 00       		.byte	0
 8922 26e9 00       		.byte	0
 8923 26ea 37       		.uleb128 0x37
 8924 26eb 24000000 		.4byte	.LASF441
 8925 26ef 0D       		.byte	0xd
 8926 26f0 2D02     		.2byte	0x22d
 8927 26f2 DA260000 		.4byte	0x26da
 8928 26f6 38       		.uleb128 0x38
 8929 26f7 9F010000 		.4byte	.LASF442
 8930 26fb 16       		.byte	0x16
 8931 26fc 5E       		.byte	0x5e
 8932 26fd 71030000 		.4byte	0x371
 8933 2701 37       		.uleb128 0x37
 8934 2702 45240000 		.4byte	.LASF443
 8935 2706 11       		.byte	0x11
 8936 2707 6001     		.2byte	0x160
 8937 2709 EB000000 		.4byte	0xeb
 8938 270d 13       		.uleb128 0x13
 8939 270e 1D270000 		.4byte	0x271d
 8940 2712 1D270000 		.4byte	0x271d
 8941 2716 14       		.uleb128 0x14
 8942 2717 A9000000 		.4byte	0xa9
 8943 271b 00       		.byte	0
 8944 271c 00       		.byte	0
 8945 271d 07       		.uleb128 0x7
 8946 271e 560A0000 		.4byte	0xa56
 8947 2722 37       		.uleb128 0x37
 8948 2723 311D0000 		.4byte	.LASF444
 8949 2727 11       		.byte	0x11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 257


 8950 2728 6401     		.2byte	0x164
 8951 272a 2E270000 		.4byte	0x272e
 8952 272e 07       		.uleb128 0x7
 8953 272f 0D270000 		.4byte	0x270d
 8954 2733 38       		.uleb128 0x38
 8955 2734 8D1A0000 		.4byte	.LASF445
 8956 2738 17       		.byte	0x17
 8957 2739 87       		.byte	0x87
 8958 273a 4D040000 		.4byte	0x44d
 8959 273e 38       		.uleb128 0x38
 8960 273f 08240000 		.4byte	.LASF446
 8961 2743 18       		.byte	0x18
 8962 2744 1F       		.byte	0x1f
 8963 2745 49270000 		.4byte	0x2749
 8964 2749 07       		.uleb128 0x7
 8965 274a C6020000 		.4byte	0x2c6
 8966 274e 38       		.uleb128 0x38
 8967 274f 16080000 		.4byte	.LASF447
 8968 2753 19       		.byte	0x19
 8969 2754 1F       		.byte	0x1f
 8970 2755 49270000 		.4byte	0x2749
 8971 2759 38       		.uleb128 0x38
 8972 275a F91F0000 		.4byte	.LASF448
 8973 275e 1A       		.byte	0x1a
 8974 275f 1F       		.byte	0x1f
 8975 2760 49270000 		.4byte	0x2749
 8976 2764 38       		.uleb128 0x38
 8977 2765 EF120000 		.4byte	.LASF449
 8978 2769 1B       		.byte	0x1b
 8979 276a 7C       		.byte	0x7c
 8980 276b 14010000 		.4byte	0x114
 8981 276f 38       		.uleb128 0x38
 8982 2770 FD090000 		.4byte	.LASF450
 8983 2774 1B       		.byte	0x1b
 8984 2775 7D       		.byte	0x7d
 8985 2776 7A270000 		.4byte	0x277a
 8986 277a 07       		.uleb128 0x7
 8987 277b C9010000 		.4byte	0x1c9
 8988 277f 39       		.uleb128 0x39
 8989 2780 DB1B0000 		.4byte	.LASF451
 8990 2784 01       		.byte	0x1
 8991 2785 7401     		.2byte	0x174
 8992 2787 91270000 		.4byte	0x2791
 8993 278b 05       		.uleb128 0x5
 8994 278c 03       		.byte	0x3
 8995 278d 00000000 		.4byte	pxCurrentTCB
 8996 2791 08       		.uleb128 0x8
 8997 2792 C50D0000 		.4byte	0xdc5
 8998 2796 3A       		.uleb128 0x3a
 8999 2797 291F0000 		.4byte	.LASF452
 9000 279b 291F0000 		.4byte	.LASF452
 9001 279f 1C       		.byte	0x1c
 9002 27a0 AC       		.byte	0xac
 9003 27a1 3A       		.uleb128 0x3a
 9004 27a2 B4170000 		.4byte	.LASF453
 9005 27a6 B4170000 		.4byte	.LASF453
 9006 27aa 1D       		.byte	0x1d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 258


 9007 27ab 19       		.byte	0x19
 9008 27ac 3B       		.uleb128 0x3b
 9009 27ad 401D0000 		.4byte	.LASF454
 9010 27b1 401D0000 		.4byte	.LASF454
 9011 27b5 13       		.byte	0x13
 9012 27b6 8D01     		.2byte	0x18d
 9013 27b8 3A       		.uleb128 0x3a
 9014 27b9 35150000 		.4byte	.LASF455
 9015 27bd 35150000 		.4byte	.LASF455
 9016 27c1 1C       		.byte	0x1c
 9017 27c2 90       		.byte	0x90
 9018 27c3 3B       		.uleb128 0x3b
 9019 27c4 73220000 		.4byte	.LASF456
 9020 27c8 73220000 		.4byte	.LASF456
 9021 27cc 13       		.byte	0x13
 9022 27cd 8201     		.2byte	0x182
 9023 27cf 3A       		.uleb128 0x3a
 9024 27d0 28060000 		.4byte	.LASF457
 9025 27d4 28060000 		.4byte	.LASF457
 9026 27d8 02       		.byte	0x2
 9027 27d9 8D       		.byte	0x8d
 9028 27da 3B       		.uleb128 0x3b
 9029 27db 4F0F0000 		.4byte	.LASF458
 9030 27df 4F0F0000 		.4byte	.LASF458
 9031 27e3 13       		.byte	0x13
 9032 27e4 AF01     		.2byte	0x1af
 9033 27e6 3A       		.uleb128 0x3a
 9034 27e7 74270000 		.4byte	.LASF459
 9035 27eb 74270000 		.4byte	.LASF459
 9036 27ef 02       		.byte	0x2
 9037 27f0 8E       		.byte	0x8e
 9038 27f1 3B       		.uleb128 0x3b
 9039 27f2 5E210000 		.4byte	.LASF460
 9040 27f6 5E210000 		.4byte	.LASF460
 9041 27fa 13       		.byte	0x13
 9042 27fb BE01     		.2byte	0x1be
 9043 27fd 3B       		.uleb128 0x3b
 9044 27fe 18000000 		.4byte	.LASF461
 9045 2802 18000000 		.4byte	.LASF461
 9046 2806 13       		.byte	0x13
 9047 2807 9A01     		.2byte	0x19a
 9048 2809 3A       		.uleb128 0x3a
 9049 280a 86260000 		.4byte	.LASF462
 9050 280e 86260000 		.4byte	.LASF462
 9051 2812 1C       		.byte	0x1c
 9052 2813 AB       		.byte	0xab
 9053 2814 3A       		.uleb128 0x3a
 9054 2815 83220000 		.4byte	.LASF463
 9055 2819 83220000 		.4byte	.LASF463
 9056 281d 02       		.byte	0x2
 9057 281e 9F       		.byte	0x9f
 9058 281f 3B       		.uleb128 0x3b
 9059 2820 81080000 		.4byte	.LASF464
 9060 2824 81080000 		.4byte	.LASF464
 9061 2828 1E       		.byte	0x1e
 9062 2829 1905     		.2byte	0x519
 9063 282b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 259


 9064 282c B4010000 		.4byte	.LASF465
 9065 2830 B4010000 		.4byte	.LASF465
 9066 2834 1C       		.byte	0x1c
 9067 2835 B5       		.byte	0xb5
 9068 2836 3A       		.uleb128 0x3a
 9069 2837 171F0000 		.4byte	.LASF466
 9070 283b 171F0000 		.4byte	.LASF466
 9071 283f 1C       		.byte	0x1c
 9072 2840 BC       		.byte	0xbc
 9073 2841 3B       		.uleb128 0x3b
 9074 2842 90060000 		.4byte	.LASF467
 9075 2846 90060000 		.4byte	.LASF467
 9076 284a 01       		.byte	0x1
 9077 284b 760C     		.2byte	0xc76
 9078 284d 3B       		.uleb128 0x3b
 9079 284e DB1C0000 		.4byte	.LASF468
 9080 2852 DB1C0000 		.4byte	.LASF468
 9081 2856 01       		.byte	0x1
 9082 2857 AE01     		.2byte	0x1ae
 9083 2859 00       		.byte	0
 9084              		.section	.debug_abbrev,"",%progbits
 9085              	.Ldebug_abbrev0:
 9086 0000 01       		.uleb128 0x1
 9087 0001 11       		.uleb128 0x11
 9088 0002 01       		.byte	0x1
 9089 0003 25       		.uleb128 0x25
 9090 0004 0E       		.uleb128 0xe
 9091 0005 13       		.uleb128 0x13
 9092 0006 0B       		.uleb128 0xb
 9093 0007 03       		.uleb128 0x3
 9094 0008 0E       		.uleb128 0xe
 9095 0009 1B       		.uleb128 0x1b
 9096 000a 0E       		.uleb128 0xe
 9097 000b 55       		.uleb128 0x55
 9098 000c 17       		.uleb128 0x17
 9099 000d 11       		.uleb128 0x11
 9100 000e 01       		.uleb128 0x1
 9101 000f 10       		.uleb128 0x10
 9102 0010 17       		.uleb128 0x17
 9103 0011 00       		.byte	0
 9104 0012 00       		.byte	0
 9105 0013 02       		.uleb128 0x2
 9106 0014 16       		.uleb128 0x16
 9107 0015 00       		.byte	0
 9108 0016 03       		.uleb128 0x3
 9109 0017 0E       		.uleb128 0xe
 9110 0018 3A       		.uleb128 0x3a
 9111 0019 0B       		.uleb128 0xb
 9112 001a 3B       		.uleb128 0x3b
 9113 001b 0B       		.uleb128 0xb
 9114 001c 49       		.uleb128 0x49
 9115 001d 13       		.uleb128 0x13
 9116 001e 00       		.byte	0
 9117 001f 00       		.byte	0
 9118 0020 03       		.uleb128 0x3
 9119 0021 24       		.uleb128 0x24
 9120 0022 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 260


 9121 0023 0B       		.uleb128 0xb
 9122 0024 0B       		.uleb128 0xb
 9123 0025 3E       		.uleb128 0x3e
 9124 0026 0B       		.uleb128 0xb
 9125 0027 03       		.uleb128 0x3
 9126 0028 0E       		.uleb128 0xe
 9127 0029 00       		.byte	0
 9128 002a 00       		.byte	0
 9129 002b 04       		.uleb128 0x4
 9130 002c 24       		.uleb128 0x24
 9131 002d 00       		.byte	0
 9132 002e 0B       		.uleb128 0xb
 9133 002f 0B       		.uleb128 0xb
 9134 0030 3E       		.uleb128 0x3e
 9135 0031 0B       		.uleb128 0xb
 9136 0032 03       		.uleb128 0x3
 9137 0033 08       		.uleb128 0x8
 9138 0034 00       		.byte	0
 9139 0035 00       		.byte	0
 9140 0036 05       		.uleb128 0x5
 9141 0037 0F       		.uleb128 0xf
 9142 0038 00       		.byte	0
 9143 0039 0B       		.uleb128 0xb
 9144 003a 0B       		.uleb128 0xb
 9145 003b 00       		.byte	0
 9146 003c 00       		.byte	0
 9147 003d 06       		.uleb128 0x6
 9148 003e 0F       		.uleb128 0xf
 9149 003f 00       		.byte	0
 9150 0040 0B       		.uleb128 0xb
 9151 0041 0B       		.uleb128 0xb
 9152 0042 49       		.uleb128 0x49
 9153 0043 13       		.uleb128 0x13
 9154 0044 00       		.byte	0
 9155 0045 00       		.byte	0
 9156 0046 07       		.uleb128 0x7
 9157 0047 26       		.uleb128 0x26
 9158 0048 00       		.byte	0
 9159 0049 49       		.uleb128 0x49
 9160 004a 13       		.uleb128 0x13
 9161 004b 00       		.byte	0
 9162 004c 00       		.byte	0
 9163 004d 08       		.uleb128 0x8
 9164 004e 35       		.uleb128 0x35
 9165 004f 00       		.byte	0
 9166 0050 49       		.uleb128 0x49
 9167 0051 13       		.uleb128 0x13
 9168 0052 00       		.byte	0
 9169 0053 00       		.byte	0
 9170 0054 09       		.uleb128 0x9
 9171 0055 04       		.uleb128 0x4
 9172 0056 01       		.byte	0x1
 9173 0057 0B       		.uleb128 0xb
 9174 0058 0B       		.uleb128 0xb
 9175 0059 49       		.uleb128 0x49
 9176 005a 13       		.uleb128 0x13
 9177 005b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 261


 9178 005c 0B       		.uleb128 0xb
 9179 005d 3B       		.uleb128 0x3b
 9180 005e 05       		.uleb128 0x5
 9181 005f 01       		.uleb128 0x1
 9182 0060 13       		.uleb128 0x13
 9183 0061 00       		.byte	0
 9184 0062 00       		.byte	0
 9185 0063 0A       		.uleb128 0xa
 9186 0064 28       		.uleb128 0x28
 9187 0065 00       		.byte	0
 9188 0066 03       		.uleb128 0x3
 9189 0067 0E       		.uleb128 0xe
 9190 0068 1C       		.uleb128 0x1c
 9191 0069 0B       		.uleb128 0xb
 9192 006a 00       		.byte	0
 9193 006b 00       		.byte	0
 9194 006c 0B       		.uleb128 0xb
 9195 006d 16       		.uleb128 0x16
 9196 006e 00       		.byte	0
 9197 006f 03       		.uleb128 0x3
 9198 0070 0E       		.uleb128 0xe
 9199 0071 3A       		.uleb128 0x3a
 9200 0072 0B       		.uleb128 0xb
 9201 0073 3B       		.uleb128 0x3b
 9202 0074 05       		.uleb128 0x5
 9203 0075 49       		.uleb128 0x49
 9204 0076 13       		.uleb128 0x13
 9205 0077 00       		.byte	0
 9206 0078 00       		.byte	0
 9207 0079 0C       		.uleb128 0xc
 9208 007a 13       		.uleb128 0x13
 9209 007b 01       		.byte	0x1
 9210 007c 0B       		.uleb128 0xb
 9211 007d 0B       		.uleb128 0xb
 9212 007e 3A       		.uleb128 0x3a
 9213 007f 0B       		.uleb128 0xb
 9214 0080 3B       		.uleb128 0x3b
 9215 0081 05       		.uleb128 0x5
 9216 0082 01       		.uleb128 0x1
 9217 0083 13       		.uleb128 0x13
 9218 0084 00       		.byte	0
 9219 0085 00       		.byte	0
 9220 0086 0D       		.uleb128 0xd
 9221 0087 0D       		.uleb128 0xd
 9222 0088 00       		.byte	0
 9223 0089 03       		.uleb128 0x3
 9224 008a 0E       		.uleb128 0xe
 9225 008b 3A       		.uleb128 0x3a
 9226 008c 0B       		.uleb128 0xb
 9227 008d 3B       		.uleb128 0x3b
 9228 008e 05       		.uleb128 0x5
 9229 008f 49       		.uleb128 0x49
 9230 0090 13       		.uleb128 0x13
 9231 0091 38       		.uleb128 0x38
 9232 0092 0B       		.uleb128 0xb
 9233 0093 00       		.byte	0
 9234 0094 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 262


 9235 0095 0E       		.uleb128 0xe
 9236 0096 13       		.uleb128 0x13
 9237 0097 01       		.byte	0x1
 9238 0098 03       		.uleb128 0x3
 9239 0099 0E       		.uleb128 0xe
 9240 009a 0B       		.uleb128 0xb
 9241 009b 0B       		.uleb128 0xb
 9242 009c 3A       		.uleb128 0x3a
 9243 009d 0B       		.uleb128 0xb
 9244 009e 3B       		.uleb128 0x3b
 9245 009f 0B       		.uleb128 0xb
 9246 00a0 01       		.uleb128 0x1
 9247 00a1 13       		.uleb128 0x13
 9248 00a2 00       		.byte	0
 9249 00a3 00       		.byte	0
 9250 00a4 0F       		.uleb128 0xf
 9251 00a5 0D       		.uleb128 0xd
 9252 00a6 00       		.byte	0
 9253 00a7 03       		.uleb128 0x3
 9254 00a8 0E       		.uleb128 0xe
 9255 00a9 3A       		.uleb128 0x3a
 9256 00aa 0B       		.uleb128 0xb
 9257 00ab 3B       		.uleb128 0x3b
 9258 00ac 0B       		.uleb128 0xb
 9259 00ad 49       		.uleb128 0x49
 9260 00ae 13       		.uleb128 0x13
 9261 00af 38       		.uleb128 0x38
 9262 00b0 0B       		.uleb128 0xb
 9263 00b1 00       		.byte	0
 9264 00b2 00       		.byte	0
 9265 00b3 10       		.uleb128 0x10
 9266 00b4 15       		.uleb128 0x15
 9267 00b5 01       		.byte	0x1
 9268 00b6 27       		.uleb128 0x27
 9269 00b7 19       		.uleb128 0x19
 9270 00b8 01       		.uleb128 0x1
 9271 00b9 13       		.uleb128 0x13
 9272 00ba 00       		.byte	0
 9273 00bb 00       		.byte	0
 9274 00bc 11       		.uleb128 0x11
 9275 00bd 05       		.uleb128 0x5
 9276 00be 00       		.byte	0
 9277 00bf 49       		.uleb128 0x49
 9278 00c0 13       		.uleb128 0x13
 9279 00c1 00       		.byte	0
 9280 00c2 00       		.byte	0
 9281 00c3 12       		.uleb128 0x12
 9282 00c4 13       		.uleb128 0x13
 9283 00c5 01       		.byte	0x1
 9284 00c6 03       		.uleb128 0x3
 9285 00c7 0E       		.uleb128 0xe
 9286 00c8 0B       		.uleb128 0xb
 9287 00c9 0B       		.uleb128 0xb
 9288 00ca 3A       		.uleb128 0x3a
 9289 00cb 0B       		.uleb128 0xb
 9290 00cc 3B       		.uleb128 0x3b
 9291 00cd 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 263


 9292 00ce 01       		.uleb128 0x1
 9293 00cf 13       		.uleb128 0x13
 9294 00d0 00       		.byte	0
 9295 00d1 00       		.byte	0
 9296 00d2 13       		.uleb128 0x13
 9297 00d3 01       		.uleb128 0x1
 9298 00d4 01       		.byte	0x1
 9299 00d5 49       		.uleb128 0x49
 9300 00d6 13       		.uleb128 0x13
 9301 00d7 01       		.uleb128 0x1
 9302 00d8 13       		.uleb128 0x13
 9303 00d9 00       		.byte	0
 9304 00da 00       		.byte	0
 9305 00db 14       		.uleb128 0x14
 9306 00dc 21       		.uleb128 0x21
 9307 00dd 00       		.byte	0
 9308 00de 49       		.uleb128 0x49
 9309 00df 13       		.uleb128 0x13
 9310 00e0 2F       		.uleb128 0x2f
 9311 00e1 0B       		.uleb128 0xb
 9312 00e2 00       		.byte	0
 9313 00e3 00       		.byte	0
 9314 00e4 15       		.uleb128 0x15
 9315 00e5 28       		.uleb128 0x28
 9316 00e6 00       		.byte	0
 9317 00e7 03       		.uleb128 0x3
 9318 00e8 0E       		.uleb128 0xe
 9319 00e9 1C       		.uleb128 0x1c
 9320 00ea 05       		.uleb128 0x5
 9321 00eb 00       		.byte	0
 9322 00ec 00       		.byte	0
 9323 00ed 16       		.uleb128 0x16
 9324 00ee 04       		.uleb128 0x4
 9325 00ef 01       		.byte	0x1
 9326 00f0 0B       		.uleb128 0xb
 9327 00f1 0B       		.uleb128 0xb
 9328 00f2 49       		.uleb128 0x49
 9329 00f3 13       		.uleb128 0x13
 9330 00f4 3A       		.uleb128 0x3a
 9331 00f5 0B       		.uleb128 0xb
 9332 00f6 3B       		.uleb128 0x3b
 9333 00f7 0B       		.uleb128 0xb
 9334 00f8 01       		.uleb128 0x1
 9335 00f9 13       		.uleb128 0x13
 9336 00fa 00       		.byte	0
 9337 00fb 00       		.byte	0
 9338 00fc 17       		.uleb128 0x17
 9339 00fd 13       		.uleb128 0x13
 9340 00fe 01       		.byte	0x1
 9341 00ff 0B       		.uleb128 0xb
 9342 0100 0B       		.uleb128 0xb
 9343 0101 3A       		.uleb128 0x3a
 9344 0102 0B       		.uleb128 0xb
 9345 0103 3B       		.uleb128 0x3b
 9346 0104 0B       		.uleb128 0xb
 9347 0105 01       		.uleb128 0x1
 9348 0106 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 264


 9349 0107 00       		.byte	0
 9350 0108 00       		.byte	0
 9351 0109 18       		.uleb128 0x18
 9352 010a 2E       		.uleb128 0x2e
 9353 010b 01       		.byte	0x1
 9354 010c 03       		.uleb128 0x3
 9355 010d 0E       		.uleb128 0xe
 9356 010e 3A       		.uleb128 0x3a
 9357 010f 0B       		.uleb128 0xb
 9358 0110 3B       		.uleb128 0x3b
 9359 0111 0B       		.uleb128 0xb
 9360 0112 27       		.uleb128 0x27
 9361 0113 19       		.uleb128 0x19
 9362 0114 49       		.uleb128 0x49
 9363 0115 13       		.uleb128 0x13
 9364 0116 20       		.uleb128 0x20
 9365 0117 0B       		.uleb128 0xb
 9366 0118 01       		.uleb128 0x1
 9367 0119 13       		.uleb128 0x13
 9368 011a 00       		.byte	0
 9369 011b 00       		.byte	0
 9370 011c 19       		.uleb128 0x19
 9371 011d 34       		.uleb128 0x34
 9372 011e 00       		.byte	0
 9373 011f 03       		.uleb128 0x3
 9374 0120 0E       		.uleb128 0xe
 9375 0121 3A       		.uleb128 0x3a
 9376 0122 0B       		.uleb128 0xb
 9377 0123 3B       		.uleb128 0x3b
 9378 0124 0B       		.uleb128 0xb
 9379 0125 49       		.uleb128 0x49
 9380 0126 13       		.uleb128 0x13
 9381 0127 00       		.byte	0
 9382 0128 00       		.byte	0
 9383 0129 1A       		.uleb128 0x1a
 9384 012a 2E       		.uleb128 0x2e
 9385 012b 01       		.byte	0x1
 9386 012c 03       		.uleb128 0x3
 9387 012d 0E       		.uleb128 0xe
 9388 012e 3A       		.uleb128 0x3a
 9389 012f 0B       		.uleb128 0xb
 9390 0130 3B       		.uleb128 0x3b
 9391 0131 0B       		.uleb128 0xb
 9392 0132 27       		.uleb128 0x27
 9393 0133 19       		.uleb128 0x19
 9394 0134 20       		.uleb128 0x20
 9395 0135 0B       		.uleb128 0xb
 9396 0136 01       		.uleb128 0x1
 9397 0137 13       		.uleb128 0x13
 9398 0138 00       		.byte	0
 9399 0139 00       		.byte	0
 9400 013a 1B       		.uleb128 0x1b
 9401 013b 05       		.uleb128 0x5
 9402 013c 00       		.byte	0
 9403 013d 03       		.uleb128 0x3
 9404 013e 0E       		.uleb128 0xe
 9405 013f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 265


 9406 0140 0B       		.uleb128 0xb
 9407 0141 3B       		.uleb128 0x3b
 9408 0142 0B       		.uleb128 0xb
 9409 0143 49       		.uleb128 0x49
 9410 0144 13       		.uleb128 0x13
 9411 0145 00       		.byte	0
 9412 0146 00       		.byte	0
 9413 0147 1C       		.uleb128 0x1c
 9414 0148 2E       		.uleb128 0x2e
 9415 0149 01       		.byte	0x1
 9416 014a 03       		.uleb128 0x3
 9417 014b 0E       		.uleb128 0xe
 9418 014c 3A       		.uleb128 0x3a
 9419 014d 0B       		.uleb128 0xb
 9420 014e 3B       		.uleb128 0x3b
 9421 014f 05       		.uleb128 0x5
 9422 0150 27       		.uleb128 0x27
 9423 0151 19       		.uleb128 0x19
 9424 0152 49       		.uleb128 0x49
 9425 0153 13       		.uleb128 0x13
 9426 0154 11       		.uleb128 0x11
 9427 0155 01       		.uleb128 0x1
 9428 0156 12       		.uleb128 0x12
 9429 0157 06       		.uleb128 0x6
 9430 0158 40       		.uleb128 0x40
 9431 0159 18       		.uleb128 0x18
 9432 015a 9742     		.uleb128 0x2117
 9433 015c 19       		.uleb128 0x19
 9434 015d 01       		.uleb128 0x1
 9435 015e 13       		.uleb128 0x13
 9436 015f 00       		.byte	0
 9437 0160 00       		.byte	0
 9438 0161 1D       		.uleb128 0x1d
 9439 0162 05       		.uleb128 0x5
 9440 0163 00       		.byte	0
 9441 0164 03       		.uleb128 0x3
 9442 0165 0E       		.uleb128 0xe
 9443 0166 3A       		.uleb128 0x3a
 9444 0167 0B       		.uleb128 0xb
 9445 0168 3B       		.uleb128 0x3b
 9446 0169 05       		.uleb128 0x5
 9447 016a 49       		.uleb128 0x49
 9448 016b 13       		.uleb128 0x13
 9449 016c 02       		.uleb128 0x2
 9450 016d 17       		.uleb128 0x17
 9451 016e 00       		.byte	0
 9452 016f 00       		.byte	0
 9453 0170 1E       		.uleb128 0x1e
 9454 0171 34       		.uleb128 0x34
 9455 0172 00       		.byte	0
 9456 0173 03       		.uleb128 0x3
 9457 0174 0E       		.uleb128 0xe
 9458 0175 3A       		.uleb128 0x3a
 9459 0176 0B       		.uleb128 0xb
 9460 0177 3B       		.uleb128 0x3b
 9461 0178 05       		.uleb128 0x5
 9462 0179 49       		.uleb128 0x49
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 266


 9463 017a 13       		.uleb128 0x13
 9464 017b 02       		.uleb128 0x2
 9465 017c 17       		.uleb128 0x17
 9466 017d 00       		.byte	0
 9467 017e 00       		.byte	0
 9468 017f 1F       		.uleb128 0x1f
 9469 0180 2E       		.uleb128 0x2e
 9470 0181 01       		.byte	0x1
 9471 0182 03       		.uleb128 0x3
 9472 0183 0E       		.uleb128 0xe
 9473 0184 3A       		.uleb128 0x3a
 9474 0185 0B       		.uleb128 0xb
 9475 0186 3B       		.uleb128 0x3b
 9476 0187 05       		.uleb128 0x5
 9477 0188 27       		.uleb128 0x27
 9478 0189 19       		.uleb128 0x19
 9479 018a 11       		.uleb128 0x11
 9480 018b 01       		.uleb128 0x1
 9481 018c 12       		.uleb128 0x12
 9482 018d 06       		.uleb128 0x6
 9483 018e 40       		.uleb128 0x40
 9484 018f 18       		.uleb128 0x18
 9485 0190 9742     		.uleb128 0x2117
 9486 0192 19       		.uleb128 0x19
 9487 0193 01       		.uleb128 0x1
 9488 0194 13       		.uleb128 0x13
 9489 0195 00       		.byte	0
 9490 0196 00       		.byte	0
 9491 0197 20       		.uleb128 0x20
 9492 0198 898201   		.uleb128 0x4109
 9493 019b 00       		.byte	0
 9494 019c 11       		.uleb128 0x11
 9495 019d 01       		.uleb128 0x1
 9496 019e 31       		.uleb128 0x31
 9497 019f 13       		.uleb128 0x13
 9498 01a0 00       		.byte	0
 9499 01a1 00       		.byte	0
 9500 01a2 21       		.uleb128 0x21
 9501 01a3 898201   		.uleb128 0x4109
 9502 01a6 01       		.byte	0x1
 9503 01a7 11       		.uleb128 0x11
 9504 01a8 01       		.uleb128 0x1
 9505 01a9 31       		.uleb128 0x31
 9506 01aa 13       		.uleb128 0x13
 9507 01ab 00       		.byte	0
 9508 01ac 00       		.byte	0
 9509 01ad 22       		.uleb128 0x22
 9510 01ae 8A8201   		.uleb128 0x410a
 9511 01b1 00       		.byte	0
 9512 01b2 02       		.uleb128 0x2
 9513 01b3 18       		.uleb128 0x18
 9514 01b4 9142     		.uleb128 0x2111
 9515 01b6 18       		.uleb128 0x18
 9516 01b7 00       		.byte	0
 9517 01b8 00       		.byte	0
 9518 01b9 23       		.uleb128 0x23
 9519 01ba 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 267


 9520 01bb 00       		.byte	0
 9521 01bc 03       		.uleb128 0x3
 9522 01bd 0E       		.uleb128 0xe
 9523 01be 3A       		.uleb128 0x3a
 9524 01bf 0B       		.uleb128 0xb
 9525 01c0 3B       		.uleb128 0x3b
 9526 01c1 05       		.uleb128 0x5
 9527 01c2 49       		.uleb128 0x49
 9528 01c3 13       		.uleb128 0x13
 9529 01c4 02       		.uleb128 0x2
 9530 01c5 18       		.uleb128 0x18
 9531 01c6 00       		.byte	0
 9532 01c7 00       		.byte	0
 9533 01c8 24       		.uleb128 0x24
 9534 01c9 34       		.uleb128 0x34
 9535 01ca 00       		.byte	0
 9536 01cb 03       		.uleb128 0x3
 9537 01cc 0E       		.uleb128 0xe
 9538 01cd 3A       		.uleb128 0x3a
 9539 01ce 0B       		.uleb128 0xb
 9540 01cf 3B       		.uleb128 0x3b
 9541 01d0 05       		.uleb128 0x5
 9542 01d1 49       		.uleb128 0x49
 9543 01d2 13       		.uleb128 0x13
 9544 01d3 02       		.uleb128 0x2
 9545 01d4 18       		.uleb128 0x18
 9546 01d5 00       		.byte	0
 9547 01d6 00       		.byte	0
 9548 01d7 25       		.uleb128 0x25
 9549 01d8 34       		.uleb128 0x34
 9550 01d9 00       		.byte	0
 9551 01da 03       		.uleb128 0x3
 9552 01db 08       		.uleb128 0x8
 9553 01dc 3A       		.uleb128 0x3a
 9554 01dd 0B       		.uleb128 0xb
 9555 01de 3B       		.uleb128 0x3b
 9556 01df 05       		.uleb128 0x5
 9557 01e0 49       		.uleb128 0x49
 9558 01e1 13       		.uleb128 0x13
 9559 01e2 02       		.uleb128 0x2
 9560 01e3 17       		.uleb128 0x17
 9561 01e4 00       		.byte	0
 9562 01e5 00       		.byte	0
 9563 01e6 26       		.uleb128 0x26
 9564 01e7 898201   		.uleb128 0x4109
 9565 01ea 01       		.byte	0x1
 9566 01eb 11       		.uleb128 0x11
 9567 01ec 01       		.uleb128 0x1
 9568 01ed 31       		.uleb128 0x31
 9569 01ee 13       		.uleb128 0x13
 9570 01ef 01       		.uleb128 0x1
 9571 01f0 13       		.uleb128 0x13
 9572 01f1 00       		.byte	0
 9573 01f2 00       		.byte	0
 9574 01f3 27       		.uleb128 0x27
 9575 01f4 2E       		.uleb128 0x2e
 9576 01f5 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 268


 9577 01f6 3F       		.uleb128 0x3f
 9578 01f7 19       		.uleb128 0x19
 9579 01f8 03       		.uleb128 0x3
 9580 01f9 0E       		.uleb128 0xe
 9581 01fa 3A       		.uleb128 0x3a
 9582 01fb 0B       		.uleb128 0xb
 9583 01fc 3B       		.uleb128 0x3b
 9584 01fd 05       		.uleb128 0x5
 9585 01fe 27       		.uleb128 0x27
 9586 01ff 19       		.uleb128 0x19
 9587 0200 49       		.uleb128 0x49
 9588 0201 13       		.uleb128 0x13
 9589 0202 11       		.uleb128 0x11
 9590 0203 01       		.uleb128 0x1
 9591 0204 12       		.uleb128 0x12
 9592 0205 06       		.uleb128 0x6
 9593 0206 40       		.uleb128 0x40
 9594 0207 18       		.uleb128 0x18
 9595 0208 9742     		.uleb128 0x2117
 9596 020a 19       		.uleb128 0x19
 9597 020b 01       		.uleb128 0x1
 9598 020c 13       		.uleb128 0x13
 9599 020d 00       		.byte	0
 9600 020e 00       		.byte	0
 9601 020f 28       		.uleb128 0x28
 9602 0210 0B       		.uleb128 0xb
 9603 0211 01       		.byte	0x1
 9604 0212 11       		.uleb128 0x11
 9605 0213 01       		.uleb128 0x1
 9606 0214 12       		.uleb128 0x12
 9607 0215 06       		.uleb128 0x6
 9608 0216 01       		.uleb128 0x1
 9609 0217 13       		.uleb128 0x13
 9610 0218 00       		.byte	0
 9611 0219 00       		.byte	0
 9612 021a 29       		.uleb128 0x29
 9613 021b 2E       		.uleb128 0x2e
 9614 021c 01       		.byte	0x1
 9615 021d 3F       		.uleb128 0x3f
 9616 021e 19       		.uleb128 0x19
 9617 021f 03       		.uleb128 0x3
 9618 0220 0E       		.uleb128 0xe
 9619 0221 3A       		.uleb128 0x3a
 9620 0222 0B       		.uleb128 0xb
 9621 0223 3B       		.uleb128 0x3b
 9622 0224 05       		.uleb128 0x5
 9623 0225 27       		.uleb128 0x27
 9624 0226 19       		.uleb128 0x19
 9625 0227 11       		.uleb128 0x11
 9626 0228 01       		.uleb128 0x1
 9627 0229 12       		.uleb128 0x12
 9628 022a 06       		.uleb128 0x6
 9629 022b 40       		.uleb128 0x40
 9630 022c 18       		.uleb128 0x18
 9631 022d 9742     		.uleb128 0x2117
 9632 022f 19       		.uleb128 0x19
 9633 0230 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 269


 9634 0231 13       		.uleb128 0x13
 9635 0232 00       		.byte	0
 9636 0233 00       		.byte	0
 9637 0234 2A       		.uleb128 0x2a
 9638 0235 34       		.uleb128 0x34
 9639 0236 00       		.byte	0
 9640 0237 03       		.uleb128 0x3
 9641 0238 0E       		.uleb128 0xe
 9642 0239 3A       		.uleb128 0x3a
 9643 023a 0B       		.uleb128 0xb
 9644 023b 3B       		.uleb128 0x3b
 9645 023c 05       		.uleb128 0x5
 9646 023d 49       		.uleb128 0x49
 9647 023e 13       		.uleb128 0x13
 9648 023f 00       		.byte	0
 9649 0240 00       		.byte	0
 9650 0241 2B       		.uleb128 0x2b
 9651 0242 1D       		.uleb128 0x1d
 9652 0243 01       		.byte	0x1
 9653 0244 31       		.uleb128 0x31
 9654 0245 13       		.uleb128 0x13
 9655 0246 11       		.uleb128 0x11
 9656 0247 01       		.uleb128 0x1
 9657 0248 12       		.uleb128 0x12
 9658 0249 06       		.uleb128 0x6
 9659 024a 58       		.uleb128 0x58
 9660 024b 0B       		.uleb128 0xb
 9661 024c 59       		.uleb128 0x59
 9662 024d 05       		.uleb128 0x5
 9663 024e 01       		.uleb128 0x1
 9664 024f 13       		.uleb128 0x13
 9665 0250 00       		.byte	0
 9666 0251 00       		.byte	0
 9667 0252 2C       		.uleb128 0x2c
 9668 0253 0B       		.uleb128 0xb
 9669 0254 01       		.byte	0x1
 9670 0255 11       		.uleb128 0x11
 9671 0256 01       		.uleb128 0x1
 9672 0257 12       		.uleb128 0x12
 9673 0258 06       		.uleb128 0x6
 9674 0259 00       		.byte	0
 9675 025a 00       		.byte	0
 9676 025b 2D       		.uleb128 0x2d
 9677 025c 34       		.uleb128 0x34
 9678 025d 00       		.byte	0
 9679 025e 31       		.uleb128 0x31
 9680 025f 13       		.uleb128 0x13
 9681 0260 00       		.byte	0
 9682 0261 00       		.byte	0
 9683 0262 2E       		.uleb128 0x2e
 9684 0263 05       		.uleb128 0x5
 9685 0264 00       		.byte	0
 9686 0265 31       		.uleb128 0x31
 9687 0266 13       		.uleb128 0x13
 9688 0267 02       		.uleb128 0x2
 9689 0268 17       		.uleb128 0x17
 9690 0269 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 270


 9691 026a 00       		.byte	0
 9692 026b 2F       		.uleb128 0x2f
 9693 026c 2E       		.uleb128 0x2e
 9694 026d 00       		.byte	0
 9695 026e 3F       		.uleb128 0x3f
 9696 026f 19       		.uleb128 0x19
 9697 0270 03       		.uleb128 0x3
 9698 0271 0E       		.uleb128 0xe
 9699 0272 3A       		.uleb128 0x3a
 9700 0273 0B       		.uleb128 0xb
 9701 0274 3B       		.uleb128 0x3b
 9702 0275 05       		.uleb128 0x5
 9703 0276 27       		.uleb128 0x27
 9704 0277 19       		.uleb128 0x19
 9705 0278 11       		.uleb128 0x11
 9706 0279 01       		.uleb128 0x1
 9707 027a 12       		.uleb128 0x12
 9708 027b 06       		.uleb128 0x6
 9709 027c 40       		.uleb128 0x40
 9710 027d 18       		.uleb128 0x18
 9711 027e 9742     		.uleb128 0x2117
 9712 0280 19       		.uleb128 0x19
 9713 0281 00       		.byte	0
 9714 0282 00       		.byte	0
 9715 0283 30       		.uleb128 0x30
 9716 0284 34       		.uleb128 0x34
 9717 0285 00       		.byte	0
 9718 0286 03       		.uleb128 0x3
 9719 0287 0E       		.uleb128 0xe
 9720 0288 3A       		.uleb128 0x3a
 9721 0289 0B       		.uleb128 0xb
 9722 028a 3B       		.uleb128 0x3b
 9723 028b 05       		.uleb128 0x5
 9724 028c 49       		.uleb128 0x49
 9725 028d 13       		.uleb128 0x13
 9726 028e 1C       		.uleb128 0x1c
 9727 028f 0B       		.uleb128 0xb
 9728 0290 00       		.byte	0
 9729 0291 00       		.byte	0
 9730 0292 31       		.uleb128 0x31
 9731 0293 2E       		.uleb128 0x2e
 9732 0294 00       		.byte	0
 9733 0295 3F       		.uleb128 0x3f
 9734 0296 19       		.uleb128 0x19
 9735 0297 03       		.uleb128 0x3
 9736 0298 0E       		.uleb128 0xe
 9737 0299 3A       		.uleb128 0x3a
 9738 029a 0B       		.uleb128 0xb
 9739 029b 3B       		.uleb128 0x3b
 9740 029c 05       		.uleb128 0x5
 9741 029d 27       		.uleb128 0x27
 9742 029e 19       		.uleb128 0x19
 9743 029f 49       		.uleb128 0x49
 9744 02a0 13       		.uleb128 0x13
 9745 02a1 11       		.uleb128 0x11
 9746 02a2 01       		.uleb128 0x1
 9747 02a3 12       		.uleb128 0x12
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 271


 9748 02a4 06       		.uleb128 0x6
 9749 02a5 40       		.uleb128 0x40
 9750 02a6 18       		.uleb128 0x18
 9751 02a7 9742     		.uleb128 0x2117
 9752 02a9 19       		.uleb128 0x19
 9753 02aa 00       		.byte	0
 9754 02ab 00       		.byte	0
 9755 02ac 32       		.uleb128 0x32
 9756 02ad 0B       		.uleb128 0xb
 9757 02ae 01       		.byte	0x1
 9758 02af 55       		.uleb128 0x55
 9759 02b0 17       		.uleb128 0x17
 9760 02b1 00       		.byte	0
 9761 02b2 00       		.byte	0
 9762 02b3 33       		.uleb128 0x33
 9763 02b4 0B       		.uleb128 0xb
 9764 02b5 01       		.byte	0x1
 9765 02b6 55       		.uleb128 0x55
 9766 02b7 17       		.uleb128 0x17
 9767 02b8 01       		.uleb128 0x1
 9768 02b9 13       		.uleb128 0x13
 9769 02ba 00       		.byte	0
 9770 02bb 00       		.byte	0
 9771 02bc 34       		.uleb128 0x34
 9772 02bd 2E       		.uleb128 0x2e
 9773 02be 01       		.byte	0x1
 9774 02bf 03       		.uleb128 0x3
 9775 02c0 0E       		.uleb128 0xe
 9776 02c1 3A       		.uleb128 0x3a
 9777 02c2 0B       		.uleb128 0xb
 9778 02c3 3B       		.uleb128 0x3b
 9779 02c4 05       		.uleb128 0x5
 9780 02c5 27       		.uleb128 0x27
 9781 02c6 19       		.uleb128 0x19
 9782 02c7 8701     		.uleb128 0x87
 9783 02c9 19       		.uleb128 0x19
 9784 02ca 11       		.uleb128 0x11
 9785 02cb 01       		.uleb128 0x1
 9786 02cc 12       		.uleb128 0x12
 9787 02cd 06       		.uleb128 0x6
 9788 02ce 40       		.uleb128 0x40
 9789 02cf 18       		.uleb128 0x18
 9790 02d0 9742     		.uleb128 0x2117
 9791 02d2 19       		.uleb128 0x19
 9792 02d3 01       		.uleb128 0x1
 9793 02d4 13       		.uleb128 0x13
 9794 02d5 00       		.byte	0
 9795 02d6 00       		.byte	0
 9796 02d7 35       		.uleb128 0x35
 9797 02d8 2E       		.uleb128 0x2e
 9798 02d9 00       		.byte	0
 9799 02da 3F       		.uleb128 0x3f
 9800 02db 19       		.uleb128 0x19
 9801 02dc 03       		.uleb128 0x3
 9802 02dd 0E       		.uleb128 0xe
 9803 02de 3A       		.uleb128 0x3a
 9804 02df 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 272


 9805 02e0 3B       		.uleb128 0x3b
 9806 02e1 05       		.uleb128 0x5
 9807 02e2 27       		.uleb128 0x27
 9808 02e3 19       		.uleb128 0x19
 9809 02e4 3C       		.uleb128 0x3c
 9810 02e5 19       		.uleb128 0x19
 9811 02e6 00       		.byte	0
 9812 02e7 00       		.byte	0
 9813 02e8 36       		.uleb128 0x36
 9814 02e9 34       		.uleb128 0x34
 9815 02ea 00       		.byte	0
 9816 02eb 03       		.uleb128 0x3
 9817 02ec 0E       		.uleb128 0xe
 9818 02ed 3A       		.uleb128 0x3a
 9819 02ee 0B       		.uleb128 0xb
 9820 02ef 3B       		.uleb128 0x3b
 9821 02f0 05       		.uleb128 0x5
 9822 02f1 49       		.uleb128 0x49
 9823 02f2 13       		.uleb128 0x13
 9824 02f3 1C       		.uleb128 0x1c
 9825 02f4 0D       		.uleb128 0xd
 9826 02f5 00       		.byte	0
 9827 02f6 00       		.byte	0
 9828 02f7 37       		.uleb128 0x37
 9829 02f8 34       		.uleb128 0x34
 9830 02f9 00       		.byte	0
 9831 02fa 03       		.uleb128 0x3
 9832 02fb 0E       		.uleb128 0xe
 9833 02fc 3A       		.uleb128 0x3a
 9834 02fd 0B       		.uleb128 0xb
 9835 02fe 3B       		.uleb128 0x3b
 9836 02ff 05       		.uleb128 0x5
 9837 0300 49       		.uleb128 0x49
 9838 0301 13       		.uleb128 0x13
 9839 0302 3F       		.uleb128 0x3f
 9840 0303 19       		.uleb128 0x19
 9841 0304 3C       		.uleb128 0x3c
 9842 0305 19       		.uleb128 0x19
 9843 0306 00       		.byte	0
 9844 0307 00       		.byte	0
 9845 0308 38       		.uleb128 0x38
 9846 0309 34       		.uleb128 0x34
 9847 030a 00       		.byte	0
 9848 030b 03       		.uleb128 0x3
 9849 030c 0E       		.uleb128 0xe
 9850 030d 3A       		.uleb128 0x3a
 9851 030e 0B       		.uleb128 0xb
 9852 030f 3B       		.uleb128 0x3b
 9853 0310 0B       		.uleb128 0xb
 9854 0311 49       		.uleb128 0x49
 9855 0312 13       		.uleb128 0x13
 9856 0313 3F       		.uleb128 0x3f
 9857 0314 19       		.uleb128 0x19
 9858 0315 3C       		.uleb128 0x3c
 9859 0316 19       		.uleb128 0x19
 9860 0317 00       		.byte	0
 9861 0318 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 273


 9862 0319 39       		.uleb128 0x39
 9863 031a 34       		.uleb128 0x34
 9864 031b 00       		.byte	0
 9865 031c 03       		.uleb128 0x3
 9866 031d 0E       		.uleb128 0xe
 9867 031e 3A       		.uleb128 0x3a
 9868 031f 0B       		.uleb128 0xb
 9869 0320 3B       		.uleb128 0x3b
 9870 0321 05       		.uleb128 0x5
 9871 0322 49       		.uleb128 0x49
 9872 0323 13       		.uleb128 0x13
 9873 0324 3F       		.uleb128 0x3f
 9874 0325 19       		.uleb128 0x19
 9875 0326 02       		.uleb128 0x2
 9876 0327 18       		.uleb128 0x18
 9877 0328 00       		.byte	0
 9878 0329 00       		.byte	0
 9879 032a 3A       		.uleb128 0x3a
 9880 032b 2E       		.uleb128 0x2e
 9881 032c 00       		.byte	0
 9882 032d 3F       		.uleb128 0x3f
 9883 032e 19       		.uleb128 0x19
 9884 032f 3C       		.uleb128 0x3c
 9885 0330 19       		.uleb128 0x19
 9886 0331 6E       		.uleb128 0x6e
 9887 0332 0E       		.uleb128 0xe
 9888 0333 03       		.uleb128 0x3
 9889 0334 0E       		.uleb128 0xe
 9890 0335 3A       		.uleb128 0x3a
 9891 0336 0B       		.uleb128 0xb
 9892 0337 3B       		.uleb128 0x3b
 9893 0338 0B       		.uleb128 0xb
 9894 0339 00       		.byte	0
 9895 033a 00       		.byte	0
 9896 033b 3B       		.uleb128 0x3b
 9897 033c 2E       		.uleb128 0x2e
 9898 033d 00       		.byte	0
 9899 033e 3F       		.uleb128 0x3f
 9900 033f 19       		.uleb128 0x19
 9901 0340 3C       		.uleb128 0x3c
 9902 0341 19       		.uleb128 0x19
 9903 0342 6E       		.uleb128 0x6e
 9904 0343 0E       		.uleb128 0xe
 9905 0344 03       		.uleb128 0x3
 9906 0345 0E       		.uleb128 0xe
 9907 0346 3A       		.uleb128 0x3a
 9908 0347 0B       		.uleb128 0xb
 9909 0348 3B       		.uleb128 0x3b
 9910 0349 05       		.uleb128 0x5
 9911 034a 00       		.byte	0
 9912 034b 00       		.byte	0
 9913 034c 00       		.byte	0
 9914              		.section	.debug_loc,"",%progbits
 9915              	.Ldebug_loc0:
 9916              	.LLST0:
 9917 0000 00000000 		.4byte	.LVL0
 9918 0004 28000000 		.4byte	.LVL1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 274


 9919 0008 0100     		.2byte	0x1
 9920 000a 50       		.byte	0x50
 9921 000b 28000000 		.4byte	.LVL1
 9922 000f 2A000000 		.4byte	.LVL2
 9923 0013 0400     		.2byte	0x4
 9924 0015 F3       		.byte	0xf3
 9925 0016 01       		.uleb128 0x1
 9926 0017 50       		.byte	0x50
 9927 0018 9F       		.byte	0x9f
 9928 0019 2A000000 		.4byte	.LVL2
 9929 001d 2C000000 		.4byte	.LVL3
 9930 0021 0100     		.2byte	0x1
 9931 0023 50       		.byte	0x50
 9932 0024 2C000000 		.4byte	.LVL3
 9933 0028 2E000000 		.4byte	.LVL4
 9934 002c 0100     		.2byte	0x1
 9935 002e 52       		.byte	0x52
 9936 002f 2E000000 		.4byte	.LVL4
 9937 0033 30000000 		.4byte	.LVL5
 9938 0037 0100     		.2byte	0x1
 9939 0039 50       		.byte	0x50
 9940 003a 30000000 		.4byte	.LVL5
 9941 003e 32000000 		.4byte	.LVL6
 9942 0042 0400     		.2byte	0x4
 9943 0044 F3       		.byte	0xf3
 9944 0045 01       		.uleb128 0x1
 9945 0046 50       		.byte	0x50
 9946 0047 9F       		.byte	0x9f
 9947 0048 32000000 		.4byte	.LVL6
 9948 004c 34000000 		.4byte	.LVL7
 9949 0050 0100     		.2byte	0x1
 9950 0052 50       		.byte	0x50
 9951 0053 34000000 		.4byte	.LVL7
 9952 0057 40000000 		.4byte	.LFE721
 9953 005b 0400     		.2byte	0x4
 9954 005d F3       		.byte	0xf3
 9955 005e 01       		.uleb128 0x1
 9956 005f 50       		.byte	0x50
 9957 0060 9F       		.byte	0x9f
 9958 0061 00000000 		.4byte	0
 9959 0065 00000000 		.4byte	0
 9960              	.LLST1:
 9961 0069 00000000 		.4byte	.LVL0
 9962 006d 34000000 		.4byte	.LVL7
 9963 0071 0200     		.2byte	0x2
 9964 0073 30       		.byte	0x30
 9965 0074 9F       		.byte	0x9f
 9966 0075 34000000 		.4byte	.LVL7
 9967 0079 40000000 		.4byte	.LFE721
 9968 007d 0100     		.2byte	0x1
 9969 007f 50       		.byte	0x50
 9970 0080 00000000 		.4byte	0
 9971 0084 00000000 		.4byte	0
 9972              	.LLST2:
 9973 0088 00000000 		.4byte	.LVL0
 9974 008c 28000000 		.4byte	.LVL1
 9975 0090 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 275


 9976 0092 50       		.byte	0x50
 9977 0093 28000000 		.4byte	.LVL1
 9978 0097 2A000000 		.4byte	.LVL2
 9979 009b 0400     		.2byte	0x4
 9980 009d F3       		.byte	0xf3
 9981 009e 01       		.uleb128 0x1
 9982 009f 50       		.byte	0x50
 9983 00a0 9F       		.byte	0x9f
 9984 00a1 2A000000 		.4byte	.LVL2
 9985 00a5 2C000000 		.4byte	.LVL3
 9986 00a9 0100     		.2byte	0x1
 9987 00ab 50       		.byte	0x50
 9988 00ac 2C000000 		.4byte	.LVL3
 9989 00b0 2E000000 		.4byte	.LVL4
 9990 00b4 0100     		.2byte	0x1
 9991 00b6 52       		.byte	0x52
 9992 00b7 2E000000 		.4byte	.LVL4
 9993 00bb 30000000 		.4byte	.LVL5
 9994 00bf 0100     		.2byte	0x1
 9995 00c1 50       		.byte	0x50
 9996 00c2 30000000 		.4byte	.LVL5
 9997 00c6 32000000 		.4byte	.LVL6
 9998 00ca 0400     		.2byte	0x4
 9999 00cc F3       		.byte	0xf3
 10000 00cd 01       		.uleb128 0x1
 10001 00ce 50       		.byte	0x50
 10002 00cf 9F       		.byte	0x9f
 10003 00d0 32000000 		.4byte	.LVL6
 10004 00d4 34000000 		.4byte	.LVL7
 10005 00d8 0100     		.2byte	0x1
 10006 00da 50       		.byte	0x50
 10007 00db 34000000 		.4byte	.LVL7
 10008 00df 40000000 		.4byte	.LFE721
 10009 00e3 0400     		.2byte	0x4
 10010 00e5 F3       		.byte	0xf3
 10011 00e6 01       		.uleb128 0x1
 10012 00e7 50       		.byte	0x50
 10013 00e8 9F       		.byte	0x9f
 10014 00e9 00000000 		.4byte	0
 10015 00ed 00000000 		.4byte	0
 10016              	.LLST3:
 10017 00f1 22000000 		.4byte	.LVL8
 10018 00f5 24000000 		.4byte	.LVL9
 10019 00f9 0100     		.2byte	0x1
 10020 00fb 52       		.byte	0x52
 10021 00fc 00000000 		.4byte	0
 10022 0100 00000000 		.4byte	0
 10023              	.LLST4:
 10024 0104 00000000 		.4byte	.LVL10
 10025 0108 06000000 		.4byte	.LVL11
 10026 010c 0100     		.2byte	0x1
 10027 010e 50       		.byte	0x50
 10028 010f 06000000 		.4byte	.LVL11
 10029 0113 12000000 		.4byte	.LFE747
 10030 0117 0100     		.2byte	0x1
 10031 0119 54       		.byte	0x54
 10032 011a 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 276


 10033 011e 00000000 		.4byte	0
 10034              	.LLST5:
 10035 0122 00000000 		.4byte	.LVL14
 10036 0126 18000000 		.4byte	.LVL17
 10037 012a 0100     		.2byte	0x1
 10038 012c 50       		.byte	0x50
 10039 012d 18000000 		.4byte	.LVL17
 10040 0131 9E000000 		.4byte	.LFE712
 10041 0135 0100     		.2byte	0x1
 10042 0137 5A       		.byte	0x5a
 10043 0138 00000000 		.4byte	0
 10044 013c 00000000 		.4byte	0
 10045              	.LLST6:
 10046 0140 00000000 		.4byte	.LVL14
 10047 0144 16000000 		.4byte	.LVL16
 10048 0148 0100     		.2byte	0x1
 10049 014a 51       		.byte	0x51
 10050 014b 16000000 		.4byte	.LVL16
 10051 014f 9E000000 		.4byte	.LFE712
 10052 0153 0100     		.2byte	0x1
 10053 0155 59       		.byte	0x59
 10054 0156 00000000 		.4byte	0
 10055 015a 00000000 		.4byte	0
 10056              	.LLST7:
 10057 015e 00000000 		.4byte	.LVL14
 10058 0162 14000000 		.4byte	.LVL15
 10059 0166 0100     		.2byte	0x1
 10060 0168 52       		.byte	0x52
 10061 0169 14000000 		.4byte	.LVL15
 10062 016d 28000000 		.4byte	.LVL19
 10063 0171 0100     		.2byte	0x1
 10064 0173 55       		.byte	0x55
 10065 0174 28000000 		.4byte	.LVL19
 10066 0178 30000000 		.4byte	.LVL21
 10067 017c 0700     		.2byte	0x7
 10068 017e 72       		.byte	0x72
 10069 017f 81808080 		.sleb128 -1073741823
 10069      7C
 10070 0184 9F       		.byte	0x9f
 10071 0185 30000000 		.4byte	.LVL21
 10072 0189 9E000000 		.4byte	.LFE712
 10073 018d 0400     		.2byte	0x4
 10074 018f F3       		.byte	0xf3
 10075 0190 01       		.uleb128 0x1
 10076 0191 52       		.byte	0x52
 10077 0192 9F       		.byte	0x9f
 10078 0193 00000000 		.4byte	0
 10079 0197 00000000 		.4byte	0
 10080              	.LLST8:
 10081 019b 00000000 		.4byte	.LVL14
 10082 019f 1B000000 		.4byte	.LVL18-1
 10083 01a3 0100     		.2byte	0x1
 10084 01a5 53       		.byte	0x53
 10085 01a6 1B000000 		.4byte	.LVL18-1
 10086 01aa 9E000000 		.4byte	.LFE712
 10087 01ae 0100     		.2byte	0x1
 10088 01b0 58       		.byte	0x58
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 277


 10089 01b1 00000000 		.4byte	0
 10090 01b5 00000000 		.4byte	0
 10091              	.LLST9:
 10092 01b9 00000000 		.4byte	.LVL14
 10093 01bd 52000000 		.4byte	.LVL24
 10094 01c1 0200     		.2byte	0x2
 10095 01c3 91       		.byte	0x91
 10096 01c4 00       		.sleb128 0
 10097 01c5 52000000 		.4byte	.LVL24
 10098 01c9 9E000000 		.4byte	.LFE712
 10099 01cd 0100     		.2byte	0x1
 10100 01cf 57       		.byte	0x57
 10101 01d0 00000000 		.4byte	0
 10102 01d4 00000000 		.4byte	0
 10103              	.LLST10:
 10104 01d8 30000000 		.4byte	.LVL21
 10105 01dc 48000000 		.4byte	.LVL23
 10106 01e0 0100     		.2byte	0x1
 10107 01e2 53       		.byte	0x53
 10108 01e3 6C000000 		.4byte	.LVL27
 10109 01e7 70000000 		.4byte	.LVL28
 10110 01eb 0200     		.2byte	0x2
 10111 01ed 30       		.byte	0x30
 10112 01ee 9F       		.byte	0x9f
 10113 01ef 70000000 		.4byte	.LVL28
 10114 01f3 84000000 		.4byte	.LVL30
 10115 01f7 0100     		.2byte	0x1
 10116 01f9 53       		.byte	0x53
 10117 01fa 00000000 		.4byte	0
 10118 01fe 00000000 		.4byte	0
 10119              	.LLST11:
 10120 0202 02000000 		.4byte	.LVL32
 10121 0206 06000000 		.4byte	.LVL33
 10122 020a 0200     		.2byte	0x2
 10123 020c 30       		.byte	0x30
 10124 020d 9F       		.byte	0x9f
 10125 020e 06000000 		.4byte	.LVL33
 10126 0212 1C000000 		.4byte	.LVL36
 10127 0216 0100     		.2byte	0x1
 10128 0218 54       		.byte	0x54
 10129 0219 00000000 		.4byte	0
 10130 021d 00000000 		.4byte	0
 10131              	.LLST12:
 10132 0221 00000000 		.4byte	.LVL42
 10133 0225 07000000 		.4byte	.LVL43-1
 10134 0229 0100     		.2byte	0x1
 10135 022b 50       		.byte	0x50
 10136 022c 07000000 		.4byte	.LVL43-1
 10137 0230 A2000000 		.4byte	.LVL47
 10138 0234 0100     		.2byte	0x1
 10139 0236 54       		.byte	0x54
 10140 0237 A2000000 		.4byte	.LVL47
 10141 023b AC000000 		.4byte	.LFE713
 10142 023f 0400     		.2byte	0x4
 10143 0241 F3       		.byte	0xf3
 10144 0242 01       		.uleb128 0x1
 10145 0243 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 278


 10146 0244 9F       		.byte	0x9f
 10147 0245 00000000 		.4byte	0
 10148 0249 00000000 		.4byte	0
 10149              	.LLST13:
 10150 024d 00000000 		.4byte	.LVL48
 10151 0251 10000000 		.4byte	.LVL50
 10152 0255 0100     		.2byte	0x1
 10153 0257 50       		.byte	0x50
 10154 0258 10000000 		.4byte	.LVL50
 10155 025c 2E000000 		.4byte	.LVL54
 10156 0260 0100     		.2byte	0x1
 10157 0262 54       		.byte	0x54
 10158 0263 2E000000 		.4byte	.LVL54
 10159 0267 68000000 		.4byte	.LFE758
 10160 026b 0400     		.2byte	0x4
 10161 026d F3       		.byte	0xf3
 10162 026e 01       		.uleb128 0x1
 10163 026f 50       		.byte	0x50
 10164 0270 9F       		.byte	0x9f
 10165 0271 00000000 		.4byte	0
 10166 0275 00000000 		.4byte	0
 10167              	.LLST14:
 10168 0279 00000000 		.4byte	.LVL48
 10169 027d 15000000 		.4byte	.LVL51-1
 10170 0281 0100     		.2byte	0x1
 10171 0283 51       		.byte	0x51
 10172 0284 15000000 		.4byte	.LVL51-1
 10173 0288 64000000 		.4byte	.LVL59
 10174 028c 0100     		.2byte	0x1
 10175 028e 56       		.byte	0x56
 10176 028f 64000000 		.4byte	.LVL59
 10177 0293 68000000 		.4byte	.LFE758
 10178 0297 0400     		.2byte	0x4
 10179 0299 F3       		.byte	0xf3
 10180 029a 01       		.uleb128 0x1
 10181 029b 51       		.byte	0x51
 10182 029c 9F       		.byte	0x9f
 10183 029d 00000000 		.4byte	0
 10184 02a1 00000000 		.4byte	0
 10185              	.LLST15:
 10186 02a5 2E000000 		.4byte	.LVL54
 10187 02a9 64000000 		.4byte	.LVL59
 10188 02ad 0100     		.2byte	0x1
 10189 02af 54       		.byte	0x54
 10190 02b0 00000000 		.4byte	0
 10191 02b4 00000000 		.4byte	0
 10192              	.LLST16:
 10193 02b8 0C000000 		.4byte	.LVL49
 10194 02bc 4E000000 		.4byte	.LVL57
 10195 02c0 0100     		.2byte	0x1
 10196 02c2 55       		.byte	0x55
 10197 02c3 00000000 		.4byte	0
 10198 02c7 00000000 		.4byte	0
 10199              	.LLST17:
 10200 02cb 00000000 		.4byte	.LVL60
 10201 02cf 10000000 		.4byte	.LVL61
 10202 02d3 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 279


 10203 02d5 50       		.byte	0x50
 10204 02d6 10000000 		.4byte	.LVL61
 10205 02da 62000000 		.4byte	.LFE711
 10206 02de 0100     		.2byte	0x1
 10207 02e0 56       		.byte	0x56
 10208 02e1 00000000 		.4byte	0
 10209 02e5 00000000 		.4byte	0
 10210              	.LLST18:
 10211 02e9 00000000 		.4byte	.LVL60
 10212 02ed 13000000 		.4byte	.LVL62-1
 10213 02f1 0100     		.2byte	0x1
 10214 02f3 51       		.byte	0x51
 10215 02f4 13000000 		.4byte	.LVL62-1
 10216 02f8 62000000 		.4byte	.LFE711
 10217 02fc 0100     		.2byte	0x1
 10218 02fe 57       		.byte	0x57
 10219 02ff 00000000 		.4byte	0
 10220 0303 00000000 		.4byte	0
 10221              	.LLST19:
 10222 0307 00000000 		.4byte	.LVL60
 10223 030b 13000000 		.4byte	.LVL62-1
 10224 030f 0100     		.2byte	0x1
 10225 0311 52       		.byte	0x52
 10226 0312 13000000 		.4byte	.LVL62-1
 10227 0316 62000000 		.4byte	.LFE711
 10228 031a 0400     		.2byte	0x4
 10229 031c F3       		.byte	0xf3
 10230 031d 01       		.uleb128 0x1
 10231 031e 52       		.byte	0x52
 10232 031f 9F       		.byte	0x9f
 10233 0320 00000000 		.4byte	0
 10234 0324 00000000 		.4byte	0
 10235              	.LLST20:
 10236 0328 00000000 		.4byte	.LVL60
 10237 032c 13000000 		.4byte	.LVL62-1
 10238 0330 0100     		.2byte	0x1
 10239 0332 53       		.byte	0x53
 10240 0333 13000000 		.4byte	.LVL62-1
 10241 0337 62000000 		.4byte	.LFE711
 10242 033b 0100     		.2byte	0x1
 10243 033d 58       		.byte	0x58
 10244 033e 00000000 		.4byte	0
 10245 0342 00000000 		.4byte	0
 10246              	.LLST21:
 10247 0346 1E000000 		.4byte	.LVL64
 10248 034a 2A000000 		.4byte	.LVL65
 10249 034e 0100     		.2byte	0x1
 10250 0350 50       		.byte	0x50
 10251 0351 2A000000 		.4byte	.LVL65
 10252 0355 30000000 		.4byte	.LVL67
 10253 0359 0100     		.2byte	0x1
 10254 035b 54       		.byte	0x54
 10255 035c 32000000 		.4byte	.LVL68
 10256 0360 62000000 		.4byte	.LFE711
 10257 0364 0100     		.2byte	0x1
 10258 0366 54       		.byte	0x54
 10259 0367 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 280


 10260 036b 00000000 		.4byte	0
 10261              	.LLST22:
 10262 036f 54000000 		.4byte	.LVL70
 10263 0373 58000000 		.4byte	.LVL71
 10264 0377 0200     		.2byte	0x2
 10265 0379 31       		.byte	0x31
 10266 037a 9F       		.byte	0x9f
 10267 037b 5C000000 		.4byte	.LVL72
 10268 037f 62000000 		.4byte	.LFE711
 10269 0383 0100     		.2byte	0x1
 10270 0385 50       		.byte	0x50
 10271 0386 00000000 		.4byte	0
 10272 038a 00000000 		.4byte	0
 10273              	.LLST23:
 10274 038e 14000000 		.4byte	.LVL62
 10275 0392 1A000000 		.4byte	.LVL63
 10276 0396 0100     		.2byte	0x1
 10277 0398 50       		.byte	0x50
 10278 0399 1A000000 		.4byte	.LVL63
 10279 039d 30000000 		.4byte	.LVL67
 10280 03a1 0100     		.2byte	0x1
 10281 03a3 59       		.byte	0x59
 10282 03a4 30000000 		.4byte	.LVL67
 10283 03a8 32000000 		.4byte	.LVL68
 10284 03ac 0100     		.2byte	0x1
 10285 03ae 50       		.byte	0x50
 10286 03af 00000000 		.4byte	0
 10287 03b3 00000000 		.4byte	0
 10288              	.LLST24:
 10289 03b7 00000000 		.4byte	.LVL73
 10290 03bb 07000000 		.4byte	.LVL74-1
 10291 03bf 0100     		.2byte	0x1
 10292 03c1 50       		.byte	0x50
 10293 03c2 07000000 		.4byte	.LVL74-1
 10294 03c6 10000000 		.4byte	.LVL75
 10295 03ca 0100     		.2byte	0x1
 10296 03cc 54       		.byte	0x54
 10297 03cd 00000000 		.4byte	0
 10298 03d1 00000000 		.4byte	0
 10299              	.LLST25:
 10300 03d5 10000000 		.4byte	.LVL75
 10301 03d9 9A000000 		.4byte	.LVL82
 10302 03dd 0100     		.2byte	0x1
 10303 03df 54       		.byte	0x54
 10304 03e0 00000000 		.4byte	0
 10305 03e4 00000000 		.4byte	0
 10306              	.LLST26:
 10307 03e8 00000000 		.4byte	.LVL83
 10308 03ec 07000000 		.4byte	.LVL84-1
 10309 03f0 0100     		.2byte	0x1
 10310 03f2 50       		.byte	0x50
 10311 03f3 07000000 		.4byte	.LVL84-1
 10312 03f7 10000000 		.4byte	.LVL85
 10313 03fb 0100     		.2byte	0x1
 10314 03fd 54       		.byte	0x54
 10315 03fe 00000000 		.4byte	0
 10316 0402 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 281


 10317              	.LLST27:
 10318 0406 10000000 		.4byte	.LVL85
 10319 040a 12000000 		.4byte	.LVL86
 10320 040e 0100     		.2byte	0x1
 10321 0410 54       		.byte	0x54
 10322 0411 00000000 		.4byte	0
 10323 0415 00000000 		.4byte	0
 10324              	.LLST28:
 10325 0419 12000000 		.4byte	.LVL86
 10326 041d 1A000000 		.4byte	.LVL88
 10327 0421 0100     		.2byte	0x1
 10328 0423 54       		.byte	0x54
 10329 0424 1A000000 		.4byte	.LVL88
 10330 0428 20000000 		.4byte	.LFE717
 10331 042c 0100     		.2byte	0x1
 10332 042e 50       		.byte	0x50
 10333 042f 00000000 		.4byte	0
 10334 0433 00000000 		.4byte	0
 10335              	.LLST29:
 10336 0437 00000000 		.4byte	.LVL89
 10337 043b 07000000 		.4byte	.LVL90-1
 10338 043f 0100     		.2byte	0x1
 10339 0441 50       		.byte	0x50
 10340 0442 07000000 		.4byte	.LVL90-1
 10341 0446 24000000 		.4byte	.LVL91
 10342 044a 0100     		.2byte	0x1
 10343 044c 54       		.byte	0x54
 10344 044d 00000000 		.4byte	0
 10345 0451 00000000 		.4byte	0
 10346              	.LLST30:
 10347 0455 24000000 		.4byte	.LVL91
 10348 0459 2C000000 		.4byte	.LVL94
 10349 045d 0100     		.2byte	0x1
 10350 045f 54       		.byte	0x54
 10351 0460 00000000 		.4byte	0
 10352 0464 00000000 		.4byte	0
 10353              	.LLST31:
 10354 0468 26000000 		.4byte	.LVL92
 10355 046c 2A000000 		.4byte	.LVL93
 10356 0470 0100     		.2byte	0x1
 10357 0472 53       		.byte	0x53
 10358 0473 00000000 		.4byte	0
 10359 0477 00000000 		.4byte	0
 10360              	.LLST32:
 10361 047b 00000000 		.4byte	.LVL95
 10362 047f 17000000 		.4byte	.LVL97-1
 10363 0483 0100     		.2byte	0x1
 10364 0485 50       		.byte	0x50
 10365 0486 17000000 		.4byte	.LVL97-1
 10366 048a 20000000 		.4byte	.LVL98
 10367 048e 0100     		.2byte	0x1
 10368 0490 54       		.byte	0x54
 10369 0491 00000000 		.4byte	0
 10370 0495 00000000 		.4byte	0
 10371              	.LLST33:
 10372 0499 00000000 		.4byte	.LVL95
 10373 049d 14000000 		.4byte	.LVL96
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 282


 10374 04a1 0100     		.2byte	0x1
 10375 04a3 51       		.byte	0x51
 10376 04a4 14000000 		.4byte	.LVL96
 10377 04a8 66000000 		.4byte	.LVL101
 10378 04ac 0100     		.2byte	0x1
 10379 04ae 55       		.byte	0x55
 10380 04af 66000000 		.4byte	.LVL101
 10381 04b3 87000000 		.4byte	.LVL103-1
 10382 04b7 0200     		.2byte	0x2
 10383 04b9 74       		.byte	0x74
 10384 04ba 2C       		.sleb128 44
 10385 04bb 00000000 		.4byte	0
 10386 04bf 00000000 		.4byte	0
 10387              	.LLST34:
 10388 04c3 20000000 		.4byte	.LVL98
 10389 04c7 C2000000 		.4byte	.LVL107
 10390 04cb 0100     		.2byte	0x1
 10391 04cd 54       		.byte	0x54
 10392 04ce 00000000 		.4byte	0
 10393 04d2 00000000 		.4byte	0
 10394              	.LLST35:
 10395 04d6 22000000 		.4byte	.LVL99
 10396 04da 6E000000 		.4byte	.LVL102
 10397 04de 0100     		.2byte	0x1
 10398 04e0 53       		.byte	0x53
 10399 04e1 00000000 		.4byte	0
 10400 04e5 00000000 		.4byte	0
 10401              	.LLST36:
 10402 04e9 5A000000 		.4byte	.LVL100
 10403 04ed 6E000000 		.4byte	.LVL102
 10404 04f1 0100     		.2byte	0x1
 10405 04f3 53       		.byte	0x53
 10406 04f4 00000000 		.4byte	0
 10407 04f8 00000000 		.4byte	0
 10408              	.LLST37:
 10409 04fc 00000000 		.4byte	.LVL95
 10410 0500 5A000000 		.4byte	.LVL100
 10411 0504 0200     		.2byte	0x2
 10412 0506 30       		.byte	0x30
 10413 0507 9F       		.byte	0x9f
 10414 0508 5A000000 		.4byte	.LVL100
 10415 050c BC000000 		.4byte	.LVL105
 10416 0510 0100     		.2byte	0x1
 10417 0512 56       		.byte	0x56
 10418 0513 00000000 		.4byte	0
 10419 0517 00000000 		.4byte	0
 10420              	.LLST38:
 10421 051b 00000000 		.4byte	.LVL108
 10422 051f 19000000 		.4byte	.LVL109-1
 10423 0523 0100     		.2byte	0x1
 10424 0525 50       		.byte	0x50
 10425 0526 19000000 		.4byte	.LVL109-1
 10426 052a 72000000 		.4byte	.LVL114
 10427 052e 0100     		.2byte	0x1
 10428 0530 54       		.byte	0x54
 10429 0531 72000000 		.4byte	.LVL114
 10430 0535 7C000000 		.4byte	.LFE722
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 283


 10431 0539 0400     		.2byte	0x4
 10432 053b F3       		.byte	0xf3
 10433 053c 01       		.uleb128 0x1
 10434 053d 50       		.byte	0x50
 10435 053e 9F       		.byte	0x9f
 10436 053f 00000000 		.4byte	0
 10437 0543 00000000 		.4byte	0
 10438              	.LLST39:
 10439 0547 00000000 		.4byte	.LVL108
 10440 054b 19000000 		.4byte	.LVL109-1
 10441 054f 0100     		.2byte	0x1
 10442 0551 50       		.byte	0x50
 10443 0552 19000000 		.4byte	.LVL109-1
 10444 0556 72000000 		.4byte	.LVL114
 10445 055a 0100     		.2byte	0x1
 10446 055c 54       		.byte	0x54
 10447 055d 72000000 		.4byte	.LVL114
 10448 0561 7C000000 		.4byte	.LFE722
 10449 0565 0400     		.2byte	0x4
 10450 0567 F3       		.byte	0xf3
 10451 0568 01       		.uleb128 0x1
 10452 0569 50       		.byte	0x50
 10453 056a 9F       		.byte	0x9f
 10454 056b 00000000 		.4byte	0
 10455 056f 00000000 		.4byte	0
 10456              	.LLST40:
 10457 0573 00000000 		.4byte	.LVL115
 10458 0577 0D000000 		.4byte	.LVL116-1
 10459 057b 0100     		.2byte	0x1
 10460 057d 50       		.byte	0x50
 10461 057e 0D000000 		.4byte	.LVL116-1
 10462 0582 8A000000 		.4byte	.LVL125
 10463 0586 0100     		.2byte	0x1
 10464 0588 54       		.byte	0x54
 10465 0589 8A000000 		.4byte	.LVL125
 10466 058d 98000000 		.4byte	.LFE723
 10467 0591 0400     		.2byte	0x4
 10468 0593 F3       		.byte	0xf3
 10469 0594 01       		.uleb128 0x1
 10470 0595 50       		.byte	0x50
 10471 0596 9F       		.byte	0x9f
 10472 0597 00000000 		.4byte	0
 10473 059b 00000000 		.4byte	0
 10474              	.LLST41:
 10475 059f 00000000 		.4byte	.LVL115
 10476 05a3 46000000 		.4byte	.LVL118
 10477 05a7 0200     		.2byte	0x2
 10478 05a9 30       		.byte	0x30
 10479 05aa 9F       		.byte	0x9f
 10480 05ab 46000000 		.4byte	.LVL118
 10481 05af 72000000 		.4byte	.LVL121
 10482 05b3 0100     		.2byte	0x1
 10483 05b5 55       		.byte	0x55
 10484 05b6 72000000 		.4byte	.LVL121
 10485 05ba 82000000 		.4byte	.LVL123
 10486 05be 0200     		.2byte	0x2
 10487 05c0 30       		.byte	0x30
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 284


 10488 05c1 9F       		.byte	0x9f
 10489 05c2 82000000 		.4byte	.LVL123
 10490 05c6 8A000000 		.4byte	.LVL125
 10491 05ca 0100     		.2byte	0x1
 10492 05cc 55       		.byte	0x55
 10493 05cd 8A000000 		.4byte	.LVL125
 10494 05d1 98000000 		.4byte	.LFE723
 10495 05d5 0100     		.2byte	0x1
 10496 05d7 50       		.byte	0x50
 10497 05d8 00000000 		.4byte	0
 10498 05dc 00000000 		.4byte	0
 10499              	.LLST42:
 10500 05e0 00000000 		.4byte	.LVL115
 10501 05e4 0D000000 		.4byte	.LVL116-1
 10502 05e8 0100     		.2byte	0x1
 10503 05ea 50       		.byte	0x50
 10504 05eb 0D000000 		.4byte	.LVL116-1
 10505 05ef 8A000000 		.4byte	.LVL125
 10506 05f3 0100     		.2byte	0x1
 10507 05f5 54       		.byte	0x54
 10508 05f6 8A000000 		.4byte	.LVL125
 10509 05fa 98000000 		.4byte	.LFE723
 10510 05fe 0400     		.2byte	0x4
 10511 0600 F3       		.byte	0xf3
 10512 0601 01       		.uleb128 0x1
 10513 0602 50       		.byte	0x50
 10514 0603 9F       		.byte	0x9f
 10515 0604 00000000 		.4byte	0
 10516 0608 00000000 		.4byte	0
 10517              	.LLST43:
 10518 060c 82000000 		.4byte	.LVL123
 10519 0610 86000000 		.4byte	.LVL124
 10520 0614 0100     		.2byte	0x1
 10521 0616 57       		.byte	0x57
 10522 0617 00000000 		.4byte	0
 10523 061b 00000000 		.4byte	0
 10524              	.LLST44:
 10525 061f 16000000 		.4byte	.LVL126
 10526 0623 1D000000 		.4byte	.LVL127-1
 10527 0627 0100     		.2byte	0x1
 10528 0629 50       		.byte	0x50
 10529 062a 1E000000 		.4byte	.LVL127
 10530 062e 3B000000 		.4byte	.LVL128-1
 10531 0632 0100     		.2byte	0x1
 10532 0634 50       		.byte	0x50
 10533 0635 3E000000 		.4byte	.LVL129
 10534 0639 48000000 		.4byte	.LVL130
 10535 063d 0100     		.2byte	0x1
 10536 063f 50       		.byte	0x50
 10537 0640 00000000 		.4byte	0
 10538 0644 00000000 		.4byte	0
 10539              	.LLST45:
 10540 0648 00000000 		.4byte	.LVL135
 10541 064c 0A000000 		.4byte	.LVL136
 10542 0650 0100     		.2byte	0x1
 10543 0652 50       		.byte	0x50
 10544 0653 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 285


 10545 0657 00000000 		.4byte	0
 10546              	.LLST46:
 10547 065b 4E000000 		.4byte	.LVL143
 10548 065f 52000000 		.4byte	.LVL145
 10549 0663 0100     		.2byte	0x1
 10550 0665 55       		.byte	0x55
 10551 0666 76000000 		.4byte	.LVL147
 10552 066a CC000000 		.4byte	.LVL152
 10553 066e 0100     		.2byte	0x1
 10554 0670 55       		.byte	0x55
 10555 0671 00000000 		.4byte	0
 10556 0675 00000000 		.4byte	0
 10557              	.LLST47:
 10558 0679 78000000 		.4byte	.LVL148
 10559 067d 8B000000 		.4byte	.LVL149-1
 10560 0681 0100     		.2byte	0x1
 10561 0683 53       		.byte	0x53
 10562 0684 00000000 		.4byte	0
 10563 0688 00000000 		.4byte	0
 10564              	.LLST48:
 10565 068c 04000000 		.4byte	.LVL137
 10566 0690 4E000000 		.4byte	.LVL143
 10567 0694 0200     		.2byte	0x2
 10568 0696 30       		.byte	0x30
 10569 0697 9F       		.byte	0x9f
 10570 0698 4E000000 		.4byte	.LVL143
 10571 069c 50000000 		.4byte	.LVL144
 10572 06a0 0100     		.2byte	0x1
 10573 06a2 56       		.byte	0x56
 10574 06a3 52000000 		.4byte	.LVL145
 10575 06a7 54000000 		.4byte	.LVL146
 10576 06ab 0200     		.2byte	0x2
 10577 06ad 30       		.byte	0x30
 10578 06ae 9F       		.byte	0x9f
 10579 06af 54000000 		.4byte	.LVL146
 10580 06b3 CC000000 		.4byte	.LVL152
 10581 06b7 0100     		.2byte	0x1
 10582 06b9 56       		.byte	0x56
 10583 06ba CC000000 		.4byte	.LVL152
 10584 06be DA000000 		.4byte	.LVL153
 10585 06c2 0200     		.2byte	0x2
 10586 06c4 30       		.byte	0x30
 10587 06c5 9F       		.byte	0x9f
 10588 06c6 DA000000 		.4byte	.LVL153
 10589 06ca EA000000 		.4byte	.LVL155
 10590 06ce 0100     		.2byte	0x1
 10591 06d0 56       		.byte	0x56
 10592 06d1 EA000000 		.4byte	.LVL155
 10593 06d5 F0000000 		.4byte	.LFE732
 10594 06d9 0100     		.2byte	0x1
 10595 06db 50       		.byte	0x50
 10596 06dc 00000000 		.4byte	0
 10597 06e0 00000000 		.4byte	0
 10598              	.LLST49:
 10599 06e4 16000000 		.4byte	.LVL138
 10600 06e8 CC000000 		.4byte	.LVL152
 10601 06ec 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 286


 10602 06ee 54       		.byte	0x54
 10603 06ef 00000000 		.4byte	0
 10604 06f3 00000000 		.4byte	0
 10605              	.LLST50:
 10606 06f7 2A000000 		.4byte	.LVL139
 10607 06fb 38000000 		.4byte	.LVL140
 10608 06ff 0100     		.2byte	0x1
 10609 0701 52       		.byte	0x52
 10610 0702 38000000 		.4byte	.LVL140
 10611 0706 3E000000 		.4byte	.LVL141
 10612 070a 0500     		.2byte	0x5
 10613 070c 03       		.byte	0x3
 10614 070d FC010000 		.4byte	pxOverflowDelayedTaskList
 10615 0711 00000000 		.4byte	0
 10616 0715 00000000 		.4byte	0
 10617              	.LLST51:
 10618 0719 00000000 		.4byte	.LVL156
 10619 071d 32000000 		.4byte	.LVL158
 10620 0721 0200     		.2byte	0x2
 10621 0723 30       		.byte	0x30
 10622 0724 9F       		.byte	0x9f
 10623 0725 32000000 		.4byte	.LVL158
 10624 0729 7E000000 		.4byte	.LVL163
 10625 072d 0100     		.2byte	0x1
 10626 072f 54       		.byte	0x54
 10627 0730 7E000000 		.4byte	.LVL163
 10628 0734 80000000 		.4byte	.LVL164
 10629 0738 0200     		.2byte	0x2
 10630 073a 30       		.byte	0x30
 10631 073b 9F       		.byte	0x9f
 10632 073c 80000000 		.4byte	.LVL164
 10633 0740 94000000 		.4byte	.LVL166
 10634 0744 0100     		.2byte	0x1
 10635 0746 54       		.byte	0x54
 10636 0747 CC000000 		.4byte	.LVL172
 10637 074b D0000000 		.4byte	.LVL173
 10638 074f 0200     		.2byte	0x2
 10639 0751 30       		.byte	0x30
 10640 0752 9F       		.byte	0x9f
 10641 0753 00000000 		.4byte	0
 10642 0757 00000000 		.4byte	0
 10643              	.LLST52:
 10644 075b 00000000 		.4byte	.LVL156
 10645 075f B8000000 		.4byte	.LVL170
 10646 0763 0200     		.2byte	0x2
 10647 0765 30       		.byte	0x30
 10648 0766 9F       		.byte	0x9f
 10649 0767 B8000000 		.4byte	.LVL170
 10650 076b CC000000 		.4byte	.LVL172
 10651 076f 0200     		.2byte	0x2
 10652 0771 31       		.byte	0x31
 10653 0772 9F       		.byte	0x9f
 10654 0773 CC000000 		.4byte	.LVL172
 10655 0777 D2000000 		.4byte	.LVL174
 10656 077b 0200     		.2byte	0x2
 10657 077d 30       		.byte	0x30
 10658 077e 9F       		.byte	0x9f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 287


 10659 077f D2000000 		.4byte	.LVL174
 10660 0783 DA000000 		.4byte	.LVL176
 10661 0787 0100     		.2byte	0x1
 10662 0789 54       		.byte	0x54
 10663 078a DA000000 		.4byte	.LVL176
 10664 078e E4000000 		.4byte	.LFE727
 10665 0792 0100     		.2byte	0x1
 10666 0794 50       		.byte	0x50
 10667 0795 00000000 		.4byte	0
 10668 0799 00000000 		.4byte	0
 10669              	.LLST53:
 10670 079d 94000000 		.4byte	.LVL166
 10671 07a1 A4000000 		.4byte	.LVL168
 10672 07a5 0100     		.2byte	0x1
 10673 07a7 54       		.byte	0x54
 10674 07a8 A4000000 		.4byte	.LVL168
 10675 07ac A6000000 		.4byte	.LVL169
 10676 07b0 0300     		.2byte	0x3
 10677 07b2 74       		.byte	0x74
 10678 07b3 7F       		.sleb128 -1
 10679 07b4 9F       		.byte	0x9f
 10680 07b5 A6000000 		.4byte	.LVL169
 10681 07b9 CA000000 		.4byte	.LVL171
 10682 07bd 0100     		.2byte	0x1
 10683 07bf 54       		.byte	0x54
 10684 07c0 D0000000 		.4byte	.LVL173
 10685 07c4 D2000000 		.4byte	.LVL174
 10686 07c8 0100     		.2byte	0x1
 10687 07ca 54       		.byte	0x54
 10688 07cb 00000000 		.4byte	0
 10689 07cf 00000000 		.4byte	0
 10690              	.LLST54:
 10691 07d3 00000000 		.4byte	.LVL177
 10692 07d7 21000000 		.4byte	.LVL178-1
 10693 07db 0100     		.2byte	0x1
 10694 07dd 50       		.byte	0x50
 10695 07de 21000000 		.4byte	.LVL178-1
 10696 07e2 7A000000 		.4byte	.LVL185
 10697 07e6 0100     		.2byte	0x1
 10698 07e8 55       		.byte	0x55
 10699 07e9 7A000000 		.4byte	.LVL185
 10700 07ed 84000000 		.4byte	.LFE715
 10701 07f1 0400     		.2byte	0x4
 10702 07f3 F3       		.byte	0xf3
 10703 07f4 01       		.uleb128 0x1
 10704 07f5 50       		.byte	0x50
 10705 07f6 9F       		.byte	0x9f
 10706 07f7 00000000 		.4byte	0
 10707 07fb 00000000 		.4byte	0
 10708              	.LLST55:
 10709 07ff 00000000 		.4byte	.LVL177
 10710 0803 21000000 		.4byte	.LVL178-1
 10711 0807 0100     		.2byte	0x1
 10712 0809 51       		.byte	0x51
 10713 080a 21000000 		.4byte	.LVL178-1
 10714 080e 7A000000 		.4byte	.LVL185
 10715 0812 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 288


 10716 0814 54       		.byte	0x54
 10717 0815 7A000000 		.4byte	.LVL185
 10718 0819 84000000 		.4byte	.LFE715
 10719 081d 0400     		.2byte	0x4
 10720 081f F3       		.byte	0xf3
 10721 0820 01       		.uleb128 0x1
 10722 0821 51       		.byte	0x51
 10723 0822 9F       		.byte	0x9f
 10724 0823 00000000 		.4byte	0
 10725 0827 00000000 		.4byte	0
 10726              	.LLST56:
 10727 082b 2C000000 		.4byte	.LVL180
 10728 082f 61000000 		.4byte	.LVL183-1
 10729 0833 0100     		.2byte	0x1
 10730 0835 53       		.byte	0x53
 10731 0836 00000000 		.4byte	0
 10732 083a 00000000 		.4byte	0
 10733              	.LLST57:
 10734 083e 00000000 		.4byte	.LVL177
 10735 0842 56000000 		.4byte	.LVL181
 10736 0846 0200     		.2byte	0x2
 10737 0848 30       		.byte	0x30
 10738 0849 9F       		.byte	0x9f
 10739 084a 56000000 		.4byte	.LVL181
 10740 084e 61000000 		.4byte	.LVL183-1
 10741 0852 0100     		.2byte	0x1
 10742 0854 52       		.byte	0x52
 10743 0855 00000000 		.4byte	0
 10744 0859 00000000 		.4byte	0
 10745              	.LLST58:
 10746 085d 28000000 		.4byte	.LVL179
 10747 0861 5E000000 		.4byte	.LVL182
 10748 0865 0100     		.2byte	0x1
 10749 0867 50       		.byte	0x50
 10750 0868 00000000 		.4byte	0
 10751 086c 00000000 		.4byte	0
 10752              	.LLST59:
 10753 0870 00000000 		.4byte	.LVL186
 10754 0874 15000000 		.4byte	.LVL188-1
 10755 0878 0100     		.2byte	0x1
 10756 087a 50       		.byte	0x50
 10757 087b 15000000 		.4byte	.LVL188-1
 10758 087f 24000000 		.4byte	.LVL191
 10759 0883 0100     		.2byte	0x1
 10760 0885 54       		.byte	0x54
 10761 0886 24000000 		.4byte	.LVL191
 10762 088a 26000000 		.4byte	.LVL192
 10763 088e 0100     		.2byte	0x1
 10764 0890 50       		.byte	0x50
 10765 0891 26000000 		.4byte	.LVL192
 10766 0895 44000000 		.4byte	.LFE716
 10767 0899 0400     		.2byte	0x4
 10768 089b F3       		.byte	0xf3
 10769 089c 01       		.uleb128 0x1
 10770 089d 50       		.byte	0x50
 10771 089e 9F       		.byte	0x9f
 10772 089f 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 289


 10773 08a3 00000000 		.4byte	0
 10774              	.LLST60:
 10775 08a7 02000000 		.4byte	.LVL187
 10776 08ab 22000000 		.4byte	.LVL190
 10777 08af 0200     		.2byte	0x2
 10778 08b1 30       		.byte	0x30
 10779 08b2 9F       		.byte	0x9f
 10780 08b3 22000000 		.4byte	.LVL190
 10781 08b7 24000000 		.4byte	.LVL191
 10782 08bb 0100     		.2byte	0x1
 10783 08bd 50       		.byte	0x50
 10784 08be 24000000 		.4byte	.LVL191
 10785 08c2 26000000 		.4byte	.LVL192
 10786 08c6 0200     		.2byte	0x2
 10787 08c8 30       		.byte	0x30
 10788 08c9 9F       		.byte	0x9f
 10789 08ca 26000000 		.4byte	.LVL192
 10790 08ce 44000000 		.4byte	.LFE716
 10791 08d2 0100     		.2byte	0x1
 10792 08d4 50       		.byte	0x50
 10793 08d5 00000000 		.4byte	0
 10794 08d9 00000000 		.4byte	0
 10795              	.LLST61:
 10796 08dd 0E000000 		.4byte	.LVL194
 10797 08e1 1A000000 		.4byte	.LVL197
 10798 08e5 0800     		.2byte	0x8
 10799 08e7 74       		.byte	0x74
 10800 08e8 00       		.sleb128 0
 10801 08e9 30       		.byte	0x30
 10802 08ea 29       		.byte	0x29
 10803 08eb 08       		.byte	0x8
 10804 08ec FF       		.byte	0xff
 10805 08ed 1A       		.byte	0x1a
 10806 08ee 9F       		.byte	0x9f
 10807 08ef 00000000 		.4byte	0
 10808 08f3 00000000 		.4byte	0
 10809              	.LLST62:
 10810 08f7 20000000 		.4byte	.LVL198
 10811 08fb 44000000 		.4byte	.LVL201
 10812 08ff 0100     		.2byte	0x1
 10813 0901 55       		.byte	0x55
 10814 0902 00000000 		.4byte	0
 10815 0906 00000000 		.4byte	0
 10816              	.LLST63:
 10817 090a 00000000 		.4byte	.LVL202
 10818 090e 02000000 		.4byte	.LVL203
 10819 0912 0100     		.2byte	0x1
 10820 0914 50       		.byte	0x50
 10821 0915 02000000 		.4byte	.LVL203
 10822 0919 2C000000 		.4byte	.LFE742
 10823 091d 0400     		.2byte	0x4
 10824 091f F3       		.byte	0xf3
 10825 0920 01       		.uleb128 0x1
 10826 0921 50       		.byte	0x50
 10827 0922 9F       		.byte	0x9f
 10828 0923 00000000 		.4byte	0
 10829 0927 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 290


 10830              	.LLST64:
 10831 092b 22000000 		.4byte	.LVL206
 10832 092f 3C000000 		.4byte	.LVL207
 10833 0933 0100     		.2byte	0x1
 10834 0935 53       		.byte	0x53
 10835 0936 00000000 		.4byte	0
 10836 093a 00000000 		.4byte	0
 10837              	.LLST65:
 10838 093e 00000000 		.4byte	.LVL212
 10839 0942 07000000 		.4byte	.LVL213-1
 10840 0946 0100     		.2byte	0x1
 10841 0948 50       		.byte	0x50
 10842 0949 07000000 		.4byte	.LVL213-1
 10843 094d 10000000 		.4byte	.LVL214
 10844 0951 0100     		.2byte	0x1
 10845 0953 54       		.byte	0x54
 10846 0954 00000000 		.4byte	0
 10847 0958 00000000 		.4byte	0
 10848              	.LLST66:
 10849 095c 10000000 		.4byte	.LVL214
 10850 0960 90000000 		.4byte	.LVL225
 10851 0964 0100     		.2byte	0x1
 10852 0966 54       		.byte	0x54
 10853 0967 00000000 		.4byte	0
 10854 096b 00000000 		.4byte	0
 10855              	.LLST67:
 10856 096f 00000000 		.4byte	.LVL226
 10857 0973 15000000 		.4byte	.LVL228-1
 10858 0977 0100     		.2byte	0x1
 10859 0979 50       		.byte	0x50
 10860 097a 15000000 		.4byte	.LVL228-1
 10861 097e 24000000 		.4byte	.LFE734
 10862 0982 0400     		.2byte	0x4
 10863 0984 F3       		.byte	0xf3
 10864 0985 01       		.uleb128 0x1
 10865 0986 50       		.byte	0x50
 10866 0987 9F       		.byte	0x9f
 10867 0988 00000000 		.4byte	0
 10868 098c 00000000 		.4byte	0
 10869              	.LLST68:
 10870 0990 00000000 		.4byte	.LVL226
 10871 0994 10000000 		.4byte	.LVL227
 10872 0998 0100     		.2byte	0x1
 10873 099a 51       		.byte	0x51
 10874 099b 10000000 		.4byte	.LVL227
 10875 099f 20000000 		.4byte	.LVL230
 10876 09a3 0100     		.2byte	0x1
 10877 09a5 54       		.byte	0x54
 10878 09a6 20000000 		.4byte	.LVL230
 10879 09aa 24000000 		.4byte	.LFE734
 10880 09ae 0400     		.2byte	0x4
 10881 09b0 F3       		.byte	0xf3
 10882 09b1 01       		.uleb128 0x1
 10883 09b2 51       		.byte	0x51
 10884 09b3 9F       		.byte	0x9f
 10885 09b4 00000000 		.4byte	0
 10886 09b8 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 291


 10887              	.LLST69:
 10888 09bc 00000000 		.4byte	.LVL231
 10889 09c0 0A000000 		.4byte	.LVL232
 10890 09c4 0100     		.2byte	0x1
 10891 09c6 50       		.byte	0x50
 10892 09c7 0A000000 		.4byte	.LVL232
 10893 09cb 1C000000 		.4byte	.LVL233
 10894 09cf 0100     		.2byte	0x1
 10895 09d1 53       		.byte	0x53
 10896 09d2 1C000000 		.4byte	.LVL233
 10897 09d6 31000000 		.4byte	.LVL237-1
 10898 09da 0100     		.2byte	0x1
 10899 09dc 50       		.byte	0x50
 10900 09dd 31000000 		.4byte	.LVL237-1
 10901 09e1 40000000 		.4byte	.LFE735
 10902 09e5 0400     		.2byte	0x4
 10903 09e7 F3       		.byte	0xf3
 10904 09e8 01       		.uleb128 0x1
 10905 09e9 50       		.byte	0x50
 10906 09ea 9F       		.byte	0x9f
 10907 09eb 00000000 		.4byte	0
 10908 09ef 00000000 		.4byte	0
 10909              	.LLST70:
 10910 09f3 00000000 		.4byte	.LVL231
 10911 09f7 22000000 		.4byte	.LVL235
 10912 09fb 0100     		.2byte	0x1
 10913 09fd 51       		.byte	0x51
 10914 09fe 22000000 		.4byte	.LVL235
 10915 0a02 26000000 		.4byte	.LVL236
 10916 0a06 0100     		.2byte	0x1
 10917 0a08 53       		.byte	0x53
 10918 0a09 26000000 		.4byte	.LVL236
 10919 0a0d 40000000 		.4byte	.LFE735
 10920 0a11 0400     		.2byte	0x4
 10921 0a13 F3       		.byte	0xf3
 10922 0a14 01       		.uleb128 0x1
 10923 0a15 51       		.byte	0x51
 10924 0a16 9F       		.byte	0x9f
 10925 0a17 00000000 		.4byte	0
 10926 0a1b 00000000 		.4byte	0
 10927              	.LLST71:
 10928 0a1f 00000000 		.4byte	.LVL231
 10929 0a23 1E000000 		.4byte	.LVL234
 10930 0a27 0100     		.2byte	0x1
 10931 0a29 52       		.byte	0x52
 10932 0a2a 1E000000 		.4byte	.LVL234
 10933 0a2e 3C000000 		.4byte	.LVL239
 10934 0a32 0100     		.2byte	0x1
 10935 0a34 54       		.byte	0x54
 10936 0a35 3C000000 		.4byte	.LVL239
 10937 0a39 40000000 		.4byte	.LFE735
 10938 0a3d 0400     		.2byte	0x4
 10939 0a3f F3       		.byte	0xf3
 10940 0a40 01       		.uleb128 0x1
 10941 0a41 52       		.byte	0x52
 10942 0a42 9F       		.byte	0x9f
 10943 0a43 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 292


 10944 0a47 00000000 		.4byte	0
 10945              	.LLST72:
 10946 0a4b 00000000 		.4byte	.LVL240
 10947 0a4f 17000000 		.4byte	.LVL243-1
 10948 0a53 0100     		.2byte	0x1
 10949 0a55 50       		.byte	0x50
 10950 0a56 17000000 		.4byte	.LVL243-1
 10951 0a5a 2C000000 		.4byte	.LFE736
 10952 0a5e 0400     		.2byte	0x4
 10953 0a60 F3       		.byte	0xf3
 10954 0a61 01       		.uleb128 0x1
 10955 0a62 50       		.byte	0x50
 10956 0a63 9F       		.byte	0x9f
 10957 0a64 00000000 		.4byte	0
 10958 0a68 00000000 		.4byte	0
 10959              	.LLST73:
 10960 0a6c 00000000 		.4byte	.LVL240
 10961 0a70 12000000 		.4byte	.LVL242
 10962 0a74 0100     		.2byte	0x1
 10963 0a76 51       		.byte	0x51
 10964 0a77 12000000 		.4byte	.LVL242
 10965 0a7b 28000000 		.4byte	.LVL246
 10966 0a7f 0100     		.2byte	0x1
 10967 0a81 54       		.byte	0x54
 10968 0a82 00000000 		.4byte	0
 10969 0a86 00000000 		.4byte	0
 10970              	.LLST74:
 10971 0a8a 00000000 		.4byte	.LVL240
 10972 0a8e 0E000000 		.4byte	.LVL241
 10973 0a92 0100     		.2byte	0x1
 10974 0a94 52       		.byte	0x52
 10975 0a95 0E000000 		.4byte	.LVL241
 10976 0a99 28000000 		.4byte	.LVL246
 10977 0a9d 0100     		.2byte	0x1
 10978 0a9f 55       		.byte	0x55
 10979 0aa0 28000000 		.4byte	.LVL246
 10980 0aa4 2C000000 		.4byte	.LFE736
 10981 0aa8 0400     		.2byte	0x4
 10982 0aaa F3       		.byte	0xf3
 10983 0aab 01       		.uleb128 0x1
 10984 0aac 52       		.byte	0x52
 10985 0aad 9F       		.byte	0x9f
 10986 0aae 00000000 		.4byte	0
 10987 0ab2 00000000 		.4byte	0
 10988              	.LLST75:
 10989 0ab6 00000000 		.4byte	.LVL247
 10990 0aba 12000000 		.4byte	.LVL249
 10991 0abe 0100     		.2byte	0x1
 10992 0ac0 50       		.byte	0x50
 10993 0ac1 12000000 		.4byte	.LVL249
 10994 0ac5 7C000000 		.4byte	.LFE737
 10995 0ac9 0400     		.2byte	0x4
 10996 0acb F3       		.byte	0xf3
 10997 0acc 01       		.uleb128 0x1
 10998 0acd 50       		.byte	0x50
 10999 0ace 9F       		.byte	0x9f
 11000 0acf 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 293


 11001 0ad3 00000000 		.4byte	0
 11002              	.LLST76:
 11003 0ad7 06000000 		.4byte	.LVL248
 11004 0adb 6E000000 		.4byte	.LVL257
 11005 0adf 0100     		.2byte	0x1
 11006 0ae1 54       		.byte	0x54
 11007 0ae2 00000000 		.4byte	0
 11008 0ae6 00000000 		.4byte	0
 11009              	.LLST77:
 11010 0aea 60000000 		.4byte	.LVL254
 11011 0aee 6A000000 		.4byte	.LVL255
 11012 0af2 0200     		.2byte	0x2
 11013 0af4 31       		.byte	0x31
 11014 0af5 9F       		.byte	0x9f
 11015 0af6 6C000000 		.4byte	.LVL256
 11016 0afa 7C000000 		.4byte	.LFE737
 11017 0afe 0100     		.2byte	0x1
 11018 0b00 50       		.byte	0x50
 11019 0b01 00000000 		.4byte	0
 11020 0b05 00000000 		.4byte	0
 11021              	.LLST78:
 11022 0b09 00000000 		.4byte	.LVL258
 11023 0b0d 1F000000 		.4byte	.LVL260-1
 11024 0b11 0100     		.2byte	0x1
 11025 0b13 50       		.byte	0x50
 11026 0b14 1F000000 		.4byte	.LVL260-1
 11027 0b18 6C000000 		.4byte	.LFE738
 11028 0b1c 0400     		.2byte	0x4
 11029 0b1e F3       		.byte	0xf3
 11030 0b1f 01       		.uleb128 0x1
 11031 0b20 50       		.byte	0x50
 11032 0b21 9F       		.byte	0x9f
 11033 0b22 00000000 		.4byte	0
 11034 0b26 00000000 		.4byte	0
 11035              	.LLST79:
 11036 0b2a 00000000 		.4byte	.LVL258
 11037 0b2e 1F000000 		.4byte	.LVL260-1
 11038 0b32 0100     		.2byte	0x1
 11039 0b34 51       		.byte	0x51
 11040 0b35 1F000000 		.4byte	.LVL260-1
 11041 0b39 6C000000 		.4byte	.LFE738
 11042 0b3d 0400     		.2byte	0x4
 11043 0b3f F3       		.byte	0xf3
 11044 0b40 01       		.uleb128 0x1
 11045 0b41 51       		.byte	0x51
 11046 0b42 9F       		.byte	0x9f
 11047 0b43 00000000 		.4byte	0
 11048 0b47 00000000 		.4byte	0
 11049              	.LLST80:
 11050 0b4b 16000000 		.4byte	.LVL259
 11051 0b4f 66000000 		.4byte	.LVL266
 11052 0b53 0100     		.2byte	0x1
 11053 0b55 54       		.byte	0x54
 11054 0b56 00000000 		.4byte	0
 11055 0b5a 00000000 		.4byte	0
 11056              	.LLST81:
 11057 0b5e 5A000000 		.4byte	.LVL263
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 294


 11058 0b62 62000000 		.4byte	.LVL264
 11059 0b66 0200     		.2byte	0x2
 11060 0b68 31       		.byte	0x31
 11061 0b69 9F       		.byte	0x9f
 11062 0b6a 64000000 		.4byte	.LVL265
 11063 0b6e 6C000000 		.4byte	.LFE738
 11064 0b72 0100     		.2byte	0x1
 11065 0b74 50       		.byte	0x50
 11066 0b75 00000000 		.4byte	0
 11067 0b79 00000000 		.4byte	0
 11068              	.LLST82:
 11069 0b7d 00000000 		.4byte	.LVL268
 11070 0b81 15000000 		.4byte	.LVL269-1
 11071 0b85 0100     		.2byte	0x1
 11072 0b87 50       		.byte	0x50
 11073 0b88 15000000 		.4byte	.LVL269-1
 11074 0b8c 4A000000 		.4byte	.LVL272
 11075 0b90 0100     		.2byte	0x1
 11076 0b92 54       		.byte	0x54
 11077 0b93 4A000000 		.4byte	.LVL272
 11078 0b97 4C000000 		.4byte	.LVL273
 11079 0b9b 0400     		.2byte	0x4
 11080 0b9d F3       		.byte	0xf3
 11081 0b9e 01       		.uleb128 0x1
 11082 0b9f 50       		.byte	0x50
 11083 0ba0 9F       		.byte	0x9f
 11084 0ba1 4C000000 		.4byte	.LVL273
 11085 0ba5 4E000000 		.4byte	.LVL274
 11086 0ba9 0100     		.2byte	0x1
 11087 0bab 54       		.byte	0x54
 11088 0bac 4E000000 		.4byte	.LVL274
 11089 0bb0 50000000 		.4byte	.LVL275
 11090 0bb4 0400     		.2byte	0x4
 11091 0bb6 F3       		.byte	0xf3
 11092 0bb7 01       		.uleb128 0x1
 11093 0bb8 50       		.byte	0x50
 11094 0bb9 9F       		.byte	0x9f
 11095 0bba 50000000 		.4byte	.LVL275
 11096 0bbe 52000000 		.4byte	.LVL276
 11097 0bc2 0100     		.2byte	0x1
 11098 0bc4 54       		.byte	0x54
 11099 0bc5 52000000 		.4byte	.LVL276
 11100 0bc9 54000000 		.4byte	.LVL277
 11101 0bcd 0400     		.2byte	0x4
 11102 0bcf F3       		.byte	0xf3
 11103 0bd0 01       		.uleb128 0x1
 11104 0bd1 50       		.byte	0x50
 11105 0bd2 9F       		.byte	0x9f
 11106 0bd3 54000000 		.4byte	.LVL277
 11107 0bd7 56000000 		.4byte	.LVL278
 11108 0bdb 0100     		.2byte	0x1
 11109 0bdd 54       		.byte	0x54
 11110 0bde 56000000 		.4byte	.LVL278
 11111 0be2 64000000 		.4byte	.LFE740
 11112 0be6 0400     		.2byte	0x4
 11113 0be8 F3       		.byte	0xf3
 11114 0be9 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 295


 11115 0bea 50       		.byte	0x50
 11116 0beb 9F       		.byte	0x9f
 11117 0bec 00000000 		.4byte	0
 11118 0bf0 00000000 		.4byte	0
 11119              	.LLST83:
 11120 0bf4 00000000 		.4byte	.LVL268
 11121 0bf8 15000000 		.4byte	.LVL269-1
 11122 0bfc 0100     		.2byte	0x1
 11123 0bfe 51       		.byte	0x51
 11124 0bff 15000000 		.4byte	.LVL269-1
 11125 0c03 5E000000 		.4byte	.LVL280
 11126 0c07 0100     		.2byte	0x1
 11127 0c09 55       		.byte	0x55
 11128 0c0a 5E000000 		.4byte	.LVL280
 11129 0c0e 64000000 		.4byte	.LFE740
 11130 0c12 0400     		.2byte	0x4
 11131 0c14 F3       		.byte	0xf3
 11132 0c15 01       		.uleb128 0x1
 11133 0c16 51       		.byte	0x51
 11134 0c17 9F       		.byte	0x9f
 11135 0c18 00000000 		.4byte	0
 11136 0c1c 00000000 		.4byte	0
 11137              	.LLST84:
 11138 0c20 48000000 		.4byte	.LVL271
 11139 0c24 4C000000 		.4byte	.LVL273
 11140 0c28 0200     		.2byte	0x2
 11141 0c2a 30       		.byte	0x30
 11142 0c2b 9F       		.byte	0x9f
 11143 0c2c 56000000 		.4byte	.LVL278
 11144 0c30 5E000000 		.4byte	.LVL280
 11145 0c34 0100     		.2byte	0x1
 11146 0c36 54       		.byte	0x54
 11147 0c37 5E000000 		.4byte	.LVL280
 11148 0c3b 64000000 		.4byte	.LFE740
 11149 0c3f 0100     		.2byte	0x1
 11150 0c41 50       		.byte	0x50
 11151 0c42 00000000 		.4byte	0
 11152 0c46 00000000 		.4byte	0
 11153              	.LLST85:
 11154 0c4a 1C000000 		.4byte	.LVL270
 11155 0c4e 47000000 		.4byte	.LVL271-1
 11156 0c52 0100     		.2byte	0x1
 11157 0c54 51       		.byte	0x51
 11158 0c55 4C000000 		.4byte	.LVL273
 11159 0c59 56000000 		.4byte	.LVL278
 11160 0c5d 0100     		.2byte	0x1
 11161 0c5f 51       		.byte	0x51
 11162 0c60 00000000 		.4byte	0
 11163 0c64 00000000 		.4byte	0
 11164              	.LLST86:
 11165 0c68 00000000 		.4byte	.LVL281
 11166 0c6c 0C000000 		.4byte	.LVL282
 11167 0c70 0100     		.2byte	0x1
 11168 0c72 50       		.byte	0x50
 11169 0c73 00000000 		.4byte	0
 11170 0c77 00000000 		.4byte	0
 11171              	.LLST87:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 296


 11172 0c7b 00000000 		.4byte	.LVL281
 11173 0c7f 0E000000 		.4byte	.LVL283
 11174 0c83 0100     		.2byte	0x1
 11175 0c85 51       		.byte	0x51
 11176 0c86 0E000000 		.4byte	.LVL283
 11177 0c8a 12000000 		.4byte	.LVL284
 11178 0c8e 0300     		.2byte	0x3
 11179 0c90 71       		.byte	0x71
 11180 0c91 70       		.sleb128 -16
 11181 0c92 9F       		.byte	0x9f
 11182 0c93 12000000 		.4byte	.LVL284
 11183 0c97 1C000000 		.4byte	.LFE743
 11184 0c9b 0400     		.2byte	0x4
 11185 0c9d F3       		.byte	0xf3
 11186 0c9e 01       		.uleb128 0x1
 11187 0c9f 51       		.byte	0x51
 11188 0ca0 9F       		.byte	0x9f
 11189 0ca1 00000000 		.4byte	0
 11190 0ca5 00000000 		.4byte	0
 11191              	.LLST88:
 11192 0ca9 0C000000 		.4byte	.LVL282
 11193 0cad 14000000 		.4byte	.LVL285
 11194 0cb1 0100     		.2byte	0x1
 11195 0cb3 50       		.byte	0x50
 11196 0cb4 00000000 		.4byte	0
 11197 0cb8 00000000 		.4byte	0
 11198              	.LLST89:
 11199 0cbc 00000000 		.4byte	.LVL286
 11200 0cc0 0C000000 		.4byte	.LVL287
 11201 0cc4 0100     		.2byte	0x1
 11202 0cc6 50       		.byte	0x50
 11203 0cc7 16000000 		.4byte	.LVL291
 11204 0ccb 18000000 		.4byte	.LVL292
 11205 0ccf 0100     		.2byte	0x1
 11206 0cd1 50       		.byte	0x50
 11207 0cd2 18000000 		.4byte	.LVL292
 11208 0cd6 20000000 		.4byte	.LFE744
 11209 0cda 0400     		.2byte	0x4
 11210 0cdc F3       		.byte	0xf3
 11211 0cdd 01       		.uleb128 0x1
 11212 0cde 50       		.byte	0x50
 11213 0cdf 9F       		.byte	0x9f
 11214 0ce0 00000000 		.4byte	0
 11215 0ce4 00000000 		.4byte	0
 11216              	.LLST90:
 11217 0ce8 00000000 		.4byte	.LVL286
 11218 0cec 0E000000 		.4byte	.LVL288
 11219 0cf0 0100     		.2byte	0x1
 11220 0cf2 51       		.byte	0x51
 11221 0cf3 0E000000 		.4byte	.LVL288
 11222 0cf7 16000000 		.4byte	.LVL291
 11223 0cfb 0300     		.2byte	0x3
 11224 0cfd 71       		.byte	0x71
 11225 0cfe 70       		.sleb128 -16
 11226 0cff 9F       		.byte	0x9f
 11227 0d00 16000000 		.4byte	.LVL291
 11228 0d04 20000000 		.4byte	.LFE744
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 297


 11229 0d08 0100     		.2byte	0x1
 11230 0d0a 51       		.byte	0x51
 11231 0d0b 00000000 		.4byte	0
 11232 0d0f 00000000 		.4byte	0
 11233              	.LLST91:
 11234 0d13 00000000 		.4byte	.LVL286
 11235 0d17 14000000 		.4byte	.LVL290
 11236 0d1b 0200     		.2byte	0x2
 11237 0d1d 30       		.byte	0x30
 11238 0d1e 9F       		.byte	0x9f
 11239 0d1f 14000000 		.4byte	.LVL290
 11240 0d23 16000000 		.4byte	.LVL291
 11241 0d27 0100     		.2byte	0x1
 11242 0d29 50       		.byte	0x50
 11243 0d2a 16000000 		.4byte	.LVL291
 11244 0d2e 18000000 		.4byte	.LVL292
 11245 0d32 0200     		.2byte	0x2
 11246 0d34 30       		.byte	0x30
 11247 0d35 9F       		.byte	0x9f
 11248 0d36 18000000 		.4byte	.LVL292
 11249 0d3a 20000000 		.4byte	.LFE744
 11250 0d3e 0100     		.2byte	0x1
 11251 0d40 50       		.byte	0x50
 11252 0d41 00000000 		.4byte	0
 11253 0d45 00000000 		.4byte	0
 11254              	.LLST92:
 11255 0d49 0C000000 		.4byte	.LVL287
 11256 0d4d 12000000 		.4byte	.LVL289
 11257 0d51 0100     		.2byte	0x1
 11258 0d53 50       		.byte	0x50
 11259 0d54 00000000 		.4byte	0
 11260 0d58 00000000 		.4byte	0
 11261              	.LLST93:
 11262 0d5c 00000000 		.4byte	.LVL296
 11263 0d60 09000000 		.4byte	.LVL297-1
 11264 0d64 0100     		.2byte	0x1
 11265 0d66 50       		.byte	0x50
 11266 0d67 09000000 		.4byte	.LVL297-1
 11267 0d6b 78000000 		.4byte	.LVL303
 11268 0d6f 0100     		.2byte	0x1
 11269 0d71 55       		.byte	0x55
 11270 0d72 78000000 		.4byte	.LVL303
 11271 0d76 80000000 		.4byte	.LFE752
 11272 0d7a 0400     		.2byte	0x4
 11273 0d7c F3       		.byte	0xf3
 11274 0d7d 01       		.uleb128 0x1
 11275 0d7e 50       		.byte	0x50
 11276 0d7f 9F       		.byte	0x9f
 11277 0d80 00000000 		.4byte	0
 11278 0d84 00000000 		.4byte	0
 11279              	.LLST94:
 11280 0d88 00000000 		.4byte	.LVL296
 11281 0d8c 09000000 		.4byte	.LVL297-1
 11282 0d90 0100     		.2byte	0x1
 11283 0d92 51       		.byte	0x51
 11284 0d93 09000000 		.4byte	.LVL297-1
 11285 0d97 4A000000 		.4byte	.LVL301
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 298


 11286 0d9b 0100     		.2byte	0x1
 11287 0d9d 54       		.byte	0x54
 11288 0d9e 4A000000 		.4byte	.LVL301
 11289 0da2 80000000 		.4byte	.LFE752
 11290 0da6 0400     		.2byte	0x4
 11291 0da8 F3       		.byte	0xf3
 11292 0da9 01       		.uleb128 0x1
 11293 0daa 51       		.byte	0x51
 11294 0dab 9F       		.byte	0x9f
 11295 0dac 00000000 		.4byte	0
 11296 0db0 00000000 		.4byte	0
 11297              	.LLST95:
 11298 0db4 4A000000 		.4byte	.LVL301
 11299 0db8 78000000 		.4byte	.LVL303
 11300 0dbc 0100     		.2byte	0x1
 11301 0dbe 54       		.byte	0x54
 11302 0dbf 78000000 		.4byte	.LVL303
 11303 0dc3 80000000 		.4byte	.LFE752
 11304 0dc7 0100     		.2byte	0x1
 11305 0dc9 50       		.byte	0x50
 11306 0dca 00000000 		.4byte	0
 11307 0dce 00000000 		.4byte	0
 11308              	.LLST96:
 11309 0dd2 00000000 		.4byte	.LVL304
 11310 0dd6 0D000000 		.4byte	.LVL305-1
 11311 0dda 0100     		.2byte	0x1
 11312 0ddc 50       		.byte	0x50
 11313 0ddd 0D000000 		.4byte	.LVL305-1
 11314 0de1 9C000000 		.4byte	.LVL314
 11315 0de5 0100     		.2byte	0x1
 11316 0de7 57       		.byte	0x57
 11317 0de8 9C000000 		.4byte	.LVL314
 11318 0dec A4000000 		.4byte	.LFE753
 11319 0df0 0400     		.2byte	0x4
 11320 0df2 F3       		.byte	0xf3
 11321 0df3 01       		.uleb128 0x1
 11322 0df4 50       		.byte	0x50
 11323 0df5 9F       		.byte	0x9f
 11324 0df6 00000000 		.4byte	0
 11325 0dfa 00000000 		.4byte	0
 11326              	.LLST97:
 11327 0dfe 00000000 		.4byte	.LVL304
 11328 0e02 0D000000 		.4byte	.LVL305-1
 11329 0e06 0100     		.2byte	0x1
 11330 0e08 51       		.byte	0x51
 11331 0e09 0D000000 		.4byte	.LVL305-1
 11332 0e0d 84000000 		.4byte	.LVL310
 11333 0e11 0100     		.2byte	0x1
 11334 0e13 54       		.byte	0x54
 11335 0e14 84000000 		.4byte	.LVL310
 11336 0e18 86000000 		.4byte	.LVL311
 11337 0e1c 0400     		.2byte	0x4
 11338 0e1e F3       		.byte	0xf3
 11339 0e1f 01       		.uleb128 0x1
 11340 0e20 51       		.byte	0x51
 11341 0e21 9F       		.byte	0x9f
 11342 0e22 86000000 		.4byte	.LVL311
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 299


 11343 0e26 88000000 		.4byte	.LVL312
 11344 0e2a 0100     		.2byte	0x1
 11345 0e2c 54       		.byte	0x54
 11346 0e2d 88000000 		.4byte	.LVL312
 11347 0e31 A4000000 		.4byte	.LFE753
 11348 0e35 0400     		.2byte	0x4
 11349 0e37 F3       		.byte	0xf3
 11350 0e38 01       		.uleb128 0x1
 11351 0e39 51       		.byte	0x51
 11352 0e3a 9F       		.byte	0x9f
 11353 0e3b 00000000 		.4byte	0
 11354 0e3f 00000000 		.4byte	0
 11355              	.LLST98:
 11356 0e43 00000000 		.4byte	.LVL304
 11357 0e47 0D000000 		.4byte	.LVL305-1
 11358 0e4b 0100     		.2byte	0x1
 11359 0e4d 52       		.byte	0x52
 11360 0e4e 0D000000 		.4byte	.LVL305-1
 11361 0e52 9C000000 		.4byte	.LVL314
 11362 0e56 0100     		.2byte	0x1
 11363 0e58 55       		.byte	0x55
 11364 0e59 9C000000 		.4byte	.LVL314
 11365 0e5d A4000000 		.4byte	.LFE753
 11366 0e61 0400     		.2byte	0x4
 11367 0e63 F3       		.byte	0xf3
 11368 0e64 01       		.uleb128 0x1
 11369 0e65 52       		.byte	0x52
 11370 0e66 9F       		.byte	0x9f
 11371 0e67 00000000 		.4byte	0
 11372 0e6b 00000000 		.4byte	0
 11373              	.LLST99:
 11374 0e6f 00000000 		.4byte	.LVL304
 11375 0e73 0D000000 		.4byte	.LVL305-1
 11376 0e77 0100     		.2byte	0x1
 11377 0e79 53       		.byte	0x53
 11378 0e7a 0D000000 		.4byte	.LVL305-1
 11379 0e7e 9C000000 		.4byte	.LVL314
 11380 0e82 0100     		.2byte	0x1
 11381 0e84 56       		.byte	0x56
 11382 0e85 9C000000 		.4byte	.LVL314
 11383 0e89 A4000000 		.4byte	.LFE753
 11384 0e8d 0400     		.2byte	0x4
 11385 0e8f F3       		.byte	0xf3
 11386 0e90 01       		.uleb128 0x1
 11387 0e91 53       		.byte	0x53
 11388 0e92 9F       		.byte	0x9f
 11389 0e93 00000000 		.4byte	0
 11390 0e97 00000000 		.4byte	0
 11391              	.LLST100:
 11392 0e9b 82000000 		.4byte	.LVL309
 11393 0e9f 86000000 		.4byte	.LVL311
 11394 0ea3 0200     		.2byte	0x2
 11395 0ea5 31       		.byte	0x31
 11396 0ea6 9F       		.byte	0x9f
 11397 0ea7 88000000 		.4byte	.LVL312
 11398 0eab 9C000000 		.4byte	.LVL314
 11399 0eaf 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 300


 11400 0eb1 54       		.byte	0x54
 11401 0eb2 9C000000 		.4byte	.LVL314
 11402 0eb6 A4000000 		.4byte	.LFE753
 11403 0eba 0100     		.2byte	0x1
 11404 0ebc 50       		.byte	0x50
 11405 0ebd 00000000 		.4byte	0
 11406 0ec1 00000000 		.4byte	0
 11407              	.LLST101:
 11408 0ec5 00000000 		.4byte	.LVL315
 11409 0ec9 13000000 		.4byte	.LVL317-1
 11410 0ecd 0100     		.2byte	0x1
 11411 0ecf 50       		.byte	0x50
 11412 0ed0 13000000 		.4byte	.LVL317-1
 11413 0ed4 BA000000 		.4byte	.LVL325
 11414 0ed8 0100     		.2byte	0x1
 11415 0eda 54       		.byte	0x54
 11416 0edb BA000000 		.4byte	.LVL325
 11417 0edf C8000000 		.4byte	.LFE754
 11418 0ee3 0400     		.2byte	0x4
 11419 0ee5 F3       		.byte	0xf3
 11420 0ee6 01       		.uleb128 0x1
 11421 0ee7 50       		.byte	0x50
 11422 0ee8 9F       		.byte	0x9f
 11423 0ee9 00000000 		.4byte	0
 11424 0eed 00000000 		.4byte	0
 11425              	.LLST102:
 11426 0ef1 00000000 		.4byte	.LVL315
 11427 0ef5 13000000 		.4byte	.LVL317-1
 11428 0ef9 0100     		.2byte	0x1
 11429 0efb 51       		.byte	0x51
 11430 0efc 13000000 		.4byte	.LVL317-1
 11431 0f00 38000000 		.4byte	.LVL319
 11432 0f04 0100     		.2byte	0x1
 11433 0f06 56       		.byte	0x56
 11434 0f07 38000000 		.4byte	.LVL319
 11435 0f0b 3E000000 		.4byte	.LVL320
 11436 0f0f 0400     		.2byte	0x4
 11437 0f11 F3       		.byte	0xf3
 11438 0f12 01       		.uleb128 0x1
 11439 0f13 51       		.byte	0x51
 11440 0f14 9F       		.byte	0x9f
 11441 0f15 3E000000 		.4byte	.LVL320
 11442 0f19 5E000000 		.4byte	.LVL321
 11443 0f1d 0100     		.2byte	0x1
 11444 0f1f 56       		.byte	0x56
 11445 0f20 5E000000 		.4byte	.LVL321
 11446 0f24 C8000000 		.4byte	.LFE754
 11447 0f28 0400     		.2byte	0x4
 11448 0f2a F3       		.byte	0xf3
 11449 0f2b 01       		.uleb128 0x1
 11450 0f2c 51       		.byte	0x51
 11451 0f2d 9F       		.byte	0x9f
 11452 0f2e 00000000 		.4byte	0
 11453 0f32 00000000 		.4byte	0
 11454              	.LLST103:
 11455 0f36 00000000 		.4byte	.LVL315
 11456 0f3a 13000000 		.4byte	.LVL317-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 301


 11457 0f3e 0100     		.2byte	0x1
 11458 0f40 52       		.byte	0x52
 11459 0f41 13000000 		.4byte	.LVL317-1
 11460 0f45 C8000000 		.4byte	.LFE754
 11461 0f49 0400     		.2byte	0x4
 11462 0f4b F3       		.byte	0xf3
 11463 0f4c 01       		.uleb128 0x1
 11464 0f4d 52       		.byte	0x52
 11465 0f4e 9F       		.byte	0x9f
 11466 0f4f 00000000 		.4byte	0
 11467 0f53 00000000 		.4byte	0
 11468              	.LLST104:
 11469 0f57 00000000 		.4byte	.LVL315
 11470 0f5b 13000000 		.4byte	.LVL317-1
 11471 0f5f 0100     		.2byte	0x1
 11472 0f61 53       		.byte	0x53
 11473 0f62 13000000 		.4byte	.LVL317-1
 11474 0f66 BA000000 		.4byte	.LVL325
 11475 0f6a 0100     		.2byte	0x1
 11476 0f6c 57       		.byte	0x57
 11477 0f6d BA000000 		.4byte	.LVL325
 11478 0f71 C8000000 		.4byte	.LFE754
 11479 0f75 0400     		.2byte	0x4
 11480 0f77 F3       		.byte	0xf3
 11481 0f78 01       		.uleb128 0x1
 11482 0f79 53       		.byte	0x53
 11483 0f7a 9F       		.byte	0x9f
 11484 0f7b 00000000 		.4byte	0
 11485 0f7f 00000000 		.4byte	0
 11486              	.LLST105:
 11487 0f83 10000000 		.4byte	.LVL316
 11488 0f87 BA000000 		.4byte	.LVL325
 11489 0f8b 0100     		.2byte	0x1
 11490 0f8d 54       		.byte	0x54
 11491 0f8e BA000000 		.4byte	.LVL325
 11492 0f92 C8000000 		.4byte	.LFE754
 11493 0f96 0400     		.2byte	0x4
 11494 0f98 F3       		.byte	0xf3
 11495 0f99 01       		.uleb128 0x1
 11496 0f9a 50       		.byte	0x50
 11497 0f9b 9F       		.byte	0x9f
 11498 0f9c 00000000 		.4byte	0
 11499 0fa0 00000000 		.4byte	0
 11500              	.LLST106:
 11501 0fa4 00000000 		.4byte	.LVL315
 11502 0fa8 5E000000 		.4byte	.LVL321
 11503 0fac 0200     		.2byte	0x2
 11504 0fae 31       		.byte	0x31
 11505 0faf 9F       		.byte	0x9f
 11506 0fb0 5E000000 		.4byte	.LVL321
 11507 0fb4 BA000000 		.4byte	.LVL325
 11508 0fb8 0100     		.2byte	0x1
 11509 0fba 55       		.byte	0x55
 11510 0fbb BA000000 		.4byte	.LVL325
 11511 0fbf C8000000 		.4byte	.LFE754
 11512 0fc3 0100     		.2byte	0x1
 11513 0fc5 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 302


 11514 0fc6 00000000 		.4byte	0
 11515 0fca 00000000 		.4byte	0
 11516              	.LLST107:
 11517 0fce 20000000 		.4byte	.LVL318
 11518 0fd2 69000000 		.4byte	.LVL322-1
 11519 0fd6 0100     		.2byte	0x1
 11520 0fd8 53       		.byte	0x53
 11521 0fd9 00000000 		.4byte	0
 11522 0fdd 00000000 		.4byte	0
 11523              	.LLST108:
 11524 0fe1 00000000 		.4byte	.LVL326
 11525 0fe5 17000000 		.4byte	.LVL328-1
 11526 0fe9 0100     		.2byte	0x1
 11527 0feb 50       		.byte	0x50
 11528 0fec 17000000 		.4byte	.LVL328-1
 11529 0ff0 F6000000 		.4byte	.LVL339
 11530 0ff4 0100     		.2byte	0x1
 11531 0ff6 54       		.byte	0x54
 11532 0ff7 F6000000 		.4byte	.LVL339
 11533 0ffb 04010000 		.4byte	.LFE755
 11534 0fff 0400     		.2byte	0x4
 11535 1001 F3       		.byte	0xf3
 11536 1002 01       		.uleb128 0x1
 11537 1003 50       		.byte	0x50
 11538 1004 9F       		.byte	0x9f
 11539 1005 00000000 		.4byte	0
 11540 1009 00000000 		.4byte	0
 11541              	.LLST109:
 11542 100d 00000000 		.4byte	.LVL326
 11543 1011 17000000 		.4byte	.LVL328-1
 11544 1015 0100     		.2byte	0x1
 11545 1017 51       		.byte	0x51
 11546 1018 17000000 		.4byte	.LVL328-1
 11547 101c 9A000000 		.4byte	.LVL332
 11548 1020 0100     		.2byte	0x1
 11549 1022 58       		.byte	0x58
 11550 1023 9A000000 		.4byte	.LVL332
 11551 1027 C4000000 		.4byte	.LVL335
 11552 102b 0400     		.2byte	0x4
 11553 102d F3       		.byte	0xf3
 11554 102e 01       		.uleb128 0x1
 11555 102f 51       		.byte	0x51
 11556 1030 9F       		.byte	0x9f
 11557 1031 C4000000 		.4byte	.LVL335
 11558 1035 CE000000 		.4byte	.LVL336
 11559 1039 0100     		.2byte	0x1
 11560 103b 58       		.byte	0x58
 11561 103c CE000000 		.4byte	.LVL336
 11562 1040 04010000 		.4byte	.LFE755
 11563 1044 0400     		.2byte	0x4
 11564 1046 F3       		.byte	0xf3
 11565 1047 01       		.uleb128 0x1
 11566 1048 51       		.byte	0x51
 11567 1049 9F       		.byte	0x9f
 11568 104a 00000000 		.4byte	0
 11569 104e 00000000 		.4byte	0
 11570              	.LLST110:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 303


 11571 1052 00000000 		.4byte	.LVL326
 11572 1056 17000000 		.4byte	.LVL328-1
 11573 105a 0100     		.2byte	0x1
 11574 105c 52       		.byte	0x52
 11575 105d 17000000 		.4byte	.LVL328-1
 11576 1061 04010000 		.4byte	.LFE755
 11577 1065 0400     		.2byte	0x4
 11578 1067 F3       		.byte	0xf3
 11579 1068 01       		.uleb128 0x1
 11580 1069 52       		.byte	0x52
 11581 106a 9F       		.byte	0x9f
 11582 106b 00000000 		.4byte	0
 11583 106f 00000000 		.4byte	0
 11584              	.LLST111:
 11585 1073 00000000 		.4byte	.LVL326
 11586 1077 17000000 		.4byte	.LVL328-1
 11587 107b 0100     		.2byte	0x1
 11588 107d 53       		.byte	0x53
 11589 107e 17000000 		.4byte	.LVL328-1
 11590 1082 F6000000 		.4byte	.LVL339
 11591 1086 0100     		.2byte	0x1
 11592 1088 59       		.byte	0x59
 11593 1089 F6000000 		.4byte	.LVL339
 11594 108d 04010000 		.4byte	.LFE755
 11595 1091 0400     		.2byte	0x4
 11596 1093 F3       		.byte	0xf3
 11597 1094 01       		.uleb128 0x1
 11598 1095 53       		.byte	0x53
 11599 1096 9F       		.byte	0x9f
 11600 1097 00000000 		.4byte	0
 11601 109b 00000000 		.4byte	0
 11602              	.LLST112:
 11603 109f 00000000 		.4byte	.LVL326
 11604 10a3 F6000000 		.4byte	.LVL339
 11605 10a7 0200     		.2byte	0x2
 11606 10a9 91       		.byte	0x91
 11607 10aa 00       		.sleb128 0
 11608 10ab F6000000 		.4byte	.LVL339
 11609 10af 04010000 		.4byte	.LFE755
 11610 10b3 0200     		.2byte	0x2
 11611 10b5 7D       		.byte	0x7d
 11612 10b6 00       		.sleb128 0
 11613 10b7 00000000 		.4byte	0
 11614 10bb 00000000 		.4byte	0
 11615              	.LLST113:
 11616 10bf 18000000 		.4byte	.LVL328
 11617 10c3 F6000000 		.4byte	.LVL339
 11618 10c7 0100     		.2byte	0x1
 11619 10c9 54       		.byte	0x54
 11620 10ca F6000000 		.4byte	.LVL339
 11621 10ce 04010000 		.4byte	.LFE755
 11622 10d2 0400     		.2byte	0x4
 11623 10d4 F3       		.byte	0xf3
 11624 10d5 01       		.uleb128 0x1
 11625 10d6 50       		.byte	0x50
 11626 10d7 9F       		.byte	0x9f
 11627 10d8 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 304


 11628 10dc 00000000 		.4byte	0
 11629              	.LLST114:
 11630 10e0 3E000000 		.4byte	.LVL329
 11631 10e4 88000000 		.4byte	.LVL331
 11632 10e8 0100     		.2byte	0x1
 11633 10ea 53       		.byte	0x53
 11634 10eb 00000000 		.4byte	0
 11635 10ef 00000000 		.4byte	0
 11636              	.LLST115:
 11637 10f3 06000000 		.4byte	.LVL327
 11638 10f7 82000000 		.4byte	.LVL330
 11639 10fb 0200     		.2byte	0x2
 11640 10fd 31       		.byte	0x31
 11641 10fe 9F       		.byte	0x9f
 11642 10ff 82000000 		.4byte	.LVL330
 11643 1103 F6000000 		.4byte	.LVL339
 11644 1107 0100     		.2byte	0x1
 11645 1109 55       		.byte	0x55
 11646 110a F6000000 		.4byte	.LVL339
 11647 110e 04010000 		.4byte	.LFE755
 11648 1112 0100     		.2byte	0x1
 11649 1114 50       		.byte	0x50
 11650 1115 00000000 		.4byte	0
 11651 1119 00000000 		.4byte	0
 11652              	.LLST116:
 11653 111d EC000000 		.4byte	.LVL337
 11654 1121 F0000000 		.4byte	.LVL338
 11655 1125 0100     		.2byte	0x1
 11656 1127 57       		.byte	0x57
 11657 1128 00000000 		.4byte	0
 11658 112c 00000000 		.4byte	0
 11659              	.LLST117:
 11660 1130 00000000 		.4byte	.LVL340
 11661 1134 0F000000 		.4byte	.LVL341-1
 11662 1138 0100     		.2byte	0x1
 11663 113a 50       		.byte	0x50
 11664 113b 0F000000 		.4byte	.LVL341-1
 11665 113f A4000000 		.4byte	.LVL349
 11666 1143 0100     		.2byte	0x1
 11667 1145 54       		.byte	0x54
 11668 1146 A4000000 		.4byte	.LVL349
 11669 114a B0000000 		.4byte	.LFE756
 11670 114e 0400     		.2byte	0x4
 11671 1150 F3       		.byte	0xf3
 11672 1151 01       		.uleb128 0x1
 11673 1152 50       		.byte	0x50
 11674 1153 9F       		.byte	0x9f
 11675 1154 00000000 		.4byte	0
 11676 1158 00000000 		.4byte	0
 11677              	.LLST118:
 11678 115c 00000000 		.4byte	.LVL340
 11679 1160 0F000000 		.4byte	.LVL341-1
 11680 1164 0100     		.2byte	0x1
 11681 1166 51       		.byte	0x51
 11682 1167 0F000000 		.4byte	.LVL341-1
 11683 116b A4000000 		.4byte	.LVL349
 11684 116f 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 305


 11685 1171 55       		.byte	0x55
 11686 1172 A4000000 		.4byte	.LVL349
 11687 1176 B0000000 		.4byte	.LFE756
 11688 117a 0400     		.2byte	0x4
 11689 117c F3       		.byte	0xf3
 11690 117d 01       		.uleb128 0x1
 11691 117e 51       		.byte	0x51
 11692 117f 9F       		.byte	0x9f
 11693 1180 00000000 		.4byte	0
 11694 1184 00000000 		.4byte	0
 11695              	.LLST119:
 11696 1188 10000000 		.4byte	.LVL341
 11697 118c A4000000 		.4byte	.LVL349
 11698 1190 0100     		.2byte	0x1
 11699 1192 54       		.byte	0x54
 11700 1193 A4000000 		.4byte	.LVL349
 11701 1197 B0000000 		.4byte	.LFE756
 11702 119b 0400     		.2byte	0x4
 11703 119d F3       		.byte	0xf3
 11704 119e 01       		.uleb128 0x1
 11705 119f 50       		.byte	0x50
 11706 11a0 9F       		.byte	0x9f
 11707 11a1 00000000 		.4byte	0
 11708 11a5 00000000 		.4byte	0
 11709              	.LLST120:
 11710 11a9 2A000000 		.4byte	.LVL342
 11711 11ad 3C000000 		.4byte	.LVL343
 11712 11b1 0100     		.2byte	0x1
 11713 11b3 53       		.byte	0x53
 11714 11b4 00000000 		.4byte	0
 11715 11b8 00000000 		.4byte	0
 11716              	.LLST121:
 11717 11bc 9E000000 		.4byte	.LVL347
 11718 11c0 A2000000 		.4byte	.LVL348
 11719 11c4 0100     		.2byte	0x1
 11720 11c6 56       		.byte	0x56
 11721 11c7 00000000 		.4byte	0
 11722 11cb 00000000 		.4byte	0
 11723              	.LLST122:
 11724 11cf 00000000 		.4byte	.LVL350
 11725 11d3 0C000000 		.4byte	.LVL351
 11726 11d7 0100     		.2byte	0x1
 11727 11d9 50       		.byte	0x50
 11728 11da 00000000 		.4byte	0
 11729 11de 00000000 		.4byte	0
 11730              	.LLST123:
 11731 11e2 0C000000 		.4byte	.LVL351
 11732 11e6 22000000 		.4byte	.LVL354
 11733 11ea 0100     		.2byte	0x1
 11734 11ec 54       		.byte	0x54
 11735 11ed 24000000 		.4byte	.LVL355
 11736 11f1 26000000 		.4byte	.LVL356
 11737 11f5 0100     		.2byte	0x1
 11738 11f7 54       		.byte	0x54
 11739 11f8 00000000 		.4byte	0
 11740 11fc 00000000 		.4byte	0
 11741              	.LLST124:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 306


 11742 1200 20000000 		.4byte	.LVL353
 11743 1204 24000000 		.4byte	.LVL355
 11744 1208 0200     		.2byte	0x2
 11745 120a 31       		.byte	0x31
 11746 120b 9F       		.byte	0x9f
 11747 120c 26000000 		.4byte	.LVL356
 11748 1210 2E000000 		.4byte	.LVL358
 11749 1214 0100     		.2byte	0x1
 11750 1216 54       		.byte	0x54
 11751 1217 2E000000 		.4byte	.LVL358
 11752 121b 34000000 		.4byte	.LFE757
 11753 121f 0100     		.2byte	0x1
 11754 1221 50       		.byte	0x50
 11755 1222 00000000 		.4byte	0
 11756 1226 00000000 		.4byte	0
 11757              		.section	.debug_aranges,"",%progbits
 11758 0000 94010000 		.4byte	0x194
 11759 0004 0200     		.2byte	0x2
 11760 0006 00000000 		.4byte	.Ldebug_info0
 11761 000a 04       		.byte	0x4
 11762 000b 00       		.byte	0
 11763 000c 0000     		.2byte	0
 11764 000e 0000     		.2byte	0
 11765 0010 00000000 		.4byte	.LFB721
 11766 0014 40000000 		.4byte	.LFE721-.LFB721
 11767 0018 00000000 		.4byte	.LFB748
 11768 001c 2C000000 		.4byte	.LFE748-.LFB748
 11769 0020 00000000 		.4byte	.LFB747
 11770 0024 12000000 		.4byte	.LFE747-.LFB747
 11771 0028 00000000 		.4byte	.LFB712
 11772 002c 9E000000 		.4byte	.LFE712-.LFB712
 11773 0030 00000000 		.4byte	.LFB745
 11774 0034 58000000 		.4byte	.LFE745-.LFB745
 11775 0038 00000000 		.4byte	.LFB713
 11776 003c AC000000 		.4byte	.LFE713-.LFB713
 11777 0040 00000000 		.4byte	.LFB758
 11778 0044 68000000 		.4byte	.LFE758-.LFB758
 11779 0048 00000000 		.4byte	.LFB711
 11780 004c 62000000 		.4byte	.LFE711-.LFB711
 11781 0050 00000000 		.4byte	.LFB714
 11782 0054 A4000000 		.4byte	.LFE714-.LFB714
 11783 0058 00000000 		.4byte	.LFB717
 11784 005c 20000000 		.4byte	.LFE717-.LFB717
 11785 0060 00000000 		.4byte	.LFB718
 11786 0064 30000000 		.4byte	.LFE718-.LFB718
 11787 0068 00000000 		.4byte	.LFB719
 11788 006c D0000000 		.4byte	.LFE719-.LFB719
 11789 0070 00000000 		.4byte	.LFB722
 11790 0074 7C000000 		.4byte	.LFE722-.LFB722
 11791 0078 00000000 		.4byte	.LFB723
 11792 007c 98000000 		.4byte	.LFE723-.LFB723
 11793 0080 00000000 		.4byte	.LFB724
 11794 0084 60000000 		.4byte	.LFE724-.LFB724
 11795 0088 00000000 		.4byte	.LFB725
 11796 008c 18000000 		.4byte	.LFE725-.LFB725
 11797 0090 00000000 		.4byte	.LFB726
 11798 0094 14000000 		.4byte	.LFE726-.LFB726
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 307


 11799 0098 00000000 		.4byte	.LFB728
 11800 009c 0C000000 		.4byte	.LFE728-.LFB728
 11801 00a0 00000000 		.4byte	.LFB729
 11802 00a4 14000000 		.4byte	.LFE729-.LFB729
 11803 00a8 00000000 		.4byte	.LFB730
 11804 00ac 0C000000 		.4byte	.LFE730-.LFB730
 11805 00b0 00000000 		.4byte	.LFB731
 11806 00b4 1C000000 		.4byte	.LFE731-.LFB731
 11807 00b8 00000000 		.4byte	.LFB732
 11808 00bc F0000000 		.4byte	.LFE732-.LFB732
 11809 00c0 00000000 		.4byte	.LFB727
 11810 00c4 E4000000 		.4byte	.LFE727-.LFB727
 11811 00c8 00000000 		.4byte	.LFB715
 11812 00cc 84000000 		.4byte	.LFE715-.LFB715
 11813 00d0 00000000 		.4byte	.LFB716
 11814 00d4 44000000 		.4byte	.LFE716-.LFB716
 11815 00d8 00000000 		.4byte	.LFB746
 11816 00dc 54000000 		.4byte	.LFE746-.LFB746
 11817 00e0 00000000 		.4byte	.LFB742
 11818 00e4 2C000000 		.4byte	.LFE742-.LFB742
 11819 00e8 00000000 		.4byte	.LFB733
 11820 00ec BC000000 		.4byte	.LFE733-.LFB733
 11821 00f0 00000000 		.4byte	.LFB720
 11822 00f4 98000000 		.4byte	.LFE720-.LFB720
 11823 00f8 00000000 		.4byte	.LFB734
 11824 00fc 24000000 		.4byte	.LFE734-.LFB734
 11825 0100 00000000 		.4byte	.LFB735
 11826 0104 40000000 		.4byte	.LFE735-.LFB735
 11827 0108 00000000 		.4byte	.LFB736
 11828 010c 2C000000 		.4byte	.LFE736-.LFB736
 11829 0110 00000000 		.4byte	.LFB737
 11830 0114 7C000000 		.4byte	.LFE737-.LFB737
 11831 0118 00000000 		.4byte	.LFB738
 11832 011c 6C000000 		.4byte	.LFE738-.LFB738
 11833 0120 00000000 		.4byte	.LFB739
 11834 0124 1C000000 		.4byte	.LFE739-.LFB739
 11835 0128 00000000 		.4byte	.LFB740
 11836 012c 64000000 		.4byte	.LFE740-.LFB740
 11837 0130 00000000 		.4byte	.LFB741
 11838 0134 10000000 		.4byte	.LFE741-.LFB741
 11839 0138 00000000 		.4byte	.LFB743
 11840 013c 1C000000 		.4byte	.LFE743-.LFB743
 11841 0140 00000000 		.4byte	.LFB744
 11842 0144 20000000 		.4byte	.LFE744-.LFB744
 11843 0148 00000000 		.4byte	.LFB749
 11844 014c 0C000000 		.4byte	.LFE749-.LFB749
 11845 0150 00000000 		.4byte	.LFB750
 11846 0154 20000000 		.4byte	.LFE750-.LFB750
 11847 0158 00000000 		.4byte	.LFB751
 11848 015c 20000000 		.4byte	.LFE751-.LFB751
 11849 0160 00000000 		.4byte	.LFB752
 11850 0164 80000000 		.4byte	.LFE752-.LFB752
 11851 0168 00000000 		.4byte	.LFB753
 11852 016c A4000000 		.4byte	.LFE753-.LFB753
 11853 0170 00000000 		.4byte	.LFB754
 11854 0174 C8000000 		.4byte	.LFE754-.LFB754
 11855 0178 00000000 		.4byte	.LFB755
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 308


 11856 017c 04010000 		.4byte	.LFE755-.LFB755
 11857 0180 00000000 		.4byte	.LFB756
 11858 0184 B0000000 		.4byte	.LFE756-.LFB756
 11859 0188 00000000 		.4byte	.LFB757
 11860 018c 34000000 		.4byte	.LFE757-.LFB757
 11861 0190 00000000 		.4byte	0
 11862 0194 00000000 		.4byte	0
 11863              		.section	.debug_ranges,"",%progbits
 11864              	.Ldebug_ranges0:
 11865 0000 0E000000 		.4byte	.LBB27
 11866 0004 4A000000 		.4byte	.LBE27
 11867 0008 4E000000 		.4byte	.LBB29
 11868 000c CC000000 		.4byte	.LBE29
 11869 0010 00000000 		.4byte	0
 11870 0014 00000000 		.4byte	0
 11871 0018 22000000 		.4byte	.LBB31
 11872 001c 38000000 		.4byte	.LBE31
 11873 0020 3C000000 		.4byte	.LBB32
 11874 0024 44000000 		.4byte	.LBE32
 11875 0028 4C000000 		.4byte	.LBB33
 11876 002c 62000000 		.4byte	.LBE33
 11877 0030 00000000 		.4byte	0
 11878 0034 00000000 		.4byte	0
 11879 0038 00000000 		.4byte	.LFB721
 11880 003c 40000000 		.4byte	.LFE721
 11881 0040 00000000 		.4byte	.LFB748
 11882 0044 2C000000 		.4byte	.LFE748
 11883 0048 00000000 		.4byte	.LFB747
 11884 004c 12000000 		.4byte	.LFE747
 11885 0050 00000000 		.4byte	.LFB712
 11886 0054 9E000000 		.4byte	.LFE712
 11887 0058 00000000 		.4byte	.LFB745
 11888 005c 58000000 		.4byte	.LFE745
 11889 0060 00000000 		.4byte	.LFB713
 11890 0064 AC000000 		.4byte	.LFE713
 11891 0068 00000000 		.4byte	.LFB758
 11892 006c 68000000 		.4byte	.LFE758
 11893 0070 00000000 		.4byte	.LFB711
 11894 0074 62000000 		.4byte	.LFE711
 11895 0078 00000000 		.4byte	.LFB714
 11896 007c A4000000 		.4byte	.LFE714
 11897 0080 00000000 		.4byte	.LFB717
 11898 0084 20000000 		.4byte	.LFE717
 11899 0088 00000000 		.4byte	.LFB718
 11900 008c 30000000 		.4byte	.LFE718
 11901 0090 00000000 		.4byte	.LFB719
 11902 0094 D0000000 		.4byte	.LFE719
 11903 0098 00000000 		.4byte	.LFB722
 11904 009c 7C000000 		.4byte	.LFE722
 11905 00a0 00000000 		.4byte	.LFB723
 11906 00a4 98000000 		.4byte	.LFE723
 11907 00a8 00000000 		.4byte	.LFB724
 11908 00ac 60000000 		.4byte	.LFE724
 11909 00b0 00000000 		.4byte	.LFB725
 11910 00b4 18000000 		.4byte	.LFE725
 11911 00b8 00000000 		.4byte	.LFB726
 11912 00bc 14000000 		.4byte	.LFE726
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 309


 11913 00c0 00000000 		.4byte	.LFB728
 11914 00c4 0C000000 		.4byte	.LFE728
 11915 00c8 00000000 		.4byte	.LFB729
 11916 00cc 14000000 		.4byte	.LFE729
 11917 00d0 00000000 		.4byte	.LFB730
 11918 00d4 0C000000 		.4byte	.LFE730
 11919 00d8 00000000 		.4byte	.LFB731
 11920 00dc 1C000000 		.4byte	.LFE731
 11921 00e0 00000000 		.4byte	.LFB732
 11922 00e4 F0000000 		.4byte	.LFE732
 11923 00e8 00000000 		.4byte	.LFB727
 11924 00ec E4000000 		.4byte	.LFE727
 11925 00f0 00000000 		.4byte	.LFB715
 11926 00f4 84000000 		.4byte	.LFE715
 11927 00f8 00000000 		.4byte	.LFB716
 11928 00fc 44000000 		.4byte	.LFE716
 11929 0100 00000000 		.4byte	.LFB746
 11930 0104 54000000 		.4byte	.LFE746
 11931 0108 00000000 		.4byte	.LFB742
 11932 010c 2C000000 		.4byte	.LFE742
 11933 0110 00000000 		.4byte	.LFB733
 11934 0114 BC000000 		.4byte	.LFE733
 11935 0118 00000000 		.4byte	.LFB720
 11936 011c 98000000 		.4byte	.LFE720
 11937 0120 00000000 		.4byte	.LFB734
 11938 0124 24000000 		.4byte	.LFE734
 11939 0128 00000000 		.4byte	.LFB735
 11940 012c 40000000 		.4byte	.LFE735
 11941 0130 00000000 		.4byte	.LFB736
 11942 0134 2C000000 		.4byte	.LFE736
 11943 0138 00000000 		.4byte	.LFB737
 11944 013c 7C000000 		.4byte	.LFE737
 11945 0140 00000000 		.4byte	.LFB738
 11946 0144 6C000000 		.4byte	.LFE738
 11947 0148 00000000 		.4byte	.LFB739
 11948 014c 1C000000 		.4byte	.LFE739
 11949 0150 00000000 		.4byte	.LFB740
 11950 0154 64000000 		.4byte	.LFE740
 11951 0158 00000000 		.4byte	.LFB741
 11952 015c 10000000 		.4byte	.LFE741
 11953 0160 00000000 		.4byte	.LFB743
 11954 0164 1C000000 		.4byte	.LFE743
 11955 0168 00000000 		.4byte	.LFB744
 11956 016c 20000000 		.4byte	.LFE744
 11957 0170 00000000 		.4byte	.LFB749
 11958 0174 0C000000 		.4byte	.LFE749
 11959 0178 00000000 		.4byte	.LFB750
 11960 017c 20000000 		.4byte	.LFE750
 11961 0180 00000000 		.4byte	.LFB751
 11962 0184 20000000 		.4byte	.LFE751
 11963 0188 00000000 		.4byte	.LFB752
 11964 018c 80000000 		.4byte	.LFE752
 11965 0190 00000000 		.4byte	.LFB753
 11966 0194 A4000000 		.4byte	.LFE753
 11967 0198 00000000 		.4byte	.LFB754
 11968 019c C8000000 		.4byte	.LFE754
 11969 01a0 00000000 		.4byte	.LFB755
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 310


 11970 01a4 04010000 		.4byte	.LFE755
 11971 01a8 00000000 		.4byte	.LFB756
 11972 01ac B0000000 		.4byte	.LFE756
 11973 01b0 00000000 		.4byte	.LFB757
 11974 01b4 34000000 		.4byte	.LFE757
 11975 01b8 00000000 		.4byte	0
 11976 01bc 00000000 		.4byte	0
 11977              		.section	.debug_line,"",%progbits
 11978              	.Ldebug_line0:
 11979 0000 760E0000 		.section	.debug_str,"MS",%progbits,1
 11979      02008305 
 11979      00000201 
 11979      FB0E0D00 
 11979      01010101 
 11980              	.LASF238:
 11981 0000 43595F42 		.ascii	"CY_BLE_DIS_SOFTWARE_REV\000"
 11981      4C455F44 
 11981      49535F53 
 11981      4F465457 
 11981      4152455F 
 11982              	.LASF461:
 11983 0018 764C6973 		.ascii	"vListInsert\000"
 11983      74496E73 
 11983      65727400 
 11984              	.LASF441:
 11985 0024 63795F62 		.ascii	"cy_ble_connState\000"
 11985      6C655F63 
 11985      6F6E6E53 
 11985      74617465 
 11985      00
 11986              	.LASF244:
 11987 0035 43595F42 		.ascii	"CY_BLE_HTS_TEMP_TYPE\000"
 11987      4C455F48 
 11987      54535F54 
 11987      454D505F 
 11987      54595045 
 11988              	.LASF275:
 11989 004a 75784E75 		.ascii	"uxNumberOfItems\000"
 11989      6D626572 
 11989      4F664974 
 11989      656D7300 
 11990              	.LASF211:
 11991 005a 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 11991      4C455F45 
 11991      56545F4C 
 11991      32434150 
 11991      5F434246 
 11992              	.LASF57:
 11993 007a 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 11993      625F7363 
 11993      625F7370 
 11993      695F6861 
 11993      6E646C65 
 11994              	.LASF52:
 11995 0098 73746F70 		.ascii	"stopInputMode\000"
 11995      496E7075 
 11995      744D6F64 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 311


 11995      6500
 11996              	.LASF189:
 11997 00a6 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 11997      4C455F45 
 11997      56545F47 
 11997      41545443 
 11997      5F524541 
 11998              	.LASF159:
 11999 00c5 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 11999      4C455F45 
 11999      56545F47 
 11999      4150505F 
 11999      41445645 
 12000              	.LASF253:
 12001 00ee 43595F42 		.ascii	"CY_BLE_SRVI_COUNT\000"
 12001      4C455F53 
 12001      5256495F 
 12001      434F554E 
 12001      5400
 12002              	.LASF242:
 12003 0100 43595F42 		.ascii	"CY_BLE_DIS_CHAR_COUNT\000"
 12003      4C455F44 
 12003      49535F43 
 12003      4841525F 
 12003      434F554E 
 12004              	.LASF213:
 12005 0116 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 12005      4C455F45 
 12005      56545F4C 
 12005      32434150 
 12005      5F434246 
 12006              	.LASF106:
 12007 013a 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 12007      4C455F45 
 12007      56545F50 
 12007      454E4449 
 12007      4E475F46 
 12008              	.LASF144:
 12009 0159 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 12009      4C455F45 
 12009      56545F41 
 12009      45535F43 
 12009      434D5F44 
 12010              	.LASF197:
 12011 017d 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 12011      4C455F45 
 12011      56545F47 
 12011      41545443 
 12011      5F48414E 
 12012              	.LASF442:
 12013 019f 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 12013      494E4B5F 
 12013      5350494D 
 12013      5F636F6E 
 12013      74657874 
 12014              	.LASF465:
 12015 01b4 78506F72 		.ascii	"xPortStartScheduler\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 312


 12015      74537461 
 12015      72745363 
 12015      68656475 
 12015      6C657200 
 12016              	.LASF27:
 12017 01c8 666F726D 		.ascii	"format\000"
 12017      617400
 12018              	.LASF299:
 12019 01cf 75785072 		.ascii	"uxPriority\000"
 12019      696F7269 
 12019      747900
 12020              	.LASF373:
 12021 01da 7078436F 		.ascii	"pxConstList\000"
 12021      6E73744C 
 12021      69737400 
 12022              	.LASF72:
 12023 01e6 74785374 		.ascii	"txStatus\000"
 12023      61747573 
 12023      00
 12024              	.LASF295:
 12025 01ef 74736B54 		.ascii	"tskTaskControlBlock\000"
 12025      61736B43 
 12025      6F6E7472 
 12025      6F6C426C 
 12025      6F636B00 
 12026              	.LASF138:
 12027 0203 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 12027      4C455F45 
 12027      56545F53 
 12027      45545F54 
 12027      585F5057 
 12028              	.LASF358:
 12029 0222 75785065 		.ascii	"uxPendedCounts\000"
 12029      6E646564 
 12029      436F756E 
 12029      747300
 12030              	.LASF391:
 12031 0231 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 12031      6B536574 
 12031      54687265 
 12031      61644C6F 
 12031      63616C53 
 12032              	.LASF175:
 12033 0253 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 12033      4C455F45 
 12033      56545F47 
 12033      41505F47 
 12033      454E5F53 
 12034              	.LASF405:
 12035 0283 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 12035      7473546F 
 12035      436C6561 
 12035      724F6E45 
 12035      78697400 
 12036              	.LASF87:
 12037 0297 73616D70 		.ascii	"sampleTime01\000"
 12037      6C655469 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 313


 12037      6D653031 
 12037      00
 12038              	.LASF475:
 12039 02a4 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 12039      736B4765 
 12039      744E756D 
 12039      6265724F 
 12039      66546173 
 12040              	.LASF398:
 12041 02bb 78546173 		.ascii	"xTaskGetSchedulerState\000"
 12041      6B476574 
 12041      53636865 
 12041      64756C65 
 12041      72537461 
 12042              	.LASF414:
 12043 02d2 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 12043      67686572 
 12043      5072696F 
 12043      72697479 
 12043      5461736B 
 12044              	.LASF280:
 12045 02ec 654E6F41 		.ascii	"eNoAction\000"
 12045      6374696F 
 12045      6E00
 12046              	.LASF29:
 12047 02f6 6461794F 		.ascii	"dayOfMonth\000"
 12047      664D6F6E 
 12047      746800
 12048              	.LASF212:
 12049 0301 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 12049      4C455F45 
 12049      56545F4C 
 12049      32434150 
 12049      5F434246 
 12050              	.LASF0:
 12051 0325 756E7369 		.ascii	"unsigned int\000"
 12051      676E6564 
 12051      20696E74 
 12051      00
 12052              	.LASF377:
 12053 0332 70784576 		.ascii	"pxEventList\000"
 12053      656E744C 
 12053      69737400 
 12054              	.LASF429:
 12055 033e 78536368 		.ascii	"xSchedulerRunning\000"
 12055      6564756C 
 12055      65725275 
 12055      6E6E696E 
 12055      6700
 12056              	.LASF440:
 12057 0350 63795F62 		.ascii	"cy_ble_connHandle\000"
 12057      6C655F63 
 12057      6F6E6E48 
 12057      616E646C 
 12057      6500
 12058              	.LASF276:
 12059 0362 7078496E 		.ascii	"pxIndex\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 314


 12059      64657800 
 12060              	.LASF20:
 12061 036a 75696E74 		.ascii	"uint32_t\000"
 12061      33325F74 
 12061      00
 12062              	.LASF261:
 12063 0373 53746163 		.ascii	"StackType_t\000"
 12063      6B547970 
 12063      655F7400 
 12064              	.LASF83:
 12065 037f 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 12065      41525F52 
 12065      414E4745 
 12065      5F434F4E 
 12065      445F4F55 
 12066              	.LASF33:
 12067 0399 63795F73 		.ascii	"cy_stc_rtc_dst_format_t\000"
 12067      74635F72 
 12067      74635F64 
 12067      73745F66 
 12067      6F726D61 
 12068              	.LASF161:
 12069 03b1 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 12069      4C455F45 
 12069      56545F47 
 12069      41505F44 
 12069      45564943 
 12070              	.LASF293:
 12071 03d4 756C5061 		.ascii	"ulParameters\000"
 12071      72616D65 
 12071      74657273 
 12071      00
 12072              	.LASF66:
 12073 03e1 74784275 		.ascii	"txBufIdx\000"
 12073      66496478 
 12073      00
 12074              	.LASF240:
 12075 03ea 43595F42 		.ascii	"CY_BLE_DIS_REG_CERT_DATA\000"
 12075      4C455F44 
 12075      49535F52 
 12075      45475F43 
 12075      4552545F 
 12076              	.LASF51:
 12077 0403 73746172 		.ascii	"startInput\000"
 12077      74496E70 
 12077      757400
 12078              	.LASF107:
 12079 040e 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 12079      4C455F45 
 12079      56545F46 
 12079      4C415348 
 12079      5F434F52 
 12080              	.LASF10:
 12081 0427 5F5F696E 		.ascii	"__int32_t\000"
 12081      7433325F 
 12081      7400
 12082              	.LASF235:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 315


 12083 0431 43595F42 		.ascii	"CY_BLE_DIS_SERIAL_NUMBER\000"
 12083      4C455F44 
 12083      49535F53 
 12083      45524941 
 12083      4C5F4E55 
 12084              	.LASF36:
 12085 044a 63795F73 		.ascii	"cy_stc_rtc_dst_t\000"
 12085      74635F72 
 12085      74635F64 
 12085      73745F74 
 12085      00
 12086              	.LASF417:
 12087 045b 70785265 		.ascii	"pxReadyTasksLists\000"
 12087      61647954 
 12087      61736B73 
 12087      4C697374 
 12087      7300
 12088              	.LASF79:
 12089 046d 63795F73 		.ascii	"cy_stc_scb_uart_context_t\000"
 12089      74635F73 
 12089      63625F75 
 12089      6172745F 
 12089      636F6E74 
 12090              	.LASF154:
 12091 0487 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 12091      4C455F45 
 12091      56545F47 
 12091      41505F41 
 12091      5554485F 
 12092              	.LASF254:
 12093 049f 6368616E 		.ascii	"channelBase\000"
 12093      6E656C42 
 12093      61736500 
 12094              	.LASF232:
 12095 04ab 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 12095      6E5F626C 
 12095      655F636F 
 12095      6E6E5F73 
 12095      74617465 
 12096              	.LASF186:
 12097 04c2 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 12097      4C455F45 
 12097      56545F47 
 12097      41545443 
 12097      5F46494E 
 12098              	.LASF131:
 12099 04e1 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 12099      4C455F45 
 12099      56545F53 
 12099      45545F50 
 12099      52495641 
 12100              	.LASF256:
 12101 0506 6877436F 		.ascii	"hwConfigStc\000"
 12101      6E666967 
 12101      53746300 
 12102              	.LASF156:
 12103 0512 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 316


 12103      4C455F45 
 12103      56545F47 
 12103      41505F50 
 12103      4153534B 
 12104              	.LASF274:
 12105 0539 784C4953 		.ascii	"xLIST\000"
 12105      5400
 12106              	.LASF412:
 12107 053f 75634F72 		.ascii	"ucOriginalNotifyState\000"
 12107      6967696E 
 12107      616C4E6F 
 12107      74696679 
 12107      53746174 
 12108              	.LASF385:
 12109 0555 76546173 		.ascii	"vTaskSetTimeOutState\000"
 12109      6B536574 
 12109      54696D65 
 12109      4F757453 
 12109      74617465 
 12110              	.LASF423:
 12111 056a 78546173 		.ascii	"xTasksWaitingTermination\000"
 12111      6B735761 
 12111      6974696E 
 12111      67546572 
 12111      6D696E61 
 12112              	.LASF353:
 12113 0583 78546173 		.ascii	"xTaskIncrementTick\000"
 12113      6B496E63 
 12113      72656D65 
 12113      6E745469 
 12113      636B00
 12114              	.LASF190:
 12115 0596 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 12115      4C455F45 
 12115      56545F47 
 12115      41545443 
 12115      5F524541 
 12116              	.LASF180:
 12117 05b6 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 12117      4C455F45 
 12117      56545F47 
 12117      4154545F 
 12117      434F4E4E 
 12118              	.LASF219:
 12119 05d2 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 12119      4C455F41 
 12119      44565F53 
 12119      54415445 
 12119      5F53544F 
 12120              	.LASF419:
 12121 05eb 7844656C 		.ascii	"xDelayedTaskList2\000"
 12121      61796564 
 12121      5461736B 
 12121      4C697374 
 12121      3200
 12122              	.LASF94:
 12123 05fd 73617449 		.ascii	"satIntrMask\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 317


 12123      6E74724D 
 12123      61736B00 
 12124              	.LASF287:
 12125 0609 784F7665 		.ascii	"xOverflowCount\000"
 12125      72666C6F 
 12125      77436F75 
 12125      6E7400
 12126              	.LASF473:
 12127 0618 76506F72 		.ascii	"vPortSetBASEPRI\000"
 12127      74536574 
 12127      42415345 
 12127      50524900 
 12128              	.LASF457:
 12129 0628 76506F72 		.ascii	"vPortEnterCritical\000"
 12129      74456E74 
 12129      65724372 
 12129      69746963 
 12129      616C00
 12130              	.LASF297:
 12131 063b 78537461 		.ascii	"xStateListItem\000"
 12131      74654C69 
 12131      73744974 
 12131      656D00
 12132              	.LASF129:
 12133 064a 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 12133      4C455F45 
 12133      56545F53 
 12133      45545F50 
 12133      48595F43 
 12134              	.LASF202:
 12135 0666 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 12135      4C455F45 
 12135      56545F47 
 12135      41545453 
 12135      5F524541 
 12136              	.LASF467:
 12137 0690 76417070 		.ascii	"vApplicationIdleHook\000"
 12137      6C696361 
 12137      74696F6E 
 12137      49646C65 
 12137      486F6F6B 
 12138              	.LASF42:
 12139 06a5 636F6D70 		.ascii	"compare0\000"
 12139      61726530 
 12139      00
 12140              	.LASF43:
 12141 06ae 636F6D70 		.ascii	"compare1\000"
 12141      61726531 
 12141      00
 12142              	.LASF469:
 12143 06b7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12143      43313120 
 12143      352E342E 
 12143      31203230 
 12143      31363036 
 12144 06ea 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 12144      20726576 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 318


 12144      6973696F 
 12144      6E203233 
 12144      37373135 
 12145 071d 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 12145      70202D6D 
 12145      6670753D 
 12145      66707634 
 12145      2D73702D 
 12146 0750 65637469 		.ascii	"ections -ffat-lto-objects\000"
 12146      6F6E7320 
 12146      2D666661 
 12146      742D6C74 
 12146      6F2D6F62 
 12147              	.LASF174:
 12148 076a 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 12148      4C455F45 
 12148      56545F47 
 12148      41505F52 
 12148      45534F4C 
 12149              	.LASF80:
 12150 0791 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 12150      41525F52 
 12150      414E4745 
 12150      5F434F4E 
 12150      445F4245 
 12151              	.LASF225:
 12152 07a9 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 12152      4C455F43 
 12152      4F4E4E5F 
 12152      53544154 
 12152      455F434C 
 12153              	.LASF196:
 12154 07da 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 12154      4C455F45 
 12154      56545F47 
 12154      41545443 
 12154      5F455845 
 12155              	.LASF343:
 12156 07fa 78546173 		.ascii	"xTaskToResume\000"
 12156      6B546F52 
 12156      6573756D 
 12156      6500
 12157              	.LASF388:
 12158 0808 70785469 		.ascii	"pxTicksToWait\000"
 12158      636B7354 
 12158      6F576169 
 12158      7400
 12159              	.LASF447:
 12160 0816 54696D65 		.ascii	"Timer_PPG_config\000"
 12160      725F5050 
 12160      475F636F 
 12160      6E666967 
 12160      00
 12161              	.LASF183:
 12162 0827 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 12162      4C455F45 
 12162      56545F47 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 319


 12162      41545443 
 12162      5F584348 
 12163              	.LASF199:
 12164 0846 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 12164      4C455F45 
 12164      56545F47 
 12164      41545453 
 12164      5F48414E 
 12165              	.LASF73:
 12166 0868 72785374 		.ascii	"rxStatus\000"
 12166      61747573 
 12166      00
 12167              	.LASF328:
 12168 0871 78436F6E 		.ascii	"xConstTickCount\000"
 12168      73745469 
 12168      636B436F 
 12168      756E7400 
 12169              	.LASF464:
 12170 0881 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 12170      65724372 
 12170      65617465 
 12170      54696D65 
 12170      72546173 
 12171              	.LASF188:
 12172 0897 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 12172      4C455F45 
 12172      56545F47 
 12172      41545443 
 12172      5F524541 
 12173              	.LASF305:
 12174 08b1 74736B54 		.ascii	"tskTCB\000"
 12174      434200
 12175              	.LASF45:
 12176 08b8 696E7465 		.ascii	"interruptSources\000"
 12176      72727570 
 12176      74536F75 
 12176      72636573 
 12176      00
 12177              	.LASF413:
 12178 08c9 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 12178      6B47656E 
 12178      65726963 
 12178      4E6F7469 
 12178      66794672 
 12179              	.LASF263:
 12180 08e3 55426173 		.ascii	"UBaseType_t\000"
 12180      65547970 
 12180      655F7400 
 12181              	.LASF224:
 12182 08ef 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 12182      4C455F43 
 12182      4F4E4E5F 
 12182      53544154 
 12182      455F4449 
 12183              	.LASF121:
 12184 090e 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 12184      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 320


 12184      56545F53 
 12184      45545F52 
 12184      50415F45 
 12185              	.LASF341:
 12186 0931 78596965 		.ascii	"xYieldRequired\000"
 12186      6C645265 
 12186      71756972 
 12186      656400
 12187              	.LASF102:
 12188 0940 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 12188      4C455F45 
 12188      56545F53 
 12188      5441434B 
 12188      5F4F4E00 
 12189              	.LASF132:
 12190 0954 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 12190      4C455F45 
 12190      56545F4C 
 12190      4C5F434E 
 12190      54524C5F 
 12191              	.LASF307:
 12192 097e 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 12192      6967696E 
 12192      616C4241 
 12192      53455052 
 12192      4900
 12193              	.LASF407:
 12194 0990 78546173 		.ascii	"xTaskGenericNotify\000"
 12194      6B47656E 
 12194      65726963 
 12194      4E6F7469 
 12194      667900
 12195              	.LASF198:
 12196 09a3 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 12196      4C455F45 
 12196      56545F47 
 12196      41545443 
 12196      5F48414E 
 12197              	.LASF14:
 12198 09c5 6C6F6E67 		.ascii	"long long unsigned int\000"
 12198      206C6F6E 
 12198      6720756E 
 12198      7369676E 
 12198      65642069 
 12199              	.LASF118:
 12200 09dc 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 12200      4C455F45 
 12200      56545F47 
 12200      45545F50 
 12200      4545525F 
 12201              	.LASF450:
 12202 09fd 5254435F 		.ascii	"RTC_dstConfig\000"
 12202      64737443 
 12202      6F6E6669 
 12202      6700
 12203              	.LASF382:
 12204 0a0b 7078556E 		.ascii	"pxUnblockedTCB\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 321


 12204      626C6F63 
 12204      6B656454 
 12204      434200
 12205              	.LASF101:
 12206 0a1a 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 12206      4C455F45 
 12206      56545F49 
 12206      4E56414C 
 12206      494400
 12207              	.LASF329:
 12208 0a2d 75735374 		.ascii	"usStackDepth\000"
 12208      61636B44 
 12208      65707468 
 12208      00
 12209              	.LASF401:
 12210 0a3a 78436C65 		.ascii	"xClearCountOnExit\000"
 12210      6172436F 
 12210      756E744F 
 12210      6E457869 
 12210      7400
 12211              	.LASF104:
 12212 0a4c 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 12212      4C455F45 
 12212      56545F53 
 12212      5441434B 
 12212      5F425553 
 12213              	.LASF71:
 12214 0a69 63795F73 		.ascii	"cy_stc_scb_uart_context\000"
 12214      74635F73 
 12214      63625F75 
 12214      6172745F 
 12214      636F6E74 
 12215              	.LASF119:
 12216 0a81 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 12216      4C455F45 
 12216      56545F47 
 12216      45545F4C 
 12216      4F43414C 
 12217              	.LASF49:
 12218 0aa3 72656C6F 		.ascii	"reloadInput\000"
 12218      6164496E 
 12218      70757400 
 12219              	.LASF255:
 12220 0aaf 6E756D43 		.ascii	"numChannels\000"
 12220      68616E6E 
 12220      656C7300 
 12221              	.LASF283:
 12222 0abb 65536574 		.ascii	"eSetValueWithOverwrite\000"
 12222      56616C75 
 12222      65576974 
 12222      684F7665 
 12222      72777269 
 12223              	.LASF200:
 12224 0ad2 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 12224      4C455F45 
 12224      56545F47 
 12224      41545453 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 322


 12224      5F444154 
 12225              	.LASF116:
 12226 0af7 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 12226      4C455F45 
 12226      56545F47 
 12226      45545F44 
 12226      4154415F 
 12227              	.LASF350:
 12228 0b1b 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 12228      6B476574 
 12228      5469636B 
 12228      436F756E 
 12228      7446726F 
 12229              	.LASF335:
 12230 0b34 75785361 		.ascii	"uxSavedInterruptState\000"
 12230      76656449 
 12230      6E746572 
 12230      72757074 
 12230      53746174 
 12231              	.LASF404:
 12232 0b4a 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 12232      7473546F 
 12232      436C6561 
 12232      724F6E45 
 12232      6E747279 
 12233              	.LASF223:
 12234 0b5f 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 12234      6E5F626C 
 12234      655F6164 
 12234      765F7374 
 12234      6174655F 
 12235              	.LASF136:
 12236 0b75 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 12236      4C455F45 
 12236      56545F47 
 12236      45545F52 
 12236      5353495F 
 12237              	.LASF422:
 12238 0b92 7850656E 		.ascii	"xPendingReadyList\000"
 12238      64696E67 
 12238      52656164 
 12238      794C6973 
 12238      7400
 12239              	.LASF265:
 12240 0ba4 784C4953 		.ascii	"xLIST_ITEM\000"
 12240      545F4954 
 12240      454D00
 12241              	.LASF344:
 12242 0baf 78546173 		.ascii	"xTaskResumeFromISR\000"
 12242      6B526573 
 12242      756D6546 
 12242      726F6D49 
 12242      535200
 12243              	.LASF89:
 12244 0bc2 72616E67 		.ascii	"rangeThres\000"
 12244      65546872 
 12244      657300
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 323


 12245              	.LASF220:
 12246 0bcd 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 12246      4C455F41 
 12246      44565F53 
 12246      54415445 
 12246      5F414456 
 12247              	.LASF8:
 12248 0bec 5F5F7569 		.ascii	"__uint16_t\000"
 12248      6E743136 
 12248      5F7400
 12249              	.LASF26:
 12250 0bf7 63795F65 		.ascii	"cy_en_rtc_dst_format_t\000"
 12250      6E5F7274 
 12250      635F6473 
 12250      745F666F 
 12250      726D6174 
 12251              	.LASF395:
 12252 0c0e 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 12252      736B4765 
 12252      74546872 
 12252      6561644C 
 12252      6F63616C 
 12253              	.LASF396:
 12254 0c31 70765265 		.ascii	"pvReturn\000"
 12254      7475726E 
 12254      00
 12255              	.LASF355:
 12256 0c3a 70785465 		.ascii	"pxTemp\000"
 12256      6D7000
 12257              	.LASF162:
 12258 0c41 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 12258      4C455F45 
 12258      56545F47 
 12258      41505F45 
 12258      4E435259 
 12259              	.LASF134:
 12260 0c5f 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 12260      4C455F45 
 12260      56545F53 
 12260      45545F44 
 12260      45564943 
 12261              	.LASF100:
 12262 0c83 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 12262      74635F73 
 12262      61725F63 
 12262      6F6E6669 
 12262      675F7400 
 12263              	.LASF217:
 12264 0c97 61747449 		.ascii	"attId\000"
 12264      6400
 12265              	.LASF85:
 12266 0c9d 6374726C 		.ascii	"ctrl\000"
 12266      00
 12267              	.LASF389:
 12268 0ca2 76546173 		.ascii	"vTaskSuspendAll\000"
 12268      6B537573 
 12268      70656E64 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 324


 12268      416C6C00 
 12269              	.LASF228:
 12270 0cb2 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 12270      4C455F43 
 12270      4F4E4E5F 
 12270      53544154 
 12270      455F434C 
 12271              	.LASF46:
 12272 0cdc 63617074 		.ascii	"captureInputMode\000"
 12272      75726549 
 12272      6E707574 
 12272      4D6F6465 
 12272      00
 12273              	.LASF168:
 12274 0ced 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 12274      4C455F45 
 12274      56545F47 
 12274      41505F4F 
 12274      4F425F47 
 12275              	.LASF302:
 12276 0d17 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 12276      72656164 
 12276      4C6F6361 
 12276      6C53746F 
 12276      72616765 
 12277              	.LASF289:
 12278 0d34 54696D65 		.ascii	"TimeOut_t\000"
 12278      4F75745F 
 12278      7400
 12279              	.LASF81:
 12280 0d3e 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 12280      41525F52 
 12280      414E4745 
 12280      5F434F4E 
 12280      445F494E 
 12281              	.LASF61:
 12282 0d57 72784275 		.ascii	"rxBuf\000"
 12282      6600
 12283              	.LASF160:
 12284 0d5d 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 12284      4C455F45 
 12284      56545F47 
 12284      41505F44 
 12284      45564943 
 12285              	.LASF133:
 12286 0d7d 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 12286      4C455F45 
 12286      56545F53 
 12286      4F46545F 
 12286      52455345 
 12287              	.LASF241:
 12288 0d9c 43595F42 		.ascii	"CY_BLE_DIS_PNP_ID\000"
 12288      4C455F44 
 12288      49535F50 
 12288      4E505F49 
 12288      4400
 12289              	.LASF285:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 325


 12290 0dae 654E6F74 		.ascii	"eNotifyAction\000"
 12290      69667941 
 12290      6374696F 
 12290      6E00
 12291              	.LASF194:
 12292 0dbc 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 12292      4C455F45 
 12292      56545F47 
 12292      41545453 
 12292      5F505245 
 12293              	.LASF4:
 12294 0ddc 73697A65 		.ascii	"size_t\000"
 12294      5F7400
 12295              	.LASF88:
 12296 0de3 73616D70 		.ascii	"sampleTime23\000"
 12296      6C655469 
 12296      6D653233 
 12296      00
 12297              	.LASF67:
 12298 0df0 63624576 		.ascii	"cbEvents\000"
 12298      656E7473 
 12298      00
 12299              	.LASF282:
 12300 0df9 65496E63 		.ascii	"eIncrement\000"
 12300      72656D65 
 12300      6E7400
 12301              	.LASF22:
 12302 0e04 646F7562 		.ascii	"double\000"
 12302      6C6500
 12303              	.LASF272:
 12304 0e0b 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 12304      495F4C49 
 12304      53545F49 
 12304      54454D00 
 12305              	.LASF380:
 12306 0e1b 78576169 		.ascii	"xWaitIndefinitely\000"
 12306      74496E64 
 12306      6566696E 
 12306      6974656C 
 12306      7900
 12307              	.LASF166:
 12308 0e2d 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 12308      4C455F45 
 12308      56545F47 
 12308      41505F4E 
 12308      554D4552 
 12309              	.LASF35:
 12310 0e57 73746F70 		.ascii	"stopDst\000"
 12310      44737400 
 12311              	.LASF215:
 12312 0e5f 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 12312      4C455F45 
 12312      56545F4D 
 12312      415800
 12313              	.LASF427:
 12314 0e6e 78546963 		.ascii	"xTickCount\000"
 12314      6B436F75 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 326


 12314      6E7400
 12315              	.LASF187:
 12316 0e79 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 12316      4C455F45 
 12316      56545F47 
 12316      41545443 
 12316      5F46494E 
 12317              	.LASF30:
 12318 0ea1 7765656B 		.ascii	"weekOfMonth\000"
 12318      4F664D6F 
 12318      6E746800 
 12319              	.LASF58:
 12320 0ead 63795F73 		.ascii	"cy_stc_tcpwm_counter_config\000"
 12320      74635F74 
 12320      6370776D 
 12320      5F636F75 
 12320      6E746572 
 12321              	.LASF210:
 12322 0ec9 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 12322      4C455F45 
 12322      56545F4C 
 12322      32434150 
 12322      5F434246 
 12323              	.LASF347:
 12324 0eeb 76546173 		.ascii	"vTaskEndScheduler\000"
 12324      6B456E64 
 12324      53636865 
 12324      64756C65 
 12324      7200
 12325              	.LASF332:
 12326 0efd 75785461 		.ascii	"uxTaskPriorityGet\000"
 12326      736B5072 
 12326      696F7269 
 12326      74794765 
 12326      7400
 12327              	.LASF141:
 12328 0f0f 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 12328      4C455F45 
 12328      56545F52 
 12328      414E444F 
 12328      4D5F4E55 
 12329              	.LASF221:
 12330 0f32 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 12330      4C455F41 
 12330      44565F53 
 12330      54415445 
 12330      5F414456 
 12331              	.LASF458:
 12332 0f4f 764C6973 		.ascii	"vListInsertEnd\000"
 12332      74496E73 
 12332      65727445 
 12332      6E6400
 12333              	.LASF171:
 12334 0f5e 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 12334      4C455F45 
 12334      56545F47 
 12334      41505F53 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 327


 12334      4D505F4E 
 12335              	.LASF425:
 12336 0f86 78537573 		.ascii	"xSuspendedTaskList\000"
 12336      70656E64 
 12336      65645461 
 12336      736B4C69 
 12336      737400
 12337              	.LASF114:
 12338 0f99 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 12338      4C455F45 
 12338      56545F53 
 12338      45545F44 
 12338      4154415F 
 12339              	.LASF316:
 12340 0fbd 70634E61 		.ascii	"pcName\000"
 12340      6D6500
 12341              	.LASF192:
 12342 0fc4 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 12342      4C455F45 
 12342      56545F47 
 12342      41545443 
 12342      5F575249 
 12343              	.LASF392:
 12344 0fdf 78546173 		.ascii	"xTaskToSet\000"
 12344      6B546F53 
 12344      657400
 12345              	.LASF421:
 12346 0fea 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 12346      6572666C 
 12346      6F774465 
 12346      6C617965 
 12346      64546173 
 12347              	.LASF231:
 12348 1004 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 12348      4C455F43 
 12348      4F4E4E5F 
 12348      53544154 
 12348      455F434C 
 12349              	.LASF75:
 12350 1028 72785269 		.ascii	"rxRingBufSize\000"
 12350      6E674275 
 12350      6653697A 
 12350      6500
 12351              	.LASF376:
 12352 1036 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 12352      6B506C61 
 12352      63654F6E 
 12352      4576656E 
 12352      744C6973 
 12353              	.LASF363:
 12354 104c 76546173 		.ascii	"vTaskDelay\000"
 12354      6B44656C 
 12354      617900
 12355              	.LASF206:
 12356 1057 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 12356      4C455F45 
 12356      56545F4C 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 328


 12356      32434150 
 12356      5F434F4D 
 12357              	.LASF111:
 12358 1074 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 12358      4C455F45 
 12358      56545F47 
 12358      45545F43 
 12358      48414E4E 
 12359              	.LASF28:
 12360 1098 686F7572 		.ascii	"hour\000"
 12360      00
 12361              	.LASF247:
 12362 109d 43595F42 		.ascii	"CY_BLE_HTS_CHAR_COUNT\000"
 12362      4C455F48 
 12362      54535F43 
 12362      4841525F 
 12362      434F554E 
 12363              	.LASF312:
 12364 10b3 70727644 		.ascii	"prvDeleteTCB\000"
 12364      656C6574 
 12364      65544342 
 12364      00
 12365              	.LASF105:
 12366 10c0 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 12366      4C455F45 
 12366      56545F4D 
 12366      454D4F52 
 12366      595F5245 
 12367              	.LASF99:
 12368 10da 76726566 		.ascii	"vrefMvValue\000"
 12368      4D765661 
 12368      6C756500 
 12369              	.LASF303:
 12370 10e6 756C4E6F 		.ascii	"ulNotifiedValue\000"
 12370      74696669 
 12370      65645661 
 12370      6C756500 
 12371              	.LASF152:
 12372 10f6 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 12372      4C455F45 
 12372      56545F53 
 12372      45545F43 
 12372      4F4E4E5F 
 12373              	.LASF286:
 12374 111c 7854494D 		.ascii	"xTIME_OUT\000"
 12374      455F4F55 
 12374      5400
 12375              	.LASF222:
 12376 1126 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 12376      4C455F41 
 12376      44565F53 
 12376      54415445 
 12376      5F53544F 
 12377              	.LASF251:
 12378 1146 43595F42 		.ascii	"CY_BLE_SRVI_GAP\000"
 12378      4C455F53 
 12378      5256495F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 329


 12378      47415000 
 12379              	.LASF229:
 12380 1156 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 12380      4C455F43 
 12380      4F4E4E5F 
 12380      53544154 
 12380      455F434C 
 12381              	.LASF47:
 12382 1180 63617074 		.ascii	"captureInput\000"
 12382      75726549 
 12382      6E707574 
 12382      00
 12383              	.LASF82:
 12384 118d 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 12384      41525F52 
 12384      414E4745 
 12384      5F434F4E 
 12384      445F4142 
 12385              	.LASF381:
 12386 11a5 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 12386      6B52656D 
 12386      6F766546 
 12386      726F6D45 
 12386      76656E74 
 12387              	.LASF16:
 12388 11be 63686172 		.ascii	"char\000"
 12388      00
 12389              	.LASF143:
 12390 11c3 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 12390      4C455F45 
 12390      56545F41 
 12390      45535F43 
 12390      434D5F45 
 12391              	.LASF271:
 12392 11e7 4C697374 		.ascii	"ListItem_t\000"
 12392      4974656D 
 12392      5F7400
 12393              	.LASF91:
 12394 11f2 6368616E 		.ascii	"chanEn\000"
 12394      456E00
 12395              	.LASF284:
 12396 11f9 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 12396      56616C75 
 12396      65576974 
 12396      686F7574 
 12396      4F766572 
 12397              	.LASF77:
 12398 1213 72785269 		.ascii	"rxRingBufTail\000"
 12398      6E674275 
 12398      66546169 
 12398      6C00
 12399              	.LASF403:
 12400 1221 78546173 		.ascii	"xTaskNotifyWait\000"
 12400      6B4E6F74 
 12400      69667957 
 12400      61697400 
 12401              	.LASF304:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 330


 12402 1231 75634E6F 		.ascii	"ucNotifyState\000"
 12402      74696679 
 12402      53746174 
 12402      6500
 12403              	.LASF317:
 12404 123f 756C5374 		.ascii	"ulStackDepth\000"
 12404      61636B44 
 12404      65707468 
 12404      00
 12405              	.LASF234:
 12406 124c 43595F42 		.ascii	"CY_BLE_DIS_MODEL_NUMBER\000"
 12406      4C455F44 
 12406      49535F4D 
 12406      4F44454C 
 12406      5F4E554D 
 12407              	.LASF362:
 12408 1264 7853686F 		.ascii	"xShouldDelay\000"
 12408      756C6444 
 12408      656C6179 
 12408      00
 12409              	.LASF164:
 12410 1271 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 12410      4C455F45 
 12410      56545F47 
 12410      4150435F 
 12410      5343414E 
 12411              	.LASF55:
 12412 1291 636F756E 		.ascii	"countInput\000"
 12412      74496E70 
 12412      757400
 12413              	.LASF368:
 12414 129c 70727649 		.ascii	"prvIdleTask\000"
 12414      646C6554 
 12414      61736B00 
 12415              	.LASF185:
 12416 12a8 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 12416      4C455F45 
 12416      56545F47 
 12416      41545443 
 12416      5F524541 
 12417              	.LASF38:
 12418 12ca 636C6F63 		.ascii	"clockPrescaler\000"
 12418      6B507265 
 12418      7363616C 
 12418      657200
 12419              	.LASF277:
 12420 12d9 784C6973 		.ascii	"xListEnd\000"
 12420      74456E64 
 12420      00
 12421              	.LASF366:
 12422 12e2 784C6973 		.ascii	"xListIsEmpty\000"
 12422      74497345 
 12422      6D707479 
 12422      00
 12423              	.LASF449:
 12424 12ef 5254435F 		.ascii	"RTC_rtcDstStatus\000"
 12424      72746344 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 331


 12424      73745374 
 12424      61747573 
 12424      00
 12425              	.LASF122:
 12426 1300 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 12426      4C455F45 
 12426      56545F53 
 12426      45545F48 
 12426      4F53545F 
 12427              	.LASF112:
 12428 1325 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 12428      4C455F45 
 12428      56545F4C 
 12428      455F5345 
 12428      545F4556 
 12429              	.LASF63:
 12430 134b 72784275 		.ascii	"rxBufIdx\000"
 12430      66496478 
 12430      00
 12431              	.LASF273:
 12432 1354 4D696E69 		.ascii	"MiniListItem_t\000"
 12432      4C697374 
 12432      4974656D 
 12432      5F7400
 12433              	.LASF470:
 12434 1363 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0"
 12434      72617465 
 12434      645F536F 
 12434      75726365 
 12434      5C50536F 
 12435 1391 5C536F75 		.ascii	"\\Source\\tasks.c\000"
 12435      7263655C 
 12435      7461736B 
 12435      732E6300 
 12436              	.LASF379:
 12437 13a1 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 12437      6B506C61 
 12437      63654F6E 
 12437      4576656E 
 12437      744C6973 
 12438              	.LASF264:
 12439 13c1 5469636B 		.ascii	"TickType_t\000"
 12439      54797065 
 12439      5F7400
 12440              	.LASF68:
 12441 13cc 696E6974 		.ascii	"initKey\000"
 12441      4B657900 
 12442              	.LASF323:
 12443 13d4 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 12443      64644E65 
 12443      77546173 
 12443      6B546F52 
 12443      65616479 
 12444              	.LASF17:
 12445 13ed 75696E74 		.ascii	"uint8_t\000"
 12445      385F7400 
 12446              	.LASF60:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 332


 12447 13f5 73746174 		.ascii	"status\000"
 12447      757300
 12448              	.LASF24:
 12449 13fc 43595F52 		.ascii	"CY_RTC_DST_RELATIVE\000"
 12449      54435F44 
 12449      53545F52 
 12449      454C4154 
 12449      49564500 
 12450              	.LASF145:
 12451 1410 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 12451      4C455F45 
 12451      56545F53 
 12451      45545F53 
 12451      4C415645 
 12452              	.LASF320:
 12453 143b 70784E65 		.ascii	"pxNewTCB\000"
 12453      77544342 
 12453      00
 12454              	.LASF169:
 12455 1444 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 12455      4C455F45 
 12455      56545F47 
 12455      41505F45 
 12455      4E48414E 
 12456              	.LASF315:
 12457 1469 70785461 		.ascii	"pxTaskCode\000"
 12457      736B436F 
 12457      646500
 12458              	.LASF157:
 12459 1474 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 12459      4C455F45 
 12459      56545F47 
 12459      41505F41 
 12459      5554485F 
 12460              	.LASF128:
 12461 1491 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 12461      4C455F45 
 12461      56545F53 
 12461      45545F44 
 12461      45464155 
 12462              	.LASF97:
 12463 14b5 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 12463      77697463 
 12463      68537143 
 12463      74726C00 
 12464              	.LASF439:
 12465 14c5 63795F62 		.ascii	"cy_ble_advState\000"
 12465      6C655F61 
 12465      64765374 
 12465      61746500 
 12466              	.LASF294:
 12467 14d5 4D656D6F 		.ascii	"MemoryRegion_t\000"
 12467      72795265 
 12467      67696F6E 
 12467      5F7400
 12468              	.LASF434:
 12469 14e4 784E6578 		.ascii	"xNextTaskUnblockTime\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 333


 12469      74546173 
 12469      6B556E62 
 12469      6C6F636B 
 12469      54696D65 
 12470              	.LASF70:
 12471 14f9 63795F63 		.ascii	"cy_cb_scb_uart_handle_events_t\000"
 12471      625F7363 
 12471      625F7561 
 12471      72745F68 
 12471      616E646C 
 12472              	.LASF472:
 12473 1518 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 12473      72745261 
 12473      69736542 
 12473      41534550 
 12473      524900
 12474              	.LASF90:
 12475 152b 72616E67 		.ascii	"rangeCond\000"
 12475      65436F6E 
 12475      6400
 12476              	.LASF455:
 12477 1535 7078506F 		.ascii	"pxPortInitialiseStack\000"
 12477      7274496E 
 12477      69746961 
 12477      6C697365 
 12477      53746163 
 12478              	.LASF151:
 12479 154b 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 12479      4C455F45 
 12479      56545F53 
 12479      45545F43 
 12479      455F4C45 
 12480              	.LASF150:
 12481 156d 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 12481      4C455F45 
 12481      56545F53 
 12481      45545F45 
 12481      56454E54 
 12482              	.LASF1:
 12483 1590 6C6F6E67 		.ascii	"long long int\000"
 12483      206C6F6E 
 12483      6720696E 
 12483      7400
 12484              	.LASF245:
 12485 159e 43595F42 		.ascii	"CY_BLE_HTS_INTERM_TEMP\000"
 12485      4C455F48 
 12485      54535F49 
 12485      4E544552 
 12485      4D5F5445 
 12486              	.LASF208:
 12487 15b5 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 12487      4C455F45 
 12487      56545F4C 
 12487      32434150 
 12487      5F434246 
 12488              	.LASF333:
 12489 15d4 75785265 		.ascii	"uxReturn\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 334


 12489      7475726E 
 12489      00
 12490              	.LASF50:
 12491 15dd 73746172 		.ascii	"startInputMode\000"
 12491      74496E70 
 12491      75744D6F 
 12491      646500
 12492              	.LASF243:
 12493 15ec 43595F42 		.ascii	"CY_BLE_HTS_TEMP_MEASURE\000"
 12493      4C455F48 
 12493      54535F54 
 12493      454D505F 
 12493      4D454153 
 12494              	.LASF177:
 12495 1604 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 12495      4C455F45 
 12495      56545F47 
 12495      41505F43 
 12495      4F4E4E5F 
 12496              	.LASF124:
 12497 161d 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 12497      4C455F45 
 12497      56545F52 
 12497      454D4F56 
 12497      455F4445 
 12498              	.LASF308:
 12499 164d 756C4E65 		.ascii	"ulNewBASEPRI\000"
 12499      77424153 
 12499      45505249 
 12499      00
 12500              	.LASF113:
 12501 165a 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 12501      4C455F45 
 12501      56545F4C 
 12501      455F5049 
 12501      4E475F41 
 12502              	.LASF292:
 12503 167a 756C4C65 		.ascii	"ulLengthInBytes\000"
 12503      6E677468 
 12503      496E4279 
 12503      74657300 
 12504              	.LASF262:
 12505 168a 42617365 		.ascii	"BaseType_t\000"
 12505      54797065 
 12505      5F7400
 12506              	.LASF371:
 12507 1695 756C4368 		.ascii	"ulCheckValue\000"
 12507      65636B56 
 12507      616C7565 
 12507      00
 12508              	.LASF471:
 12509 16a2 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 12509      73657273 
 12509      5C636F64 
 12509      79675C67 
 12509      69745C70 
 12510 16d0 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\CE218138_BLE_Thermometer_RTOS01.c"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 335


 12510      54435F49 
 12510      4D552E63 
 12510      7964736E 
 12510      5C434532 
 12511 1702 7964736E 		.ascii	"ydsn\000"
 12511      00
 12512              	.LASF311:
 12513 1707 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 12513      65736574 
 12513      4E657874 
 12513      5461736B 
 12513      556E626C 
 12514              	.LASF288:
 12515 1723 7854696D 		.ascii	"xTimeOnEntering\000"
 12515      654F6E45 
 12515      6E746572 
 12515      696E6700 
 12516              	.LASF338:
 12517 1733 75784E65 		.ascii	"uxNewPriority\000"
 12517      77507269 
 12517      6F726974 
 12517      7900
 12518              	.LASF140:
 12519 1741 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 12519      4C455F45 
 12519      56545F53 
 12519      45545F43 
 12519      4C4B5F43 
 12520              	.LASF260:
 12521 1764 5461736B 		.ascii	"TaskFunction_t\000"
 12521      46756E63 
 12521      74696F6E 
 12521      5F7400
 12522              	.LASF267:
 12523 1773 70784E65 		.ascii	"pxNext\000"
 12523      787400
 12524              	.LASF411:
 12525 177a 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 12525      72657669 
 12525      6F75734E 
 12525      6F746966 
 12525      69636174 
 12526              	.LASF233:
 12527 1797 43595F42 		.ascii	"CY_BLE_DIS_MANUFACTURER_NAME\000"
 12527      4C455F44 
 12527      49535F4D 
 12527      414E5546 
 12527      41435455 
 12528              	.LASF453:
 12529 17b4 6D656D73 		.ascii	"memset\000"
 12529      657400
 12530              	.LASF386:
 12531 17bb 70785469 		.ascii	"pxTimeOut\000"
 12531      6D654F75 
 12531      7400
 12532              	.LASF334:
 12533 17c5 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 336


 12533      736B5072 
 12533      696F7269 
 12533      74794765 
 12533      7446726F 
 12534              	.LASF69:
 12535 17de 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 12535      74635F73 
 12535      63625F73 
 12535      70695F63 
 12535      6F6E7465 
 12536              	.LASF409:
 12537 17f7 756C5661 		.ascii	"ulValue\000"
 12537      6C756500 
 12538              	.LASF76:
 12539 17ff 72785269 		.ascii	"rxRingBufHead\000"
 12539      6E674275 
 12539      66486561 
 12539      6400
 12540              	.LASF348:
 12541 180d 78546173 		.ascii	"xTaskGetTickCount\000"
 12541      6B476574 
 12541      5469636B 
 12541      436F756E 
 12541      7400
 12542              	.LASF48:
 12543 181f 72656C6F 		.ascii	"reloadInputMode\000"
 12543      6164496E 
 12543      7075744D 
 12543      6F646500 
 12544              	.LASF117:
 12545 182f 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 12545      4C455F45 
 12545      56545F44 
 12545      4154415F 
 12545      4C454E47 
 12546              	.LASF92:
 12547 184d 6368616E 		.ascii	"chanConfig\000"
 12547      436F6E66 
 12547      696700
 12548              	.LASF165:
 12549 1858 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 12549      4C455F45 
 12549      56545F47 
 12549      41505F4B 
 12549      4559494E 
 12550              	.LASF125:
 12551 187d 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 12551      4C455F45 
 12551      56545F41 
 12551      44445F44 
 12551      45564943 
 12552              	.LASF65:
 12553 18aa 74784275 		.ascii	"txBufSize\000"
 12553      6653697A 
 12553      6500
 12554              	.LASF433:
 12555 18b4 75785461 		.ascii	"uxTaskNumber\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 337


 12555      736B4E75 
 12555      6D626572 
 12555      00
 12556              	.LASF214:
 12557 18c1 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 12557      4C455F45 
 12557      56545F4C 
 12557      32434150 
 12557      5F434246 
 12558              	.LASF279:
 12559 18e6 5461736B 		.ascii	"TaskHandle_t\000"
 12559      48616E64 
 12559      6C655F74 
 12559      00
 12560              	.LASF410:
 12561 18f3 65416374 		.ascii	"eAction\000"
 12561      696F6E00 
 12562              	.LASF474:
 12563 18fb 756C4E65 		.ascii	"ulNewMaskValue\000"
 12563      774D6173 
 12563      6B56616C 
 12563      756500
 12564              	.LASF259:
 12565 190a 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 12565      434F4E46 
 12565      49475F53 
 12565      54525543 
 12565      5400
 12566              	.LASF399:
 12567 191c 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 12567      736B5265 
 12567      73657445 
 12567      76656E74 
 12567      4974656D 
 12568              	.LASF337:
 12569 1936 76546173 		.ascii	"vTaskPrioritySet\000"
 12569      6B507269 
 12569      6F726974 
 12569      79536574 
 12569      00
 12570              	.LASF127:
 12571 1947 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 12571      4C455F45 
 12571      56545F47 
 12571      45545F50 
 12571      48595F43 
 12572              	.LASF153:
 12573 1963 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 12573      4C455F45 
 12573      56545F47 
 12573      4150435F 
 12573      5343414E 
 12574              	.LASF207:
 12575 1988 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 12575      4C455F45 
 12575      56545F4C 
 12575      32434150 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 338


 12575      5F434246 
 12576              	.LASF173:
 12577 19a7 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 12577      4C455F45 
 12577      56545F47 
 12577      41505F4B 
 12577      4559535F 
 12578              	.LASF167:
 12579 19c8 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 12579      4C455F45 
 12579      56545F47 
 12579      41505F4B 
 12579      45595052 
 12580              	.LASF278:
 12581 19ed 4C697374 		.ascii	"List_t\000"
 12581      5F7400
 12582              	.LASF230:
 12583 19f4 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 12583      4C455F43 
 12583      4F4E4E5F 
 12583      53544154 
 12583      455F434C 
 12584              	.LASF226:
 12585 1a1f 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 12585      4C455F43 
 12585      4F4E4E5F 
 12585      53544154 
 12585      455F434F 
 12586              	.LASF246:
 12587 1a3b 43595F42 		.ascii	"CY_BLE_HTS_MEASURE_INTERVAL\000"
 12587      4C455F48 
 12587      54535F4D 
 12587      45415355 
 12587      52455F49 
 12588              	.LASF64:
 12589 1a57 74784275 		.ascii	"txBuf\000"
 12589      6600
 12590              	.LASF40:
 12591 1a5d 636F756E 		.ascii	"countDirection\000"
 12591      74446972 
 12591      65637469 
 12591      6F6E00
 12592              	.LASF352:
 12593 1a6c 78546173 		.ascii	"xTaskToQuery\000"
 12593      6B546F51 
 12593      75657279 
 12593      00
 12594              	.LASF408:
 12595 1a79 78546173 		.ascii	"xTaskToNotify\000"
 12595      6B546F4E 
 12595      6F746966 
 12595      7900
 12596              	.LASF313:
 12597 1a87 78546173 		.ascii	"xTask\000"
 12597      6B00
 12598              	.LASF445:
 12599 1a8d 44454255 		.ascii	"DEBUG_UART_context\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 339


 12599      475F5541 
 12599      52545F63 
 12599      6F6E7465 
 12599      787400
 12600              	.LASF237:
 12601 1aa0 43595F42 		.ascii	"CY_BLE_DIS_FIRMWARE_REV\000"
 12601      4C455F44 
 12601      49535F46 
 12601      49524D57 
 12601      4152455F 
 12602              	.LASF281:
 12603 1ab8 65536574 		.ascii	"eSetBits\000"
 12603      42697473 
 12603      00
 12604              	.LASF74:
 12605 1ac1 72785269 		.ascii	"rxRingBuf\000"
 12605      6E674275 
 12605      6600
 12606              	.LASF2:
 12607 1acb 6C6F6E67 		.ascii	"long double\000"
 12607      20646F75 
 12607      626C6500 
 12608              	.LASF110:
 12609 1ad7 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 12609      4C455F45 
 12609      56545F52 
 12609      4541445F 
 12609      41555448 
 12610              	.LASF290:
 12611 1b00 784D454D 		.ascii	"xMEMORY_REGION\000"
 12611      4F52595F 
 12611      52454749 
 12611      4F4E00
 12612              	.LASF18:
 12613 1b0f 75696E74 		.ascii	"uint16_t\000"
 12613      31365F74 
 12613      00
 12614              	.LASF336:
 12615 1b18 76546173 		.ascii	"vTaskDelete\000"
 12615      6B44656C 
 12615      65746500 
 12616              	.LASF39:
 12617 1b24 72756E4D 		.ascii	"runMode\000"
 12617      6F646500 
 12618              	.LASF120:
 12619 1b2c 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 12619      4C455F45 
 12619      56545F53 
 12619      45545F52 
 12619      50415F54 
 12620              	.LASF369:
 12621 1b4b 76546173 		.ascii	"vTaskSwitchContext\000"
 12621      6B537769 
 12621      74636843 
 12621      6F6E7465 
 12621      787400
 12622              	.LASF432:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 340


 12623 1b5e 784E756D 		.ascii	"xNumOfOverflows\000"
 12623      4F664F76 
 12623      6572666C 
 12623      6F777300 
 12624              	.LASF108:
 12625 1b6e 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 12625      4C455F45 
 12625      56545F48 
 12625      41524457 
 12625      4152455F 
 12626              	.LASF56:
 12627 1b88 63795F73 		.ascii	"cy_stc_tcpwm_counter_config_t\000"
 12627      74635F74 
 12627      6370776D 
 12627      5F636F75 
 12627      6E746572 
 12628              	.LASF176:
 12629 1ba6 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 12629      4C455F45 
 12629      56545F47 
 12629      41505F43 
 12629      52454154 
 12630              	.LASF96:
 12631 1bd1 6D757853 		.ascii	"muxSwitch\000"
 12631      77697463 
 12631      6800
 12632              	.LASF451:
 12633 1bdb 70784375 		.ascii	"pxCurrentTCB\000"
 12633      7272656E 
 12633      74544342 
 12633      00
 12634              	.LASF6:
 12635 1be8 756E7369 		.ascii	"unsigned char\000"
 12635      676E6564 
 12635      20636861 
 12635      7200
 12636              	.LASF179:
 12637 1bf6 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 12637      4C455F45 
 12637      56545F47 
 12637      41545443 
 12637      5F455252 
 12638              	.LASF184:
 12639 1c11 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 12639      4C455F45 
 12639      56545F47 
 12639      41545443 
 12639      5F524541 
 12640              	.LASF123:
 12641 1c39 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 12641      4C455F45 
 12641      56545F41 
 12641      44445F44 
 12641      45564943 
 12642              	.LASF356:
 12643 1c64 78546173 		.ascii	"xTaskResumeAll\000"
 12643      6B526573 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 341


 12643      756D6541 
 12643      6C6C00
 12644              	.LASF191:
 12645 1c73 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 12645      4C455F45 
 12645      56545F47 
 12645      41545453 
 12645      5F575249 
 12646              	.LASF146:
 12647 1c8e 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 12647      4C455F45 
 12647      56545F53 
 12647      5441434B 
 12647      5F534855 
 12648              	.LASF218:
 12649 1cb1 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 12649      74635F62 
 12649      6C655F63 
 12649      6F6E6E5F 
 12649      68616E64 
 12650              	.LASF41:
 12651 1cca 636F6D70 		.ascii	"compareOrCapture\000"
 12651      6172654F 
 12651      72436170 
 12651      74757265 
 12651      00
 12652              	.LASF468:
 12653 1cdb 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 12653      6C696361 
 12653      74696F6E 
 12653      53746163 
 12653      6B4F7665 
 12654              	.LASF178:
 12655 1cf9 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 12655      4C455F45 
 12655      56545F47 
 12655      4150505F 
 12655      55504441 
 12656              	.LASF7:
 12657 1d27 73686F72 		.ascii	"short int\000"
 12657      7420696E 
 12657      7400
 12658              	.LASF444:
 12659 1d31 4144435F 		.ascii	"ADC_allConfigs\000"
 12659      616C6C43 
 12659      6F6E6669 
 12659      677300
 12660              	.LASF454:
 12661 1d40 764C6973 		.ascii	"vListInitialiseItem\000"
 12661      74496E69 
 12661      7469616C 
 12661      69736549 
 12661      74656D00 
 12662              	.LASF236:
 12663 1d54 43595F42 		.ascii	"CY_BLE_DIS_HARDWARE_REV\000"
 12663      4C455F44 
 12663      49535F48 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 342


 12663      41524457 
 12663      4152455F 
 12664              	.LASF314:
 12665 1d6c 70727649 		.ascii	"prvInitialiseNewTask\000"
 12665      6E697469 
 12665      616C6973 
 12665      654E6577 
 12665      5461736B 
 12666              	.LASF44:
 12667 1d81 656E6162 		.ascii	"enableCompareSwap\000"
 12667      6C65436F 
 12667      6D706172 
 12667      65537761 
 12667      7000
 12668              	.LASF318:
 12669 1d93 70765061 		.ascii	"pvParameters\000"
 12669      72616D65 
 12669      74657273 
 12669      00
 12670              	.LASF266:
 12671 1da0 78497465 		.ascii	"xItemValue\000"
 12671      6D56616C 
 12671      756500
 12672              	.LASF11:
 12673 1dab 6C6F6E67 		.ascii	"long int\000"
 12673      20696E74 
 12673      00
 12674              	.LASF25:
 12675 1db4 43595F52 		.ascii	"CY_RTC_DST_FIXED\000"
 12675      54435F44 
 12675      53545F46 
 12675      49584544 
 12675      00
 12676              	.LASF437:
 12677 1dc5 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12677      52784275 
 12677      66666572 
 12677      00
 12678              	.LASF54:
 12679 1dd2 636F756E 		.ascii	"countInputMode\000"
 12679      74496E70 
 12679      75744D6F 
 12679      646500
 12680              	.LASF149:
 12681 1de1 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 12681      4C455F45 
 12681      56545F41 
 12681      45535F43 
 12681      4D41435F 
 12682              	.LASF415:
 12683 1e02 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 12683      6B4E6F74 
 12683      69667947 
 12683      69766546 
 12683      726F6D49 
 12684              	.LASF420:
 12685 1e19 70784465 		.ascii	"pxDelayedTaskList\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 343


 12685      6C617965 
 12685      64546173 
 12685      6B4C6973 
 12685      7400
 12686              	.LASF270:
 12687 1e2b 7076436F 		.ascii	"pvContainer\000"
 12687      6E746169 
 12687      6E657200 
 12688              	.LASF367:
 12689 1e37 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 12689      61736B49 
 12689      73546173 
 12689      6B537573 
 12689      70656E64 
 12690              	.LASF78:
 12691 1e4e 74784C65 		.ascii	"txLeftToTransmit\000"
 12691      6674546F 
 12691      5472616E 
 12691      736D6974 
 12691      00
 12692              	.LASF354:
 12693 1e5f 78537769 		.ascii	"xSwitchRequired\000"
 12693      74636852 
 12693      65717569 
 12693      72656400 
 12694              	.LASF172:
 12695 1e6f 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 12695      4C455F45 
 12695      56545F47 
 12695      41505F44 
 12695      45564943 
 12696              	.LASF300:
 12697 1e97 70785374 		.ascii	"pxStack\000"
 12697      61636B00 
 12698              	.LASF34:
 12699 1e9f 73746172 		.ascii	"startDst\000"
 12699      74447374 
 12699      00
 12700              	.LASF330:
 12701 1ea8 78546173 		.ascii	"xTaskToDelete\000"
 12701      6B546F44 
 12701      656C6574 
 12701      6500
 12702              	.LASF400:
 12703 1eb6 756C5461 		.ascii	"ulTaskNotifyTake\000"
 12703      736B4E6F 
 12703      74696679 
 12703      54616B65 
 12703      00
 12704              	.LASF31:
 12705 1ec7 6461794F 		.ascii	"dayOfWeek\000"
 12705      66576565 
 12705      6B00
 12706              	.LASF375:
 12707 1ed1 78546173 		.ascii	"xTaskToSuspend\000"
 12707      6B546F53 
 12707      75737065 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 344


 12707      6E6400
 12708              	.LASF209:
 12709 1ee0 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 12709      4C455F45 
 12709      56545F4C 
 12709      32434150 
 12709      5F434246 
 12710              	.LASF387:
 12711 1f02 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 12711      6B436865 
 12711      636B466F 
 12711      7254696D 
 12711      654F7574 
 12712              	.LASF466:
 12713 1f17 76506F72 		.ascii	"vPortEndScheduler\000"
 12713      74456E64 
 12713      53636865 
 12713      64756C65 
 12713      7200
 12714              	.LASF452:
 12715 1f29 76506F72 		.ascii	"vPortFree\000"
 12715      74467265 
 12715      6500
 12716              	.LASF195:
 12717 1f33 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 12717      4C455F45 
 12717      56545F47 
 12717      41545453 
 12717      5F455845 
 12718              	.LASF109:
 12719 1f53 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 12719      4C455F45 
 12719      56545F57 
 12719      52495445 
 12719      5F415554 
 12720              	.LASF428:
 12721 1f7d 7578546F 		.ascii	"uxTopReadyPriority\000"
 12721      70526561 
 12721      64795072 
 12721      696F7269 
 12721      747900
 12722              	.LASF148:
 12723 1f90 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 12723      4C455F45 
 12723      56545F52 
 12723      4144494F 
 12723      5F564F4C 
 12724              	.LASF360:
 12725 1faf 70785072 		.ascii	"pxPreviousWakeTime\000"
 12725      6576696F 
 12725      75735761 
 12725      6B655469 
 12725      6D6500
 12726              	.LASF5:
 12727 1fc2 5F5F7569 		.ascii	"__uint8_t\000"
 12727      6E74385F 
 12727      7400
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 345


 12728              	.LASF438:
 12729 1fcc 63795F52 		.ascii	"cy_RTC_daysInMonthTbl\000"
 12729      54435F64 
 12729      61797349 
 12729      6E4D6F6E 
 12729      74685462 
 12730              	.LASF393:
 12731 1fe2 78496E64 		.ascii	"xIndex\000"
 12731      657800
 12732              	.LASF435:
 12733 1fe9 7849646C 		.ascii	"xIdleTaskHandle\000"
 12733      65546173 
 12733      6B48616E 
 12733      646C6500 
 12734              	.LASF448:
 12735 1ff9 54696D65 		.ascii	"Timer_IMU_config\000"
 12735      725F494D 
 12735      555F636F 
 12735      6E666967 
 12735      00
 12736              	.LASF418:
 12737 200a 7844656C 		.ascii	"xDelayedTaskList1\000"
 12737      61796564 
 12737      5461736B 
 12737      4C697374 
 12737      3100
 12738              	.LASF115:
 12739 201c 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 12739      4C455F45 
 12739      56545F53 
 12739      45545F53 
 12739      55474745 
 12740              	.LASF248:
 12741 204a 43595F42 		.ascii	"CY_BLE_HTS_CCCD\000"
 12741      4C455F48 
 12741      54535F43 
 12741      43434400 
 12742              	.LASF135:
 12743 205a 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 12743      4C455F45 
 12743      56545F47 
 12743      45545F44 
 12743      45564943 
 12744              	.LASF142:
 12745 207e 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 12745      4C455F45 
 12745      56545F41 
 12745      45535F45 
 12745      4E435259 
 12746              	.LASF137:
 12747 209e 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 12747      4C455F45 
 12747      56545F47 
 12747      45545F54 
 12747      585F5057 
 12748              	.LASF59:
 12749 20bd 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 346


 12749      74635F73 
 12749      63625F73 
 12749      70695F63 
 12749      6F6E7465 
 12750              	.LASF406:
 12751 20d4 70756C4E 		.ascii	"pulNotificationValue\000"
 12751      6F746966 
 12751      69636174 
 12751      696F6E56 
 12751      616C7565 
 12752              	.LASF249:
 12753 20e9 43595F42 		.ascii	"CY_BLE_HTS_VRD\000"
 12753      4C455F48 
 12753      54535F56 
 12753      524400
 12754              	.LASF309:
 12755 20f8 78526574 		.ascii	"xReturn\000"
 12755      75726E00 
 12756              	.LASF103:
 12757 2100 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 12757      4C455F45 
 12757      56545F54 
 12757      494D454F 
 12757      555400
 12758              	.LASF252:
 12759 2113 43595F42 		.ascii	"CY_BLE_SRVI_GATT\000"
 12759      4C455F53 
 12759      5256495F 
 12759      47415454 
 12759      00
 12760              	.LASF15:
 12761 2124 73697A65 		.ascii	"sizetype\000"
 12761      74797065 
 12761      00
 12762              	.LASF390:
 12763 212d 76546173 		.ascii	"vTaskMissedYield\000"
 12763      6B4D6973 
 12763      73656459 
 12763      69656C64 
 12763      00
 12764              	.LASF430:
 12765 213e 75785065 		.ascii	"uxPendedTicks\000"
 12765      6E646564 
 12765      5469636B 
 12765      7300
 12766              	.LASF13:
 12767 214c 6C6F6E67 		.ascii	"long unsigned int\000"
 12767      20756E73 
 12767      69676E65 
 12767      6420696E 
 12767      7400
 12768              	.LASF460:
 12769 215e 75784C69 		.ascii	"uxListRemove\000"
 12769      73745265 
 12769      6D6F7665 
 12769      00
 12770              	.LASF21:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 347


 12771 216b 666C6F61 		.ascii	"float\000"
 12771      7400
 12772              	.LASF351:
 12773 2171 70635461 		.ascii	"pcTaskGetName\000"
 12773      736B4765 
 12773      744E616D 
 12773      6500
 12774              	.LASF19:
 12775 217f 696E7433 		.ascii	"int32_t\000"
 12775      325F7400 
 12776              	.LASF147:
 12777 2187 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 12777      4C455F45 
 12777      56545F52 
 12777      4144494F 
 12777      5F54454D 
 12778              	.LASF349:
 12779 21a4 78546963 		.ascii	"xTicks\000"
 12779      6B7300
 12780              	.LASF346:
 12781 21ab 76546173 		.ascii	"vTaskStartScheduler\000"
 12781      6B537461 
 12781      72745363 
 12781      68656475 
 12781      6C657200 
 12782              	.LASF326:
 12783 21bf 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 12783      426C6F63 
 12783      6B496E64 
 12783      6566696E 
 12783      6974656C 
 12784              	.LASF370:
 12785 21d5 70756C53 		.ascii	"pulStack\000"
 12785      7461636B 
 12785      00
 12786              	.LASF86:
 12787 21de 73616D70 		.ascii	"sampleCtrl\000"
 12787      6C654374 
 12787      726C00
 12788              	.LASF291:
 12789 21e9 70764261 		.ascii	"pvBaseAddress\000"
 12789      73654164 
 12789      64726573 
 12789      7300
 12790              	.LASF364:
 12791 21f7 78546963 		.ascii	"xTicksToDelay\000"
 12791      6B73546F 
 12791      44656C61 
 12791      7900
 12792              	.LASF301:
 12793 2205 70635461 		.ascii	"pcTaskName\000"
 12793      736B4E61 
 12793      6D6500
 12794              	.LASF378:
 12795 2210 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 12795      6B506C61 
 12795      63654F6E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 348


 12795      556E6F72 
 12795      64657265 
 12796              	.LASF383:
 12797 222f 78546173 		.ascii	"xTaskRemoveFromUnorderedEventList\000"
 12797      6B52656D 
 12797      6F766546 
 12797      726F6D55 
 12797      6E6F7264 
 12798              	.LASF12:
 12799 2251 5F5F7569 		.ascii	"__uint32_t\000"
 12799      6E743332 
 12799      5F7400
 12800              	.LASF250:
 12801 225c 43595F42 		.ascii	"CY_BLE_HTS_DESCR_COUNT\000"
 12801      4C455F48 
 12801      54535F44 
 12801      45534352 
 12801      5F434F55 
 12802              	.LASF456:
 12803 2273 764C6973 		.ascii	"vListInitialise\000"
 12803      74496E69 
 12803      7469616C 
 12803      69736500 
 12804              	.LASF463:
 12805 2283 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 12805      7456616C 
 12805      69646174 
 12805      65496E74 
 12805      65727275 
 12806              	.LASF203:
 12807 22a2 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 12807      4C455F45 
 12807      56545F47 
 12807      41545443 
 12807      5F4C4F4E 
 12808              	.LASF372:
 12809 22c6 7578546F 		.ascii	"uxTopPriority\000"
 12809      70507269 
 12809      6F726974 
 12809      7900
 12810              	.LASF126:
 12811 22d4 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 12811      4C455F45 
 12811      56545F52 
 12811      454D4F56 
 12811      455F4445 
 12812              	.LASF424:
 12813 2306 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 12813      6C657465 
 12813      64546173 
 12813      6B735761 
 12813      6974696E 
 12814              	.LASF359:
 12815 2323 76546173 		.ascii	"vTaskDelayUntil\000"
 12815      6B44656C 
 12815      6179556E 
 12815      74696C00 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 349


 12816              	.LASF53:
 12817 2333 73746F70 		.ascii	"stopInput\000"
 12817      496E7075 
 12817      7400
 12818              	.LASF170:
 12819 233d 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 12819      4C455F45 
 12819      56545F47 
 12819      4150435F 
 12819      44495245 
 12820              	.LASF298:
 12821 235f 78457665 		.ascii	"xEventListItem\000"
 12821      6E744C69 
 12821      73744974 
 12821      656D00
 12822              	.LASF205:
 12823 236e 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 12823      4C455F45 
 12823      56545F4C 
 12823      32434150 
 12823      5F434F4E 
 12824              	.LASF340:
 12825 2395 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 12825      696F7269 
 12825      74795573 
 12825      65644F6E 
 12825      456E7472 
 12826              	.LASF306:
 12827 23ab 5443425F 		.ascii	"TCB_t\000"
 12827      7400
 12828              	.LASF325:
 12829 23b1 78546963 		.ascii	"xTicksToWait\000"
 12829      6B73546F 
 12829      57616974 
 12829      00
 12830              	.LASF269:
 12831 23be 70764F77 		.ascii	"pvOwner\000"
 12831      6E657200 
 12832              	.LASF258:
 12833 23c6 636C6B44 		.ascii	"clkDivider\000"
 12833      69766964 
 12833      657200
 12834              	.LASF374:
 12835 23d1 76546173 		.ascii	"vTaskSuspend\000"
 12835      6B537573 
 12835      70656E64 
 12835      00
 12836              	.LASF357:
 12837 23de 78416C72 		.ascii	"xAlreadyYielded\000"
 12837      65616479 
 12837      5969656C 
 12837      64656400 
 12838              	.LASF397:
 12839 23ee 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 12839      6B476574 
 12839      43757272 
 12839      656E7454 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 350


 12839      61736B48 
 12840              	.LASF446:
 12841 2408 436F756E 		.ascii	"Counter_ms_config\000"
 12841      7465725F 
 12841      6D735F63 
 12841      6F6E6669 
 12841      6700
 12842              	.LASF331:
 12843 241a 78546173 		.ascii	"xTaskCreate\000"
 12843      6B437265 
 12843      61746500 
 12844              	.LASF181:
 12845 2426 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 12845      4C455F45 
 12845      56545F47 
 12845      4154545F 
 12845      44495343 
 12846              	.LASF443:
 12847 2445 4144435F 		.ascii	"ADC_currentConfig\000"
 12847      63757272 
 12847      656E7443 
 12847      6F6E6669 
 12847      6700
 12848              	.LASF239:
 12849 2457 43595F42 		.ascii	"CY_BLE_DIS_SYSTEM_ID\000"
 12849      4C455F44 
 12849      49535F53 
 12849      59535445 
 12849      4D5F4944 
 12850              	.LASF339:
 12851 246c 75784375 		.ascii	"uxCurrentBasePriority\000"
 12851      7272656E 
 12851      74426173 
 12851      65507269 
 12851      6F726974 
 12852              	.LASF321:
 12853 2482 78526567 		.ascii	"xRegions\000"
 12853      696F6E73 
 12853      00
 12854              	.LASF182:
 12855 248b 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 12855      4C455F45 
 12855      56545F47 
 12855      41545453 
 12855      5F58434E 
 12856              	.LASF201:
 12857 24aa 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 12857      4C455F45 
 12857      56545F47 
 12857      41545443 
 12857      5F53544F 
 12858              	.LASF155:
 12859 24cd 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 12859      4C455F45 
 12859      56545F47 
 12859      41505F50 
 12859      4153534B 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 351


 12860              	.LASF216:
 12861 24f2 62644861 		.ascii	"bdHandle\000"
 12861      6E646C65 
 12861      00
 12862              	.LASF268:
 12863 24fb 70785072 		.ascii	"pxPrevious\000"
 12863      6576696F 
 12863      757300
 12864              	.LASF426:
 12865 2506 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 12865      7272656E 
 12865      744E756D 
 12865      6265724F 
 12865      66546173 
 12866              	.LASF361:
 12867 251d 7854696D 		.ascii	"xTimeIncrement\000"
 12867      65496E63 
 12867      72656D65 
 12867      6E7400
 12868              	.LASF23:
 12869 252c 5F426F6F 		.ascii	"_Bool\000"
 12869      6C00
 12870              	.LASF3:
 12871 2532 7369676E 		.ascii	"signed char\000"
 12871      65642063 
 12871      68617200 
 12872              	.LASF37:
 12873 253e 70657269 		.ascii	"period\000"
 12873      6F6400
 12874              	.LASF9:
 12875 2545 73686F72 		.ascii	"short unsigned int\000"
 12875      7420756E 
 12875      7369676E 
 12875      65642069 
 12875      6E7400
 12876              	.LASF327:
 12877 2558 7854696D 		.ascii	"xTimeToWake\000"
 12877      65546F57 
 12877      616B6500 
 12878              	.LASF416:
 12879 2564 78546173 		.ascii	"xTaskNotifyStateClear\000"
 12879      6B4E6F74 
 12879      69667953 
 12879      74617465 
 12879      436C6561 
 12880              	.LASF193:
 12881 257a 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 12881      4C455F45 
 12881      56545F47 
 12881      41545453 
 12881      5F575249 
 12882              	.LASF139:
 12883 2599 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 12883      4C455F45 
 12883      56545F47 
 12883      45545F43 
 12883      4C4B5F43 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 352


 12884              	.LASF310:
 12885 25bc 70785443 		.ascii	"pxTCB\000"
 12885      4200
 12886              	.LASF257:
 12887 25c2 6D697363 		.ascii	"miscConfig\000"
 12887      436F6E66 
 12887      696700
 12888              	.LASF204:
 12889 25cd 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 12889      4C455F45 
 12889      56545F4C 
 12889      32434150 
 12889      5F434F4E 
 12890              	.LASF98:
 12891 25f4 636F6E66 		.ascii	"configRouting\000"
 12891      6967526F 
 12891      7574696E 
 12891      6700
 12892              	.LASF32:
 12893 2602 6D6F6E74 		.ascii	"month\000"
 12893      6800
 12894              	.LASF436:
 12895 2608 75785363 		.ascii	"uxSchedulerSuspended\000"
 12895      68656475 
 12895      6C657253 
 12895      75737065 
 12895      6E646564 
 12896              	.LASF324:
 12897 261d 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 12897      64644375 
 12897      7272656E 
 12897      74546173 
 12897      6B546F44 
 12898              	.LASF95:
 12899 263c 72616E67 		.ascii	"rangeIntrMask\000"
 12899      65496E74 
 12899      724D6173 
 12899      6B00
 12900              	.LASF84:
 12901 264a 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 12901      6E5F7361 
 12901      725F7261 
 12901      6E67655F 
 12901      64657465 
 12902              	.LASF296:
 12903 266d 7078546F 		.ascii	"pxTopOfStack\000"
 12903      704F6653 
 12903      7461636B 
 12903      00
 12904              	.LASF342:
 12905 267a 76546173 		.ascii	"vTaskResume\000"
 12905      6B526573 
 12905      756D6500 
 12906              	.LASF462:
 12907 2686 7076506F 		.ascii	"pvPortMalloc\000"
 12907      72744D61 
 12907      6C6C6F63 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 353


 12907      00
 12908              	.LASF322:
 12909 2693 70727649 		.ascii	"prvInitialiseTaskLists\000"
 12909      6E697469 
 12909      616C6973 
 12909      65546173 
 12909      6B4C6973 
 12910              	.LASF158:
 12911 26aa 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 12911      4C455F45 
 12911      56545F47 
 12911      41505F41 
 12911      5554485F 
 12912              	.LASF384:
 12913 26c5 70784576 		.ascii	"pxEventListItem\000"
 12913      656E744C 
 12913      69737449 
 12913      74656D00 
 12914              	.LASF394:
 12915 26d5 70765661 		.ascii	"pvValue\000"
 12915      6C756500 
 12916              	.LASF130:
 12917 26dd 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 12917      4C455F45 
 12917      56545F50 
 12917      48595F55 
 12917      50444154 
 12918              	.LASF319:
 12919 26fc 70784372 		.ascii	"pxCreatedTask\000"
 12919      65617465 
 12919      64546173 
 12919      6B00
 12920              	.LASF365:
 12921 270a 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 12921      6865636B 
 12921      5461736B 
 12921      73576169 
 12921      74696E67 
 12922              	.LASF345:
 12923 272a 75785361 		.ascii	"uxSavedInterruptStatus\000"
 12923      76656449 
 12923      6E746572 
 12923      72757074 
 12923      53746174 
 12924              	.LASF227:
 12925 2741 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 12925      4C455F43 
 12925      4F4E4E5F 
 12925      53544154 
 12925      455F434C 
 12926              	.LASF93:
 12927 276b 696E7472 		.ascii	"intrMask\000"
 12927      4D61736B 
 12927      00
 12928              	.LASF459:
 12929 2774 76506F72 		.ascii	"vPortExitCritical\000"
 12929      74457869 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccnI7Dz6.s 			page 354


 12929      74437269 
 12929      74696361 
 12929      6C00
 12930              	.LASF62:
 12931 2786 72784275 		.ascii	"rxBufSize\000"
 12931      6653697A 
 12931      6500
 12932              	.LASF402:
 12933 2790 756C5265 		.ascii	"ulReturn\000"
 12933      7475726E 
 12933      00
 12934              	.LASF163:
 12935 2799 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 12935      4C455F45 
 12935      56545F47 
 12935      41505F43 
 12935      4F4E4E45 
 12936              	.LASF431:
 12937 27c3 78596965 		.ascii	"xYieldPending\000"
 12937      6C645065 
 12937      6E64696E 
 12937      6700
 12938              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
