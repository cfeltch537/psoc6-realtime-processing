ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB531:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    is the industry's de facto standard.                               *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** */
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Standard includes. */
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <stdlib.h>
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <string.h>
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task.h is included from an application file. */
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* FreeRTOS includes. */
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "FreeRTOS.h"
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "task.h"
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "timers.h"
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "StackMacros.h"
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** functions but without including stdio.h here. */
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#include <stdio.h>
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * global, rather than file scope.
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define static
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	microcontroller architecture. */
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	state task. */
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			--uxTopPriority;																			\
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	being used. */
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	architecture being used. */
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																								\
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** count overflows. */
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {																									\
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** to its original value when it is released. */
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* See the comments above the definition of
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** } tskTCB;
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef tskTCB TCB_t;
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static variables must be declared volatile. */
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** accessed from a critical section. */
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint +e956 */
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /**
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is in any other state.
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * creation of the first user task.
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and its TCB deleted.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * a suspended list, etc.).
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * set to a value other than 1.
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * will exit the Blocked state.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * human readable tables of task information.
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 */
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * under the control of the scheduler.
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function - use them. */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = NULL;
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not static allocation is being used. */
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const char * const pcName,
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							void * const pvParameters,
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the TCB then the stack. */
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allocation is being used. */
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				be deleted later if required. */
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB = NULL;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxStack;
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxStack != NULL )
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it again. */
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxStack );
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = NULL;
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t x;
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	by the port. */
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		performed. */
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			break;
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xRegions;
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	updated. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				fails, but we will report the failure. */
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			so far. */
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTaskNumber++;
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then it should run now. */
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being deleted. */
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready list. */
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not return. */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTaskNumber++;
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				required. */
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task that has just been deleted. */
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been deleted. */
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			block. */
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				tick time is less than the wake time. */
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY();
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is resumed.
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				executing task. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eReturn;
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxStateList;
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eRunning;
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lists. */
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eBlocked;
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					indefinitely? */
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eSuspended;
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eBlocked;
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					all. */
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					eReturn = eDeleted;
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eReady;
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being queried. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being changed. */
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority than the calling task. */
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						raised above that of the running task? */
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but the running task must already be the highest
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					there may now be another task of higher priority that
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is ready to execute. */
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					require a yield as the running task must be above the
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new priority of the task being modified. */
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					currently using an inherited priority. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				being used for anything else. */
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						there is no need to check again and the port level
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						reset macro can be called directly. */
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				optimised task selection is not being used. */
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being suspended. */
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			suspended list. */
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is. */
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vTaskSwitchContext();
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
  28              		.loc 1 1657 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		section. */
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 0
  35 0000 0246     		mov	r2, r0
  36 0002 08B9     		cbnz	r0, .L2
  37              		.loc 1 1665 0 is_stmt 0 discriminator 1
  38              		.syntax unified
  39              	@ 1665 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
  40 0004 72B6     		 cpsid i 
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L3:
  45 0006 FEE7     		b	.L3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 31


  46              	.L2:
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  47              		.loc 1 1668 0 is_stmt 1
  48 0008 4169     		ldr	r1, [r0, #20]
  49 000a 0B4B     		ldr	r3, .L12
  50 000c 9942     		cmp	r1, r3
  51 000e 01D1     		bne	.L7
  52 0010 0123     		movs	r3, #1
  53 0012 00E0     		b	.L4
  54              	.L7:
  55 0014 0023     		movs	r3, #0
  56              	.L4:
  57              		.loc 1 1668 0 is_stmt 0 discriminator 4
  58 0016 43B1     		cbz	r3, .L8
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  59              		.loc 1 1671 0 is_stmt 1
  60 0018 926A     		ldr	r2, [r2, #40]
  61 001a 0849     		ldr	r1, .L12+4
  62 001c 8A42     		cmp	r2, r1
  63 001e 06D0     		beq	.L9
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
  64              		.loc 1 1675 0
  65 0020 02B1     		cbz	r2, .L6
  66 0022 0023     		movs	r3, #0
  67              	.L6:
  68              		.loc 1 1675 0 is_stmt 0 discriminator 4
  69 0024 2BB9     		cbnz	r3, .L11
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  70              		.loc 1 1658 0 is_stmt 1
  71 0026 0020     		movs	r0, #0
  72              	.LVL1:
  73 0028 7047     		bx	lr
  74              	.LVL2:
  75              	.L8:
  76 002a 0020     		movs	r0, #0
  77              	.LVL3:
  78 002c 7047     		bx	lr
  79              	.LVL4:
  80              	.L9:
  81 002e 0020     		movs	r0, #0
  82              	.LVL5:
  83 0030 7047     		bx	lr
  84              	.LVL6:
  85              	.L11:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
  86              		.loc 1 1677 0
  87 0032 0120     		movs	r0, #1
  88              	.LVL7:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 32


1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  89              		.loc 1 1695 0
  90 0034 7047     		bx	lr
  91              	.L13:
  92 0036 00BF     		.align	2
  93              	.L12:
  94 0038 00000000 		.word	.LANCHOR0
  95 003c 14000000 		.word	.LANCHOR0+20
  96              		.cfi_endproc
  97              	.LFE531:
  98              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
  99              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 100              		.align	2
 101              		.thumb
 102              		.thumb_func
 103              		.type	prvResetNextTaskUnblockTime, %function
 104              	prvResetNextTaskUnblockTime:
 105              	.LFB558:
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		currently executing task. */
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 33


1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						next yield. */
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 34


1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unsuspended. */
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xYieldRequired;
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskStartScheduler( void )
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 35


1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												"IDLE",
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( void * ) NULL,
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( void * ) NULL,
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		starts to run. */
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 36


1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the run time counter time base. */
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portable interface. */
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function will not return. */
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		or the timer task. */
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskEndScheduler( void )
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSuspendAll( void )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 37


1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xReturn;
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		running. */
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			processed. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 38


2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				appropriate ready list. */
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					task then a yield must be performed. */
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 39


2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					important for low power tickless implementations, where
2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					state. */
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				time. */
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						do
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							else
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							--uxPendedCounts;
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						uxPendedTicks = 0;
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 40


2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xAlreadyYielded;
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTicks = xTickCount;
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xTicks;
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTickCount;
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 41


2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t. */
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queried. */
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t x;
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cNextChar;
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mismatch. */
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Characters didn't match. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						found. */
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 42


2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxReturn != NULL )
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The handle has been found. */
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxReturn;
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t* pxTCB;
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the ready lists. */
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxQueue--;
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Found the handle. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the delayed lists. */
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 43


2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the suspended list. */
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the deleted list. */
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Ready state. */
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				do
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxQueue--;
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Blocked state. */
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 44


2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task in the Suspended state. */
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xIdleTaskHandle;
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 45


2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 1. */
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		each stepped tick. */
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended. */
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 46


2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch if preemption is turned off. */
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						is unsuspended. */
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTaskResumeAll();
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xItemValue;
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks to be unblocked. */
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		block. */
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		delayed lists if it wraps to 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 47


2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		look any further down the list. */
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( ;; )
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					to the maximum possible value so it is extremely
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unlikely that the
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					next time through. */
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be removed from the Blocked state. */
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						item value is the time at which the task at the head
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						state -	so record the item value in
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 48


2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it from the event list. */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list. */
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority that is equal to or higher than the
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						currently executing task. */
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 49


2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vApplicationTickHook();
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		++uxPendedTicks;
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		scheduler is locked. */
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationTickHook();
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xSwitchRequired;
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		getting set. */
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 50


2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 51


2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSwitchContext( void )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch. */
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 52


2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		optimised asm code. */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to this task. */
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event groups implementation. */
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	task that is not in the Blocked state. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 53


2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the task level). */
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function should not be called by application code hence the
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		can be used in place of vListInsert. */
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TIMERS */
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	called from a critical section within an ISR. */
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the delayed list, and add it to the ready list.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 54


2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxEventList is not empty. */
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pending until the scheduler is resumed. */
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should force a context switch now. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 55


2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event flags implementation. */
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the new item value in the event list. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event flags. */
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	lists. */
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		a higher priority than the calling task.  This allows
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task to know if it should force a context
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch now. */
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 56


3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				but has the same result. */
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				specified is the maximum block time then the task should block
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The tick count is greater than the time at which
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			was called. */
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 57


3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskMissedYield( void )
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = 0U;
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * -----------------------------------------------------------
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The Idle task.
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * ----------------------------------------------------------
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 58


3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) pvParameters;
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( ;; )
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			see if any other task has become available.  If we are using
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			will automatically get the processor anyway. */
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD();
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timeslice.
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskYIELD();
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allows the application designer to add background functionality
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			without the overhead of a separate task.
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationIdleHook();
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 59


3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		user defined low power mode	implementations require
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			test of the expected idle time is performed without the
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			valid. */
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					time can be sampled again, and this time its value can
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be used. */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) xTaskResumeAll();
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 60


3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupts. */
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 61


3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = NULL;
3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pvReturn;
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task. */
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	using list2. */
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 62


3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xListIsEmpty;
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		too often in the idle task. */
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( void ) xTaskResumeAll();
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				TCB_t *pxTCB;
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 63


3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being in the Blocked state. */
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xTaskResumeAll();
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		just set to whatever is passed in. */
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( eState != eInvalid )
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 64


3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask++;
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 65


3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulCount = 0U;
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulCount++;
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 66


3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the stack and TCB. */
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			check what was statically allocated before trying to free the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			memory. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be freed. */
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				only memory that must be freed. */
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing needs to be freed. */
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 106              		.loc 1 3647 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 111              		.loc 1 3650 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 67


 112 0000 094B     		ldr	r3, .L19
 113 0002 9B6A     		ldr	r3, [r3, #40]
 114 0004 1B68     		ldr	r3, [r3]
 115 0006 0BB9     		cbnz	r3, .L18
 116 0008 0123     		movs	r3, #1
 117 000a 00E0     		b	.L15
 118              	.L18:
 119 000c 0023     		movs	r3, #0
 120              	.L15:
 121              		.loc 1 3650 0 is_stmt 0 discriminator 4
 122 000e 23B1     		cbz	r3, .L16
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		there is an item in the delayed list. */
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 123              		.loc 1 3656 0 is_stmt 1
 124 0010 4FF0FF32 		mov	r2, #-1
 125 0014 044B     		ldr	r3, .L19
 126 0016 DA62     		str	r2, [r3, #44]
 127 0018 7047     		bx	lr
 128              	.L16:
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from the Blocked state. */
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 129              		.loc 1 3664 0
 130 001a 034B     		ldr	r3, .L19
 131 001c 9A6A     		ldr	r2, [r3, #40]
 132 001e D268     		ldr	r2, [r2, #12]
 133 0020 D268     		ldr	r2, [r2, #12]
 134              	.LVL8:
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 135              		.loc 1 3665 0
 136 0022 5268     		ldr	r2, [r2, #4]
 137              	.LVL9:
 138 0024 DA62     		str	r2, [r3, #44]
 139 0026 7047     		bx	lr
 140              	.L20:
 141              		.align	2
 142              	.L19:
 143 0028 00000000 		.word	.LANCHOR0
 144              		.cfi_endproc
 145              	.LFE558:
 146              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 147              		.section	.text.prvDeleteTCB,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 151              		.type	prvDeleteTCB, %function
 152              	prvDeleteTCB:
 153              	.LFB557:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 68


3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 154              		.loc 1 3593 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL10:
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
 164              		.loc 1 3611 0
 165 0004 006B     		ldr	r0, [r0, #48]
 166              	.LVL11:
 167 0006 FFF7FEFF 		bl	vPortFree
 168              	.LVL12:
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 169              		.loc 1 3612 0
 170 000a 2046     		mov	r0, r4
 171 000c FFF7FEFF 		bl	vPortFree
 172              	.LVL13:
 173 0010 10BD     		pop	{r4, pc}
 174              		.cfi_endproc
 175              	.LFE557:
 176              		.size	prvDeleteTCB, .-prvDeleteTCB
 177 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 178              		.align	2
 179              		.thumb
 180              		.thumb_func
 181              		.type	prvInitialiseNewTask, %function
 182              	prvInitialiseNewTask:
 183              	.LFB522:
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 775 0
 185              		.cfi_startproc
 186              		@ args = 16, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL14:
 189 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 190              		.cfi_def_cfa_offset 32
 191              		.cfi_offset 4, -32
 192              		.cfi_offset 5, -28
 193              		.cfi_offset 6, -24
 194              		.cfi_offset 7, -20
 195              		.cfi_offset 8, -16
 196              		.cfi_offset 9, -12
 197              		.cfi_offset 10, -8
 198              		.cfi_offset 14, -4
 199 0004 8246     		mov	r10, r0
 200 0006 8946     		mov	r9, r1
 201 0008 1546     		mov	r5, r2
 202 000a 9846     		mov	r8, r3
 203 000c 089F     		ldr	r7, [sp, #32]
 204 000e 099E     		ldr	r6, [sp, #36]
 205 0010 0A9C     		ldr	r4, [sp, #40]
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 69


 206              		.loc 1 797 0
 207 0012 9200     		lsls	r2, r2, #2
 208              	.LVL15:
 209 0014 A521     		movs	r1, #165
 210              	.LVL16:
 211 0016 206B     		ldr	r0, [r4, #48]
 212              	.LVL17:
 213 0018 FFF7FEFF 		bl	memset
 214              	.LVL18:
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 215              		.loc 1 807 0
 216 001c 236B     		ldr	r3, [r4, #48]
 217 001e 05F18042 		add	r2, r5, #1073741824
 218 0022 013A     		subs	r2, r2, #1
 219 0024 03EB8205 		add	r5, r3, r2, lsl #2
 220              	.LVL19:
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 221              		.loc 1 808 0
 222 0028 25F00705 		bic	r5, r5, #7
 223              	.LVL20:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 224              		.loc 1 827 0
 225 002c 0023     		movs	r3, #0
 226 002e 08E0     		b	.L24
 227              	.LVL21:
 228              	.L26:
 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 229              		.loc 1 829 0
 230 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 231 0034 E218     		adds	r2, r4, r3
 232 0036 82F83410 		strb	r1, [r2, #52]
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 233              		.loc 1 834 0
 234 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 235 003e 12B1     		cbz	r2, .L25
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 236              		.loc 1 827 0 discriminator 2
 237 0040 0133     		adds	r3, r3, #1
 238              	.LVL22:
 239              	.L24:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 240              		.loc 1 827 0 is_stmt 0 discriminator 1
 241 0042 0F2B     		cmp	r3, #15
 242 0044 F4D9     		bls	.L26
 243              	.L25:
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 244              		.loc 1 846 0 is_stmt 1
 245 0046 0023     		movs	r3, #0
 246              	.LVL23:
 247 0048 84F84330 		strb	r3, [r4, #67]
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 248              		.loc 1 850 0
 249 004c 132F     		cmp	r7, #19
 250 004e 00D9     		bls	.L27
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 251              		.loc 1 852 0
 252 0050 1327     		movs	r7, #19
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 70


 253              	.L27:
 254              	.LVL24:
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 255              		.loc 1 859 0
 256 0052 E762     		str	r7, [r4, #44]
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 257              		.loc 1 867 0
 258 0054 201D     		adds	r0, r4, #4
 259 0056 FFF7FEFF 		bl	vListInitialiseItem
 260              	.LVL25:
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 261              		.loc 1 868 0
 262 005a 04F11800 		add	r0, r4, #24
 263 005e FFF7FEFF 		bl	vListInitialiseItem
 264              	.LVL26:
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 265              		.loc 1 872 0
 266 0062 2461     		str	r4, [r4, #16]
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 267              		.loc 1 875 0
 268 0064 C7F11403 		rsb	r3, r7, #20
 269 0068 A361     		str	r3, [r4, #24]
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 270              		.loc 1 876 0
 271 006a 6462     		str	r4, [r4, #36]
 272              	.LVL27:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 273              		.loc 1 909 0
 274 006c 0023     		movs	r3, #0
 275 006e 06E0     		b	.L28
 276              	.LVL28:
 277              	.L29:
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 278              		.loc 1 911 0 discriminator 3
 279 0070 03F11002 		add	r2, r3, #16
 280 0074 04EB8202 		add	r2, r4, r2, lsl #2
 281 0078 0021     		movs	r1, #0
 282 007a 5160     		str	r1, [r2, #4]
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 283              		.loc 1 909 0 discriminator 3
 284 007c 0133     		adds	r3, r3, #1
 285              	.LVL29:
 286              	.L28:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 287              		.loc 1 909 0 is_stmt 0 discriminator 1
 288 007e 042B     		cmp	r3, #4
 289 0080 F6D9     		bls	.L29
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 290              		.loc 1 918 0 is_stmt 1
 291 0082 0023     		movs	r3, #0
 292              	.LVL30:
 293 0084 A365     		str	r3, [r4, #88]
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 294              		.loc 1 919 0
 295 0086 84F85C30 		strb	r3, [r4, #92]
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 296              		.loc 1 946 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 71


 297 008a 4246     		mov	r2, r8
 298 008c 5146     		mov	r1, r10
 299 008e 2846     		mov	r0, r5
 300 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 301              	.LVL31:
 302 0094 2060     		str	r0, [r4]
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 303              		.loc 1 950 0
 304 0096 06B1     		cbz	r6, .L23
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 305              		.loc 1 954 0
 306 0098 3460     		str	r4, [r6]
 307              	.L23:
 308 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 309              		.cfi_endproc
 310              	.LFE522:
 311              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 312 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 313              		.align	2
 314              		.thumb
 315              		.thumb_func
 316              		.type	prvInitialiseTaskLists, %function
 317              	prvInitialiseTaskLists:
 318              	.LFB555:
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
 319              		.loc 1 3345 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 70B5     		push	{r4, r5, r6, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 4, -16
 326              		.cfi_offset 5, -12
 327              		.cfi_offset 6, -8
 328              		.cfi_offset 14, -4
 329              	.LVL32:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 330              		.loc 1 3348 0
 331 0002 0024     		movs	r4, #0
 332 0004 07E0     		b	.L34
 333              	.LVL33:
 334              	.L35:
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 335              		.loc 1 3350 0 discriminator 3
 336 0006 04EB8402 		add	r2, r4, r4, lsl #2
 337 000a 9300     		lsls	r3, r2, #2
 338 000c 1048     		ldr	r0, .L37
 339 000e 1844     		add	r0, r0, r3
 340 0010 FFF7FEFF 		bl	vListInitialise
 341              	.LVL34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 342              		.loc 1 3348 0 discriminator 3
 343 0014 0134     		adds	r4, r4, #1
 344              	.LVL35:
 345              	.L34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 346              		.loc 1 3348 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 72


 347 0016 132C     		cmp	r4, #19
 348 0018 F5D9     		bls	.L35
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 349              		.loc 1 3353 0 is_stmt 1
 350 001a 0E4C     		ldr	r4, .L37+4
 351              	.LVL36:
 352 001c 04F5E076 		add	r6, r4, #448
 353 0020 3046     		mov	r0, r6
 354 0022 FFF7FEFF 		bl	vListInitialise
 355              	.LVL37:
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 356              		.loc 1 3354 0
 357 0026 04F5EA75 		add	r5, r4, #468
 358 002a 2846     		mov	r0, r5
 359 002c FFF7FEFF 		bl	vListInitialise
 360              	.LVL38:
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 361              		.loc 1 3355 0
 362 0030 04F11400 		add	r0, r4, #20
 363 0034 FFF7FEFF 		bl	vListInitialise
 364              	.LVL39:
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 365              		.loc 1 3359 0
 366 0038 04F5F470 		add	r0, r4, #488
 367 003c FFF7FEFF 		bl	vListInitialise
 368              	.LVL40:
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 369              		.loc 1 3365 0
 370 0040 2046     		mov	r0, r4
 371 0042 FFF7FEFF 		bl	vListInitialise
 372              	.LVL41:
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 373              		.loc 1 3371 0
 374 0046 A662     		str	r6, [r4, #40]
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 375              		.loc 1 3372 0
 376 0048 C4F8FC51 		str	r5, [r4, #508]
 377 004c 70BD     		pop	{r4, r5, r6, pc}
 378              	.L38:
 379 004e 00BF     		.align	2
 380              	.L37:
 381 0050 30000000 		.word	.LANCHOR0+48
 382 0054 00000000 		.word	.LANCHOR0
 383              		.cfi_endproc
 384              	.LFE555:
 385              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 386              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 387              		.align	2
 388              		.thumb
 389              		.thumb_func
 390              		.type	prvAddNewTaskToReadyList, %function
 391              	prvAddNewTaskToReadyList:
 392              	.LFB523:
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 393              		.loc 1 964 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 73


 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL42:
 398 0000 38B5     		push	{r3, r4, r5, lr}
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 3, -16
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 5, -8
 403              		.cfi_offset 14, -4
 404 0002 0446     		mov	r4, r0
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 405              		.loc 1 967 0
 406 0004 FFF7FEFF 		bl	vPortEnterCritical
 407              	.LVL43:
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 408              		.loc 1 969 0
 409 0008 264B     		ldr	r3, .L45
 410 000a D3F80022 		ldr	r2, [r3, #512]
 411 000e 0132     		adds	r2, r2, #1
 412 0010 C3F80022 		str	r2, [r3, #512]
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 413              		.loc 1 970 0
 414 0014 D3F80432 		ldr	r3, [r3, #516]
 415 0018 4BB9     		cbnz	r3, .L40
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 416              		.loc 1 974 0
 417 001a 224B     		ldr	r3, .L45
 418 001c C3F80442 		str	r4, [r3, #516]
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 419              		.loc 1 976 0
 420 0020 D3F80032 		ldr	r3, [r3, #512]
 421 0024 012B     		cmp	r3, #1
 422 0026 10D1     		bne	.L41
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 423              		.loc 1 981 0
 424 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 425              	.LVL44:
 426 002c 0DE0     		b	.L41
 427              	.L40:
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 428              		.loc 1 993 0
 429 002e 1D4B     		ldr	r3, .L45
 430 0030 D3F80832 		ldr	r3, [r3, #520]
 431 0034 4BB9     		cbnz	r3, .L41
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 432              		.loc 1 995 0
 433 0036 1B4B     		ldr	r3, .L45
 434 0038 D3F80432 		ldr	r3, [r3, #516]
 435 003c DA6A     		ldr	r2, [r3, #44]
 436 003e E36A     		ldr	r3, [r4, #44]
 437 0040 9A42     		cmp	r2, r3
 438 0042 02D8     		bhi	.L41
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 439              		.loc 1 997 0
 440 0044 174B     		ldr	r3, .L45
 441 0046 C3F80442 		str	r4, [r3, #516]
 442              	.L41:
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 74


 443              		.loc 1 1010 0
 444 004a 164A     		ldr	r2, .L45
 445 004c D2F80C32 		ldr	r3, [r2, #524]
 446 0050 0133     		adds	r3, r3, #1
 447 0052 C2F80C32 		str	r3, [r2, #524]
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 448              		.loc 1 1020 0
 449 0056 E36A     		ldr	r3, [r4, #44]
 450 0058 D2F81022 		ldr	r2, [r2, #528]
 451 005c 9342     		cmp	r3, r2
 452 005e 02D9     		bls	.L42
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 453              		.loc 1 1020 0 is_stmt 0 discriminator 1
 454 0060 104A     		ldr	r2, .L45
 455 0062 C2F81032 		str	r3, [r2, #528]
 456              	.L42:
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 457              		.loc 1 1020 0 discriminator 3
 458 0066 0F4D     		ldr	r5, .L45
 459 0068 05F13000 		add	r0, r5, #48
 460 006c 03EB8303 		add	r3, r3, r3, lsl #2
 461 0070 9A00     		lsls	r2, r3, #2
 462 0072 211D     		adds	r1, r4, #4
 463 0074 1044     		add	r0, r0, r2
 464 0076 FFF7FEFF 		bl	vListInsertEnd
 465              	.LVL45:
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 466              		.loc 1 1024 0 is_stmt 1 discriminator 3
 467 007a FFF7FEFF 		bl	vPortExitCritical
 468              	.LVL46:
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 469              		.loc 1 1026 0 discriminator 3
 470 007e D5F80832 		ldr	r3, [r5, #520]
 471 0082 6BB1     		cbz	r3, .L39
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 472              		.loc 1 1030 0
 473 0084 D5F80432 		ldr	r3, [r5, #516]
 474 0088 DA6A     		ldr	r2, [r3, #44]
 475 008a E36A     		ldr	r3, [r4, #44]
 476 008c 9A42     		cmp	r2, r3
 477 008e 07D2     		bcs	.L39
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 478              		.loc 1 1032 0
 479 0090 4FF08052 		mov	r2, #268435456
 480 0094 044B     		ldr	r3, .L45+4
 481 0096 1A60     		str	r2, [r3]
 482              		.syntax unified
 483              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 484 0098 BFF34F8F 		dsb
 485              	@ 0 "" 2
 486              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 487 009c BFF36F8F 		isb
 488              	@ 0 "" 2
 489              		.thumb
 490              		.syntax unified
 491              	.L39:
 492 00a0 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 75


 493              	.LVL47:
 494              	.L46:
 495 00a2 00BF     		.align	2
 496              	.L45:
 497 00a4 00000000 		.word	.LANCHOR0
 498 00a8 04ED00E0 		.word	-536810236
 499              		.cfi_endproc
 500              	.LFE523:
 501              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 502              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 503              		.align	2
 504              		.thumb
 505              		.thumb_func
 506              		.type	prvAddCurrentTaskToDelayedList, %function
 507              	prvAddCurrentTaskToDelayedList:
 508              	.LFB568:
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		individual execution thread. */
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 76


3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	being used for anything else. */
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to be moved into a new list. */
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Just inherit the priority. */
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 77


3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			be the running state task. */
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task? */
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the	holding task from the ready	list. */
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 78


3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new	ready list. */
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					running to give back the mutex. */
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This is only actually required in the corner case whereby
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					in an order different to that in which they were taken.
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a task is waiting on it or not. */
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskEnterCritical( void )
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			critical section. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 79


3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskExitCritical( void )
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portENABLE_INTERRUPTS();
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	size_t x;
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Start by copying the entire string. */
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 80


3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		printed out. */
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Terminate. */
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return the new end of string. */
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return &( pcBuffer[ x ] );
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cStatus;
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays task names, states and stack usage.
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * snprintf() implementation!).
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskList().
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 81


3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										to prevent static checking errors. */
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										cStatus = 0x00;
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				can be printed in tabular form more easily. */
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the rest of the string. */
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 82


4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * in both absolute and percentage terms.
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a full snprintf() implementation!).
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* For percentage calculations. */
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulTotalTime /= 100UL;
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Avoid divide by zero errors. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 83


4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulTotalTime > 0 )
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Write the task name to the string, padding with
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					easily. */
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 84


4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queues and semaphores. */
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxReturn;
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxCurrentTCB;
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 85


4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulReturn != 0UL )
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ulReturn;
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 86


4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				clear the value to zero. */
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				have changed. */
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			unblocked because of a timeout. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was not received. */
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 87


4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was already pending or a notification was
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				received while the task was waiting. */
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 88


4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY();
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					because it will automatically get reset to a new value when
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					earliest possible time. */
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 89


4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 90


4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction :
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 91


4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			semaphore. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 92


4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 93


4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		its notification state cleared. */
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFAIL;
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 509              		.loc 1 4704 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL48:
 514 0000 70B5     		push	{r4, r5, r6, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 4, -16
 517              		.cfi_offset 5, -12
 518              		.cfi_offset 6, -8
 519              		.cfi_offset 14, -4
 520 0002 0446     		mov	r4, r0
 521 0004 0E46     		mov	r6, r1
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTimeToWake;
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 522              		.loc 1 4706 0
 523 0006 174B     		ldr	r3, .L52
 524 0008 D3F81452 		ldr	r5, [r3, #532]
 525              	.LVL49:
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		when the task leaves the Blocked state. */
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 94


4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	as the same list item is used for both lists. */
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 526              		.loc 1 4719 0
 527 000c D3F80402 		ldr	r0, [r3, #516]
 528              	.LVL50:
 529 0010 0430     		adds	r0, r0, #4
 530 0012 FFF7FEFF 		bl	uxListRemove
 531              	.LVL51:
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 532              		.loc 1 4732 0
 533 0016 B4F1FF3F 		cmp	r4, #-1
 534 001a 07D1     		bne	.L48
 535              		.loc 1 4732 0 is_stmt 0 discriminator 1
 536 001c 36B1     		cbz	r6, .L48
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			indefinitely. */
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 537              		.loc 1 4737 0 is_stmt 1
 538 001e 1148     		ldr	r0, .L52
 539 0020 D0F80412 		ldr	r1, [r0, #516]
 540 0024 0431     		adds	r1, r1, #4
 541 0026 FFF7FEFF 		bl	vListInsertEnd
 542              	.LVL52:
 543 002a 70BD     		pop	{r4, r5, r6, pc}
 544              	.LVL53:
 545              	.L48:
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			kernel will manage it correctly. */
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 546              		.loc 1 4744 0
 547 002c 2C44     		add	r4, r4, r5
 548              	.LVL54:
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 549              		.loc 1 4747 0
 550 002e 0D4B     		ldr	r3, .L52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 95


 551 0030 D3F80432 		ldr	r3, [r3, #516]
 552 0034 5C60     		str	r4, [r3, #4]
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 553              		.loc 1 4749 0
 554 0036 A542     		cmp	r5, r4
 555 0038 08D9     		bls	.L50
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list. */
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 556              		.loc 1 4753 0
 557 003a 0A4B     		ldr	r3, .L52
 558 003c D3F8FC01 		ldr	r0, [r3, #508]
 559 0040 D3F80412 		ldr	r1, [r3, #516]
 560 0044 0431     		adds	r1, r1, #4
 561 0046 FFF7FEFF 		bl	vListInsert
 562              	.LVL55:
 563 004a 70BD     		pop	{r4, r5, r6, pc}
 564              	.LVL56:
 565              	.L50:
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 566              		.loc 1 4759 0
 567 004c 054D     		ldr	r5, .L52
 568              	.LVL57:
 569 004e A86A     		ldr	r0, [r5, #40]
 570 0050 D5F80412 		ldr	r1, [r5, #516]
 571 0054 0431     		adds	r1, r1, #4
 572 0056 FFF7FEFF 		bl	vListInsert
 573              	.LVL58:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				needs to be updated too. */
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 574              		.loc 1 4764 0
 575 005a EB6A     		ldr	r3, [r5, #44]
 576 005c 9C42     		cmp	r4, r3
 577 005e 00D2     		bcs	.L47
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 578              		.loc 1 4766 0
 579 0060 EC62     		str	r4, [r5, #44]
 580              	.L47:
 581 0062 70BD     		pop	{r4, r5, r6, pc}
 582              	.LVL59:
 583              	.L53:
 584              		.align	2
 585              	.L52:
 586 0064 00000000 		.word	.LANCHOR0
 587              		.cfi_endproc
 588              	.LFE568:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 96


 589              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 590              		.section	.text.xTaskCreate,"ax",%progbits
 591              		.align	2
 592              		.global	xTaskCreate
 593              		.thumb
 594              		.thumb_func
 595              		.type	xTaskCreate, %function
 596              	xTaskCreate:
 597              	.LFB521:
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 598              		.loc 1 682 0
 599              		.cfi_startproc
 600              		@ args = 8, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL60:
 603 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 604              		.cfi_def_cfa_offset 28
 605              		.cfi_offset 4, -28
 606              		.cfi_offset 5, -24
 607              		.cfi_offset 6, -20
 608              		.cfi_offset 7, -16
 609              		.cfi_offset 8, -12
 610              		.cfi_offset 9, -8
 611              		.cfi_offset 14, -4
 612 0004 85B0     		sub	sp, sp, #20
 613              		.cfi_def_cfa_offset 48
 614 0006 0646     		mov	r6, r0
 615 0008 0F46     		mov	r7, r1
 616 000a 1546     		mov	r5, r2
 617 000c 9846     		mov	r8, r3
 618              	.LBB18:
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 619              		.loc 1 716 0
 620 000e 9000     		lsls	r0, r2, #2
 621              	.LVL61:
 622 0010 FFF7FEFF 		bl	pvPortMalloc
 623              	.LVL62:
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 624              		.loc 1 718 0
 625 0014 60B1     		cbz	r0, .L58
 626 0016 8146     		mov	r9, r0
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 627              		.loc 1 721 0
 628 0018 6020     		movs	r0, #96
 629              	.LVL63:
 630 001a FFF7FEFF 		bl	pvPortMalloc
 631              	.LVL64:
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 632              		.loc 1 723 0
 633 001e 0446     		mov	r4, r0
 634 0020 10B1     		cbz	r0, .L56
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 635              		.loc 1 726 0
 636 0022 C0F83090 		str	r9, [r0, #48]
 637 0026 04E0     		b	.L55
 638              	.L56:
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 97


 639              		.loc 1 732 0
 640 0028 4846     		mov	r0, r9
 641              	.LVL65:
 642 002a FFF7FEFF 		bl	vPortFree
 643              	.LVL66:
 644 002e 00E0     		b	.L55
 645              	.LVL67:
 646              	.L58:
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 647              		.loc 1 737 0
 648 0030 0024     		movs	r4, #0
 649              	.LVL68:
 650              	.L55:
 651              	.LBE18:
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 652              		.loc 1 742 0
 653 0032 8CB1     		cbz	r4, .L59
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 654              		.loc 1 752 0
 655 0034 0023     		movs	r3, #0
 656 0036 0393     		str	r3, [sp, #12]
 657 0038 0294     		str	r4, [sp, #8]
 658 003a 0D9B     		ldr	r3, [sp, #52]
 659 003c 0193     		str	r3, [sp, #4]
 660 003e 0C9B     		ldr	r3, [sp, #48]
 661 0040 0093     		str	r3, [sp]
 662 0042 4346     		mov	r3, r8
 663 0044 2A46     		mov	r2, r5
 664 0046 3946     		mov	r1, r7
 665 0048 3046     		mov	r0, r6
 666 004a FFF7FEFF 		bl	prvInitialiseNewTask
 667              	.LVL69:
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 668              		.loc 1 753 0
 669 004e 2046     		mov	r0, r4
 670 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 671              	.LVL70:
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 672              		.loc 1 754 0
 673 0054 0120     		movs	r0, #1
 674 0056 01E0     		b	.L57
 675              	.LVL71:
 676              	.L59:
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 677              		.loc 1 758 0
 678 0058 4FF0FF30 		mov	r0, #-1
 679              	.L57:
 680              	.LVL72:
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 681              		.loc 1 762 0
 682 005c 05B0     		add	sp, sp, #20
 683              		.cfi_def_cfa_offset 28
 684              		@ sp needed
 685 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 686              		.cfi_endproc
 687              	.LFE521:
 688              		.size	xTaskCreate, .-xTaskCreate
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 98


 689 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 690              		.align	2
 691              		.global	vTaskDelete
 692              		.thumb
 693              		.thumb_func
 694              		.type	vTaskDelete, %function
 695              	vTaskDelete:
 696              	.LFB524:
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 697              		.loc 1 1049 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              	.LVL73:
 702 0000 70B5     		push	{r4, r5, r6, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
 708 0002 0446     		mov	r4, r0
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 709              		.loc 1 1052 0
 710 0004 FFF7FEFF 		bl	vPortEnterCritical
 711              	.LVL74:
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 712              		.loc 1 1056 0
 713 0008 14B9     		cbnz	r4, .L62
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 714              		.loc 1 1056 0 is_stmt 0 discriminator 1
 715 000a 244B     		ldr	r3, .L70
 716 000c D3F80442 		ldr	r4, [r3, #516]
 717              	.LVL75:
 718              	.L62:
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 719              		.loc 1 1059 0 is_stmt 1 discriminator 4
 720 0010 261D     		adds	r6, r4, #4
 721 0012 3046     		mov	r0, r6
 722 0014 FFF7FEFF 		bl	uxListRemove
 723              	.LVL76:
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 724              		.loc 1 1069 0 discriminator 4
 725 0018 A36A     		ldr	r3, [r4, #40]
 726 001a 1BB1     		cbz	r3, .L63
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 727              		.loc 1 1071 0
 728 001c 04F11800 		add	r0, r4, #24
 729 0020 FFF7FEFF 		bl	uxListRemove
 730              	.LVL77:
 731              	.L63:
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 732              		.loc 1 1082 0
 733 0024 1D4B     		ldr	r3, .L70
 734 0026 D3F80C22 		ldr	r2, [r3, #524]
 735 002a 0132     		adds	r2, r2, #1
 736 002c C3F80C22 		str	r2, [r3, #524]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 99


 737              		.loc 1 1084 0
 738 0030 D3F80432 		ldr	r3, [r3, #516]
 739 0034 9C42     		cmp	r4, r3
 740 0036 0BD1     		bne	.L64
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 741              		.loc 1 1091 0
 742 0038 184D     		ldr	r5, .L70
 743 003a 3146     		mov	r1, r6
 744 003c 05F5F470 		add	r0, r5, #488
 745 0040 FFF7FEFF 		bl	vListInsertEnd
 746              	.LVL78:
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 747              		.loc 1 1096 0
 748 0044 D5F81832 		ldr	r3, [r5, #536]
 749 0048 0133     		adds	r3, r3, #1
 750 004a C5F81832 		str	r3, [r5, #536]
 751 004e 0AE0     		b	.L65
 752              	.L64:
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 753              		.loc 1 1107 0
 754 0050 124A     		ldr	r2, .L70
 755 0052 D2F80032 		ldr	r3, [r2, #512]
 756 0056 013B     		subs	r3, r3, #1
 757 0058 C2F80032 		str	r3, [r2, #512]
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 758              		.loc 1 1108 0
 759 005c 2046     		mov	r0, r4
 760 005e FFF7FEFF 		bl	prvDeleteTCB
 761              	.LVL79:
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 762              		.loc 1 1112 0
 763 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 764              	.LVL80:
 765              	.L65:
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 766              		.loc 1 1117 0
 767 0066 FFF7FEFF 		bl	vPortExitCritical
 768              	.LVL81:
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 769              		.loc 1 1121 0
 770 006a 0C4B     		ldr	r3, .L70
 771 006c D3F80832 		ldr	r3, [r3, #520]
 772 0070 93B1     		cbz	r3, .L61
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 773              		.loc 1 1123 0
 774 0072 0A4B     		ldr	r3, .L70
 775 0074 D3F80432 		ldr	r3, [r3, #516]
 776 0078 9C42     		cmp	r4, r3
 777 007a 0DD1     		bne	.L61
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 778              		.loc 1 1125 0
 779 007c 074B     		ldr	r3, .L70
 780 007e D3F81C32 		ldr	r3, [r3, #540]
 781 0082 0BB1     		cbz	r3, .L67
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 782              		.loc 1 1125 0 is_stmt 0 discriminator 1
 783              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 100


 784              	@ 1125 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 785 0084 72B6     		 cpsid i 
 786              	@ 0 "" 2
 787              		.thumb
 788              		.syntax unified
 789              	.L68:
 790 0086 FEE7     		b	.L68
 791              	.L67:
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 792              		.loc 1 1126 0 is_stmt 1
 793 0088 4FF08052 		mov	r2, #268435456
 794 008c 044B     		ldr	r3, .L70+4
 795 008e 1A60     		str	r2, [r3]
 796              		.syntax unified
 797              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 798 0090 BFF34F8F 		dsb
 799              	@ 0 "" 2
 800              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 801 0094 BFF36F8F 		isb
 802              	@ 0 "" 2
 803              		.thumb
 804              		.syntax unified
 805              	.L61:
 806 0098 70BD     		pop	{r4, r5, r6, pc}
 807              	.LVL82:
 808              	.L71:
 809 009a 00BF     		.align	2
 810              	.L70:
 811 009c 00000000 		.word	.LANCHOR0
 812 00a0 04ED00E0 		.word	-536810236
 813              		.cfi_endproc
 814              	.LFE524:
 815              		.size	vTaskDelete, .-vTaskDelete
 816              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 817              		.align	2
 818              		.global	uxTaskPriorityGet
 819              		.thumb
 820              		.thumb_func
 821              		.type	uxTaskPriorityGet, %function
 822              	uxTaskPriorityGet:
 823              	.LFB527:
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 824              		.loc 1 1341 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL83:
 829 0000 10B5     		push	{r4, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833 0002 0446     		mov	r4, r0
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 834              		.loc 1 1345 0
 835 0004 FFF7FEFF 		bl	vPortEnterCritical
 836              	.LVL84:
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 101


 837              		.loc 1 1349 0
 838 0008 14B9     		cbnz	r4, .L73
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 839              		.loc 1 1349 0 is_stmt 0 discriminator 1
 840 000a 044B     		ldr	r3, .L75
 841 000c D3F80442 		ldr	r4, [r3, #516]
 842              	.LVL85:
 843              	.L73:
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 844              		.loc 1 1350 0 is_stmt 1 discriminator 4
 845 0010 E46A     		ldr	r4, [r4, #44]
 846              	.LVL86:
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 847              		.loc 1 1352 0 discriminator 4
 848 0012 FFF7FEFF 		bl	vPortExitCritical
 849              	.LVL87:
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 850              		.loc 1 1355 0 discriminator 4
 851 0016 2046     		mov	r0, r4
 852 0018 10BD     		pop	{r4, pc}
 853              	.LVL88:
 854              	.L76:
 855 001a 00BF     		.align	2
 856              	.L75:
 857 001c 00000000 		.word	.LANCHOR0
 858              		.cfi_endproc
 859              	.LFE527:
 860              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 861              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 862              		.align	2
 863              		.global	uxTaskPriorityGetFromISR
 864              		.thumb
 865              		.thumb_func
 866              		.type	uxTaskPriorityGetFromISR, %function
 867              	uxTaskPriorityGetFromISR:
 868              	.LFB528:
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 869              		.loc 1 1363 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL89:
 874 0000 10B5     		push	{r4, lr}
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 4, -8
 877              		.cfi_offset 14, -4
 878 0002 0446     		mov	r4, r0
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 879              		.loc 1 1383 0
 880 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 881              	.LVL90:
 882              	.LBB19:
 883              	.LBB20:
 884              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     All rights reserved
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 102


   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 103


  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** */
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  */
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR        char
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT       float
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE      double
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG        long
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT       short
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE  uint32_t
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE   long
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint16_t TickType_t;
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffff
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #else
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint32_t TickType_t;
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     not need to be guarded with a critical section. */
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC 1
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH              ( -1 )
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS            ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT            8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 104


 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD()                                                            \
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {                                                                              \
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Set a PendSV to request a context switch. */                            \
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;                            \
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****                                                                                \
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Barriers are normally not required but do ensure the code is completely \
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     within the specified behaviour for the architecture. */                    \
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "dsb" );                                                   \
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "isb" );                                                   \
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }                                                                              \
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG         ( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT        ( 1UL << 28UL )
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )       portEND_SWITCHING_ISR( x )
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()       ulPortRaiseBASEPRI()
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)    vPortSetBASEPRI(x)
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                __asm volatile   ( " cpsid i " )
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                 __asm volatile   ( " cpsie i " )
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()                    vPortEnterCritical()
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()                     vPortExitCritical()
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site. */
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()     vPortValidateInterruptPriority()
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE    __inline
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portFORCE_INLINE inline __attribute__(( always_inline))
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 105


 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdFALSE;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     else
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdTRUE;
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 191:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return xReturn;
 192:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 193:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 195:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 197:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 198:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 199:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 200:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 201:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %0, %1                                                 \n" \
 202:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %0                                            \n" \
 203:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 204:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 205:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 206:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 207:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 208:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 209:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 211:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 213:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 885              		.loc 2 215 0
 886              		.syntax unified
 887              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 888 0008 EFF31183 		    mrs r3, basepri                                            
 889 000c 4FF02F02 	    mov r2, #47                                                 
 890 0010 82F31188 	    msr basepri, r2                                            
 891 0014 BFF36F8F 	    isb                                                        
 892 0018 BFF34F8F 	    dsb                                                        
 893              	
 894              	@ 0 "" 2
 895              		.thumb
 896              		.syntax unified
 897              	.LBE20:
 898              	.LBE19:
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 899              		.loc 1 1389 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 106


 900 001c 14B9     		cbnz	r4, .L78
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 901              		.loc 1 1389 0 is_stmt 0 discriminator 1
 902 001e 034A     		ldr	r2, .L80
 903 0020 D2F80442 		ldr	r4, [r2, #516]
 904              	.LVL91:
 905              	.L78:
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 906              		.loc 1 1390 0 is_stmt 1 discriminator 4
 907 0024 E06A     		ldr	r0, [r4, #44]
 908              	.LVL92:
 909              	.LBB21:
 910              	.LBB22:
 216:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 217:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mrs %0, basepri                                            \n" \
 218:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %1, %2                                                 \n" \
 219:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %1                                            \n" \
 220:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 221:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 222:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY
 223:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 224:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 225:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* This return will not be reached but is necessary to prevent compiler
 226:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     warnings. */
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return ulOriginalBASEPRI;
 228:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 229:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 231:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 233:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 911              		.loc 2 233 0 discriminator 4
 912              		.syntax unified
 913              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 914 0026 83F31188 		    msr basepri, r3  
 915              	@ 0 "" 2
 916              	.LVL93:
 917              		.thumb
 918              		.syntax unified
 919              	.LBE22:
 920              	.LBE21:
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 921              		.loc 1 1395 0 discriminator 4
 922 002a 10BD     		pop	{r4, pc}
 923              	.LVL94:
 924              	.L81:
 925              		.align	2
 926              	.L80:
 927 002c 00000000 		.word	.LANCHOR0
 928              		.cfi_endproc
 929              	.LFE528:
 930              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 931              		.section	.text.vTaskPrioritySet,"ax",%progbits
 932              		.align	2
 933              		.global	vTaskPrioritySet
 934              		.thumb
 935              		.thumb_func
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 107


 936              		.type	vTaskPrioritySet, %function
 937              	vTaskPrioritySet:
 938              	.LFB529:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 939              		.loc 1 1403 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL95:
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 944              		.loc 1 1408 0
 945 0000 1329     		cmp	r1, #19
 946 0002 01D9     		bls	.L83
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 947              		.loc 1 1408 0 is_stmt 0 discriminator 1
 948              		.syntax unified
 949              	@ 1408 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 950 0004 72B6     		 cpsid i 
 951              	@ 0 "" 2
 952              		.thumb
 953              		.syntax unified
 954              	.L84:
 955 0006 FEE7     		b	.L84
 956              	.L83:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 957              		.loc 1 1403 0 is_stmt 1
 958 0008 70B5     		push	{r4, r5, r6, lr}
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 000a 0446     		mov	r4, r0
 965 000c 0D46     		mov	r5, r1
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 966              		.loc 1 1411 0
 967 000e 1329     		cmp	r1, #19
 968 0010 00D9     		bls	.L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 969              		.loc 1 1413 0
 970 0012 1325     		movs	r5, #19
 971              	.L85:
 972              	.LVL96:
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 973              		.loc 1 1420 0
 974 0014 FFF7FEFF 		bl	vPortEnterCritical
 975              	.LVL97:
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976              		.loc 1 1424 0
 977 0018 14B9     		cbnz	r4, .L86
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 978              		.loc 1 1424 0 is_stmt 0 discriminator 1
 979 001a 2A4B     		ldr	r3, .L100
 980 001c D3F80442 		ldr	r4, [r3, #516]
 981              	.LVL98:
 982              	.L86:
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 108


 983              		.loc 1 1434 0 is_stmt 1 discriminator 4
 984 0020 E36A     		ldr	r3, [r4, #44]
 985              	.LVL99:
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 986              		.loc 1 1438 0 discriminator 4
 987 0022 9D42     		cmp	r5, r3
 988 0024 4AD0     		beq	.L87
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 989              		.loc 1 1442 0
 990 0026 0CD9     		bls	.L88
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 991              		.loc 1 1444 0
 992 0028 264A     		ldr	r2, .L100
 993 002a D2F80422 		ldr	r2, [r2, #516]
 994 002e 9442     		cmp	r4, r2
 995 0030 0ED0     		beq	.L95
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 996              		.loc 1 1449 0
 997 0032 244A     		ldr	r2, .L100
 998 0034 D2F80422 		ldr	r2, [r2, #516]
 999 0038 D26A     		ldr	r2, [r2, #44]
 1000 003a 9542     		cmp	r5, r2
 1001 003c 0AD2     		bcs	.L96
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1002              		.loc 1 1406 0
 1003 003e 0026     		movs	r6, #0
 1004 0040 0BE0     		b	.L89
 1005              	.L88:
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1006              		.loc 1 1465 0
 1007 0042 204A     		ldr	r2, .L100
 1008 0044 D2F80422 		ldr	r2, [r2, #516]
 1009 0048 9442     		cmp	r4, r2
 1010 004a 05D0     		beq	.L97
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1011              		.loc 1 1406 0
 1012 004c 0026     		movs	r6, #0
 1013 004e 04E0     		b	.L89
 1014              	.L95:
 1015 0050 0026     		movs	r6, #0
 1016 0052 02E0     		b	.L89
 1017              	.L96:
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1018              		.loc 1 1451 0
 1019 0054 0126     		movs	r6, #1
 1020 0056 00E0     		b	.L89
 1021              	.L97:
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1022              		.loc 1 1470 0
 1023 0058 0126     		movs	r6, #1
 1024              	.L89:
 1025              	.LVL100:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1026              		.loc 1 1502 0
 1027 005a E562     		str	r5, [r4, #44]
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1028              		.loc 1 1508 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 109


 1029 005c A269     		ldr	r2, [r4, #24]
 1030 005e 002A     		cmp	r2, #0
 1031 0060 02DB     		blt	.L90
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1032              		.loc 1 1510 0
 1033 0062 C5F11405 		rsb	r5, r5, #20
 1034              	.LVL101:
 1035 0066 A561     		str	r5, [r4, #24]
 1036              	.L90:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1037              		.loc 1 1521 0
 1038 0068 6169     		ldr	r1, [r4, #20]
 1039 006a 03EB8303 		add	r3, r3, r3, lsl #2
 1040              	.LVL102:
 1041 006e 9A00     		lsls	r2, r3, #2
 1042 0070 154B     		ldr	r3, .L100+4
 1043 0072 1A44     		add	r2, r2, r3
 1044 0074 9142     		cmp	r1, r2
 1045 0076 01D1     		bne	.L98
 1046 0078 0123     		movs	r3, #1
 1047 007a 00E0     		b	.L91
 1048              	.L98:
 1049 007c 0023     		movs	r3, #0
 1050              	.L91:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1051              		.loc 1 1521 0 is_stmt 0 discriminator 4
 1052 007e A3B1     		cbz	r3, .L92
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1053              		.loc 1 1526 0 is_stmt 1
 1054 0080 251D     		adds	r5, r4, #4
 1055 0082 2846     		mov	r0, r5
 1056 0084 FFF7FEFF 		bl	uxListRemove
 1057              	.LVL103:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1058              		.loc 1 1537 0
 1059 0088 E36A     		ldr	r3, [r4, #44]
 1060 008a 0E4A     		ldr	r2, .L100
 1061 008c D2F81022 		ldr	r2, [r2, #528]
 1062 0090 9342     		cmp	r3, r2
 1063 0092 02D9     		bls	.L93
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1064              		.loc 1 1537 0 is_stmt 0 discriminator 1
 1065 0094 0B4A     		ldr	r2, .L100
 1066 0096 C2F81032 		str	r3, [r2, #528]
 1067              	.L93:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1068              		.loc 1 1537 0 discriminator 3
 1069 009a 03EB8303 		add	r3, r3, r3, lsl #2
 1070 009e 9A00     		lsls	r2, r3, #2
 1071 00a0 2946     		mov	r1, r5
 1072 00a2 0948     		ldr	r0, .L100+4
 1073 00a4 1044     		add	r0, r0, r2
 1074 00a6 FFF7FEFF 		bl	vListInsertEnd
 1075              	.LVL104:
 1076              	.L92:
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1077              		.loc 1 1544 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 110


 1078 00aa 3EB1     		cbz	r6, .L87
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1079              		.loc 1 1546 0
 1080 00ac 4FF08052 		mov	r2, #268435456
 1081 00b0 064B     		ldr	r3, .L100+8
 1082 00b2 1A60     		str	r2, [r3]
 1083              		.syntax unified
 1084              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1085 00b4 BFF34F8F 		dsb
 1086              	@ 0 "" 2
 1087              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1088 00b8 BFF36F8F 		isb
 1089              	@ 0 "" 2
 1090              	.LVL105:
 1091              		.thumb
 1092              		.syntax unified
 1093              	.L87:
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1094              		.loc 1 1558 0
 1095 00bc FFF7FEFF 		bl	vPortExitCritical
 1096              	.LVL106:
 1097 00c0 70BD     		pop	{r4, r5, r6, pc}
 1098              	.LVL107:
 1099              	.L101:
 1100 00c2 00BF     		.align	2
 1101              	.L100:
 1102 00c4 00000000 		.word	.LANCHOR0
 1103 00c8 30000000 		.word	.LANCHOR0+48
 1104 00cc 04ED00E0 		.word	-536810236
 1105              		.cfi_endproc
 1106              	.LFE529:
 1107              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1108              		.section	.text.vTaskResume,"ax",%progbits
 1109              		.align	2
 1110              		.global	vTaskResume
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	vTaskResume, %function
 1114              	vTaskResume:
 1115              	.LFB532:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1116              		.loc 1 1703 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              	.LVL108:
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1121              		.loc 1 1707 0
 1122 0000 08B9     		cbnz	r0, .L103
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1123              		.loc 1 1707 0 is_stmt 0 discriminator 1
 1124              		.syntax unified
 1125              	@ 1707 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1126 0002 72B6     		 cpsid i 
 1127              	@ 0 "" 2
 1128              		.thumb
 1129              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 111


 1130              	.L104:
 1131 0004 FEE7     		b	.L104
 1132              	.L103:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1133              		.loc 1 1703 0 is_stmt 1
 1134 0006 70B5     		push	{r4, r5, r6, lr}
 1135              		.cfi_def_cfa_offset 16
 1136              		.cfi_offset 4, -16
 1137              		.cfi_offset 5, -12
 1138              		.cfi_offset 6, -8
 1139              		.cfi_offset 14, -4
 1140 0008 0446     		mov	r4, r0
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1141              		.loc 1 1711 0
 1142 000a 88B3     		cbz	r0, .L102
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1143              		.loc 1 1711 0 is_stmt 0 discriminator 1
 1144 000c 194B     		ldr	r3, .L109
 1145 000e D3F80432 		ldr	r3, [r3, #516]
 1146 0012 9842     		cmp	r0, r3
 1147 0014 2CD0     		beq	.L102
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1148              		.loc 1 1713 0 is_stmt 1
 1149 0016 FFF7FEFF 		bl	vPortEnterCritical
 1150              	.LVL109:
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1151              		.loc 1 1715 0
 1152 001a 2046     		mov	r0, r4
 1153 001c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1154              	.LVL110:
 1155 0020 20B3     		cbz	r0, .L106
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1156              		.loc 1 1721 0
 1157 0022 261D     		adds	r6, r4, #4
 1158 0024 3046     		mov	r0, r6
 1159 0026 FFF7FEFF 		bl	uxListRemove
 1160              	.LVL111:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1161              		.loc 1 1722 0
 1162 002a E36A     		ldr	r3, [r4, #44]
 1163 002c 114A     		ldr	r2, .L109
 1164 002e D2F81022 		ldr	r2, [r2, #528]
 1165 0032 9342     		cmp	r3, r2
 1166 0034 02D9     		bls	.L107
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1167              		.loc 1 1722 0 is_stmt 0 discriminator 1
 1168 0036 0F4A     		ldr	r2, .L109
 1169 0038 C2F81032 		str	r3, [r2, #528]
 1170              	.L107:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1171              		.loc 1 1722 0 discriminator 3
 1172 003c 0D4D     		ldr	r5, .L109
 1173 003e 05F13000 		add	r0, r5, #48
 1174 0042 03EB8303 		add	r3, r3, r3, lsl #2
 1175 0046 9A00     		lsls	r2, r3, #2
 1176 0048 3146     		mov	r1, r6
 1177 004a 1044     		add	r0, r0, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 112


 1178 004c FFF7FEFF 		bl	vListInsertEnd
 1179              	.LVL112:
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1180              		.loc 1 1725 0 is_stmt 1 discriminator 3
 1181 0050 E26A     		ldr	r2, [r4, #44]
 1182 0052 D5F80432 		ldr	r3, [r5, #516]
 1183 0056 DB6A     		ldr	r3, [r3, #44]
 1184 0058 9A42     		cmp	r2, r3
 1185 005a 07D3     		bcc	.L106
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1186              		.loc 1 1730 0
 1187 005c 4FF08052 		mov	r2, #268435456
 1188 0060 054B     		ldr	r3, .L109+4
 1189 0062 1A60     		str	r2, [r3]
 1190              		.syntax unified
 1191              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1192 0064 BFF34F8F 		dsb
 1193              	@ 0 "" 2
 1194              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1195 0068 BFF36F8F 		isb
 1196              	@ 0 "" 2
 1197              		.thumb
 1198              		.syntax unified
 1199              	.L106:
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1200              		.loc 1 1742 0
 1201 006c FFF7FEFF 		bl	vPortExitCritical
 1202              	.LVL113:
 1203              	.L102:
 1204 0070 70BD     		pop	{r4, r5, r6, pc}
 1205              	.LVL114:
 1206              	.L110:
 1207 0072 00BF     		.align	2
 1208              	.L109:
 1209 0074 00000000 		.word	.LANCHOR0
 1210 0078 04ED00E0 		.word	-536810236
 1211              		.cfi_endproc
 1212              	.LFE532:
 1213              		.size	vTaskResume, .-vTaskResume
 1214              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1215              		.align	2
 1216              		.global	xTaskResumeFromISR
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	xTaskResumeFromISR, %function
 1220              	xTaskResumeFromISR:
 1221              	.LFB533:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1222              		.loc 1 1757 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL115:
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1227              		.loc 1 1762 0
 1228 0000 08B9     		cbnz	r0, .L112
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 113


 1229              		.loc 1 1762 0 is_stmt 0 discriminator 1
 1230              		.syntax unified
 1231              	@ 1762 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1232 0002 72B6     		 cpsid i 
 1233              	@ 0 "" 2
 1234              		.thumb
 1235              		.syntax unified
 1236              	.L113:
 1237 0004 FEE7     		b	.L113
 1238              	.L112:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1239              		.loc 1 1757 0 is_stmt 1
 1240 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1241              		.cfi_def_cfa_offset 24
 1242              		.cfi_offset 3, -24
 1243              		.cfi_offset 4, -20
 1244              		.cfi_offset 5, -16
 1245              		.cfi_offset 6, -12
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0008 0446     		mov	r4, r0
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1249              		.loc 1 1780 0
 1250 000a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1251              	.LVL116:
 1252              	.LBB23:
 1253              	.LBB24:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 1254              		.loc 2 215 0
 1255              		.syntax unified
 1256              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1257 000e EFF31187 		    mrs r7, basepri                                            
 1258 0012 4FF02F03 	    mov r3, #47                                                 
 1259 0016 83F31188 	    msr basepri, r3                                            
 1260 001a BFF36F8F 	    isb                                                        
 1261 001e BFF34F8F 	    dsb                                                        
 1262              	
 1263              	@ 0 "" 2
 1264              		.thumb
 1265              		.syntax unified
 1266              	.LBE24:
 1267              	.LBE23:
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1268              		.loc 1 1784 0
 1269 0022 2046     		mov	r0, r4
 1270 0024 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1271              	.LVL117:
 1272 0028 50B3     		cbz	r0, .L118
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1273              		.loc 1 1789 0
 1274 002a 184B     		ldr	r3, .L121
 1275 002c D3F81C32 		ldr	r3, [r3, #540]
 1276 0030 FBB9     		cbnz	r3, .L115
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1277              		.loc 1 1793 0
 1278 0032 E26A     		ldr	r2, [r4, #44]
 1279 0034 154B     		ldr	r3, .L121
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 114


 1280 0036 D3F80432 		ldr	r3, [r3, #516]
 1281 003a DB6A     		ldr	r3, [r3, #44]
 1282 003c 9A42     		cmp	r2, r3
 1283 003e 01D2     		bcs	.L119
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1284              		.loc 1 1758 0
 1285 0040 0025     		movs	r5, #0
 1286 0042 00E0     		b	.L116
 1287              	.L119:
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1288              		.loc 1 1795 0
 1289 0044 0125     		movs	r5, #1
 1290              	.L116:
 1291              	.LVL118:
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1292              		.loc 1 1802 0
 1293 0046 261D     		adds	r6, r4, #4
 1294 0048 3046     		mov	r0, r6
 1295 004a FFF7FEFF 		bl	uxListRemove
 1296              	.LVL119:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1297              		.loc 1 1803 0
 1298 004e E36A     		ldr	r3, [r4, #44]
 1299 0050 0E4A     		ldr	r2, .L121
 1300 0052 D2F81022 		ldr	r2, [r2, #528]
 1301 0056 9342     		cmp	r3, r2
 1302 0058 02D9     		bls	.L117
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1303              		.loc 1 1803 0 is_stmt 0 discriminator 1
 1304 005a 0C4A     		ldr	r2, .L121
 1305 005c C2F81032 		str	r3, [r2, #528]
 1306              	.L117:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1307              		.loc 1 1803 0 discriminator 3
 1308 0060 03EB8303 		add	r3, r3, r3, lsl #2
 1309 0064 9A00     		lsls	r2, r3, #2
 1310 0066 3146     		mov	r1, r6
 1311 0068 0948     		ldr	r0, .L121+4
 1312 006a 1044     		add	r0, r0, r2
 1313 006c FFF7FEFF 		bl	vListInsertEnd
 1314              	.LVL120:
 1315 0070 07E0     		b	.L114
 1316              	.LVL121:
 1317              	.L115:
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1318              		.loc 1 1810 0 is_stmt 1
 1319 0072 04F11801 		add	r1, r4, #24
 1320 0076 0748     		ldr	r0, .L121+8
 1321 0078 FFF7FEFF 		bl	vListInsertEnd
 1322              	.LVL122:
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1323              		.loc 1 1758 0
 1324 007c 0025     		movs	r5, #0
 1325 007e 00E0     		b	.L114
 1326              	.L118:
 1327 0080 0025     		movs	r5, #0
 1328              	.LVL123:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 115


 1329              	.L114:
 1330              	.LBB25:
 1331              	.LBB26:
 1332              		.loc 2 233 0
 1333              		.syntax unified
 1334              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1335 0082 87F31188 		    msr basepri, r7  
 1336              	@ 0 "" 2
 1337              	.LVL124:
 1338              		.thumb
 1339              		.syntax unified
 1340              	.LBE26:
 1341              	.LBE25:
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1342              		.loc 1 1821 0
 1343 0086 2846     		mov	r0, r5
 1344 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1345              	.LVL125:
 1346              	.L122:
 1347 008a 00BF     		.align	2
 1348              	.L121:
 1349 008c 00000000 		.word	.LANCHOR0
 1350 0090 30000000 		.word	.LANCHOR0+48
 1351 0094 14000000 		.word	.LANCHOR0+20
 1352              		.cfi_endproc
 1353              	.LFE533:
 1354              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1355              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1356              		.align	2
 1357              		.global	vTaskStartScheduler
 1358              		.thumb
 1359              		.thumb_func
 1360              		.type	vTaskStartScheduler, %function
 1361              	vTaskStartScheduler:
 1362              	.LFB534:
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 1363              		.loc 1 1827 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367 0000 00B5     		push	{lr}
 1368              		.cfi_def_cfa_offset 4
 1369              		.cfi_offset 14, -4
 1370 0002 83B0     		sub	sp, sp, #12
 1371              		.cfi_def_cfa_offset 16
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1372              		.loc 1 1860 0
 1373 0004 124B     		ldr	r3, .L129
 1374 0006 0193     		str	r3, [sp, #4]
 1375 0008 0023     		movs	r3, #0
 1376 000a 0093     		str	r3, [sp]
 1377 000c 8022     		movs	r2, #128
 1378 000e 1149     		ldr	r1, .L129+4
 1379 0010 1148     		ldr	r0, .L129+8
 1380 0012 FFF7FEFF 		bl	xTaskCreate
 1381              	.LVL126:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 116


 1382              		.loc 1 1870 0
 1383 0016 0128     		cmp	r0, #1
 1384 0018 01D1     		bne	.L124
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1385              		.loc 1 1872 0
 1386 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1387              	.LVL127:
 1388              	.L124:
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1389              		.loc 1 1881 0
 1390 001e 0128     		cmp	r0, #1
 1391 0020 0DD1     		bne	.L125
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1392              		.loc 1 1888 0
 1393              		.syntax unified
 1394              	@ 1888 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1395 0022 72B6     		 cpsid i 
 1396              	@ 0 "" 2
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1397              		.loc 1 1898 0
 1398              		.thumb
 1399              		.syntax unified
 1400 0024 0D4B     		ldr	r3, .L129+12
 1401 0026 4FF0FF32 		mov	r2, #-1
 1402 002a DA62     		str	r2, [r3, #44]
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1403              		.loc 1 1899 0
 1404 002c 0122     		movs	r2, #1
 1405 002e C3F80822 		str	r2, [r3, #520]
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1406              		.loc 1 1900 0
 1407 0032 0022     		movs	r2, #0
 1408 0034 C3F81422 		str	r2, [r3, #532]
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1409              		.loc 1 1909 0
 1410 0038 FFF7FEFF 		bl	xPortStartScheduler
 1411              	.LVL128:
 1412 003c 04E0     		b	.L123
 1413              	.LVL129:
 1414              	.L125:
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1415              		.loc 1 1924 0
 1416 003e B0F1FF3F 		cmp	r0, #-1
 1417 0042 01D1     		bne	.L123
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1418              		.loc 1 1924 0 is_stmt 0 discriminator 1
 1419              		.syntax unified
 1420              	@ 1924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1421 0044 72B6     		 cpsid i 
 1422              	@ 0 "" 2
 1423              		.thumb
 1424              		.syntax unified
 1425              	.L127:
 1426 0046 FEE7     		b	.L127
 1427              	.LVL130:
 1428              	.L123:
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 117


 1429              		.loc 1 1930 0 is_stmt 1
 1430 0048 03B0     		add	sp, sp, #12
 1431              		.cfi_def_cfa_offset 4
 1432              		@ sp needed
 1433 004a 5DF804FB 		ldr	pc, [sp], #4
 1434              	.L130:
 1435 004e 00BF     		.align	2
 1436              	.L129:
 1437 0050 20020000 		.word	.LANCHOR0+544
 1438 0054 00000000 		.word	.LC0
 1439 0058 00000000 		.word	prvIdleTask
 1440 005c 00000000 		.word	.LANCHOR0
 1441              		.cfi_endproc
 1442              	.LFE534:
 1443              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1444              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1445              		.align	2
 1446              		.global	vTaskEndScheduler
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	vTaskEndScheduler, %function
 1450              	vTaskEndScheduler:
 1451              	.LFB535:
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1452              		.loc 1 1934 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 08B5     		push	{r3, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1460              		.loc 1 1938 0
 1461              		.syntax unified
 1462              	@ 1938 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1463 0002 72B6     		 cpsid i 
 1464              	@ 0 "" 2
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
 1465              		.loc 1 1939 0
 1466              		.thumb
 1467              		.syntax unified
 1468 0004 0022     		movs	r2, #0
 1469 0006 034B     		ldr	r3, .L133
 1470 0008 C3F80822 		str	r2, [r3, #520]
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1471              		.loc 1 1940 0
 1472 000c FFF7FEFF 		bl	vPortEndScheduler
 1473              	.LVL131:
 1474 0010 08BD     		pop	{r3, pc}
 1475              	.L134:
 1476 0012 00BF     		.align	2
 1477              	.L133:
 1478 0014 00000000 		.word	.LANCHOR0
 1479              		.cfi_endproc
 1480              	.LFE535:
 1481              		.size	vTaskEndScheduler, .-vTaskEndScheduler
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 118


 1482              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1483              		.align	2
 1484              		.global	vTaskSuspendAll
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	vTaskSuspendAll, %function
 1488              	vTaskSuspendAll:
 1489              	.LFB536:
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1490              		.loc 1 1945 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1495              		.loc 1 1950 0
 1496 0000 034A     		ldr	r2, .L136
 1497 0002 D2F81C32 		ldr	r3, [r2, #540]
 1498 0006 0133     		adds	r3, r3, #1
 1499 0008 C2F81C32 		str	r3, [r2, #540]
 1500 000c 7047     		bx	lr
 1501              	.L137:
 1502 000e 00BF     		.align	2
 1503              	.L136:
 1504 0010 00000000 		.word	.LANCHOR0
 1505              		.cfi_endproc
 1506              	.LFE536:
 1507              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1508              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1509              		.align	2
 1510              		.global	xTaskGetTickCount
 1511              		.thumb
 1512              		.thumb_func
 1513              		.type	xTaskGetTickCount, %function
 1514              	xTaskGetTickCount:
 1515              	.LFB538:
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
 1516              		.loc 1 2128 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1521              		.loc 1 2134 0
 1522 0000 014B     		ldr	r3, .L139
 1523 0002 D3F81402 		ldr	r0, [r3, #532]
 1524              	.LVL132:
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1525              		.loc 1 2139 0
 1526 0006 7047     		bx	lr
 1527              	.L140:
 1528              		.align	2
 1529              	.L139:
 1530 0008 00000000 		.word	.LANCHOR0
 1531              		.cfi_endproc
 1532              	.LFE538:
 1533              		.size	xTaskGetTickCount, .-xTaskGetTickCount
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 119


 1534              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1535              		.align	2
 1536              		.global	xTaskGetTickCountFromISR
 1537              		.thumb
 1538              		.thumb_func
 1539              		.type	xTaskGetTickCountFromISR, %function
 1540              	xTaskGetTickCountFromISR:
 1541              	.LFB539:
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
 1542              		.loc 1 2143 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546 0000 08B5     		push	{r3, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 3, -8
 1549              		.cfi_offset 14, -4
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1550              		.loc 1 2161 0
 1551 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1552              	.LVL133:
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1553              		.loc 1 2165 0
 1554 0006 024B     		ldr	r3, .L143
 1555 0008 D3F81402 		ldr	r0, [r3, #532]
 1556              	.LVL134:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1557              		.loc 1 2170 0
 1558 000c 08BD     		pop	{r3, pc}
 1559              	.L144:
 1560 000e 00BF     		.align	2
 1561              	.L143:
 1562 0010 00000000 		.word	.LANCHOR0
 1563              		.cfi_endproc
 1564              	.LFE539:
 1565              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1566              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1567              		.align	2
 1568              		.global	uxTaskGetNumberOfTasks
 1569              		.thumb
 1570              		.thumb_func
 1571              		.type	uxTaskGetNumberOfTasks, %function
 1572              	uxTaskGetNumberOfTasks:
 1573              	.LFB540:
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1574              		.loc 1 2174 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1579              		.loc 1 2177 0
 1580 0000 014B     		ldr	r3, .L146
 1581 0002 D3F80002 		ldr	r0, [r3, #512]
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1582              		.loc 1 2178 0
 1583 0006 7047     		bx	lr
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 120


 1584              	.L147:
 1585              		.align	2
 1586              	.L146:
 1587 0008 00000000 		.word	.LANCHOR0
 1588              		.cfi_endproc
 1589              	.LFE540:
 1590              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1591              		.section	.text.pcTaskGetName,"ax",%progbits
 1592              		.align	2
 1593              		.global	pcTaskGetName
 1594              		.thumb
 1595              		.thumb_func
 1596              		.type	pcTaskGetName, %function
 1597              	pcTaskGetName:
 1598              	.LFB541:
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
 1599              		.loc 1 2182 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604              	.LVL135:
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1605              		.loc 1 2187 0
 1606 0000 0346     		mov	r3, r0
 1607 0002 10B9     		cbnz	r0, .L149
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1608              		.loc 1 2187 0 is_stmt 0 discriminator 1
 1609 0004 044B     		ldr	r3, .L152
 1610 0006 D3F80432 		ldr	r3, [r3, #516]
 1611              	.LVL136:
 1612              	.L149:
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1613              		.loc 1 2188 0 is_stmt 1 discriminator 4
 1614 000a 0BB9     		cbnz	r3, .L150
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1615              		.loc 1 2188 0 is_stmt 0 discriminator 1
 1616              		.syntax unified
 1617              	@ 2188 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1618 000c 72B6     		 cpsid i 
 1619              	@ 0 "" 2
 1620              		.thumb
 1621              		.syntax unified
 1622              	.L151:
 1623 000e FEE7     		b	.L151
 1624              	.L150:
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1625              		.loc 1 2190 0 is_stmt 1
 1626 0010 03F13400 		add	r0, r3, #52
 1627 0014 7047     		bx	lr
 1628              	.L153:
 1629 0016 00BF     		.align	2
 1630              	.L152:
 1631 0018 00000000 		.word	.LANCHOR0
 1632              		.cfi_endproc
 1633              	.LFE541:
 1634              		.size	pcTaskGetName, .-pcTaskGetName
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 121


 1635              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1636              		.align	2
 1637              		.global	xTaskIncrementTick
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	xTaskIncrementTick, %function
 1641              	xTaskIncrementTick:
 1642              	.LFB542:
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
 1643              		.loc 1 2500 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1648              		.cfi_def_cfa_offset 24
 1649              		.cfi_offset 4, -24
 1650              		.cfi_offset 5, -20
 1651              		.cfi_offset 6, -16
 1652              		.cfi_offset 7, -12
 1653              		.cfi_offset 8, -8
 1654              		.cfi_offset 14, -4
 1655              	.LVL137:
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1656              		.loc 1 2509 0
 1657 0004 394B     		ldr	r3, .L174
 1658 0006 D3F81C32 		ldr	r3, [r3, #540]
 1659 000a 002B     		cmp	r3, #0
 1660 000c 5ED1     		bne	.L155
 1661              	.LBB27:
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1662              		.loc 1 2513 0
 1663 000e 374B     		ldr	r3, .L174
 1664 0010 D3F81442 		ldr	r4, [r3, #532]
 1665 0014 0134     		adds	r4, r4, #1
 1666              	.LVL138:
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1667              		.loc 1 2517 0
 1668 0016 C3F81442 		str	r4, [r3, #532]
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1669              		.loc 1 2519 0
 1670 001a 94B9     		cbnz	r4, .L156
 1671              	.LBB28:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1672              		.loc 1 2521 0
 1673 001c 9B6A     		ldr	r3, [r3, #40]
 1674 001e 1B68     		ldr	r3, [r3]
 1675 0020 0BB1     		cbz	r3, .L157
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1676              		.loc 1 2521 0 is_stmt 0 discriminator 1
 1677              		.syntax unified
 1678              	@ 2521 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1679 0022 72B6     		 cpsid i 
 1680              	@ 0 "" 2
 1681              		.thumb
 1682              		.syntax unified
 1683              	.L158:
 1684 0024 FEE7     		b	.L158
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 122


 1685              	.L157:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1686              		.loc 1 2521 0 discriminator 2
 1687 0026 314B     		ldr	r3, .L174
 1688 0028 9A6A     		ldr	r2, [r3, #40]
 1689              	.LVL139:
 1690 002a D3F8FC11 		ldr	r1, [r3, #508]
 1691 002e 9962     		str	r1, [r3, #40]
 1692 0030 C3F8FC21 		str	r2, [r3, #508]
 1693 0034 D3F82422 		ldr	r2, [r3, #548]
 1694              	.LVL140:
 1695 0038 0132     		adds	r2, r2, #1
 1696 003a C3F82422 		str	r2, [r3, #548]
 1697              	.LVL141:
 1698 003e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1699              	.LVL142:
 1700              	.L156:
 1701              	.LBE28:
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1702              		.loc 1 2532 0 is_stmt 1
 1703 0042 2A4B     		ldr	r3, .L174
 1704 0044 DB6A     		ldr	r3, [r3, #44]
 1705 0046 9C42     		cmp	r4, r3
 1706 0048 03D2     		bcs	.L169
 1707              	.LBE27:
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1708              		.loc 1 2503 0
 1709 004a 0026     		movs	r6, #0
 1710 004c 45E0     		b	.L160
 1711              	.LVL143:
 1712              	.L171:
 1713              	.LBB29:
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1714              		.loc 1 2598 0
 1715 004e 0126     		movs	r6, #1
 1716              	.LVL144:
 1717 0050 00E0     		b	.L159
 1718              	.LVL145:
 1719              	.L169:
 1720 0052 0026     		movs	r6, #0
 1721              	.LVL146:
 1722              	.L159:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1723              		.loc 1 2536 0
 1724 0054 254B     		ldr	r3, .L174
 1725 0056 9B6A     		ldr	r3, [r3, #40]
 1726 0058 1B68     		ldr	r3, [r3]
 1727 005a 0BB9     		cbnz	r3, .L170
 1728 005c 0123     		movs	r3, #1
 1729 005e 00E0     		b	.L161
 1730              	.L170:
 1731 0060 0023     		movs	r3, #0
 1732              	.L161:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1733              		.loc 1 2536 0 is_stmt 0 discriminator 4
 1734 0062 23B1     		cbz	r3, .L162
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 123


 1735              		.loc 1 2543 0 is_stmt 1
 1736 0064 4FF0FF32 		mov	r2, #-1
 1737 0068 204B     		ldr	r3, .L174
 1738 006a DA62     		str	r2, [r3, #44]
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1739              		.loc 1 2544 0
 1740 006c 35E0     		b	.L160
 1741              	.L162:
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1742              		.loc 1 2552 0
 1743 006e 1F4B     		ldr	r3, .L174
 1744 0070 9B6A     		ldr	r3, [r3, #40]
 1745 0072 DB68     		ldr	r3, [r3, #12]
 1746 0074 DD68     		ldr	r5, [r3, #12]
 1747              	.LVL147:
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1748              		.loc 1 2553 0
 1749 0076 6B68     		ldr	r3, [r5, #4]
 1750              	.LVL148:
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1751              		.loc 1 2555 0
 1752 0078 9C42     		cmp	r4, r3
 1753 007a 02D2     		bcs	.L163
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
 1754              		.loc 1 2562 0
 1755 007c 1B4A     		ldr	r2, .L174
 1756 007e D362     		str	r3, [r2, #44]
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1757              		.loc 1 2563 0
 1758 0080 2BE0     		b	.L160
 1759              	.L163:
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1760              		.loc 1 2571 0
 1761 0082 05F10408 		add	r8, r5, #4
 1762 0086 4046     		mov	r0, r8
 1763 0088 FFF7FEFF 		bl	uxListRemove
 1764              	.LVL149:
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1765              		.loc 1 2575 0
 1766 008c AB6A     		ldr	r3, [r5, #40]
 1767 008e 1BB1     		cbz	r3, .L164
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1768              		.loc 1 2577 0
 1769 0090 05F11800 		add	r0, r5, #24
 1770 0094 FFF7FEFF 		bl	uxListRemove
 1771              	.LVL150:
 1772              	.L164:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1773              		.loc 1 2586 0
 1774 0098 EB6A     		ldr	r3, [r5, #44]
 1775 009a 144A     		ldr	r2, .L174
 1776 009c D2F81022 		ldr	r2, [r2, #528]
 1777 00a0 9342     		cmp	r3, r2
 1778 00a2 02D9     		bls	.L165
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1779              		.loc 1 2586 0 is_stmt 0 discriminator 1
 1780 00a4 114A     		ldr	r2, .L174
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 124


 1781 00a6 C2F81032 		str	r3, [r2, #528]
 1782              	.L165:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1783              		.loc 1 2586 0 discriminator 3
 1784 00aa 104F     		ldr	r7, .L174
 1785 00ac 07F13000 		add	r0, r7, #48
 1786 00b0 03EB8303 		add	r3, r3, r3, lsl #2
 1787 00b4 9A00     		lsls	r2, r3, #2
 1788 00b6 4146     		mov	r1, r8
 1789 00b8 1044     		add	r0, r0, r2
 1790 00ba FFF7FEFF 		bl	vListInsertEnd
 1791              	.LVL151:
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 1792              		.loc 1 2596 0 is_stmt 1 discriminator 3
 1793 00be EA6A     		ldr	r2, [r5, #44]
 1794 00c0 D7F80432 		ldr	r3, [r7, #516]
 1795 00c4 DB6A     		ldr	r3, [r3, #44]
 1796 00c6 9A42     		cmp	r2, r3
 1797 00c8 C1D2     		bcs	.L171
 1798 00ca C3E7     		b	.L159
 1799              	.LVL152:
 1800              	.L155:
 1801              	.LBE29:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1802              		.loc 1 2643 0
 1803 00cc 074A     		ldr	r2, .L174
 1804 00ce D2F82832 		ldr	r3, [r2, #552]
 1805 00d2 0133     		adds	r3, r3, #1
 1806 00d4 C2F82832 		str	r3, [r2, #552]
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1807              		.loc 1 2503 0
 1808 00d8 0026     		movs	r6, #0
 1809              	.LVL153:
 1810              	.L160:
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1811              		.loc 1 2656 0
 1812 00da 044B     		ldr	r3, .L174
 1813 00dc D3F82C32 		ldr	r3, [r3, #556]
 1814 00e0 03B1     		cbz	r3, .L168
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1815              		.loc 1 2658 0
 1816 00e2 0126     		movs	r6, #1
 1817              	.LVL154:
 1818              	.L168:
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1819              		.loc 1 2668 0
 1820 00e4 3046     		mov	r0, r6
 1821 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1822              	.LVL155:
 1823              	.L175:
 1824 00ea 00BF     		.align	2
 1825              	.L174:
 1826 00ec 00000000 		.word	.LANCHOR0
 1827              		.cfi_endproc
 1828              	.LFE542:
 1829              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 1830              		.section	.text.xTaskResumeAll,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 125


 1831              		.align	2
 1832              		.global	xTaskResumeAll
 1833              		.thumb
 1834              		.thumb_func
 1835              		.type	xTaskResumeAll, %function
 1836              	xTaskResumeAll:
 1837              	.LFB537:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1838              		.loc 1 2018 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842              	.LVL156:
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1843              		.loc 1 2024 0
 1844 0000 364B     		ldr	r3, .L192
 1845 0002 D3F81C32 		ldr	r3, [r3, #540]
 1846 0006 0BB9     		cbnz	r3, .L177
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1847              		.loc 1 2024 0 is_stmt 0 discriminator 1
 1848              		.syntax unified
 1849              	@ 2024 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1850 0008 72B6     		 cpsid i 
 1851              	@ 0 "" 2
 1852              		.thumb
 1853              		.syntax unified
 1854              	.L178:
 1855 000a FEE7     		b	.L178
 1856              	.L177:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1857              		.loc 1 2018 0 is_stmt 1
 1858 000c 70B5     		push	{r4, r5, r6, lr}
 1859              		.cfi_def_cfa_offset 16
 1860              		.cfi_offset 4, -16
 1861              		.cfi_offset 5, -12
 1862              		.cfi_offset 6, -8
 1863              		.cfi_offset 14, -4
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1864              		.loc 1 2031 0
 1865 000e FFF7FEFF 		bl	vPortEnterCritical
 1866              	.LVL157:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1867              		.loc 1 2033 0
 1868 0012 324B     		ldr	r3, .L192
 1869 0014 D3F81C22 		ldr	r2, [r3, #540]
 1870 0018 013A     		subs	r2, r2, #1
 1871 001a C3F81C22 		str	r2, [r3, #540]
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1872              		.loc 1 2035 0
 1873 001e D3F81C32 		ldr	r3, [r3, #540]
 1874 0022 002B     		cmp	r3, #0
 1875 0024 52D1     		bne	.L188
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1876              		.loc 1 2037 0
 1877 0026 2D4B     		ldr	r3, .L192
 1878 0028 D3F80032 		ldr	r3, [r3, #512]
 1879 002c 3BBB     		cbnz	r3, .L189
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 126


2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1880              		.loc 1 2020 0
 1881 002e 0024     		movs	r4, #0
 1882 0030 4FE0     		b	.L179
 1883              	.LVL158:
 1884              	.L183:
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1885              		.loc 1 2043 0
 1886 0032 2A4D     		ldr	r5, .L192
 1887 0034 2B6A     		ldr	r3, [r5, #32]
 1888 0036 DC68     		ldr	r4, [r3, #12]
 1889              	.LVL159:
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1890              		.loc 1 2044 0
 1891 0038 04F11800 		add	r0, r4, #24
 1892 003c FFF7FEFF 		bl	uxListRemove
 1893              	.LVL160:
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1894              		.loc 1 2045 0
 1895 0040 261D     		adds	r6, r4, #4
 1896 0042 3046     		mov	r0, r6
 1897 0044 FFF7FEFF 		bl	uxListRemove
 1898              	.LVL161:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1899              		.loc 1 2046 0
 1900 0048 E36A     		ldr	r3, [r4, #44]
 1901 004a D5F81022 		ldr	r2, [r5, #528]
 1902 004e 9342     		cmp	r3, r2
 1903 0050 01D9     		bls	.L181
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1904              		.loc 1 2046 0 is_stmt 0 discriminator 1
 1905 0052 C5F81032 		str	r3, [r5, #528]
 1906              	.L181:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1907              		.loc 1 2046 0 discriminator 3
 1908 0056 214D     		ldr	r5, .L192
 1909 0058 05F13000 		add	r0, r5, #48
 1910 005c 03EB8303 		add	r3, r3, r3, lsl #2
 1911 0060 9A00     		lsls	r2, r3, #2
 1912 0062 3146     		mov	r1, r6
 1913 0064 1044     		add	r0, r0, r2
 1914 0066 FFF7FEFF 		bl	vListInsertEnd
 1915              	.LVL162:
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1916              		.loc 1 2050 0 is_stmt 1 discriminator 3
 1917 006a E26A     		ldr	r2, [r4, #44]
 1918 006c D5F80432 		ldr	r3, [r5, #516]
 1919 0070 DB6A     		ldr	r3, [r3, #44]
 1920 0072 9A42     		cmp	r2, r3
 1921 0074 04D3     		bcc	.L180
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1922              		.loc 1 2052 0
 1923 0076 0122     		movs	r2, #1
 1924 0078 C5F82C22 		str	r2, [r5, #556]
 1925 007c 00E0     		b	.L180
 1926              	.LVL163:
 1927              	.L189:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 127


 1928 007e 0024     		movs	r4, #0
 1929              	.LVL164:
 1930              	.L180:
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1931              		.loc 1 2041 0
 1932 0080 164B     		ldr	r3, .L192
 1933 0082 5B69     		ldr	r3, [r3, #20]
 1934 0084 002B     		cmp	r3, #0
 1935 0086 D4D1     		bne	.L183
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1936              		.loc 1 2060 0
 1937 0088 0CB1     		cbz	r4, .L184
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1938              		.loc 1 2068 0
 1939 008a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1940              	.LVL165:
 1941              	.L184:
 1942              	.LBB30:
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1943              		.loc 1 2076 0
 1944 008e 134B     		ldr	r3, .L192
 1945 0090 D3F82842 		ldr	r4, [r3, #552]
 1946              	.LVL166:
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1947              		.loc 1 2078 0
 1948 0094 64B1     		cbz	r4, .L185
 1949              	.L187:
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
 1950              		.loc 1 2082 0
 1951 0096 FFF7FEFF 		bl	xTaskIncrementTick
 1952              	.LVL167:
 1953 009a 18B1     		cbz	r0, .L186
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
 1954              		.loc 1 2084 0
 1955 009c 0122     		movs	r2, #1
 1956 009e 0F4B     		ldr	r3, .L192
 1957 00a0 C3F82C22 		str	r2, [r3, #556]
 1958              	.L186:
 1959              	.LVL168:
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1960              		.loc 1 2091 0
 1961 00a4 013C     		subs	r4, r4, #1
 1962              	.LVL169:
 1963 00a6 F6D1     		bne	.L187
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1964              		.loc 1 2093 0
 1965 00a8 0022     		movs	r2, #0
 1966 00aa 0C4B     		ldr	r3, .L192
 1967 00ac C3F82822 		str	r2, [r3, #552]
 1968              	.L185:
 1969              	.LBE30:
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1970              		.loc 1 2101 0
 1971 00b0 0A4B     		ldr	r3, .L192
 1972 00b2 D3F82C32 		ldr	r3, [r3, #556]
 1973 00b6 5BB1     		cbz	r3, .L190
 1974              	.LVL170:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 128


2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1975              		.loc 1 2108 0
 1976 00b8 4FF08052 		mov	r2, #268435456
 1977 00bc 084B     		ldr	r3, .L192+4
 1978 00be 1A60     		str	r2, [r3]
 1979              		.syntax unified
 1980              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1981 00c0 BFF34F8F 		dsb
 1982              	@ 0 "" 2
 1983              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1984 00c4 BFF36F8F 		isb
 1985              	@ 0 "" 2
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1986              		.loc 1 2105 0
 1987              		.thumb
 1988              		.syntax unified
 1989 00c8 0124     		movs	r4, #1
 1990              	.LVL171:
 1991 00ca 02E0     		b	.L179
 1992              	.LVL172:
 1993              	.L188:
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1994              		.loc 1 2020 0
 1995 00cc 0024     		movs	r4, #0
 1996 00ce 00E0     		b	.L179
 1997              	.LVL173:
 1998              	.L190:
 1999 00d0 0024     		movs	r4, #0
 2000              	.LVL174:
 2001              	.L179:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2002              		.loc 1 2121 0
 2003 00d2 FFF7FEFF 		bl	vPortExitCritical
 2004              	.LVL175:
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2005              		.loc 1 2124 0
 2006 00d6 2046     		mov	r0, r4
 2007 00d8 70BD     		pop	{r4, r5, r6, pc}
 2008              	.LVL176:
 2009              	.L193:
 2010 00da 00BF     		.align	2
 2011              	.L192:
 2012 00dc 00000000 		.word	.LANCHOR0
 2013 00e0 04ED00E0 		.word	-536810236
 2014              		.cfi_endproc
 2015              	.LFE537:
 2016              		.size	xTaskResumeAll, .-xTaskResumeAll
 2017              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2018              		.align	2
 2019              		.global	vTaskDelayUntil
 2020              		.thumb
 2021              		.thumb_func
 2022              		.type	vTaskDelayUntil, %function
 2023              	vTaskDelayUntil:
 2024              	.LFB525:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2025              		.loc 1 1141 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 129


 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              	.LVL177:
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2030              		.loc 1 1145 0
 2031 0000 08B9     		cbnz	r0, .L195
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2032              		.loc 1 1145 0 is_stmt 0 discriminator 1
 2033              		.syntax unified
 2034              	@ 1145 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2035 0002 72B6     		 cpsid i 
 2036              	@ 0 "" 2
 2037              		.thumb
 2038              		.syntax unified
 2039              	.L196:
 2040 0004 FEE7     		b	.L196
 2041              	.L195:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2042              		.loc 1 1141 0 is_stmt 1
 2043 0006 38B5     		push	{r3, r4, r5, lr}
 2044              		.cfi_def_cfa_offset 16
 2045              		.cfi_offset 3, -16
 2046              		.cfi_offset 4, -12
 2047              		.cfi_offset 5, -8
 2048              		.cfi_offset 14, -4
 2049 0008 0546     		mov	r5, r0
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2050              		.loc 1 1146 0
 2051 000a 09B9     		cbnz	r1, .L197
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2052              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2053              		.syntax unified
 2054              	@ 1146 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2055 000c 72B6     		 cpsid i 
 2056              	@ 0 "" 2
 2057              		.thumb
 2058              		.syntax unified
 2059              	.L198:
 2060 000e FEE7     		b	.L198
 2061              	.L197:
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2062              		.loc 1 1147 0 is_stmt 1
 2063 0010 1A4B     		ldr	r3, .L210
 2064 0012 D3F81C32 		ldr	r3, [r3, #540]
 2065 0016 0BB1     		cbz	r3, .L199
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2066              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2067              		.syntax unified
 2068              	@ 1147 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2069 0018 72B6     		 cpsid i 
 2070              	@ 0 "" 2
 2071              		.thumb
 2072              		.syntax unified
 2073              	.L200:
 2074 001a FEE7     		b	.L200
 2075              	.L199:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 130


 2076 001c 0C46     		mov	r4, r1
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2077              		.loc 1 1149 0 is_stmt 1
 2078 001e FFF7FEFF 		bl	vTaskSuspendAll
 2079              	.LVL178:
 2080              	.LBB31:
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2081              		.loc 1 1153 0
 2082 0022 164B     		ldr	r3, .L210
 2083 0024 D3F81402 		ldr	r0, [r3, #532]
 2084              	.LVL179:
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2085              		.loc 1 1156 0
 2086 0028 2A68     		ldr	r2, [r5]
 2087 002a A318     		adds	r3, r4, r2
 2088              	.LVL180:
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2089              		.loc 1 1158 0
 2090 002c 9042     		cmp	r0, r2
 2091 002e 05D2     		bcs	.L201
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2092              		.loc 1 1165 0
 2093 0030 9A42     		cmp	r2, r3
 2094 0032 09D9     		bls	.L205
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2095              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2096 0034 9842     		cmp	r0, r3
 2097 0036 09D3     		bcc	.L206
 2098              	.LBE31:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2099              		.loc 1 1143 0 is_stmt 1
 2100 0038 0022     		movs	r2, #0
 2101 003a 0CE0     		b	.L202
 2102              	.L201:
 2103              	.LBB32:
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2104              		.loc 1 1179 0
 2105 003c 9A42     		cmp	r2, r3
 2106 003e 07D8     		bhi	.L207
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2107              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2108 0040 9842     		cmp	r0, r3
 2109 0042 07D3     		bcc	.L208
 2110              	.LBE32:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2111              		.loc 1 1143 0 is_stmt 1
 2112 0044 0022     		movs	r2, #0
 2113 0046 06E0     		b	.L202
 2114              	.L205:
 2115 0048 0022     		movs	r2, #0
 2116 004a 04E0     		b	.L202
 2117              	.L206:
 2118              	.LBB33:
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2119              		.loc 1 1167 0
 2120 004c 0122     		movs	r2, #1
 2121 004e 02E0     		b	.L202
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 131


 2122              	.L207:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2123              		.loc 1 1181 0
 2124 0050 0122     		movs	r2, #1
 2125 0052 00E0     		b	.L202
 2126              	.L208:
 2127 0054 0122     		movs	r2, #1
 2128              	.L202:
 2129              	.LVL181:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2130              		.loc 1 1190 0
 2131 0056 2B60     		str	r3, [r5]
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2132              		.loc 1 1192 0
 2133 0058 1AB1     		cbz	r2, .L203
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2134              		.loc 1 1198 0
 2135 005a 0021     		movs	r1, #0
 2136 005c 181A     		subs	r0, r3, r0
 2137              	.LVL182:
 2138 005e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2139              	.LVL183:
 2140              	.L203:
 2141              	.LBE33:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2142              		.loc 1 1205 0
 2143 0062 FFF7FEFF 		bl	xTaskResumeAll
 2144              	.LVL184:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2145              		.loc 1 1209 0
 2146 0066 38B9     		cbnz	r0, .L194
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2147              		.loc 1 1211 0
 2148 0068 4FF08052 		mov	r2, #268435456
 2149 006c 044B     		ldr	r3, .L210+4
 2150 006e 1A60     		str	r2, [r3]
 2151              		.syntax unified
 2152              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2153 0070 BFF34F8F 		dsb
 2154              	@ 0 "" 2
 2155              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2156 0074 BFF36F8F 		isb
 2157              	@ 0 "" 2
 2158              		.thumb
 2159              		.syntax unified
 2160              	.L194:
 2161 0078 38BD     		pop	{r3, r4, r5, pc}
 2162              	.LVL185:
 2163              	.L211:
 2164 007a 00BF     		.align	2
 2165              	.L210:
 2166 007c 00000000 		.word	.LANCHOR0
 2167 0080 04ED00E0 		.word	-536810236
 2168              		.cfi_endproc
 2169              	.LFE525:
 2170              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2171              		.section	.text.vTaskDelay,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 132


 2172              		.align	2
 2173              		.global	vTaskDelay
 2174              		.thumb
 2175              		.thumb_func
 2176              		.type	vTaskDelay, %function
 2177              	vTaskDelay:
 2178              	.LFB526:
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2179              		.loc 1 1225 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              	.LVL186:
 2184 0000 10B5     		push	{r4, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 4, -8
 2187              		.cfi_offset 14, -4
 2188              	.LVL187:
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2189              		.loc 1 1229 0
 2190 0002 78B1     		cbz	r0, .L217
 2191 0004 0446     		mov	r4, r0
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2192              		.loc 1 1231 0
 2193 0006 0D4B     		ldr	r3, .L219
 2194 0008 D3F81C32 		ldr	r3, [r3, #540]
 2195 000c 0BB1     		cbz	r3, .L214
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2196              		.loc 1 1231 0 is_stmt 0 discriminator 1
 2197              		.syntax unified
 2198              	@ 1231 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2199 000e 72B6     		 cpsid i 
 2200              	@ 0 "" 2
 2201              		.thumb
 2202              		.syntax unified
 2203              	.L215:
 2204 0010 FEE7     		b	.L215
 2205              	.L214:
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2206              		.loc 1 1232 0 is_stmt 1
 2207 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2208              	.LVL188:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2209              		.loc 1 1243 0
 2210 0016 0021     		movs	r1, #0
 2211 0018 2046     		mov	r0, r4
 2212 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2213              	.LVL189:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2214              		.loc 1 1245 0
 2215 001e FFF7FEFF 		bl	xTaskResumeAll
 2216              	.LVL190:
 2217 0022 00E0     		b	.L213
 2218              	.LVL191:
 2219              	.L217:
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2220              		.loc 1 1226 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 133


 2221 0024 0020     		movs	r0, #0
 2222              	.LVL192:
 2223              	.L213:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2224              		.loc 1 1254 0
 2225 0026 38B9     		cbnz	r0, .L212
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2226              		.loc 1 1256 0
 2227 0028 4FF08052 		mov	r2, #268435456
 2228 002c 044B     		ldr	r3, .L219+4
 2229 002e 1A60     		str	r2, [r3]
 2230              		.syntax unified
 2231              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2232 0030 BFF34F8F 		dsb
 2233              	@ 0 "" 2
 2234              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2235 0034 BFF36F8F 		isb
 2236              	@ 0 "" 2
 2237              		.thumb
 2238              		.syntax unified
 2239              	.L212:
 2240 0038 10BD     		pop	{r4, pc}
 2241              	.L220:
 2242 003a 00BF     		.align	2
 2243              	.L219:
 2244 003c 00000000 		.word	.LANCHOR0
 2245 0040 04ED00E0 		.word	-536810236
 2246              		.cfi_endproc
 2247              	.LFE526:
 2248              		.size	vTaskDelay, .-vTaskDelay
 2249              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2250              		.align	2
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	prvCheckTasksWaitingTermination, %function
 2254              	prvCheckTasksWaitingTermination:
 2255              	.LFB556:
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2256              		.loc 1 3377 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260 0000 38B5     		push	{r3, r4, r5, lr}
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 3, -16
 2263              		.cfi_offset 4, -12
 2264              		.cfi_offset 5, -8
 2265              		.cfi_offset 14, -4
 2266              	.LBB34:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2267              		.loc 1 3387 0
 2268 0002 1FE0     		b	.L223
 2269              	.L224:
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2270              		.loc 1 3389 0
 2271 0004 FFF7FEFF 		bl	vTaskSuspendAll
 2272              	.LVL193:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 134


3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2273              		.loc 1 3391 0
 2274 0008 114B     		ldr	r3, .L226
 2275 000a D3F8E841 		ldr	r4, [r3, #488]
 2276              	.LVL194:
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2277              		.loc 1 3393 0
 2278 000e FFF7FEFF 		bl	xTaskResumeAll
 2279              	.LVL195:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2280              		.loc 1 3395 0
 2281 0012 BCB1     		cbz	r4, .L223
 2282              	.LBB35:
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2283              		.loc 1 3399 0
 2284 0014 FFF7FEFF 		bl	vPortEnterCritical
 2285              	.LVL196:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2286              		.loc 1 3401 0
 2287 0018 0D4C     		ldr	r4, .L226
 2288              	.LVL197:
 2289 001a D4F8F431 		ldr	r3, [r4, #500]
 2290 001e DD68     		ldr	r5, [r3, #12]
 2291              	.LVL198:
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2292              		.loc 1 3402 0
 2293 0020 281D     		adds	r0, r5, #4
 2294 0022 FFF7FEFF 		bl	uxListRemove
 2295              	.LVL199:
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2296              		.loc 1 3403 0
 2297 0026 D4F80032 		ldr	r3, [r4, #512]
 2298 002a 013B     		subs	r3, r3, #1
 2299 002c C4F80032 		str	r3, [r4, #512]
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2300              		.loc 1 3404 0
 2301 0030 D4F81832 		ldr	r3, [r4, #536]
 2302 0034 013B     		subs	r3, r3, #1
 2303 0036 C4F81832 		str	r3, [r4, #536]
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2304              		.loc 1 3406 0
 2305 003a FFF7FEFF 		bl	vPortExitCritical
 2306              	.LVL200:
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2307              		.loc 1 3408 0
 2308 003e 2846     		mov	r0, r5
 2309 0040 FFF7FEFF 		bl	prvDeleteTCB
 2310              	.LVL201:
 2311              	.L223:
 2312              	.LBE35:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2313              		.loc 1 3387 0
 2314 0044 024B     		ldr	r3, .L226
 2315 0046 D3F81832 		ldr	r3, [r3, #536]
 2316 004a 002B     		cmp	r3, #0
 2317 004c DAD1     		bne	.L224
 2318              	.LBE34:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 135


3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2319              		.loc 1 3417 0
 2320 004e 38BD     		pop	{r3, r4, r5, pc}
 2321              	.L227:
 2322              		.align	2
 2323              	.L226:
 2324 0050 00000000 		.word	.LANCHOR0
 2325              		.cfi_endproc
 2326              	.LFE556:
 2327              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 2328              		.section	.text.prvIdleTask,"ax",%progbits
 2329              		.align	2
 2330              		.thumb
 2331              		.thumb_func
 2332              		.type	prvIdleTask, %function
 2333              	prvIdleTask:
 2334              	.LFB552:
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
 2335              		.loc 1 3143 0
 2336              		.cfi_startproc
 2337              		@ Volatile: function does not return.
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              	.LVL202:
 2341 0000 08B5     		push	{r3, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 3, -8
 2344              		.cfi_offset 14, -4
 2345              	.LVL203:
 2346              	.L230:
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2347              		.loc 1 3154 0
 2348 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 2349              	.LVL204:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2350              		.loc 1 3177 0
 2351 0006 074B     		ldr	r3, .L232
 2352 0008 1B6B     		ldr	r3, [r3, #48]
 2353 000a 012B     		cmp	r3, #1
 2354 000c 07D9     		bls	.L229
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2355              		.loc 1 3179 0
 2356 000e 4FF08052 		mov	r2, #268435456
 2357 0012 054B     		ldr	r3, .L232+4
 2358 0014 1A60     		str	r2, [r3]
 2359              		.syntax unified
 2360              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2361 0016 BFF34F8F 		dsb
 2362              	@ 0 "" 2
 2363              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2364 001a BFF36F8F 		isb
 2365              	@ 0 "" 2
 2366              		.thumb
 2367              		.syntax unified
 2368              	.L229:
 2369              	.LBB36:
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 136


 2370              		.loc 1 3197 0
 2371 001e FFF7FEFF 		bl	vApplicationIdleHook
 2372              	.LVL205:
 2373              	.LBE36:
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2374              		.loc 1 3245 0
 2375 0022 EEE7     		b	.L230
 2376              	.L233:
 2377              		.align	2
 2378              	.L232:
 2379 0024 00000000 		.word	.LANCHOR0
 2380 0028 04ED00E0 		.word	-536810236
 2381              		.cfi_endproc
 2382              	.LFE552:
 2383              		.size	prvIdleTask, .-prvIdleTask
 2384              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2385              		.align	2
 2386              		.global	vTaskSwitchContext
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	vTaskSwitchContext, %function
 2390              	vTaskSwitchContext:
 2391              	.LFB543:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2392              		.loc 1 2762 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 0, uses_anonymous_args = 0
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2396              		.loc 1 2763 0
 2397 0000 2D4B     		ldr	r3, .L245
 2398 0002 D3F81C32 		ldr	r3, [r3, #540]
 2399 0006 23B1     		cbz	r3, .L235
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2400              		.loc 1 2767 0
 2401 0008 0122     		movs	r2, #1
 2402 000a 2B4B     		ldr	r3, .L245
 2403 000c C3F82C22 		str	r2, [r3, #556]
 2404 0010 7047     		bx	lr
 2405              	.L235:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2406              		.loc 1 2762 0
 2407 0012 10B5     		push	{r4, lr}
 2408              		.cfi_def_cfa_offset 8
 2409              		.cfi_offset 4, -8
 2410              		.cfi_offset 14, -4
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2411              		.loc 1 2771 0
 2412 0014 284B     		ldr	r3, .L245
 2413 0016 0022     		movs	r2, #0
 2414 0018 C3F82C22 		str	r2, [r3, #556]
 2415              	.LBB37:
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2416              		.loc 1 2803 0
 2417 001c D3F80432 		ldr	r3, [r3, #516]
 2418 0020 1B6B     		ldr	r3, [r3, #48]
 2419              	.LVL206:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 137


2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2420              		.loc 1 2806 0
 2421 0022 1A68     		ldr	r2, [r3]
 2422 0024 B2F1A53F 		cmp	r2, #-1515870811
 2423 0028 0BD1     		bne	.L237
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2424              		.loc 1 2807 0 discriminator 1
 2425 002a 5A68     		ldr	r2, [r3, #4]
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2426              		.loc 1 2806 0 discriminator 1
 2427 002c B2F1A53F 		cmp	r2, #-1515870811
 2428 0030 07D1     		bne	.L237
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2429              		.loc 1 2808 0
 2430 0032 9A68     		ldr	r2, [r3, #8]
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2431              		.loc 1 2807 0
 2432 0034 B2F1A53F 		cmp	r2, #-1515870811
 2433 0038 03D1     		bne	.L237
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 2434              		.loc 1 2809 0
 2435 003a DB68     		ldr	r3, [r3, #12]
 2436              	.LVL207:
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2437              		.loc 1 2808 0
 2438 003c B3F1A53F 		cmp	r3, #-1515870811
 2439 0040 07D0     		beq	.L238
 2440              	.L237:
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 2441              		.loc 1 2811 0
 2442 0042 1D4B     		ldr	r3, .L245
 2443 0044 D3F80402 		ldr	r0, [r3, #516]
 2444 0048 D3F80412 		ldr	r1, [r3, #516]
 2445 004c 3431     		adds	r1, r1, #52
 2446 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2447              	.LVL208:
 2448              	.L238:
 2449              	.LBE37:
 2450              	.LBB38:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2451              		.loc 1 2817 0
 2452 0052 194B     		ldr	r3, .L245
 2453 0054 D3F81032 		ldr	r3, [r3, #528]
 2454              	.LVL209:
 2455 0058 03E0     		b	.L239
 2456              	.L242:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2457              		.loc 1 2817 0 is_stmt 0 discriminator 5
 2458 005a 0BB9     		cbnz	r3, .L240
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2459              		.loc 1 2817 0 discriminator 2
 2460              		.syntax unified
 2461              	@ 2817 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2462 005c 72B6     		 cpsid i 
 2463              	@ 0 "" 2
 2464              		.thumb
 2465              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 138


 2466              	.L241:
 2467 005e FEE7     		b	.L241
 2468              	.L240:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2469              		.loc 1 2817 0 discriminator 3
 2470 0060 013B     		subs	r3, r3, #1
 2471              	.LVL210:
 2472              	.L239:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2473              		.loc 1 2817 0 discriminator 4
 2474 0062 03EB8301 		add	r1, r3, r3, lsl #2
 2475 0066 8A00     		lsls	r2, r1, #2
 2476 0068 1349     		ldr	r1, .L245
 2477 006a 0A44     		add	r2, r2, r1
 2478 006c 126B     		ldr	r2, [r2, #48]
 2479 006e 002A     		cmp	r2, #0
 2480 0070 F3D0     		beq	.L242
 2481              	.LVL211:
 2482              	.LBB39:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2483              		.loc 1 2817 0 discriminator 6
 2484 0072 0846     		mov	r0, r1
 2485 0074 9900     		lsls	r1, r3, #2
 2486 0076 CC18     		adds	r4, r1, r3
 2487 0078 A200     		lsls	r2, r4, #2
 2488 007a 0244     		add	r2, r2, r0
 2489 007c 546B     		ldr	r4, [r2, #52]
 2490 007e 6468     		ldr	r4, [r4, #4]
 2491 0080 5463     		str	r4, [r2, #52]
 2492 0082 3030     		adds	r0, r0, #48
 2493 0084 1944     		add	r1, r1, r3
 2494 0086 8A00     		lsls	r2, r1, #2
 2495 0088 0832     		adds	r2, r2, #8
 2496 008a 0244     		add	r2, r2, r0
 2497 008c 9442     		cmp	r4, r2
 2498 008e 06D1     		bne	.L243
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2499              		.loc 1 2817 0 discriminator 7
 2500 0090 6068     		ldr	r0, [r4, #4]
 2501 0092 03EB8301 		add	r1, r3, r3, lsl #2
 2502 0096 8A00     		lsls	r2, r1, #2
 2503 0098 0749     		ldr	r1, .L245
 2504 009a 0A44     		add	r2, r2, r1
 2505 009c 5063     		str	r0, [r2, #52]
 2506              	.L243:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2507              		.loc 1 2817 0 discriminator 9
 2508 009e 0649     		ldr	r1, .L245
 2509 00a0 03EB8300 		add	r0, r3, r3, lsl #2
 2510 00a4 8200     		lsls	r2, r0, #2
 2511 00a6 0A44     		add	r2, r2, r1
 2512 00a8 526B     		ldr	r2, [r2, #52]
 2513 00aa D268     		ldr	r2, [r2, #12]
 2514 00ac C1F80422 		str	r2, [r1, #516]
 2515              	.LBE39:
 2516 00b0 C1F81032 		str	r3, [r1, #528]
 2517 00b4 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 139


 2518              	.L246:
 2519 00b6 00BF     		.align	2
 2520              	.L245:
 2521 00b8 00000000 		.word	.LANCHOR0
 2522              	.LBE38:
 2523              		.cfi_endproc
 2524              	.LFE543:
 2525              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2526              		.section	.text.vTaskSuspend,"ax",%progbits
 2527              		.align	2
 2528              		.global	vTaskSuspend
 2529              		.thumb
 2530              		.thumb_func
 2531              		.type	vTaskSuspend, %function
 2532              	vTaskSuspend:
 2533              	.LFB530:
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 2534              		.loc 1 1567 0 is_stmt 1
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 0
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              	.LVL212:
 2539 0000 70B5     		push	{r4, r5, r6, lr}
 2540              		.cfi_def_cfa_offset 16
 2541              		.cfi_offset 4, -16
 2542              		.cfi_offset 5, -12
 2543              		.cfi_offset 6, -8
 2544              		.cfi_offset 14, -4
 2545 0002 0446     		mov	r4, r0
1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2546              		.loc 1 1570 0
 2547 0004 FFF7FEFF 		bl	vPortEnterCritical
 2548              	.LVL213:
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2549              		.loc 1 1574 0
 2550 0008 14B9     		cbnz	r4, .L248
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2551              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2552 000a 214B     		ldr	r3, .L257
 2553 000c D3F80442 		ldr	r4, [r3, #516]
 2554              	.LVL214:
 2555              	.L248:
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2556              		.loc 1 1580 0 is_stmt 1 discriminator 4
 2557 0010 261D     		adds	r6, r4, #4
 2558 0012 3046     		mov	r0, r6
 2559 0014 FFF7FEFF 		bl	uxListRemove
 2560              	.LVL215:
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2561              		.loc 1 1590 0 discriminator 4
 2562 0018 A36A     		ldr	r3, [r4, #40]
 2563 001a 1BB1     		cbz	r3, .L249
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2564              		.loc 1 1592 0
 2565 001c 04F11800 		add	r0, r4, #24
 2566 0020 FFF7FEFF 		bl	uxListRemove
 2567              	.LVL216:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 140


 2568              	.L249:
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2569              		.loc 1 1599 0
 2570 0024 1A4D     		ldr	r5, .L257
 2571 0026 3146     		mov	r1, r6
 2572 0028 2846     		mov	r0, r5
 2573 002a FFF7FEFF 		bl	vListInsertEnd
 2574              	.LVL217:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2575              		.loc 1 1601 0
 2576 002e FFF7FEFF 		bl	vPortExitCritical
 2577              	.LVL218:
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2578              		.loc 1 1603 0
 2579 0032 D5F80832 		ldr	r3, [r5, #520]
 2580 0036 2BB1     		cbz	r3, .L250
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2581              		.loc 1 1607 0
 2582 0038 FFF7FEFF 		bl	vPortEnterCritical
 2583              	.LVL219:
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2584              		.loc 1 1609 0
 2585 003c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2586              	.LVL220:
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2587              		.loc 1 1611 0
 2588 0040 FFF7FEFF 		bl	vPortExitCritical
 2589              	.LVL221:
 2590              	.L250:
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2591              		.loc 1 1618 0
 2592 0044 124B     		ldr	r3, .L257
 2593 0046 D3F80432 		ldr	r3, [r3, #516]
 2594 004a 9C42     		cmp	r4, r3
 2595 004c 1FD1     		bne	.L247
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2596              		.loc 1 1620 0
 2597 004e 104B     		ldr	r3, .L257
 2598 0050 D3F80832 		ldr	r3, [r3, #520]
 2599 0054 73B1     		cbz	r3, .L252
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2600              		.loc 1 1623 0
 2601 0056 0E4B     		ldr	r3, .L257
 2602 0058 D3F81C32 		ldr	r3, [r3, #540]
 2603 005c 0BB1     		cbz	r3, .L253
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2604              		.loc 1 1623 0 is_stmt 0 discriminator 1
 2605              		.syntax unified
 2606              	@ 1623 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2607 005e 72B6     		 cpsid i 
 2608              	@ 0 "" 2
 2609              		.thumb
 2610              		.syntax unified
 2611              	.L254:
 2612 0060 FEE7     		b	.L254
 2613              	.L253:
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 141


 2614              		.loc 1 1624 0 is_stmt 1
 2615 0062 4FF08052 		mov	r2, #268435456
 2616 0066 0B4B     		ldr	r3, .L257+4
 2617 0068 1A60     		str	r2, [r3]
 2618              		.syntax unified
 2619              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2620 006a BFF34F8F 		dsb
 2621              	@ 0 "" 2
 2622              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2623 006e BFF36F8F 		isb
 2624              	@ 0 "" 2
 2625              		.thumb
 2626              		.syntax unified
 2627 0072 70BD     		pop	{r4, r5, r6, pc}
 2628              	.LVL222:
 2629              	.L252:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2630              		.loc 1 1631 0
 2631 0074 064B     		ldr	r3, .L257
 2632 0076 1A68     		ldr	r2, [r3]
 2633 0078 D3F80032 		ldr	r3, [r3, #512]
 2634 007c 9A42     		cmp	r2, r3
 2635 007e 04D1     		bne	.L255
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2636              		.loc 1 1637 0
 2637 0080 0022     		movs	r2, #0
 2638 0082 034B     		ldr	r3, .L257
 2639 0084 C3F80422 		str	r2, [r3, #516]
 2640 0088 70BD     		pop	{r4, r5, r6, pc}
 2641              	.LVL223:
 2642              	.L255:
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2643              		.loc 1 1641 0
 2644 008a FFF7FEFF 		bl	vTaskSwitchContext
 2645              	.LVL224:
 2646              	.L247:
 2647 008e 70BD     		pop	{r4, r5, r6, pc}
 2648              	.LVL225:
 2649              	.L258:
 2650              		.align	2
 2651              	.L257:
 2652 0090 00000000 		.word	.LANCHOR0
 2653 0094 04ED00E0 		.word	-536810236
 2654              		.cfi_endproc
 2655              	.LFE530:
 2656              		.size	vTaskSuspend, .-vTaskSuspend
 2657              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2658              		.align	2
 2659              		.global	vTaskPlaceOnEventList
 2660              		.thumb
 2661              		.thumb_func
 2662              		.type	vTaskPlaceOnEventList, %function
 2663              	vTaskPlaceOnEventList:
 2664              	.LFB544:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2665              		.loc 1 2832 0
 2666              		.cfi_startproc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 142


 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL226:
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2670              		.loc 1 2833 0
 2671 0000 08B9     		cbnz	r0, .L260
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2672              		.loc 1 2833 0 is_stmt 0 discriminator 1
 2673              		.syntax unified
 2674              	@ 2833 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2675 0002 72B6     		 cpsid i 
 2676              	@ 0 "" 2
 2677              		.thumb
 2678              		.syntax unified
 2679              	.L261:
 2680 0004 FEE7     		b	.L261
 2681              	.L260:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2682              		.loc 1 2832 0 is_stmt 1
 2683 0006 10B5     		push	{r4, lr}
 2684              		.cfi_def_cfa_offset 8
 2685              		.cfi_offset 4, -8
 2686              		.cfi_offset 14, -4
 2687 0008 0C46     		mov	r4, r1
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2688              		.loc 1 2842 0
 2689 000a 054B     		ldr	r3, .L263
 2690 000c D3F80412 		ldr	r1, [r3, #516]
 2691              	.LVL227:
 2692 0010 1831     		adds	r1, r1, #24
 2693 0012 FFF7FEFF 		bl	vListInsert
 2694              	.LVL228:
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2695              		.loc 1 2844 0
 2696 0016 0121     		movs	r1, #1
 2697 0018 2046     		mov	r0, r4
 2698 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2699              	.LVL229:
 2700 001e 10BD     		pop	{r4, pc}
 2701              	.LVL230:
 2702              	.L264:
 2703              		.align	2
 2704              	.L263:
 2705 0020 00000000 		.word	.LANCHOR0
 2706              		.cfi_endproc
 2707              	.LFE544:
 2708              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2709              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2710              		.align	2
 2711              		.global	vTaskPlaceOnUnorderedEventList
 2712              		.thumb
 2713              		.thumb_func
 2714              		.type	vTaskPlaceOnUnorderedEventList, %function
 2715              	vTaskPlaceOnUnorderedEventList:
 2716              	.LFB545:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2717              		.loc 1 2849 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 143


 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 0
 2720              		@ frame_needed = 0, uses_anonymous_args = 0
 2721              	.LVL231:
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2722              		.loc 1 2850 0
 2723 0000 08B9     		cbnz	r0, .L266
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2724              		.loc 1 2850 0 is_stmt 0 discriminator 1
 2725              		.syntax unified
 2726              	@ 2850 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2727 0002 72B6     		 cpsid i 
 2728              	@ 0 "" 2
 2729              		.thumb
 2730              		.syntax unified
 2731              	.L267:
 2732 0004 FEE7     		b	.L267
 2733              	.L266:
 2734 0006 0346     		mov	r3, r0
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2735              		.loc 1 2854 0 is_stmt 1
 2736 0008 0C48     		ldr	r0, .L271
 2737              	.LVL232:
 2738 000a D0F81C02 		ldr	r0, [r0, #540]
 2739 000e 08B9     		cbnz	r0, .L268
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2740              		.loc 1 2854 0 is_stmt 0 discriminator 1
 2741              		.syntax unified
 2742              	@ 2854 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2743 0010 72B6     		 cpsid i 
 2744              	@ 0 "" 2
 2745              		.thumb
 2746              		.syntax unified
 2747              	.L269:
 2748 0012 FEE7     		b	.L269
 2749              	.L268:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2750              		.loc 1 2849 0 is_stmt 1
 2751 0014 10B5     		push	{r4, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 4, -8
 2754              		.cfi_offset 14, -4
 2755 0016 1846     		mov	r0, r3
 2756 0018 1446     		mov	r4, r2
 2757 001a 0B46     		mov	r3, r1
 2758              	.LVL233:
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2759              		.loc 1 2859 0
 2760 001c 074A     		ldr	r2, .L271
 2761              	.LVL234:
 2762 001e D2F80412 		ldr	r1, [r2, #516]
 2763              	.LVL235:
 2764 0022 43F00043 		orr	r3, r3, #-2147483648
 2765              	.LVL236:
 2766 0026 8B61     		str	r3, [r1, #24]
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2767              		.loc 1 2866 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 144


 2768 0028 D2F80412 		ldr	r1, [r2, #516]
 2769 002c 1831     		adds	r1, r1, #24
 2770 002e FFF7FEFF 		bl	vListInsertEnd
 2771              	.LVL237:
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2772              		.loc 1 2868 0
 2773 0032 0121     		movs	r1, #1
 2774 0034 2046     		mov	r0, r4
 2775 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2776              	.LVL238:
 2777 003a 10BD     		pop	{r4, pc}
 2778              	.LVL239:
 2779              	.L272:
 2780              		.align	2
 2781              	.L271:
 2782 003c 00000000 		.word	.LANCHOR0
 2783              		.cfi_endproc
 2784              	.LFE545:
 2785              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2786              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2787              		.align	2
 2788              		.global	vTaskPlaceOnEventListRestricted
 2789              		.thumb
 2790              		.thumb_func
 2791              		.type	vTaskPlaceOnEventListRestricted, %function
 2792              	vTaskPlaceOnEventListRestricted:
 2793              	.LFB546:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2794              		.loc 1 2875 0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 0
 2797              		@ frame_needed = 0, uses_anonymous_args = 0
 2798              	.LVL240:
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2799              		.loc 1 2876 0
 2800 0000 08B9     		cbnz	r0, .L274
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2801              		.loc 1 2876 0 is_stmt 0 discriminator 1
 2802              		.syntax unified
 2803              	@ 2876 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2804 0002 72B6     		 cpsid i 
 2805              	@ 0 "" 2
 2806              		.thumb
 2807              		.syntax unified
 2808              	.L275:
 2809 0004 FEE7     		b	.L275
 2810              	.L274:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2811              		.loc 1 2875 0 is_stmt 1
 2812 0006 38B5     		push	{r3, r4, r5, lr}
 2813              		.cfi_def_cfa_offset 16
 2814              		.cfi_offset 3, -16
 2815              		.cfi_offset 4, -12
 2816              		.cfi_offset 5, -8
 2817              		.cfi_offset 14, -4
 2818 0008 0C46     		mov	r4, r1
 2819 000a 1546     		mov	r5, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 145


2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2820              		.loc 1 2888 0
 2821 000c 064A     		ldr	r2, .L279
 2822              	.LVL241:
 2823 000e D2F80412 		ldr	r1, [r2, #516]
 2824              	.LVL242:
 2825 0012 1831     		adds	r1, r1, #24
 2826 0014 FFF7FEFF 		bl	vListInsertEnd
 2827              	.LVL243:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2828              		.loc 1 2893 0
 2829 0018 0DB1     		cbz	r5, .L276
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2830              		.loc 1 2895 0
 2831 001a 4FF0FF34 		mov	r4, #-1
 2832              	.LVL244:
 2833              	.L276:
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2834              		.loc 1 2899 0
 2835 001e 2946     		mov	r1, r5
 2836 0020 2046     		mov	r0, r4
 2837 0022 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2838              	.LVL245:
 2839 0026 38BD     		pop	{r3, r4, r5, pc}
 2840              	.LVL246:
 2841              	.L280:
 2842              		.align	2
 2843              	.L279:
 2844 0028 00000000 		.word	.LANCHOR0
 2845              		.cfi_endproc
 2846              	.LFE546:
 2847              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 2848              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2849              		.align	2
 2850              		.global	xTaskRemoveFromEventList
 2851              		.thumb
 2852              		.thumb_func
 2853              		.type	xTaskRemoveFromEventList, %function
 2854              	xTaskRemoveFromEventList:
 2855              	.LFB547:
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2856              		.loc 1 2906 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 0, uses_anonymous_args = 0
 2860              	.LVL247:
 2861 0000 38B5     		push	{r3, r4, r5, lr}
 2862              		.cfi_def_cfa_offset 16
 2863              		.cfi_offset 3, -16
 2864              		.cfi_offset 4, -12
 2865              		.cfi_offset 5, -8
 2866              		.cfi_offset 14, -4
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2867              		.loc 1 2923 0
 2868 0002 C368     		ldr	r3, [r0, #12]
 2869 0004 DC68     		ldr	r4, [r3, #12]
 2870              	.LVL248:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 146


2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2871              		.loc 1 2924 0
 2872 0006 0CB9     		cbnz	r4, .L282
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2873              		.loc 1 2924 0 is_stmt 0 discriminator 1
 2874              		.syntax unified
 2875              	@ 2924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2876 0008 72B6     		 cpsid i 
 2877              	@ 0 "" 2
 2878              		.thumb
 2879              		.syntax unified
 2880              	.L283:
 2881 000a FEE7     		b	.L283
 2882              	.L282:
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2883              		.loc 1 2925 0 is_stmt 1
 2884 000c 04F11805 		add	r5, r4, #24
 2885 0010 2846     		mov	r0, r5
 2886              	.LVL249:
 2887 0012 FFF7FEFF 		bl	uxListRemove
 2888              	.LVL250:
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2889              		.loc 1 2927 0
 2890 0016 164B     		ldr	r3, .L290
 2891 0018 D3F81C32 		ldr	r3, [r3, #540]
 2892 001c ABB9     		cbnz	r3, .L284
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2893              		.loc 1 2929 0
 2894 001e 251D     		adds	r5, r4, #4
 2895 0020 2846     		mov	r0, r5
 2896 0022 FFF7FEFF 		bl	uxListRemove
 2897              	.LVL251:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2898              		.loc 1 2930 0
 2899 0026 E36A     		ldr	r3, [r4, #44]
 2900 0028 114A     		ldr	r2, .L290
 2901 002a D2F81022 		ldr	r2, [r2, #528]
 2902 002e 9342     		cmp	r3, r2
 2903 0030 02D9     		bls	.L285
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2904              		.loc 1 2930 0 is_stmt 0 discriminator 1
 2905 0032 0F4A     		ldr	r2, .L290
 2906 0034 C2F81032 		str	r3, [r2, #528]
 2907              	.L285:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2908              		.loc 1 2930 0 discriminator 3
 2909 0038 03EB8303 		add	r3, r3, r3, lsl #2
 2910 003c 9A00     		lsls	r2, r3, #2
 2911 003e 2946     		mov	r1, r5
 2912 0040 0C48     		ldr	r0, .L290+4
 2913 0042 1044     		add	r0, r0, r2
 2914 0044 FFF7FEFF 		bl	vListInsertEnd
 2915              	.LVL252:
 2916 0048 03E0     		b	.L286
 2917              	.L284:
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2918              		.loc 1 2936 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 147


 2919 004a 2946     		mov	r1, r5
 2920 004c 0A48     		ldr	r0, .L290+8
 2921 004e FFF7FEFF 		bl	vListInsertEnd
 2922              	.LVL253:
 2923              	.L286:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2924              		.loc 1 2939 0
 2925 0052 E26A     		ldr	r2, [r4, #44]
 2926 0054 064B     		ldr	r3, .L290
 2927 0056 D3F80432 		ldr	r3, [r3, #516]
 2928 005a DB6A     		ldr	r3, [r3, #44]
 2929 005c 9A42     		cmp	r2, r3
 2930 005e 04D9     		bls	.L288
 2931              	.LVL254:
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2932              		.loc 1 2948 0
 2933 0060 0120     		movs	r0, #1
 2934 0062 034B     		ldr	r3, .L290
 2935 0064 C3F82C02 		str	r0, [r3, #556]
 2936 0068 38BD     		pop	{r3, r4, r5, pc}
 2937              	.LVL255:
 2938              	.L288:
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2939              		.loc 1 2952 0
 2940 006a 0020     		movs	r0, #0
 2941              	.LVL256:
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2942              		.loc 1 2970 0
 2943 006c 38BD     		pop	{r3, r4, r5, pc}
 2944              	.LVL257:
 2945              	.L291:
 2946 006e 00BF     		.align	2
 2947              	.L290:
 2948 0070 00000000 		.word	.LANCHOR0
 2949 0074 30000000 		.word	.LANCHOR0+48
 2950 0078 14000000 		.word	.LANCHOR0+20
 2951              		.cfi_endproc
 2952              	.LFE547:
 2953              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 2954              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 2955              		.align	2
 2956              		.global	xTaskRemoveFromUnorderedEventList
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	xTaskRemoveFromUnorderedEventList, %function
 2960              	xTaskRemoveFromUnorderedEventList:
 2961              	.LFB548:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2962              		.loc 1 2974 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL258:
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2967              		.loc 1 2980 0
 2968 0000 194B     		ldr	r3, .L301
 2969 0002 D3F81C32 		ldr	r3, [r3, #540]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 148


 2970 0006 0BB9     		cbnz	r3, .L293
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2971              		.loc 1 2980 0 is_stmt 0 discriminator 1
 2972              		.syntax unified
 2973              	@ 2980 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2974 0008 72B6     		 cpsid i 
 2975              	@ 0 "" 2
 2976              		.thumb
 2977              		.syntax unified
 2978              	.L294:
 2979 000a FEE7     		b	.L294
 2980              	.L293:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2981              		.loc 1 2974 0 is_stmt 1
 2982 000c 70B5     		push	{r4, r5, r6, lr}
 2983              		.cfi_def_cfa_offset 16
 2984              		.cfi_offset 4, -16
 2985              		.cfi_offset 5, -12
 2986              		.cfi_offset 6, -8
 2987              		.cfi_offset 14, -4
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2988              		.loc 1 2983 0
 2989 000e 41F00043 		orr	r3, r1, #-2147483648
 2990 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2991              		.loc 1 2987 0
 2992 0014 C468     		ldr	r4, [r0, #12]
 2993              	.LVL259:
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2994              		.loc 1 2988 0
 2995 0016 0CB9     		cbnz	r4, .L295
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2996              		.loc 1 2988 0 is_stmt 0 discriminator 1
 2997              		.syntax unified
 2998              	@ 2988 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2999 0018 72B6     		 cpsid i 
 3000              	@ 0 "" 2
 3001              		.thumb
 3002              		.syntax unified
 3003              	.L296:
 3004 001a FEE7     		b	.L296
 3005              	.L295:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3006              		.loc 1 2989 0 is_stmt 1
 3007 001c FFF7FEFF 		bl	uxListRemove
 3008              	.LVL260:
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3009              		.loc 1 2994 0
 3010 0020 261D     		adds	r6, r4, #4
 3011 0022 3046     		mov	r0, r6
 3012 0024 FFF7FEFF 		bl	uxListRemove
 3013              	.LVL261:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3014              		.loc 1 2995 0
 3015 0028 E36A     		ldr	r3, [r4, #44]
 3016 002a 0F4A     		ldr	r2, .L301
 3017 002c D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 149


 3018 0030 9342     		cmp	r3, r2
 3019 0032 02D9     		bls	.L297
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3020              		.loc 1 2995 0 is_stmt 0 discriminator 1
 3021 0034 0C4A     		ldr	r2, .L301
 3022 0036 C2F81032 		str	r3, [r2, #528]
 3023              	.L297:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3024              		.loc 1 2995 0 discriminator 3
 3025 003a 0B4D     		ldr	r5, .L301
 3026 003c 05F13000 		add	r0, r5, #48
 3027 0040 03EB8303 		add	r3, r3, r3, lsl #2
 3028 0044 9A00     		lsls	r2, r3, #2
 3029 0046 3146     		mov	r1, r6
 3030 0048 1044     		add	r0, r0, r2
 3031 004a FFF7FEFF 		bl	vListInsertEnd
 3032              	.LVL262:
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3033              		.loc 1 2997 0 is_stmt 1 discriminator 3
 3034 004e E26A     		ldr	r2, [r4, #44]
 3035 0050 D5F80432 		ldr	r3, [r5, #516]
 3036 0054 DB6A     		ldr	r3, [r3, #44]
 3037 0056 9A42     		cmp	r2, r3
 3038 0058 03D9     		bls	.L299
 3039              	.LVL263:
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3040              		.loc 1 3007 0
 3041 005a 0120     		movs	r0, #1
 3042 005c C5F82C02 		str	r0, [r5, #556]
 3043 0060 70BD     		pop	{r4, r5, r6, pc}
 3044              	.LVL264:
 3045              	.L299:
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3046              		.loc 1 3011 0
 3047 0062 0020     		movs	r0, #0
 3048              	.LVL265:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3049              		.loc 1 3015 0
 3050 0064 70BD     		pop	{r4, r5, r6, pc}
 3051              	.LVL266:
 3052              	.L302:
 3053 0066 00BF     		.align	2
 3054              	.L301:
 3055 0068 00000000 		.word	.LANCHOR0
 3056              		.cfi_endproc
 3057              	.LFE548:
 3058              		.size	xTaskRemoveFromUnorderedEventList, .-xTaskRemoveFromUnorderedEventList
 3059              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3060              		.align	2
 3061              		.global	vTaskSetTimeOutState
 3062              		.thumb
 3063              		.thumb_func
 3064              		.type	vTaskSetTimeOutState, %function
 3065              	vTaskSetTimeOutState:
 3066              	.LFB549:
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3067              		.loc 1 3019 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 150


 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 0
 3070              		@ frame_needed = 0, uses_anonymous_args = 0
 3071              		@ link register save eliminated.
 3072              	.LVL267:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3073              		.loc 1 3020 0
 3074 0000 08B9     		cbnz	r0, .L304
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3075              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3076              		.syntax unified
 3077              	@ 3020 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3078 0002 72B6     		 cpsid i 
 3079              	@ 0 "" 2
 3080              		.thumb
 3081              		.syntax unified
 3082              	.L305:
 3083 0004 FEE7     		b	.L305
 3084              	.L304:
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3085              		.loc 1 3021 0 is_stmt 1
 3086 0006 044A     		ldr	r2, .L306
 3087 0008 D2F82412 		ldr	r1, [r2, #548]
 3088 000c 0160     		str	r1, [r0]
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3089              		.loc 1 3022 0
 3090 000e D2F81422 		ldr	r2, [r2, #532]
 3091 0012 4260     		str	r2, [r0, #4]
 3092 0014 7047     		bx	lr
 3093              	.L307:
 3094 0016 00BF     		.align	2
 3095              	.L306:
 3096 0018 00000000 		.word	.LANCHOR0
 3097              		.cfi_endproc
 3098              	.LFE549:
 3099              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3100              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3101              		.align	2
 3102              		.global	xTaskCheckForTimeOut
 3103              		.thumb
 3104              		.thumb_func
 3105              		.type	xTaskCheckForTimeOut, %function
 3106              	xTaskCheckForTimeOut:
 3107              	.LFB550:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3108              		.loc 1 3027 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 0
 3111              		@ frame_needed = 0, uses_anonymous_args = 0
 3112              	.LVL268:
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3113              		.loc 1 3030 0
 3114 0000 08B9     		cbnz	r0, .L309
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3115              		.loc 1 3030 0 is_stmt 0 discriminator 1
 3116              		.syntax unified
 3117              	@ 3030 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 151


 3118 0002 72B6     		 cpsid i 
 3119              	@ 0 "" 2
 3120              		.thumb
 3121              		.syntax unified
 3122              	.L310:
 3123 0004 FEE7     		b	.L310
 3124              	.L309:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3125              		.loc 1 3027 0 is_stmt 1
 3126 0006 38B5     		push	{r3, r4, r5, lr}
 3127              		.cfi_def_cfa_offset 16
 3128              		.cfi_offset 3, -16
 3129              		.cfi_offset 4, -12
 3130              		.cfi_offset 5, -8
 3131              		.cfi_offset 14, -4
 3132 0008 0446     		mov	r4, r0
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3133              		.loc 1 3031 0
 3134 000a 09B9     		cbnz	r1, .L311
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3135              		.loc 1 3031 0 is_stmt 0 discriminator 1
 3136              		.syntax unified
 3137              	@ 3031 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3138 000c 72B6     		 cpsid i 
 3139              	@ 0 "" 2
 3140              		.thumb
 3141              		.syntax unified
 3142              	.L312:
 3143 000e FEE7     		b	.L312
 3144              	.L311:
 3145 0010 0D46     		mov	r5, r1
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3146              		.loc 1 3033 0 is_stmt 1
 3147 0012 FFF7FEFF 		bl	vPortEnterCritical
 3148              	.LVL269:
 3149              	.LBB40:
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3150              		.loc 1 3036 0
 3151 0016 124B     		ldr	r3, .L319
 3152 0018 D3F81412 		ldr	r1, [r3, #532]
 3153              	.LVL270:
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3154              		.loc 1 3050 0
 3155 001c 2A68     		ldr	r2, [r5]
 3156 001e B2F1FF3F 		cmp	r2, #-1
 3157 0022 13D0     		beq	.L315
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3158              		.loc 1 3060 0
 3159 0024 2068     		ldr	r0, [r4]
 3160 0026 D3F82432 		ldr	r3, [r3, #548]
 3161 002a 9842     		cmp	r0, r3
 3162 002c 02D0     		beq	.L314
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3163              		.loc 1 3060 0 is_stmt 0 discriminator 1
 3164 002e 6368     		ldr	r3, [r4, #4]
 3165 0030 9942     		cmp	r1, r3
 3166 0032 0DD2     		bcs	.L316
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 152


 3167              	.L314:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3168              		.loc 1 3069 0 is_stmt 1
 3169 0034 6368     		ldr	r3, [r4, #4]
 3170 0036 C81A     		subs	r0, r1, r3
 3171 0038 8242     		cmp	r2, r0
 3172 003a 0BD9     		bls	.L317
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3173              		.loc 1 3072 0
 3174 003c 5B1A     		subs	r3, r3, r1
 3175 003e 1344     		add	r3, r3, r2
 3176 0040 2B60     		str	r3, [r5]
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
 3177              		.loc 1 3073 0
 3178 0042 2046     		mov	r0, r4
 3179 0044 FFF7FEFF 		bl	vTaskSetTimeOutState
 3180              	.LVL271:
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3181              		.loc 1 3074 0
 3182 0048 0024     		movs	r4, #0
 3183              	.LVL272:
 3184 004a 04E0     		b	.L313
 3185              	.LVL273:
 3186              	.L315:
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3187              		.loc 1 3055 0
 3188 004c 0024     		movs	r4, #0
 3189              	.LVL274:
 3190 004e 02E0     		b	.L313
 3191              	.LVL275:
 3192              	.L316:
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3193              		.loc 1 3067 0
 3194 0050 0124     		movs	r4, #1
 3195              	.LVL276:
 3196 0052 00E0     		b	.L313
 3197              	.LVL277:
 3198              	.L317:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3199              		.loc 1 3078 0
 3200 0054 0124     		movs	r4, #1
 3201              	.LVL278:
 3202              	.L313:
 3203              	.LBE40:
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3204              		.loc 1 3081 0
 3205 0056 FFF7FEFF 		bl	vPortExitCritical
 3206              	.LVL279:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3207              		.loc 1 3084 0
 3208 005a 2046     		mov	r0, r4
 3209 005c 38BD     		pop	{r3, r4, r5, pc}
 3210              	.LVL280:
 3211              	.L320:
 3212 005e 00BF     		.align	2
 3213              	.L319:
 3214 0060 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 153


 3215              		.cfi_endproc
 3216              	.LFE550:
 3217              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3218              		.section	.text.vTaskMissedYield,"ax",%progbits
 3219              		.align	2
 3220              		.global	vTaskMissedYield
 3221              		.thumb
 3222              		.thumb_func
 3223              		.type	vTaskMissedYield, %function
 3224              	vTaskMissedYield:
 3225              	.LFB551:
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3226              		.loc 1 3088 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              		@ link register save eliminated.
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3231              		.loc 1 3089 0
 3232 0000 0122     		movs	r2, #1
 3233 0002 024B     		ldr	r3, .L322
 3234 0004 C3F82C22 		str	r2, [r3, #556]
 3235 0008 7047     		bx	lr
 3236              	.L323:
 3237 000a 00BF     		.align	2
 3238              	.L322:
 3239 000c 00000000 		.word	.LANCHOR0
 3240              		.cfi_endproc
 3241              	.LFE551:
 3242              		.size	vTaskMissedYield, .-vTaskMissedYield
 3243              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3244              		.align	2
 3245              		.global	vTaskSetThreadLocalStoragePointer
 3246              		.thumb
 3247              		.thumb_func
 3248              		.type	vTaskSetThreadLocalStoragePointer, %function
 3249              	vTaskSetThreadLocalStoragePointer:
 3250              	.LFB553:
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 3251              		.loc 1 3292 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              		@ link register save eliminated.
 3256              	.LVL281:
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3257              		.loc 1 3295 0
 3258 0000 0429     		cmp	r1, #4
 3259 0002 07DC     		bgt	.L324
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3260              		.loc 1 3297 0
 3261 0004 10B9     		cbnz	r0, .L326
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3262              		.loc 1 3297 0 is_stmt 0 discriminator 1
 3263 0006 044B     		ldr	r3, .L327
 3264 0008 D3F80402 		ldr	r0, [r3, #516]
 3265              	.LVL282:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 154


 3266              	.L326:
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3267              		.loc 1 3298 0 is_stmt 1 discriminator 4
 3268 000c 1031     		adds	r1, r1, #16
 3269              	.LVL283:
 3270 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3271              	.LVL284:
 3272 0012 4A60     		str	r2, [r1, #4]
 3273              	.LVL285:
 3274              	.L324:
 3275 0014 7047     		bx	lr
 3276              	.L328:
 3277 0016 00BF     		.align	2
 3278              	.L327:
 3279 0018 00000000 		.word	.LANCHOR0
 3280              		.cfi_endproc
 3281              	.LFE553:
 3282              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3283              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3284              		.align	2
 3285              		.global	pvTaskGetThreadLocalStoragePointer
 3286              		.thumb
 3287              		.thumb_func
 3288              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3289              	pvTaskGetThreadLocalStoragePointer:
 3290              	.LFB554:
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
 3291              		.loc 1 3308 0
 3292              		.cfi_startproc
 3293              		@ args = 0, pretend = 0, frame = 0
 3294              		@ frame_needed = 0, uses_anonymous_args = 0
 3295              		@ link register save eliminated.
 3296              	.LVL286:
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3297              		.loc 1 3312 0
 3298 0000 0429     		cmp	r1, #4
 3299 0002 08DC     		bgt	.L332
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3300              		.loc 1 3314 0
 3301 0004 10B9     		cbnz	r0, .L331
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3302              		.loc 1 3314 0 is_stmt 0 discriminator 1
 3303 0006 054B     		ldr	r3, .L333
 3304 0008 D3F80402 		ldr	r0, [r3, #516]
 3305              	.LVL287:
 3306              	.L331:
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3307              		.loc 1 3315 0 is_stmt 1 discriminator 4
 3308 000c 1031     		adds	r1, r1, #16
 3309              	.LVL288:
 3310 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3311              	.LVL289:
 3312 0012 4068     		ldr	r0, [r0, #4]
 3313              	.LVL290:
 3314 0014 7047     		bx	lr
 3315              	.LVL291:
 3316              	.L332:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 155


3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3317              		.loc 1 3319 0
 3318 0016 0020     		movs	r0, #0
 3319              	.LVL292:
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3320              		.loc 1 3323 0
 3321 0018 7047     		bx	lr
 3322              	.L334:
 3323 001a 00BF     		.align	2
 3324              	.L333:
 3325 001c 00000000 		.word	.LANCHOR0
 3326              		.cfi_endproc
 3327              	.LFE554:
 3328              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3329              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3330              		.align	2
 3331              		.global	xTaskGetCurrentTaskHandle
 3332              		.thumb
 3333              		.thumb_func
 3334              		.type	xTaskGetCurrentTaskHandle, %function
 3335              	xTaskGetCurrentTaskHandle:
 3336              	.LFB559:
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 3337              		.loc 1 3673 0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 3341              		@ link register save eliminated.
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3342              		.loc 1 3679 0
 3343 0000 014B     		ldr	r3, .L336
 3344 0002 D3F80402 		ldr	r0, [r3, #516]
 3345              	.LVL293:
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3346              		.loc 1 3682 0
 3347 0006 7047     		bx	lr
 3348              	.L337:
 3349              		.align	2
 3350              	.L336:
 3351 0008 00000000 		.word	.LANCHOR0
 3352              		.cfi_endproc
 3353              	.LFE559:
 3354              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3355              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3356              		.align	2
 3357              		.global	xTaskGetSchedulerState
 3358              		.thumb
 3359              		.thumb_func
 3360              		.type	xTaskGetSchedulerState, %function
 3361              	xTaskGetSchedulerState:
 3362              	.LFB560:
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3363              		.loc 1 3690 0
 3364              		.cfi_startproc
 3365              		@ args = 0, pretend = 0, frame = 0
 3366              		@ frame_needed = 0, uses_anonymous_args = 0
 3367              		@ link register save eliminated.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 156


3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3368              		.loc 1 3693 0
 3369 0000 064B     		ldr	r3, .L342
 3370 0002 D3F80832 		ldr	r3, [r3, #520]
 3371 0006 2BB1     		cbz	r3, .L340
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3372              		.loc 1 3699 0
 3373 0008 044B     		ldr	r3, .L342
 3374 000a D3F81C32 		ldr	r3, [r3, #540]
 3375 000e 1BB9     		cbnz	r3, .L341
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3376              		.loc 1 3701 0
 3377 0010 0220     		movs	r0, #2
 3378 0012 7047     		bx	lr
 3379              	.L340:
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3380              		.loc 1 3695 0
 3381 0014 0120     		movs	r0, #1
 3382 0016 7047     		bx	lr
 3383              	.L341:
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3384              		.loc 1 3705 0
 3385 0018 0020     		movs	r0, #0
 3386              	.LVL294:
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3387              		.loc 1 3710 0
 3388 001a 7047     		bx	lr
 3389              	.L343:
 3390              		.align	2
 3391              	.L342:
 3392 001c 00000000 		.word	.LANCHOR0
 3393              		.cfi_endproc
 3394              	.LFE560:
 3395              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3396              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3397              		.align	2
 3398              		.global	uxTaskResetEventItemValue
 3399              		.thumb
 3400              		.thumb_func
 3401              		.type	uxTaskResetEventItemValue, %function
 3402              	uxTaskResetEventItemValue:
 3403              	.LFB561:
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
 3404              		.loc 1 4174 0
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 0
 3407              		@ frame_needed = 0, uses_anonymous_args = 0
 3408              		@ link register save eliminated.
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3409              		.loc 1 4177 0
 3410 0000 064B     		ldr	r3, .L345
 3411 0002 D3F80422 		ldr	r2, [r3, #516]
 3412 0006 9069     		ldr	r0, [r2, #24]
 3413              	.LVL295:
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3414              		.loc 1 4181 0
 3415 0008 D3F80422 		ldr	r2, [r3, #516]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 157


 3416 000c D3F80432 		ldr	r3, [r3, #516]
 3417 0010 DB6A     		ldr	r3, [r3, #44]
 3418 0012 C3F11403 		rsb	r3, r3, #20
 3419 0016 9361     		str	r3, [r2, #24]
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3420              		.loc 1 4184 0
 3421 0018 7047     		bx	lr
 3422              	.L346:
 3423 001a 00BF     		.align	2
 3424              	.L345:
 3425 001c 00000000 		.word	.LANCHOR0
 3426              		.cfi_endproc
 3427              	.LFE561:
 3428              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3429              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3430              		.align	2
 3431              		.global	ulTaskNotifyTake
 3432              		.thumb
 3433              		.thumb_func
 3434              		.type	ulTaskNotifyTake, %function
 3435              	ulTaskNotifyTake:
 3436              	.LFB562:
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
 3437              		.loc 1 4207 0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 0
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 3441              	.LVL296:
 3442 0000 38B5     		push	{r3, r4, r5, lr}
 3443              		.cfi_def_cfa_offset 16
 3444              		.cfi_offset 3, -16
 3445              		.cfi_offset 4, -12
 3446              		.cfi_offset 5, -8
 3447              		.cfi_offset 14, -4
 3448 0002 0546     		mov	r5, r0
 3449 0004 0C46     		mov	r4, r1
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3450              		.loc 1 4210 0
 3451 0006 FFF7FEFF 		bl	vPortEnterCritical
 3452              	.LVL297:
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3453              		.loc 1 4213 0
 3454 000a 1B4B     		ldr	r3, .L352
 3455 000c D3F80432 		ldr	r3, [r3, #516]
 3456 0010 9B6D     		ldr	r3, [r3, #88]
 3457 0012 93B9     		cbnz	r3, .L348
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3458              		.loc 1 4216 0
 3459 0014 184B     		ldr	r3, .L352
 3460 0016 D3F80432 		ldr	r3, [r3, #516]
 3461 001a 0122     		movs	r2, #1
 3462 001c 83F85C20 		strb	r2, [r3, #92]
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3463              		.loc 1 4218 0
 3464 0020 5CB1     		cbz	r4, .L348
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3465              		.loc 1 4220 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 158


 3466 0022 1146     		mov	r1, r2
 3467 0024 2046     		mov	r0, r4
 3468 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3469              	.LVL298:
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3470              		.loc 1 4227 0
 3471 002a 4FF08052 		mov	r2, #268435456
 3472 002e 134B     		ldr	r3, .L352+4
 3473 0030 1A60     		str	r2, [r3]
 3474              		.syntax unified
 3475              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3476 0032 BFF34F8F 		dsb
 3477              	@ 0 "" 2
 3478              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3479 0036 BFF36F8F 		isb
 3480              	@ 0 "" 2
 3481              		.thumb
 3482              		.syntax unified
 3483              	.L348:
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3484              		.loc 1 4239 0
 3485 003a FFF7FEFF 		bl	vPortExitCritical
 3486              	.LVL299:
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3487              		.loc 1 4241 0
 3488 003e FFF7FEFF 		bl	vPortEnterCritical
 3489              	.LVL300:
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3490              		.loc 1 4244 0
 3491 0042 0D4B     		ldr	r3, .L352
 3492 0044 D3F80432 		ldr	r3, [r3, #516]
 3493 0048 9C6D     		ldr	r4, [r3, #88]
 3494              	.LVL301:
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3495              		.loc 1 4246 0
 3496 004a 5CB1     		cbz	r4, .L349
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3497              		.loc 1 4248 0
 3498 004c 2DB1     		cbz	r5, .L350
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3499              		.loc 1 4250 0
 3500 004e 0A4B     		ldr	r3, .L352
 3501 0050 D3F80432 		ldr	r3, [r3, #516]
 3502 0054 0022     		movs	r2, #0
 3503 0056 9A65     		str	r2, [r3, #88]
 3504 0058 04E0     		b	.L349
 3505              	.L350:
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3506              		.loc 1 4254 0
 3507 005a 074B     		ldr	r3, .L352
 3508 005c D3F80432 		ldr	r3, [r3, #516]
 3509 0060 621E     		subs	r2, r4, #1
 3510 0062 9A65     		str	r2, [r3, #88]
 3511              	.L349:
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3512              		.loc 1 4262 0
 3513 0064 044B     		ldr	r3, .L352
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 159


 3514 0066 D3F80432 		ldr	r3, [r3, #516]
 3515 006a 0022     		movs	r2, #0
 3516 006c 83F85C20 		strb	r2, [r3, #92]
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3517              		.loc 1 4264 0
 3518 0070 FFF7FEFF 		bl	vPortExitCritical
 3519              	.LVL302:
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3520              		.loc 1 4267 0
 3521 0074 2046     		mov	r0, r4
 3522 0076 38BD     		pop	{r3, r4, r5, pc}
 3523              	.LVL303:
 3524              	.L353:
 3525              		.align	2
 3526              	.L352:
 3527 0078 00000000 		.word	.LANCHOR0
 3528 007c 04ED00E0 		.word	-536810236
 3529              		.cfi_endproc
 3530              	.LFE562:
 3531              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3532              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3533              		.align	2
 3534              		.global	xTaskNotifyWait
 3535              		.thumb
 3536              		.thumb_func
 3537              		.type	xTaskNotifyWait, %function
 3538              	xTaskNotifyWait:
 3539              	.LFB563:
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3540              		.loc 1 4275 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 0
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              	.LVL304:
 3545 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3546              		.cfi_def_cfa_offset 24
 3547              		.cfi_offset 3, -24
 3548              		.cfi_offset 4, -20
 3549              		.cfi_offset 5, -16
 3550              		.cfi_offset 6, -12
 3551              		.cfi_offset 7, -8
 3552              		.cfi_offset 14, -4
 3553 0002 0746     		mov	r7, r0
 3554 0004 0C46     		mov	r4, r1
 3555 0006 1546     		mov	r5, r2
 3556 0008 1E46     		mov	r6, r3
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3557              		.loc 1 4278 0
 3558 000a FFF7FEFF 		bl	vPortEnterCritical
 3559              	.LVL305:
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3560              		.loc 1 4281 0
 3561 000e 234B     		ldr	r3, .L360
 3562 0010 D3F80432 		ldr	r3, [r3, #516]
 3563 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3564 0018 DBB2     		uxtb	r3, r3
 3565 001a 022B     		cmp	r3, #2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 160


 3566 001c 18D0     		beq	.L355
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3567              		.loc 1 4286 0
 3568 001e 1F4B     		ldr	r3, .L360
 3569 0020 D3F80422 		ldr	r2, [r3, #516]
 3570 0024 906D     		ldr	r0, [r2, #88]
 3571 0026 20EA0700 		bic	r0, r0, r7
 3572 002a 9065     		str	r0, [r2, #88]
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3573              		.loc 1 4289 0
 3574 002c D3F80432 		ldr	r3, [r3, #516]
 3575 0030 0122     		movs	r2, #1
 3576 0032 83F85C20 		strb	r2, [r3, #92]
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3577              		.loc 1 4291 0
 3578 0036 5EB1     		cbz	r6, .L355
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3579              		.loc 1 4293 0
 3580 0038 1146     		mov	r1, r2
 3581 003a 3046     		mov	r0, r6
 3582 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3583              	.LVL306:
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3584              		.loc 1 4300 0
 3585 0040 4FF08052 		mov	r2, #268435456
 3586 0044 164B     		ldr	r3, .L360+4
 3587 0046 1A60     		str	r2, [r3]
 3588              		.syntax unified
 3589              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3590 0048 BFF34F8F 		dsb
 3591              	@ 0 "" 2
 3592              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3593 004c BFF36F8F 		isb
 3594              	@ 0 "" 2
 3595              		.thumb
 3596              		.syntax unified
 3597              	.L355:
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3598              		.loc 1 4312 0
 3599 0050 FFF7FEFF 		bl	vPortExitCritical
 3600              	.LVL307:
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3601              		.loc 1 4314 0
 3602 0054 FFF7FEFF 		bl	vPortEnterCritical
 3603              	.LVL308:
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3604              		.loc 1 4318 0
 3605 0058 25B1     		cbz	r5, .L356
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3606              		.loc 1 4322 0
 3607 005a 104B     		ldr	r3, .L360
 3608 005c D3F80432 		ldr	r3, [r3, #516]
 3609 0060 9B6D     		ldr	r3, [r3, #88]
 3610 0062 2B60     		str	r3, [r5]
 3611              	.L356:
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3612              		.loc 1 4329 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 161


 3613 0064 0D4B     		ldr	r3, .L360
 3614 0066 D3F80432 		ldr	r3, [r3, #516]
 3615 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3616 006e DBB2     		uxtb	r3, r3
 3617 0070 012B     		cmp	r3, #1
 3618 0072 08D0     		beq	.L358
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
 3619              		.loc 1 4338 0
 3620 0074 094B     		ldr	r3, .L360
 3621 0076 D3F80432 		ldr	r3, [r3, #516]
 3622 007a 996D     		ldr	r1, [r3, #88]
 3623 007c 21EA0401 		bic	r1, r1, r4
 3624 0080 9965     		str	r1, [r3, #88]
 3625              	.LVL309:
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3626              		.loc 1 4339 0
 3627 0082 0124     		movs	r4, #1
 3628              	.LVL310:
 3629 0084 00E0     		b	.L357
 3630              	.LVL311:
 3631              	.L358:
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3632              		.loc 1 4332 0
 3633 0086 0024     		movs	r4, #0
 3634              	.LVL312:
 3635              	.L357:
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3636              		.loc 1 4342 0
 3637 0088 044B     		ldr	r3, .L360
 3638 008a D3F80432 		ldr	r3, [r3, #516]
 3639 008e 0022     		movs	r2, #0
 3640 0090 83F85C20 		strb	r2, [r3, #92]
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3641              		.loc 1 4344 0
 3642 0094 FFF7FEFF 		bl	vPortExitCritical
 3643              	.LVL313:
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3644              		.loc 1 4347 0
 3645 0098 2046     		mov	r0, r4
 3646 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3647              	.LVL314:
 3648              	.L361:
 3649              		.align	2
 3650              	.L360:
 3651 009c 00000000 		.word	.LANCHOR0
 3652 00a0 04ED00E0 		.word	-536810236
 3653              		.cfi_endproc
 3654              	.LFE563:
 3655              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3656              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3657              		.align	2
 3658              		.global	xTaskGenericNotify
 3659              		.thumb
 3660              		.thumb_func
 3661              		.type	xTaskGenericNotify, %function
 3662              	xTaskGenericNotify:
 3663              	.LFB564:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 162


4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3664              		.loc 1 4355 0
 3665              		.cfi_startproc
 3666              		@ args = 0, pretend = 0, frame = 0
 3667              		@ frame_needed = 0, uses_anonymous_args = 0
 3668              	.LVL315:
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3669              		.loc 1 4360 0
 3670 0000 08B9     		cbnz	r0, .L363
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3671              		.loc 1 4360 0 is_stmt 0 discriminator 1
 3672              		.syntax unified
 3673              	@ 4360 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3674 0002 72B6     		 cpsid i 
 3675              	@ 0 "" 2
 3676              		.thumb
 3677              		.syntax unified
 3678              	.L364:
 3679 0004 FEE7     		b	.L364
 3680              	.L363:
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3681              		.loc 1 4355 0 is_stmt 1
 3682 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3683              		.cfi_def_cfa_offset 24
 3684              		.cfi_offset 3, -24
 3685              		.cfi_offset 4, -20
 3686              		.cfi_offset 5, -16
 3687              		.cfi_offset 6, -12
 3688              		.cfi_offset 7, -8
 3689              		.cfi_offset 14, -4
 3690 0008 0446     		mov	r4, r0
 3691 000a 1F46     		mov	r7, r3
 3692 000c 1546     		mov	r5, r2
 3693 000e 0E46     		mov	r6, r1
 3694              	.LVL316:
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3695              		.loc 1 4363 0
 3696 0010 FFF7FEFF 		bl	vPortEnterCritical
 3697              	.LVL317:
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3698              		.loc 1 4365 0
 3699 0014 0FB1     		cbz	r7, .L365
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3700              		.loc 1 4367 0
 3701 0016 A36D     		ldr	r3, [r4, #88]
 3702 0018 3B60     		str	r3, [r7]
 3703              	.L365:
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3704              		.loc 1 4370 0
 3705 001a 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3706 001e DBB2     		uxtb	r3, r3
 3707              	.LVL318:
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3708              		.loc 1 4372 0
 3709 0020 0222     		movs	r2, #2
 3710 0022 84F85C20 		strb	r2, [r4, #92]
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 163


 3711              		.loc 1 4374 0
 3712 0026 6A1E     		subs	r2, r5, #1
 3713 0028 032A     		cmp	r2, #3
 3714 002a 15D8     		bhi	.L376
 3715 002c DFE802F0 		tbb	[pc, r2]
 3716              	.L368:
 3717 0030 02       		.byte	(.L367-.L368)/2
 3718 0031 07       		.byte	(.L369-.L368)/2
 3719 0032 0C       		.byte	(.L370-.L368)/2
 3720 0033 0F       		.byte	(.L371-.L368)/2
 3721              		.p2align 1
 3722              	.L367:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3723              		.loc 1 4377 0
 3724 0034 A26D     		ldr	r2, [r4, #88]
 3725 0036 1643     		orrs	r6, r6, r2
 3726              	.LVL319:
 3727 0038 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3728              		.loc 1 4357 0
 3729 003a 0125     		movs	r5, #1
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3730              		.loc 1 4378 0
 3731 003c 0FE0     		b	.L366
 3732              	.LVL320:
 3733              	.L369:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3734              		.loc 1 4381 0
 3735 003e A26D     		ldr	r2, [r4, #88]
 3736 0040 0132     		adds	r2, r2, #1
 3737 0042 A265     		str	r2, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3738              		.loc 1 4357 0
 3739 0044 0125     		movs	r5, #1
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3740              		.loc 1 4382 0
 3741 0046 0AE0     		b	.L366
 3742              	.L370:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3743              		.loc 1 4385 0
 3744 0048 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3745              		.loc 1 4357 0
 3746 004a 0125     		movs	r5, #1
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3747              		.loc 1 4386 0
 3748 004c 07E0     		b	.L366
 3749              	.L371:
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3750              		.loc 1 4389 0
 3751 004e 022B     		cmp	r3, #2
 3752 0050 04D0     		beq	.L377
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3753              		.loc 1 4391 0
 3754 0052 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3755              		.loc 1 4357 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 164


 3756 0054 0125     		movs	r5, #1
 3757 0056 02E0     		b	.L366
 3758              	.L376:
 3759 0058 0125     		movs	r5, #1
 3760 005a 00E0     		b	.L366
 3761              	.L377:
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3762              		.loc 1 4396 0
 3763 005c 0025     		movs	r5, #0
 3764              	.LVL321:
 3765              	.L366:
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3766              		.loc 1 4410 0
 3767 005e 012B     		cmp	r3, #1
 3768 0060 27D1     		bne	.L372
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 3769              		.loc 1 4412 0
 3770 0062 261D     		adds	r6, r4, #4
 3771 0064 3046     		mov	r0, r6
 3772 0066 FFF7FEFF 		bl	uxListRemove
 3773              	.LVL322:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3774              		.loc 1 4413 0
 3775 006a E36A     		ldr	r3, [r4, #44]
 3776 006c 134A     		ldr	r2, .L379
 3777 006e D2F81022 		ldr	r2, [r2, #528]
 3778 0072 9342     		cmp	r3, r2
 3779 0074 02D9     		bls	.L373
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3780              		.loc 1 4413 0 is_stmt 0 discriminator 1
 3781 0076 114A     		ldr	r2, .L379
 3782 0078 C2F81032 		str	r3, [r2, #528]
 3783              	.L373:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3784              		.loc 1 4413 0 discriminator 3
 3785 007c 03EB8303 		add	r3, r3, r3, lsl #2
 3786 0080 9A00     		lsls	r2, r3, #2
 3787 0082 3146     		mov	r1, r6
 3788 0084 0E48     		ldr	r0, .L379+4
 3789 0086 1044     		add	r0, r0, r2
 3790 0088 FFF7FEFF 		bl	vListInsertEnd
 3791              	.LVL323:
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3792              		.loc 1 4416 0 is_stmt 1 discriminator 3
 3793 008c A36A     		ldr	r3, [r4, #40]
 3794 008e 0BB1     		cbz	r3, .L374
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3795              		.loc 1 4416 0 is_stmt 0 discriminator 1
 3796              		.syntax unified
 3797              	@ 4416 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3798 0090 72B6     		 cpsid i 
 3799              	@ 0 "" 2
 3800              		.thumb
 3801              		.syntax unified
 3802              	.L375:
 3803 0092 FEE7     		b	.L375
 3804              	.L374:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 165


4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3805              		.loc 1 4434 0 is_stmt 1
 3806 0094 E26A     		ldr	r2, [r4, #44]
 3807 0096 094B     		ldr	r3, .L379
 3808 0098 D3F80432 		ldr	r3, [r3, #516]
 3809 009c DB6A     		ldr	r3, [r3, #44]
 3810 009e 9A42     		cmp	r2, r3
 3811 00a0 07D9     		bls	.L372
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3812              		.loc 1 4438 0
 3813 00a2 4FF08052 		mov	r2, #268435456
 3814 00a6 074B     		ldr	r3, .L379+8
 3815 00a8 1A60     		str	r2, [r3]
 3816              		.syntax unified
 3817              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3818 00aa BFF34F8F 		dsb
 3819              	@ 0 "" 2
 3820              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3821 00ae BFF36F8F 		isb
 3822              	@ 0 "" 2
 3823              		.thumb
 3824              		.syntax unified
 3825              	.L372:
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3826              		.loc 1 4450 0
 3827 00b2 FFF7FEFF 		bl	vPortExitCritical
 3828              	.LVL324:
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3829              		.loc 1 4453 0
 3830 00b6 2846     		mov	r0, r5
 3831 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3832              	.LVL325:
 3833              	.L380:
 3834 00ba 00BF     		.align	2
 3835              	.L379:
 3836 00bc 00000000 		.word	.LANCHOR0
 3837 00c0 30000000 		.word	.LANCHOR0+48
 3838 00c4 04ED00E0 		.word	-536810236
 3839              		.cfi_endproc
 3840              	.LFE564:
 3841              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 3842              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 3843              		.align	2
 3844              		.global	xTaskGenericNotifyFromISR
 3845              		.thumb
 3846              		.thumb_func
 3847              		.type	xTaskGenericNotifyFromISR, %function
 3848              	xTaskGenericNotifyFromISR:
 3849              	.LFB565:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3850              		.loc 1 4461 0
 3851              		.cfi_startproc
 3852              		@ args = 4, pretend = 0, frame = 0
 3853              		@ frame_needed = 0, uses_anonymous_args = 0
 3854              	.LVL326:
 3855 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3856              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 166


 3857              		.cfi_offset 3, -32
 3858              		.cfi_offset 4, -28
 3859              		.cfi_offset 5, -24
 3860              		.cfi_offset 6, -20
 3861              		.cfi_offset 7, -16
 3862              		.cfi_offset 8, -12
 3863              		.cfi_offset 9, -8
 3864              		.cfi_offset 14, -4
 3865 0004 089E     		ldr	r6, [sp, #32]
 3866              	.LVL327:
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3867              		.loc 1 4467 0
 3868 0006 08B9     		cbnz	r0, .L382
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3869              		.loc 1 4467 0 is_stmt 0 discriminator 1
 3870              		.syntax unified
 3871              	@ 4467 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3872 0008 72B6     		 cpsid i 
 3873              	@ 0 "" 2
 3874              		.thumb
 3875              		.syntax unified
 3876              	.L383:
 3877 000a FEE7     		b	.L383
 3878              	.L382:
 3879 000c 0446     		mov	r4, r0
 3880 000e 9946     		mov	r9, r3
 3881 0010 1546     		mov	r5, r2
 3882 0012 8846     		mov	r8, r1
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3883              		.loc 1 4485 0 is_stmt 1
 3884 0014 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3885              	.LVL328:
 3886              	.LBB41:
 3887              	.LBB42:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 3888              		.loc 2 215 0
 3889              		.syntax unified
 3890              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 3891 0018 EFF31187 		    mrs r7, basepri                                            
 3892 001c 4FF02F03 	    mov r3, #47                                                 
 3893 0020 83F31188 	    msr basepri, r3                                            
 3894 0024 BFF36F8F 	    isb                                                        
 3895 0028 BFF34F8F 	    dsb                                                        
 3896              	
 3897              	@ 0 "" 2
 3898              		.thumb
 3899              		.syntax unified
 3900              	.LBE42:
 3901              	.LBE41:
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3902              		.loc 1 4491 0
 3903 002c B9F1000F 		cmp	r9, #0
 3904 0030 02D0     		beq	.L384
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3905              		.loc 1 4493 0
 3906 0032 A36D     		ldr	r3, [r4, #88]
 3907 0034 C9F80030 		str	r3, [r9]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 167


 3908              	.L384:
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 3909              		.loc 1 4496 0
 3910 0038 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3911 003c DBB2     		uxtb	r3, r3
 3912              	.LVL329:
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3913              		.loc 1 4497 0
 3914 003e 0222     		movs	r2, #2
 3915 0040 84F85C20 		strb	r2, [r4, #92]
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3916              		.loc 1 4499 0
 3917 0044 6A1E     		subs	r2, r5, #1
 3918 0046 032A     		cmp	r2, #3
 3919 0048 18D8     		bhi	.L398
 3920 004a DFE802F0 		tbb	[pc, r2]
 3921              	.L387:
 3922 004e 02       		.byte	(.L386-.L387)/2
 3923 004f 08       		.byte	(.L388-.L387)/2
 3924 0050 0D       		.byte	(.L389-.L387)/2
 3925 0051 11       		.byte	(.L390-.L387)/2
 3926              		.p2align 1
 3927              	.L386:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3928              		.loc 1 4502 0
 3929 0052 A26D     		ldr	r2, [r4, #88]
 3930 0054 42EA0802 		orr	r2, r2, r8
 3931 0058 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3932              		.loc 1 4464 0
 3933 005a 0125     		movs	r5, #1
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3934              		.loc 1 4503 0
 3935 005c 11E0     		b	.L385
 3936              	.L388:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3937              		.loc 1 4506 0
 3938 005e A26D     		ldr	r2, [r4, #88]
 3939 0060 0132     		adds	r2, r2, #1
 3940 0062 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3941              		.loc 1 4464 0
 3942 0064 0125     		movs	r5, #1
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3943              		.loc 1 4507 0
 3944 0066 0CE0     		b	.L385
 3945              	.L389:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3946              		.loc 1 4510 0
 3947 0068 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3948              		.loc 1 4464 0
 3949 006c 0125     		movs	r5, #1
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3950              		.loc 1 4511 0
 3951 006e 08E0     		b	.L385
 3952              	.L390:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 168


4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3953              		.loc 1 4514 0
 3954 0070 022B     		cmp	r3, #2
 3955 0072 05D0     		beq	.L399
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3956              		.loc 1 4516 0
 3957 0074 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3958              		.loc 1 4464 0
 3959 0078 0125     		movs	r5, #1
 3960 007a 02E0     		b	.L385
 3961              	.L398:
 3962 007c 0125     		movs	r5, #1
 3963 007e 00E0     		b	.L385
 3964              	.L399:
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3965              		.loc 1 4521 0
 3966 0080 0025     		movs	r5, #0
 3967              	.L385:
 3968              	.LVL330:
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3969              		.loc 1 4535 0
 3970 0082 012B     		cmp	r3, #1
 3971 0084 32D1     		bne	.L391
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3972              		.loc 1 4538 0
 3973 0086 A36A     		ldr	r3, [r4, #40]
 3974              	.LVL331:
 3975 0088 0BB1     		cbz	r3, .L392
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3976              		.loc 1 4538 0 is_stmt 0 discriminator 1
 3977              		.syntax unified
 3978              	@ 4538 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3979 008a 72B6     		 cpsid i 
 3980              	@ 0 "" 2
 3981              		.thumb
 3982              		.syntax unified
 3983              	.L393:
 3984 008c FEE7     		b	.L393
 3985              	.L392:
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3986              		.loc 1 4540 0 is_stmt 1
 3987 008e 1A4B     		ldr	r3, .L401
 3988 0090 D3F81C32 		ldr	r3, [r3, #540]
 3989 0094 B3B9     		cbnz	r3, .L394
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3990              		.loc 1 4542 0
 3991 0096 04F10408 		add	r8, r4, #4
 3992              	.LVL332:
 3993 009a 4046     		mov	r0, r8
 3994 009c FFF7FEFF 		bl	uxListRemove
 3995              	.LVL333:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3996              		.loc 1 4543 0
 3997 00a0 E36A     		ldr	r3, [r4, #44]
 3998 00a2 154A     		ldr	r2, .L401
 3999 00a4 D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 169


 4000 00a8 9342     		cmp	r3, r2
 4001 00aa 02D9     		bls	.L395
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4002              		.loc 1 4543 0 is_stmt 0 discriminator 1
 4003 00ac 124A     		ldr	r2, .L401
 4004 00ae C2F81032 		str	r3, [r2, #528]
 4005              	.L395:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4006              		.loc 1 4543 0 discriminator 3
 4007 00b2 03EB8303 		add	r3, r3, r3, lsl #2
 4008 00b6 9A00     		lsls	r2, r3, #2
 4009 00b8 4146     		mov	r1, r8
 4010 00ba 1048     		ldr	r0, .L401+4
 4011 00bc 1044     		add	r0, r0, r2
 4012 00be FFF7FEFF 		bl	vListInsertEnd
 4013              	.LVL334:
 4014 00c2 04E0     		b	.L396
 4015              	.LVL335:
 4016              	.L394:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4017              		.loc 1 4549 0 is_stmt 1
 4018 00c4 04F11801 		add	r1, r4, #24
 4019 00c8 0D48     		ldr	r0, .L401+8
 4020 00ca FFF7FEFF 		bl	vListInsertEnd
 4021              	.LVL336:
 4022              	.L396:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4023              		.loc 1 4552 0
 4024 00ce E26A     		ldr	r2, [r4, #44]
 4025 00d0 094B     		ldr	r3, .L401
 4026 00d2 D3F80432 		ldr	r3, [r3, #516]
 4027 00d6 DB6A     		ldr	r3, [r3, #44]
 4028 00d8 9A42     		cmp	r2, r3
 4029 00da 07D9     		bls	.L391
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4030              		.loc 1 4556 0
 4031 00dc 16B1     		cbz	r6, .L397
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4032              		.loc 1 4558 0
 4033 00de 0123     		movs	r3, #1
 4034 00e0 3360     		str	r3, [r6]
 4035 00e2 03E0     		b	.L391
 4036              	.L397:
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4037              		.loc 1 4565 0
 4038 00e4 0122     		movs	r2, #1
 4039 00e6 044B     		ldr	r3, .L401
 4040 00e8 C3F82C22 		str	r2, [r3, #556]
 4041              	.L391:
 4042              	.LVL337:
 4043              	.LBB43:
 4044              	.LBB44:
 4045              		.loc 2 233 0
 4046              		.syntax unified
 4047              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4048 00ec 87F31188 		    msr basepri, r7  
 4049              	@ 0 "" 2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 170


 4050              	.LVL338:
 4051              		.thumb
 4052              		.syntax unified
 4053              	.LBE44:
 4054              	.LBE43:
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4055              		.loc 1 4577 0
 4056 00f0 2846     		mov	r0, r5
 4057 00f2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4058              	.LVL339:
 4059              	.L402:
 4060 00f6 00BF     		.align	2
 4061              	.L401:
 4062 00f8 00000000 		.word	.LANCHOR0
 4063 00fc 30000000 		.word	.LANCHOR0+48
 4064 0100 14000000 		.word	.LANCHOR0+20
 4065              		.cfi_endproc
 4066              	.LFE565:
 4067              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4068              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4069              		.align	2
 4070              		.global	vTaskNotifyGiveFromISR
 4071              		.thumb
 4072              		.thumb_func
 4073              		.type	vTaskNotifyGiveFromISR, %function
 4074              	vTaskNotifyGiveFromISR:
 4075              	.LFB566:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4076              		.loc 1 4585 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 0
 4079              		@ frame_needed = 0, uses_anonymous_args = 0
 4080              	.LVL340:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4081              		.loc 1 4590 0
 4082 0000 08B9     		cbnz	r0, .L404
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4083              		.loc 1 4590 0 is_stmt 0 discriminator 1
 4084              		.syntax unified
 4085              	@ 4590 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4086 0002 72B6     		 cpsid i 
 4087              	@ 0 "" 2
 4088              		.thumb
 4089              		.syntax unified
 4090              	.L405:
 4091 0004 FEE7     		b	.L405
 4092              	.L404:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4093              		.loc 1 4585 0 is_stmt 1
 4094 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4095              		.cfi_def_cfa_offset 24
 4096              		.cfi_offset 3, -24
 4097              		.cfi_offset 4, -20
 4098              		.cfi_offset 5, -16
 4099              		.cfi_offset 6, -12
 4100              		.cfi_offset 7, -8
 4101              		.cfi_offset 14, -4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 171


 4102 0008 0446     		mov	r4, r0
 4103 000a 0D46     		mov	r5, r1
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4104              		.loc 1 4608 0
 4105 000c FFF7FEFF 		bl	vPortValidateInterruptPriority
 4106              	.LVL341:
 4107              	.LBB45:
 4108              	.LBB46:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 4109              		.loc 2 215 0
 4110              		.syntax unified
 4111              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4112 0010 EFF31186 		    mrs r6, basepri                                            
 4113 0014 4FF02F03 	    mov r3, #47                                                 
 4114 0018 83F31188 	    msr basepri, r3                                            
 4115 001c BFF36F8F 	    isb                                                        
 4116 0020 BFF34F8F 	    dsb                                                        
 4117              	
 4118              	@ 0 "" 2
 4119              		.thumb
 4120              		.syntax unified
 4121              	.LBE46:
 4122              	.LBE45:
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4123              		.loc 1 4614 0
 4124 0024 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4125 0028 DBB2     		uxtb	r3, r3
 4126              	.LVL342:
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4127              		.loc 1 4615 0
 4128 002a 0222     		movs	r2, #2
 4129 002c 84F85C20 		strb	r2, [r4, #92]
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4130              		.loc 1 4619 0
 4131 0030 A26D     		ldr	r2, [r4, #88]
 4132 0032 0132     		adds	r2, r2, #1
 4133 0034 A265     		str	r2, [r4, #88]
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4134              		.loc 1 4625 0
 4135 0036 012B     		cmp	r3, #1
 4136 0038 31D1     		bne	.L406
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4137              		.loc 1 4628 0
 4138 003a A36A     		ldr	r3, [r4, #40]
 4139              	.LVL343:
 4140 003c 0BB1     		cbz	r3, .L407
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4141              		.loc 1 4628 0 is_stmt 0 discriminator 1
 4142              		.syntax unified
 4143              	@ 4628 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4144 003e 72B6     		 cpsid i 
 4145              	@ 0 "" 2
 4146              		.thumb
 4147              		.syntax unified
 4148              	.L408:
 4149 0040 FEE7     		b	.L408
 4150              	.L407:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 172


4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4151              		.loc 1 4630 0 is_stmt 1
 4152 0042 184B     		ldr	r3, .L414
 4153 0044 D3F81C32 		ldr	r3, [r3, #540]
 4154 0048 ABB9     		cbnz	r3, .L409
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4155              		.loc 1 4632 0
 4156 004a 271D     		adds	r7, r4, #4
 4157 004c 3846     		mov	r0, r7
 4158 004e FFF7FEFF 		bl	uxListRemove
 4159              	.LVL344:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4160              		.loc 1 4633 0
 4161 0052 E36A     		ldr	r3, [r4, #44]
 4162 0054 134A     		ldr	r2, .L414
 4163 0056 D2F81022 		ldr	r2, [r2, #528]
 4164 005a 9342     		cmp	r3, r2
 4165 005c 02D9     		bls	.L410
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4166              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4167 005e 114A     		ldr	r2, .L414
 4168 0060 C2F81032 		str	r3, [r2, #528]
 4169              	.L410:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4170              		.loc 1 4633 0 discriminator 3
 4171 0064 03EB8303 		add	r3, r3, r3, lsl #2
 4172 0068 9A00     		lsls	r2, r3, #2
 4173 006a 3946     		mov	r1, r7
 4174 006c 0E48     		ldr	r0, .L414+4
 4175 006e 1044     		add	r0, r0, r2
 4176 0070 FFF7FEFF 		bl	vListInsertEnd
 4177              	.LVL345:
 4178 0074 04E0     		b	.L411
 4179              	.L409:
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4180              		.loc 1 4639 0 is_stmt 1
 4181 0076 04F11801 		add	r1, r4, #24
 4182 007a 0C48     		ldr	r0, .L414+8
 4183 007c FFF7FEFF 		bl	vListInsertEnd
 4184              	.LVL346:
 4185              	.L411:
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4186              		.loc 1 4642 0
 4187 0080 E26A     		ldr	r2, [r4, #44]
 4188 0082 084B     		ldr	r3, .L414
 4189 0084 D3F80432 		ldr	r3, [r3, #516]
 4190 0088 DB6A     		ldr	r3, [r3, #44]
 4191 008a 9A42     		cmp	r2, r3
 4192 008c 07D9     		bls	.L406
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4193              		.loc 1 4646 0
 4194 008e 15B1     		cbz	r5, .L412
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4195              		.loc 1 4648 0
 4196 0090 0123     		movs	r3, #1
 4197 0092 2B60     		str	r3, [r5]
 4198 0094 03E0     		b	.L406
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 173


 4199              	.L412:
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4200              		.loc 1 4655 0
 4201 0096 0122     		movs	r2, #1
 4202 0098 024B     		ldr	r3, .L414
 4203 009a C3F82C22 		str	r2, [r3, #556]
 4204              	.L406:
 4205              	.LVL347:
 4206              	.LBB47:
 4207              	.LBB48:
 4208              		.loc 2 233 0
 4209              		.syntax unified
 4210              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4211 009e 86F31188 		    msr basepri, r6  
 4212              	@ 0 "" 2
 4213              	.LVL348:
 4214              		.thumb
 4215              		.syntax unified
 4216 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4217              	.LVL349:
 4218              	.L415:
 4219              		.align	2
 4220              	.L414:
 4221 00a4 00000000 		.word	.LANCHOR0
 4222 00a8 30000000 		.word	.LANCHOR0+48
 4223 00ac 14000000 		.word	.LANCHOR0+20
 4224              	.LBE48:
 4225              	.LBE47:
 4226              		.cfi_endproc
 4227              	.LFE566:
 4228              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4229              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4230              		.align	2
 4231              		.global	xTaskNotifyStateClear
 4232              		.thumb
 4233              		.thumb_func
 4234              		.type	xTaskNotifyStateClear, %function
 4235              	xTaskNotifyStateClear:
 4236              	.LFB567:
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 4237              		.loc 1 4674 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              	.LVL350:
 4242 0000 10B5     		push	{r4, lr}
 4243              		.cfi_def_cfa_offset 8
 4244              		.cfi_offset 4, -8
 4245              		.cfi_offset 14, -4
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4246              		.loc 1 4680 0
 4247 0002 0446     		mov	r4, r0
 4248 0004 10B9     		cbnz	r0, .L417
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4249              		.loc 1 4680 0 is_stmt 0 discriminator 1
 4250 0006 0A4B     		ldr	r3, .L421
 4251 0008 D3F80442 		ldr	r4, [r3, #516]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 174


 4252              	.LVL351:
 4253              	.L417:
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 4254              		.loc 1 4682 0 is_stmt 1 discriminator 4
 4255 000c FFF7FEFF 		bl	vPortEnterCritical
 4256              	.LVL352:
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4257              		.loc 1 4684 0 discriminator 4
 4258 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4259 0014 DBB2     		uxtb	r3, r3
 4260 0016 022B     		cmp	r3, #2
 4261 0018 04D1     		bne	.L419
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 4262              		.loc 1 4686 0
 4263 001a 0023     		movs	r3, #0
 4264 001c 84F85C30 		strb	r3, [r4, #92]
 4265              	.LVL353:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4266              		.loc 1 4687 0
 4267 0020 0124     		movs	r4, #1
 4268              	.LVL354:
 4269 0022 00E0     		b	.L418
 4270              	.LVL355:
 4271              	.L419:
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4272              		.loc 1 4691 0
 4273 0024 0024     		movs	r4, #0
 4274              	.LVL356:
 4275              	.L418:
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4276              		.loc 1 4694 0
 4277 0026 FFF7FEFF 		bl	vPortExitCritical
 4278              	.LVL357:
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4279              		.loc 1 4697 0
 4280 002a 2046     		mov	r0, r4
 4281 002c 10BD     		pop	{r4, pc}
 4282              	.LVL358:
 4283              	.L422:
 4284 002e 00BF     		.align	2
 4285              	.L421:
 4286 0030 00000000 		.word	.LANCHOR0
 4287              		.cfi_endproc
 4288              	.LFE567:
 4289              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4290              		.global	pxCurrentTCB
 4291              		.section	.rodata.str1.4,"aMS",%progbits,1
 4292              		.align	2
 4293              	.LC0:
 4294 0000 49444C45 		.ascii	"IDLE\000"
 4294      00
 4295              		.bss
 4296              		.align	2
 4297              		.set	.LANCHOR0,. + 0
 4298              		.type	xSuspendedTaskList, %object
 4299              		.size	xSuspendedTaskList, 20
 4300              	xSuspendedTaskList:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 175


 4301 0000 00000000 		.space	20
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4302              		.type	xPendingReadyList, %object
 4303              		.size	xPendingReadyList, 20
 4304              	xPendingReadyList:
 4305 0014 00000000 		.space	20
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4306              		.type	pxDelayedTaskList, %object
 4307              		.size	pxDelayedTaskList, 4
 4308              	pxDelayedTaskList:
 4309 0028 00000000 		.space	4
 4310              		.type	xNextTaskUnblockTime, %object
 4311              		.size	xNextTaskUnblockTime, 4
 4312              	xNextTaskUnblockTime:
 4313 002c 00000000 		.space	4
 4314              		.type	pxReadyTasksLists, %object
 4315              		.size	pxReadyTasksLists, 400
 4316              	pxReadyTasksLists:
 4317 0030 00000000 		.space	400
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4318              		.type	xDelayedTaskList1, %object
 4319              		.size	xDelayedTaskList1, 20
 4320              	xDelayedTaskList1:
 4321 01c0 00000000 		.space	20
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4322              		.type	xDelayedTaskList2, %object
 4323              		.size	xDelayedTaskList2, 20
 4324              	xDelayedTaskList2:
 4325 01d4 00000000 		.space	20
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4326              		.type	xTasksWaitingTermination, %object
 4327              		.size	xTasksWaitingTermination, 20
 4328              	xTasksWaitingTermination:
 4329 01e8 00000000 		.space	20
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4330              		.type	pxOverflowDelayedTaskList, %object
 4331              		.size	pxOverflowDelayedTaskList, 4
 4332              	pxOverflowDelayedTaskList:
 4333 01fc 00000000 		.space	4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 176


 4334              		.type	uxCurrentNumberOfTasks, %object
 4335              		.size	uxCurrentNumberOfTasks, 4
 4336              	uxCurrentNumberOfTasks:
 4337 0200 00000000 		.space	4
 4338              		.type	pxCurrentTCB, %object
 4339              		.size	pxCurrentTCB, 4
 4340              	pxCurrentTCB:
 4341 0204 00000000 		.space	4
 4342              		.type	xSchedulerRunning, %object
 4343              		.size	xSchedulerRunning, 4
 4344              	xSchedulerRunning:
 4345 0208 00000000 		.space	4
 4346              		.type	uxTaskNumber, %object
 4347              		.size	uxTaskNumber, 4
 4348              	uxTaskNumber:
 4349 020c 00000000 		.space	4
 4350              		.type	uxTopReadyPriority, %object
 4351              		.size	uxTopReadyPriority, 4
 4352              	uxTopReadyPriority:
 4353 0210 00000000 		.space	4
 4354              		.type	xTickCount, %object
 4355              		.size	xTickCount, 4
 4356              	xTickCount:
 4357 0214 00000000 		.space	4
 4358              		.type	uxDeletedTasksWaitingCleanUp, %object
 4359              		.size	uxDeletedTasksWaitingCleanUp, 4
 4360              	uxDeletedTasksWaitingCleanUp:
 4361 0218 00000000 		.space	4
 4362              		.type	uxSchedulerSuspended, %object
 4363              		.size	uxSchedulerSuspended, 4
 4364              	uxSchedulerSuspended:
 4365 021c 00000000 		.space	4
 4366              		.type	xIdleTaskHandle, %object
 4367              		.size	xIdleTaskHandle, 4
 4368              	xIdleTaskHandle:
 4369 0220 00000000 		.space	4
 4370              		.type	xNumOfOverflows, %object
 4371              		.size	xNumOfOverflows, 4
 4372              	xNumOfOverflows:
 4373 0224 00000000 		.space	4
 4374              		.type	uxPendedTicks, %object
 4375              		.size	uxPendedTicks, 4
 4376              	uxPendedTicks:
 4377 0228 00000000 		.space	4
 4378              		.type	xYieldPending, %object
 4379              		.size	xYieldPending, 4
 4380              	xYieldPending:
 4381 022c 00000000 		.space	4
 4382              		.text
 4383              	.Letext0:
 4384              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4385              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4386              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4387              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 4388              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
 4389              		.file 8 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
 4390              		.file 9 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 177


 4391              		.file 10 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 4392              		.file 11 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_dis.h"
 4393              		.file 12 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_hts.h"
 4394              		.file 13 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_event_handler.h"
 4395              		.file 14 "Generated_Source\\PSoC6/ADC.h"
 4396              		.file 15 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/projdefs.h"
 4397              		.file 16 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/list.h"
 4398              		.file 17 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 4399              		.file 18 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4400              		.file 19 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 4401              		.file 20 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/portable.h"
 4402              		.file 21 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 4403              		.file 22 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 4404              		.section	.debug_info,"",%progbits
 4405              	.Ldebug_info0:
 4406 0000 52250000 		.4byte	0x2552
 4407 0004 0400     		.2byte	0x4
 4408 0006 00000000 		.4byte	.Ldebug_abbrev0
 4409 000a 04       		.byte	0x4
 4410 000b 01       		.uleb128 0x1
 4411 000c 3D060000 		.4byte	.LASF418
 4412 0010 0C       		.byte	0xc
 4413 0011 A6110000 		.4byte	.LASF419
 4414 0015 8C140000 		.4byte	.LASF420
 4415 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4416 001d 00000000 		.4byte	0
 4417 0021 00000000 		.4byte	.Ldebug_line0
 4418 0025 02       		.uleb128 0x2
 4419 0026 B20C0000 		.4byte	.LASF4
 4420 002a 03       		.byte	0x3
 4421 002b D8       		.byte	0xd8
 4422 002c 30000000 		.4byte	0x30
 4423 0030 03       		.uleb128 0x3
 4424 0031 04       		.byte	0x4
 4425 0032 07       		.byte	0x7
 4426 0033 FC020000 		.4byte	.LASF0
 4427 0037 04       		.uleb128 0x4
 4428 0038 04       		.byte	0x4
 4429 0039 05       		.byte	0x5
 4430 003a 696E7400 		.ascii	"int\000"
 4431 003e 03       		.uleb128 0x3
 4432 003f 08       		.byte	0x8
 4433 0040 05       		.byte	0x5
 4434 0041 A0130000 		.4byte	.LASF1
 4435 0045 03       		.uleb128 0x3
 4436 0046 08       		.byte	0x8
 4437 0047 04       		.byte	0x4
 4438 0048 63180000 		.4byte	.LASF2
 4439 004c 03       		.uleb128 0x3
 4440 004d 01       		.byte	0x1
 4441 004e 06       		.byte	0x6
 4442 004f 3F220000 		.4byte	.LASF3
 4443 0053 02       		.uleb128 0x2
 4444 0054 FE1C0000 		.4byte	.LASF5
 4445 0058 04       		.byte	0x4
 4446 0059 1D       		.byte	0x1d
 4447 005a 5E000000 		.4byte	0x5e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 178


 4448 005e 03       		.uleb128 0x3
 4449 005f 01       		.byte	0x1
 4450 0060 08       		.byte	0x8
 4451 0061 60190000 		.4byte	.LASF6
 4452 0065 03       		.uleb128 0x3
 4453 0066 02       		.byte	0x2
 4454 0067 05       		.byte	0x5
 4455 0068 8E1A0000 		.4byte	.LASF7
 4456 006c 02       		.uleb128 0x2
 4457 006d EA0A0000 		.4byte	.LASF8
 4458 0071 04       		.byte	0x4
 4459 0072 2B       		.byte	0x2b
 4460 0073 77000000 		.4byte	0x77
 4461 0077 03       		.uleb128 0x3
 4462 0078 02       		.byte	0x2
 4463 0079 07       		.byte	0x7
 4464 007a 4B220000 		.4byte	.LASF9
 4465 007e 02       		.uleb128 0x2
 4466 007f DF030000 		.4byte	.LASF10
 4467 0083 04       		.byte	0x4
 4468 0084 3F       		.byte	0x3f
 4469 0085 89000000 		.4byte	0x89
 4470 0089 03       		.uleb128 0x3
 4471 008a 04       		.byte	0x4
 4472 008b 05       		.byte	0x5
 4473 008c 231B0000 		.4byte	.LASF11
 4474 0090 02       		.uleb128 0x2
 4475 0091 7B1F0000 		.4byte	.LASF12
 4476 0095 04       		.byte	0x4
 4477 0096 41       		.byte	0x41
 4478 0097 9B000000 		.4byte	0x9b
 4479 009b 03       		.uleb128 0x3
 4480 009c 04       		.byte	0x4
 4481 009d 07       		.byte	0x7
 4482 009e 761E0000 		.4byte	.LASF13
 4483 00a2 03       		.uleb128 0x3
 4484 00a3 08       		.byte	0x8
 4485 00a4 07       		.byte	0x7
 4486 00a5 7F090000 		.4byte	.LASF14
 4487 00a9 03       		.uleb128 0x3
 4488 00aa 04       		.byte	0x4
 4489 00ab 07       		.byte	0x7
 4490 00ac 4E1E0000 		.4byte	.LASF15
 4491 00b0 05       		.uleb128 0x5
 4492 00b1 04       		.byte	0x4
 4493 00b2 06       		.uleb128 0x6
 4494 00b3 04       		.byte	0x4
 4495 00b4 B8000000 		.4byte	0xb8
 4496 00b8 03       		.uleb128 0x3
 4497 00b9 01       		.byte	0x1
 4498 00ba 08       		.byte	0x8
 4499 00bb 3A100000 		.4byte	.LASF16
 4500 00bf 06       		.uleb128 0x6
 4501 00c0 04       		.byte	0x4
 4502 00c1 C5000000 		.4byte	0xc5
 4503 00c5 07       		.uleb128 0x7
 4504 00c6 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 179


 4505 00ca 02       		.uleb128 0x2
 4506 00cb 30120000 		.4byte	.LASF17
 4507 00cf 05       		.byte	0x5
 4508 00d0 18       		.byte	0x18
 4509 00d1 53000000 		.4byte	0x53
 4510 00d5 02       		.uleb128 0x2
 4511 00d6 A7180000 		.4byte	.LASF18
 4512 00da 05       		.byte	0x5
 4513 00db 24       		.byte	0x24
 4514 00dc 6C000000 		.4byte	0x6c
 4515 00e0 02       		.uleb128 0x2
 4516 00e1 A91E0000 		.4byte	.LASF19
 4517 00e5 05       		.byte	0x5
 4518 00e6 2C       		.byte	0x2c
 4519 00e7 7E000000 		.4byte	0x7e
 4520 00eb 02       		.uleb128 0x2
 4521 00ec 41030000 		.4byte	.LASF20
 4522 00f0 05       		.byte	0x5
 4523 00f1 30       		.byte	0x30
 4524 00f2 90000000 		.4byte	0x90
 4525 00f6 08       		.uleb128 0x8
 4526 00f7 EB000000 		.4byte	0xeb
 4527 00fb 08       		.uleb128 0x8
 4528 00fc CA000000 		.4byte	0xca
 4529 0100 03       		.uleb128 0x3
 4530 0101 04       		.byte	0x4
 4531 0102 04       		.byte	0x4
 4532 0103 951E0000 		.4byte	.LASF21
 4533 0107 03       		.uleb128 0x3
 4534 0108 08       		.byte	0x8
 4535 0109 04       		.byte	0x4
 4536 010a DA0C0000 		.4byte	.LASF22
 4537 010e 06       		.uleb128 0x6
 4538 010f 04       		.byte	0x4
 4539 0110 EB000000 		.4byte	0xeb
 4540 0114 03       		.uleb128 0x3
 4541 0115 01       		.byte	0x1
 4542 0116 02       		.byte	0x2
 4543 0117 18190000 		.4byte	.LASF23
 4544 011b 06       		.uleb128 0x6
 4545 011c 04       		.byte	0x4
 4546 011d 21010000 		.4byte	0x121
 4547 0121 09       		.uleb128 0x9
 4548 0122 2C010000 		.4byte	0x12c
 4549 0126 0A       		.uleb128 0xa
 4550 0127 EB000000 		.4byte	0xeb
 4551 012b 00       		.byte	0
 4552 012c 0B       		.uleb128 0xb
 4553 012d 7A000000 		.4byte	.LASF24
 4554 0131 06       		.byte	0x6
 4555 0132 BF01     		.2byte	0x1bf
 4556 0134 1B010000 		.4byte	0x11b
 4557 0138 0C       		.uleb128 0xc
 4558 0139 E71D0000 		.4byte	.LASF220
 4559 013d 24       		.byte	0x24
 4560 013e 06       		.byte	0x6
 4561 013f 4102     		.2byte	0x241
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 180


 4562 0141 BB010000 		.4byte	0x1bb
 4563 0145 0D       		.uleb128 0xd
 4564 0146 38120000 		.4byte	.LASF25
 4565 014a 06       		.byte	0x6
 4566 014b 4402     		.2byte	0x244
 4567 014d F6000000 		.4byte	0xf6
 4568 0151 00       		.byte	0
 4569 0152 0D       		.uleb128 0xd
 4570 0153 2D0C0000 		.4byte	.LASF26
 4571 0157 06       		.byte	0x6
 4572 0158 4602     		.2byte	0x246
 4573 015a B0000000 		.4byte	0xb0
 4574 015e 04       		.byte	0x4
 4575 015f 0D       		.uleb128 0xd
 4576 0160 86240000 		.4byte	.LASF27
 4577 0164 06       		.byte	0x6
 4578 0165 4702     		.2byte	0x247
 4579 0167 EB000000 		.4byte	0xeb
 4580 016b 08       		.byte	0x8
 4581 016c 0D       		.uleb128 0xd
 4582 016d 8E110000 		.4byte	.LASF28
 4583 0171 06       		.byte	0x6
 4584 0172 4802     		.2byte	0x248
 4585 0174 F6000000 		.4byte	0xf6
 4586 0178 0C       		.byte	0xc
 4587 0179 0D       		.uleb128 0xd
 4588 017a 1B180000 		.4byte	.LASF29
 4589 017e 06       		.byte	0x6
 4590 017f 4A02     		.2byte	0x24a
 4591 0181 B0000000 		.4byte	0xb0
 4592 0185 10       		.byte	0x10
 4593 0186 0D       		.uleb128 0xd
 4594 0187 6E160000 		.4byte	.LASF30
 4595 018b 06       		.byte	0x6
 4596 018c 4B02     		.2byte	0x24b
 4597 018e EB000000 		.4byte	0xeb
 4598 0192 14       		.byte	0x14
 4599 0193 0D       		.uleb128 0xd
 4600 0194 87030000 		.4byte	.LASF31
 4601 0198 06       		.byte	0x6
 4602 0199 4C02     		.2byte	0x24c
 4603 019b F6000000 		.4byte	0xf6
 4604 019f 18       		.byte	0x18
 4605 01a0 0D       		.uleb128 0xd
 4606 01a1 C60C0000 		.4byte	.LASF32
 4607 01a5 06       		.byte	0x6
 4608 01a6 5202     		.2byte	0x252
 4609 01a8 2C010000 		.4byte	0x12c
 4610 01ac 1C       		.byte	0x1c
 4611 01ad 0D       		.uleb128 0xd
 4612 01ae 0F120000 		.4byte	.LASF33
 4613 01b2 06       		.byte	0x6
 4614 01b3 5502     		.2byte	0x255
 4615 01b5 EB000000 		.4byte	0xeb
 4616 01b9 20       		.byte	0x20
 4617 01ba 00       		.byte	0
 4618 01bb 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 181


 4619 01bc C8150000 		.4byte	.LASF34
 4620 01c0 06       		.byte	0x6
 4621 01c1 5802     		.2byte	0x258
 4622 01c3 38010000 		.4byte	0x138
 4623 01c7 0E       		.uleb128 0xe
 4624 01c8 01       		.byte	0x1
 4625 01c9 5E000000 		.4byte	0x5e
 4626 01cd 07       		.byte	0x7
 4627 01ce 0504     		.2byte	0x405
 4628 01d0 ED010000 		.4byte	0x1ed
 4629 01d4 0F       		.uleb128 0xf
 4630 01d5 17070000 		.4byte	.LASF35
 4631 01d9 00       		.byte	0
 4632 01da 0F       		.uleb128 0xf
 4633 01db 140C0000 		.4byte	.LASF36
 4634 01df 01       		.byte	0x1
 4635 01e0 0F       		.uleb128 0xf
 4636 01e1 09100000 		.4byte	.LASF37
 4637 01e5 02       		.byte	0x2
 4638 01e6 0F       		.uleb128 0xf
 4639 01e7 56030000 		.4byte	.LASF38
 4640 01eb 03       		.byte	0x3
 4641 01ec 00       		.byte	0
 4642 01ed 0B       		.uleb128 0xb
 4643 01ee 4A230000 		.4byte	.LASF39
 4644 01f2 07       		.byte	0x7
 4645 01f3 0A04     		.2byte	0x40a
 4646 01f5 C7010000 		.4byte	0x1c7
 4647 01f9 10       		.uleb128 0x10
 4648 01fa 78       		.byte	0x78
 4649 01fb 07       		.byte	0x7
 4650 01fc F404     		.2byte	0x4f4
 4651 01fe C6020000 		.4byte	0x2c6
 4652 0202 0D       		.uleb128 0xd
 4653 0203 840B0000 		.4byte	.LASF40
 4654 0207 07       		.byte	0x7
 4655 0208 F604     		.2byte	0x4f6
 4656 020a EB000000 		.4byte	0xeb
 4657 020e 00       		.byte	0
 4658 020f 0D       		.uleb128 0xd
 4659 0210 081F0000 		.4byte	.LASF41
 4660 0214 07       		.byte	0x7
 4661 0215 F704     		.2byte	0x4f7
 4662 0217 EB000000 		.4byte	0xeb
 4663 021b 04       		.byte	0x4
 4664 021c 0D       		.uleb128 0xd
 4665 021d 79020000 		.4byte	.LASF42
 4666 0221 07       		.byte	0x7
 4667 0222 F804     		.2byte	0x4f8
 4668 0224 EB000000 		.4byte	0xeb
 4669 0228 08       		.byte	0x8
 4670 0229 0D       		.uleb128 0xd
 4671 022a B90C0000 		.4byte	.LASF43
 4672 022e 07       		.byte	0x7
 4673 022f F904     		.2byte	0x4f9
 4674 0231 EB000000 		.4byte	0xeb
 4675 0235 0C       		.byte	0xc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 182


 4676 0236 0D       		.uleb128 0xd
 4677 0237 C00A0000 		.4byte	.LASF44
 4678 023b 07       		.byte	0x7
 4679 023c FA04     		.2byte	0x4fa
 4680 023e EB000000 		.4byte	0xeb
 4681 0242 10       		.byte	0x10
 4682 0243 0D       		.uleb128 0xd
 4683 0244 3B130000 		.4byte	.LASF45
 4684 0248 07       		.byte	0x7
 4685 0249 FB04     		.2byte	0x4fb
 4686 024b ED010000 		.4byte	0x1ed
 4687 024f 14       		.byte	0x14
 4688 0250 0D       		.uleb128 0xd
 4689 0251 6E100000 		.4byte	.LASF46
 4690 0255 07       		.byte	0x7
 4691 0256 FC04     		.2byte	0x4fc
 4692 0258 EB000000 		.4byte	0xeb
 4693 025c 18       		.byte	0x18
 4694 025d 0D       		.uleb128 0xd
 4695 025e 11160000 		.4byte	.LASF47
 4696 0262 07       		.byte	0x7
 4697 0263 FD04     		.2byte	0x4fd
 4698 0265 C6020000 		.4byte	0x2c6
 4699 0269 1C       		.byte	0x1c
 4700 026a 0D       		.uleb128 0xd
 4701 026b 6B240000 		.4byte	.LASF48
 4702 026f 07       		.byte	0x7
 4703 0270 FE04     		.2byte	0x4fe
 4704 0272 EB000000 		.4byte	0xeb
 4705 0276 5C       		.byte	0x5c
 4706 0277 0D       		.uleb128 0xd
 4707 0278 95050000 		.4byte	.LASF49
 4708 027c 07       		.byte	0x7
 4709 027d FF04     		.2byte	0x4ff
 4710 027f EB000000 		.4byte	0xeb
 4711 0283 60       		.byte	0x60
 4712 0284 0D       		.uleb128 0xd
 4713 0285 3C230000 		.4byte	.LASF50
 4714 0289 07       		.byte	0x7
 4715 028a 0005     		.2byte	0x500
 4716 028c EB000000 		.4byte	0xeb
 4717 0290 64       		.byte	0x64
 4718 0291 0D       		.uleb128 0xd
 4719 0292 49190000 		.4byte	.LASF51
 4720 0296 07       		.byte	0x7
 4721 0297 0105     		.2byte	0x501
 4722 0299 EB000000 		.4byte	0xeb
 4723 029d 68       		.byte	0x68
 4724 029e 0D       		.uleb128 0xd
 4725 029f E4120000 		.4byte	.LASF52
 4726 02a3 07       		.byte	0x7
 4727 02a4 0205     		.2byte	0x502
 4728 02a6 EB000000 		.4byte	0xeb
 4729 02aa 6C       		.byte	0x6c
 4730 02ab 0D       		.uleb128 0xd
 4731 02ac FA220000 		.4byte	.LASF53
 4732 02b0 07       		.byte	0x7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 183


 4733 02b1 0305     		.2byte	0x503
 4734 02b3 14010000 		.4byte	0x114
 4735 02b7 70       		.byte	0x70
 4736 02b8 0D       		.uleb128 0xd
 4737 02b9 6D0F0000 		.4byte	.LASF54
 4738 02bd 07       		.byte	0x7
 4739 02be 0405     		.2byte	0x504
 4740 02c0 EB000000 		.4byte	0xeb
 4741 02c4 74       		.byte	0x74
 4742 02c5 00       		.byte	0
 4743 02c6 11       		.uleb128 0x11
 4744 02c7 EB000000 		.4byte	0xeb
 4745 02cb D6020000 		.4byte	0x2d6
 4746 02cf 12       		.uleb128 0x12
 4747 02d0 A9000000 		.4byte	0xa9
 4748 02d4 0F       		.byte	0xf
 4749 02d5 00       		.byte	0
 4750 02d6 0B       		.uleb128 0xb
 4751 02d7 6A0B0000 		.4byte	.LASF55
 4752 02db 07       		.byte	0x7
 4753 02dc 0505     		.2byte	0x505
 4754 02de F9010000 		.4byte	0x1f9
 4755 02e2 0E       		.uleb128 0xe
 4756 02e3 02       		.byte	0x2
 4757 02e4 77000000 		.4byte	0x77
 4758 02e8 08       		.byte	0x8
 4759 02e9 3F01     		.2byte	0x13f
 4760 02eb 14060000 		.4byte	0x614
 4761 02ef 0F       		.uleb128 0xf
 4762 02f0 30090000 		.4byte	.LASF56
 4763 02f4 00       		.byte	0
 4764 02f5 13       		.uleb128 0x13
 4765 02f6 7B080000 		.4byte	.LASF57
 4766 02fa 0010     		.2byte	0x1000
 4767 02fc 13       		.uleb128 0x13
 4768 02fd 2A1E0000 		.4byte	.LASF58
 4769 0301 0110     		.2byte	0x1001
 4770 0303 13       		.uleb128 0x13
 4771 0304 62090000 		.4byte	.LASF59
 4772 0308 0210     		.2byte	0x1002
 4773 030a 13       		.uleb128 0x13
 4774 030b 530F0000 		.4byte	.LASF60
 4775 030f 0310     		.2byte	0x1003
 4776 0311 13       		.uleb128 0x13
 4777 0312 2C010000 		.4byte	.LASF61
 4778 0316 0410     		.2byte	0x1004
 4779 0318 13       		.uleb128 0x13
 4780 0319 C6030000 		.4byte	.LASF62
 4781 031d 0510     		.2byte	0x1005
 4782 031f 13       		.uleb128 0x13
 4783 0320 FE180000 		.4byte	.LASF63
 4784 0324 0020     		.2byte	0x2000
 4785 0326 13       		.uleb128 0x13
 4786 0327 8F1C0000 		.4byte	.LASF64
 4787 032b 0120     		.2byte	0x2001
 4788 032d 13       		.uleb128 0x13
 4789 032e 6F180000 		.4byte	.LASF65
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 184


 4790 0332 0220     		.2byte	0x2002
 4791 0334 13       		.uleb128 0x13
 4792 0335 0C0F0000 		.4byte	.LASF66
 4793 0339 0320     		.2byte	0x2003
 4794 033b 13       		.uleb128 0x13
 4795 033c 68110000 		.4byte	.LASF67
 4796 0340 0420     		.2byte	0x2004
 4797 0342 13       		.uleb128 0x13
 4798 0343 44140000 		.4byte	.LASF68
 4799 0347 0520     		.2byte	0x2005
 4800 0349 13       		.uleb128 0x13
 4801 034a 3F0E0000 		.4byte	.LASF69
 4802 034e 0620     		.2byte	0x2006
 4803 0350 13       		.uleb128 0x13
 4804 0351 461D0000 		.4byte	.LASF70
 4805 0355 0720     		.2byte	0x2007
 4806 0357 13       		.uleb128 0x13
 4807 0358 000A0000 		.4byte	.LASF71
 4808 035c 0820     		.2byte	0x2008
 4809 035e 13       		.uleb128 0x13
 4810 035f F3150000 		.4byte	.LASF72
 4811 0363 0920     		.2byte	0x2009
 4812 0365 13       		.uleb128 0x13
 4813 0366 00090000 		.4byte	.LASF73
 4814 036a 0A20     		.2byte	0x200a
 4815 036c 13       		.uleb128 0x13
 4816 036d 96090000 		.4byte	.LASF74
 4817 0371 0B20     		.2byte	0x200b
 4818 0373 13       		.uleb128 0x13
 4819 0374 BC180000 		.4byte	.LASF75
 4820 0378 0C20     		.2byte	0x200c
 4821 037a 13       		.uleb128 0x13
 4822 037b 49080000 		.4byte	.LASF76
 4823 037f 0D20     		.2byte	0x200d
 4824 0381 13       		.uleb128 0x13
 4825 0382 43110000 		.4byte	.LASF77
 4826 0386 0E20     		.2byte	0x200e
 4827 0388 13       		.uleb128 0x13
 4828 0389 B1190000 		.4byte	.LASF78
 4829 038d 0F20     		.2byte	0x200f
 4830 038f 13       		.uleb128 0x13
 4831 0390 07140000 		.4byte	.LASF79
 4832 0394 1020     		.2byte	0x2010
 4833 0396 13       		.uleb128 0x13
 4834 0397 41160000 		.4byte	.LASF80
 4835 039b 1120     		.2byte	0x2011
 4836 039d 13       		.uleb128 0x13
 4837 039e FE1F0000 		.4byte	.LASF81
 4838 03a2 1220     		.2byte	0x2012
 4839 03a4 13       		.uleb128 0x13
 4840 03a5 0B170000 		.4byte	.LASF82
 4841 03a9 1320     		.2byte	0x2013
 4842 03ab 13       		.uleb128 0x13
 4843 03ac C0120000 		.4byte	.LASF83
 4844 03b0 1420     		.2byte	0x2014
 4845 03b2 13       		.uleb128 0x13
 4846 03b3 E2050000 		.4byte	.LASF84
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 185


 4847 03b7 1520     		.2byte	0x2015
 4848 03b9 13       		.uleb128 0x13
 4849 03ba DD230000 		.4byte	.LASF85
 4850 03be 1620     		.2byte	0x2016
 4851 03c0 13       		.uleb128 0x13
 4852 03c1 79040000 		.4byte	.LASF86
 4853 03c5 1720     		.2byte	0x2017
 4854 03c7 13       		.uleb128 0x13
 4855 03c8 8F080000 		.4byte	.LASF87
 4856 03cc 0030     		.2byte	0x3000
 4857 03ce 13       		.uleb128 0x13
 4858 03cf 530C0000 		.4byte	.LASF88
 4859 03d3 0130     		.2byte	0x3001
 4860 03d5 13       		.uleb128 0x13
 4861 03d6 460B0000 		.4byte	.LASF89
 4862 03da 0230     		.2byte	0x3002
 4863 03dc 13       		.uleb128 0x13
 4864 03dd 841D0000 		.4byte	.LASF90
 4865 03e1 0330     		.2byte	0x3003
 4866 03e3 13       		.uleb128 0x13
 4867 03e4 7E0A0000 		.4byte	.LASF91
 4868 03e8 0430     		.2byte	0x3004
 4869 03ea 13       		.uleb128 0x13
 4870 03eb C81D0000 		.4byte	.LASF92
 4871 03ef 0530     		.2byte	0x3005
 4872 03f1 13       		.uleb128 0x13
 4873 03f2 E5010000 		.4byte	.LASF93
 4874 03f6 0630     		.2byte	0x3006
 4875 03f8 13       		.uleb128 0x13
 4876 03f9 9F220000 		.4byte	.LASF94
 4877 03fd 0730     		.2byte	0x3007
 4878 03ff 13       		.uleb128 0x13
 4879 0400 2B150000 		.4byte	.LASF95
 4880 0404 0830     		.2byte	0x3008
 4881 0406 13       		.uleb128 0x13
 4882 0407 B50D0000 		.4byte	.LASF96
 4883 040b 0930     		.2byte	0x3009
 4884 040d 13       		.uleb128 0x13
 4885 040e A81D0000 		.4byte	.LASF97
 4886 0412 0A30     		.2byte	0x300a
 4887 0414 13       		.uleb128 0x13
 4888 0415 3F100000 		.4byte	.LASF98
 4889 0419 0B30     		.2byte	0x300b
 4890 041b 13       		.uleb128 0x13
 4891 041c 4B010000 		.4byte	.LASF99
 4892 0420 0C30     		.2byte	0x300c
 4893 0422 13       		.uleb128 0x13
 4894 0423 3F120000 		.4byte	.LASF100
 4895 0427 1130     		.2byte	0x3011
 4896 0429 13       		.uleb128 0x13
 4897 042a 061A0000 		.4byte	.LASF101
 4898 042e 1230     		.2byte	0x3012
 4899 0430 13       		.uleb128 0x13
 4900 0431 B11E0000 		.4byte	.LASF102
 4901 0435 1330     		.2byte	0x3013
 4902 0437 13       		.uleb128 0x13
 4903 0438 CC1C0000 		.4byte	.LASF103
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 186


 4904 043c 1430     		.2byte	0x3014
 4905 043e 13       		.uleb128 0x13
 4906 043f 391B0000 		.4byte	.LASF104
 4907 0443 1530     		.2byte	0x3015
 4908 0445 13       		.uleb128 0x13
 4909 0446 7D130000 		.4byte	.LASF105
 4910 044a 1630     		.2byte	0x3016
 4911 044c 13       		.uleb128 0x13
 4912 044d 5B130000 		.4byte	.LASF106
 4913 0451 1730     		.2byte	0x3017
 4914 0453 13       		.uleb128 0x13
 4915 0454 890F0000 		.4byte	.LASF107
 4916 0458 1830     		.2byte	0x3018
 4917 045a 13       		.uleb128 0x13
 4918 045b 27170000 		.4byte	.LASF108
 4919 045f 0040     		.2byte	0x4000
 4920 0461 13       		.uleb128 0x13
 4921 0462 1F040000 		.4byte	.LASF109
 4922 0466 0140     		.2byte	0x4001
 4923 0468 13       		.uleb128 0x13
 4924 0469 E0210000 		.4byte	.LASF110
 4925 046d 0240     		.2byte	0x4002
 4926 046f 13       		.uleb128 0x13
 4927 0470 AA040000 		.4byte	.LASF111
 4928 0474 0340     		.2byte	0x4003
 4929 0476 13       		.uleb128 0x13
 4930 0477 A3120000 		.4byte	.LASF112
 4931 047b 0440     		.2byte	0x4004
 4932 047d 13       		.uleb128 0x13
 4933 047e AA230000 		.4byte	.LASF113
 4934 0482 0540     		.2byte	0x4005
 4935 0484 13       		.uleb128 0x13
 4936 0485 B7000000 		.4byte	.LASF114
 4937 0489 0640     		.2byte	0x4006
 4938 048b 13       		.uleb128 0x13
 4939 048c 330C0000 		.4byte	.LASF115
 4940 0490 0740     		.2byte	0x4007
 4941 0492 13       		.uleb128 0x13
 4942 0493 E81A0000 		.4byte	.LASF116
 4943 0497 0840     		.2byte	0x4008
 4944 0499 13       		.uleb128 0x13
 4945 049a 280B0000 		.4byte	.LASF117
 4946 049e 0940     		.2byte	0x4009
 4947 04a0 13       		.uleb128 0x13
 4948 04a1 99240000 		.4byte	.LASF118
 4949 04a5 0A40     		.2byte	0x400a
 4950 04a7 13       		.uleb128 0x13
 4951 04a8 DF100000 		.4byte	.LASF119
 4952 04ac 0B40     		.2byte	0x400b
 4953 04ae 13       		.uleb128 0x13
 4954 04af 1C160000 		.4byte	.LASF120
 4955 04b3 0C40     		.2byte	0x400c
 4956 04b5 13       		.uleb128 0x13
 4957 04b6 030D0000 		.4byte	.LASF121
 4958 04ba 0D40     		.2byte	0x400d
 4959 04bc 13       		.uleb128 0x13
 4960 04bd 8C170000 		.4byte	.LASF122
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 187


 4961 04c1 0E40     		.2byte	0x400e
 4962 04c3 13       		.uleb128 0x13
 4963 04c4 C30B0000 		.4byte	.LASF123
 4964 04c8 0F40     		.2byte	0x400f
 4965 04ca 13       		.uleb128 0x13
 4966 04cb 73120000 		.4byte	.LASF124
 4967 04cf 1040     		.2byte	0x4010
 4968 04d1 13       		.uleb128 0x13
 4969 04d2 57200000 		.4byte	.LASF125
 4970 04d6 1140     		.2byte	0x4011
 4971 04d8 13       		.uleb128 0x13
 4972 04d9 040E0000 		.4byte	.LASF126
 4973 04dd 1240     		.2byte	0x4012
 4974 04df 13       		.uleb128 0x13
 4975 04e0 B61B0000 		.4byte	.LASF127
 4976 04e4 1340     		.2byte	0x4013
 4977 04e6 13       		.uleb128 0x13
 4978 04e7 6B170000 		.4byte	.LASF128
 4979 04eb 1440     		.2byte	0x4014
 4980 04ed 13       		.uleb128 0x13
 4981 04ee F0060000 		.4byte	.LASF129
 4982 04f2 1540     		.2byte	0x4015
 4983 04f4 13       		.uleb128 0x13
 4984 04f5 35020000 		.4byte	.LASF130
 4985 04f9 1640     		.2byte	0x4016
 4986 04fb 13       		.uleb128 0x13
 4987 04fc 1E190000 		.4byte	.LASF131
 4988 0500 1740     		.2byte	0x4017
 4989 0502 13       		.uleb128 0x13
 4990 0503 EE130000 		.4byte	.LASF132
 4991 0507 1840     		.2byte	0x4018
 4992 0509 13       		.uleb128 0x13
 4993 050a 601A0000 		.4byte	.LASF133
 4994 050e 1940     		.2byte	0x4019
 4995 0510 13       		.uleb128 0x13
 4996 0511 6E190000 		.4byte	.LASF134
 4997 0515 0050     		.2byte	0x5000
 4998 0517 13       		.uleb128 0x13
 4999 0518 4E050000 		.4byte	.LASF135
 5000 051c 0150     		.2byte	0x5001
 5001 051e 13       		.uleb128 0x13
 5002 051f 2E210000 		.4byte	.LASF136
 5003 0523 0250     		.2byte	0x5002
 5004 0525 13       		.uleb128 0x13
 5005 0526 9E210000 		.4byte	.LASF137
 5006 052a 0350     		.2byte	0x5003
 5007 052c 13       		.uleb128 0x13
 5008 052d 7C070000 		.4byte	.LASF138
 5009 0531 0450     		.2byte	0x5004
 5010 0533 13       		.uleb128 0x13
 5011 0534 89190000 		.4byte	.LASF139
 5012 0538 0550     		.2byte	0x5005
 5013 053a 13       		.uleb128 0x13
 5014 053b 0B110000 		.4byte	.LASF140
 5015 053f 0650     		.2byte	0x5006
 5016 0541 13       		.uleb128 0x13
 5017 0542 5A040000 		.4byte	.LASF141
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 188


 5018 0546 0750     		.2byte	0x5007
 5019 0548 13       		.uleb128 0x13
 5020 0549 470D0000 		.4byte	.LASF142
 5021 054d 0850     		.2byte	0x5008
 5022 054f 13       		.uleb128 0x13
 5023 0550 E3070000 		.4byte	.LASF143
 5024 0554 0950     		.2byte	0x5009
 5025 0556 13       		.uleb128 0x13
 5026 0557 98000000 		.4byte	.LASF144
 5027 055b 0A50     		.2byte	0x500a
 5028 055d 13       		.uleb128 0x13
 5029 055e 2E050000 		.4byte	.LASF145
 5030 0562 0B50     		.2byte	0x500b
 5031 0564 13       		.uleb128 0x13
 5032 0565 EB190000 		.4byte	.LASF146
 5033 0569 0C50     		.2byte	0x500c
 5034 056b 13       		.uleb128 0x13
 5035 056c 6A0E0000 		.4byte	.LASF147
 5036 0570 0D50     		.2byte	0x500d
 5037 0572 13       		.uleb128 0x13
 5038 0573 80220000 		.4byte	.LASF148
 5039 0577 0E50     		.2byte	0x500e
 5040 0579 13       		.uleb128 0x13
 5041 057a 920C0000 		.4byte	.LASF149
 5042 057e 0F50     		.2byte	0x500f
 5043 0580 13       		.uleb128 0x13
 5044 0581 6F1C0000 		.4byte	.LASF150
 5045 0585 1050     		.2byte	0x5010
 5046 0587 13       		.uleb128 0x13
 5047 0588 5F210000 		.4byte	.LASF151
 5048 058c 1150     		.2byte	0x5011
 5049 058e 13       		.uleb128 0x13
 5050 058f 6F010000 		.4byte	.LASF152
 5051 0593 1250     		.2byte	0x5012
 5052 0595 13       		.uleb128 0x13
 5053 0596 DE080000 		.4byte	.LASF153
 5054 059a 1350     		.2byte	0x5013
 5055 059c 13       		.uleb128 0x13
 5056 059d 9B070000 		.4byte	.LASF154
 5057 05a1 1450     		.2byte	0x5014
 5058 05a3 13       		.uleb128 0x13
 5059 05a4 DB090000 		.4byte	.LASF155
 5060 05a8 1550     		.2byte	0x5015
 5061 05aa 13       		.uleb128 0x13
 5062 05ab BD210000 		.4byte	.LASF156
 5063 05af 1650     		.2byte	0x5016
 5064 05b1 13       		.uleb128 0x13
 5065 05b2 FE050000 		.4byte	.LASF157
 5066 05b6 1750     		.2byte	0x5017
 5067 05b8 13       		.uleb128 0x13
 5068 05b9 CC1F0000 		.4byte	.LASF158
 5069 05bd 1850     		.2byte	0x5018
 5070 05bf 13       		.uleb128 0x13
 5071 05c0 D3220000 		.4byte	.LASF159
 5072 05c4 0060     		.2byte	0x6000
 5073 05c6 13       		.uleb128 0x13
 5074 05c7 88200000 		.4byte	.LASF160
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 189


 5075 05cb 0160     		.2byte	0x6001
 5076 05cd 13       		.uleb128 0x13
 5077 05ce EF0E0000 		.4byte	.LASF161
 5078 05d2 0260     		.2byte	0x6002
 5079 05d4 13       		.uleb128 0x13
 5080 05d5 4C170000 		.4byte	.LASF162
 5081 05d9 0360     		.2byte	0x6003
 5082 05db 13       		.uleb128 0x13
 5083 05dc AE130000 		.4byte	.LASF163
 5084 05e0 0460     		.2byte	0x6004
 5085 05e2 13       		.uleb128 0x13
 5086 05e3 1C1C0000 		.4byte	.LASF164
 5087 05e7 0560     		.2byte	0x6005
 5088 05e9 13       		.uleb128 0x13
 5089 05ea 6F0D0000 		.4byte	.LASF165
 5090 05ee 0660     		.2byte	0x6006
 5091 05f0 13       		.uleb128 0x13
 5092 05f1 5A000000 		.4byte	.LASF166
 5093 05f5 0760     		.2byte	0x6007
 5094 05f7 13       		.uleb128 0x13
 5095 05f8 D8020000 		.4byte	.LASF167
 5096 05fc 0860     		.2byte	0x6008
 5097 05fe 13       		.uleb128 0x13
 5098 05ff 08010000 		.4byte	.LASF168
 5099 0603 0960     		.2byte	0x6009
 5100 0605 13       		.uleb128 0x13
 5101 0606 85160000 		.4byte	.LASF169
 5102 060a 0A60     		.2byte	0x600a
 5103 060c 13       		.uleb128 0x13
 5104 060d 2D0D0000 		.4byte	.LASF170
 5105 0611 FFFF     		.2byte	0xffff
 5106 0613 00       		.byte	0
 5107 0614 10       		.uleb128 0x10
 5108 0615 02       		.byte	0x2
 5109 0616 09       		.byte	0x9
 5110 0617 5B01     		.2byte	0x15b
 5111 0619 38060000 		.4byte	0x638
 5112 061d 0D       		.uleb128 0xd
 5113 061e 05220000 		.4byte	.LASF171
 5114 0622 09       		.byte	0x9
 5115 0623 6501     		.2byte	0x165
 5116 0625 CA000000 		.4byte	0xca
 5117 0629 00       		.byte	0
 5118 062a 0D       		.uleb128 0xd
 5119 062b 7E0B0000 		.4byte	.LASF172
 5120 062f 09       		.byte	0x9
 5121 0630 6901     		.2byte	0x169
 5122 0632 CA000000 		.4byte	0xca
 5123 0636 01       		.byte	0x1
 5124 0637 00       		.byte	0
 5125 0638 0B       		.uleb128 0xb
 5126 0639 291A0000 		.4byte	.LASF173
 5127 063d 09       		.byte	0x9
 5128 063e 6B01     		.2byte	0x16b
 5129 0640 14060000 		.4byte	0x614
 5130 0644 14       		.uleb128 0x14
 5131 0645 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 190


 5132 0646 5E000000 		.4byte	0x5e
 5133 064a 0A       		.byte	0xa
 5134 064b 7E       		.byte	0x7e
 5135 064c 69060000 		.4byte	0x669
 5136 0650 0F       		.uleb128 0xf
 5137 0651 6A050000 		.4byte	.LASF174
 5138 0655 00       		.byte	0
 5139 0656 0F       		.uleb128 0xf
 5140 0657 CB0A0000 		.4byte	.LASF175
 5141 065b 01       		.byte	0x1
 5142 065c 0F       		.uleb128 0xf
 5143 065d D80D0000 		.4byte	.LASF176
 5144 0661 02       		.byte	0x2
 5145 0662 0F       		.uleb128 0xf
 5146 0663 AF0F0000 		.4byte	.LASF177
 5147 0667 03       		.byte	0x3
 5148 0668 00       		.byte	0
 5149 0669 02       		.uleb128 0x2
 5150 066a 680A0000 		.4byte	.LASF178
 5151 066e 0A       		.byte	0xa
 5152 066f 83       		.byte	0x83
 5153 0670 44060000 		.4byte	0x644
 5154 0674 14       		.uleb128 0x14
 5155 0675 01       		.byte	0x1
 5156 0676 5E000000 		.4byte	0x5e
 5157 067a 0A       		.byte	0xa
 5158 067b 87       		.byte	0x87
 5159 067c B1060000 		.4byte	0x6b1
 5160 0680 0F       		.uleb128 0xf
 5161 0681 2A080000 		.4byte	.LASF179
 5162 0685 00       		.byte	0
 5163 0686 0F       		.uleb128 0xf
 5164 0687 2F070000 		.4byte	.LASF180
 5165 068b 01       		.byte	0x1
 5166 068c 0F       		.uleb128 0xf
 5167 068d E3170000 		.4byte	.LASF181
 5168 0691 02       		.byte	0x2
 5169 0692 0F       		.uleb128 0xf
 5170 0693 41240000 		.4byte	.LASF182
 5171 0697 03       		.byte	0x3
 5172 0698 0F       		.uleb128 0xf
 5173 0699 990B0000 		.4byte	.LASF183
 5174 069d 04       		.byte	0x4
 5175 069e 0F       		.uleb128 0xf
 5176 069f DF0F0000 		.4byte	.LASF184
 5177 06a3 05       		.byte	0x5
 5178 06a4 0F       		.uleb128 0xf
 5179 06a5 B8170000 		.4byte	.LASF185
 5180 06a9 06       		.byte	0x6
 5181 06aa 0F       		.uleb128 0xf
 5182 06ab AA0E0000 		.4byte	.LASF186
 5183 06af 07       		.byte	0x7
 5184 06b0 00       		.byte	0
 5185 06b1 02       		.uleb128 0x2
 5186 06b2 43040000 		.4byte	.LASF187
 5187 06b6 0A       		.byte	0xa
 5188 06b7 90       		.byte	0x90
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 191


 5189 06b8 74060000 		.4byte	0x674
 5190 06bc 14       		.uleb128 0x14
 5191 06bd 01       		.byte	0x1
 5192 06be 5E000000 		.4byte	0x5e
 5193 06c2 0B       		.byte	0xb
 5194 06c3 29       		.byte	0x29
 5195 06c4 05070000 		.4byte	0x705
 5196 06c8 0F       		.uleb128 0xf
 5197 06c9 81150000 		.4byte	.LASF188
 5198 06cd 00       		.byte	0
 5199 06ce 0F       		.uleb128 0xf
 5200 06cf BA100000 		.4byte	.LASF189
 5201 06d3 01       		.byte	0x1
 5202 06d4 0F       		.uleb128 0xf
 5203 06d5 E9030000 		.4byte	.LASF190
 5204 06d9 02       		.byte	0x2
 5205 06da 0F       		.uleb128 0xf
 5206 06db BB1A0000 		.4byte	.LASF191
 5207 06df 03       		.byte	0x3
 5208 06e0 0F       		.uleb128 0xf
 5209 06e1 42180000 		.4byte	.LASF192
 5210 06e5 04       		.byte	0x4
 5211 06e6 0F       		.uleb128 0xf
 5212 06e7 00000000 		.4byte	.LASF193
 5213 06eb 05       		.byte	0x5
 5214 06ec 0F       		.uleb128 0xf
 5215 06ed 081D0000 		.4byte	.LASF194
 5216 06f1 06       		.byte	0x6
 5217 06f2 0F       		.uleb128 0xf
 5218 06f3 90030000 		.4byte	.LASF195
 5219 06f7 07       		.byte	0x7
 5220 06f8 0F       		.uleb128 0xf
 5221 06f9 720C0000 		.4byte	.LASF196
 5222 06fd 08       		.byte	0x8
 5223 06fe 0F       		.uleb128 0xf
 5224 06ff F2000000 		.4byte	.LASF197
 5225 0703 09       		.byte	0x9
 5226 0704 00       		.byte	0
 5227 0705 14       		.uleb128 0x14
 5228 0706 01       		.byte	0x1
 5229 0707 5E000000 		.4byte	0x5e
 5230 070b 0C       		.byte	0xc
 5231 070c 28       		.byte	0x28
 5232 070d 30070000 		.4byte	0x730
 5233 0711 0F       		.uleb128 0xf
 5234 0712 D6130000 		.4byte	.LASF198
 5235 0716 00       		.byte	0
 5236 0717 0F       		.uleb128 0xf
 5237 0718 35000000 		.4byte	.LASF199
 5238 071c 01       		.byte	0x1
 5239 071d 0F       		.uleb128 0xf
 5240 071e 40200000 		.4byte	.LASF200
 5241 0722 02       		.byte	0x2
 5242 0723 0F       		.uleb128 0xf
 5243 0724 FF170000 		.4byte	.LASF201
 5244 0728 03       		.byte	0x3
 5245 0729 0F       		.uleb128 0xf
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 192


 5246 072a 300F0000 		.4byte	.LASF202
 5247 072e 04       		.byte	0x4
 5248 072f 00       		.byte	0
 5249 0730 14       		.uleb128 0x14
 5250 0731 01       		.byte	0x1
 5251 0732 5E000000 		.4byte	0x5e
 5252 0736 0C       		.byte	0xc
 5253 0737 32       		.byte	0x32
 5254 0738 4F070000 		.4byte	0x74f
 5255 073c 0F       		.uleb128 0xf
 5256 073d 741D0000 		.4byte	.LASF203
 5257 0741 00       		.byte	0
 5258 0742 0F       		.uleb128 0xf
 5259 0743 131E0000 		.4byte	.LASF204
 5260 0747 01       		.byte	0x1
 5261 0748 0F       		.uleb128 0xf
 5262 0749 861F0000 		.4byte	.LASF205
 5263 074d 02       		.byte	0x2
 5264 074e 00       		.byte	0
 5265 074f 0E       		.uleb128 0xe
 5266 0750 01       		.byte	0x1
 5267 0751 5E000000 		.4byte	0x5e
 5268 0755 0D       		.byte	0xd
 5269 0756 B108     		.2byte	0x8b1
 5270 0758 6F070000 		.4byte	0x76f
 5271 075c 0F       		.uleb128 0xf
 5272 075d CF0F0000 		.4byte	.LASF206
 5273 0761 00       		.byte	0
 5274 0762 0F       		.uleb128 0xf
 5275 0763 3D1E0000 		.4byte	.LASF207
 5276 0767 01       		.byte	0x1
 5277 0768 0F       		.uleb128 0xf
 5278 0769 E0000000 		.4byte	.LASF208
 5279 076d 02       		.byte	0x2
 5280 076e 00       		.byte	0
 5281 076f 15       		.uleb128 0x15
 5282 0770 14       		.byte	0x14
 5283 0771 0E       		.byte	0xe
 5284 0772 3B       		.byte	0x3b
 5285 0773 B4070000 		.4byte	0x7b4
 5286 0777 16       		.uleb128 0x16
 5287 0778 37040000 		.4byte	.LASF209
 5288 077c 0E       		.byte	0xe
 5289 077d 3D       		.byte	0x3d
 5290 077e EB000000 		.4byte	0xeb
 5291 0782 00       		.byte	0
 5292 0783 16       		.uleb128 0x16
 5293 0784 B8090000 		.4byte	.LASF210
 5294 0788 0E       		.byte	0xe
 5295 0789 3E       		.byte	0x3e
 5296 078a EB000000 		.4byte	0xeb
 5297 078e 04       		.byte	0x4
 5298 078f 16       		.uleb128 0x16
 5299 0790 9E040000 		.4byte	.LASF211
 5300 0794 0E       		.byte	0xe
 5301 0795 3F       		.byte	0x3f
 5302 0796 B4070000 		.4byte	0x7b4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 193


 5303 079a 08       		.byte	0x8
 5304 079b 16       		.uleb128 0x16
 5305 079c C8220000 		.4byte	.LASF212
 5306 07a0 0E       		.byte	0xe
 5307 07a1 40       		.byte	0x40
 5308 07a2 EB000000 		.4byte	0xeb
 5309 07a6 0C       		.byte	0xc
 5310 07a7 16       		.uleb128 0x16
 5311 07a8 E0200000 		.4byte	.LASF213
 5312 07ac 0E       		.byte	0xe
 5313 07ad 45       		.byte	0x45
 5314 07ae EB000000 		.4byte	0xeb
 5315 07b2 10       		.byte	0x10
 5316 07b3 00       		.byte	0
 5317 07b4 06       		.uleb128 0x6
 5318 07b5 04       		.byte	0x4
 5319 07b6 BA070000 		.4byte	0x7ba
 5320 07ba 07       		.uleb128 0x7
 5321 07bb D6020000 		.4byte	0x2d6
 5322 07bf 02       		.uleb128 0x2
 5323 07c0 CE160000 		.4byte	.LASF214
 5324 07c4 0E       		.byte	0xe
 5325 07c5 48       		.byte	0x48
 5326 07c6 6F070000 		.4byte	0x76f
 5327 07ca 02       		.uleb128 0x2
 5328 07cb 4E150000 		.4byte	.LASF215
 5329 07cf 0F       		.byte	0xf
 5330 07d0 4D       		.byte	0x4d
 5331 07d1 D5070000 		.4byte	0x7d5
 5332 07d5 06       		.uleb128 0x6
 5333 07d6 04       		.byte	0x4
 5334 07d7 DB070000 		.4byte	0x7db
 5335 07db 09       		.uleb128 0x9
 5336 07dc E6070000 		.4byte	0x7e6
 5337 07e0 0A       		.uleb128 0xa
 5338 07e1 B0000000 		.4byte	0xb0
 5339 07e5 00       		.byte	0
 5340 07e6 02       		.uleb128 0x2
 5341 07e7 4A030000 		.4byte	.LASF216
 5342 07eb 02       		.byte	0x2
 5343 07ec 61       		.byte	0x61
 5344 07ed EB000000 		.4byte	0xeb
 5345 07f1 02       		.uleb128 0x2
 5346 07f2 74140000 		.4byte	.LASF217
 5347 07f6 02       		.byte	0x2
 5348 07f7 62       		.byte	0x62
 5349 07f8 89000000 		.4byte	0x89
 5350 07fc 02       		.uleb128 0x2
 5351 07fd 1E080000 		.4byte	.LASF218
 5352 0801 02       		.byte	0x2
 5353 0802 63       		.byte	0x63
 5354 0803 9B000000 		.4byte	0x9b
 5355 0807 02       		.uleb128 0x2
 5356 0808 04120000 		.4byte	.LASF219
 5357 080c 02       		.byte	0x2
 5358 080d 69       		.byte	0x69
 5359 080e EB000000 		.4byte	0xeb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 194


 5360 0812 11       		.uleb128 0x11
 5361 0813 B0000000 		.4byte	0xb0
 5362 0817 22080000 		.4byte	0x822
 5363 081b 12       		.uleb128 0x12
 5364 081c A9000000 		.4byte	0xa9
 5365 0820 04       		.byte	0x4
 5366 0821 00       		.byte	0
 5367 0822 17       		.uleb128 0x17
 5368 0823 02040000 		.4byte	.LASF221
 5369 0827 14       		.byte	0x14
 5370 0828 10       		.byte	0x10
 5371 0829 B5       		.byte	0xb5
 5372 082a 6B080000 		.4byte	0x86b
 5373 082e 16       		.uleb128 0x16
 5374 082f 181B0000 		.4byte	.LASF222
 5375 0833 10       		.byte	0x10
 5376 0834 B8       		.byte	0xb8
 5377 0835 07080000 		.4byte	0x807
 5378 0839 00       		.byte	0
 5379 083a 16       		.uleb128 0x16
 5380 083b 5D150000 		.4byte	.LASF223
 5381 083f 10       		.byte	0x10
 5382 0840 B9       		.byte	0xb9
 5383 0841 6B080000 		.4byte	0x86b
 5384 0845 04       		.byte	0x4
 5385 0846 16       		.uleb128 0x16
 5386 0847 0E220000 		.4byte	.LASF224
 5387 084b 10       		.byte	0x10
 5388 084c BA       		.byte	0xba
 5389 084d 6B080000 		.4byte	0x86b
 5390 0851 08       		.byte	0x8
 5391 0852 16       		.uleb128 0x16
 5392 0853 D8200000 		.4byte	.LASF225
 5393 0857 10       		.byte	0x10
 5394 0858 BB       		.byte	0xbb
 5395 0859 B0000000 		.4byte	0xb0
 5396 085d 0C       		.byte	0xc
 5397 085e 16       		.uleb128 0x16
 5398 085f 831B0000 		.4byte	.LASF226
 5399 0863 10       		.byte	0x10
 5400 0864 BC       		.byte	0xbc
 5401 0865 B0000000 		.4byte	0xb0
 5402 0869 10       		.byte	0x10
 5403 086a 00       		.byte	0
 5404 086b 06       		.uleb128 0x6
 5405 086c 04       		.byte	0x4
 5406 086d 22080000 		.4byte	0x822
 5407 0871 02       		.uleb128 0x2
 5408 0872 63100000 		.4byte	.LASF227
 5409 0876 10       		.byte	0x10
 5410 0877 BF       		.byte	0xbf
 5411 0878 22080000 		.4byte	0x822
 5412 087c 17       		.uleb128 0x17
 5413 087d E10C0000 		.4byte	.LASF228
 5414 0881 0C       		.byte	0xc
 5415 0882 10       		.byte	0x10
 5416 0883 C1       		.byte	0xc1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 195


 5417 0884 AD080000 		.4byte	0x8ad
 5418 0888 16       		.uleb128 0x16
 5419 0889 181B0000 		.4byte	.LASF222
 5420 088d 10       		.byte	0x10
 5421 088e C4       		.byte	0xc4
 5422 088f 07080000 		.4byte	0x807
 5423 0893 00       		.byte	0
 5424 0894 16       		.uleb128 0x16
 5425 0895 5D150000 		.4byte	.LASF223
 5426 0899 10       		.byte	0x10
 5427 089a C5       		.byte	0xc5
 5428 089b 6B080000 		.4byte	0x86b
 5429 089f 04       		.byte	0x4
 5430 08a0 16       		.uleb128 0x16
 5431 08a1 0E220000 		.4byte	.LASF224
 5432 08a5 10       		.byte	0x10
 5433 08a6 C6       		.byte	0xc6
 5434 08a7 6B080000 		.4byte	0x86b
 5435 08ab 08       		.byte	0x8
 5436 08ac 00       		.byte	0
 5437 08ad 02       		.uleb128 0x2
 5438 08ae 97110000 		.4byte	.LASF229
 5439 08b2 10       		.byte	0x10
 5440 08b3 C8       		.byte	0xc8
 5441 08b4 7C080000 		.4byte	0x87c
 5442 08b8 17       		.uleb128 0x17
 5443 08b9 D1040000 		.4byte	.LASF230
 5444 08bd 14       		.byte	0x14
 5445 08be 10       		.byte	0x10
 5446 08bf CD       		.byte	0xcd
 5447 08c0 E9080000 		.4byte	0x8e9
 5448 08c4 16       		.uleb128 0x16
 5449 08c5 4A000000 		.4byte	.LASF231
 5450 08c9 10       		.byte	0x10
 5451 08ca D0       		.byte	0xd0
 5452 08cb FC070000 		.4byte	0x7fc
 5453 08cf 00       		.byte	0
 5454 08d0 16       		.uleb128 0x16
 5455 08d1 39030000 		.4byte	.LASF232
 5456 08d5 10       		.byte	0x10
 5457 08d6 D1       		.byte	0xd1
 5458 08d7 E9080000 		.4byte	0x8e9
 5459 08db 04       		.byte	0x4
 5460 08dc 16       		.uleb128 0x16
 5461 08dd 2D110000 		.4byte	.LASF233
 5462 08e1 10       		.byte	0x10
 5463 08e2 D2       		.byte	0xd2
 5464 08e3 AD080000 		.4byte	0x8ad
 5465 08e7 08       		.byte	0x8
 5466 08e8 00       		.byte	0
 5467 08e9 06       		.uleb128 0x6
 5468 08ea 04       		.byte	0x4
 5469 08eb 71080000 		.4byte	0x871
 5470 08ef 02       		.uleb128 0x2
 5471 08f0 B1170000 		.4byte	.LASF234
 5472 08f4 10       		.byte	0x10
 5473 08f5 D4       		.byte	0xd4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 196


 5474 08f6 B8080000 		.4byte	0x8b8
 5475 08fa 02       		.uleb128 0x2
 5476 08fb AA160000 		.4byte	.LASF235
 5477 08ff 11       		.byte	0x11
 5478 0900 67       		.byte	0x67
 5479 0901 B0000000 		.4byte	0xb0
 5480 0905 14       		.uleb128 0x14
 5481 0906 01       		.byte	0x1
 5482 0907 5E000000 		.4byte	0x5e
 5483 090b 11       		.byte	0x11
 5484 090c 7C       		.byte	0x7c
 5485 090d 30090000 		.4byte	0x930
 5486 0911 0F       		.uleb128 0xf
 5487 0912 CE020000 		.4byte	.LASF236
 5488 0916 00       		.byte	0
 5489 0917 0F       		.uleb128 0xf
 5490 0918 5A180000 		.4byte	.LASF237
 5491 091c 01       		.byte	0x1
 5492 091d 0F       		.uleb128 0xf
 5493 091e CF0C0000 		.4byte	.LASF238
 5494 0922 02       		.byte	0x2
 5495 0923 0F       		.uleb128 0xf
 5496 0924 C4090000 		.4byte	.LASF239
 5497 0928 03       		.byte	0x3
 5498 0929 0F       		.uleb128 0xf
 5499 092a 75100000 		.4byte	.LASF240
 5500 092e 04       		.byte	0x4
 5501 092f 00       		.byte	0
 5502 0930 02       		.uleb128 0x2
 5503 0931 840C0000 		.4byte	.LASF241
 5504 0935 11       		.byte	0x11
 5505 0936 82       		.byte	0x82
 5506 0937 05090000 		.4byte	0x905
 5507 093b 17       		.uleb128 0x17
 5508 093c 70030000 		.4byte	.LASF242
 5509 0940 08       		.byte	0x8
 5510 0941 11       		.byte	0x11
 5511 0942 87       		.byte	0x87
 5512 0943 60090000 		.4byte	0x960
 5513 0947 16       		.uleb128 0x16
 5514 0948 A1050000 		.4byte	.LASF243
 5515 094c 11       		.byte	0x11
 5516 094d 89       		.byte	0x89
 5517 094e F1070000 		.4byte	0x7f1
 5518 0952 00       		.byte	0
 5519 0953 16       		.uleb128 0x16
 5520 0954 0D150000 		.4byte	.LASF244
 5521 0958 11       		.byte	0x11
 5522 0959 8A       		.byte	0x8a
 5523 095a 07080000 		.4byte	0x807
 5524 095e 04       		.byte	0x4
 5525 095f 00       		.byte	0
 5526 0960 02       		.uleb128 0x2
 5527 0961 0A0C0000 		.4byte	.LASF245
 5528 0965 11       		.byte	0x11
 5529 0966 8B       		.byte	0x8b
 5530 0967 3B090000 		.4byte	0x93b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 197


 5531 096b 17       		.uleb128 0x17
 5532 096c 98180000 		.4byte	.LASF246
 5533 0970 0C       		.byte	0xc
 5534 0971 11       		.byte	0x11
 5535 0972 90       		.byte	0x90
 5536 0973 9C090000 		.4byte	0x99c
 5537 0977 16       		.uleb128 0x16
 5538 0978 131F0000 		.4byte	.LASF247
 5539 097c 11       		.byte	0x11
 5540 097d 92       		.byte	0x92
 5541 097e B0000000 		.4byte	0xb0
 5542 0982 00       		.byte	0
 5543 0983 16       		.uleb128 0x16
 5544 0984 64140000 		.4byte	.LASF248
 5545 0988 11       		.byte	0x11
 5546 0989 93       		.byte	0x93
 5547 098a EB000000 		.4byte	0xeb
 5548 098e 04       		.byte	0x4
 5549 098f 16       		.uleb128 0x16
 5550 0990 7A030000 		.4byte	.LASF249
 5551 0994 11       		.byte	0x11
 5552 0995 94       		.byte	0x94
 5553 0996 EB000000 		.4byte	0xeb
 5554 099a 08       		.byte	0x8
 5555 099b 00       		.byte	0
 5556 099c 02       		.uleb128 0x2
 5557 099d 04130000 		.4byte	.LASF250
 5558 09a1 11       		.byte	0x11
 5559 09a2 95       		.byte	0x95
 5560 09a3 6B090000 		.4byte	0x96b
 5561 09a7 07       		.uleb128 0x7
 5562 09a8 BF000000 		.4byte	0xbf
 5563 09ac 06       		.uleb128 0x6
 5564 09ad 04       		.byte	0x4
 5565 09ae E6070000 		.4byte	0x7e6
 5566 09b2 0C       		.uleb128 0xc
 5567 09b3 D1010000 		.4byte	.LASF251
 5568 09b7 60       		.byte	0x60
 5569 09b8 01       		.byte	0x1
 5570 09b9 2501     		.2byte	0x125
 5571 09bb 350A0000 		.4byte	0xa35
 5572 09bf 0D       		.uleb128 0xd
 5573 09c0 6D230000 		.4byte	.LASF252
 5574 09c4 01       		.byte	0x1
 5575 09c5 2701     		.2byte	0x127
 5576 09c7 350A0000 		.4byte	0xa35
 5577 09cb 00       		.byte	0
 5578 09cc 0D       		.uleb128 0xd
 5579 09cd D3050000 		.4byte	.LASF253
 5580 09d1 01       		.byte	0x1
 5581 09d2 2D01     		.2byte	0x12d
 5582 09d4 71080000 		.4byte	0x871
 5583 09d8 04       		.byte	0x4
 5584 09d9 0D       		.uleb128 0xd
 5585 09da 79200000 		.4byte	.LASF254
 5586 09de 01       		.byte	0x1
 5587 09df 2E01     		.2byte	0x12e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 198


 5588 09e1 71080000 		.4byte	0x871
 5589 09e5 18       		.byte	0x18
 5590 09e6 0D       		.uleb128 0xd
 5591 09e7 BA010000 		.4byte	.LASF255
 5592 09eb 01       		.byte	0x1
 5593 09ec 2F01     		.2byte	0x12f
 5594 09ee FC070000 		.4byte	0x7fc
 5595 09f2 2C       		.byte	0x2c
 5596 09f3 0D       		.uleb128 0xd
 5597 09f4 DE1B0000 		.4byte	.LASF256
 5598 09f8 01       		.byte	0x1
 5599 09f9 3001     		.2byte	0x130
 5600 09fb AC090000 		.4byte	0x9ac
 5601 09ff 30       		.byte	0x30
 5602 0a00 0D       		.uleb128 0xd
 5603 0a01 2F1F0000 		.4byte	.LASF257
 5604 0a05 01       		.byte	0x1
 5605 0a06 3101     		.2byte	0x131
 5606 0a08 400A0000 		.4byte	0xa40
 5607 0a0c 34       		.byte	0x34
 5608 0a0d 0D       		.uleb128 0xd
 5609 0a0e ED0B0000 		.4byte	.LASF258
 5610 0a12 01       		.byte	0x1
 5611 0a13 4A01     		.2byte	0x14a
 5612 0a15 12080000 		.4byte	0x812
 5613 0a19 44       		.byte	0x44
 5614 0a1a 0D       		.uleb128 0xd
 5615 0a1b 790F0000 		.4byte	.LASF259
 5616 0a1f 01       		.byte	0x1
 5617 0a20 5D01     		.2byte	0x15d
 5618 0a22 F6000000 		.4byte	0xf6
 5619 0a26 58       		.byte	0x58
 5620 0a27 0D       		.uleb128 0xd
 5621 0a28 9F100000 		.4byte	.LASF260
 5622 0a2c 01       		.byte	0x1
 5623 0a2d 5E01     		.2byte	0x15e
 5624 0a2f FB000000 		.4byte	0xfb
 5625 0a33 5C       		.byte	0x5c
 5626 0a34 00       		.byte	0
 5627 0a35 06       		.uleb128 0x6
 5628 0a36 04       		.byte	0x4
 5629 0a37 3B0A0000 		.4byte	0xa3b
 5630 0a3b 08       		.uleb128 0x8
 5631 0a3c E6070000 		.4byte	0x7e6
 5632 0a40 11       		.uleb128 0x11
 5633 0a41 B8000000 		.4byte	0xb8
 5634 0a45 500A0000 		.4byte	0xa50
 5635 0a49 12       		.uleb128 0x12
 5636 0a4a A9000000 		.4byte	0xa9
 5637 0a4e 0F       		.byte	0xf
 5638 0a4f 00       		.byte	0
 5639 0a50 0B       		.uleb128 0xb
 5640 0a51 FD070000 		.4byte	.LASF261
 5641 0a55 01       		.byte	0x1
 5642 0a56 6B01     		.2byte	0x16b
 5643 0a58 B2090000 		.4byte	0x9b2
 5644 0a5c 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 199


 5645 0a5d C5200000 		.4byte	.LASF262
 5646 0a61 01       		.byte	0x1
 5647 0a62 6F01     		.2byte	0x16f
 5648 0a64 500A0000 		.4byte	0xa50
 5649 0a68 18       		.uleb128 0x18
 5650 0a69 28130000 		.4byte	.LASF421
 5651 0a6d 02       		.byte	0x2
 5652 0a6e D3       		.byte	0xd3
 5653 0a6f EB000000 		.4byte	0xeb
 5654 0a73 03       		.byte	0x3
 5655 0a74 8F0A0000 		.4byte	0xa8f
 5656 0a78 19       		.uleb128 0x19
 5657 0a79 B9080000 		.4byte	.LASF263
 5658 0a7d 02       		.byte	0x2
 5659 0a7e D5       		.byte	0xd5
 5660 0a7f EB000000 		.4byte	0xeb
 5661 0a83 19       		.uleb128 0x19
 5662 0a84 37140000 		.4byte	.LASF264
 5663 0a88 02       		.byte	0x2
 5664 0a89 D5       		.byte	0xd5
 5665 0a8a EB000000 		.4byte	0xeb
 5666 0a8e 00       		.byte	0
 5667 0a8f 1A       		.uleb128 0x1a
 5668 0a90 B0050000 		.4byte	.LASF422
 5669 0a94 02       		.byte	0x2
 5670 0a95 E7       		.byte	0xe7
 5671 0a96 03       		.byte	0x3
 5672 0a97 A70A0000 		.4byte	0xaa7
 5673 0a9b 1B       		.uleb128 0x1b
 5674 0a9c BF160000 		.4byte	.LASF423
 5675 0aa0 02       		.byte	0x2
 5676 0aa1 E7       		.byte	0xe7
 5677 0aa2 EB000000 		.4byte	0xeb
 5678 0aa6 00       		.byte	0
 5679 0aa7 1C       		.uleb128 0x1c
 5680 0aa8 8F1B0000 		.4byte	.LASF323
 5681 0aac 01       		.byte	0x1
 5682 0aad 7806     		.2byte	0x678
 5683 0aaf F1070000 		.4byte	0x7f1
 5684 0ab3 00000000 		.4byte	.LFB531
 5685 0ab7 40000000 		.4byte	.LFE531-.LFB531
 5686 0abb 01       		.uleb128 0x1
 5687 0abc 9C       		.byte	0x9c
 5688 0abd F20A0000 		.4byte	0xaf2
 5689 0ac1 1D       		.uleb128 0x1d
 5690 0ac2 3C180000 		.4byte	.LASF269
 5691 0ac6 01       		.byte	0x1
 5692 0ac7 7806     		.2byte	0x678
 5693 0ac9 F20A0000 		.4byte	0xaf2
 5694 0acd 00000000 		.4byte	.LLST0
 5695 0ad1 1E       		.uleb128 0x1e
 5696 0ad2 221E0000 		.4byte	.LASF265
 5697 0ad6 01       		.byte	0x1
 5698 0ad7 7A06     		.2byte	0x67a
 5699 0ad9 F1070000 		.4byte	0x7f1
 5700 0add 69000000 		.4byte	.LLST1
 5701 0ae1 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 200


 5702 0ae2 C2220000 		.4byte	.LASF266
 5703 0ae6 01       		.byte	0x1
 5704 0ae7 7B06     		.2byte	0x67b
 5705 0ae9 020B0000 		.4byte	0xb02
 5706 0aed 88000000 		.4byte	.LLST2
 5707 0af1 00       		.byte	0
 5708 0af2 07       		.uleb128 0x7
 5709 0af3 FA080000 		.4byte	0x8fa
 5710 0af7 06       		.uleb128 0x6
 5711 0af8 04       		.byte	0x4
 5712 0af9 FD0A0000 		.4byte	0xafd
 5713 0afd 07       		.uleb128 0x7
 5714 0afe 5C0A0000 		.4byte	0xa5c
 5715 0b02 07       		.uleb128 0x7
 5716 0b03 F70A0000 		.4byte	0xaf7
 5717 0b07 1F       		.uleb128 0x1f
 5718 0b08 F1140000 		.4byte	.LASF267
 5719 0b0c 01       		.byte	0x1
 5720 0b0d 3E0E     		.2byte	0xe3e
 5721 0b0f 00000000 		.4byte	.LFB558
 5722 0b13 2C000000 		.4byte	.LFE558-.LFB558
 5723 0b17 01       		.uleb128 0x1
 5724 0b18 9C       		.byte	0x9c
 5725 0b19 2E0B0000 		.4byte	0xb2e
 5726 0b1d 1E       		.uleb128 0x1e
 5727 0b1e C2220000 		.4byte	.LASF266
 5728 0b22 01       		.byte	0x1
 5729 0b23 400E     		.2byte	0xe40
 5730 0b25 2E0B0000 		.4byte	0xb2e
 5731 0b29 F1000000 		.4byte	.LLST3
 5732 0b2d 00       		.byte	0
 5733 0b2e 06       		.uleb128 0x6
 5734 0b2f 04       		.byte	0x4
 5735 0b30 5C0A0000 		.4byte	0xa5c
 5736 0b34 1F       		.uleb128 0x1f
 5737 0b35 460F0000 		.4byte	.LASF268
 5738 0b39 01       		.byte	0x1
 5739 0b3a 080E     		.2byte	0xe08
 5740 0b3c 00000000 		.4byte	.LFB557
 5741 0b40 12000000 		.4byte	.LFE557-.LFB557
 5742 0b44 01       		.uleb128 0x1
 5743 0b45 9C       		.byte	0x9c
 5744 0b46 740B0000 		.4byte	0xb74
 5745 0b4a 1D       		.uleb128 0x1d
 5746 0b4b C2220000 		.4byte	.LASF266
 5747 0b4f 01       		.byte	0x1
 5748 0b50 080E     		.2byte	0xe08
 5749 0b52 2E0B0000 		.4byte	0xb2e
 5750 0b56 04010000 		.4byte	.LLST4
 5751 0b5a 20       		.uleb128 0x20
 5752 0b5b 0A000000 		.4byte	.LVL12
 5753 0b5f 92240000 		.4byte	0x2492
 5754 0b63 21       		.uleb128 0x21
 5755 0b64 10000000 		.4byte	.LVL13
 5756 0b68 92240000 		.4byte	0x2492
 5757 0b6c 22       		.uleb128 0x22
 5758 0b6d 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 201


 5759 0b6e 50       		.byte	0x50
 5760 0b6f 02       		.uleb128 0x2
 5761 0b70 74       		.byte	0x74
 5762 0b71 00       		.sleb128 0
 5763 0b72 00       		.byte	0
 5764 0b73 00       		.byte	0
 5765 0b74 1F       		.uleb128 0x1f
 5766 0b75 D31A0000 		.4byte	.LASF270
 5767 0b79 01       		.byte	0x1
 5768 0b7a FF02     		.2byte	0x2ff
 5769 0b7c 00000000 		.4byte	.LFB522
 5770 0b80 9E000000 		.4byte	.LFE522-.LFB522
 5771 0b84 01       		.uleb128 0x1
 5772 0b85 9C       		.byte	0x9c
 5773 0b86 840C0000 		.4byte	0xc84
 5774 0b8a 1D       		.uleb128 0x1d
 5775 0b8b 98120000 		.4byte	.LASF271
 5776 0b8f 01       		.byte	0x1
 5777 0b90 FF02     		.2byte	0x2ff
 5778 0b92 CA070000 		.4byte	0x7ca
 5779 0b96 22010000 		.4byte	.LLST5
 5780 0b9a 1D       		.uleb128 0x1d
 5781 0b9b 630E0000 		.4byte	.LASF272
 5782 0b9f 01       		.byte	0x1
 5783 0ba0 0003     		.2byte	0x300
 5784 0ba2 A7090000 		.4byte	0x9a7
 5785 0ba6 40010000 		.4byte	.LLST6
 5786 0baa 1D       		.uleb128 0x1d
 5787 0bab AD100000 		.4byte	.LASF273
 5788 0baf 01       		.byte	0x1
 5789 0bb0 0103     		.2byte	0x301
 5790 0bb2 840C0000 		.4byte	0xc84
 5791 0bb6 5E010000 		.4byte	.LLST7
 5792 0bba 1D       		.uleb128 0x1d
 5793 0bbb 0B1B0000 		.4byte	.LASF274
 5794 0bbf 01       		.byte	0x1
 5795 0bc0 0203     		.2byte	0x302
 5796 0bc2 890C0000 		.4byte	0xc89
 5797 0bc6 9B010000 		.4byte	.LLST8
 5798 0bca 1D       		.uleb128 0x1d
 5799 0bcb BA010000 		.4byte	.LASF255
 5800 0bcf 01       		.byte	0x1
 5801 0bd0 0303     		.2byte	0x303
 5802 0bd2 FC070000 		.4byte	0x7fc
 5803 0bd6 B9010000 		.4byte	.LLST9
 5804 0bda 23       		.uleb128 0x23
 5805 0bdb FC230000 		.4byte	.LASF275
 5806 0bdf 01       		.byte	0x1
 5807 0be0 0403     		.2byte	0x304
 5808 0be2 940C0000 		.4byte	0xc94
 5809 0be6 02       		.uleb128 0x2
 5810 0be7 91       		.byte	0x91
 5811 0be8 04       		.sleb128 4
 5812 0be9 23       		.uleb128 0x23
 5813 0bea 6A120000 		.4byte	.LASF276
 5814 0bee 01       		.byte	0x1
 5815 0bef 0503     		.2byte	0x305
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 202


 5816 0bf1 2E0B0000 		.4byte	0xb2e
 5817 0bf5 02       		.uleb128 0x2
 5818 0bf6 91       		.byte	0x91
 5819 0bf7 08       		.sleb128 8
 5820 0bf8 23       		.uleb128 0x23
 5821 0bf9 95210000 		.4byte	.LASF277
 5822 0bfd 01       		.byte	0x1
 5823 0bfe 0603     		.2byte	0x306
 5824 0c00 A40C0000 		.4byte	0xca4
 5825 0c04 02       		.uleb128 0x2
 5826 0c05 91       		.byte	0x91
 5827 0c06 0C       		.sleb128 12
 5828 0c07 24       		.uleb128 0x24
 5829 0c08 6D230000 		.4byte	.LASF252
 5830 0c0c 01       		.byte	0x1
 5831 0c0d 0803     		.2byte	0x308
 5832 0c0f AC090000 		.4byte	0x9ac
 5833 0c13 01       		.uleb128 0x1
 5834 0c14 55       		.byte	0x55
 5835 0c15 25       		.uleb128 0x25
 5836 0c16 7800     		.ascii	"x\000"
 5837 0c18 01       		.byte	0x1
 5838 0c19 0903     		.2byte	0x309
 5839 0c1b FC070000 		.4byte	0x7fc
 5840 0c1f D8010000 		.4byte	.LLST10
 5841 0c23 26       		.uleb128 0x26
 5842 0c24 1C000000 		.4byte	.LVL18
 5843 0c28 9D240000 		.4byte	0x249d
 5844 0c2c 3F0C0000 		.4byte	0xc3f
 5845 0c30 22       		.uleb128 0x22
 5846 0c31 01       		.uleb128 0x1
 5847 0c32 51       		.byte	0x51
 5848 0c33 02       		.uleb128 0x2
 5849 0c34 08       		.byte	0x8
 5850 0c35 A5       		.byte	0xa5
 5851 0c36 22       		.uleb128 0x22
 5852 0c37 01       		.uleb128 0x1
 5853 0c38 52       		.byte	0x52
 5854 0c39 04       		.uleb128 0x4
 5855 0c3a 75       		.byte	0x75
 5856 0c3b 00       		.sleb128 0
 5857 0c3c 32       		.byte	0x32
 5858 0c3d 24       		.byte	0x24
 5859 0c3e 00       		.byte	0
 5860 0c3f 26       		.uleb128 0x26
 5861 0c40 5A000000 		.4byte	.LVL25
 5862 0c44 A8240000 		.4byte	0x24a8
 5863 0c48 530C0000 		.4byte	0xc53
 5864 0c4c 22       		.uleb128 0x22
 5865 0c4d 01       		.uleb128 0x1
 5866 0c4e 50       		.byte	0x50
 5867 0c4f 02       		.uleb128 0x2
 5868 0c50 74       		.byte	0x74
 5869 0c51 04       		.sleb128 4
 5870 0c52 00       		.byte	0
 5871 0c53 26       		.uleb128 0x26
 5872 0c54 62000000 		.4byte	.LVL26
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 203


 5873 0c58 A8240000 		.4byte	0x24a8
 5874 0c5c 670C0000 		.4byte	0xc67
 5875 0c60 22       		.uleb128 0x22
 5876 0c61 01       		.uleb128 0x1
 5877 0c62 50       		.byte	0x50
 5878 0c63 02       		.uleb128 0x2
 5879 0c64 74       		.byte	0x74
 5880 0c65 18       		.sleb128 24
 5881 0c66 00       		.byte	0
 5882 0c67 21       		.uleb128 0x21
 5883 0c68 94000000 		.4byte	.LVL31
 5884 0c6c B4240000 		.4byte	0x24b4
 5885 0c70 22       		.uleb128 0x22
 5886 0c71 01       		.uleb128 0x1
 5887 0c72 50       		.byte	0x50
 5888 0c73 02       		.uleb128 0x2
 5889 0c74 75       		.byte	0x75
 5890 0c75 00       		.sleb128 0
 5891 0c76 22       		.uleb128 0x22
 5892 0c77 01       		.uleb128 0x1
 5893 0c78 51       		.byte	0x51
 5894 0c79 02       		.uleb128 0x2
 5895 0c7a 7A       		.byte	0x7a
 5896 0c7b 00       		.sleb128 0
 5897 0c7c 22       		.uleb128 0x22
 5898 0c7d 01       		.uleb128 0x1
 5899 0c7e 52       		.byte	0x52
 5900 0c7f 02       		.uleb128 0x2
 5901 0c80 78       		.byte	0x78
 5902 0c81 00       		.sleb128 0
 5903 0c82 00       		.byte	0
 5904 0c83 00       		.byte	0
 5905 0c84 07       		.uleb128 0x7
 5906 0c85 EB000000 		.4byte	0xeb
 5907 0c89 07       		.uleb128 0x7
 5908 0c8a B0000000 		.4byte	0xb0
 5909 0c8e 06       		.uleb128 0x6
 5910 0c8f 04       		.byte	0x4
 5911 0c90 FA080000 		.4byte	0x8fa
 5912 0c94 07       		.uleb128 0x7
 5913 0c95 8E0C0000 		.4byte	0xc8e
 5914 0c99 06       		.uleb128 0x6
 5915 0c9a 04       		.byte	0x4
 5916 0c9b 9F0C0000 		.4byte	0xc9f
 5917 0c9f 07       		.uleb128 0x7
 5918 0ca0 9C090000 		.4byte	0x99c
 5919 0ca4 07       		.uleb128 0x7
 5920 0ca5 990C0000 		.4byte	0xc99
 5921 0ca9 1F       		.uleb128 0x1f
 5922 0caa 93230000 		.4byte	.LASF278
 5923 0cae 01       		.byte	0x1
 5924 0caf 100D     		.2byte	0xd10
 5925 0cb1 00000000 		.4byte	.LFB555
 5926 0cb5 58000000 		.4byte	.LFE555-.LFB555
 5927 0cb9 01       		.uleb128 0x1
 5928 0cba 9C       		.byte	0x9c
 5929 0cbb 520D0000 		.4byte	0xd52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 204


 5930 0cbf 1E       		.uleb128 0x1e
 5931 0cc0 BA010000 		.4byte	.LASF255
 5932 0cc4 01       		.byte	0x1
 5933 0cc5 120D     		.2byte	0xd12
 5934 0cc7 FC070000 		.4byte	0x7fc
 5935 0ccb 02020000 		.4byte	.LLST11
 5936 0ccf 26       		.uleb128 0x26
 5937 0cd0 14000000 		.4byte	.LVL34
 5938 0cd4 BF240000 		.4byte	0x24bf
 5939 0cd8 F00C0000 		.4byte	0xcf0
 5940 0cdc 22       		.uleb128 0x22
 5941 0cdd 01       		.uleb128 0x1
 5942 0cde 50       		.byte	0x50
 5943 0cdf 0F       		.uleb128 0xf
 5944 0ce0 74       		.byte	0x74
 5945 0ce1 00       		.sleb128 0
 5946 0ce2 32       		.byte	0x32
 5947 0ce3 24       		.byte	0x24
 5948 0ce4 74       		.byte	0x74
 5949 0ce5 00       		.sleb128 0
 5950 0ce6 22       		.byte	0x22
 5951 0ce7 32       		.byte	0x32
 5952 0ce8 24       		.byte	0x24
 5953 0ce9 03       		.byte	0x3
 5954 0cea 30000000 		.4byte	.LANCHOR0+48
 5955 0cee 22       		.byte	0x22
 5956 0cef 00       		.byte	0
 5957 0cf0 26       		.uleb128 0x26
 5958 0cf1 26000000 		.4byte	.LVL37
 5959 0cf5 BF240000 		.4byte	0x24bf
 5960 0cf9 040D0000 		.4byte	0xd04
 5961 0cfd 22       		.uleb128 0x22
 5962 0cfe 01       		.uleb128 0x1
 5963 0cff 50       		.byte	0x50
 5964 0d00 02       		.uleb128 0x2
 5965 0d01 76       		.byte	0x76
 5966 0d02 00       		.sleb128 0
 5967 0d03 00       		.byte	0
 5968 0d04 26       		.uleb128 0x26
 5969 0d05 30000000 		.4byte	.LVL38
 5970 0d09 BF240000 		.4byte	0x24bf
 5971 0d0d 180D0000 		.4byte	0xd18
 5972 0d11 22       		.uleb128 0x22
 5973 0d12 01       		.uleb128 0x1
 5974 0d13 50       		.byte	0x50
 5975 0d14 02       		.uleb128 0x2
 5976 0d15 75       		.byte	0x75
 5977 0d16 00       		.sleb128 0
 5978 0d17 00       		.byte	0
 5979 0d18 26       		.uleb128 0x26
 5980 0d19 38000000 		.4byte	.LVL39
 5981 0d1d BF240000 		.4byte	0x24bf
 5982 0d21 2C0D0000 		.4byte	0xd2c
 5983 0d25 22       		.uleb128 0x22
 5984 0d26 01       		.uleb128 0x1
 5985 0d27 50       		.byte	0x50
 5986 0d28 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 205


 5987 0d29 74       		.byte	0x74
 5988 0d2a 14       		.sleb128 20
 5989 0d2b 00       		.byte	0
 5990 0d2c 26       		.uleb128 0x26
 5991 0d2d 40000000 		.4byte	.LVL40
 5992 0d31 BF240000 		.4byte	0x24bf
 5993 0d35 410D0000 		.4byte	0xd41
 5994 0d39 22       		.uleb128 0x22
 5995 0d3a 01       		.uleb128 0x1
 5996 0d3b 50       		.byte	0x50
 5997 0d3c 03       		.uleb128 0x3
 5998 0d3d 74       		.byte	0x74
 5999 0d3e E803     		.sleb128 488
 6000 0d40 00       		.byte	0
 6001 0d41 21       		.uleb128 0x21
 6002 0d42 46000000 		.4byte	.LVL41
 6003 0d46 BF240000 		.4byte	0x24bf
 6004 0d4a 22       		.uleb128 0x22
 6005 0d4b 01       		.uleb128 0x1
 6006 0d4c 50       		.byte	0x50
 6007 0d4d 02       		.uleb128 0x2
 6008 0d4e 74       		.byte	0x74
 6009 0d4f 00       		.sleb128 0
 6010 0d50 00       		.byte	0
 6011 0d51 00       		.byte	0
 6012 0d52 1F       		.uleb128 0x1f
 6013 0d53 17120000 		.4byte	.LASF279
 6014 0d57 01       		.byte	0x1
 6015 0d58 C303     		.2byte	0x3c3
 6016 0d5a 00000000 		.4byte	.LFB523
 6017 0d5e AC000000 		.4byte	.LFE523-.LFB523
 6018 0d62 01       		.uleb128 0x1
 6019 0d63 9C       		.byte	0x9c
 6020 0d64 A80D0000 		.4byte	0xda8
 6021 0d68 1D       		.uleb128 0x1d
 6022 0d69 6A120000 		.4byte	.LASF276
 6023 0d6d 01       		.byte	0x1
 6024 0d6e C303     		.2byte	0x3c3
 6025 0d70 2E0B0000 		.4byte	0xb2e
 6026 0d74 21020000 		.4byte	.LLST12
 6027 0d78 20       		.uleb128 0x20
 6028 0d79 08000000 		.4byte	.LVL43
 6029 0d7d CB240000 		.4byte	0x24cb
 6030 0d81 20       		.uleb128 0x20
 6031 0d82 2C000000 		.4byte	.LVL44
 6032 0d86 A90C0000 		.4byte	0xca9
 6033 0d8a 26       		.uleb128 0x26
 6034 0d8b 7A000000 		.4byte	.LVL45
 6035 0d8f D6240000 		.4byte	0x24d6
 6036 0d93 9E0D0000 		.4byte	0xd9e
 6037 0d97 22       		.uleb128 0x22
 6038 0d98 01       		.uleb128 0x1
 6039 0d99 51       		.byte	0x51
 6040 0d9a 02       		.uleb128 0x2
 6041 0d9b 74       		.byte	0x74
 6042 0d9c 04       		.sleb128 4
 6043 0d9d 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 206


 6044 0d9e 20       		.uleb128 0x20
 6045 0d9f 7E000000 		.4byte	.LVL46
 6046 0da3 E2240000 		.4byte	0x24e2
 6047 0da7 00       		.byte	0
 6048 0da8 1F       		.uleb128 0x1f
 6049 0da9 1D230000 		.4byte	.LASF280
 6050 0dad 01       		.byte	0x1
 6051 0dae 5F12     		.2byte	0x125f
 6052 0db0 00000000 		.4byte	.LFB568
 6053 0db4 68000000 		.4byte	.LFE568-.LFB568
 6054 0db8 01       		.uleb128 0x1
 6055 0db9 9C       		.byte	0x9c
 6056 0dba 310E0000 		.4byte	0xe31
 6057 0dbe 1D       		.uleb128 0x1d
 6058 0dbf CB200000 		.4byte	.LASF281
 6059 0dc3 01       		.byte	0x1
 6060 0dc4 5F12     		.2byte	0x125f
 6061 0dc6 07080000 		.4byte	0x807
 6062 0dca 4D020000 		.4byte	.LLST13
 6063 0dce 1D       		.uleb128 0x1d
 6064 0dcf E91E0000 		.4byte	.LASF282
 6065 0dd3 01       		.byte	0x1
 6066 0dd4 5F12     		.2byte	0x125f
 6067 0dd6 310E0000 		.4byte	0xe31
 6068 0dda 79020000 		.4byte	.LLST14
 6069 0dde 1E       		.uleb128 0x1e
 6070 0ddf 5E220000 		.4byte	.LASF283
 6071 0de3 01       		.byte	0x1
 6072 0de4 6112     		.2byte	0x1261
 6073 0de6 07080000 		.4byte	0x807
 6074 0dea A5020000 		.4byte	.LLST15
 6075 0dee 1E       		.uleb128 0x1e
 6076 0def BD070000 		.4byte	.LASF284
 6077 0df3 01       		.byte	0x1
 6078 0df4 6212     		.2byte	0x1262
 6079 0df6 360E0000 		.4byte	0xe36
 6080 0dfa B8020000 		.4byte	.LLST16
 6081 0dfe 20       		.uleb128 0x20
 6082 0dff 16000000 		.4byte	.LVL51
 6083 0e03 ED240000 		.4byte	0x24ed
 6084 0e07 26       		.uleb128 0x26
 6085 0e08 2A000000 		.4byte	.LVL52
 6086 0e0c D6240000 		.4byte	0x24d6
 6087 0e10 1E0E0000 		.4byte	0xe1e
 6088 0e14 22       		.uleb128 0x22
 6089 0e15 01       		.uleb128 0x1
 6090 0e16 50       		.byte	0x50
 6091 0e17 05       		.uleb128 0x5
 6092 0e18 03       		.byte	0x3
 6093 0e19 00000000 		.4byte	.LANCHOR0
 6094 0e1d 00       		.byte	0
 6095 0e1e 20       		.uleb128 0x20
 6096 0e1f 4A000000 		.4byte	.LVL55
 6097 0e23 F9240000 		.4byte	0x24f9
 6098 0e27 20       		.uleb128 0x20
 6099 0e28 5A000000 		.4byte	.LVL58
 6100 0e2c F9240000 		.4byte	0x24f9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 207


 6101 0e30 00       		.byte	0
 6102 0e31 07       		.uleb128 0x7
 6103 0e32 F1070000 		.4byte	0x7f1
 6104 0e36 07       		.uleb128 0x7
 6105 0e37 07080000 		.4byte	0x807
 6106 0e3b 27       		.uleb128 0x27
 6107 0e3c 22210000 		.4byte	.LASF287
 6108 0e40 01       		.byte	0x1
 6109 0e41 A402     		.2byte	0x2a4
 6110 0e43 F1070000 		.4byte	0x7f1
 6111 0e47 00000000 		.4byte	.LFB521
 6112 0e4b 62000000 		.4byte	.LFE521-.LFB521
 6113 0e4f 01       		.uleb128 0x1
 6114 0e50 9C       		.byte	0x9c
 6115 0e51 7F0F0000 		.4byte	0xf7f
 6116 0e55 1D       		.uleb128 0x1d
 6117 0e56 98120000 		.4byte	.LASF271
 6118 0e5a 01       		.byte	0x1
 6119 0e5b A402     		.2byte	0x2a4
 6120 0e5d CA070000 		.4byte	0x7ca
 6121 0e61 CB020000 		.4byte	.LLST17
 6122 0e65 1D       		.uleb128 0x1d
 6123 0e66 630E0000 		.4byte	.LASF272
 6124 0e6a 01       		.byte	0x1
 6125 0e6b A502     		.2byte	0x2a5
 6126 0e6d A7090000 		.4byte	0x9a7
 6127 0e71 E9020000 		.4byte	.LLST18
 6128 0e75 1D       		.uleb128 0x1d
 6129 0e76 43090000 		.4byte	.LASF285
 6130 0e7a 01       		.byte	0x1
 6131 0e7b A602     		.2byte	0x2a6
 6132 0e7d 7F0F0000 		.4byte	0xf7f
 6133 0e81 07030000 		.4byte	.LLST19
 6134 0e85 1D       		.uleb128 0x1d
 6135 0e86 0B1B0000 		.4byte	.LASF274
 6136 0e8a 01       		.byte	0x1
 6137 0e8b A702     		.2byte	0x2a7
 6138 0e8d 890C0000 		.4byte	0xc89
 6139 0e91 28030000 		.4byte	.LLST20
 6140 0e95 23       		.uleb128 0x23
 6141 0e96 BA010000 		.4byte	.LASF255
 6142 0e9a 01       		.byte	0x1
 6143 0e9b A802     		.2byte	0x2a8
 6144 0e9d FC070000 		.4byte	0x7fc
 6145 0ea1 02       		.uleb128 0x2
 6146 0ea2 91       		.byte	0x91
 6147 0ea3 00       		.sleb128 0
 6148 0ea4 23       		.uleb128 0x23
 6149 0ea5 FC230000 		.4byte	.LASF275
 6150 0ea9 01       		.byte	0x1
 6151 0eaa A902     		.2byte	0x2a9
 6152 0eac 940C0000 		.4byte	0xc94
 6153 0eb0 02       		.uleb128 0x2
 6154 0eb1 91       		.byte	0x91
 6155 0eb2 04       		.sleb128 4
 6156 0eb3 1E       		.uleb128 0x1e
 6157 0eb4 6A120000 		.4byte	.LASF276
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 208


 6158 0eb8 01       		.byte	0x1
 6159 0eb9 AB02     		.2byte	0x2ab
 6160 0ebb 2E0B0000 		.4byte	0xb2e
 6161 0ebf 46030000 		.4byte	.LLST21
 6162 0ec3 1E       		.uleb128 0x1e
 6163 0ec4 221E0000 		.4byte	.LASF265
 6164 0ec8 01       		.byte	0x1
 6165 0ec9 AC02     		.2byte	0x2ac
 6166 0ecb F1070000 		.4byte	0x7f1
 6167 0ecf 6F030000 		.4byte	.LLST22
 6168 0ed3 28       		.uleb128 0x28
 6169 0ed4 0E000000 		.4byte	.LBB18
 6170 0ed8 24000000 		.4byte	.LBE18-.LBB18
 6171 0edc 2B0F0000 		.4byte	0xf2b
 6172 0ee0 1E       		.uleb128 0x1e
 6173 0ee1 DE1B0000 		.4byte	.LASF256
 6174 0ee5 01       		.byte	0x1
 6175 0ee6 C902     		.2byte	0x2c9
 6176 0ee8 AC090000 		.4byte	0x9ac
 6177 0eec 8E030000 		.4byte	.LLST23
 6178 0ef0 26       		.uleb128 0x26
 6179 0ef1 14000000 		.4byte	.LVL62
 6180 0ef5 05250000 		.4byte	0x2505
 6181 0ef9 060F0000 		.4byte	0xf06
 6182 0efd 22       		.uleb128 0x22
 6183 0efe 01       		.uleb128 0x1
 6184 0eff 50       		.byte	0x50
 6185 0f00 04       		.uleb128 0x4
 6186 0f01 75       		.byte	0x75
 6187 0f02 00       		.sleb128 0
 6188 0f03 32       		.byte	0x32
 6189 0f04 24       		.byte	0x24
 6190 0f05 00       		.byte	0
 6191 0f06 26       		.uleb128 0x26
 6192 0f07 1E000000 		.4byte	.LVL64
 6193 0f0b 05250000 		.4byte	0x2505
 6194 0f0f 1A0F0000 		.4byte	0xf1a
 6195 0f13 22       		.uleb128 0x22
 6196 0f14 01       		.uleb128 0x1
 6197 0f15 50       		.byte	0x50
 6198 0f16 02       		.uleb128 0x2
 6199 0f17 08       		.byte	0x8
 6200 0f18 60       		.byte	0x60
 6201 0f19 00       		.byte	0
 6202 0f1a 21       		.uleb128 0x21
 6203 0f1b 2E000000 		.4byte	.LVL66
 6204 0f1f 92240000 		.4byte	0x2492
 6205 0f23 22       		.uleb128 0x22
 6206 0f24 01       		.uleb128 0x1
 6207 0f25 50       		.byte	0x50
 6208 0f26 02       		.uleb128 0x2
 6209 0f27 79       		.byte	0x79
 6210 0f28 00       		.sleb128 0
 6211 0f29 00       		.byte	0
 6212 0f2a 00       		.byte	0
 6213 0f2b 26       		.uleb128 0x26
 6214 0f2c 4E000000 		.4byte	.LVL69
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 209


 6215 0f30 740B0000 		.4byte	0xb74
 6216 0f34 6E0F0000 		.4byte	0xf6e
 6217 0f38 22       		.uleb128 0x22
 6218 0f39 01       		.uleb128 0x1
 6219 0f3a 50       		.byte	0x50
 6220 0f3b 02       		.uleb128 0x2
 6221 0f3c 76       		.byte	0x76
 6222 0f3d 00       		.sleb128 0
 6223 0f3e 22       		.uleb128 0x22
 6224 0f3f 01       		.uleb128 0x1
 6225 0f40 51       		.byte	0x51
 6226 0f41 02       		.uleb128 0x2
 6227 0f42 77       		.byte	0x77
 6228 0f43 00       		.sleb128 0
 6229 0f44 22       		.uleb128 0x22
 6230 0f45 01       		.uleb128 0x1
 6231 0f46 52       		.byte	0x52
 6232 0f47 02       		.uleb128 0x2
 6233 0f48 75       		.byte	0x75
 6234 0f49 00       		.sleb128 0
 6235 0f4a 22       		.uleb128 0x22
 6236 0f4b 01       		.uleb128 0x1
 6237 0f4c 53       		.byte	0x53
 6238 0f4d 02       		.uleb128 0x2
 6239 0f4e 78       		.byte	0x78
 6240 0f4f 00       		.sleb128 0
 6241 0f50 22       		.uleb128 0x22
 6242 0f51 02       		.uleb128 0x2
 6243 0f52 7D       		.byte	0x7d
 6244 0f53 00       		.sleb128 0
 6245 0f54 03       		.uleb128 0x3
 6246 0f55 91       		.byte	0x91
 6247 0f56 00       		.sleb128 0
 6248 0f57 06       		.byte	0x6
 6249 0f58 22       		.uleb128 0x22
 6250 0f59 02       		.uleb128 0x2
 6251 0f5a 7D       		.byte	0x7d
 6252 0f5b 04       		.sleb128 4
 6253 0f5c 03       		.uleb128 0x3
 6254 0f5d 91       		.byte	0x91
 6255 0f5e 04       		.sleb128 4
 6256 0f5f 06       		.byte	0x6
 6257 0f60 22       		.uleb128 0x22
 6258 0f61 02       		.uleb128 0x2
 6259 0f62 7D       		.byte	0x7d
 6260 0f63 08       		.sleb128 8
 6261 0f64 02       		.uleb128 0x2
 6262 0f65 74       		.byte	0x74
 6263 0f66 00       		.sleb128 0
 6264 0f67 22       		.uleb128 0x22
 6265 0f68 02       		.uleb128 0x2
 6266 0f69 7D       		.byte	0x7d
 6267 0f6a 0C       		.sleb128 12
 6268 0f6b 01       		.uleb128 0x1
 6269 0f6c 30       		.byte	0x30
 6270 0f6d 00       		.byte	0
 6271 0f6e 21       		.uleb128 0x21
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 210


 6272 0f6f 54000000 		.4byte	.LVL70
 6273 0f73 520D0000 		.4byte	0xd52
 6274 0f77 22       		.uleb128 0x22
 6275 0f78 01       		.uleb128 0x1
 6276 0f79 50       		.byte	0x50
 6277 0f7a 02       		.uleb128 0x2
 6278 0f7b 74       		.byte	0x74
 6279 0f7c 00       		.sleb128 0
 6280 0f7d 00       		.byte	0
 6281 0f7e 00       		.byte	0
 6282 0f7f 07       		.uleb128 0x7
 6283 0f80 D5000000 		.4byte	0xd5
 6284 0f84 29       		.uleb128 0x29
 6285 0f85 B0180000 		.4byte	.LASF292
 6286 0f89 01       		.byte	0x1
 6287 0f8a 1804     		.2byte	0x418
 6288 0f8c 00000000 		.4byte	.LFB524
 6289 0f90 A4000000 		.4byte	.LFE524-.LFB524
 6290 0f94 01       		.uleb128 0x1
 6291 0f95 9C       		.byte	0x9c
 6292 0f96 2D100000 		.4byte	0x102d
 6293 0f9a 1D       		.uleb128 0x1d
 6294 0f9b E61B0000 		.4byte	.LASF286
 6295 0f9f 01       		.byte	0x1
 6296 0fa0 1804     		.2byte	0x418
 6297 0fa2 FA080000 		.4byte	0x8fa
 6298 0fa6 B7030000 		.4byte	.LLST24
 6299 0faa 1E       		.uleb128 0x1e
 6300 0fab C2220000 		.4byte	.LASF266
 6301 0faf 01       		.byte	0x1
 6302 0fb0 1A04     		.2byte	0x41a
 6303 0fb2 2E0B0000 		.4byte	0xb2e
 6304 0fb6 D5030000 		.4byte	.LLST25
 6305 0fba 20       		.uleb128 0x20
 6306 0fbb 08000000 		.4byte	.LVL74
 6307 0fbf CB240000 		.4byte	0x24cb
 6308 0fc3 26       		.uleb128 0x26
 6309 0fc4 18000000 		.4byte	.LVL76
 6310 0fc8 ED240000 		.4byte	0x24ed
 6311 0fcc D70F0000 		.4byte	0xfd7
 6312 0fd0 22       		.uleb128 0x22
 6313 0fd1 01       		.uleb128 0x1
 6314 0fd2 50       		.byte	0x50
 6315 0fd3 02       		.uleb128 0x2
 6316 0fd4 76       		.byte	0x76
 6317 0fd5 00       		.sleb128 0
 6318 0fd6 00       		.byte	0
 6319 0fd7 26       		.uleb128 0x26
 6320 0fd8 24000000 		.4byte	.LVL77
 6321 0fdc ED240000 		.4byte	0x24ed
 6322 0fe0 EB0F0000 		.4byte	0xfeb
 6323 0fe4 22       		.uleb128 0x22
 6324 0fe5 01       		.uleb128 0x1
 6325 0fe6 50       		.byte	0x50
 6326 0fe7 02       		.uleb128 0x2
 6327 0fe8 74       		.byte	0x74
 6328 0fe9 18       		.sleb128 24
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 211


 6329 0fea 00       		.byte	0
 6330 0feb 26       		.uleb128 0x26
 6331 0fec 44000000 		.4byte	.LVL78
 6332 0ff0 D6240000 		.4byte	0x24d6
 6333 0ff4 06100000 		.4byte	0x1006
 6334 0ff8 22       		.uleb128 0x22
 6335 0ff9 01       		.uleb128 0x1
 6336 0ffa 50       		.byte	0x50
 6337 0ffb 03       		.uleb128 0x3
 6338 0ffc 75       		.byte	0x75
 6339 0ffd E803     		.sleb128 488
 6340 0fff 22       		.uleb128 0x22
 6341 1000 01       		.uleb128 0x1
 6342 1001 51       		.byte	0x51
 6343 1002 02       		.uleb128 0x2
 6344 1003 76       		.byte	0x76
 6345 1004 00       		.sleb128 0
 6346 1005 00       		.byte	0
 6347 1006 26       		.uleb128 0x26
 6348 1007 62000000 		.4byte	.LVL79
 6349 100b 340B0000 		.4byte	0xb34
 6350 100f 1A100000 		.4byte	0x101a
 6351 1013 22       		.uleb128 0x22
 6352 1014 01       		.uleb128 0x1
 6353 1015 50       		.byte	0x50
 6354 1016 02       		.uleb128 0x2
 6355 1017 74       		.byte	0x74
 6356 1018 00       		.sleb128 0
 6357 1019 00       		.byte	0
 6358 101a 20       		.uleb128 0x20
 6359 101b 66000000 		.4byte	.LVL80
 6360 101f 070B0000 		.4byte	0xb07
 6361 1023 20       		.uleb128 0x20
 6362 1024 6A000000 		.4byte	.LVL81
 6363 1028 E2240000 		.4byte	0x24e2
 6364 102c 00       		.byte	0
 6365 102d 27       		.uleb128 0x27
 6366 102e A30D0000 		.4byte	.LASF288
 6367 1032 01       		.byte	0x1
 6368 1033 3C05     		.2byte	0x53c
 6369 1035 FC070000 		.4byte	0x7fc
 6370 1039 00000000 		.4byte	.LFB527
 6371 103d 20000000 		.4byte	.LFE527-.LFB527
 6372 1041 01       		.uleb128 0x1
 6373 1042 9C       		.byte	0x9c
 6374 1043 8A100000 		.4byte	0x108a
 6375 1047 1D       		.uleb128 0x1d
 6376 1048 3C180000 		.4byte	.LASF269
 6377 104c 01       		.byte	0x1
 6378 104d 3C05     		.2byte	0x53c
 6379 104f FA080000 		.4byte	0x8fa
 6380 1053 E8030000 		.4byte	.LLST26
 6381 1057 1E       		.uleb128 0x1e
 6382 1058 C2220000 		.4byte	.LASF266
 6383 105c 01       		.byte	0x1
 6384 105d 3E05     		.2byte	0x53e
 6385 105f 2E0B0000 		.4byte	0xb2e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 212


 6386 1063 06040000 		.4byte	.LLST27
 6387 1067 1E       		.uleb128 0x1e
 6388 1068 CD130000 		.4byte	.LASF289
 6389 106c 01       		.byte	0x1
 6390 106d 3F05     		.2byte	0x53f
 6391 106f FC070000 		.4byte	0x7fc
 6392 1073 19040000 		.4byte	.LLST28
 6393 1077 20       		.uleb128 0x20
 6394 1078 08000000 		.4byte	.LVL84
 6395 107c CB240000 		.4byte	0x24cb
 6396 1080 20       		.uleb128 0x20
 6397 1081 16000000 		.4byte	.LVL87
 6398 1085 E2240000 		.4byte	0x24e2
 6399 1089 00       		.byte	0
 6400 108a 27       		.uleb128 0x27
 6401 108b AF150000 		.4byte	.LASF290
 6402 108f 01       		.byte	0x1
 6403 1090 5205     		.2byte	0x552
 6404 1092 FC070000 		.4byte	0x7fc
 6405 1096 00000000 		.4byte	.LFB528
 6406 109a 30000000 		.4byte	.LFE528-.LFB528
 6407 109e 01       		.uleb128 0x1
 6408 109f 9C       		.byte	0x9c
 6409 10a0 2F110000 		.4byte	0x112f
 6410 10a4 1D       		.uleb128 0x1d
 6411 10a5 3C180000 		.4byte	.LASF269
 6412 10a9 01       		.byte	0x1
 6413 10aa 5205     		.2byte	0x552
 6414 10ac FA080000 		.4byte	0x8fa
 6415 10b0 37040000 		.4byte	.LLST29
 6416 10b4 1E       		.uleb128 0x1e
 6417 10b5 C2220000 		.4byte	.LASF266
 6418 10b9 01       		.byte	0x1
 6419 10ba 5405     		.2byte	0x554
 6420 10bc 2E0B0000 		.4byte	0xb2e
 6421 10c0 55040000 		.4byte	.LLST30
 6422 10c4 24       		.uleb128 0x24
 6423 10c5 CD130000 		.4byte	.LASF289
 6424 10c9 01       		.byte	0x1
 6425 10ca 5505     		.2byte	0x555
 6426 10cc FC070000 		.4byte	0x7fc
 6427 10d0 01       		.uleb128 0x1
 6428 10d1 50       		.byte	0x50
 6429 10d2 2A       		.uleb128 0x2a
 6430 10d3 3D0A0000 		.4byte	.LASF291
 6431 10d7 01       		.byte	0x1
 6432 10d8 5505     		.2byte	0x555
 6433 10da FC070000 		.4byte	0x7fc
 6434 10de 2B       		.uleb128 0x2b
 6435 10df 680A0000 		.4byte	0xa68
 6436 10e3 08000000 		.4byte	.LBB19
 6437 10e7 14000000 		.4byte	.LBE19-.LBB19
 6438 10eb 01       		.byte	0x1
 6439 10ec 6905     		.2byte	0x569
 6440 10ee 07110000 		.4byte	0x1107
 6441 10f2 2C       		.uleb128 0x2c
 6442 10f3 08000000 		.4byte	.LBB20
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 213


 6443 10f7 14000000 		.4byte	.LBE20-.LBB20
 6444 10fb 2D       		.uleb128 0x2d
 6445 10fc 780A0000 		.4byte	0xa78
 6446 1100 2D       		.uleb128 0x2d
 6447 1101 830A0000 		.4byte	0xa83
 6448 1105 00       		.byte	0
 6449 1106 00       		.byte	0
 6450 1107 2B       		.uleb128 0x2b
 6451 1108 8F0A0000 		.4byte	0xa8f
 6452 110c 26000000 		.4byte	.LBB21
 6453 1110 04000000 		.4byte	.LBE21-.LBB21
 6454 1114 01       		.byte	0x1
 6455 1115 7005     		.2byte	0x570
 6456 1117 25110000 		.4byte	0x1125
 6457 111b 2E       		.uleb128 0x2e
 6458 111c 9B0A0000 		.4byte	0xa9b
 6459 1120 68040000 		.4byte	.LLST31
 6460 1124 00       		.byte	0
 6461 1125 20       		.uleb128 0x20
 6462 1126 08000000 		.4byte	.LVL90
 6463 112a 10250000 		.4byte	0x2510
 6464 112e 00       		.byte	0
 6465 112f 29       		.uleb128 0x29
 6466 1130 FA160000 		.4byte	.LASF293
 6467 1134 01       		.byte	0x1
 6468 1135 7A05     		.2byte	0x57a
 6469 1137 00000000 		.4byte	.LFB529
 6470 113b D0000000 		.4byte	.LFE529-.LFB529
 6471 113f 01       		.uleb128 0x1
 6472 1140 9C       		.byte	0x9c
 6473 1141 E0110000 		.4byte	0x11e0
 6474 1145 1D       		.uleb128 0x1d
 6475 1146 3C180000 		.4byte	.LASF269
 6476 114a 01       		.byte	0x1
 6477 114b 7A05     		.2byte	0x57a
 6478 114d FA080000 		.4byte	0x8fa
 6479 1151 7B040000 		.4byte	.LLST32
 6480 1155 1D       		.uleb128 0x1d
 6481 1156 1D150000 		.4byte	.LASF294
 6482 115a 01       		.byte	0x1
 6483 115b 7A05     		.2byte	0x57a
 6484 115d FC070000 		.4byte	0x7fc
 6485 1161 99040000 		.4byte	.LLST33
 6486 1165 1E       		.uleb128 0x1e
 6487 1166 C2220000 		.4byte	.LASF266
 6488 116a 01       		.byte	0x1
 6489 116b 7C05     		.2byte	0x57c
 6490 116d 2E0B0000 		.4byte	0xb2e
 6491 1171 C3040000 		.4byte	.LLST34
 6492 1175 1E       		.uleb128 0x1e
 6493 1176 7F210000 		.4byte	.LASF295
 6494 117a 01       		.byte	0x1
 6495 117b 7D05     		.2byte	0x57d
 6496 117d FC070000 		.4byte	0x7fc
 6497 1181 D6040000 		.4byte	.LLST35
 6498 1185 1E       		.uleb128 0x1e
 6499 1186 AF200000 		.4byte	.LASF296
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 214


 6500 118a 01       		.byte	0x1
 6501 118b 7D05     		.2byte	0x57d
 6502 118d FC070000 		.4byte	0x7fc
 6503 1191 E9040000 		.4byte	.LLST36
 6504 1195 1E       		.uleb128 0x1e
 6505 1196 6C080000 		.4byte	.LASF297
 6506 119a 01       		.byte	0x1
 6507 119b 7E05     		.2byte	0x57e
 6508 119d F1070000 		.4byte	0x7f1
 6509 11a1 FC040000 		.4byte	.LLST37
 6510 11a5 20       		.uleb128 0x20
 6511 11a6 18000000 		.4byte	.LVL97
 6512 11aa CB240000 		.4byte	0x24cb
 6513 11ae 26       		.uleb128 0x26
 6514 11af 88000000 		.4byte	.LVL103
 6515 11b3 ED240000 		.4byte	0x24ed
 6516 11b7 C2110000 		.4byte	0x11c2
 6517 11bb 22       		.uleb128 0x22
 6518 11bc 01       		.uleb128 0x1
 6519 11bd 50       		.byte	0x50
 6520 11be 02       		.uleb128 0x2
 6521 11bf 75       		.byte	0x75
 6522 11c0 00       		.sleb128 0
 6523 11c1 00       		.byte	0
 6524 11c2 26       		.uleb128 0x26
 6525 11c3 AA000000 		.4byte	.LVL104
 6526 11c7 D6240000 		.4byte	0x24d6
 6527 11cb D6110000 		.4byte	0x11d6
 6528 11cf 22       		.uleb128 0x22
 6529 11d0 01       		.uleb128 0x1
 6530 11d1 51       		.byte	0x51
 6531 11d2 02       		.uleb128 0x2
 6532 11d3 75       		.byte	0x75
 6533 11d4 00       		.sleb128 0
 6534 11d5 00       		.byte	0
 6535 11d6 20       		.uleb128 0x20
 6536 11d7 C0000000 		.4byte	.LVL106
 6537 11db E2240000 		.4byte	0x24e2
 6538 11df 00       		.byte	0
 6539 11e0 29       		.uleb128 0x29
 6540 11e1 7A230000 		.4byte	.LASF298
 6541 11e5 01       		.byte	0x1
 6542 11e6 A606     		.2byte	0x6a6
 6543 11e8 00000000 		.4byte	.LFB532
 6544 11ec 7C000000 		.4byte	.LFE532-.LFB532
 6545 11f0 01       		.uleb128 0x1
 6546 11f1 9C       		.byte	0x9c
 6547 11f2 65120000 		.4byte	0x1265
 6548 11f6 1D       		.uleb128 0x1d
 6549 11f7 60070000 		.4byte	.LASF299
 6550 11fb 01       		.byte	0x1
 6551 11fc A606     		.2byte	0x6a6
 6552 11fe FA080000 		.4byte	0x8fa
 6553 1202 1B050000 		.4byte	.LLST38
 6554 1206 1E       		.uleb128 0x1e
 6555 1207 C2220000 		.4byte	.LASF266
 6556 120b 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 215


 6557 120c A806     		.2byte	0x6a8
 6558 120e 65120000 		.4byte	0x1265
 6559 1212 47050000 		.4byte	.LLST39
 6560 1216 20       		.uleb128 0x20
 6561 1217 1A000000 		.4byte	.LVL109
 6562 121b CB240000 		.4byte	0x24cb
 6563 121f 26       		.uleb128 0x26
 6564 1220 20000000 		.4byte	.LVL110
 6565 1224 A70A0000 		.4byte	0xaa7
 6566 1228 33120000 		.4byte	0x1233
 6567 122c 22       		.uleb128 0x22
 6568 122d 01       		.uleb128 0x1
 6569 122e 50       		.byte	0x50
 6570 122f 02       		.uleb128 0x2
 6571 1230 74       		.byte	0x74
 6572 1231 00       		.sleb128 0
 6573 1232 00       		.byte	0
 6574 1233 26       		.uleb128 0x26
 6575 1234 2A000000 		.4byte	.LVL111
 6576 1238 ED240000 		.4byte	0x24ed
 6577 123c 47120000 		.4byte	0x1247
 6578 1240 22       		.uleb128 0x22
 6579 1241 01       		.uleb128 0x1
 6580 1242 50       		.byte	0x50
 6581 1243 02       		.uleb128 0x2
 6582 1244 76       		.byte	0x76
 6583 1245 00       		.sleb128 0
 6584 1246 00       		.byte	0
 6585 1247 26       		.uleb128 0x26
 6586 1248 50000000 		.4byte	.LVL112
 6587 124c D6240000 		.4byte	0x24d6
 6588 1250 5B120000 		.4byte	0x125b
 6589 1254 22       		.uleb128 0x22
 6590 1255 01       		.uleb128 0x1
 6591 1256 51       		.byte	0x51
 6592 1257 02       		.uleb128 0x2
 6593 1258 76       		.byte	0x76
 6594 1259 00       		.sleb128 0
 6595 125a 00       		.byte	0
 6596 125b 20       		.uleb128 0x20
 6597 125c 70000000 		.4byte	.LVL113
 6598 1260 E2240000 		.4byte	0x24e2
 6599 1264 00       		.byte	0
 6600 1265 07       		.uleb128 0x7
 6601 1266 2E0B0000 		.4byte	0xb2e
 6602 126a 27       		.uleb128 0x27
 6603 126b AD0A0000 		.4byte	.LASF300
 6604 126f 01       		.byte	0x1
 6605 1270 DC06     		.2byte	0x6dc
 6606 1272 F1070000 		.4byte	0x7f1
 6607 1276 00000000 		.4byte	.LFB533
 6608 127a 98000000 		.4byte	.LFE533-.LFB533
 6609 127e 01       		.uleb128 0x1
 6610 127f 9C       		.byte	0x9c
 6611 1280 66130000 		.4byte	0x1366
 6612 1284 1D       		.uleb128 0x1d
 6613 1285 60070000 		.4byte	.LASF299
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 216


 6614 1289 01       		.byte	0x1
 6615 128a DC06     		.2byte	0x6dc
 6616 128c FA080000 		.4byte	0x8fa
 6617 1290 73050000 		.4byte	.LLST40
 6618 1294 1E       		.uleb128 0x1e
 6619 1295 6C080000 		.4byte	.LASF297
 6620 1299 01       		.byte	0x1
 6621 129a DE06     		.2byte	0x6de
 6622 129c F1070000 		.4byte	0x7f1
 6623 12a0 9F050000 		.4byte	.LLST41
 6624 12a4 1E       		.uleb128 0x1e
 6625 12a5 C2220000 		.4byte	.LASF266
 6626 12a9 01       		.byte	0x1
 6627 12aa DF06     		.2byte	0x6df
 6628 12ac 65120000 		.4byte	0x1265
 6629 12b0 E0050000 		.4byte	.LLST42
 6630 12b4 2A       		.uleb128 0x2a
 6631 12b5 2A240000 		.4byte	.LASF301
 6632 12b9 01       		.byte	0x1
 6633 12ba E006     		.2byte	0x6e0
 6634 12bc FC070000 		.4byte	0x7fc
 6635 12c0 2B       		.uleb128 0x2b
 6636 12c1 680A0000 		.4byte	0xa68
 6637 12c5 0E000000 		.4byte	.LBB23
 6638 12c9 14000000 		.4byte	.LBE23-.LBB23
 6639 12cd 01       		.byte	0x1
 6640 12ce F606     		.2byte	0x6f6
 6641 12d0 E9120000 		.4byte	0x12e9
 6642 12d4 2C       		.uleb128 0x2c
 6643 12d5 0E000000 		.4byte	.LBB24
 6644 12d9 14000000 		.4byte	.LBE24-.LBB24
 6645 12dd 2D       		.uleb128 0x2d
 6646 12de 780A0000 		.4byte	0xa78
 6647 12e2 2D       		.uleb128 0x2d
 6648 12e3 830A0000 		.4byte	0xa83
 6649 12e7 00       		.byte	0
 6650 12e8 00       		.byte	0
 6651 12e9 2B       		.uleb128 0x2b
 6652 12ea 8F0A0000 		.4byte	0xa8f
 6653 12ee 82000000 		.4byte	.LBB25
 6654 12f2 04000000 		.4byte	.LBE25-.LBB25
 6655 12f6 01       		.byte	0x1
 6656 12f7 1A07     		.2byte	0x71a
 6657 12f9 07130000 		.4byte	0x1307
 6658 12fd 2E       		.uleb128 0x2e
 6659 12fe 9B0A0000 		.4byte	0xa9b
 6660 1302 0C060000 		.4byte	.LLST43
 6661 1306 00       		.byte	0
 6662 1307 20       		.uleb128 0x20
 6663 1308 0E000000 		.4byte	.LVL116
 6664 130c 10250000 		.4byte	0x2510
 6665 1310 26       		.uleb128 0x26
 6666 1311 28000000 		.4byte	.LVL117
 6667 1315 A70A0000 		.4byte	0xaa7
 6668 1319 24130000 		.4byte	0x1324
 6669 131d 22       		.uleb128 0x22
 6670 131e 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 217


 6671 131f 50       		.byte	0x50
 6672 1320 02       		.uleb128 0x2
 6673 1321 74       		.byte	0x74
 6674 1322 00       		.sleb128 0
 6675 1323 00       		.byte	0
 6676 1324 26       		.uleb128 0x26
 6677 1325 4E000000 		.4byte	.LVL119
 6678 1329 ED240000 		.4byte	0x24ed
 6679 132d 38130000 		.4byte	0x1338
 6680 1331 22       		.uleb128 0x22
 6681 1332 01       		.uleb128 0x1
 6682 1333 50       		.byte	0x50
 6683 1334 02       		.uleb128 0x2
 6684 1335 76       		.byte	0x76
 6685 1336 00       		.sleb128 0
 6686 1337 00       		.byte	0
 6687 1338 26       		.uleb128 0x26
 6688 1339 70000000 		.4byte	.LVL120
 6689 133d D6240000 		.4byte	0x24d6
 6690 1341 4C130000 		.4byte	0x134c
 6691 1345 22       		.uleb128 0x22
 6692 1346 01       		.uleb128 0x1
 6693 1347 51       		.byte	0x51
 6694 1348 02       		.uleb128 0x2
 6695 1349 76       		.byte	0x76
 6696 134a 00       		.sleb128 0
 6697 134b 00       		.byte	0
 6698 134c 21       		.uleb128 0x21
 6699 134d 7C000000 		.4byte	.LVL122
 6700 1351 D6240000 		.4byte	0x24d6
 6701 1355 22       		.uleb128 0x22
 6702 1356 01       		.uleb128 0x1
 6703 1357 50       		.byte	0x50
 6704 1358 05       		.uleb128 0x5
 6705 1359 03       		.byte	0x3
 6706 135a 14000000 		.4byte	.LANCHOR0+20
 6707 135e 22       		.uleb128 0x22
 6708 135f 01       		.uleb128 0x1
 6709 1360 51       		.byte	0x51
 6710 1361 02       		.uleb128 0x2
 6711 1362 74       		.byte	0x74
 6712 1363 18       		.sleb128 24
 6713 1364 00       		.byte	0
 6714 1365 00       		.byte	0
 6715 1366 29       		.uleb128 0x29
 6716 1367 D51E0000 		.4byte	.LASF302
 6717 136b 01       		.byte	0x1
 6718 136c 2207     		.2byte	0x722
 6719 136e 00000000 		.4byte	.LFB534
 6720 1372 60000000 		.4byte	.LFE534-.LFB534
 6721 1376 01       		.uleb128 0x1
 6722 1377 9C       		.byte	0x9c
 6723 1378 DA130000 		.4byte	0x13da
 6724 137c 1E       		.uleb128 0x1e
 6725 137d 221E0000 		.4byte	.LASF265
 6726 1381 01       		.byte	0x1
 6727 1382 2407     		.2byte	0x724
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 218


 6728 1384 F1070000 		.4byte	0x7f1
 6729 1388 1F060000 		.4byte	.LLST44
 6730 138c 26       		.uleb128 0x26
 6731 138d 16000000 		.4byte	.LVL126
 6732 1391 3B0E0000 		.4byte	0xe3b
 6733 1395 C7130000 		.4byte	0x13c7
 6734 1399 22       		.uleb128 0x22
 6735 139a 01       		.uleb128 0x1
 6736 139b 50       		.byte	0x50
 6737 139c 05       		.uleb128 0x5
 6738 139d 03       		.byte	0x3
 6739 139e 00000000 		.4byte	prvIdleTask
 6740 13a2 22       		.uleb128 0x22
 6741 13a3 01       		.uleb128 0x1
 6742 13a4 51       		.byte	0x51
 6743 13a5 05       		.uleb128 0x5
 6744 13a6 03       		.byte	0x3
 6745 13a7 00000000 		.4byte	.LC0
 6746 13ab 22       		.uleb128 0x22
 6747 13ac 01       		.uleb128 0x1
 6748 13ad 52       		.byte	0x52
 6749 13ae 02       		.uleb128 0x2
 6750 13af 08       		.byte	0x8
 6751 13b0 80       		.byte	0x80
 6752 13b1 22       		.uleb128 0x22
 6753 13b2 01       		.uleb128 0x1
 6754 13b3 53       		.byte	0x53
 6755 13b4 01       		.uleb128 0x1
 6756 13b5 30       		.byte	0x30
 6757 13b6 22       		.uleb128 0x22
 6758 13b7 02       		.uleb128 0x2
 6759 13b8 7D       		.byte	0x7d
 6760 13b9 00       		.sleb128 0
 6761 13ba 01       		.uleb128 0x1
 6762 13bb 30       		.byte	0x30
 6763 13bc 22       		.uleb128 0x22
 6764 13bd 02       		.uleb128 0x2
 6765 13be 7D       		.byte	0x7d
 6766 13bf 04       		.sleb128 4
 6767 13c0 05       		.uleb128 0x5
 6768 13c1 03       		.byte	0x3
 6769 13c2 20020000 		.4byte	.LANCHOR0+544
 6770 13c6 00       		.byte	0
 6771 13c7 20       		.uleb128 0x20
 6772 13c8 1E000000 		.4byte	.LVL127
 6773 13cc 1B250000 		.4byte	0x251b
 6774 13d0 20       		.uleb128 0x20
 6775 13d1 3C000000 		.4byte	.LVL128
 6776 13d5 27250000 		.4byte	0x2527
 6777 13d9 00       		.byte	0
 6778 13da 29       		.uleb128 0x29
 6779 13db 910D0000 		.4byte	.LASF303
 6780 13df 01       		.byte	0x1
 6781 13e0 8D07     		.2byte	0x78d
 6782 13e2 00000000 		.4byte	.LFB535
 6783 13e6 18000000 		.4byte	.LFE535-.LFB535
 6784 13ea 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 219


 6785 13eb 9C       		.byte	0x9c
 6786 13ec FA130000 		.4byte	0x13fa
 6787 13f0 20       		.uleb128 0x20
 6788 13f1 10000000 		.4byte	.LVL131
 6789 13f5 32250000 		.4byte	0x2532
 6790 13f9 00       		.byte	0
 6791 13fa 2F       		.uleb128 0x2f
 6792 13fb 890B0000 		.4byte	.LASF345
 6793 13ff 01       		.byte	0x1
 6794 1400 9807     		.2byte	0x798
 6795 1402 00000000 		.4byte	.LFB536
 6796 1406 14000000 		.4byte	.LFE536-.LFB536
 6797 140a 01       		.uleb128 0x1
 6798 140b 9C       		.byte	0x9c
 6799 140c 27       		.uleb128 0x27
 6800 140d E1150000 		.4byte	.LASF304
 6801 1411 01       		.byte	0x1
 6802 1412 4F08     		.2byte	0x84f
 6803 1414 07080000 		.4byte	0x807
 6804 1418 00000000 		.4byte	.LFB538
 6805 141c 0C000000 		.4byte	.LFE538-.LFB538
 6806 1420 01       		.uleb128 0x1
 6807 1421 9C       		.byte	0x9c
 6808 1422 35140000 		.4byte	0x1435
 6809 1426 24       		.uleb128 0x24
 6810 1427 CE1E0000 		.4byte	.LASF305
 6811 142b 01       		.byte	0x1
 6812 142c 5108     		.2byte	0x851
 6813 142e 07080000 		.4byte	0x807
 6814 1432 01       		.uleb128 0x1
 6815 1433 50       		.byte	0x50
 6816 1434 00       		.byte	0
 6817 1435 27       		.uleb128 0x27
 6818 1436 240A0000 		.4byte	.LASF306
 6819 143a 01       		.byte	0x1
 6820 143b 5E08     		.2byte	0x85e
 6821 143d 07080000 		.4byte	0x807
 6822 1441 00000000 		.4byte	.LFB539
 6823 1445 14000000 		.4byte	.LFE539-.LFB539
 6824 1449 01       		.uleb128 0x1
 6825 144a 9C       		.byte	0x9c
 6826 144b 74140000 		.4byte	0x1474
 6827 144f 24       		.uleb128 0x24
 6828 1450 221E0000 		.4byte	.LASF265
 6829 1454 01       		.byte	0x1
 6830 1455 6008     		.2byte	0x860
 6831 1457 07080000 		.4byte	0x807
 6832 145b 01       		.uleb128 0x1
 6833 145c 50       		.byte	0x50
 6834 145d 30       		.uleb128 0x30
 6835 145e 2A240000 		.4byte	.LASF301
 6836 1462 01       		.byte	0x1
 6837 1463 6108     		.2byte	0x861
 6838 1465 FC070000 		.4byte	0x7fc
 6839 1469 00       		.byte	0
 6840 146a 20       		.uleb128 0x20
 6841 146b 06000000 		.4byte	.LVL133
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 220


 6842 146f 10250000 		.4byte	0x2510
 6843 1473 00       		.byte	0
 6844 1474 31       		.uleb128 0x31
 6845 1475 86020000 		.4byte	.LASF424
 6846 1479 01       		.byte	0x1
 6847 147a 7D08     		.2byte	0x87d
 6848 147c FC070000 		.4byte	0x7fc
 6849 1480 00000000 		.4byte	.LFB540
 6850 1484 0C000000 		.4byte	.LFE540-.LFB540
 6851 1488 01       		.uleb128 0x1
 6852 1489 9C       		.byte	0x9c
 6853 148a 27       		.uleb128 0x27
 6854 148b 9B1E0000 		.4byte	.LASF307
 6855 148f 01       		.byte	0x1
 6856 1490 8508     		.2byte	0x885
 6857 1492 B2000000 		.4byte	0xb2
 6858 1496 00000000 		.4byte	.LFB541
 6859 149a 1C000000 		.4byte	.LFE541-.LFB541
 6860 149e 01       		.uleb128 0x1
 6861 149f 9C       		.byte	0x9c
 6862 14a0 C3140000 		.4byte	0x14c3
 6863 14a4 1D       		.uleb128 0x1d
 6864 14a5 21180000 		.4byte	.LASF308
 6865 14a9 01       		.byte	0x1
 6866 14aa 8508     		.2byte	0x885
 6867 14ac FA080000 		.4byte	0x8fa
 6868 14b0 48060000 		.4byte	.LLST45
 6869 14b4 24       		.uleb128 0x24
 6870 14b5 C2220000 		.4byte	.LASF266
 6871 14b9 01       		.byte	0x1
 6872 14ba 8708     		.2byte	0x887
 6873 14bc 2E0B0000 		.4byte	0xb2e
 6874 14c0 01       		.uleb128 0x1
 6875 14c1 53       		.byte	0x53
 6876 14c2 00       		.byte	0
 6877 14c3 27       		.uleb128 0x27
 6878 14c4 1B050000 		.4byte	.LASF309
 6879 14c8 01       		.byte	0x1
 6880 14c9 C309     		.2byte	0x9c3
 6881 14cb F1070000 		.4byte	0x7f1
 6882 14cf 00000000 		.4byte	.LFB542
 6883 14d3 F0000000 		.4byte	.LFE542-.LFB542
 6884 14d7 01       		.uleb128 0x1
 6885 14d8 9C       		.byte	0x9c
 6886 14d9 83150000 		.4byte	0x1583
 6887 14dd 1E       		.uleb128 0x1e
 6888 14de C2220000 		.4byte	.LASF266
 6889 14e2 01       		.byte	0x1
 6890 14e3 C509     		.2byte	0x9c5
 6891 14e5 2E0B0000 		.4byte	0xb2e
 6892 14e9 5B060000 		.4byte	.LLST46
 6893 14ed 1E       		.uleb128 0x1e
 6894 14ee 181B0000 		.4byte	.LASF222
 6895 14f2 01       		.byte	0x1
 6896 14f3 C609     		.2byte	0x9c6
 6897 14f5 07080000 		.4byte	0x807
 6898 14f9 79060000 		.4byte	.LLST47
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 221


 6899 14fd 1E       		.uleb128 0x1e
 6900 14fe A61B0000 		.4byte	.LASF310
 6901 1502 01       		.byte	0x1
 6902 1503 C709     		.2byte	0x9c7
 6903 1505 F1070000 		.4byte	0x7f1
 6904 1509 8C060000 		.4byte	.LLST48
 6905 150d 32       		.uleb128 0x32
 6906 150e 00000000 		.4byte	.Ldebug_ranges0+0
 6907 1512 1E       		.uleb128 0x1e
 6908 1513 BD070000 		.4byte	.LASF284
 6909 1517 01       		.byte	0x1
 6910 1518 D109     		.2byte	0x9d1
 6911 151a 360E0000 		.4byte	0xe36
 6912 151e E4060000 		.4byte	.LLST49
 6913 1522 28       		.uleb128 0x28
 6914 1523 1C000000 		.4byte	.LBB28
 6915 1527 26000000 		.4byte	.LBE28-.LBB28
 6916 152b 49150000 		.4byte	0x1549
 6917 152f 1E       		.uleb128 0x1e
 6918 1530 210B0000 		.4byte	.LASF311
 6919 1534 01       		.byte	0x1
 6920 1535 D909     		.2byte	0x9d9
 6921 1537 83150000 		.4byte	0x1583
 6922 153b F7060000 		.4byte	.LLST50
 6923 153f 20       		.uleb128 0x20
 6924 1540 42000000 		.4byte	.LVL142
 6925 1544 070B0000 		.4byte	0xb07
 6926 1548 00       		.byte	0
 6927 1549 26       		.uleb128 0x26
 6928 154a 8C000000 		.4byte	.LVL149
 6929 154e ED240000 		.4byte	0x24ed
 6930 1552 5D150000 		.4byte	0x155d
 6931 1556 22       		.uleb128 0x22
 6932 1557 01       		.uleb128 0x1
 6933 1558 50       		.byte	0x50
 6934 1559 02       		.uleb128 0x2
 6935 155a 78       		.byte	0x78
 6936 155b 00       		.sleb128 0
 6937 155c 00       		.byte	0
 6938 155d 26       		.uleb128 0x26
 6939 155e 98000000 		.4byte	.LVL150
 6940 1562 ED240000 		.4byte	0x24ed
 6941 1566 71150000 		.4byte	0x1571
 6942 156a 22       		.uleb128 0x22
 6943 156b 01       		.uleb128 0x1
 6944 156c 50       		.byte	0x50
 6945 156d 02       		.uleb128 0x2
 6946 156e 75       		.byte	0x75
 6947 156f 18       		.sleb128 24
 6948 1570 00       		.byte	0
 6949 1571 21       		.uleb128 0x21
 6950 1572 BE000000 		.4byte	.LVL151
 6951 1576 D6240000 		.4byte	0x24d6
 6952 157a 22       		.uleb128 0x22
 6953 157b 01       		.uleb128 0x1
 6954 157c 51       		.byte	0x51
 6955 157d 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 222


 6956 157e 78       		.byte	0x78
 6957 157f 00       		.sleb128 0
 6958 1580 00       		.byte	0
 6959 1581 00       		.byte	0
 6960 1582 00       		.byte	0
 6961 1583 06       		.uleb128 0x6
 6962 1584 04       		.byte	0x4
 6963 1585 EF080000 		.4byte	0x8ef
 6964 1589 27       		.uleb128 0x27
 6965 158a DC190000 		.4byte	.LASF312
 6966 158e 01       		.byte	0x1
 6967 158f E107     		.2byte	0x7e1
 6968 1591 F1070000 		.4byte	0x7f1
 6969 1595 00000000 		.4byte	.LFB537
 6970 1599 E4000000 		.4byte	.LFE537-.LFB537
 6971 159d 01       		.uleb128 0x1
 6972 159e 9C       		.byte	0x9c
 6973 159f 42160000 		.4byte	0x1642
 6974 15a3 1E       		.uleb128 0x1e
 6975 15a4 C2220000 		.4byte	.LASF266
 6976 15a8 01       		.byte	0x1
 6977 15a9 E307     		.2byte	0x7e3
 6978 15ab 2E0B0000 		.4byte	0xb2e
 6979 15af 19070000 		.4byte	.LLST51
 6980 15b3 1E       		.uleb128 0x1e
 6981 15b4 F8200000 		.4byte	.LASF313
 6982 15b8 01       		.byte	0x1
 6983 15b9 E407     		.2byte	0x7e4
 6984 15bb F1070000 		.4byte	0x7f1
 6985 15bf 5B070000 		.4byte	.LLST52
 6986 15c3 28       		.uleb128 0x28
 6987 15c4 8E000000 		.4byte	.LBB30
 6988 15c8 22000000 		.4byte	.LBE30-.LBB30
 6989 15cc EA150000 		.4byte	0x15ea
 6990 15d0 1E       		.uleb128 0x1e
 6991 15d1 04020000 		.4byte	.LASF314
 6992 15d5 01       		.byte	0x1
 6993 15d6 1C08     		.2byte	0x81c
 6994 15d8 FC070000 		.4byte	0x7fc
 6995 15dc 9D070000 		.4byte	.LLST53
 6996 15e0 20       		.uleb128 0x20
 6997 15e1 9A000000 		.4byte	.LVL167
 6998 15e5 C3140000 		.4byte	0x14c3
 6999 15e9 00       		.byte	0
 7000 15ea 20       		.uleb128 0x20
 7001 15eb 12000000 		.4byte	.LVL157
 7002 15ef CB240000 		.4byte	0x24cb
 7003 15f3 26       		.uleb128 0x26
 7004 15f4 40000000 		.4byte	.LVL160
 7005 15f8 ED240000 		.4byte	0x24ed
 7006 15fc 07160000 		.4byte	0x1607
 7007 1600 22       		.uleb128 0x22
 7008 1601 01       		.uleb128 0x1
 7009 1602 50       		.byte	0x50
 7010 1603 02       		.uleb128 0x2
 7011 1604 74       		.byte	0x74
 7012 1605 18       		.sleb128 24
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 223


 7013 1606 00       		.byte	0
 7014 1607 26       		.uleb128 0x26
 7015 1608 48000000 		.4byte	.LVL161
 7016 160c ED240000 		.4byte	0x24ed
 7017 1610 1B160000 		.4byte	0x161b
 7018 1614 22       		.uleb128 0x22
 7019 1615 01       		.uleb128 0x1
 7020 1616 50       		.byte	0x50
 7021 1617 02       		.uleb128 0x2
 7022 1618 76       		.byte	0x76
 7023 1619 00       		.sleb128 0
 7024 161a 00       		.byte	0
 7025 161b 26       		.uleb128 0x26
 7026 161c 6A000000 		.4byte	.LVL162
 7027 1620 D6240000 		.4byte	0x24d6
 7028 1624 2F160000 		.4byte	0x162f
 7029 1628 22       		.uleb128 0x22
 7030 1629 01       		.uleb128 0x1
 7031 162a 51       		.byte	0x51
 7032 162b 02       		.uleb128 0x2
 7033 162c 76       		.byte	0x76
 7034 162d 00       		.sleb128 0
 7035 162e 00       		.byte	0
 7036 162f 20       		.uleb128 0x20
 7037 1630 8E000000 		.4byte	.LVL165
 7038 1634 070B0000 		.4byte	0xb07
 7039 1638 20       		.uleb128 0x20
 7040 1639 D6000000 		.4byte	.LVL175
 7041 163d E2240000 		.4byte	0x24e2
 7042 1641 00       		.byte	0
 7043 1642 29       		.uleb128 0x29
 7044 1643 30200000 		.4byte	.LASF315
 7045 1647 01       		.byte	0x1
 7046 1648 7404     		.2byte	0x474
 7047 164a 00000000 		.4byte	.LFB525
 7048 164e 84000000 		.4byte	.LFE525-.LFB525
 7049 1652 01       		.uleb128 0x1
 7050 1653 9C       		.byte	0x9c
 7051 1654 E2160000 		.4byte	0x16e2
 7052 1658 1D       		.uleb128 0x1d
 7053 1659 EB1C0000 		.4byte	.LASF316
 7054 165d 01       		.byte	0x1
 7055 165e 7404     		.2byte	0x474
 7056 1660 E8160000 		.4byte	0x16e8
 7057 1664 D3070000 		.4byte	.LLST54
 7058 1668 1D       		.uleb128 0x1d
 7059 1669 30220000 		.4byte	.LASF317
 7060 166d 01       		.byte	0x1
 7061 166e 7404     		.2byte	0x474
 7062 1670 360E0000 		.4byte	0xe36
 7063 1674 FF070000 		.4byte	.LLST55
 7064 1678 1E       		.uleb128 0x1e
 7065 1679 5E220000 		.4byte	.LASF283
 7066 167d 01       		.byte	0x1
 7067 167e 7604     		.2byte	0x476
 7068 1680 07080000 		.4byte	0x807
 7069 1684 2B080000 		.4byte	.LLST56
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 224


 7070 1688 24       		.uleb128 0x24
 7071 1689 F8200000 		.4byte	.LASF313
 7072 168d 01       		.byte	0x1
 7073 168e 7704     		.2byte	0x477
 7074 1690 F1070000 		.4byte	0x7f1
 7075 1694 01       		.uleb128 0x1
 7076 1695 50       		.byte	0x50
 7077 1696 1E       		.uleb128 0x1e
 7078 1697 D2100000 		.4byte	.LASF318
 7079 169b 01       		.byte	0x1
 7080 169c 7704     		.2byte	0x477
 7081 169e F1070000 		.4byte	0x7f1
 7082 16a2 3E080000 		.4byte	.LLST57
 7083 16a6 33       		.uleb128 0x33
 7084 16a7 18000000 		.4byte	.Ldebug_ranges0+0x18
 7085 16ab CF160000 		.4byte	0x16cf
 7086 16af 1E       		.uleb128 0x1e
 7087 16b0 BD070000 		.4byte	.LASF284
 7088 16b4 01       		.byte	0x1
 7089 16b5 8104     		.2byte	0x481
 7090 16b7 360E0000 		.4byte	0xe36
 7091 16bb 5D080000 		.4byte	.LLST58
 7092 16bf 21       		.uleb128 0x21
 7093 16c0 62000000 		.4byte	.LVL183
 7094 16c4 A80D0000 		.4byte	0xda8
 7095 16c8 22       		.uleb128 0x22
 7096 16c9 01       		.uleb128 0x1
 7097 16ca 51       		.byte	0x51
 7098 16cb 01       		.uleb128 0x1
 7099 16cc 30       		.byte	0x30
 7100 16cd 00       		.byte	0
 7101 16ce 00       		.byte	0
 7102 16cf 20       		.uleb128 0x20
 7103 16d0 22000000 		.4byte	.LVL178
 7104 16d4 FA130000 		.4byte	0x13fa
 7105 16d8 20       		.uleb128 0x20
 7106 16d9 66000000 		.4byte	.LVL184
 7107 16dd 89150000 		.4byte	0x1589
 7108 16e1 00       		.byte	0
 7109 16e2 06       		.uleb128 0x6
 7110 16e3 04       		.byte	0x4
 7111 16e4 07080000 		.4byte	0x807
 7112 16e8 07       		.uleb128 0x7
 7113 16e9 E2160000 		.4byte	0x16e2
 7114 16ed 29       		.uleb128 0x29
 7115 16ee E40E0000 		.4byte	.LASF319
 7116 16f2 01       		.byte	0x1
 7117 16f3 C804     		.2byte	0x4c8
 7118 16f5 00000000 		.4byte	.LFB526
 7119 16f9 44000000 		.4byte	.LFE526-.LFB526
 7120 16fd 01       		.uleb128 0x1
 7121 16fe 9C       		.byte	0x9c
 7122 16ff 4F170000 		.4byte	0x174f
 7123 1703 1D       		.uleb128 0x1d
 7124 1704 211F0000 		.4byte	.LASF320
 7125 1708 01       		.byte	0x1
 7126 1709 C804     		.2byte	0x4c8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 225


 7127 170b 360E0000 		.4byte	0xe36
 7128 170f 70080000 		.4byte	.LLST59
 7129 1713 1E       		.uleb128 0x1e
 7130 1714 F8200000 		.4byte	.LASF313
 7131 1718 01       		.byte	0x1
 7132 1719 CA04     		.2byte	0x4ca
 7133 171b F1070000 		.4byte	0x7f1
 7134 171f A7080000 		.4byte	.LLST60
 7135 1723 20       		.uleb128 0x20
 7136 1724 16000000 		.4byte	.LVL188
 7137 1728 FA130000 		.4byte	0x13fa
 7138 172c 26       		.uleb128 0x26
 7139 172d 1E000000 		.4byte	.LVL189
 7140 1731 A80D0000 		.4byte	0xda8
 7141 1735 45170000 		.4byte	0x1745
 7142 1739 22       		.uleb128 0x22
 7143 173a 01       		.uleb128 0x1
 7144 173b 50       		.byte	0x50
 7145 173c 02       		.uleb128 0x2
 7146 173d 74       		.byte	0x74
 7147 173e 00       		.sleb128 0
 7148 173f 22       		.uleb128 0x22
 7149 1740 01       		.uleb128 0x1
 7150 1741 51       		.byte	0x51
 7151 1742 01       		.uleb128 0x1
 7152 1743 30       		.byte	0x30
 7153 1744 00       		.byte	0
 7154 1745 20       		.uleb128 0x20
 7155 1746 22000000 		.4byte	.LVL190
 7156 174a 89150000 		.4byte	0x1589
 7157 174e 00       		.byte	0
 7158 174f 1F       		.uleb128 0x1f
 7159 1750 0A240000 		.4byte	.LASF321
 7160 1754 01       		.byte	0x1
 7161 1755 300D     		.2byte	0xd30
 7162 1757 00000000 		.4byte	.LFB556
 7163 175b 54000000 		.4byte	.LFE556-.LFB556
 7164 175f 01       		.uleb128 0x1
 7165 1760 9C       		.byte	0x9c
 7166 1761 E6170000 		.4byte	0x17e6
 7167 1765 2C       		.uleb128 0x2c
 7168 1766 02000000 		.4byte	.LBB34
 7169 176a 4C000000 		.4byte	.LBE34-.LBB34
 7170 176e 1E       		.uleb128 0x1e
 7171 176f 36110000 		.4byte	.LASF322
 7172 1773 01       		.byte	0x1
 7173 1774 370D     		.2byte	0xd37
 7174 1776 F1070000 		.4byte	0x7f1
 7175 177a DD080000 		.4byte	.LLST61
 7176 177e 28       		.uleb128 0x28
 7177 177f 14000000 		.4byte	.LBB35
 7178 1783 30000000 		.4byte	.LBE35-.LBB35
 7179 1787 D2170000 		.4byte	0x17d2
 7180 178b 1E       		.uleb128 0x1e
 7181 178c C2220000 		.4byte	.LASF266
 7182 1790 01       		.byte	0x1
 7183 1791 450D     		.2byte	0xd45
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 226


 7184 1793 2E0B0000 		.4byte	0xb2e
 7185 1797 F7080000 		.4byte	.LLST62
 7186 179b 20       		.uleb128 0x20
 7187 179c 18000000 		.4byte	.LVL196
 7188 17a0 CB240000 		.4byte	0x24cb
 7189 17a4 26       		.uleb128 0x26
 7190 17a5 26000000 		.4byte	.LVL199
 7191 17a9 ED240000 		.4byte	0x24ed
 7192 17ad B8170000 		.4byte	0x17b8
 7193 17b1 22       		.uleb128 0x22
 7194 17b2 01       		.uleb128 0x1
 7195 17b3 50       		.byte	0x50
 7196 17b4 02       		.uleb128 0x2
 7197 17b5 75       		.byte	0x75
 7198 17b6 04       		.sleb128 4
 7199 17b7 00       		.byte	0
 7200 17b8 20       		.uleb128 0x20
 7201 17b9 3E000000 		.4byte	.LVL200
 7202 17bd E2240000 		.4byte	0x24e2
 7203 17c1 21       		.uleb128 0x21
 7204 17c2 44000000 		.4byte	.LVL201
 7205 17c6 340B0000 		.4byte	0xb34
 7206 17ca 22       		.uleb128 0x22
 7207 17cb 01       		.uleb128 0x1
 7208 17cc 50       		.byte	0x50
 7209 17cd 02       		.uleb128 0x2
 7210 17ce 75       		.byte	0x75
 7211 17cf 00       		.sleb128 0
 7212 17d0 00       		.byte	0
 7213 17d1 00       		.byte	0
 7214 17d2 20       		.uleb128 0x20
 7215 17d3 08000000 		.4byte	.LVL193
 7216 17d7 FA130000 		.4byte	0x13fa
 7217 17db 20       		.uleb128 0x20
 7218 17dc 12000000 		.4byte	.LVL195
 7219 17e0 89150000 		.4byte	0x1589
 7220 17e4 00       		.byte	0
 7221 17e5 00       		.byte	0
 7222 17e6 34       		.uleb128 0x34
 7223 17e7 FF100000 		.4byte	.LASF324
 7224 17eb 01       		.byte	0x1
 7225 17ec 460C     		.2byte	0xc46
 7226 17ee 00000000 		.4byte	.LFB552
 7227 17f2 2C000000 		.4byte	.LFE552-.LFB552
 7228 17f6 01       		.uleb128 0x1
 7229 17f7 9C       		.byte	0x9c
 7230 17f8 35180000 		.4byte	0x1835
 7231 17fc 1D       		.uleb128 0x1d
 7232 17fd 0B1B0000 		.4byte	.LASF274
 7233 1801 01       		.byte	0x1
 7234 1802 460C     		.2byte	0xc46
 7235 1804 B0000000 		.4byte	0xb0
 7236 1808 0A090000 		.4byte	.LLST63
 7237 180c 28       		.uleb128 0x28
 7238 180d 1E000000 		.4byte	.LBB36
 7239 1811 04000000 		.4byte	.LBE36-.LBB36
 7240 1815 2B180000 		.4byte	0x182b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 227


 7241 1819 35       		.uleb128 0x35
 7242 181a 28060000 		.4byte	.LASF416
 7243 181e 01       		.byte	0x1
 7244 181f 760C     		.2byte	0xc76
 7245 1821 20       		.uleb128 0x20
 7246 1822 22000000 		.4byte	.LVL205
 7247 1826 3D250000 		.4byte	0x253d
 7248 182a 00       		.byte	0
 7249 182b 20       		.uleb128 0x20
 7250 182c 06000000 		.4byte	.LVL204
 7251 1830 4F170000 		.4byte	0x174f
 7252 1834 00       		.byte	0
 7253 1835 29       		.uleb128 0x29
 7254 1836 DB180000 		.4byte	.LASF325
 7255 183a 01       		.byte	0x1
 7256 183b C90A     		.2byte	0xac9
 7257 183d 00000000 		.4byte	.LFB543
 7258 1841 BC000000 		.4byte	.LFE543-.LFB543
 7259 1845 01       		.uleb128 0x1
 7260 1846 9C       		.byte	0x9c
 7261 1847 BE180000 		.4byte	0x18be
 7262 184b 28       		.uleb128 0x28
 7263 184c 1C000000 		.4byte	.LBB37
 7264 1850 36000000 		.4byte	.LBE37-.LBB37
 7265 1854 83180000 		.4byte	0x1883
 7266 1858 1E       		.uleb128 0x1e
 7267 1859 FF1E0000 		.4byte	.LASF326
 7268 185d 01       		.byte	0x1
 7269 185e F30A     		.2byte	0xaf3
 7270 1860 C4180000 		.4byte	0x18c4
 7271 1864 2B090000 		.4byte	.LLST64
 7272 1868 36       		.uleb128 0x36
 7273 1869 7F140000 		.4byte	.LASF327
 7274 186d 01       		.byte	0x1
 7275 186e F40A     		.2byte	0xaf4
 7276 1870 840C0000 		.4byte	0xc84
 7277 1874 A5CB96AD 		.sleb128 -1515870811
 7277      7A
 7278 1879 20       		.uleb128 0x20
 7279 187a 52000000 		.4byte	.LVL208
 7280 187e 49250000 		.4byte	0x2549
 7281 1882 00       		.byte	0
 7282 1883 2C       		.uleb128 0x2c
 7283 1884 52000000 		.4byte	.LBB38
 7284 1888 6A000000 		.4byte	.LBE38-.LBB38
 7285 188c 24       		.uleb128 0x24
 7286 188d F01F0000 		.4byte	.LASF328
 7287 1891 01       		.byte	0x1
 7288 1892 010B     		.2byte	0xb01
 7289 1894 FC070000 		.4byte	0x7fc
 7290 1898 01       		.uleb128 0x1
 7291 1899 53       		.byte	0x53
 7292 189a 2C       		.uleb128 0x2c
 7293 189b 72000000 		.4byte	.LBB39
 7294 189f 3E000000 		.4byte	.LBE39-.LBB39
 7295 18a3 24       		.uleb128 0x24
 7296 18a4 C5010000 		.4byte	.LASF329
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 228


 7297 18a8 01       		.byte	0x1
 7298 18a9 010B     		.2byte	0xb01
 7299 18ab C9180000 		.4byte	0x18c9
 7300 18af 0B       		.uleb128 0xb
 7301 18b0 73       		.byte	0x73
 7302 18b1 00       		.sleb128 0
 7303 18b2 44       		.byte	0x44
 7304 18b3 1E       		.byte	0x1e
 7305 18b4 03       		.byte	0x3
 7306 18b5 30000000 		.4byte	pxReadyTasksLists
 7307 18b9 22       		.byte	0x22
 7308 18ba 9F       		.byte	0x9f
 7309 18bb 00       		.byte	0
 7310 18bc 00       		.byte	0
 7311 18bd 00       		.byte	0
 7312 18be 06       		.uleb128 0x6
 7313 18bf 04       		.byte	0x4
 7314 18c0 840C0000 		.4byte	0xc84
 7315 18c4 07       		.uleb128 0x7
 7316 18c5 BE180000 		.4byte	0x18be
 7317 18c9 07       		.uleb128 0x7
 7318 18ca 83150000 		.4byte	0x1583
 7319 18ce 29       		.uleb128 0x29
 7320 18cf EB200000 		.4byte	.LASF330
 7321 18d3 01       		.byte	0x1
 7322 18d4 1E06     		.2byte	0x61e
 7323 18d6 00000000 		.4byte	.LFB530
 7324 18da 98000000 		.4byte	.LFE530-.LFB530
 7325 18de 01       		.uleb128 0x1
 7326 18df 9C       		.byte	0x9c
 7327 18e0 7D190000 		.4byte	0x197d
 7328 18e4 1D       		.uleb128 0x1d
 7329 18e5 0D1C0000 		.4byte	.LASF331
 7330 18e9 01       		.byte	0x1
 7331 18ea 1E06     		.2byte	0x61e
 7332 18ec FA080000 		.4byte	0x8fa
 7333 18f0 3E090000 		.4byte	.LLST65
 7334 18f4 1E       		.uleb128 0x1e
 7335 18f5 C2220000 		.4byte	.LASF266
 7336 18f9 01       		.byte	0x1
 7337 18fa 2006     		.2byte	0x620
 7338 18fc 2E0B0000 		.4byte	0xb2e
 7339 1900 5C090000 		.4byte	.LLST66
 7340 1904 20       		.uleb128 0x20
 7341 1905 08000000 		.4byte	.LVL213
 7342 1909 CB240000 		.4byte	0x24cb
 7343 190d 26       		.uleb128 0x26
 7344 190e 18000000 		.4byte	.LVL215
 7345 1912 ED240000 		.4byte	0x24ed
 7346 1916 21190000 		.4byte	0x1921
 7347 191a 22       		.uleb128 0x22
 7348 191b 01       		.uleb128 0x1
 7349 191c 50       		.byte	0x50
 7350 191d 02       		.uleb128 0x2
 7351 191e 76       		.byte	0x76
 7352 191f 00       		.sleb128 0
 7353 1920 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 229


 7354 1921 26       		.uleb128 0x26
 7355 1922 24000000 		.4byte	.LVL216
 7356 1926 ED240000 		.4byte	0x24ed
 7357 192a 35190000 		.4byte	0x1935
 7358 192e 22       		.uleb128 0x22
 7359 192f 01       		.uleb128 0x1
 7360 1930 50       		.byte	0x50
 7361 1931 02       		.uleb128 0x2
 7362 1932 74       		.byte	0x74
 7363 1933 18       		.sleb128 24
 7364 1934 00       		.byte	0
 7365 1935 26       		.uleb128 0x26
 7366 1936 2E000000 		.4byte	.LVL217
 7367 193a D6240000 		.4byte	0x24d6
 7368 193e 4F190000 		.4byte	0x194f
 7369 1942 22       		.uleb128 0x22
 7370 1943 01       		.uleb128 0x1
 7371 1944 50       		.byte	0x50
 7372 1945 02       		.uleb128 0x2
 7373 1946 75       		.byte	0x75
 7374 1947 00       		.sleb128 0
 7375 1948 22       		.uleb128 0x22
 7376 1949 01       		.uleb128 0x1
 7377 194a 51       		.byte	0x51
 7378 194b 02       		.uleb128 0x2
 7379 194c 76       		.byte	0x76
 7380 194d 00       		.sleb128 0
 7381 194e 00       		.byte	0
 7382 194f 20       		.uleb128 0x20
 7383 1950 32000000 		.4byte	.LVL218
 7384 1954 E2240000 		.4byte	0x24e2
 7385 1958 20       		.uleb128 0x20
 7386 1959 3C000000 		.4byte	.LVL219
 7387 195d CB240000 		.4byte	0x24cb
 7388 1961 20       		.uleb128 0x20
 7389 1962 40000000 		.4byte	.LVL220
 7390 1966 070B0000 		.4byte	0xb07
 7391 196a 20       		.uleb128 0x20
 7392 196b 44000000 		.4byte	.LVL221
 7393 196f E2240000 		.4byte	0x24e2
 7394 1973 20       		.uleb128 0x20
 7395 1974 8E000000 		.4byte	.LVL224
 7396 1978 35180000 		.4byte	0x1835
 7397 197c 00       		.byte	0
 7398 197d 29       		.uleb128 0x29
 7399 197e CE0E0000 		.4byte	.LASF332
 7400 1982 01       		.byte	0x1
 7401 1983 0F0B     		.2byte	0xb0f
 7402 1985 00000000 		.4byte	.LFB544
 7403 1989 24000000 		.4byte	.LFE544-.LFB544
 7404 198d 01       		.uleb128 0x1
 7405 198e 9C       		.byte	0x9c
 7406 198f D2190000 		.4byte	0x19d2
 7407 1993 1D       		.uleb128 0x1d
 7408 1994 09030000 		.4byte	.LASF333
 7409 1998 01       		.byte	0x1
 7410 1999 0F0B     		.2byte	0xb0f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 230


 7411 199b C9180000 		.4byte	0x18c9
 7412 199f 6F090000 		.4byte	.LLST67
 7413 19a3 1D       		.uleb128 0x1d
 7414 19a4 CB200000 		.4byte	.LASF281
 7415 19a8 01       		.byte	0x1
 7416 19a9 0F0B     		.2byte	0xb0f
 7417 19ab 360E0000 		.4byte	0xe36
 7418 19af 90090000 		.4byte	.LLST68
 7419 19b3 20       		.uleb128 0x20
 7420 19b4 16000000 		.4byte	.LVL228
 7421 19b8 F9240000 		.4byte	0x24f9
 7422 19bc 21       		.uleb128 0x21
 7423 19bd 1E000000 		.4byte	.LVL229
 7424 19c1 A80D0000 		.4byte	0xda8
 7425 19c5 22       		.uleb128 0x22
 7426 19c6 01       		.uleb128 0x1
 7427 19c7 50       		.byte	0x50
 7428 19c8 02       		.uleb128 0x2
 7429 19c9 74       		.byte	0x74
 7430 19ca 00       		.sleb128 0
 7431 19cb 22       		.uleb128 0x22
 7432 19cc 01       		.uleb128 0x1
 7433 19cd 51       		.byte	0x51
 7434 19ce 01       		.uleb128 0x1
 7435 19cf 31       		.byte	0x31
 7436 19d0 00       		.byte	0
 7437 19d1 00       		.byte	0
 7438 19d2 29       		.uleb128 0x29
 7439 19d3 3A1F0000 		.4byte	.LASF334
 7440 19d7 01       		.byte	0x1
 7441 19d8 200B     		.2byte	0xb20
 7442 19da 00000000 		.4byte	.LFB545
 7443 19de 40000000 		.4byte	.LFE545-.LFB545
 7444 19e2 01       		.uleb128 0x1
 7445 19e3 9C       		.byte	0x9c
 7446 19e4 431A0000 		.4byte	0x1a43
 7447 19e8 1D       		.uleb128 0x1d
 7448 19e9 09030000 		.4byte	.LASF333
 7449 19ed 01       		.byte	0x1
 7450 19ee 200B     		.2byte	0xb20
 7451 19f0 83150000 		.4byte	0x1583
 7452 19f4 BC090000 		.4byte	.LLST69
 7453 19f8 1D       		.uleb128 0x1d
 7454 19f9 181B0000 		.4byte	.LASF222
 7455 19fd 01       		.byte	0x1
 7456 19fe 200B     		.2byte	0xb20
 7457 1a00 360E0000 		.4byte	0xe36
 7458 1a04 F3090000 		.4byte	.LLST70
 7459 1a08 1D       		.uleb128 0x1d
 7460 1a09 CB200000 		.4byte	.LASF281
 7461 1a0d 01       		.byte	0x1
 7462 1a0e 200B     		.2byte	0xb20
 7463 1a10 360E0000 		.4byte	0xe36
 7464 1a14 1F0A0000 		.4byte	.LLST71
 7465 1a18 26       		.uleb128 0x26
 7466 1a19 32000000 		.4byte	.LVL237
 7467 1a1d D6240000 		.4byte	0x24d6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 231


 7468 1a21 2D1A0000 		.4byte	0x1a2d
 7469 1a25 22       		.uleb128 0x22
 7470 1a26 01       		.uleb128 0x1
 7471 1a27 50       		.byte	0x50
 7472 1a28 03       		.uleb128 0x3
 7473 1a29 F3       		.byte	0xf3
 7474 1a2a 01       		.uleb128 0x1
 7475 1a2b 50       		.byte	0x50
 7476 1a2c 00       		.byte	0
 7477 1a2d 21       		.uleb128 0x21
 7478 1a2e 3A000000 		.4byte	.LVL238
 7479 1a32 A80D0000 		.4byte	0xda8
 7480 1a36 22       		.uleb128 0x22
 7481 1a37 01       		.uleb128 0x1
 7482 1a38 50       		.byte	0x50
 7483 1a39 02       		.uleb128 0x2
 7484 1a3a 74       		.byte	0x74
 7485 1a3b 00       		.sleb128 0
 7486 1a3c 22       		.uleb128 0x22
 7487 1a3d 01       		.uleb128 0x1
 7488 1a3e 51       		.byte	0x51
 7489 1a3f 01       		.uleb128 0x1
 7490 1a40 31       		.byte	0x31
 7491 1a41 00       		.byte	0
 7492 1a42 00       		.byte	0
 7493 1a43 29       		.uleb128 0x29
 7494 1a44 E4110000 		.4byte	.LASF335
 7495 1a48 01       		.byte	0x1
 7496 1a49 3A0B     		.2byte	0xb3a
 7497 1a4b 00000000 		.4byte	.LFB546
 7498 1a4f 2C000000 		.4byte	.LFE546-.LFB546
 7499 1a53 01       		.uleb128 0x1
 7500 1a54 9C       		.byte	0x9c
 7501 1a55 A91A0000 		.4byte	0x1aa9
 7502 1a59 1D       		.uleb128 0x1d
 7503 1a5a 09030000 		.4byte	.LASF333
 7504 1a5e 01       		.byte	0x1
 7505 1a5f 3A0B     		.2byte	0xb3a
 7506 1a61 C9180000 		.4byte	0x18c9
 7507 1a65 4B0A0000 		.4byte	.LLST72
 7508 1a69 1D       		.uleb128 0x1d
 7509 1a6a CB200000 		.4byte	.LASF281
 7510 1a6e 01       		.byte	0x1
 7511 1a6f 3A0B     		.2byte	0xb3a
 7512 1a71 07080000 		.4byte	0x807
 7513 1a75 6C0A0000 		.4byte	.LLST73
 7514 1a79 1D       		.uleb128 0x1d
 7515 1a7a F10C0000 		.4byte	.LASF336
 7516 1a7e 01       		.byte	0x1
 7517 1a7f 3A0B     		.2byte	0xb3a
 7518 1a81 310E0000 		.4byte	0xe31
 7519 1a85 8A0A0000 		.4byte	.LLST74
 7520 1a89 20       		.uleb128 0x20
 7521 1a8a 18000000 		.4byte	.LVL243
 7522 1a8e D6240000 		.4byte	0x24d6
 7523 1a92 21       		.uleb128 0x21
 7524 1a93 26000000 		.4byte	.LVL245
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 232


 7525 1a97 A80D0000 		.4byte	0xda8
 7526 1a9b 22       		.uleb128 0x22
 7527 1a9c 01       		.uleb128 0x1
 7528 1a9d 50       		.byte	0x50
 7529 1a9e 02       		.uleb128 0x2
 7530 1a9f 74       		.byte	0x74
 7531 1aa0 00       		.sleb128 0
 7532 1aa1 22       		.uleb128 0x22
 7533 1aa2 01       		.uleb128 0x1
 7534 1aa3 51       		.byte	0x51
 7535 1aa4 02       		.uleb128 0x2
 7536 1aa5 75       		.byte	0x75
 7537 1aa6 00       		.sleb128 0
 7538 1aa7 00       		.byte	0
 7539 1aa8 00       		.byte	0
 7540 1aa9 27       		.uleb128 0x27
 7541 1aaa 21100000 		.4byte	.LASF337
 7542 1aae 01       		.byte	0x1
 7543 1aaf 590B     		.2byte	0xb59
 7544 1ab1 F1070000 		.4byte	0x7f1
 7545 1ab5 00000000 		.4byte	.LFB547
 7546 1ab9 7C000000 		.4byte	.LFE547-.LFB547
 7547 1abd 01       		.uleb128 0x1
 7548 1abe 9C       		.byte	0x9c
 7549 1abf 491B0000 		.4byte	0x1b49
 7550 1ac3 1D       		.uleb128 0x1d
 7551 1ac4 09030000 		.4byte	.LASF333
 7552 1ac8 01       		.byte	0x1
 7553 1ac9 590B     		.2byte	0xb59
 7554 1acb 541B0000 		.4byte	0x1b54
 7555 1acf B60A0000 		.4byte	.LLST75
 7556 1ad3 1E       		.uleb128 0x1e
 7557 1ad4 21090000 		.4byte	.LASF338
 7558 1ad8 01       		.byte	0x1
 7559 1ad9 5B0B     		.2byte	0xb5b
 7560 1adb 2E0B0000 		.4byte	0xb2e
 7561 1adf D70A0000 		.4byte	.LLST76
 7562 1ae3 1E       		.uleb128 0x1e
 7563 1ae4 221E0000 		.4byte	.LASF265
 7564 1ae8 01       		.byte	0x1
 7565 1ae9 5C0B     		.2byte	0xb5c
 7566 1aeb F1070000 		.4byte	0x7f1
 7567 1aef EA0A0000 		.4byte	.LLST77
 7568 1af3 26       		.uleb128 0x26
 7569 1af4 16000000 		.4byte	.LVL250
 7570 1af8 ED240000 		.4byte	0x24ed
 7571 1afc 071B0000 		.4byte	0x1b07
 7572 1b00 22       		.uleb128 0x22
 7573 1b01 01       		.uleb128 0x1
 7574 1b02 50       		.byte	0x50
 7575 1b03 02       		.uleb128 0x2
 7576 1b04 75       		.byte	0x75
 7577 1b05 00       		.sleb128 0
 7578 1b06 00       		.byte	0
 7579 1b07 26       		.uleb128 0x26
 7580 1b08 26000000 		.4byte	.LVL251
 7581 1b0c ED240000 		.4byte	0x24ed
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 233


 7582 1b10 1B1B0000 		.4byte	0x1b1b
 7583 1b14 22       		.uleb128 0x22
 7584 1b15 01       		.uleb128 0x1
 7585 1b16 50       		.byte	0x50
 7586 1b17 02       		.uleb128 0x2
 7587 1b18 75       		.byte	0x75
 7588 1b19 00       		.sleb128 0
 7589 1b1a 00       		.byte	0
 7590 1b1b 26       		.uleb128 0x26
 7591 1b1c 48000000 		.4byte	.LVL252
 7592 1b20 D6240000 		.4byte	0x24d6
 7593 1b24 2F1B0000 		.4byte	0x1b2f
 7594 1b28 22       		.uleb128 0x22
 7595 1b29 01       		.uleb128 0x1
 7596 1b2a 51       		.byte	0x51
 7597 1b2b 02       		.uleb128 0x2
 7598 1b2c 75       		.byte	0x75
 7599 1b2d 00       		.sleb128 0
 7600 1b2e 00       		.byte	0
 7601 1b2f 21       		.uleb128 0x21
 7602 1b30 52000000 		.4byte	.LVL253
 7603 1b34 D6240000 		.4byte	0x24d6
 7604 1b38 22       		.uleb128 0x22
 7605 1b39 01       		.uleb128 0x1
 7606 1b3a 50       		.byte	0x50
 7607 1b3b 05       		.uleb128 0x5
 7608 1b3c 03       		.byte	0x3
 7609 1b3d 14000000 		.4byte	.LANCHOR0+20
 7610 1b41 22       		.uleb128 0x22
 7611 1b42 01       		.uleb128 0x1
 7612 1b43 51       		.byte	0x51
 7613 1b44 02       		.uleb128 0x2
 7614 1b45 75       		.byte	0x75
 7615 1b46 00       		.sleb128 0
 7616 1b47 00       		.byte	0
 7617 1b48 00       		.byte	0
 7618 1b49 06       		.uleb128 0x6
 7619 1b4a 04       		.byte	0x4
 7620 1b4b 4F1B0000 		.4byte	0x1b4f
 7621 1b4f 07       		.uleb128 0x7
 7622 1b50 EF080000 		.4byte	0x8ef
 7623 1b54 07       		.uleb128 0x7
 7624 1b55 491B0000 		.4byte	0x1b49
 7625 1b59 27       		.uleb128 0x27
 7626 1b5a 591F0000 		.4byte	.LASF339
 7627 1b5e 01       		.byte	0x1
 7628 1b5f 9D0B     		.2byte	0xb9d
 7629 1b61 F1070000 		.4byte	0x7f1
 7630 1b65 00000000 		.4byte	.LFB548
 7631 1b69 6C000000 		.4byte	.LFE548-.LFB548
 7632 1b6d 01       		.uleb128 0x1
 7633 1b6e 9C       		.byte	0x9c
 7634 1b6f E11B0000 		.4byte	0x1be1
 7635 1b73 1D       		.uleb128 0x1d
 7636 1b74 C5230000 		.4byte	.LASF340
 7637 1b78 01       		.byte	0x1
 7638 1b79 9D0B     		.2byte	0xb9d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 234


 7639 1b7b E9080000 		.4byte	0x8e9
 7640 1b7f 090B0000 		.4byte	.LLST78
 7641 1b83 1D       		.uleb128 0x1d
 7642 1b84 181B0000 		.4byte	.LASF222
 7643 1b88 01       		.byte	0x1
 7644 1b89 9D0B     		.2byte	0xb9d
 7645 1b8b 360E0000 		.4byte	0xe36
 7646 1b8f 2A0B0000 		.4byte	.LLST79
 7647 1b93 1E       		.uleb128 0x1e
 7648 1b94 21090000 		.4byte	.LASF338
 7649 1b98 01       		.byte	0x1
 7650 1b99 9F0B     		.2byte	0xb9f
 7651 1b9b 2E0B0000 		.4byte	0xb2e
 7652 1b9f 4B0B0000 		.4byte	.LLST80
 7653 1ba3 1E       		.uleb128 0x1e
 7654 1ba4 221E0000 		.4byte	.LASF265
 7655 1ba8 01       		.byte	0x1
 7656 1ba9 A00B     		.2byte	0xba0
 7657 1bab F1070000 		.4byte	0x7f1
 7658 1baf 5E0B0000 		.4byte	.LLST81
 7659 1bb3 20       		.uleb128 0x20
 7660 1bb4 20000000 		.4byte	.LVL260
 7661 1bb8 ED240000 		.4byte	0x24ed
 7662 1bbc 26       		.uleb128 0x26
 7663 1bbd 28000000 		.4byte	.LVL261
 7664 1bc1 ED240000 		.4byte	0x24ed
 7665 1bc5 D01B0000 		.4byte	0x1bd0
 7666 1bc9 22       		.uleb128 0x22
 7667 1bca 01       		.uleb128 0x1
 7668 1bcb 50       		.byte	0x50
 7669 1bcc 02       		.uleb128 0x2
 7670 1bcd 76       		.byte	0x76
 7671 1bce 00       		.sleb128 0
 7672 1bcf 00       		.byte	0
 7673 1bd0 21       		.uleb128 0x21
 7674 1bd1 4E000000 		.4byte	.LVL262
 7675 1bd5 D6240000 		.4byte	0x24d6
 7676 1bd9 22       		.uleb128 0x22
 7677 1bda 01       		.uleb128 0x1
 7678 1bdb 51       		.byte	0x51
 7679 1bdc 02       		.uleb128 0x2
 7680 1bdd 76       		.byte	0x76
 7681 1bde 00       		.sleb128 0
 7682 1bdf 00       		.byte	0
 7683 1be0 00       		.byte	0
 7684 1be1 29       		.uleb128 0x29
 7685 1be2 ED040000 		.4byte	.LASF341
 7686 1be6 01       		.byte	0x1
 7687 1be7 CA0B     		.2byte	0xbca
 7688 1be9 00000000 		.4byte	.LFB549
 7689 1bed 1C000000 		.4byte	.LFE549-.LFB549
 7690 1bf1 01       		.uleb128 0x1
 7691 1bf2 9C       		.byte	0x9c
 7692 1bf3 061C0000 		.4byte	0x1c06
 7693 1bf7 23       		.uleb128 0x23
 7694 1bf8 A5150000 		.4byte	.LASF342
 7695 1bfc 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 235


 7696 1bfd CA0B     		.2byte	0xbca
 7697 1bff 0C1C0000 		.4byte	0x1c0c
 7698 1c03 01       		.uleb128 0x1
 7699 1c04 50       		.byte	0x50
 7700 1c05 00       		.byte	0
 7701 1c06 06       		.uleb128 0x6
 7702 1c07 04       		.byte	0x4
 7703 1c08 60090000 		.4byte	0x960
 7704 1c0c 07       		.uleb128 0x7
 7705 1c0d 061C0000 		.4byte	0x1c06
 7706 1c11 27       		.uleb128 0x27
 7707 1c12 3E1C0000 		.4byte	.LASF343
 7708 1c16 01       		.byte	0x1
 7709 1c17 D20B     		.2byte	0xbd2
 7710 1c19 F1070000 		.4byte	0x7f1
 7711 1c1d 00000000 		.4byte	.LFB550
 7712 1c21 64000000 		.4byte	.LFE550-.LFB550
 7713 1c25 01       		.uleb128 0x1
 7714 1c26 9C       		.byte	0x9c
 7715 1c27 9C1C0000 		.4byte	0x1c9c
 7716 1c2b 1D       		.uleb128 0x1d
 7717 1c2c A5150000 		.4byte	.LASF342
 7718 1c30 01       		.byte	0x1
 7719 1c31 D20B     		.2byte	0xbd2
 7720 1c33 0C1C0000 		.4byte	0x1c0c
 7721 1c37 7D0B0000 		.4byte	.LLST82
 7722 1c3b 1D       		.uleb128 0x1d
 7723 1c3c 6E070000 		.4byte	.LASF344
 7724 1c40 01       		.byte	0x1
 7725 1c41 D20B     		.2byte	0xbd2
 7726 1c43 E8160000 		.4byte	0x16e8
 7727 1c47 F40B0000 		.4byte	.LLST83
 7728 1c4b 1E       		.uleb128 0x1e
 7729 1c4c 221E0000 		.4byte	.LASF265
 7730 1c50 01       		.byte	0x1
 7731 1c51 D40B     		.2byte	0xbd4
 7732 1c53 F1070000 		.4byte	0x7f1
 7733 1c57 200C0000 		.4byte	.LLST84
 7734 1c5b 28       		.uleb128 0x28
 7735 1c5c 16000000 		.4byte	.LBB40
 7736 1c60 40000000 		.4byte	.LBE40-.LBB40
 7737 1c64 891C0000 		.4byte	0x1c89
 7738 1c68 1E       		.uleb128 0x1e
 7739 1c69 BD070000 		.4byte	.LASF284
 7740 1c6d 01       		.byte	0x1
 7741 1c6e DC0B     		.2byte	0xbdc
 7742 1c70 360E0000 		.4byte	0xe36
 7743 1c74 4A0C0000 		.4byte	.LLST85
 7744 1c78 21       		.uleb128 0x21
 7745 1c79 48000000 		.4byte	.LVL271
 7746 1c7d E11B0000 		.4byte	0x1be1
 7747 1c81 22       		.uleb128 0x22
 7748 1c82 01       		.uleb128 0x1
 7749 1c83 50       		.byte	0x50
 7750 1c84 02       		.uleb128 0x2
 7751 1c85 74       		.byte	0x74
 7752 1c86 00       		.sleb128 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 236


 7753 1c87 00       		.byte	0
 7754 1c88 00       		.byte	0
 7755 1c89 20       		.uleb128 0x20
 7756 1c8a 16000000 		.4byte	.LVL269
 7757 1c8e CB240000 		.4byte	0x24cb
 7758 1c92 20       		.uleb128 0x20
 7759 1c93 5A000000 		.4byte	.LVL279
 7760 1c97 E2240000 		.4byte	0x24e2
 7761 1c9b 00       		.byte	0
 7762 1c9c 2F       		.uleb128 0x2f
 7763 1c9d 571E0000 		.4byte	.LASF346
 7764 1ca1 01       		.byte	0x1
 7765 1ca2 0F0C     		.2byte	0xc0f
 7766 1ca4 00000000 		.4byte	.LFB551
 7767 1ca8 10000000 		.4byte	.LFE551-.LFB551
 7768 1cac 01       		.uleb128 0x1
 7769 1cad 9C       		.byte	0x9c
 7770 1cae 29       		.uleb128 0x29
 7771 1caf 13020000 		.4byte	.LASF347
 7772 1cb3 01       		.byte	0x1
 7773 1cb4 DB0C     		.2byte	0xcdb
 7774 1cb6 00000000 		.4byte	.LFB553
 7775 1cba 1C000000 		.4byte	.LFE553-.LFB553
 7776 1cbe 01       		.uleb128 0x1
 7777 1cbf 9C       		.byte	0x9c
 7778 1cc0 031D0000 		.4byte	0x1d03
 7779 1cc4 1D       		.uleb128 0x1d
 7780 1cc5 850E0000 		.4byte	.LASF348
 7781 1cc9 01       		.byte	0x1
 7782 1cca DB0C     		.2byte	0xcdb
 7783 1ccc FA080000 		.4byte	0x8fa
 7784 1cd0 680C0000 		.4byte	.LLST86
 7785 1cd4 1D       		.uleb128 0x1d
 7786 1cd5 1D1D0000 		.4byte	.LASF349
 7787 1cd9 01       		.byte	0x1
 7788 1cda DB0C     		.2byte	0xcdb
 7789 1cdc F1070000 		.4byte	0x7f1
 7790 1ce0 7B0C0000 		.4byte	.LLST87
 7791 1ce4 23       		.uleb128 0x23
 7792 1ce5 D5230000 		.4byte	.LASF350
 7793 1ce9 01       		.byte	0x1
 7794 1cea DB0C     		.2byte	0xcdb
 7795 1cec B0000000 		.4byte	0xb0
 7796 1cf0 01       		.uleb128 0x1
 7797 1cf1 52       		.byte	0x52
 7798 1cf2 1E       		.uleb128 0x1e
 7799 1cf3 C2220000 		.4byte	.LASF266
 7800 1cf7 01       		.byte	0x1
 7801 1cf8 DD0C     		.2byte	0xcdd
 7802 1cfa 2E0B0000 		.4byte	0xb2e
 7803 1cfe A90C0000 		.4byte	.LLST88
 7804 1d02 00       		.byte	0
 7805 1d03 27       		.uleb128 0x27
 7806 1d04 F50A0000 		.4byte	.LASF351
 7807 1d08 01       		.byte	0x1
 7808 1d09 EB0C     		.2byte	0xceb
 7809 1d0b B0000000 		.4byte	0xb0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 237


 7810 1d0f 00000000 		.4byte	.LFB554
 7811 1d13 20000000 		.4byte	.LFE554-.LFB554
 7812 1d17 01       		.uleb128 0x1
 7813 1d18 9C       		.byte	0x9c
 7814 1d19 5E1D0000 		.4byte	0x1d5e
 7815 1d1d 1D       		.uleb128 0x1d
 7816 1d1e 21180000 		.4byte	.LASF308
 7817 1d22 01       		.byte	0x1
 7818 1d23 EB0C     		.2byte	0xceb
 7819 1d25 FA080000 		.4byte	0x8fa
 7820 1d29 BC0C0000 		.4byte	.LLST89
 7821 1d2d 1D       		.uleb128 0x1d
 7822 1d2e 1D1D0000 		.4byte	.LASF349
 7823 1d32 01       		.byte	0x1
 7824 1d33 EB0C     		.2byte	0xceb
 7825 1d35 F1070000 		.4byte	0x7f1
 7826 1d39 E80C0000 		.4byte	.LLST90
 7827 1d3d 1E       		.uleb128 0x1e
 7828 1d3e 180B0000 		.4byte	.LASF352
 7829 1d42 01       		.byte	0x1
 7830 1d43 ED0C     		.2byte	0xced
 7831 1d45 B0000000 		.4byte	0xb0
 7832 1d49 130D0000 		.4byte	.LLST91
 7833 1d4d 1E       		.uleb128 0x1e
 7834 1d4e C2220000 		.4byte	.LASF266
 7835 1d52 01       		.byte	0x1
 7836 1d53 EE0C     		.2byte	0xcee
 7837 1d55 2E0B0000 		.4byte	0xb2e
 7838 1d59 490D0000 		.4byte	.LLST92
 7839 1d5d 00       		.byte	0
 7840 1d5e 27       		.uleb128 0x27
 7841 1d5f 08210000 		.4byte	.LASF353
 7842 1d63 01       		.byte	0x1
 7843 1d64 580E     		.2byte	0xe58
 7844 1d66 FA080000 		.4byte	0x8fa
 7845 1d6a 00000000 		.4byte	.LFB559
 7846 1d6e 0C000000 		.4byte	.LFE559-.LFB559
 7847 1d72 01       		.uleb128 0x1
 7848 1d73 9C       		.byte	0x9c
 7849 1d74 871D0000 		.4byte	0x1d87
 7850 1d78 24       		.uleb128 0x24
 7851 1d79 221E0000 		.4byte	.LASF265
 7852 1d7d 01       		.byte	0x1
 7853 1d7e 5A0E     		.2byte	0xe5a
 7854 1d80 FA080000 		.4byte	0x8fa
 7855 1d84 01       		.uleb128 0x1
 7856 1d85 50       		.byte	0x50
 7857 1d86 00       		.byte	0
 7858 1d87 27       		.uleb128 0x27
 7859 1d88 9D020000 		.4byte	.LASF354
 7860 1d8c 01       		.byte	0x1
 7861 1d8d 690E     		.2byte	0xe69
 7862 1d8f F1070000 		.4byte	0x7f1
 7863 1d93 00000000 		.4byte	.LFB560
 7864 1d97 20000000 		.4byte	.LFE560-.LFB560
 7865 1d9b 01       		.uleb128 0x1
 7866 1d9c 9C       		.byte	0x9c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 238


 7867 1d9d B01D0000 		.4byte	0x1db0
 7868 1da1 24       		.uleb128 0x24
 7869 1da2 221E0000 		.4byte	.LASF265
 7870 1da6 01       		.byte	0x1
 7871 1da7 6B0E     		.2byte	0xe6b
 7872 1da9 F1070000 		.4byte	0x7f1
 7873 1dad 01       		.uleb128 0x1
 7874 1dae 50       		.byte	0x50
 7875 1daf 00       		.byte	0
 7876 1db0 27       		.uleb128 0x27
 7877 1db1 E0160000 		.4byte	.LASF355
 7878 1db5 01       		.byte	0x1
 7879 1db6 4D10     		.2byte	0x104d
 7880 1db8 07080000 		.4byte	0x807
 7881 1dbc 00000000 		.4byte	.LFB561
 7882 1dc0 20000000 		.4byte	.LFE561-.LFB561
 7883 1dc4 01       		.uleb128 0x1
 7884 1dc5 9C       		.byte	0x9c
 7885 1dc6 D91D0000 		.4byte	0x1dd9
 7886 1dca 24       		.uleb128 0x24
 7887 1dcb CD130000 		.4byte	.LASF289
 7888 1dcf 01       		.byte	0x1
 7889 1dd0 4F10     		.2byte	0x104f
 7890 1dd2 07080000 		.4byte	0x807
 7891 1dd6 01       		.uleb128 0x1
 7892 1dd7 50       		.byte	0x50
 7893 1dd8 00       		.byte	0
 7894 1dd9 27       		.uleb128 0x27
 7895 1dda F41B0000 		.4byte	.LASF356
 7896 1dde 01       		.byte	0x1
 7897 1ddf 6E10     		.2byte	0x106e
 7898 1de1 EB000000 		.4byte	0xeb
 7899 1de5 00000000 		.4byte	.LFB562
 7900 1de9 80000000 		.4byte	.LFE562-.LFB562
 7901 1ded 01       		.uleb128 0x1
 7902 1dee 9C       		.byte	0x9c
 7903 1def 611E0000 		.4byte	0x1e61
 7904 1df3 1D       		.uleb128 0x1d
 7905 1df4 50090000 		.4byte	.LASF357
 7906 1df8 01       		.byte	0x1
 7907 1df9 6E10     		.2byte	0x106e
 7908 1dfb F1070000 		.4byte	0x7f1
 7909 1dff 5C0D0000 		.4byte	.LLST93
 7910 1e03 1D       		.uleb128 0x1d
 7911 1e04 CB200000 		.4byte	.LASF281
 7912 1e08 01       		.byte	0x1
 7913 1e09 6E10     		.2byte	0x106e
 7914 1e0b 07080000 		.4byte	0x807
 7915 1e0f 880D0000 		.4byte	.LLST94
 7916 1e13 1E       		.uleb128 0x1e
 7917 1e14 90240000 		.4byte	.LASF358
 7918 1e18 01       		.byte	0x1
 7919 1e19 7010     		.2byte	0x1070
 7920 1e1b EB000000 		.4byte	0xeb
 7921 1e1f B40D0000 		.4byte	.LLST95
 7922 1e23 20       		.uleb128 0x20
 7923 1e24 0A000000 		.4byte	.LVL297
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 239


 7924 1e28 CB240000 		.4byte	0x24cb
 7925 1e2c 26       		.uleb128 0x26
 7926 1e2d 2A000000 		.4byte	.LVL298
 7927 1e31 A80D0000 		.4byte	0xda8
 7928 1e35 451E0000 		.4byte	0x1e45
 7929 1e39 22       		.uleb128 0x22
 7930 1e3a 01       		.uleb128 0x1
 7931 1e3b 50       		.byte	0x50
 7932 1e3c 02       		.uleb128 0x2
 7933 1e3d 74       		.byte	0x74
 7934 1e3e 00       		.sleb128 0
 7935 1e3f 22       		.uleb128 0x22
 7936 1e40 01       		.uleb128 0x1
 7937 1e41 51       		.byte	0x51
 7938 1e42 01       		.uleb128 0x1
 7939 1e43 31       		.byte	0x31
 7940 1e44 00       		.byte	0
 7941 1e45 20       		.uleb128 0x20
 7942 1e46 3E000000 		.4byte	.LVL299
 7943 1e4a E2240000 		.4byte	0x24e2
 7944 1e4e 20       		.uleb128 0x20
 7945 1e4f 42000000 		.4byte	.LVL300
 7946 1e53 CB240000 		.4byte	0x24cb
 7947 1e57 20       		.uleb128 0x20
 7948 1e58 74000000 		.4byte	.LVL302
 7949 1e5c E2240000 		.4byte	0x24e2
 7950 1e60 00       		.byte	0
 7951 1e61 27       		.uleb128 0x27
 7952 1e62 8F100000 		.4byte	.LASF359
 7953 1e66 01       		.byte	0x1
 7954 1e67 B210     		.2byte	0x10b2
 7955 1e69 F1070000 		.4byte	0x7f1
 7956 1e6d 00000000 		.4byte	.LFB563
 7957 1e71 A4000000 		.4byte	.LFE563-.LFB563
 7958 1e75 01       		.uleb128 0x1
 7959 1e76 9C       		.byte	0x9c
 7960 1e77 091F0000 		.4byte	0x1f09
 7961 1e7b 1D       		.uleb128 0x1d
 7962 1e7c 530A0000 		.4byte	.LASF360
 7963 1e80 01       		.byte	0x1
 7964 1e81 B210     		.2byte	0x10b2
 7965 1e83 EB000000 		.4byte	0xeb
 7966 1e87 D20D0000 		.4byte	.LLST96
 7967 1e8b 1D       		.uleb128 0x1d
 7968 1e8c 65020000 		.4byte	.LASF361
 7969 1e90 01       		.byte	0x1
 7970 1e91 B210     		.2byte	0x10b2
 7971 1e93 EB000000 		.4byte	0xeb
 7972 1e97 FE0D0000 		.4byte	.LLST97
 7973 1e9b 1D       		.uleb128 0x1d
 7974 1e9c FE1D0000 		.4byte	.LASF362
 7975 1ea0 01       		.byte	0x1
 7976 1ea1 B210     		.2byte	0x10b2
 7977 1ea3 0E010000 		.4byte	0x10e
 7978 1ea7 430E0000 		.4byte	.LLST98
 7979 1eab 1D       		.uleb128 0x1d
 7980 1eac CB200000 		.4byte	.LASF281
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 240


 7981 1eb0 01       		.byte	0x1
 7982 1eb1 B210     		.2byte	0x10b2
 7983 1eb3 07080000 		.4byte	0x807
 7984 1eb7 6F0E0000 		.4byte	.LLST99
 7985 1ebb 1E       		.uleb128 0x1e
 7986 1ebc 221E0000 		.4byte	.LASF265
 7987 1ec0 01       		.byte	0x1
 7988 1ec1 B410     		.2byte	0x10b4
 7989 1ec3 F1070000 		.4byte	0x7f1
 7990 1ec7 9B0E0000 		.4byte	.LLST100
 7991 1ecb 20       		.uleb128 0x20
 7992 1ecc 0E000000 		.4byte	.LVL305
 7993 1ed0 CB240000 		.4byte	0x24cb
 7994 1ed4 26       		.uleb128 0x26
 7995 1ed5 40000000 		.4byte	.LVL306
 7996 1ed9 A80D0000 		.4byte	0xda8
 7997 1edd ED1E0000 		.4byte	0x1eed
 7998 1ee1 22       		.uleb128 0x22
 7999 1ee2 01       		.uleb128 0x1
 8000 1ee3 50       		.byte	0x50
 8001 1ee4 02       		.uleb128 0x2
 8002 1ee5 76       		.byte	0x76
 8003 1ee6 00       		.sleb128 0
 8004 1ee7 22       		.uleb128 0x22
 8005 1ee8 01       		.uleb128 0x1
 8006 1ee9 51       		.byte	0x51
 8007 1eea 01       		.uleb128 0x1
 8008 1eeb 31       		.byte	0x31
 8009 1eec 00       		.byte	0
 8010 1eed 20       		.uleb128 0x20
 8011 1eee 54000000 		.4byte	.LVL307
 8012 1ef2 E2240000 		.4byte	0x24e2
 8013 1ef6 20       		.uleb128 0x20
 8014 1ef7 58000000 		.4byte	.LVL308
 8015 1efb CB240000 		.4byte	0x24cb
 8016 1eff 20       		.uleb128 0x20
 8017 1f00 98000000 		.4byte	.LVL313
 8018 1f04 E2240000 		.4byte	0x24e2
 8019 1f08 00       		.byte	0
 8020 1f09 27       		.uleb128 0x27
 8021 1f0a CB080000 		.4byte	.LASF363
 8022 1f0e 01       		.byte	0x1
 8023 1f0f 0211     		.2byte	0x1102
 8024 1f11 F1070000 		.4byte	0x7f1
 8025 1f15 00000000 		.4byte	.LFB564
 8026 1f19 C8000000 		.4byte	.LFE564-.LFB564
 8027 1f1d 01       		.uleb128 0x1
 8028 1f1e 9C       		.byte	0x9c
 8029 1f1f CE1F0000 		.4byte	0x1fce
 8030 1f23 1D       		.uleb128 0x1d
 8031 1f24 2E180000 		.4byte	.LASF364
 8032 1f28 01       		.byte	0x1
 8033 1f29 0211     		.2byte	0x1102
 8034 1f2b FA080000 		.4byte	0x8fa
 8035 1f2f C50E0000 		.4byte	.LLST101
 8036 1f33 1D       		.uleb128 0x1d
 8037 1f34 051C0000 		.4byte	.LASF365
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 241


 8038 1f38 01       		.byte	0x1
 8039 1f39 0211     		.2byte	0x1102
 8040 1f3b EB000000 		.4byte	0xeb
 8041 1f3f F10E0000 		.4byte	.LLST102
 8042 1f43 1D       		.uleb128 0x1d
 8043 1f44 B7160000 		.4byte	.LASF366
 8044 1f48 01       		.byte	0x1
 8045 1f49 0211     		.2byte	0x1102
 8046 1f4b 30090000 		.4byte	0x930
 8047 1f4f 360F0000 		.4byte	.LLST103
 8048 1f53 1D       		.uleb128 0x1d
 8049 1f54 64150000 		.4byte	.LASF367
 8050 1f58 01       		.byte	0x1
 8051 1f59 0211     		.2byte	0x1102
 8052 1f5b 0E010000 		.4byte	0x10e
 8053 1f5f 570F0000 		.4byte	.LLST104
 8054 1f63 1E       		.uleb128 0x1e
 8055 1f64 C2220000 		.4byte	.LASF266
 8056 1f68 01       		.byte	0x1
 8057 1f69 0411     		.2byte	0x1104
 8058 1f6b 2E0B0000 		.4byte	0xb2e
 8059 1f6f 830F0000 		.4byte	.LLST105
 8060 1f73 1E       		.uleb128 0x1e
 8061 1f74 221E0000 		.4byte	.LASF265
 8062 1f78 01       		.byte	0x1
 8063 1f79 0511     		.2byte	0x1105
 8064 1f7b F1070000 		.4byte	0x7f1
 8065 1f7f A40F0000 		.4byte	.LLST106
 8066 1f83 1E       		.uleb128 0x1e
 8067 1f84 D7040000 		.4byte	.LASF368
 8068 1f88 01       		.byte	0x1
 8069 1f89 0611     		.2byte	0x1106
 8070 1f8b CA000000 		.4byte	0xca
 8071 1f8f CE0F0000 		.4byte	.LLST107
 8072 1f93 20       		.uleb128 0x20
 8073 1f94 14000000 		.4byte	.LVL317
 8074 1f98 CB240000 		.4byte	0x24cb
 8075 1f9c 26       		.uleb128 0x26
 8076 1f9d 6A000000 		.4byte	.LVL322
 8077 1fa1 ED240000 		.4byte	0x24ed
 8078 1fa5 B01F0000 		.4byte	0x1fb0
 8079 1fa9 22       		.uleb128 0x22
 8080 1faa 01       		.uleb128 0x1
 8081 1fab 50       		.byte	0x50
 8082 1fac 02       		.uleb128 0x2
 8083 1fad 76       		.byte	0x76
 8084 1fae 00       		.sleb128 0
 8085 1faf 00       		.byte	0
 8086 1fb0 26       		.uleb128 0x26
 8087 1fb1 8C000000 		.4byte	.LVL323
 8088 1fb5 D6240000 		.4byte	0x24d6
 8089 1fb9 C41F0000 		.4byte	0x1fc4
 8090 1fbd 22       		.uleb128 0x22
 8091 1fbe 01       		.uleb128 0x1
 8092 1fbf 51       		.byte	0x51
 8093 1fc0 02       		.uleb128 0x2
 8094 1fc1 76       		.byte	0x76
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 242


 8095 1fc2 00       		.sleb128 0
 8096 1fc3 00       		.byte	0
 8097 1fc4 20       		.uleb128 0x20
 8098 1fc5 B6000000 		.4byte	.LVL324
 8099 1fc9 E2240000 		.4byte	0x24e2
 8100 1fcd 00       		.byte	0
 8101 1fce 27       		.uleb128 0x27
 8102 1fcf 04080000 		.4byte	.LASF369
 8103 1fd3 01       		.byte	0x1
 8104 1fd4 6C11     		.2byte	0x116c
 8105 1fd6 F1070000 		.4byte	0x7f1
 8106 1fda 00000000 		.4byte	.LFB565
 8107 1fde 04010000 		.4byte	.LFE565-.LFB565
 8108 1fe2 01       		.uleb128 0x1
 8109 1fe3 9C       		.byte	0x9c
 8110 1fe4 06210000 		.4byte	0x2106
 8111 1fe8 1D       		.uleb128 0x1d
 8112 1fe9 2E180000 		.4byte	.LASF364
 8113 1fed 01       		.byte	0x1
 8114 1fee 6C11     		.2byte	0x116c
 8115 1ff0 FA080000 		.4byte	0x8fa
 8116 1ff4 E10F0000 		.4byte	.LLST108
 8117 1ff8 1D       		.uleb128 0x1d
 8118 1ff9 051C0000 		.4byte	.LASF365
 8119 1ffd 01       		.byte	0x1
 8120 1ffe 6C11     		.2byte	0x116c
 8121 2000 EB000000 		.4byte	0xeb
 8122 2004 0D100000 		.4byte	.LLST109
 8123 2008 1D       		.uleb128 0x1d
 8124 2009 B7160000 		.4byte	.LASF366
 8125 200d 01       		.byte	0x1
 8126 200e 6C11     		.2byte	0x116c
 8127 2010 30090000 		.4byte	0x930
 8128 2014 52100000 		.4byte	.LLST110
 8129 2018 1D       		.uleb128 0x1d
 8130 2019 64150000 		.4byte	.LASF367
 8131 201d 01       		.byte	0x1
 8132 201e 6C11     		.2byte	0x116c
 8133 2020 0E010000 		.4byte	0x10e
 8134 2024 73100000 		.4byte	.LLST111
 8135 2028 1D       		.uleb128 0x1d
 8136 2029 B4020000 		.4byte	.LASF370
 8137 202d 01       		.byte	0x1
 8138 202e 6C11     		.2byte	0x116c
 8139 2030 06210000 		.4byte	0x2106
 8140 2034 9F100000 		.4byte	.LLST112
 8141 2038 1E       		.uleb128 0x1e
 8142 2039 C2220000 		.4byte	.LASF266
 8143 203d 01       		.byte	0x1
 8144 203e 6E11     		.2byte	0x116e
 8145 2040 2E0B0000 		.4byte	0xb2e
 8146 2044 BF100000 		.4byte	.LLST113
 8147 2048 1E       		.uleb128 0x1e
 8148 2049 D7040000 		.4byte	.LASF368
 8149 204d 01       		.byte	0x1
 8150 204e 6F11     		.2byte	0x116f
 8151 2050 CA000000 		.4byte	0xca
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 243


 8152 2054 E0100000 		.4byte	.LLST114
 8153 2058 1E       		.uleb128 0x1e
 8154 2059 221E0000 		.4byte	.LASF265
 8155 205d 01       		.byte	0x1
 8156 205e 7011     		.2byte	0x1170
 8157 2060 F1070000 		.4byte	0x7f1
 8158 2064 F3100000 		.4byte	.LLST115
 8159 2068 2A       		.uleb128 0x2a
 8160 2069 2A240000 		.4byte	.LASF301
 8161 206d 01       		.byte	0x1
 8162 206e 7111     		.2byte	0x1171
 8163 2070 FC070000 		.4byte	0x7fc
 8164 2074 2B       		.uleb128 0x2b
 8165 2075 680A0000 		.4byte	0xa68
 8166 2079 18000000 		.4byte	.LBB41
 8167 207d 14000000 		.4byte	.LBE41-.LBB41
 8168 2081 01       		.byte	0x1
 8169 2082 8911     		.2byte	0x1189
 8170 2084 9D200000 		.4byte	0x209d
 8171 2088 2C       		.uleb128 0x2c
 8172 2089 18000000 		.4byte	.LBB42
 8173 208d 14000000 		.4byte	.LBE42-.LBB42
 8174 2091 2D       		.uleb128 0x2d
 8175 2092 780A0000 		.4byte	0xa78
 8176 2096 2D       		.uleb128 0x2d
 8177 2097 830A0000 		.4byte	0xa83
 8178 209b 00       		.byte	0
 8179 209c 00       		.byte	0
 8180 209d 2B       		.uleb128 0x2b
 8181 209e 8F0A0000 		.4byte	0xa8f
 8182 20a2 EC000000 		.4byte	.LBB43
 8183 20a6 04000000 		.4byte	.LBE43-.LBB43
 8184 20aa 01       		.byte	0x1
 8185 20ab DE11     		.2byte	0x11de
 8186 20ad BB200000 		.4byte	0x20bb
 8187 20b1 2E       		.uleb128 0x2e
 8188 20b2 9B0A0000 		.4byte	0xa9b
 8189 20b6 1D110000 		.4byte	.LLST116
 8190 20ba 00       		.byte	0
 8191 20bb 20       		.uleb128 0x20
 8192 20bc 18000000 		.4byte	.LVL328
 8193 20c0 10250000 		.4byte	0x2510
 8194 20c4 26       		.uleb128 0x26
 8195 20c5 A0000000 		.4byte	.LVL333
 8196 20c9 ED240000 		.4byte	0x24ed
 8197 20cd D8200000 		.4byte	0x20d8
 8198 20d1 22       		.uleb128 0x22
 8199 20d2 01       		.uleb128 0x1
 8200 20d3 50       		.byte	0x50
 8201 20d4 02       		.uleb128 0x2
 8202 20d5 78       		.byte	0x78
 8203 20d6 00       		.sleb128 0
 8204 20d7 00       		.byte	0
 8205 20d8 26       		.uleb128 0x26
 8206 20d9 C2000000 		.4byte	.LVL334
 8207 20dd D6240000 		.4byte	0x24d6
 8208 20e1 EC200000 		.4byte	0x20ec
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 244


 8209 20e5 22       		.uleb128 0x22
 8210 20e6 01       		.uleb128 0x1
 8211 20e7 51       		.byte	0x51
 8212 20e8 02       		.uleb128 0x2
 8213 20e9 78       		.byte	0x78
 8214 20ea 00       		.sleb128 0
 8215 20eb 00       		.byte	0
 8216 20ec 21       		.uleb128 0x21
 8217 20ed CE000000 		.4byte	.LVL336
 8218 20f1 D6240000 		.4byte	0x24d6
 8219 20f5 22       		.uleb128 0x22
 8220 20f6 01       		.uleb128 0x1
 8221 20f7 50       		.byte	0x50
 8222 20f8 05       		.uleb128 0x5
 8223 20f9 03       		.byte	0x3
 8224 20fa 14000000 		.4byte	.LANCHOR0+20
 8225 20fe 22       		.uleb128 0x22
 8226 20ff 01       		.uleb128 0x1
 8227 2100 51       		.byte	0x51
 8228 2101 02       		.uleb128 0x2
 8229 2102 74       		.byte	0x74
 8230 2103 18       		.sleb128 24
 8231 2104 00       		.byte	0
 8232 2105 00       		.byte	0
 8233 2106 06       		.uleb128 0x6
 8234 2107 04       		.byte	0x4
 8235 2108 F1070000 		.4byte	0x7f1
 8236 210c 29       		.uleb128 0x29
 8237 210d 5A1B0000 		.4byte	.LASF371
 8238 2111 01       		.byte	0x1
 8239 2112 E811     		.2byte	0x11e8
 8240 2114 00000000 		.4byte	.LFB566
 8241 2118 B0000000 		.4byte	.LFE566-.LFB566
 8242 211c 01       		.uleb128 0x1
 8243 211d 9C       		.byte	0x9c
 8244 211e 00220000 		.4byte	0x2200
 8245 2122 1D       		.uleb128 0x1d
 8246 2123 2E180000 		.4byte	.LASF364
 8247 2127 01       		.byte	0x1
 8248 2128 E811     		.2byte	0x11e8
 8249 212a FA080000 		.4byte	0x8fa
 8250 212e 30110000 		.4byte	.LLST117
 8251 2132 1D       		.uleb128 0x1d
 8252 2133 B4020000 		.4byte	.LASF370
 8253 2137 01       		.byte	0x1
 8254 2138 E811     		.2byte	0x11e8
 8255 213a 06210000 		.4byte	0x2106
 8256 213e 5C110000 		.4byte	.LLST118
 8257 2142 1E       		.uleb128 0x1e
 8258 2143 C2220000 		.4byte	.LASF266
 8259 2147 01       		.byte	0x1
 8260 2148 EA11     		.2byte	0x11ea
 8261 214a 2E0B0000 		.4byte	0xb2e
 8262 214e 88110000 		.4byte	.LLST119
 8263 2152 1E       		.uleb128 0x1e
 8264 2153 D7040000 		.4byte	.LASF368
 8265 2157 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 245


 8266 2158 EB11     		.2byte	0x11eb
 8267 215a CA000000 		.4byte	0xca
 8268 215e A9110000 		.4byte	.LLST120
 8269 2162 2A       		.uleb128 0x2a
 8270 2163 2A240000 		.4byte	.LASF301
 8271 2167 01       		.byte	0x1
 8272 2168 EC11     		.2byte	0x11ec
 8273 216a FC070000 		.4byte	0x7fc
 8274 216e 2B       		.uleb128 0x2b
 8275 216f 680A0000 		.4byte	0xa68
 8276 2173 10000000 		.4byte	.LBB45
 8277 2177 14000000 		.4byte	.LBE45-.LBB45
 8278 217b 01       		.byte	0x1
 8279 217c 0412     		.2byte	0x1204
 8280 217e 97210000 		.4byte	0x2197
 8281 2182 2C       		.uleb128 0x2c
 8282 2183 10000000 		.4byte	.LBB46
 8283 2187 14000000 		.4byte	.LBE46-.LBB46
 8284 218b 2D       		.uleb128 0x2d
 8285 218c 780A0000 		.4byte	0xa78
 8286 2190 2D       		.uleb128 0x2d
 8287 2191 830A0000 		.4byte	0xa83
 8288 2195 00       		.byte	0
 8289 2196 00       		.byte	0
 8290 2197 2B       		.uleb128 0x2b
 8291 2198 8F0A0000 		.4byte	0xa8f
 8292 219c 9E000000 		.4byte	.LBB47
 8293 21a0 12000000 		.4byte	.LBE47-.LBB47
 8294 21a4 01       		.byte	0x1
 8295 21a5 3812     		.2byte	0x1238
 8296 21a7 B5210000 		.4byte	0x21b5
 8297 21ab 2E       		.uleb128 0x2e
 8298 21ac 9B0A0000 		.4byte	0xa9b
 8299 21b0 BC110000 		.4byte	.LLST121
 8300 21b4 00       		.byte	0
 8301 21b5 20       		.uleb128 0x20
 8302 21b6 10000000 		.4byte	.LVL341
 8303 21ba 10250000 		.4byte	0x2510
 8304 21be 26       		.uleb128 0x26
 8305 21bf 52000000 		.4byte	.LVL344
 8306 21c3 ED240000 		.4byte	0x24ed
 8307 21c7 D2210000 		.4byte	0x21d2
 8308 21cb 22       		.uleb128 0x22
 8309 21cc 01       		.uleb128 0x1
 8310 21cd 50       		.byte	0x50
 8311 21ce 02       		.uleb128 0x2
 8312 21cf 77       		.byte	0x77
 8313 21d0 00       		.sleb128 0
 8314 21d1 00       		.byte	0
 8315 21d2 26       		.uleb128 0x26
 8316 21d3 74000000 		.4byte	.LVL345
 8317 21d7 D6240000 		.4byte	0x24d6
 8318 21db E6210000 		.4byte	0x21e6
 8319 21df 22       		.uleb128 0x22
 8320 21e0 01       		.uleb128 0x1
 8321 21e1 51       		.byte	0x51
 8322 21e2 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 246


 8323 21e3 77       		.byte	0x77
 8324 21e4 00       		.sleb128 0
 8325 21e5 00       		.byte	0
 8326 21e6 21       		.uleb128 0x21
 8327 21e7 80000000 		.4byte	.LVL346
 8328 21eb D6240000 		.4byte	0x24d6
 8329 21ef 22       		.uleb128 0x22
 8330 21f0 01       		.uleb128 0x1
 8331 21f1 50       		.byte	0x50
 8332 21f2 05       		.uleb128 0x5
 8333 21f3 03       		.byte	0x3
 8334 21f4 14000000 		.4byte	.LANCHOR0+20
 8335 21f8 22       		.uleb128 0x22
 8336 21f9 01       		.uleb128 0x1
 8337 21fa 51       		.byte	0x51
 8338 21fb 02       		.uleb128 0x2
 8339 21fc 74       		.byte	0x74
 8340 21fd 18       		.sleb128 24
 8341 21fe 00       		.byte	0
 8342 21ff 00       		.byte	0
 8343 2200 27       		.uleb128 0x27
 8344 2201 6A220000 		.4byte	.LASF372
 8345 2205 01       		.byte	0x1
 8346 2206 4112     		.2byte	0x1241
 8347 2208 F1070000 		.4byte	0x7f1
 8348 220c 00000000 		.4byte	.LFB567
 8349 2210 34000000 		.4byte	.LFE567-.LFB567
 8350 2214 01       		.uleb128 0x1
 8351 2215 9C       		.byte	0x9c
 8352 2216 5D220000 		.4byte	0x225d
 8353 221a 1D       		.uleb128 0x1d
 8354 221b 3C180000 		.4byte	.LASF269
 8355 221f 01       		.byte	0x1
 8356 2220 4112     		.2byte	0x1241
 8357 2222 FA080000 		.4byte	0x8fa
 8358 2226 CF110000 		.4byte	.LLST122
 8359 222a 1E       		.uleb128 0x1e
 8360 222b C2220000 		.4byte	.LASF266
 8361 222f 01       		.byte	0x1
 8362 2230 4312     		.2byte	0x1243
 8363 2232 2E0B0000 		.4byte	0xb2e
 8364 2236 E2110000 		.4byte	.LLST123
 8365 223a 1E       		.uleb128 0x1e
 8366 223b 221E0000 		.4byte	.LASF265
 8367 223f 01       		.byte	0x1
 8368 2240 4412     		.2byte	0x1244
 8369 2242 F1070000 		.4byte	0x7f1
 8370 2246 00120000 		.4byte	.LLST124
 8371 224a 20       		.uleb128 0x20
 8372 224b 10000000 		.4byte	.LVL352
 8373 224f CB240000 		.4byte	0x24cb
 8374 2253 20       		.uleb128 0x20
 8375 2254 2A000000 		.4byte	.LVL357
 8376 2258 E2240000 		.4byte	0x24e2
 8377 225c 00       		.byte	0
 8378 225d 11       		.uleb128 0x11
 8379 225e EF080000 		.4byte	0x8ef
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 247


 8380 2262 6D220000 		.4byte	0x226d
 8381 2266 12       		.uleb128 0x12
 8382 2267 A9000000 		.4byte	0xa9
 8383 226b 13       		.byte	0x13
 8384 226c 00       		.byte	0
 8385 226d 24       		.uleb128 0x24
 8386 226e 0D040000 		.4byte	.LASF373
 8387 2272 01       		.byte	0x1
 8388 2273 7701     		.2byte	0x177
 8389 2275 5D220000 		.4byte	0x225d
 8390 2279 05       		.uleb128 0x5
 8391 227a 03       		.byte	0x3
 8392 227b 30000000 		.4byte	pxReadyTasksLists
 8393 227f 24       		.uleb128 0x24
 8394 2280 341D0000 		.4byte	.LASF374
 8395 2284 01       		.byte	0x1
 8396 2285 7801     		.2byte	0x178
 8397 2287 EF080000 		.4byte	0x8ef
 8398 228b 05       		.uleb128 0x5
 8399 228c 03       		.byte	0x3
 8400 228d C0010000 		.4byte	xDelayedTaskList1
 8401 2291 24       		.uleb128 0x24
 8402 2292 83050000 		.4byte	.LASF375
 8403 2296 01       		.byte	0x1
 8404 2297 7901     		.2byte	0x179
 8405 2299 EF080000 		.4byte	0x8ef
 8406 229d 05       		.uleb128 0x5
 8407 229e 03       		.byte	0x3
 8408 229f D4010000 		.4byte	xDelayedTaskList2
 8409 22a3 24       		.uleb128 0x24
 8410 22a4 711B0000 		.4byte	.LASF376
 8411 22a8 01       		.byte	0x1
 8412 22a9 7A01     		.2byte	0x17a
 8413 22ab B5220000 		.4byte	0x22b5
 8414 22af 05       		.uleb128 0x5
 8415 22b0 03       		.byte	0x3
 8416 22b1 28000000 		.4byte	pxDelayedTaskList
 8417 22b5 08       		.uleb128 0x8
 8418 22b6 83150000 		.4byte	0x1583
 8419 22ba 24       		.uleb128 0x24
 8420 22bb 900E0000 		.4byte	.LASF377
 8421 22bf 01       		.byte	0x1
 8422 22c0 7B01     		.2byte	0x17b
 8423 22c2 B5220000 		.4byte	0x22b5
 8424 22c6 05       		.uleb128 0x5
 8425 22c7 03       		.byte	0x3
 8426 22c8 FC010000 		.4byte	pxOverflowDelayedTaskList
 8427 22cc 24       		.uleb128 0x24
 8428 22cd 9B0A0000 		.4byte	.LASF378
 8429 22d1 01       		.byte	0x1
 8430 22d2 7C01     		.2byte	0x17c
 8431 22d4 EF080000 		.4byte	0x8ef
 8432 22d8 05       		.uleb128 0x5
 8433 22d9 03       		.byte	0x3
 8434 22da 14000000 		.4byte	xPendingReadyList
 8435 22de 24       		.uleb128 0x24
 8436 22df 02050000 		.4byte	.LASF379
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 248


 8437 22e3 01       		.byte	0x1
 8438 22e4 8001     		.2byte	0x180
 8439 22e6 EF080000 		.4byte	0x8ef
 8440 22ea 05       		.uleb128 0x5
 8441 22eb 03       		.byte	0x3
 8442 22ec E8010000 		.4byte	xTasksWaitingTermination
 8443 22f0 24       		.uleb128 0x24
 8444 22f1 A9030000 		.4byte	.LASF380
 8445 22f5 01       		.byte	0x1
 8446 22f6 8101     		.2byte	0x181
 8447 22f8 02230000 		.4byte	0x2302
 8448 22fc 05       		.uleb128 0x5
 8449 22fd 03       		.byte	0x3
 8450 22fe 18020000 		.4byte	uxDeletedTasksWaitingCleanUp
 8451 2302 08       		.uleb128 0x8
 8452 2303 FC070000 		.4byte	0x7fc
 8453 2307 24       		.uleb128 0x24
 8454 2308 2C0E0000 		.4byte	.LASF381
 8455 230c 01       		.byte	0x1
 8456 230d 8701     		.2byte	0x187
 8457 230f EF080000 		.4byte	0x8ef
 8458 2313 05       		.uleb128 0x5
 8459 2314 03       		.byte	0x3
 8460 2315 00000000 		.4byte	xSuspendedTaskList
 8461 2319 24       		.uleb128 0x24
 8462 231a 19220000 		.4byte	.LASF382
 8463 231e 01       		.byte	0x1
 8464 231f 8C01     		.2byte	0x18c
 8465 2321 02230000 		.4byte	0x2302
 8466 2325 05       		.uleb128 0x5
 8467 2326 03       		.byte	0x3
 8468 2327 00020000 		.4byte	uxCurrentNumberOfTasks
 8469 232b 24       		.uleb128 0x24
 8470 232c 3C0D0000 		.4byte	.LASF383
 8471 2330 01       		.byte	0x1
 8472 2331 8D01     		.2byte	0x18d
 8473 2333 3D230000 		.4byte	0x233d
 8474 2337 05       		.uleb128 0x5
 8475 2338 03       		.byte	0x3
 8476 2339 14020000 		.4byte	xTickCount
 8477 233d 08       		.uleb128 0x8
 8478 233e 07080000 		.4byte	0x807
 8479 2342 24       		.uleb128 0x24
 8480 2343 B91C0000 		.4byte	.LASF384
 8481 2347 01       		.byte	0x1
 8482 2348 8E01     		.2byte	0x18e
 8483 234a 02230000 		.4byte	0x2302
 8484 234e 05       		.uleb128 0x5
 8485 234f 03       		.byte	0x3
 8486 2350 10020000 		.4byte	uxTopReadyPriority
 8487 2354 24       		.uleb128 0x24
 8488 2355 15030000 		.4byte	.LASF385
 8489 2359 01       		.byte	0x1
 8490 235a 8F01     		.2byte	0x18f
 8491 235c 66230000 		.4byte	0x2366
 8492 2360 05       		.uleb128 0x5
 8493 2361 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 249


 8494 2362 08020000 		.4byte	xSchedulerRunning
 8495 2366 08       		.uleb128 0x8
 8496 2367 F1070000 		.4byte	0x7f1
 8497 236b 24       		.uleb128 0x24
 8498 236c 681E0000 		.4byte	.LASF386
 8499 2370 01       		.byte	0x1
 8500 2371 9001     		.2byte	0x190
 8501 2373 02230000 		.4byte	0x2302
 8502 2377 05       		.uleb128 0x5
 8503 2378 03       		.byte	0x3
 8504 2379 28020000 		.4byte	uxPendedTicks
 8505 237d 24       		.uleb128 0x24
 8506 237e C3240000 		.4byte	.LASF387
 8507 2382 01       		.byte	0x1
 8508 2383 9101     		.2byte	0x191
 8509 2385 66230000 		.4byte	0x2366
 8510 2389 05       		.uleb128 0x5
 8511 238a 03       		.byte	0x3
 8512 238b 2C020000 		.4byte	xYieldPending
 8513 238f 24       		.uleb128 0x24
 8514 2390 EE180000 		.4byte	.LASF388
 8515 2394 01       		.byte	0x1
 8516 2395 9201     		.2byte	0x192
 8517 2397 66230000 		.4byte	0x2366
 8518 239b 05       		.uleb128 0x5
 8519 239c 03       		.byte	0x3
 8520 239d 24020000 		.4byte	xNumOfOverflows
 8521 23a1 24       		.uleb128 0x24
 8522 23a2 78160000 		.4byte	.LASF389
 8523 23a6 01       		.byte	0x1
 8524 23a7 9301     		.2byte	0x193
 8525 23a9 FC070000 		.4byte	0x7fc
 8526 23ad 05       		.uleb128 0x5
 8527 23ae 03       		.byte	0x3
 8528 23af 0C020000 		.4byte	uxTaskNumber
 8529 23b3 24       		.uleb128 0x24
 8530 23b4 13130000 		.4byte	.LASF390
 8531 23b8 01       		.byte	0x1
 8532 23b9 9401     		.2byte	0x194
 8533 23bb 3D230000 		.4byte	0x233d
 8534 23bf 05       		.uleb128 0x5
 8535 23c0 03       		.byte	0x3
 8536 23c1 2C000000 		.4byte	xNextTaskUnblockTime
 8537 23c5 24       		.uleb128 0x24
 8538 23c6 241D0000 		.4byte	.LASF391
 8539 23ca 01       		.byte	0x1
 8540 23cb 9501     		.2byte	0x195
 8541 23cd FA080000 		.4byte	0x8fa
 8542 23d1 05       		.uleb128 0x5
 8543 23d2 03       		.byte	0x3
 8544 23d3 20020000 		.4byte	xIdleTaskHandle
 8545 23d7 24       		.uleb128 0x24
 8546 23d8 08230000 		.4byte	.LASF392
 8547 23dc 01       		.byte	0x1
 8548 23dd 9F01     		.2byte	0x19f
 8549 23df 02230000 		.4byte	0x2302
 8550 23e3 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 250


 8551 23e4 03       		.byte	0x3
 8552 23e5 1C020000 		.4byte	uxSchedulerSuspended
 8553 23e9 37       		.uleb128 0x37
 8554 23ea 2C1B0000 		.4byte	.LASF393
 8555 23ee 12       		.byte	0x12
 8556 23ef EA07     		.2byte	0x7ea
 8557 23f1 F5230000 		.4byte	0x23f5
 8558 23f5 08       		.uleb128 0x8
 8559 23f6 E0000000 		.4byte	0xe0
 8560 23fa 37       		.uleb128 0x37
 8561 23fb F4120000 		.4byte	.LASF394
 8562 23ff 0A       		.byte	0xa
 8563 2400 2202     		.2byte	0x222
 8564 2402 69060000 		.4byte	0x669
 8565 2406 11       		.uleb128 0x11
 8566 2407 38060000 		.4byte	0x638
 8567 240b 16240000 		.4byte	0x2416
 8568 240f 12       		.uleb128 0x12
 8569 2410 A9000000 		.4byte	0xa9
 8570 2414 00       		.byte	0
 8571 2415 00       		.byte	0
 8572 2416 37       		.uleb128 0x37
 8573 2417 27030000 		.4byte	.LASF395
 8574 241b 0A       		.byte	0xa
 8575 241c 2C02     		.2byte	0x22c
 8576 241e 06240000 		.4byte	0x2406
 8577 2422 11       		.uleb128 0x11
 8578 2423 B1060000 		.4byte	0x6b1
 8579 2427 32240000 		.4byte	0x2432
 8580 242b 12       		.uleb128 0x12
 8581 242c A9000000 		.4byte	0xa9
 8582 2430 00       		.byte	0
 8583 2431 00       		.byte	0
 8584 2432 37       		.uleb128 0x37
 8585 2433 24000000 		.4byte	.LASF396
 8586 2437 0A       		.byte	0xa
 8587 2438 2D02     		.2byte	0x22d
 8588 243a 22240000 		.4byte	0x2422
 8589 243e 38       		.uleb128 0x38
 8590 243f 91010000 		.4byte	.LASF397
 8591 2443 13       		.byte	0x13
 8592 2444 5E       		.byte	0x5e
 8593 2445 BB010000 		.4byte	0x1bb
 8594 2449 37       		.uleb128 0x37
 8595 244a 4D210000 		.4byte	.LASF398
 8596 244e 0E       		.byte	0xe
 8597 244f 6001     		.2byte	0x160
 8598 2451 EB000000 		.4byte	0xeb
 8599 2455 11       		.uleb128 0x11
 8600 2456 65240000 		.4byte	0x2465
 8601 245a 65240000 		.4byte	0x2465
 8602 245e 12       		.uleb128 0x12
 8603 245f A9000000 		.4byte	0xa9
 8604 2463 00       		.byte	0
 8605 2464 00       		.byte	0
 8606 2465 07       		.uleb128 0x7
 8607 2466 BF070000 		.4byte	0x7bf
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 251


 8608 246a 37       		.uleb128 0x37
 8609 246b 981A0000 		.4byte	.LASF399
 8610 246f 0E       		.byte	0xe
 8611 2470 6401     		.2byte	0x164
 8612 2472 76240000 		.4byte	0x2476
 8613 2476 07       		.uleb128 0x7
 8614 2477 55240000 		.4byte	0x2455
 8615 247b 39       		.uleb128 0x39
 8616 247c 53190000 		.4byte	.LASF400
 8617 2480 01       		.byte	0x1
 8618 2481 7401     		.2byte	0x174
 8619 2483 8D240000 		.4byte	0x248d
 8620 2487 05       		.uleb128 0x5
 8621 2488 03       		.byte	0x3
 8622 2489 00000000 		.4byte	pxCurrentTCB
 8623 248d 08       		.uleb128 0x8
 8624 248e 2E0B0000 		.4byte	0xb2e
 8625 2492 3A       		.uleb128 0x3a
 8626 2493 651C0000 		.4byte	.LASF401
 8627 2497 651C0000 		.4byte	.LASF401
 8628 249b 14       		.byte	0x14
 8629 249c AC       		.byte	0xac
 8630 249d 3A       		.uleb128 0x3a
 8631 249e 9E150000 		.4byte	.LASF402
 8632 24a2 9E150000 		.4byte	.LASF402
 8633 24a6 15       		.byte	0x15
 8634 24a7 19       		.byte	0x19
 8635 24a8 3B       		.uleb128 0x3b
 8636 24a9 A71A0000 		.4byte	.LASF403
 8637 24ad A71A0000 		.4byte	.LASF403
 8638 24b1 10       		.byte	0x10
 8639 24b2 8D01     		.2byte	0x18d
 8640 24b4 3A       		.uleb128 0x3a
 8641 24b5 45130000 		.4byte	.LASF404
 8642 24b9 45130000 		.4byte	.LASF404
 8643 24bd 14       		.byte	0x14
 8644 24be 90       		.byte	0x90
 8645 24bf 3B       		.uleb128 0x3b
 8646 24c0 9D1F0000 		.4byte	.LASF405
 8647 24c4 9D1F0000 		.4byte	.LASF405
 8648 24c8 10       		.byte	0x10
 8649 24c9 8201     		.2byte	0x182
 8650 24cb 3A       		.uleb128 0x3a
 8651 24cc C0050000 		.4byte	.LASF406
 8652 24d0 C0050000 		.4byte	.LASF406
 8653 24d4 02       		.byte	0x2
 8654 24d5 8D       		.byte	0x8d
 8655 24d6 3B       		.uleb128 0x3b
 8656 24d7 F50D0000 		.4byte	.LASF407
 8657 24db F50D0000 		.4byte	.LASF407
 8658 24df 10       		.byte	0x10
 8659 24e0 AF01     		.2byte	0x1af
 8660 24e2 3A       		.uleb128 0x3a
 8661 24e3 74240000 		.4byte	.LASF408
 8662 24e7 74240000 		.4byte	.LASF408
 8663 24eb 02       		.byte	0x2
 8664 24ec 8E       		.byte	0x8e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 252


 8665 24ed 3B       		.uleb128 0x3b
 8666 24ee 881E0000 		.4byte	.LASF409
 8667 24f2 881E0000 		.4byte	.LASF409
 8668 24f6 10       		.byte	0x10
 8669 24f7 BE01     		.2byte	0x1be
 8670 24f9 3B       		.uleb128 0x3b
 8671 24fa 18000000 		.4byte	.LASF410
 8672 24fe 18000000 		.4byte	.LASF410
 8673 2502 10       		.byte	0x10
 8674 2503 9A01     		.2byte	0x19a
 8675 2505 3A       		.uleb128 0x3a
 8676 2506 86230000 		.4byte	.LASF411
 8677 250a 86230000 		.4byte	.LASF411
 8678 250e 14       		.byte	0x14
 8679 250f AB       		.byte	0xab
 8680 2510 3A       		.uleb128 0x3a
 8681 2511 AD1F0000 		.4byte	.LASF412
 8682 2515 AD1F0000 		.4byte	.LASF412
 8683 2519 02       		.byte	0x2
 8684 251a 9F       		.byte	0x9f
 8685 251b 3B       		.uleb128 0x3b
 8686 251c CD070000 		.4byte	.LASF413
 8687 2520 CD070000 		.4byte	.LASF413
 8688 2524 16       		.byte	0x16
 8689 2525 1905     		.2byte	0x519
 8690 2527 3A       		.uleb128 0x3a
 8691 2528 A6010000 		.4byte	.LASF414
 8692 252c A6010000 		.4byte	.LASF414
 8693 2530 14       		.byte	0x14
 8694 2531 B5       		.byte	0xb5
 8695 2532 3A       		.uleb128 0x3a
 8696 2533 531C0000 		.4byte	.LASF415
 8697 2537 531C0000 		.4byte	.LASF415
 8698 253b 14       		.byte	0x14
 8699 253c BC       		.byte	0xbc
 8700 253d 3B       		.uleb128 0x3b
 8701 253e 28060000 		.4byte	.LASF416
 8702 2542 28060000 		.4byte	.LASF416
 8703 2546 01       		.byte	0x1
 8704 2547 760C     		.2byte	0xc76
 8705 2549 3B       		.uleb128 0x3b
 8706 254a 421A0000 		.4byte	.LASF417
 8707 254e 421A0000 		.4byte	.LASF417
 8708 2552 01       		.byte	0x1
 8709 2553 AE01     		.2byte	0x1ae
 8710 2555 00       		.byte	0
 8711              		.section	.debug_abbrev,"",%progbits
 8712              	.Ldebug_abbrev0:
 8713 0000 01       		.uleb128 0x1
 8714 0001 11       		.uleb128 0x11
 8715 0002 01       		.byte	0x1
 8716 0003 25       		.uleb128 0x25
 8717 0004 0E       		.uleb128 0xe
 8718 0005 13       		.uleb128 0x13
 8719 0006 0B       		.uleb128 0xb
 8720 0007 03       		.uleb128 0x3
 8721 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 253


 8722 0009 1B       		.uleb128 0x1b
 8723 000a 0E       		.uleb128 0xe
 8724 000b 55       		.uleb128 0x55
 8725 000c 17       		.uleb128 0x17
 8726 000d 11       		.uleb128 0x11
 8727 000e 01       		.uleb128 0x1
 8728 000f 10       		.uleb128 0x10
 8729 0010 17       		.uleb128 0x17
 8730 0011 00       		.byte	0
 8731 0012 00       		.byte	0
 8732 0013 02       		.uleb128 0x2
 8733 0014 16       		.uleb128 0x16
 8734 0015 00       		.byte	0
 8735 0016 03       		.uleb128 0x3
 8736 0017 0E       		.uleb128 0xe
 8737 0018 3A       		.uleb128 0x3a
 8738 0019 0B       		.uleb128 0xb
 8739 001a 3B       		.uleb128 0x3b
 8740 001b 0B       		.uleb128 0xb
 8741 001c 49       		.uleb128 0x49
 8742 001d 13       		.uleb128 0x13
 8743 001e 00       		.byte	0
 8744 001f 00       		.byte	0
 8745 0020 03       		.uleb128 0x3
 8746 0021 24       		.uleb128 0x24
 8747 0022 00       		.byte	0
 8748 0023 0B       		.uleb128 0xb
 8749 0024 0B       		.uleb128 0xb
 8750 0025 3E       		.uleb128 0x3e
 8751 0026 0B       		.uleb128 0xb
 8752 0027 03       		.uleb128 0x3
 8753 0028 0E       		.uleb128 0xe
 8754 0029 00       		.byte	0
 8755 002a 00       		.byte	0
 8756 002b 04       		.uleb128 0x4
 8757 002c 24       		.uleb128 0x24
 8758 002d 00       		.byte	0
 8759 002e 0B       		.uleb128 0xb
 8760 002f 0B       		.uleb128 0xb
 8761 0030 3E       		.uleb128 0x3e
 8762 0031 0B       		.uleb128 0xb
 8763 0032 03       		.uleb128 0x3
 8764 0033 08       		.uleb128 0x8
 8765 0034 00       		.byte	0
 8766 0035 00       		.byte	0
 8767 0036 05       		.uleb128 0x5
 8768 0037 0F       		.uleb128 0xf
 8769 0038 00       		.byte	0
 8770 0039 0B       		.uleb128 0xb
 8771 003a 0B       		.uleb128 0xb
 8772 003b 00       		.byte	0
 8773 003c 00       		.byte	0
 8774 003d 06       		.uleb128 0x6
 8775 003e 0F       		.uleb128 0xf
 8776 003f 00       		.byte	0
 8777 0040 0B       		.uleb128 0xb
 8778 0041 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 254


 8779 0042 49       		.uleb128 0x49
 8780 0043 13       		.uleb128 0x13
 8781 0044 00       		.byte	0
 8782 0045 00       		.byte	0
 8783 0046 07       		.uleb128 0x7
 8784 0047 26       		.uleb128 0x26
 8785 0048 00       		.byte	0
 8786 0049 49       		.uleb128 0x49
 8787 004a 13       		.uleb128 0x13
 8788 004b 00       		.byte	0
 8789 004c 00       		.byte	0
 8790 004d 08       		.uleb128 0x8
 8791 004e 35       		.uleb128 0x35
 8792 004f 00       		.byte	0
 8793 0050 49       		.uleb128 0x49
 8794 0051 13       		.uleb128 0x13
 8795 0052 00       		.byte	0
 8796 0053 00       		.byte	0
 8797 0054 09       		.uleb128 0x9
 8798 0055 15       		.uleb128 0x15
 8799 0056 01       		.byte	0x1
 8800 0057 27       		.uleb128 0x27
 8801 0058 19       		.uleb128 0x19
 8802 0059 01       		.uleb128 0x1
 8803 005a 13       		.uleb128 0x13
 8804 005b 00       		.byte	0
 8805 005c 00       		.byte	0
 8806 005d 0A       		.uleb128 0xa
 8807 005e 05       		.uleb128 0x5
 8808 005f 00       		.byte	0
 8809 0060 49       		.uleb128 0x49
 8810 0061 13       		.uleb128 0x13
 8811 0062 00       		.byte	0
 8812 0063 00       		.byte	0
 8813 0064 0B       		.uleb128 0xb
 8814 0065 16       		.uleb128 0x16
 8815 0066 00       		.byte	0
 8816 0067 03       		.uleb128 0x3
 8817 0068 0E       		.uleb128 0xe
 8818 0069 3A       		.uleb128 0x3a
 8819 006a 0B       		.uleb128 0xb
 8820 006b 3B       		.uleb128 0x3b
 8821 006c 05       		.uleb128 0x5
 8822 006d 49       		.uleb128 0x49
 8823 006e 13       		.uleb128 0x13
 8824 006f 00       		.byte	0
 8825 0070 00       		.byte	0
 8826 0071 0C       		.uleb128 0xc
 8827 0072 13       		.uleb128 0x13
 8828 0073 01       		.byte	0x1
 8829 0074 03       		.uleb128 0x3
 8830 0075 0E       		.uleb128 0xe
 8831 0076 0B       		.uleb128 0xb
 8832 0077 0B       		.uleb128 0xb
 8833 0078 3A       		.uleb128 0x3a
 8834 0079 0B       		.uleb128 0xb
 8835 007a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 255


 8836 007b 05       		.uleb128 0x5
 8837 007c 01       		.uleb128 0x1
 8838 007d 13       		.uleb128 0x13
 8839 007e 00       		.byte	0
 8840 007f 00       		.byte	0
 8841 0080 0D       		.uleb128 0xd
 8842 0081 0D       		.uleb128 0xd
 8843 0082 00       		.byte	0
 8844 0083 03       		.uleb128 0x3
 8845 0084 0E       		.uleb128 0xe
 8846 0085 3A       		.uleb128 0x3a
 8847 0086 0B       		.uleb128 0xb
 8848 0087 3B       		.uleb128 0x3b
 8849 0088 05       		.uleb128 0x5
 8850 0089 49       		.uleb128 0x49
 8851 008a 13       		.uleb128 0x13
 8852 008b 38       		.uleb128 0x38
 8853 008c 0B       		.uleb128 0xb
 8854 008d 00       		.byte	0
 8855 008e 00       		.byte	0
 8856 008f 0E       		.uleb128 0xe
 8857 0090 04       		.uleb128 0x4
 8858 0091 01       		.byte	0x1
 8859 0092 0B       		.uleb128 0xb
 8860 0093 0B       		.uleb128 0xb
 8861 0094 49       		.uleb128 0x49
 8862 0095 13       		.uleb128 0x13
 8863 0096 3A       		.uleb128 0x3a
 8864 0097 0B       		.uleb128 0xb
 8865 0098 3B       		.uleb128 0x3b
 8866 0099 05       		.uleb128 0x5
 8867 009a 01       		.uleb128 0x1
 8868 009b 13       		.uleb128 0x13
 8869 009c 00       		.byte	0
 8870 009d 00       		.byte	0
 8871 009e 0F       		.uleb128 0xf
 8872 009f 28       		.uleb128 0x28
 8873 00a0 00       		.byte	0
 8874 00a1 03       		.uleb128 0x3
 8875 00a2 0E       		.uleb128 0xe
 8876 00a3 1C       		.uleb128 0x1c
 8877 00a4 0B       		.uleb128 0xb
 8878 00a5 00       		.byte	0
 8879 00a6 00       		.byte	0
 8880 00a7 10       		.uleb128 0x10
 8881 00a8 13       		.uleb128 0x13
 8882 00a9 01       		.byte	0x1
 8883 00aa 0B       		.uleb128 0xb
 8884 00ab 0B       		.uleb128 0xb
 8885 00ac 3A       		.uleb128 0x3a
 8886 00ad 0B       		.uleb128 0xb
 8887 00ae 3B       		.uleb128 0x3b
 8888 00af 05       		.uleb128 0x5
 8889 00b0 01       		.uleb128 0x1
 8890 00b1 13       		.uleb128 0x13
 8891 00b2 00       		.byte	0
 8892 00b3 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 256


 8893 00b4 11       		.uleb128 0x11
 8894 00b5 01       		.uleb128 0x1
 8895 00b6 01       		.byte	0x1
 8896 00b7 49       		.uleb128 0x49
 8897 00b8 13       		.uleb128 0x13
 8898 00b9 01       		.uleb128 0x1
 8899 00ba 13       		.uleb128 0x13
 8900 00bb 00       		.byte	0
 8901 00bc 00       		.byte	0
 8902 00bd 12       		.uleb128 0x12
 8903 00be 21       		.uleb128 0x21
 8904 00bf 00       		.byte	0
 8905 00c0 49       		.uleb128 0x49
 8906 00c1 13       		.uleb128 0x13
 8907 00c2 2F       		.uleb128 0x2f
 8908 00c3 0B       		.uleb128 0xb
 8909 00c4 00       		.byte	0
 8910 00c5 00       		.byte	0
 8911 00c6 13       		.uleb128 0x13
 8912 00c7 28       		.uleb128 0x28
 8913 00c8 00       		.byte	0
 8914 00c9 03       		.uleb128 0x3
 8915 00ca 0E       		.uleb128 0xe
 8916 00cb 1C       		.uleb128 0x1c
 8917 00cc 05       		.uleb128 0x5
 8918 00cd 00       		.byte	0
 8919 00ce 00       		.byte	0
 8920 00cf 14       		.uleb128 0x14
 8921 00d0 04       		.uleb128 0x4
 8922 00d1 01       		.byte	0x1
 8923 00d2 0B       		.uleb128 0xb
 8924 00d3 0B       		.uleb128 0xb
 8925 00d4 49       		.uleb128 0x49
 8926 00d5 13       		.uleb128 0x13
 8927 00d6 3A       		.uleb128 0x3a
 8928 00d7 0B       		.uleb128 0xb
 8929 00d8 3B       		.uleb128 0x3b
 8930 00d9 0B       		.uleb128 0xb
 8931 00da 01       		.uleb128 0x1
 8932 00db 13       		.uleb128 0x13
 8933 00dc 00       		.byte	0
 8934 00dd 00       		.byte	0
 8935 00de 15       		.uleb128 0x15
 8936 00df 13       		.uleb128 0x13
 8937 00e0 01       		.byte	0x1
 8938 00e1 0B       		.uleb128 0xb
 8939 00e2 0B       		.uleb128 0xb
 8940 00e3 3A       		.uleb128 0x3a
 8941 00e4 0B       		.uleb128 0xb
 8942 00e5 3B       		.uleb128 0x3b
 8943 00e6 0B       		.uleb128 0xb
 8944 00e7 01       		.uleb128 0x1
 8945 00e8 13       		.uleb128 0x13
 8946 00e9 00       		.byte	0
 8947 00ea 00       		.byte	0
 8948 00eb 16       		.uleb128 0x16
 8949 00ec 0D       		.uleb128 0xd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 257


 8950 00ed 00       		.byte	0
 8951 00ee 03       		.uleb128 0x3
 8952 00ef 0E       		.uleb128 0xe
 8953 00f0 3A       		.uleb128 0x3a
 8954 00f1 0B       		.uleb128 0xb
 8955 00f2 3B       		.uleb128 0x3b
 8956 00f3 0B       		.uleb128 0xb
 8957 00f4 49       		.uleb128 0x49
 8958 00f5 13       		.uleb128 0x13
 8959 00f6 38       		.uleb128 0x38
 8960 00f7 0B       		.uleb128 0xb
 8961 00f8 00       		.byte	0
 8962 00f9 00       		.byte	0
 8963 00fa 17       		.uleb128 0x17
 8964 00fb 13       		.uleb128 0x13
 8965 00fc 01       		.byte	0x1
 8966 00fd 03       		.uleb128 0x3
 8967 00fe 0E       		.uleb128 0xe
 8968 00ff 0B       		.uleb128 0xb
 8969 0100 0B       		.uleb128 0xb
 8970 0101 3A       		.uleb128 0x3a
 8971 0102 0B       		.uleb128 0xb
 8972 0103 3B       		.uleb128 0x3b
 8973 0104 0B       		.uleb128 0xb
 8974 0105 01       		.uleb128 0x1
 8975 0106 13       		.uleb128 0x13
 8976 0107 00       		.byte	0
 8977 0108 00       		.byte	0
 8978 0109 18       		.uleb128 0x18
 8979 010a 2E       		.uleb128 0x2e
 8980 010b 01       		.byte	0x1
 8981 010c 03       		.uleb128 0x3
 8982 010d 0E       		.uleb128 0xe
 8983 010e 3A       		.uleb128 0x3a
 8984 010f 0B       		.uleb128 0xb
 8985 0110 3B       		.uleb128 0x3b
 8986 0111 0B       		.uleb128 0xb
 8987 0112 27       		.uleb128 0x27
 8988 0113 19       		.uleb128 0x19
 8989 0114 49       		.uleb128 0x49
 8990 0115 13       		.uleb128 0x13
 8991 0116 20       		.uleb128 0x20
 8992 0117 0B       		.uleb128 0xb
 8993 0118 01       		.uleb128 0x1
 8994 0119 13       		.uleb128 0x13
 8995 011a 00       		.byte	0
 8996 011b 00       		.byte	0
 8997 011c 19       		.uleb128 0x19
 8998 011d 34       		.uleb128 0x34
 8999 011e 00       		.byte	0
 9000 011f 03       		.uleb128 0x3
 9001 0120 0E       		.uleb128 0xe
 9002 0121 3A       		.uleb128 0x3a
 9003 0122 0B       		.uleb128 0xb
 9004 0123 3B       		.uleb128 0x3b
 9005 0124 0B       		.uleb128 0xb
 9006 0125 49       		.uleb128 0x49
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 258


 9007 0126 13       		.uleb128 0x13
 9008 0127 00       		.byte	0
 9009 0128 00       		.byte	0
 9010 0129 1A       		.uleb128 0x1a
 9011 012a 2E       		.uleb128 0x2e
 9012 012b 01       		.byte	0x1
 9013 012c 03       		.uleb128 0x3
 9014 012d 0E       		.uleb128 0xe
 9015 012e 3A       		.uleb128 0x3a
 9016 012f 0B       		.uleb128 0xb
 9017 0130 3B       		.uleb128 0x3b
 9018 0131 0B       		.uleb128 0xb
 9019 0132 27       		.uleb128 0x27
 9020 0133 19       		.uleb128 0x19
 9021 0134 20       		.uleb128 0x20
 9022 0135 0B       		.uleb128 0xb
 9023 0136 01       		.uleb128 0x1
 9024 0137 13       		.uleb128 0x13
 9025 0138 00       		.byte	0
 9026 0139 00       		.byte	0
 9027 013a 1B       		.uleb128 0x1b
 9028 013b 05       		.uleb128 0x5
 9029 013c 00       		.byte	0
 9030 013d 03       		.uleb128 0x3
 9031 013e 0E       		.uleb128 0xe
 9032 013f 3A       		.uleb128 0x3a
 9033 0140 0B       		.uleb128 0xb
 9034 0141 3B       		.uleb128 0x3b
 9035 0142 0B       		.uleb128 0xb
 9036 0143 49       		.uleb128 0x49
 9037 0144 13       		.uleb128 0x13
 9038 0145 00       		.byte	0
 9039 0146 00       		.byte	0
 9040 0147 1C       		.uleb128 0x1c
 9041 0148 2E       		.uleb128 0x2e
 9042 0149 01       		.byte	0x1
 9043 014a 03       		.uleb128 0x3
 9044 014b 0E       		.uleb128 0xe
 9045 014c 3A       		.uleb128 0x3a
 9046 014d 0B       		.uleb128 0xb
 9047 014e 3B       		.uleb128 0x3b
 9048 014f 05       		.uleb128 0x5
 9049 0150 27       		.uleb128 0x27
 9050 0151 19       		.uleb128 0x19
 9051 0152 49       		.uleb128 0x49
 9052 0153 13       		.uleb128 0x13
 9053 0154 11       		.uleb128 0x11
 9054 0155 01       		.uleb128 0x1
 9055 0156 12       		.uleb128 0x12
 9056 0157 06       		.uleb128 0x6
 9057 0158 40       		.uleb128 0x40
 9058 0159 18       		.uleb128 0x18
 9059 015a 9742     		.uleb128 0x2117
 9060 015c 19       		.uleb128 0x19
 9061 015d 01       		.uleb128 0x1
 9062 015e 13       		.uleb128 0x13
 9063 015f 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 259


 9064 0160 00       		.byte	0
 9065 0161 1D       		.uleb128 0x1d
 9066 0162 05       		.uleb128 0x5
 9067 0163 00       		.byte	0
 9068 0164 03       		.uleb128 0x3
 9069 0165 0E       		.uleb128 0xe
 9070 0166 3A       		.uleb128 0x3a
 9071 0167 0B       		.uleb128 0xb
 9072 0168 3B       		.uleb128 0x3b
 9073 0169 05       		.uleb128 0x5
 9074 016a 49       		.uleb128 0x49
 9075 016b 13       		.uleb128 0x13
 9076 016c 02       		.uleb128 0x2
 9077 016d 17       		.uleb128 0x17
 9078 016e 00       		.byte	0
 9079 016f 00       		.byte	0
 9080 0170 1E       		.uleb128 0x1e
 9081 0171 34       		.uleb128 0x34
 9082 0172 00       		.byte	0
 9083 0173 03       		.uleb128 0x3
 9084 0174 0E       		.uleb128 0xe
 9085 0175 3A       		.uleb128 0x3a
 9086 0176 0B       		.uleb128 0xb
 9087 0177 3B       		.uleb128 0x3b
 9088 0178 05       		.uleb128 0x5
 9089 0179 49       		.uleb128 0x49
 9090 017a 13       		.uleb128 0x13
 9091 017b 02       		.uleb128 0x2
 9092 017c 17       		.uleb128 0x17
 9093 017d 00       		.byte	0
 9094 017e 00       		.byte	0
 9095 017f 1F       		.uleb128 0x1f
 9096 0180 2E       		.uleb128 0x2e
 9097 0181 01       		.byte	0x1
 9098 0182 03       		.uleb128 0x3
 9099 0183 0E       		.uleb128 0xe
 9100 0184 3A       		.uleb128 0x3a
 9101 0185 0B       		.uleb128 0xb
 9102 0186 3B       		.uleb128 0x3b
 9103 0187 05       		.uleb128 0x5
 9104 0188 27       		.uleb128 0x27
 9105 0189 19       		.uleb128 0x19
 9106 018a 11       		.uleb128 0x11
 9107 018b 01       		.uleb128 0x1
 9108 018c 12       		.uleb128 0x12
 9109 018d 06       		.uleb128 0x6
 9110 018e 40       		.uleb128 0x40
 9111 018f 18       		.uleb128 0x18
 9112 0190 9742     		.uleb128 0x2117
 9113 0192 19       		.uleb128 0x19
 9114 0193 01       		.uleb128 0x1
 9115 0194 13       		.uleb128 0x13
 9116 0195 00       		.byte	0
 9117 0196 00       		.byte	0
 9118 0197 20       		.uleb128 0x20
 9119 0198 898201   		.uleb128 0x4109
 9120 019b 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 260


 9121 019c 11       		.uleb128 0x11
 9122 019d 01       		.uleb128 0x1
 9123 019e 31       		.uleb128 0x31
 9124 019f 13       		.uleb128 0x13
 9125 01a0 00       		.byte	0
 9126 01a1 00       		.byte	0
 9127 01a2 21       		.uleb128 0x21
 9128 01a3 898201   		.uleb128 0x4109
 9129 01a6 01       		.byte	0x1
 9130 01a7 11       		.uleb128 0x11
 9131 01a8 01       		.uleb128 0x1
 9132 01a9 31       		.uleb128 0x31
 9133 01aa 13       		.uleb128 0x13
 9134 01ab 00       		.byte	0
 9135 01ac 00       		.byte	0
 9136 01ad 22       		.uleb128 0x22
 9137 01ae 8A8201   		.uleb128 0x410a
 9138 01b1 00       		.byte	0
 9139 01b2 02       		.uleb128 0x2
 9140 01b3 18       		.uleb128 0x18
 9141 01b4 9142     		.uleb128 0x2111
 9142 01b6 18       		.uleb128 0x18
 9143 01b7 00       		.byte	0
 9144 01b8 00       		.byte	0
 9145 01b9 23       		.uleb128 0x23
 9146 01ba 05       		.uleb128 0x5
 9147 01bb 00       		.byte	0
 9148 01bc 03       		.uleb128 0x3
 9149 01bd 0E       		.uleb128 0xe
 9150 01be 3A       		.uleb128 0x3a
 9151 01bf 0B       		.uleb128 0xb
 9152 01c0 3B       		.uleb128 0x3b
 9153 01c1 05       		.uleb128 0x5
 9154 01c2 49       		.uleb128 0x49
 9155 01c3 13       		.uleb128 0x13
 9156 01c4 02       		.uleb128 0x2
 9157 01c5 18       		.uleb128 0x18
 9158 01c6 00       		.byte	0
 9159 01c7 00       		.byte	0
 9160 01c8 24       		.uleb128 0x24
 9161 01c9 34       		.uleb128 0x34
 9162 01ca 00       		.byte	0
 9163 01cb 03       		.uleb128 0x3
 9164 01cc 0E       		.uleb128 0xe
 9165 01cd 3A       		.uleb128 0x3a
 9166 01ce 0B       		.uleb128 0xb
 9167 01cf 3B       		.uleb128 0x3b
 9168 01d0 05       		.uleb128 0x5
 9169 01d1 49       		.uleb128 0x49
 9170 01d2 13       		.uleb128 0x13
 9171 01d3 02       		.uleb128 0x2
 9172 01d4 18       		.uleb128 0x18
 9173 01d5 00       		.byte	0
 9174 01d6 00       		.byte	0
 9175 01d7 25       		.uleb128 0x25
 9176 01d8 34       		.uleb128 0x34
 9177 01d9 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 261


 9178 01da 03       		.uleb128 0x3
 9179 01db 08       		.uleb128 0x8
 9180 01dc 3A       		.uleb128 0x3a
 9181 01dd 0B       		.uleb128 0xb
 9182 01de 3B       		.uleb128 0x3b
 9183 01df 05       		.uleb128 0x5
 9184 01e0 49       		.uleb128 0x49
 9185 01e1 13       		.uleb128 0x13
 9186 01e2 02       		.uleb128 0x2
 9187 01e3 17       		.uleb128 0x17
 9188 01e4 00       		.byte	0
 9189 01e5 00       		.byte	0
 9190 01e6 26       		.uleb128 0x26
 9191 01e7 898201   		.uleb128 0x4109
 9192 01ea 01       		.byte	0x1
 9193 01eb 11       		.uleb128 0x11
 9194 01ec 01       		.uleb128 0x1
 9195 01ed 31       		.uleb128 0x31
 9196 01ee 13       		.uleb128 0x13
 9197 01ef 01       		.uleb128 0x1
 9198 01f0 13       		.uleb128 0x13
 9199 01f1 00       		.byte	0
 9200 01f2 00       		.byte	0
 9201 01f3 27       		.uleb128 0x27
 9202 01f4 2E       		.uleb128 0x2e
 9203 01f5 01       		.byte	0x1
 9204 01f6 3F       		.uleb128 0x3f
 9205 01f7 19       		.uleb128 0x19
 9206 01f8 03       		.uleb128 0x3
 9207 01f9 0E       		.uleb128 0xe
 9208 01fa 3A       		.uleb128 0x3a
 9209 01fb 0B       		.uleb128 0xb
 9210 01fc 3B       		.uleb128 0x3b
 9211 01fd 05       		.uleb128 0x5
 9212 01fe 27       		.uleb128 0x27
 9213 01ff 19       		.uleb128 0x19
 9214 0200 49       		.uleb128 0x49
 9215 0201 13       		.uleb128 0x13
 9216 0202 11       		.uleb128 0x11
 9217 0203 01       		.uleb128 0x1
 9218 0204 12       		.uleb128 0x12
 9219 0205 06       		.uleb128 0x6
 9220 0206 40       		.uleb128 0x40
 9221 0207 18       		.uleb128 0x18
 9222 0208 9742     		.uleb128 0x2117
 9223 020a 19       		.uleb128 0x19
 9224 020b 01       		.uleb128 0x1
 9225 020c 13       		.uleb128 0x13
 9226 020d 00       		.byte	0
 9227 020e 00       		.byte	0
 9228 020f 28       		.uleb128 0x28
 9229 0210 0B       		.uleb128 0xb
 9230 0211 01       		.byte	0x1
 9231 0212 11       		.uleb128 0x11
 9232 0213 01       		.uleb128 0x1
 9233 0214 12       		.uleb128 0x12
 9234 0215 06       		.uleb128 0x6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 262


 9235 0216 01       		.uleb128 0x1
 9236 0217 13       		.uleb128 0x13
 9237 0218 00       		.byte	0
 9238 0219 00       		.byte	0
 9239 021a 29       		.uleb128 0x29
 9240 021b 2E       		.uleb128 0x2e
 9241 021c 01       		.byte	0x1
 9242 021d 3F       		.uleb128 0x3f
 9243 021e 19       		.uleb128 0x19
 9244 021f 03       		.uleb128 0x3
 9245 0220 0E       		.uleb128 0xe
 9246 0221 3A       		.uleb128 0x3a
 9247 0222 0B       		.uleb128 0xb
 9248 0223 3B       		.uleb128 0x3b
 9249 0224 05       		.uleb128 0x5
 9250 0225 27       		.uleb128 0x27
 9251 0226 19       		.uleb128 0x19
 9252 0227 11       		.uleb128 0x11
 9253 0228 01       		.uleb128 0x1
 9254 0229 12       		.uleb128 0x12
 9255 022a 06       		.uleb128 0x6
 9256 022b 40       		.uleb128 0x40
 9257 022c 18       		.uleb128 0x18
 9258 022d 9742     		.uleb128 0x2117
 9259 022f 19       		.uleb128 0x19
 9260 0230 01       		.uleb128 0x1
 9261 0231 13       		.uleb128 0x13
 9262 0232 00       		.byte	0
 9263 0233 00       		.byte	0
 9264 0234 2A       		.uleb128 0x2a
 9265 0235 34       		.uleb128 0x34
 9266 0236 00       		.byte	0
 9267 0237 03       		.uleb128 0x3
 9268 0238 0E       		.uleb128 0xe
 9269 0239 3A       		.uleb128 0x3a
 9270 023a 0B       		.uleb128 0xb
 9271 023b 3B       		.uleb128 0x3b
 9272 023c 05       		.uleb128 0x5
 9273 023d 49       		.uleb128 0x49
 9274 023e 13       		.uleb128 0x13
 9275 023f 00       		.byte	0
 9276 0240 00       		.byte	0
 9277 0241 2B       		.uleb128 0x2b
 9278 0242 1D       		.uleb128 0x1d
 9279 0243 01       		.byte	0x1
 9280 0244 31       		.uleb128 0x31
 9281 0245 13       		.uleb128 0x13
 9282 0246 11       		.uleb128 0x11
 9283 0247 01       		.uleb128 0x1
 9284 0248 12       		.uleb128 0x12
 9285 0249 06       		.uleb128 0x6
 9286 024a 58       		.uleb128 0x58
 9287 024b 0B       		.uleb128 0xb
 9288 024c 59       		.uleb128 0x59
 9289 024d 05       		.uleb128 0x5
 9290 024e 01       		.uleb128 0x1
 9291 024f 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 263


 9292 0250 00       		.byte	0
 9293 0251 00       		.byte	0
 9294 0252 2C       		.uleb128 0x2c
 9295 0253 0B       		.uleb128 0xb
 9296 0254 01       		.byte	0x1
 9297 0255 11       		.uleb128 0x11
 9298 0256 01       		.uleb128 0x1
 9299 0257 12       		.uleb128 0x12
 9300 0258 06       		.uleb128 0x6
 9301 0259 00       		.byte	0
 9302 025a 00       		.byte	0
 9303 025b 2D       		.uleb128 0x2d
 9304 025c 34       		.uleb128 0x34
 9305 025d 00       		.byte	0
 9306 025e 31       		.uleb128 0x31
 9307 025f 13       		.uleb128 0x13
 9308 0260 00       		.byte	0
 9309 0261 00       		.byte	0
 9310 0262 2E       		.uleb128 0x2e
 9311 0263 05       		.uleb128 0x5
 9312 0264 00       		.byte	0
 9313 0265 31       		.uleb128 0x31
 9314 0266 13       		.uleb128 0x13
 9315 0267 02       		.uleb128 0x2
 9316 0268 17       		.uleb128 0x17
 9317 0269 00       		.byte	0
 9318 026a 00       		.byte	0
 9319 026b 2F       		.uleb128 0x2f
 9320 026c 2E       		.uleb128 0x2e
 9321 026d 00       		.byte	0
 9322 026e 3F       		.uleb128 0x3f
 9323 026f 19       		.uleb128 0x19
 9324 0270 03       		.uleb128 0x3
 9325 0271 0E       		.uleb128 0xe
 9326 0272 3A       		.uleb128 0x3a
 9327 0273 0B       		.uleb128 0xb
 9328 0274 3B       		.uleb128 0x3b
 9329 0275 05       		.uleb128 0x5
 9330 0276 27       		.uleb128 0x27
 9331 0277 19       		.uleb128 0x19
 9332 0278 11       		.uleb128 0x11
 9333 0279 01       		.uleb128 0x1
 9334 027a 12       		.uleb128 0x12
 9335 027b 06       		.uleb128 0x6
 9336 027c 40       		.uleb128 0x40
 9337 027d 18       		.uleb128 0x18
 9338 027e 9742     		.uleb128 0x2117
 9339 0280 19       		.uleb128 0x19
 9340 0281 00       		.byte	0
 9341 0282 00       		.byte	0
 9342 0283 30       		.uleb128 0x30
 9343 0284 34       		.uleb128 0x34
 9344 0285 00       		.byte	0
 9345 0286 03       		.uleb128 0x3
 9346 0287 0E       		.uleb128 0xe
 9347 0288 3A       		.uleb128 0x3a
 9348 0289 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 264


 9349 028a 3B       		.uleb128 0x3b
 9350 028b 05       		.uleb128 0x5
 9351 028c 49       		.uleb128 0x49
 9352 028d 13       		.uleb128 0x13
 9353 028e 1C       		.uleb128 0x1c
 9354 028f 0B       		.uleb128 0xb
 9355 0290 00       		.byte	0
 9356 0291 00       		.byte	0
 9357 0292 31       		.uleb128 0x31
 9358 0293 2E       		.uleb128 0x2e
 9359 0294 00       		.byte	0
 9360 0295 3F       		.uleb128 0x3f
 9361 0296 19       		.uleb128 0x19
 9362 0297 03       		.uleb128 0x3
 9363 0298 0E       		.uleb128 0xe
 9364 0299 3A       		.uleb128 0x3a
 9365 029a 0B       		.uleb128 0xb
 9366 029b 3B       		.uleb128 0x3b
 9367 029c 05       		.uleb128 0x5
 9368 029d 27       		.uleb128 0x27
 9369 029e 19       		.uleb128 0x19
 9370 029f 49       		.uleb128 0x49
 9371 02a0 13       		.uleb128 0x13
 9372 02a1 11       		.uleb128 0x11
 9373 02a2 01       		.uleb128 0x1
 9374 02a3 12       		.uleb128 0x12
 9375 02a4 06       		.uleb128 0x6
 9376 02a5 40       		.uleb128 0x40
 9377 02a6 18       		.uleb128 0x18
 9378 02a7 9742     		.uleb128 0x2117
 9379 02a9 19       		.uleb128 0x19
 9380 02aa 00       		.byte	0
 9381 02ab 00       		.byte	0
 9382 02ac 32       		.uleb128 0x32
 9383 02ad 0B       		.uleb128 0xb
 9384 02ae 01       		.byte	0x1
 9385 02af 55       		.uleb128 0x55
 9386 02b0 17       		.uleb128 0x17
 9387 02b1 00       		.byte	0
 9388 02b2 00       		.byte	0
 9389 02b3 33       		.uleb128 0x33
 9390 02b4 0B       		.uleb128 0xb
 9391 02b5 01       		.byte	0x1
 9392 02b6 55       		.uleb128 0x55
 9393 02b7 17       		.uleb128 0x17
 9394 02b8 01       		.uleb128 0x1
 9395 02b9 13       		.uleb128 0x13
 9396 02ba 00       		.byte	0
 9397 02bb 00       		.byte	0
 9398 02bc 34       		.uleb128 0x34
 9399 02bd 2E       		.uleb128 0x2e
 9400 02be 01       		.byte	0x1
 9401 02bf 03       		.uleb128 0x3
 9402 02c0 0E       		.uleb128 0xe
 9403 02c1 3A       		.uleb128 0x3a
 9404 02c2 0B       		.uleb128 0xb
 9405 02c3 3B       		.uleb128 0x3b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 265


 9406 02c4 05       		.uleb128 0x5
 9407 02c5 27       		.uleb128 0x27
 9408 02c6 19       		.uleb128 0x19
 9409 02c7 8701     		.uleb128 0x87
 9410 02c9 19       		.uleb128 0x19
 9411 02ca 11       		.uleb128 0x11
 9412 02cb 01       		.uleb128 0x1
 9413 02cc 12       		.uleb128 0x12
 9414 02cd 06       		.uleb128 0x6
 9415 02ce 40       		.uleb128 0x40
 9416 02cf 18       		.uleb128 0x18
 9417 02d0 9742     		.uleb128 0x2117
 9418 02d2 19       		.uleb128 0x19
 9419 02d3 01       		.uleb128 0x1
 9420 02d4 13       		.uleb128 0x13
 9421 02d5 00       		.byte	0
 9422 02d6 00       		.byte	0
 9423 02d7 35       		.uleb128 0x35
 9424 02d8 2E       		.uleb128 0x2e
 9425 02d9 00       		.byte	0
 9426 02da 3F       		.uleb128 0x3f
 9427 02db 19       		.uleb128 0x19
 9428 02dc 03       		.uleb128 0x3
 9429 02dd 0E       		.uleb128 0xe
 9430 02de 3A       		.uleb128 0x3a
 9431 02df 0B       		.uleb128 0xb
 9432 02e0 3B       		.uleb128 0x3b
 9433 02e1 05       		.uleb128 0x5
 9434 02e2 27       		.uleb128 0x27
 9435 02e3 19       		.uleb128 0x19
 9436 02e4 3C       		.uleb128 0x3c
 9437 02e5 19       		.uleb128 0x19
 9438 02e6 00       		.byte	0
 9439 02e7 00       		.byte	0
 9440 02e8 36       		.uleb128 0x36
 9441 02e9 34       		.uleb128 0x34
 9442 02ea 00       		.byte	0
 9443 02eb 03       		.uleb128 0x3
 9444 02ec 0E       		.uleb128 0xe
 9445 02ed 3A       		.uleb128 0x3a
 9446 02ee 0B       		.uleb128 0xb
 9447 02ef 3B       		.uleb128 0x3b
 9448 02f0 05       		.uleb128 0x5
 9449 02f1 49       		.uleb128 0x49
 9450 02f2 13       		.uleb128 0x13
 9451 02f3 1C       		.uleb128 0x1c
 9452 02f4 0D       		.uleb128 0xd
 9453 02f5 00       		.byte	0
 9454 02f6 00       		.byte	0
 9455 02f7 37       		.uleb128 0x37
 9456 02f8 34       		.uleb128 0x34
 9457 02f9 00       		.byte	0
 9458 02fa 03       		.uleb128 0x3
 9459 02fb 0E       		.uleb128 0xe
 9460 02fc 3A       		.uleb128 0x3a
 9461 02fd 0B       		.uleb128 0xb
 9462 02fe 3B       		.uleb128 0x3b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 266


 9463 02ff 05       		.uleb128 0x5
 9464 0300 49       		.uleb128 0x49
 9465 0301 13       		.uleb128 0x13
 9466 0302 3F       		.uleb128 0x3f
 9467 0303 19       		.uleb128 0x19
 9468 0304 3C       		.uleb128 0x3c
 9469 0305 19       		.uleb128 0x19
 9470 0306 00       		.byte	0
 9471 0307 00       		.byte	0
 9472 0308 38       		.uleb128 0x38
 9473 0309 34       		.uleb128 0x34
 9474 030a 00       		.byte	0
 9475 030b 03       		.uleb128 0x3
 9476 030c 0E       		.uleb128 0xe
 9477 030d 3A       		.uleb128 0x3a
 9478 030e 0B       		.uleb128 0xb
 9479 030f 3B       		.uleb128 0x3b
 9480 0310 0B       		.uleb128 0xb
 9481 0311 49       		.uleb128 0x49
 9482 0312 13       		.uleb128 0x13
 9483 0313 3F       		.uleb128 0x3f
 9484 0314 19       		.uleb128 0x19
 9485 0315 3C       		.uleb128 0x3c
 9486 0316 19       		.uleb128 0x19
 9487 0317 00       		.byte	0
 9488 0318 00       		.byte	0
 9489 0319 39       		.uleb128 0x39
 9490 031a 34       		.uleb128 0x34
 9491 031b 00       		.byte	0
 9492 031c 03       		.uleb128 0x3
 9493 031d 0E       		.uleb128 0xe
 9494 031e 3A       		.uleb128 0x3a
 9495 031f 0B       		.uleb128 0xb
 9496 0320 3B       		.uleb128 0x3b
 9497 0321 05       		.uleb128 0x5
 9498 0322 49       		.uleb128 0x49
 9499 0323 13       		.uleb128 0x13
 9500 0324 3F       		.uleb128 0x3f
 9501 0325 19       		.uleb128 0x19
 9502 0326 02       		.uleb128 0x2
 9503 0327 18       		.uleb128 0x18
 9504 0328 00       		.byte	0
 9505 0329 00       		.byte	0
 9506 032a 3A       		.uleb128 0x3a
 9507 032b 2E       		.uleb128 0x2e
 9508 032c 00       		.byte	0
 9509 032d 3F       		.uleb128 0x3f
 9510 032e 19       		.uleb128 0x19
 9511 032f 3C       		.uleb128 0x3c
 9512 0330 19       		.uleb128 0x19
 9513 0331 6E       		.uleb128 0x6e
 9514 0332 0E       		.uleb128 0xe
 9515 0333 03       		.uleb128 0x3
 9516 0334 0E       		.uleb128 0xe
 9517 0335 3A       		.uleb128 0x3a
 9518 0336 0B       		.uleb128 0xb
 9519 0337 3B       		.uleb128 0x3b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 267


 9520 0338 0B       		.uleb128 0xb
 9521 0339 00       		.byte	0
 9522 033a 00       		.byte	0
 9523 033b 3B       		.uleb128 0x3b
 9524 033c 2E       		.uleb128 0x2e
 9525 033d 00       		.byte	0
 9526 033e 3F       		.uleb128 0x3f
 9527 033f 19       		.uleb128 0x19
 9528 0340 3C       		.uleb128 0x3c
 9529 0341 19       		.uleb128 0x19
 9530 0342 6E       		.uleb128 0x6e
 9531 0343 0E       		.uleb128 0xe
 9532 0344 03       		.uleb128 0x3
 9533 0345 0E       		.uleb128 0xe
 9534 0346 3A       		.uleb128 0x3a
 9535 0347 0B       		.uleb128 0xb
 9536 0348 3B       		.uleb128 0x3b
 9537 0349 05       		.uleb128 0x5
 9538 034a 00       		.byte	0
 9539 034b 00       		.byte	0
 9540 034c 00       		.byte	0
 9541              		.section	.debug_loc,"",%progbits
 9542              	.Ldebug_loc0:
 9543              	.LLST0:
 9544 0000 00000000 		.4byte	.LVL0
 9545 0004 28000000 		.4byte	.LVL1
 9546 0008 0100     		.2byte	0x1
 9547 000a 50       		.byte	0x50
 9548 000b 28000000 		.4byte	.LVL1
 9549 000f 2A000000 		.4byte	.LVL2
 9550 0013 0400     		.2byte	0x4
 9551 0015 F3       		.byte	0xf3
 9552 0016 01       		.uleb128 0x1
 9553 0017 50       		.byte	0x50
 9554 0018 9F       		.byte	0x9f
 9555 0019 2A000000 		.4byte	.LVL2
 9556 001d 2C000000 		.4byte	.LVL3
 9557 0021 0100     		.2byte	0x1
 9558 0023 50       		.byte	0x50
 9559 0024 2C000000 		.4byte	.LVL3
 9560 0028 2E000000 		.4byte	.LVL4
 9561 002c 0100     		.2byte	0x1
 9562 002e 52       		.byte	0x52
 9563 002f 2E000000 		.4byte	.LVL4
 9564 0033 30000000 		.4byte	.LVL5
 9565 0037 0100     		.2byte	0x1
 9566 0039 50       		.byte	0x50
 9567 003a 30000000 		.4byte	.LVL5
 9568 003e 32000000 		.4byte	.LVL6
 9569 0042 0400     		.2byte	0x4
 9570 0044 F3       		.byte	0xf3
 9571 0045 01       		.uleb128 0x1
 9572 0046 50       		.byte	0x50
 9573 0047 9F       		.byte	0x9f
 9574 0048 32000000 		.4byte	.LVL6
 9575 004c 34000000 		.4byte	.LVL7
 9576 0050 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 268


 9577 0052 50       		.byte	0x50
 9578 0053 34000000 		.4byte	.LVL7
 9579 0057 40000000 		.4byte	.LFE531
 9580 005b 0400     		.2byte	0x4
 9581 005d F3       		.byte	0xf3
 9582 005e 01       		.uleb128 0x1
 9583 005f 50       		.byte	0x50
 9584 0060 9F       		.byte	0x9f
 9585 0061 00000000 		.4byte	0
 9586 0065 00000000 		.4byte	0
 9587              	.LLST1:
 9588 0069 00000000 		.4byte	.LVL0
 9589 006d 34000000 		.4byte	.LVL7
 9590 0071 0200     		.2byte	0x2
 9591 0073 30       		.byte	0x30
 9592 0074 9F       		.byte	0x9f
 9593 0075 34000000 		.4byte	.LVL7
 9594 0079 40000000 		.4byte	.LFE531
 9595 007d 0100     		.2byte	0x1
 9596 007f 50       		.byte	0x50
 9597 0080 00000000 		.4byte	0
 9598 0084 00000000 		.4byte	0
 9599              	.LLST2:
 9600 0088 00000000 		.4byte	.LVL0
 9601 008c 28000000 		.4byte	.LVL1
 9602 0090 0100     		.2byte	0x1
 9603 0092 50       		.byte	0x50
 9604 0093 28000000 		.4byte	.LVL1
 9605 0097 2A000000 		.4byte	.LVL2
 9606 009b 0400     		.2byte	0x4
 9607 009d F3       		.byte	0xf3
 9608 009e 01       		.uleb128 0x1
 9609 009f 50       		.byte	0x50
 9610 00a0 9F       		.byte	0x9f
 9611 00a1 2A000000 		.4byte	.LVL2
 9612 00a5 2C000000 		.4byte	.LVL3
 9613 00a9 0100     		.2byte	0x1
 9614 00ab 50       		.byte	0x50
 9615 00ac 2C000000 		.4byte	.LVL3
 9616 00b0 2E000000 		.4byte	.LVL4
 9617 00b4 0100     		.2byte	0x1
 9618 00b6 52       		.byte	0x52
 9619 00b7 2E000000 		.4byte	.LVL4
 9620 00bb 30000000 		.4byte	.LVL5
 9621 00bf 0100     		.2byte	0x1
 9622 00c1 50       		.byte	0x50
 9623 00c2 30000000 		.4byte	.LVL5
 9624 00c6 32000000 		.4byte	.LVL6
 9625 00ca 0400     		.2byte	0x4
 9626 00cc F3       		.byte	0xf3
 9627 00cd 01       		.uleb128 0x1
 9628 00ce 50       		.byte	0x50
 9629 00cf 9F       		.byte	0x9f
 9630 00d0 32000000 		.4byte	.LVL6
 9631 00d4 34000000 		.4byte	.LVL7
 9632 00d8 0100     		.2byte	0x1
 9633 00da 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 269


 9634 00db 34000000 		.4byte	.LVL7
 9635 00df 40000000 		.4byte	.LFE531
 9636 00e3 0400     		.2byte	0x4
 9637 00e5 F3       		.byte	0xf3
 9638 00e6 01       		.uleb128 0x1
 9639 00e7 50       		.byte	0x50
 9640 00e8 9F       		.byte	0x9f
 9641 00e9 00000000 		.4byte	0
 9642 00ed 00000000 		.4byte	0
 9643              	.LLST3:
 9644 00f1 22000000 		.4byte	.LVL8
 9645 00f5 24000000 		.4byte	.LVL9
 9646 00f9 0100     		.2byte	0x1
 9647 00fb 52       		.byte	0x52
 9648 00fc 00000000 		.4byte	0
 9649 0100 00000000 		.4byte	0
 9650              	.LLST4:
 9651 0104 00000000 		.4byte	.LVL10
 9652 0108 06000000 		.4byte	.LVL11
 9653 010c 0100     		.2byte	0x1
 9654 010e 50       		.byte	0x50
 9655 010f 06000000 		.4byte	.LVL11
 9656 0113 12000000 		.4byte	.LFE557
 9657 0117 0100     		.2byte	0x1
 9658 0119 54       		.byte	0x54
 9659 011a 00000000 		.4byte	0
 9660 011e 00000000 		.4byte	0
 9661              	.LLST5:
 9662 0122 00000000 		.4byte	.LVL14
 9663 0126 18000000 		.4byte	.LVL17
 9664 012a 0100     		.2byte	0x1
 9665 012c 50       		.byte	0x50
 9666 012d 18000000 		.4byte	.LVL17
 9667 0131 9E000000 		.4byte	.LFE522
 9668 0135 0100     		.2byte	0x1
 9669 0137 5A       		.byte	0x5a
 9670 0138 00000000 		.4byte	0
 9671 013c 00000000 		.4byte	0
 9672              	.LLST6:
 9673 0140 00000000 		.4byte	.LVL14
 9674 0144 16000000 		.4byte	.LVL16
 9675 0148 0100     		.2byte	0x1
 9676 014a 51       		.byte	0x51
 9677 014b 16000000 		.4byte	.LVL16
 9678 014f 9E000000 		.4byte	.LFE522
 9679 0153 0100     		.2byte	0x1
 9680 0155 59       		.byte	0x59
 9681 0156 00000000 		.4byte	0
 9682 015a 00000000 		.4byte	0
 9683              	.LLST7:
 9684 015e 00000000 		.4byte	.LVL14
 9685 0162 14000000 		.4byte	.LVL15
 9686 0166 0100     		.2byte	0x1
 9687 0168 52       		.byte	0x52
 9688 0169 14000000 		.4byte	.LVL15
 9689 016d 28000000 		.4byte	.LVL19
 9690 0171 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 270


 9691 0173 55       		.byte	0x55
 9692 0174 28000000 		.4byte	.LVL19
 9693 0178 30000000 		.4byte	.LVL21
 9694 017c 0700     		.2byte	0x7
 9695 017e 72       		.byte	0x72
 9696 017f 81808080 		.sleb128 -1073741823
 9696      7C
 9697 0184 9F       		.byte	0x9f
 9698 0185 30000000 		.4byte	.LVL21
 9699 0189 9E000000 		.4byte	.LFE522
 9700 018d 0400     		.2byte	0x4
 9701 018f F3       		.byte	0xf3
 9702 0190 01       		.uleb128 0x1
 9703 0191 52       		.byte	0x52
 9704 0192 9F       		.byte	0x9f
 9705 0193 00000000 		.4byte	0
 9706 0197 00000000 		.4byte	0
 9707              	.LLST8:
 9708 019b 00000000 		.4byte	.LVL14
 9709 019f 1B000000 		.4byte	.LVL18-1
 9710 01a3 0100     		.2byte	0x1
 9711 01a5 53       		.byte	0x53
 9712 01a6 1B000000 		.4byte	.LVL18-1
 9713 01aa 9E000000 		.4byte	.LFE522
 9714 01ae 0100     		.2byte	0x1
 9715 01b0 58       		.byte	0x58
 9716 01b1 00000000 		.4byte	0
 9717 01b5 00000000 		.4byte	0
 9718              	.LLST9:
 9719 01b9 00000000 		.4byte	.LVL14
 9720 01bd 52000000 		.4byte	.LVL24
 9721 01c1 0200     		.2byte	0x2
 9722 01c3 91       		.byte	0x91
 9723 01c4 00       		.sleb128 0
 9724 01c5 52000000 		.4byte	.LVL24
 9725 01c9 9E000000 		.4byte	.LFE522
 9726 01cd 0100     		.2byte	0x1
 9727 01cf 57       		.byte	0x57
 9728 01d0 00000000 		.4byte	0
 9729 01d4 00000000 		.4byte	0
 9730              	.LLST10:
 9731 01d8 30000000 		.4byte	.LVL21
 9732 01dc 48000000 		.4byte	.LVL23
 9733 01e0 0100     		.2byte	0x1
 9734 01e2 53       		.byte	0x53
 9735 01e3 6C000000 		.4byte	.LVL27
 9736 01e7 70000000 		.4byte	.LVL28
 9737 01eb 0200     		.2byte	0x2
 9738 01ed 30       		.byte	0x30
 9739 01ee 9F       		.byte	0x9f
 9740 01ef 70000000 		.4byte	.LVL28
 9741 01f3 84000000 		.4byte	.LVL30
 9742 01f7 0100     		.2byte	0x1
 9743 01f9 53       		.byte	0x53
 9744 01fa 00000000 		.4byte	0
 9745 01fe 00000000 		.4byte	0
 9746              	.LLST11:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 271


 9747 0202 02000000 		.4byte	.LVL32
 9748 0206 06000000 		.4byte	.LVL33
 9749 020a 0200     		.2byte	0x2
 9750 020c 30       		.byte	0x30
 9751 020d 9F       		.byte	0x9f
 9752 020e 06000000 		.4byte	.LVL33
 9753 0212 1C000000 		.4byte	.LVL36
 9754 0216 0100     		.2byte	0x1
 9755 0218 54       		.byte	0x54
 9756 0219 00000000 		.4byte	0
 9757 021d 00000000 		.4byte	0
 9758              	.LLST12:
 9759 0221 00000000 		.4byte	.LVL42
 9760 0225 07000000 		.4byte	.LVL43-1
 9761 0229 0100     		.2byte	0x1
 9762 022b 50       		.byte	0x50
 9763 022c 07000000 		.4byte	.LVL43-1
 9764 0230 A2000000 		.4byte	.LVL47
 9765 0234 0100     		.2byte	0x1
 9766 0236 54       		.byte	0x54
 9767 0237 A2000000 		.4byte	.LVL47
 9768 023b AC000000 		.4byte	.LFE523
 9769 023f 0400     		.2byte	0x4
 9770 0241 F3       		.byte	0xf3
 9771 0242 01       		.uleb128 0x1
 9772 0243 50       		.byte	0x50
 9773 0244 9F       		.byte	0x9f
 9774 0245 00000000 		.4byte	0
 9775 0249 00000000 		.4byte	0
 9776              	.LLST13:
 9777 024d 00000000 		.4byte	.LVL48
 9778 0251 10000000 		.4byte	.LVL50
 9779 0255 0100     		.2byte	0x1
 9780 0257 50       		.byte	0x50
 9781 0258 10000000 		.4byte	.LVL50
 9782 025c 2E000000 		.4byte	.LVL54
 9783 0260 0100     		.2byte	0x1
 9784 0262 54       		.byte	0x54
 9785 0263 2E000000 		.4byte	.LVL54
 9786 0267 68000000 		.4byte	.LFE568
 9787 026b 0400     		.2byte	0x4
 9788 026d F3       		.byte	0xf3
 9789 026e 01       		.uleb128 0x1
 9790 026f 50       		.byte	0x50
 9791 0270 9F       		.byte	0x9f
 9792 0271 00000000 		.4byte	0
 9793 0275 00000000 		.4byte	0
 9794              	.LLST14:
 9795 0279 00000000 		.4byte	.LVL48
 9796 027d 15000000 		.4byte	.LVL51-1
 9797 0281 0100     		.2byte	0x1
 9798 0283 51       		.byte	0x51
 9799 0284 15000000 		.4byte	.LVL51-1
 9800 0288 64000000 		.4byte	.LVL59
 9801 028c 0100     		.2byte	0x1
 9802 028e 56       		.byte	0x56
 9803 028f 64000000 		.4byte	.LVL59
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 272


 9804 0293 68000000 		.4byte	.LFE568
 9805 0297 0400     		.2byte	0x4
 9806 0299 F3       		.byte	0xf3
 9807 029a 01       		.uleb128 0x1
 9808 029b 51       		.byte	0x51
 9809 029c 9F       		.byte	0x9f
 9810 029d 00000000 		.4byte	0
 9811 02a1 00000000 		.4byte	0
 9812              	.LLST15:
 9813 02a5 2E000000 		.4byte	.LVL54
 9814 02a9 64000000 		.4byte	.LVL59
 9815 02ad 0100     		.2byte	0x1
 9816 02af 54       		.byte	0x54
 9817 02b0 00000000 		.4byte	0
 9818 02b4 00000000 		.4byte	0
 9819              	.LLST16:
 9820 02b8 0C000000 		.4byte	.LVL49
 9821 02bc 4E000000 		.4byte	.LVL57
 9822 02c0 0100     		.2byte	0x1
 9823 02c2 55       		.byte	0x55
 9824 02c3 00000000 		.4byte	0
 9825 02c7 00000000 		.4byte	0
 9826              	.LLST17:
 9827 02cb 00000000 		.4byte	.LVL60
 9828 02cf 10000000 		.4byte	.LVL61
 9829 02d3 0100     		.2byte	0x1
 9830 02d5 50       		.byte	0x50
 9831 02d6 10000000 		.4byte	.LVL61
 9832 02da 62000000 		.4byte	.LFE521
 9833 02de 0100     		.2byte	0x1
 9834 02e0 56       		.byte	0x56
 9835 02e1 00000000 		.4byte	0
 9836 02e5 00000000 		.4byte	0
 9837              	.LLST18:
 9838 02e9 00000000 		.4byte	.LVL60
 9839 02ed 13000000 		.4byte	.LVL62-1
 9840 02f1 0100     		.2byte	0x1
 9841 02f3 51       		.byte	0x51
 9842 02f4 13000000 		.4byte	.LVL62-1
 9843 02f8 62000000 		.4byte	.LFE521
 9844 02fc 0100     		.2byte	0x1
 9845 02fe 57       		.byte	0x57
 9846 02ff 00000000 		.4byte	0
 9847 0303 00000000 		.4byte	0
 9848              	.LLST19:
 9849 0307 00000000 		.4byte	.LVL60
 9850 030b 13000000 		.4byte	.LVL62-1
 9851 030f 0100     		.2byte	0x1
 9852 0311 52       		.byte	0x52
 9853 0312 13000000 		.4byte	.LVL62-1
 9854 0316 62000000 		.4byte	.LFE521
 9855 031a 0400     		.2byte	0x4
 9856 031c F3       		.byte	0xf3
 9857 031d 01       		.uleb128 0x1
 9858 031e 52       		.byte	0x52
 9859 031f 9F       		.byte	0x9f
 9860 0320 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 273


 9861 0324 00000000 		.4byte	0
 9862              	.LLST20:
 9863 0328 00000000 		.4byte	.LVL60
 9864 032c 13000000 		.4byte	.LVL62-1
 9865 0330 0100     		.2byte	0x1
 9866 0332 53       		.byte	0x53
 9867 0333 13000000 		.4byte	.LVL62-1
 9868 0337 62000000 		.4byte	.LFE521
 9869 033b 0100     		.2byte	0x1
 9870 033d 58       		.byte	0x58
 9871 033e 00000000 		.4byte	0
 9872 0342 00000000 		.4byte	0
 9873              	.LLST21:
 9874 0346 1E000000 		.4byte	.LVL64
 9875 034a 2A000000 		.4byte	.LVL65
 9876 034e 0100     		.2byte	0x1
 9877 0350 50       		.byte	0x50
 9878 0351 2A000000 		.4byte	.LVL65
 9879 0355 30000000 		.4byte	.LVL67
 9880 0359 0100     		.2byte	0x1
 9881 035b 54       		.byte	0x54
 9882 035c 32000000 		.4byte	.LVL68
 9883 0360 62000000 		.4byte	.LFE521
 9884 0364 0100     		.2byte	0x1
 9885 0366 54       		.byte	0x54
 9886 0367 00000000 		.4byte	0
 9887 036b 00000000 		.4byte	0
 9888              	.LLST22:
 9889 036f 54000000 		.4byte	.LVL70
 9890 0373 58000000 		.4byte	.LVL71
 9891 0377 0200     		.2byte	0x2
 9892 0379 31       		.byte	0x31
 9893 037a 9F       		.byte	0x9f
 9894 037b 5C000000 		.4byte	.LVL72
 9895 037f 62000000 		.4byte	.LFE521
 9896 0383 0100     		.2byte	0x1
 9897 0385 50       		.byte	0x50
 9898 0386 00000000 		.4byte	0
 9899 038a 00000000 		.4byte	0
 9900              	.LLST23:
 9901 038e 14000000 		.4byte	.LVL62
 9902 0392 1A000000 		.4byte	.LVL63
 9903 0396 0100     		.2byte	0x1
 9904 0398 50       		.byte	0x50
 9905 0399 1A000000 		.4byte	.LVL63
 9906 039d 30000000 		.4byte	.LVL67
 9907 03a1 0100     		.2byte	0x1
 9908 03a3 59       		.byte	0x59
 9909 03a4 30000000 		.4byte	.LVL67
 9910 03a8 32000000 		.4byte	.LVL68
 9911 03ac 0100     		.2byte	0x1
 9912 03ae 50       		.byte	0x50
 9913 03af 00000000 		.4byte	0
 9914 03b3 00000000 		.4byte	0
 9915              	.LLST24:
 9916 03b7 00000000 		.4byte	.LVL73
 9917 03bb 07000000 		.4byte	.LVL74-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 274


 9918 03bf 0100     		.2byte	0x1
 9919 03c1 50       		.byte	0x50
 9920 03c2 07000000 		.4byte	.LVL74-1
 9921 03c6 10000000 		.4byte	.LVL75
 9922 03ca 0100     		.2byte	0x1
 9923 03cc 54       		.byte	0x54
 9924 03cd 00000000 		.4byte	0
 9925 03d1 00000000 		.4byte	0
 9926              	.LLST25:
 9927 03d5 10000000 		.4byte	.LVL75
 9928 03d9 9A000000 		.4byte	.LVL82
 9929 03dd 0100     		.2byte	0x1
 9930 03df 54       		.byte	0x54
 9931 03e0 00000000 		.4byte	0
 9932 03e4 00000000 		.4byte	0
 9933              	.LLST26:
 9934 03e8 00000000 		.4byte	.LVL83
 9935 03ec 07000000 		.4byte	.LVL84-1
 9936 03f0 0100     		.2byte	0x1
 9937 03f2 50       		.byte	0x50
 9938 03f3 07000000 		.4byte	.LVL84-1
 9939 03f7 10000000 		.4byte	.LVL85
 9940 03fb 0100     		.2byte	0x1
 9941 03fd 54       		.byte	0x54
 9942 03fe 00000000 		.4byte	0
 9943 0402 00000000 		.4byte	0
 9944              	.LLST27:
 9945 0406 10000000 		.4byte	.LVL85
 9946 040a 12000000 		.4byte	.LVL86
 9947 040e 0100     		.2byte	0x1
 9948 0410 54       		.byte	0x54
 9949 0411 00000000 		.4byte	0
 9950 0415 00000000 		.4byte	0
 9951              	.LLST28:
 9952 0419 12000000 		.4byte	.LVL86
 9953 041d 1A000000 		.4byte	.LVL88
 9954 0421 0100     		.2byte	0x1
 9955 0423 54       		.byte	0x54
 9956 0424 1A000000 		.4byte	.LVL88
 9957 0428 20000000 		.4byte	.LFE527
 9958 042c 0100     		.2byte	0x1
 9959 042e 50       		.byte	0x50
 9960 042f 00000000 		.4byte	0
 9961 0433 00000000 		.4byte	0
 9962              	.LLST29:
 9963 0437 00000000 		.4byte	.LVL89
 9964 043b 07000000 		.4byte	.LVL90-1
 9965 043f 0100     		.2byte	0x1
 9966 0441 50       		.byte	0x50
 9967 0442 07000000 		.4byte	.LVL90-1
 9968 0446 24000000 		.4byte	.LVL91
 9969 044a 0100     		.2byte	0x1
 9970 044c 54       		.byte	0x54
 9971 044d 00000000 		.4byte	0
 9972 0451 00000000 		.4byte	0
 9973              	.LLST30:
 9974 0455 24000000 		.4byte	.LVL91
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 275


 9975 0459 2C000000 		.4byte	.LVL94
 9976 045d 0100     		.2byte	0x1
 9977 045f 54       		.byte	0x54
 9978 0460 00000000 		.4byte	0
 9979 0464 00000000 		.4byte	0
 9980              	.LLST31:
 9981 0468 26000000 		.4byte	.LVL92
 9982 046c 2A000000 		.4byte	.LVL93
 9983 0470 0100     		.2byte	0x1
 9984 0472 53       		.byte	0x53
 9985 0473 00000000 		.4byte	0
 9986 0477 00000000 		.4byte	0
 9987              	.LLST32:
 9988 047b 00000000 		.4byte	.LVL95
 9989 047f 17000000 		.4byte	.LVL97-1
 9990 0483 0100     		.2byte	0x1
 9991 0485 50       		.byte	0x50
 9992 0486 17000000 		.4byte	.LVL97-1
 9993 048a 20000000 		.4byte	.LVL98
 9994 048e 0100     		.2byte	0x1
 9995 0490 54       		.byte	0x54
 9996 0491 00000000 		.4byte	0
 9997 0495 00000000 		.4byte	0
 9998              	.LLST33:
 9999 0499 00000000 		.4byte	.LVL95
 10000 049d 14000000 		.4byte	.LVL96
 10001 04a1 0100     		.2byte	0x1
 10002 04a3 51       		.byte	0x51
 10003 04a4 14000000 		.4byte	.LVL96
 10004 04a8 66000000 		.4byte	.LVL101
 10005 04ac 0100     		.2byte	0x1
 10006 04ae 55       		.byte	0x55
 10007 04af 66000000 		.4byte	.LVL101
 10008 04b3 87000000 		.4byte	.LVL103-1
 10009 04b7 0200     		.2byte	0x2
 10010 04b9 74       		.byte	0x74
 10011 04ba 2C       		.sleb128 44
 10012 04bb 00000000 		.4byte	0
 10013 04bf 00000000 		.4byte	0
 10014              	.LLST34:
 10015 04c3 20000000 		.4byte	.LVL98
 10016 04c7 C2000000 		.4byte	.LVL107
 10017 04cb 0100     		.2byte	0x1
 10018 04cd 54       		.byte	0x54
 10019 04ce 00000000 		.4byte	0
 10020 04d2 00000000 		.4byte	0
 10021              	.LLST35:
 10022 04d6 22000000 		.4byte	.LVL99
 10023 04da 6E000000 		.4byte	.LVL102
 10024 04de 0100     		.2byte	0x1
 10025 04e0 53       		.byte	0x53
 10026 04e1 00000000 		.4byte	0
 10027 04e5 00000000 		.4byte	0
 10028              	.LLST36:
 10029 04e9 5A000000 		.4byte	.LVL100
 10030 04ed 6E000000 		.4byte	.LVL102
 10031 04f1 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 276


 10032 04f3 53       		.byte	0x53
 10033 04f4 00000000 		.4byte	0
 10034 04f8 00000000 		.4byte	0
 10035              	.LLST37:
 10036 04fc 00000000 		.4byte	.LVL95
 10037 0500 5A000000 		.4byte	.LVL100
 10038 0504 0200     		.2byte	0x2
 10039 0506 30       		.byte	0x30
 10040 0507 9F       		.byte	0x9f
 10041 0508 5A000000 		.4byte	.LVL100
 10042 050c BC000000 		.4byte	.LVL105
 10043 0510 0100     		.2byte	0x1
 10044 0512 56       		.byte	0x56
 10045 0513 00000000 		.4byte	0
 10046 0517 00000000 		.4byte	0
 10047              	.LLST38:
 10048 051b 00000000 		.4byte	.LVL108
 10049 051f 19000000 		.4byte	.LVL109-1
 10050 0523 0100     		.2byte	0x1
 10051 0525 50       		.byte	0x50
 10052 0526 19000000 		.4byte	.LVL109-1
 10053 052a 72000000 		.4byte	.LVL114
 10054 052e 0100     		.2byte	0x1
 10055 0530 54       		.byte	0x54
 10056 0531 72000000 		.4byte	.LVL114
 10057 0535 7C000000 		.4byte	.LFE532
 10058 0539 0400     		.2byte	0x4
 10059 053b F3       		.byte	0xf3
 10060 053c 01       		.uleb128 0x1
 10061 053d 50       		.byte	0x50
 10062 053e 9F       		.byte	0x9f
 10063 053f 00000000 		.4byte	0
 10064 0543 00000000 		.4byte	0
 10065              	.LLST39:
 10066 0547 00000000 		.4byte	.LVL108
 10067 054b 19000000 		.4byte	.LVL109-1
 10068 054f 0100     		.2byte	0x1
 10069 0551 50       		.byte	0x50
 10070 0552 19000000 		.4byte	.LVL109-1
 10071 0556 72000000 		.4byte	.LVL114
 10072 055a 0100     		.2byte	0x1
 10073 055c 54       		.byte	0x54
 10074 055d 72000000 		.4byte	.LVL114
 10075 0561 7C000000 		.4byte	.LFE532
 10076 0565 0400     		.2byte	0x4
 10077 0567 F3       		.byte	0xf3
 10078 0568 01       		.uleb128 0x1
 10079 0569 50       		.byte	0x50
 10080 056a 9F       		.byte	0x9f
 10081 056b 00000000 		.4byte	0
 10082 056f 00000000 		.4byte	0
 10083              	.LLST40:
 10084 0573 00000000 		.4byte	.LVL115
 10085 0577 0D000000 		.4byte	.LVL116-1
 10086 057b 0100     		.2byte	0x1
 10087 057d 50       		.byte	0x50
 10088 057e 0D000000 		.4byte	.LVL116-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 277


 10089 0582 8A000000 		.4byte	.LVL125
 10090 0586 0100     		.2byte	0x1
 10091 0588 54       		.byte	0x54
 10092 0589 8A000000 		.4byte	.LVL125
 10093 058d 98000000 		.4byte	.LFE533
 10094 0591 0400     		.2byte	0x4
 10095 0593 F3       		.byte	0xf3
 10096 0594 01       		.uleb128 0x1
 10097 0595 50       		.byte	0x50
 10098 0596 9F       		.byte	0x9f
 10099 0597 00000000 		.4byte	0
 10100 059b 00000000 		.4byte	0
 10101              	.LLST41:
 10102 059f 00000000 		.4byte	.LVL115
 10103 05a3 46000000 		.4byte	.LVL118
 10104 05a7 0200     		.2byte	0x2
 10105 05a9 30       		.byte	0x30
 10106 05aa 9F       		.byte	0x9f
 10107 05ab 46000000 		.4byte	.LVL118
 10108 05af 72000000 		.4byte	.LVL121
 10109 05b3 0100     		.2byte	0x1
 10110 05b5 55       		.byte	0x55
 10111 05b6 72000000 		.4byte	.LVL121
 10112 05ba 82000000 		.4byte	.LVL123
 10113 05be 0200     		.2byte	0x2
 10114 05c0 30       		.byte	0x30
 10115 05c1 9F       		.byte	0x9f
 10116 05c2 82000000 		.4byte	.LVL123
 10117 05c6 8A000000 		.4byte	.LVL125
 10118 05ca 0100     		.2byte	0x1
 10119 05cc 55       		.byte	0x55
 10120 05cd 8A000000 		.4byte	.LVL125
 10121 05d1 98000000 		.4byte	.LFE533
 10122 05d5 0100     		.2byte	0x1
 10123 05d7 50       		.byte	0x50
 10124 05d8 00000000 		.4byte	0
 10125 05dc 00000000 		.4byte	0
 10126              	.LLST42:
 10127 05e0 00000000 		.4byte	.LVL115
 10128 05e4 0D000000 		.4byte	.LVL116-1
 10129 05e8 0100     		.2byte	0x1
 10130 05ea 50       		.byte	0x50
 10131 05eb 0D000000 		.4byte	.LVL116-1
 10132 05ef 8A000000 		.4byte	.LVL125
 10133 05f3 0100     		.2byte	0x1
 10134 05f5 54       		.byte	0x54
 10135 05f6 8A000000 		.4byte	.LVL125
 10136 05fa 98000000 		.4byte	.LFE533
 10137 05fe 0400     		.2byte	0x4
 10138 0600 F3       		.byte	0xf3
 10139 0601 01       		.uleb128 0x1
 10140 0602 50       		.byte	0x50
 10141 0603 9F       		.byte	0x9f
 10142 0604 00000000 		.4byte	0
 10143 0608 00000000 		.4byte	0
 10144              	.LLST43:
 10145 060c 82000000 		.4byte	.LVL123
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 278


 10146 0610 86000000 		.4byte	.LVL124
 10147 0614 0100     		.2byte	0x1
 10148 0616 57       		.byte	0x57
 10149 0617 00000000 		.4byte	0
 10150 061b 00000000 		.4byte	0
 10151              	.LLST44:
 10152 061f 16000000 		.4byte	.LVL126
 10153 0623 1D000000 		.4byte	.LVL127-1
 10154 0627 0100     		.2byte	0x1
 10155 0629 50       		.byte	0x50
 10156 062a 1E000000 		.4byte	.LVL127
 10157 062e 3B000000 		.4byte	.LVL128-1
 10158 0632 0100     		.2byte	0x1
 10159 0634 50       		.byte	0x50
 10160 0635 3E000000 		.4byte	.LVL129
 10161 0639 48000000 		.4byte	.LVL130
 10162 063d 0100     		.2byte	0x1
 10163 063f 50       		.byte	0x50
 10164 0640 00000000 		.4byte	0
 10165 0644 00000000 		.4byte	0
 10166              	.LLST45:
 10167 0648 00000000 		.4byte	.LVL135
 10168 064c 0A000000 		.4byte	.LVL136
 10169 0650 0100     		.2byte	0x1
 10170 0652 50       		.byte	0x50
 10171 0653 00000000 		.4byte	0
 10172 0657 00000000 		.4byte	0
 10173              	.LLST46:
 10174 065b 4E000000 		.4byte	.LVL143
 10175 065f 52000000 		.4byte	.LVL145
 10176 0663 0100     		.2byte	0x1
 10177 0665 55       		.byte	0x55
 10178 0666 76000000 		.4byte	.LVL147
 10179 066a CC000000 		.4byte	.LVL152
 10180 066e 0100     		.2byte	0x1
 10181 0670 55       		.byte	0x55
 10182 0671 00000000 		.4byte	0
 10183 0675 00000000 		.4byte	0
 10184              	.LLST47:
 10185 0679 78000000 		.4byte	.LVL148
 10186 067d 8B000000 		.4byte	.LVL149-1
 10187 0681 0100     		.2byte	0x1
 10188 0683 53       		.byte	0x53
 10189 0684 00000000 		.4byte	0
 10190 0688 00000000 		.4byte	0
 10191              	.LLST48:
 10192 068c 04000000 		.4byte	.LVL137
 10193 0690 4E000000 		.4byte	.LVL143
 10194 0694 0200     		.2byte	0x2
 10195 0696 30       		.byte	0x30
 10196 0697 9F       		.byte	0x9f
 10197 0698 4E000000 		.4byte	.LVL143
 10198 069c 50000000 		.4byte	.LVL144
 10199 06a0 0100     		.2byte	0x1
 10200 06a2 56       		.byte	0x56
 10201 06a3 52000000 		.4byte	.LVL145
 10202 06a7 54000000 		.4byte	.LVL146
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 279


 10203 06ab 0200     		.2byte	0x2
 10204 06ad 30       		.byte	0x30
 10205 06ae 9F       		.byte	0x9f
 10206 06af 54000000 		.4byte	.LVL146
 10207 06b3 CC000000 		.4byte	.LVL152
 10208 06b7 0100     		.2byte	0x1
 10209 06b9 56       		.byte	0x56
 10210 06ba CC000000 		.4byte	.LVL152
 10211 06be DA000000 		.4byte	.LVL153
 10212 06c2 0200     		.2byte	0x2
 10213 06c4 30       		.byte	0x30
 10214 06c5 9F       		.byte	0x9f
 10215 06c6 DA000000 		.4byte	.LVL153
 10216 06ca EA000000 		.4byte	.LVL155
 10217 06ce 0100     		.2byte	0x1
 10218 06d0 56       		.byte	0x56
 10219 06d1 EA000000 		.4byte	.LVL155
 10220 06d5 F0000000 		.4byte	.LFE542
 10221 06d9 0100     		.2byte	0x1
 10222 06db 50       		.byte	0x50
 10223 06dc 00000000 		.4byte	0
 10224 06e0 00000000 		.4byte	0
 10225              	.LLST49:
 10226 06e4 16000000 		.4byte	.LVL138
 10227 06e8 CC000000 		.4byte	.LVL152
 10228 06ec 0100     		.2byte	0x1
 10229 06ee 54       		.byte	0x54
 10230 06ef 00000000 		.4byte	0
 10231 06f3 00000000 		.4byte	0
 10232              	.LLST50:
 10233 06f7 2A000000 		.4byte	.LVL139
 10234 06fb 38000000 		.4byte	.LVL140
 10235 06ff 0100     		.2byte	0x1
 10236 0701 52       		.byte	0x52
 10237 0702 38000000 		.4byte	.LVL140
 10238 0706 3E000000 		.4byte	.LVL141
 10239 070a 0500     		.2byte	0x5
 10240 070c 03       		.byte	0x3
 10241 070d FC010000 		.4byte	pxOverflowDelayedTaskList
 10242 0711 00000000 		.4byte	0
 10243 0715 00000000 		.4byte	0
 10244              	.LLST51:
 10245 0719 00000000 		.4byte	.LVL156
 10246 071d 32000000 		.4byte	.LVL158
 10247 0721 0200     		.2byte	0x2
 10248 0723 30       		.byte	0x30
 10249 0724 9F       		.byte	0x9f
 10250 0725 32000000 		.4byte	.LVL158
 10251 0729 7E000000 		.4byte	.LVL163
 10252 072d 0100     		.2byte	0x1
 10253 072f 54       		.byte	0x54
 10254 0730 7E000000 		.4byte	.LVL163
 10255 0734 80000000 		.4byte	.LVL164
 10256 0738 0200     		.2byte	0x2
 10257 073a 30       		.byte	0x30
 10258 073b 9F       		.byte	0x9f
 10259 073c 80000000 		.4byte	.LVL164
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 280


 10260 0740 94000000 		.4byte	.LVL166
 10261 0744 0100     		.2byte	0x1
 10262 0746 54       		.byte	0x54
 10263 0747 CC000000 		.4byte	.LVL172
 10264 074b D0000000 		.4byte	.LVL173
 10265 074f 0200     		.2byte	0x2
 10266 0751 30       		.byte	0x30
 10267 0752 9F       		.byte	0x9f
 10268 0753 00000000 		.4byte	0
 10269 0757 00000000 		.4byte	0
 10270              	.LLST52:
 10271 075b 00000000 		.4byte	.LVL156
 10272 075f B8000000 		.4byte	.LVL170
 10273 0763 0200     		.2byte	0x2
 10274 0765 30       		.byte	0x30
 10275 0766 9F       		.byte	0x9f
 10276 0767 B8000000 		.4byte	.LVL170
 10277 076b CC000000 		.4byte	.LVL172
 10278 076f 0200     		.2byte	0x2
 10279 0771 31       		.byte	0x31
 10280 0772 9F       		.byte	0x9f
 10281 0773 CC000000 		.4byte	.LVL172
 10282 0777 D2000000 		.4byte	.LVL174
 10283 077b 0200     		.2byte	0x2
 10284 077d 30       		.byte	0x30
 10285 077e 9F       		.byte	0x9f
 10286 077f D2000000 		.4byte	.LVL174
 10287 0783 DA000000 		.4byte	.LVL176
 10288 0787 0100     		.2byte	0x1
 10289 0789 54       		.byte	0x54
 10290 078a DA000000 		.4byte	.LVL176
 10291 078e E4000000 		.4byte	.LFE537
 10292 0792 0100     		.2byte	0x1
 10293 0794 50       		.byte	0x50
 10294 0795 00000000 		.4byte	0
 10295 0799 00000000 		.4byte	0
 10296              	.LLST53:
 10297 079d 94000000 		.4byte	.LVL166
 10298 07a1 A4000000 		.4byte	.LVL168
 10299 07a5 0100     		.2byte	0x1
 10300 07a7 54       		.byte	0x54
 10301 07a8 A4000000 		.4byte	.LVL168
 10302 07ac A6000000 		.4byte	.LVL169
 10303 07b0 0300     		.2byte	0x3
 10304 07b2 74       		.byte	0x74
 10305 07b3 7F       		.sleb128 -1
 10306 07b4 9F       		.byte	0x9f
 10307 07b5 A6000000 		.4byte	.LVL169
 10308 07b9 CA000000 		.4byte	.LVL171
 10309 07bd 0100     		.2byte	0x1
 10310 07bf 54       		.byte	0x54
 10311 07c0 D0000000 		.4byte	.LVL173
 10312 07c4 D2000000 		.4byte	.LVL174
 10313 07c8 0100     		.2byte	0x1
 10314 07ca 54       		.byte	0x54
 10315 07cb 00000000 		.4byte	0
 10316 07cf 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 281


 10317              	.LLST54:
 10318 07d3 00000000 		.4byte	.LVL177
 10319 07d7 21000000 		.4byte	.LVL178-1
 10320 07db 0100     		.2byte	0x1
 10321 07dd 50       		.byte	0x50
 10322 07de 21000000 		.4byte	.LVL178-1
 10323 07e2 7A000000 		.4byte	.LVL185
 10324 07e6 0100     		.2byte	0x1
 10325 07e8 55       		.byte	0x55
 10326 07e9 7A000000 		.4byte	.LVL185
 10327 07ed 84000000 		.4byte	.LFE525
 10328 07f1 0400     		.2byte	0x4
 10329 07f3 F3       		.byte	0xf3
 10330 07f4 01       		.uleb128 0x1
 10331 07f5 50       		.byte	0x50
 10332 07f6 9F       		.byte	0x9f
 10333 07f7 00000000 		.4byte	0
 10334 07fb 00000000 		.4byte	0
 10335              	.LLST55:
 10336 07ff 00000000 		.4byte	.LVL177
 10337 0803 21000000 		.4byte	.LVL178-1
 10338 0807 0100     		.2byte	0x1
 10339 0809 51       		.byte	0x51
 10340 080a 21000000 		.4byte	.LVL178-1
 10341 080e 7A000000 		.4byte	.LVL185
 10342 0812 0100     		.2byte	0x1
 10343 0814 54       		.byte	0x54
 10344 0815 7A000000 		.4byte	.LVL185
 10345 0819 84000000 		.4byte	.LFE525
 10346 081d 0400     		.2byte	0x4
 10347 081f F3       		.byte	0xf3
 10348 0820 01       		.uleb128 0x1
 10349 0821 51       		.byte	0x51
 10350 0822 9F       		.byte	0x9f
 10351 0823 00000000 		.4byte	0
 10352 0827 00000000 		.4byte	0
 10353              	.LLST56:
 10354 082b 2C000000 		.4byte	.LVL180
 10355 082f 61000000 		.4byte	.LVL183-1
 10356 0833 0100     		.2byte	0x1
 10357 0835 53       		.byte	0x53
 10358 0836 00000000 		.4byte	0
 10359 083a 00000000 		.4byte	0
 10360              	.LLST57:
 10361 083e 00000000 		.4byte	.LVL177
 10362 0842 56000000 		.4byte	.LVL181
 10363 0846 0200     		.2byte	0x2
 10364 0848 30       		.byte	0x30
 10365 0849 9F       		.byte	0x9f
 10366 084a 56000000 		.4byte	.LVL181
 10367 084e 61000000 		.4byte	.LVL183-1
 10368 0852 0100     		.2byte	0x1
 10369 0854 52       		.byte	0x52
 10370 0855 00000000 		.4byte	0
 10371 0859 00000000 		.4byte	0
 10372              	.LLST58:
 10373 085d 28000000 		.4byte	.LVL179
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 282


 10374 0861 5E000000 		.4byte	.LVL182
 10375 0865 0100     		.2byte	0x1
 10376 0867 50       		.byte	0x50
 10377 0868 00000000 		.4byte	0
 10378 086c 00000000 		.4byte	0
 10379              	.LLST59:
 10380 0870 00000000 		.4byte	.LVL186
 10381 0874 15000000 		.4byte	.LVL188-1
 10382 0878 0100     		.2byte	0x1
 10383 087a 50       		.byte	0x50
 10384 087b 15000000 		.4byte	.LVL188-1
 10385 087f 24000000 		.4byte	.LVL191
 10386 0883 0100     		.2byte	0x1
 10387 0885 54       		.byte	0x54
 10388 0886 24000000 		.4byte	.LVL191
 10389 088a 26000000 		.4byte	.LVL192
 10390 088e 0100     		.2byte	0x1
 10391 0890 50       		.byte	0x50
 10392 0891 26000000 		.4byte	.LVL192
 10393 0895 44000000 		.4byte	.LFE526
 10394 0899 0400     		.2byte	0x4
 10395 089b F3       		.byte	0xf3
 10396 089c 01       		.uleb128 0x1
 10397 089d 50       		.byte	0x50
 10398 089e 9F       		.byte	0x9f
 10399 089f 00000000 		.4byte	0
 10400 08a3 00000000 		.4byte	0
 10401              	.LLST60:
 10402 08a7 02000000 		.4byte	.LVL187
 10403 08ab 22000000 		.4byte	.LVL190
 10404 08af 0200     		.2byte	0x2
 10405 08b1 30       		.byte	0x30
 10406 08b2 9F       		.byte	0x9f
 10407 08b3 22000000 		.4byte	.LVL190
 10408 08b7 24000000 		.4byte	.LVL191
 10409 08bb 0100     		.2byte	0x1
 10410 08bd 50       		.byte	0x50
 10411 08be 24000000 		.4byte	.LVL191
 10412 08c2 26000000 		.4byte	.LVL192
 10413 08c6 0200     		.2byte	0x2
 10414 08c8 30       		.byte	0x30
 10415 08c9 9F       		.byte	0x9f
 10416 08ca 26000000 		.4byte	.LVL192
 10417 08ce 44000000 		.4byte	.LFE526
 10418 08d2 0100     		.2byte	0x1
 10419 08d4 50       		.byte	0x50
 10420 08d5 00000000 		.4byte	0
 10421 08d9 00000000 		.4byte	0
 10422              	.LLST61:
 10423 08dd 0E000000 		.4byte	.LVL194
 10424 08e1 1A000000 		.4byte	.LVL197
 10425 08e5 0800     		.2byte	0x8
 10426 08e7 74       		.byte	0x74
 10427 08e8 00       		.sleb128 0
 10428 08e9 30       		.byte	0x30
 10429 08ea 29       		.byte	0x29
 10430 08eb 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 283


 10431 08ec FF       		.byte	0xff
 10432 08ed 1A       		.byte	0x1a
 10433 08ee 9F       		.byte	0x9f
 10434 08ef 00000000 		.4byte	0
 10435 08f3 00000000 		.4byte	0
 10436              	.LLST62:
 10437 08f7 20000000 		.4byte	.LVL198
 10438 08fb 44000000 		.4byte	.LVL201
 10439 08ff 0100     		.2byte	0x1
 10440 0901 55       		.byte	0x55
 10441 0902 00000000 		.4byte	0
 10442 0906 00000000 		.4byte	0
 10443              	.LLST63:
 10444 090a 00000000 		.4byte	.LVL202
 10445 090e 02000000 		.4byte	.LVL203
 10446 0912 0100     		.2byte	0x1
 10447 0914 50       		.byte	0x50
 10448 0915 02000000 		.4byte	.LVL203
 10449 0919 2C000000 		.4byte	.LFE552
 10450 091d 0400     		.2byte	0x4
 10451 091f F3       		.byte	0xf3
 10452 0920 01       		.uleb128 0x1
 10453 0921 50       		.byte	0x50
 10454 0922 9F       		.byte	0x9f
 10455 0923 00000000 		.4byte	0
 10456 0927 00000000 		.4byte	0
 10457              	.LLST64:
 10458 092b 22000000 		.4byte	.LVL206
 10459 092f 3C000000 		.4byte	.LVL207
 10460 0933 0100     		.2byte	0x1
 10461 0935 53       		.byte	0x53
 10462 0936 00000000 		.4byte	0
 10463 093a 00000000 		.4byte	0
 10464              	.LLST65:
 10465 093e 00000000 		.4byte	.LVL212
 10466 0942 07000000 		.4byte	.LVL213-1
 10467 0946 0100     		.2byte	0x1
 10468 0948 50       		.byte	0x50
 10469 0949 07000000 		.4byte	.LVL213-1
 10470 094d 10000000 		.4byte	.LVL214
 10471 0951 0100     		.2byte	0x1
 10472 0953 54       		.byte	0x54
 10473 0954 00000000 		.4byte	0
 10474 0958 00000000 		.4byte	0
 10475              	.LLST66:
 10476 095c 10000000 		.4byte	.LVL214
 10477 0960 90000000 		.4byte	.LVL225
 10478 0964 0100     		.2byte	0x1
 10479 0966 54       		.byte	0x54
 10480 0967 00000000 		.4byte	0
 10481 096b 00000000 		.4byte	0
 10482              	.LLST67:
 10483 096f 00000000 		.4byte	.LVL226
 10484 0973 15000000 		.4byte	.LVL228-1
 10485 0977 0100     		.2byte	0x1
 10486 0979 50       		.byte	0x50
 10487 097a 15000000 		.4byte	.LVL228-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 284


 10488 097e 24000000 		.4byte	.LFE544
 10489 0982 0400     		.2byte	0x4
 10490 0984 F3       		.byte	0xf3
 10491 0985 01       		.uleb128 0x1
 10492 0986 50       		.byte	0x50
 10493 0987 9F       		.byte	0x9f
 10494 0988 00000000 		.4byte	0
 10495 098c 00000000 		.4byte	0
 10496              	.LLST68:
 10497 0990 00000000 		.4byte	.LVL226
 10498 0994 10000000 		.4byte	.LVL227
 10499 0998 0100     		.2byte	0x1
 10500 099a 51       		.byte	0x51
 10501 099b 10000000 		.4byte	.LVL227
 10502 099f 20000000 		.4byte	.LVL230
 10503 09a3 0100     		.2byte	0x1
 10504 09a5 54       		.byte	0x54
 10505 09a6 20000000 		.4byte	.LVL230
 10506 09aa 24000000 		.4byte	.LFE544
 10507 09ae 0400     		.2byte	0x4
 10508 09b0 F3       		.byte	0xf3
 10509 09b1 01       		.uleb128 0x1
 10510 09b2 51       		.byte	0x51
 10511 09b3 9F       		.byte	0x9f
 10512 09b4 00000000 		.4byte	0
 10513 09b8 00000000 		.4byte	0
 10514              	.LLST69:
 10515 09bc 00000000 		.4byte	.LVL231
 10516 09c0 0A000000 		.4byte	.LVL232
 10517 09c4 0100     		.2byte	0x1
 10518 09c6 50       		.byte	0x50
 10519 09c7 0A000000 		.4byte	.LVL232
 10520 09cb 1C000000 		.4byte	.LVL233
 10521 09cf 0100     		.2byte	0x1
 10522 09d1 53       		.byte	0x53
 10523 09d2 1C000000 		.4byte	.LVL233
 10524 09d6 31000000 		.4byte	.LVL237-1
 10525 09da 0100     		.2byte	0x1
 10526 09dc 50       		.byte	0x50
 10527 09dd 31000000 		.4byte	.LVL237-1
 10528 09e1 40000000 		.4byte	.LFE545
 10529 09e5 0400     		.2byte	0x4
 10530 09e7 F3       		.byte	0xf3
 10531 09e8 01       		.uleb128 0x1
 10532 09e9 50       		.byte	0x50
 10533 09ea 9F       		.byte	0x9f
 10534 09eb 00000000 		.4byte	0
 10535 09ef 00000000 		.4byte	0
 10536              	.LLST70:
 10537 09f3 00000000 		.4byte	.LVL231
 10538 09f7 22000000 		.4byte	.LVL235
 10539 09fb 0100     		.2byte	0x1
 10540 09fd 51       		.byte	0x51
 10541 09fe 22000000 		.4byte	.LVL235
 10542 0a02 26000000 		.4byte	.LVL236
 10543 0a06 0100     		.2byte	0x1
 10544 0a08 53       		.byte	0x53
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 285


 10545 0a09 26000000 		.4byte	.LVL236
 10546 0a0d 40000000 		.4byte	.LFE545
 10547 0a11 0400     		.2byte	0x4
 10548 0a13 F3       		.byte	0xf3
 10549 0a14 01       		.uleb128 0x1
 10550 0a15 51       		.byte	0x51
 10551 0a16 9F       		.byte	0x9f
 10552 0a17 00000000 		.4byte	0
 10553 0a1b 00000000 		.4byte	0
 10554              	.LLST71:
 10555 0a1f 00000000 		.4byte	.LVL231
 10556 0a23 1E000000 		.4byte	.LVL234
 10557 0a27 0100     		.2byte	0x1
 10558 0a29 52       		.byte	0x52
 10559 0a2a 1E000000 		.4byte	.LVL234
 10560 0a2e 3C000000 		.4byte	.LVL239
 10561 0a32 0100     		.2byte	0x1
 10562 0a34 54       		.byte	0x54
 10563 0a35 3C000000 		.4byte	.LVL239
 10564 0a39 40000000 		.4byte	.LFE545
 10565 0a3d 0400     		.2byte	0x4
 10566 0a3f F3       		.byte	0xf3
 10567 0a40 01       		.uleb128 0x1
 10568 0a41 52       		.byte	0x52
 10569 0a42 9F       		.byte	0x9f
 10570 0a43 00000000 		.4byte	0
 10571 0a47 00000000 		.4byte	0
 10572              	.LLST72:
 10573 0a4b 00000000 		.4byte	.LVL240
 10574 0a4f 17000000 		.4byte	.LVL243-1
 10575 0a53 0100     		.2byte	0x1
 10576 0a55 50       		.byte	0x50
 10577 0a56 17000000 		.4byte	.LVL243-1
 10578 0a5a 2C000000 		.4byte	.LFE546
 10579 0a5e 0400     		.2byte	0x4
 10580 0a60 F3       		.byte	0xf3
 10581 0a61 01       		.uleb128 0x1
 10582 0a62 50       		.byte	0x50
 10583 0a63 9F       		.byte	0x9f
 10584 0a64 00000000 		.4byte	0
 10585 0a68 00000000 		.4byte	0
 10586              	.LLST73:
 10587 0a6c 00000000 		.4byte	.LVL240
 10588 0a70 12000000 		.4byte	.LVL242
 10589 0a74 0100     		.2byte	0x1
 10590 0a76 51       		.byte	0x51
 10591 0a77 12000000 		.4byte	.LVL242
 10592 0a7b 28000000 		.4byte	.LVL246
 10593 0a7f 0100     		.2byte	0x1
 10594 0a81 54       		.byte	0x54
 10595 0a82 00000000 		.4byte	0
 10596 0a86 00000000 		.4byte	0
 10597              	.LLST74:
 10598 0a8a 00000000 		.4byte	.LVL240
 10599 0a8e 0E000000 		.4byte	.LVL241
 10600 0a92 0100     		.2byte	0x1
 10601 0a94 52       		.byte	0x52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 286


 10602 0a95 0E000000 		.4byte	.LVL241
 10603 0a99 28000000 		.4byte	.LVL246
 10604 0a9d 0100     		.2byte	0x1
 10605 0a9f 55       		.byte	0x55
 10606 0aa0 28000000 		.4byte	.LVL246
 10607 0aa4 2C000000 		.4byte	.LFE546
 10608 0aa8 0400     		.2byte	0x4
 10609 0aaa F3       		.byte	0xf3
 10610 0aab 01       		.uleb128 0x1
 10611 0aac 52       		.byte	0x52
 10612 0aad 9F       		.byte	0x9f
 10613 0aae 00000000 		.4byte	0
 10614 0ab2 00000000 		.4byte	0
 10615              	.LLST75:
 10616 0ab6 00000000 		.4byte	.LVL247
 10617 0aba 12000000 		.4byte	.LVL249
 10618 0abe 0100     		.2byte	0x1
 10619 0ac0 50       		.byte	0x50
 10620 0ac1 12000000 		.4byte	.LVL249
 10621 0ac5 7C000000 		.4byte	.LFE547
 10622 0ac9 0400     		.2byte	0x4
 10623 0acb F3       		.byte	0xf3
 10624 0acc 01       		.uleb128 0x1
 10625 0acd 50       		.byte	0x50
 10626 0ace 9F       		.byte	0x9f
 10627 0acf 00000000 		.4byte	0
 10628 0ad3 00000000 		.4byte	0
 10629              	.LLST76:
 10630 0ad7 06000000 		.4byte	.LVL248
 10631 0adb 6E000000 		.4byte	.LVL257
 10632 0adf 0100     		.2byte	0x1
 10633 0ae1 54       		.byte	0x54
 10634 0ae2 00000000 		.4byte	0
 10635 0ae6 00000000 		.4byte	0
 10636              	.LLST77:
 10637 0aea 60000000 		.4byte	.LVL254
 10638 0aee 6A000000 		.4byte	.LVL255
 10639 0af2 0200     		.2byte	0x2
 10640 0af4 31       		.byte	0x31
 10641 0af5 9F       		.byte	0x9f
 10642 0af6 6C000000 		.4byte	.LVL256
 10643 0afa 7C000000 		.4byte	.LFE547
 10644 0afe 0100     		.2byte	0x1
 10645 0b00 50       		.byte	0x50
 10646 0b01 00000000 		.4byte	0
 10647 0b05 00000000 		.4byte	0
 10648              	.LLST78:
 10649 0b09 00000000 		.4byte	.LVL258
 10650 0b0d 1F000000 		.4byte	.LVL260-1
 10651 0b11 0100     		.2byte	0x1
 10652 0b13 50       		.byte	0x50
 10653 0b14 1F000000 		.4byte	.LVL260-1
 10654 0b18 6C000000 		.4byte	.LFE548
 10655 0b1c 0400     		.2byte	0x4
 10656 0b1e F3       		.byte	0xf3
 10657 0b1f 01       		.uleb128 0x1
 10658 0b20 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 287


 10659 0b21 9F       		.byte	0x9f
 10660 0b22 00000000 		.4byte	0
 10661 0b26 00000000 		.4byte	0
 10662              	.LLST79:
 10663 0b2a 00000000 		.4byte	.LVL258
 10664 0b2e 1F000000 		.4byte	.LVL260-1
 10665 0b32 0100     		.2byte	0x1
 10666 0b34 51       		.byte	0x51
 10667 0b35 1F000000 		.4byte	.LVL260-1
 10668 0b39 6C000000 		.4byte	.LFE548
 10669 0b3d 0400     		.2byte	0x4
 10670 0b3f F3       		.byte	0xf3
 10671 0b40 01       		.uleb128 0x1
 10672 0b41 51       		.byte	0x51
 10673 0b42 9F       		.byte	0x9f
 10674 0b43 00000000 		.4byte	0
 10675 0b47 00000000 		.4byte	0
 10676              	.LLST80:
 10677 0b4b 16000000 		.4byte	.LVL259
 10678 0b4f 66000000 		.4byte	.LVL266
 10679 0b53 0100     		.2byte	0x1
 10680 0b55 54       		.byte	0x54
 10681 0b56 00000000 		.4byte	0
 10682 0b5a 00000000 		.4byte	0
 10683              	.LLST81:
 10684 0b5e 5A000000 		.4byte	.LVL263
 10685 0b62 62000000 		.4byte	.LVL264
 10686 0b66 0200     		.2byte	0x2
 10687 0b68 31       		.byte	0x31
 10688 0b69 9F       		.byte	0x9f
 10689 0b6a 64000000 		.4byte	.LVL265
 10690 0b6e 6C000000 		.4byte	.LFE548
 10691 0b72 0100     		.2byte	0x1
 10692 0b74 50       		.byte	0x50
 10693 0b75 00000000 		.4byte	0
 10694 0b79 00000000 		.4byte	0
 10695              	.LLST82:
 10696 0b7d 00000000 		.4byte	.LVL268
 10697 0b81 15000000 		.4byte	.LVL269-1
 10698 0b85 0100     		.2byte	0x1
 10699 0b87 50       		.byte	0x50
 10700 0b88 15000000 		.4byte	.LVL269-1
 10701 0b8c 4A000000 		.4byte	.LVL272
 10702 0b90 0100     		.2byte	0x1
 10703 0b92 54       		.byte	0x54
 10704 0b93 4A000000 		.4byte	.LVL272
 10705 0b97 4C000000 		.4byte	.LVL273
 10706 0b9b 0400     		.2byte	0x4
 10707 0b9d F3       		.byte	0xf3
 10708 0b9e 01       		.uleb128 0x1
 10709 0b9f 50       		.byte	0x50
 10710 0ba0 9F       		.byte	0x9f
 10711 0ba1 4C000000 		.4byte	.LVL273
 10712 0ba5 4E000000 		.4byte	.LVL274
 10713 0ba9 0100     		.2byte	0x1
 10714 0bab 54       		.byte	0x54
 10715 0bac 4E000000 		.4byte	.LVL274
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 288


 10716 0bb0 50000000 		.4byte	.LVL275
 10717 0bb4 0400     		.2byte	0x4
 10718 0bb6 F3       		.byte	0xf3
 10719 0bb7 01       		.uleb128 0x1
 10720 0bb8 50       		.byte	0x50
 10721 0bb9 9F       		.byte	0x9f
 10722 0bba 50000000 		.4byte	.LVL275
 10723 0bbe 52000000 		.4byte	.LVL276
 10724 0bc2 0100     		.2byte	0x1
 10725 0bc4 54       		.byte	0x54
 10726 0bc5 52000000 		.4byte	.LVL276
 10727 0bc9 54000000 		.4byte	.LVL277
 10728 0bcd 0400     		.2byte	0x4
 10729 0bcf F3       		.byte	0xf3
 10730 0bd0 01       		.uleb128 0x1
 10731 0bd1 50       		.byte	0x50
 10732 0bd2 9F       		.byte	0x9f
 10733 0bd3 54000000 		.4byte	.LVL277
 10734 0bd7 56000000 		.4byte	.LVL278
 10735 0bdb 0100     		.2byte	0x1
 10736 0bdd 54       		.byte	0x54
 10737 0bde 56000000 		.4byte	.LVL278
 10738 0be2 64000000 		.4byte	.LFE550
 10739 0be6 0400     		.2byte	0x4
 10740 0be8 F3       		.byte	0xf3
 10741 0be9 01       		.uleb128 0x1
 10742 0bea 50       		.byte	0x50
 10743 0beb 9F       		.byte	0x9f
 10744 0bec 00000000 		.4byte	0
 10745 0bf0 00000000 		.4byte	0
 10746              	.LLST83:
 10747 0bf4 00000000 		.4byte	.LVL268
 10748 0bf8 15000000 		.4byte	.LVL269-1
 10749 0bfc 0100     		.2byte	0x1
 10750 0bfe 51       		.byte	0x51
 10751 0bff 15000000 		.4byte	.LVL269-1
 10752 0c03 5E000000 		.4byte	.LVL280
 10753 0c07 0100     		.2byte	0x1
 10754 0c09 55       		.byte	0x55
 10755 0c0a 5E000000 		.4byte	.LVL280
 10756 0c0e 64000000 		.4byte	.LFE550
 10757 0c12 0400     		.2byte	0x4
 10758 0c14 F3       		.byte	0xf3
 10759 0c15 01       		.uleb128 0x1
 10760 0c16 51       		.byte	0x51
 10761 0c17 9F       		.byte	0x9f
 10762 0c18 00000000 		.4byte	0
 10763 0c1c 00000000 		.4byte	0
 10764              	.LLST84:
 10765 0c20 48000000 		.4byte	.LVL271
 10766 0c24 4C000000 		.4byte	.LVL273
 10767 0c28 0200     		.2byte	0x2
 10768 0c2a 30       		.byte	0x30
 10769 0c2b 9F       		.byte	0x9f
 10770 0c2c 56000000 		.4byte	.LVL278
 10771 0c30 5E000000 		.4byte	.LVL280
 10772 0c34 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 289


 10773 0c36 54       		.byte	0x54
 10774 0c37 5E000000 		.4byte	.LVL280
 10775 0c3b 64000000 		.4byte	.LFE550
 10776 0c3f 0100     		.2byte	0x1
 10777 0c41 50       		.byte	0x50
 10778 0c42 00000000 		.4byte	0
 10779 0c46 00000000 		.4byte	0
 10780              	.LLST85:
 10781 0c4a 1C000000 		.4byte	.LVL270
 10782 0c4e 47000000 		.4byte	.LVL271-1
 10783 0c52 0100     		.2byte	0x1
 10784 0c54 51       		.byte	0x51
 10785 0c55 4C000000 		.4byte	.LVL273
 10786 0c59 56000000 		.4byte	.LVL278
 10787 0c5d 0100     		.2byte	0x1
 10788 0c5f 51       		.byte	0x51
 10789 0c60 00000000 		.4byte	0
 10790 0c64 00000000 		.4byte	0
 10791              	.LLST86:
 10792 0c68 00000000 		.4byte	.LVL281
 10793 0c6c 0C000000 		.4byte	.LVL282
 10794 0c70 0100     		.2byte	0x1
 10795 0c72 50       		.byte	0x50
 10796 0c73 00000000 		.4byte	0
 10797 0c77 00000000 		.4byte	0
 10798              	.LLST87:
 10799 0c7b 00000000 		.4byte	.LVL281
 10800 0c7f 0E000000 		.4byte	.LVL283
 10801 0c83 0100     		.2byte	0x1
 10802 0c85 51       		.byte	0x51
 10803 0c86 0E000000 		.4byte	.LVL283
 10804 0c8a 12000000 		.4byte	.LVL284
 10805 0c8e 0300     		.2byte	0x3
 10806 0c90 71       		.byte	0x71
 10807 0c91 70       		.sleb128 -16
 10808 0c92 9F       		.byte	0x9f
 10809 0c93 12000000 		.4byte	.LVL284
 10810 0c97 1C000000 		.4byte	.LFE553
 10811 0c9b 0400     		.2byte	0x4
 10812 0c9d F3       		.byte	0xf3
 10813 0c9e 01       		.uleb128 0x1
 10814 0c9f 51       		.byte	0x51
 10815 0ca0 9F       		.byte	0x9f
 10816 0ca1 00000000 		.4byte	0
 10817 0ca5 00000000 		.4byte	0
 10818              	.LLST88:
 10819 0ca9 0C000000 		.4byte	.LVL282
 10820 0cad 14000000 		.4byte	.LVL285
 10821 0cb1 0100     		.2byte	0x1
 10822 0cb3 50       		.byte	0x50
 10823 0cb4 00000000 		.4byte	0
 10824 0cb8 00000000 		.4byte	0
 10825              	.LLST89:
 10826 0cbc 00000000 		.4byte	.LVL286
 10827 0cc0 0C000000 		.4byte	.LVL287
 10828 0cc4 0100     		.2byte	0x1
 10829 0cc6 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 290


 10830 0cc7 16000000 		.4byte	.LVL291
 10831 0ccb 18000000 		.4byte	.LVL292
 10832 0ccf 0100     		.2byte	0x1
 10833 0cd1 50       		.byte	0x50
 10834 0cd2 18000000 		.4byte	.LVL292
 10835 0cd6 20000000 		.4byte	.LFE554
 10836 0cda 0400     		.2byte	0x4
 10837 0cdc F3       		.byte	0xf3
 10838 0cdd 01       		.uleb128 0x1
 10839 0cde 50       		.byte	0x50
 10840 0cdf 9F       		.byte	0x9f
 10841 0ce0 00000000 		.4byte	0
 10842 0ce4 00000000 		.4byte	0
 10843              	.LLST90:
 10844 0ce8 00000000 		.4byte	.LVL286
 10845 0cec 0E000000 		.4byte	.LVL288
 10846 0cf0 0100     		.2byte	0x1
 10847 0cf2 51       		.byte	0x51
 10848 0cf3 0E000000 		.4byte	.LVL288
 10849 0cf7 16000000 		.4byte	.LVL291
 10850 0cfb 0300     		.2byte	0x3
 10851 0cfd 71       		.byte	0x71
 10852 0cfe 70       		.sleb128 -16
 10853 0cff 9F       		.byte	0x9f
 10854 0d00 16000000 		.4byte	.LVL291
 10855 0d04 20000000 		.4byte	.LFE554
 10856 0d08 0100     		.2byte	0x1
 10857 0d0a 51       		.byte	0x51
 10858 0d0b 00000000 		.4byte	0
 10859 0d0f 00000000 		.4byte	0
 10860              	.LLST91:
 10861 0d13 00000000 		.4byte	.LVL286
 10862 0d17 14000000 		.4byte	.LVL290
 10863 0d1b 0200     		.2byte	0x2
 10864 0d1d 30       		.byte	0x30
 10865 0d1e 9F       		.byte	0x9f
 10866 0d1f 14000000 		.4byte	.LVL290
 10867 0d23 16000000 		.4byte	.LVL291
 10868 0d27 0100     		.2byte	0x1
 10869 0d29 50       		.byte	0x50
 10870 0d2a 16000000 		.4byte	.LVL291
 10871 0d2e 18000000 		.4byte	.LVL292
 10872 0d32 0200     		.2byte	0x2
 10873 0d34 30       		.byte	0x30
 10874 0d35 9F       		.byte	0x9f
 10875 0d36 18000000 		.4byte	.LVL292
 10876 0d3a 20000000 		.4byte	.LFE554
 10877 0d3e 0100     		.2byte	0x1
 10878 0d40 50       		.byte	0x50
 10879 0d41 00000000 		.4byte	0
 10880 0d45 00000000 		.4byte	0
 10881              	.LLST92:
 10882 0d49 0C000000 		.4byte	.LVL287
 10883 0d4d 12000000 		.4byte	.LVL289
 10884 0d51 0100     		.2byte	0x1
 10885 0d53 50       		.byte	0x50
 10886 0d54 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 291


 10887 0d58 00000000 		.4byte	0
 10888              	.LLST93:
 10889 0d5c 00000000 		.4byte	.LVL296
 10890 0d60 09000000 		.4byte	.LVL297-1
 10891 0d64 0100     		.2byte	0x1
 10892 0d66 50       		.byte	0x50
 10893 0d67 09000000 		.4byte	.LVL297-1
 10894 0d6b 78000000 		.4byte	.LVL303
 10895 0d6f 0100     		.2byte	0x1
 10896 0d71 55       		.byte	0x55
 10897 0d72 78000000 		.4byte	.LVL303
 10898 0d76 80000000 		.4byte	.LFE562
 10899 0d7a 0400     		.2byte	0x4
 10900 0d7c F3       		.byte	0xf3
 10901 0d7d 01       		.uleb128 0x1
 10902 0d7e 50       		.byte	0x50
 10903 0d7f 9F       		.byte	0x9f
 10904 0d80 00000000 		.4byte	0
 10905 0d84 00000000 		.4byte	0
 10906              	.LLST94:
 10907 0d88 00000000 		.4byte	.LVL296
 10908 0d8c 09000000 		.4byte	.LVL297-1
 10909 0d90 0100     		.2byte	0x1
 10910 0d92 51       		.byte	0x51
 10911 0d93 09000000 		.4byte	.LVL297-1
 10912 0d97 4A000000 		.4byte	.LVL301
 10913 0d9b 0100     		.2byte	0x1
 10914 0d9d 54       		.byte	0x54
 10915 0d9e 4A000000 		.4byte	.LVL301
 10916 0da2 80000000 		.4byte	.LFE562
 10917 0da6 0400     		.2byte	0x4
 10918 0da8 F3       		.byte	0xf3
 10919 0da9 01       		.uleb128 0x1
 10920 0daa 51       		.byte	0x51
 10921 0dab 9F       		.byte	0x9f
 10922 0dac 00000000 		.4byte	0
 10923 0db0 00000000 		.4byte	0
 10924              	.LLST95:
 10925 0db4 4A000000 		.4byte	.LVL301
 10926 0db8 78000000 		.4byte	.LVL303
 10927 0dbc 0100     		.2byte	0x1
 10928 0dbe 54       		.byte	0x54
 10929 0dbf 78000000 		.4byte	.LVL303
 10930 0dc3 80000000 		.4byte	.LFE562
 10931 0dc7 0100     		.2byte	0x1
 10932 0dc9 50       		.byte	0x50
 10933 0dca 00000000 		.4byte	0
 10934 0dce 00000000 		.4byte	0
 10935              	.LLST96:
 10936 0dd2 00000000 		.4byte	.LVL304
 10937 0dd6 0D000000 		.4byte	.LVL305-1
 10938 0dda 0100     		.2byte	0x1
 10939 0ddc 50       		.byte	0x50
 10940 0ddd 0D000000 		.4byte	.LVL305-1
 10941 0de1 9C000000 		.4byte	.LVL314
 10942 0de5 0100     		.2byte	0x1
 10943 0de7 57       		.byte	0x57
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 292


 10944 0de8 9C000000 		.4byte	.LVL314
 10945 0dec A4000000 		.4byte	.LFE563
 10946 0df0 0400     		.2byte	0x4
 10947 0df2 F3       		.byte	0xf3
 10948 0df3 01       		.uleb128 0x1
 10949 0df4 50       		.byte	0x50
 10950 0df5 9F       		.byte	0x9f
 10951 0df6 00000000 		.4byte	0
 10952 0dfa 00000000 		.4byte	0
 10953              	.LLST97:
 10954 0dfe 00000000 		.4byte	.LVL304
 10955 0e02 0D000000 		.4byte	.LVL305-1
 10956 0e06 0100     		.2byte	0x1
 10957 0e08 51       		.byte	0x51
 10958 0e09 0D000000 		.4byte	.LVL305-1
 10959 0e0d 84000000 		.4byte	.LVL310
 10960 0e11 0100     		.2byte	0x1
 10961 0e13 54       		.byte	0x54
 10962 0e14 84000000 		.4byte	.LVL310
 10963 0e18 86000000 		.4byte	.LVL311
 10964 0e1c 0400     		.2byte	0x4
 10965 0e1e F3       		.byte	0xf3
 10966 0e1f 01       		.uleb128 0x1
 10967 0e20 51       		.byte	0x51
 10968 0e21 9F       		.byte	0x9f
 10969 0e22 86000000 		.4byte	.LVL311
 10970 0e26 88000000 		.4byte	.LVL312
 10971 0e2a 0100     		.2byte	0x1
 10972 0e2c 54       		.byte	0x54
 10973 0e2d 88000000 		.4byte	.LVL312
 10974 0e31 A4000000 		.4byte	.LFE563
 10975 0e35 0400     		.2byte	0x4
 10976 0e37 F3       		.byte	0xf3
 10977 0e38 01       		.uleb128 0x1
 10978 0e39 51       		.byte	0x51
 10979 0e3a 9F       		.byte	0x9f
 10980 0e3b 00000000 		.4byte	0
 10981 0e3f 00000000 		.4byte	0
 10982              	.LLST98:
 10983 0e43 00000000 		.4byte	.LVL304
 10984 0e47 0D000000 		.4byte	.LVL305-1
 10985 0e4b 0100     		.2byte	0x1
 10986 0e4d 52       		.byte	0x52
 10987 0e4e 0D000000 		.4byte	.LVL305-1
 10988 0e52 9C000000 		.4byte	.LVL314
 10989 0e56 0100     		.2byte	0x1
 10990 0e58 55       		.byte	0x55
 10991 0e59 9C000000 		.4byte	.LVL314
 10992 0e5d A4000000 		.4byte	.LFE563
 10993 0e61 0400     		.2byte	0x4
 10994 0e63 F3       		.byte	0xf3
 10995 0e64 01       		.uleb128 0x1
 10996 0e65 52       		.byte	0x52
 10997 0e66 9F       		.byte	0x9f
 10998 0e67 00000000 		.4byte	0
 10999 0e6b 00000000 		.4byte	0
 11000              	.LLST99:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 293


 11001 0e6f 00000000 		.4byte	.LVL304
 11002 0e73 0D000000 		.4byte	.LVL305-1
 11003 0e77 0100     		.2byte	0x1
 11004 0e79 53       		.byte	0x53
 11005 0e7a 0D000000 		.4byte	.LVL305-1
 11006 0e7e 9C000000 		.4byte	.LVL314
 11007 0e82 0100     		.2byte	0x1
 11008 0e84 56       		.byte	0x56
 11009 0e85 9C000000 		.4byte	.LVL314
 11010 0e89 A4000000 		.4byte	.LFE563
 11011 0e8d 0400     		.2byte	0x4
 11012 0e8f F3       		.byte	0xf3
 11013 0e90 01       		.uleb128 0x1
 11014 0e91 53       		.byte	0x53
 11015 0e92 9F       		.byte	0x9f
 11016 0e93 00000000 		.4byte	0
 11017 0e97 00000000 		.4byte	0
 11018              	.LLST100:
 11019 0e9b 82000000 		.4byte	.LVL309
 11020 0e9f 86000000 		.4byte	.LVL311
 11021 0ea3 0200     		.2byte	0x2
 11022 0ea5 31       		.byte	0x31
 11023 0ea6 9F       		.byte	0x9f
 11024 0ea7 88000000 		.4byte	.LVL312
 11025 0eab 9C000000 		.4byte	.LVL314
 11026 0eaf 0100     		.2byte	0x1
 11027 0eb1 54       		.byte	0x54
 11028 0eb2 9C000000 		.4byte	.LVL314
 11029 0eb6 A4000000 		.4byte	.LFE563
 11030 0eba 0100     		.2byte	0x1
 11031 0ebc 50       		.byte	0x50
 11032 0ebd 00000000 		.4byte	0
 11033 0ec1 00000000 		.4byte	0
 11034              	.LLST101:
 11035 0ec5 00000000 		.4byte	.LVL315
 11036 0ec9 13000000 		.4byte	.LVL317-1
 11037 0ecd 0100     		.2byte	0x1
 11038 0ecf 50       		.byte	0x50
 11039 0ed0 13000000 		.4byte	.LVL317-1
 11040 0ed4 BA000000 		.4byte	.LVL325
 11041 0ed8 0100     		.2byte	0x1
 11042 0eda 54       		.byte	0x54
 11043 0edb BA000000 		.4byte	.LVL325
 11044 0edf C8000000 		.4byte	.LFE564
 11045 0ee3 0400     		.2byte	0x4
 11046 0ee5 F3       		.byte	0xf3
 11047 0ee6 01       		.uleb128 0x1
 11048 0ee7 50       		.byte	0x50
 11049 0ee8 9F       		.byte	0x9f
 11050 0ee9 00000000 		.4byte	0
 11051 0eed 00000000 		.4byte	0
 11052              	.LLST102:
 11053 0ef1 00000000 		.4byte	.LVL315
 11054 0ef5 13000000 		.4byte	.LVL317-1
 11055 0ef9 0100     		.2byte	0x1
 11056 0efb 51       		.byte	0x51
 11057 0efc 13000000 		.4byte	.LVL317-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 294


 11058 0f00 38000000 		.4byte	.LVL319
 11059 0f04 0100     		.2byte	0x1
 11060 0f06 56       		.byte	0x56
 11061 0f07 38000000 		.4byte	.LVL319
 11062 0f0b 3E000000 		.4byte	.LVL320
 11063 0f0f 0400     		.2byte	0x4
 11064 0f11 F3       		.byte	0xf3
 11065 0f12 01       		.uleb128 0x1
 11066 0f13 51       		.byte	0x51
 11067 0f14 9F       		.byte	0x9f
 11068 0f15 3E000000 		.4byte	.LVL320
 11069 0f19 5E000000 		.4byte	.LVL321
 11070 0f1d 0100     		.2byte	0x1
 11071 0f1f 56       		.byte	0x56
 11072 0f20 5E000000 		.4byte	.LVL321
 11073 0f24 C8000000 		.4byte	.LFE564
 11074 0f28 0400     		.2byte	0x4
 11075 0f2a F3       		.byte	0xf3
 11076 0f2b 01       		.uleb128 0x1
 11077 0f2c 51       		.byte	0x51
 11078 0f2d 9F       		.byte	0x9f
 11079 0f2e 00000000 		.4byte	0
 11080 0f32 00000000 		.4byte	0
 11081              	.LLST103:
 11082 0f36 00000000 		.4byte	.LVL315
 11083 0f3a 13000000 		.4byte	.LVL317-1
 11084 0f3e 0100     		.2byte	0x1
 11085 0f40 52       		.byte	0x52
 11086 0f41 13000000 		.4byte	.LVL317-1
 11087 0f45 C8000000 		.4byte	.LFE564
 11088 0f49 0400     		.2byte	0x4
 11089 0f4b F3       		.byte	0xf3
 11090 0f4c 01       		.uleb128 0x1
 11091 0f4d 52       		.byte	0x52
 11092 0f4e 9F       		.byte	0x9f
 11093 0f4f 00000000 		.4byte	0
 11094 0f53 00000000 		.4byte	0
 11095              	.LLST104:
 11096 0f57 00000000 		.4byte	.LVL315
 11097 0f5b 13000000 		.4byte	.LVL317-1
 11098 0f5f 0100     		.2byte	0x1
 11099 0f61 53       		.byte	0x53
 11100 0f62 13000000 		.4byte	.LVL317-1
 11101 0f66 BA000000 		.4byte	.LVL325
 11102 0f6a 0100     		.2byte	0x1
 11103 0f6c 57       		.byte	0x57
 11104 0f6d BA000000 		.4byte	.LVL325
 11105 0f71 C8000000 		.4byte	.LFE564
 11106 0f75 0400     		.2byte	0x4
 11107 0f77 F3       		.byte	0xf3
 11108 0f78 01       		.uleb128 0x1
 11109 0f79 53       		.byte	0x53
 11110 0f7a 9F       		.byte	0x9f
 11111 0f7b 00000000 		.4byte	0
 11112 0f7f 00000000 		.4byte	0
 11113              	.LLST105:
 11114 0f83 10000000 		.4byte	.LVL316
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 295


 11115 0f87 BA000000 		.4byte	.LVL325
 11116 0f8b 0100     		.2byte	0x1
 11117 0f8d 54       		.byte	0x54
 11118 0f8e BA000000 		.4byte	.LVL325
 11119 0f92 C8000000 		.4byte	.LFE564
 11120 0f96 0400     		.2byte	0x4
 11121 0f98 F3       		.byte	0xf3
 11122 0f99 01       		.uleb128 0x1
 11123 0f9a 50       		.byte	0x50
 11124 0f9b 9F       		.byte	0x9f
 11125 0f9c 00000000 		.4byte	0
 11126 0fa0 00000000 		.4byte	0
 11127              	.LLST106:
 11128 0fa4 00000000 		.4byte	.LVL315
 11129 0fa8 5E000000 		.4byte	.LVL321
 11130 0fac 0200     		.2byte	0x2
 11131 0fae 31       		.byte	0x31
 11132 0faf 9F       		.byte	0x9f
 11133 0fb0 5E000000 		.4byte	.LVL321
 11134 0fb4 BA000000 		.4byte	.LVL325
 11135 0fb8 0100     		.2byte	0x1
 11136 0fba 55       		.byte	0x55
 11137 0fbb BA000000 		.4byte	.LVL325
 11138 0fbf C8000000 		.4byte	.LFE564
 11139 0fc3 0100     		.2byte	0x1
 11140 0fc5 50       		.byte	0x50
 11141 0fc6 00000000 		.4byte	0
 11142 0fca 00000000 		.4byte	0
 11143              	.LLST107:
 11144 0fce 20000000 		.4byte	.LVL318
 11145 0fd2 69000000 		.4byte	.LVL322-1
 11146 0fd6 0100     		.2byte	0x1
 11147 0fd8 53       		.byte	0x53
 11148 0fd9 00000000 		.4byte	0
 11149 0fdd 00000000 		.4byte	0
 11150              	.LLST108:
 11151 0fe1 00000000 		.4byte	.LVL326
 11152 0fe5 17000000 		.4byte	.LVL328-1
 11153 0fe9 0100     		.2byte	0x1
 11154 0feb 50       		.byte	0x50
 11155 0fec 17000000 		.4byte	.LVL328-1
 11156 0ff0 F6000000 		.4byte	.LVL339
 11157 0ff4 0100     		.2byte	0x1
 11158 0ff6 54       		.byte	0x54
 11159 0ff7 F6000000 		.4byte	.LVL339
 11160 0ffb 04010000 		.4byte	.LFE565
 11161 0fff 0400     		.2byte	0x4
 11162 1001 F3       		.byte	0xf3
 11163 1002 01       		.uleb128 0x1
 11164 1003 50       		.byte	0x50
 11165 1004 9F       		.byte	0x9f
 11166 1005 00000000 		.4byte	0
 11167 1009 00000000 		.4byte	0
 11168              	.LLST109:
 11169 100d 00000000 		.4byte	.LVL326
 11170 1011 17000000 		.4byte	.LVL328-1
 11171 1015 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 296


 11172 1017 51       		.byte	0x51
 11173 1018 17000000 		.4byte	.LVL328-1
 11174 101c 9A000000 		.4byte	.LVL332
 11175 1020 0100     		.2byte	0x1
 11176 1022 58       		.byte	0x58
 11177 1023 9A000000 		.4byte	.LVL332
 11178 1027 C4000000 		.4byte	.LVL335
 11179 102b 0400     		.2byte	0x4
 11180 102d F3       		.byte	0xf3
 11181 102e 01       		.uleb128 0x1
 11182 102f 51       		.byte	0x51
 11183 1030 9F       		.byte	0x9f
 11184 1031 C4000000 		.4byte	.LVL335
 11185 1035 CE000000 		.4byte	.LVL336
 11186 1039 0100     		.2byte	0x1
 11187 103b 58       		.byte	0x58
 11188 103c CE000000 		.4byte	.LVL336
 11189 1040 04010000 		.4byte	.LFE565
 11190 1044 0400     		.2byte	0x4
 11191 1046 F3       		.byte	0xf3
 11192 1047 01       		.uleb128 0x1
 11193 1048 51       		.byte	0x51
 11194 1049 9F       		.byte	0x9f
 11195 104a 00000000 		.4byte	0
 11196 104e 00000000 		.4byte	0
 11197              	.LLST110:
 11198 1052 00000000 		.4byte	.LVL326
 11199 1056 17000000 		.4byte	.LVL328-1
 11200 105a 0100     		.2byte	0x1
 11201 105c 52       		.byte	0x52
 11202 105d 17000000 		.4byte	.LVL328-1
 11203 1061 04010000 		.4byte	.LFE565
 11204 1065 0400     		.2byte	0x4
 11205 1067 F3       		.byte	0xf3
 11206 1068 01       		.uleb128 0x1
 11207 1069 52       		.byte	0x52
 11208 106a 9F       		.byte	0x9f
 11209 106b 00000000 		.4byte	0
 11210 106f 00000000 		.4byte	0
 11211              	.LLST111:
 11212 1073 00000000 		.4byte	.LVL326
 11213 1077 17000000 		.4byte	.LVL328-1
 11214 107b 0100     		.2byte	0x1
 11215 107d 53       		.byte	0x53
 11216 107e 17000000 		.4byte	.LVL328-1
 11217 1082 F6000000 		.4byte	.LVL339
 11218 1086 0100     		.2byte	0x1
 11219 1088 59       		.byte	0x59
 11220 1089 F6000000 		.4byte	.LVL339
 11221 108d 04010000 		.4byte	.LFE565
 11222 1091 0400     		.2byte	0x4
 11223 1093 F3       		.byte	0xf3
 11224 1094 01       		.uleb128 0x1
 11225 1095 53       		.byte	0x53
 11226 1096 9F       		.byte	0x9f
 11227 1097 00000000 		.4byte	0
 11228 109b 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 297


 11229              	.LLST112:
 11230 109f 00000000 		.4byte	.LVL326
 11231 10a3 F6000000 		.4byte	.LVL339
 11232 10a7 0200     		.2byte	0x2
 11233 10a9 91       		.byte	0x91
 11234 10aa 00       		.sleb128 0
 11235 10ab F6000000 		.4byte	.LVL339
 11236 10af 04010000 		.4byte	.LFE565
 11237 10b3 0200     		.2byte	0x2
 11238 10b5 7D       		.byte	0x7d
 11239 10b6 00       		.sleb128 0
 11240 10b7 00000000 		.4byte	0
 11241 10bb 00000000 		.4byte	0
 11242              	.LLST113:
 11243 10bf 18000000 		.4byte	.LVL328
 11244 10c3 F6000000 		.4byte	.LVL339
 11245 10c7 0100     		.2byte	0x1
 11246 10c9 54       		.byte	0x54
 11247 10ca F6000000 		.4byte	.LVL339
 11248 10ce 04010000 		.4byte	.LFE565
 11249 10d2 0400     		.2byte	0x4
 11250 10d4 F3       		.byte	0xf3
 11251 10d5 01       		.uleb128 0x1
 11252 10d6 50       		.byte	0x50
 11253 10d7 9F       		.byte	0x9f
 11254 10d8 00000000 		.4byte	0
 11255 10dc 00000000 		.4byte	0
 11256              	.LLST114:
 11257 10e0 3E000000 		.4byte	.LVL329
 11258 10e4 88000000 		.4byte	.LVL331
 11259 10e8 0100     		.2byte	0x1
 11260 10ea 53       		.byte	0x53
 11261 10eb 00000000 		.4byte	0
 11262 10ef 00000000 		.4byte	0
 11263              	.LLST115:
 11264 10f3 06000000 		.4byte	.LVL327
 11265 10f7 82000000 		.4byte	.LVL330
 11266 10fb 0200     		.2byte	0x2
 11267 10fd 31       		.byte	0x31
 11268 10fe 9F       		.byte	0x9f
 11269 10ff 82000000 		.4byte	.LVL330
 11270 1103 F6000000 		.4byte	.LVL339
 11271 1107 0100     		.2byte	0x1
 11272 1109 55       		.byte	0x55
 11273 110a F6000000 		.4byte	.LVL339
 11274 110e 04010000 		.4byte	.LFE565
 11275 1112 0100     		.2byte	0x1
 11276 1114 50       		.byte	0x50
 11277 1115 00000000 		.4byte	0
 11278 1119 00000000 		.4byte	0
 11279              	.LLST116:
 11280 111d EC000000 		.4byte	.LVL337
 11281 1121 F0000000 		.4byte	.LVL338
 11282 1125 0100     		.2byte	0x1
 11283 1127 57       		.byte	0x57
 11284 1128 00000000 		.4byte	0
 11285 112c 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 298


 11286              	.LLST117:
 11287 1130 00000000 		.4byte	.LVL340
 11288 1134 0F000000 		.4byte	.LVL341-1
 11289 1138 0100     		.2byte	0x1
 11290 113a 50       		.byte	0x50
 11291 113b 0F000000 		.4byte	.LVL341-1
 11292 113f A4000000 		.4byte	.LVL349
 11293 1143 0100     		.2byte	0x1
 11294 1145 54       		.byte	0x54
 11295 1146 A4000000 		.4byte	.LVL349
 11296 114a B0000000 		.4byte	.LFE566
 11297 114e 0400     		.2byte	0x4
 11298 1150 F3       		.byte	0xf3
 11299 1151 01       		.uleb128 0x1
 11300 1152 50       		.byte	0x50
 11301 1153 9F       		.byte	0x9f
 11302 1154 00000000 		.4byte	0
 11303 1158 00000000 		.4byte	0
 11304              	.LLST118:
 11305 115c 00000000 		.4byte	.LVL340
 11306 1160 0F000000 		.4byte	.LVL341-1
 11307 1164 0100     		.2byte	0x1
 11308 1166 51       		.byte	0x51
 11309 1167 0F000000 		.4byte	.LVL341-1
 11310 116b A4000000 		.4byte	.LVL349
 11311 116f 0100     		.2byte	0x1
 11312 1171 55       		.byte	0x55
 11313 1172 A4000000 		.4byte	.LVL349
 11314 1176 B0000000 		.4byte	.LFE566
 11315 117a 0400     		.2byte	0x4
 11316 117c F3       		.byte	0xf3
 11317 117d 01       		.uleb128 0x1
 11318 117e 51       		.byte	0x51
 11319 117f 9F       		.byte	0x9f
 11320 1180 00000000 		.4byte	0
 11321 1184 00000000 		.4byte	0
 11322              	.LLST119:
 11323 1188 10000000 		.4byte	.LVL341
 11324 118c A4000000 		.4byte	.LVL349
 11325 1190 0100     		.2byte	0x1
 11326 1192 54       		.byte	0x54
 11327 1193 A4000000 		.4byte	.LVL349
 11328 1197 B0000000 		.4byte	.LFE566
 11329 119b 0400     		.2byte	0x4
 11330 119d F3       		.byte	0xf3
 11331 119e 01       		.uleb128 0x1
 11332 119f 50       		.byte	0x50
 11333 11a0 9F       		.byte	0x9f
 11334 11a1 00000000 		.4byte	0
 11335 11a5 00000000 		.4byte	0
 11336              	.LLST120:
 11337 11a9 2A000000 		.4byte	.LVL342
 11338 11ad 3C000000 		.4byte	.LVL343
 11339 11b1 0100     		.2byte	0x1
 11340 11b3 53       		.byte	0x53
 11341 11b4 00000000 		.4byte	0
 11342 11b8 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 299


 11343              	.LLST121:
 11344 11bc 9E000000 		.4byte	.LVL347
 11345 11c0 A2000000 		.4byte	.LVL348
 11346 11c4 0100     		.2byte	0x1
 11347 11c6 56       		.byte	0x56
 11348 11c7 00000000 		.4byte	0
 11349 11cb 00000000 		.4byte	0
 11350              	.LLST122:
 11351 11cf 00000000 		.4byte	.LVL350
 11352 11d3 0C000000 		.4byte	.LVL351
 11353 11d7 0100     		.2byte	0x1
 11354 11d9 50       		.byte	0x50
 11355 11da 00000000 		.4byte	0
 11356 11de 00000000 		.4byte	0
 11357              	.LLST123:
 11358 11e2 0C000000 		.4byte	.LVL351
 11359 11e6 22000000 		.4byte	.LVL354
 11360 11ea 0100     		.2byte	0x1
 11361 11ec 54       		.byte	0x54
 11362 11ed 24000000 		.4byte	.LVL355
 11363 11f1 26000000 		.4byte	.LVL356
 11364 11f5 0100     		.2byte	0x1
 11365 11f7 54       		.byte	0x54
 11366 11f8 00000000 		.4byte	0
 11367 11fc 00000000 		.4byte	0
 11368              	.LLST124:
 11369 1200 20000000 		.4byte	.LVL353
 11370 1204 24000000 		.4byte	.LVL355
 11371 1208 0200     		.2byte	0x2
 11372 120a 31       		.byte	0x31
 11373 120b 9F       		.byte	0x9f
 11374 120c 26000000 		.4byte	.LVL356
 11375 1210 2E000000 		.4byte	.LVL358
 11376 1214 0100     		.2byte	0x1
 11377 1216 54       		.byte	0x54
 11378 1217 2E000000 		.4byte	.LVL358
 11379 121b 34000000 		.4byte	.LFE567
 11380 121f 0100     		.2byte	0x1
 11381 1221 50       		.byte	0x50
 11382 1222 00000000 		.4byte	0
 11383 1226 00000000 		.4byte	0
 11384              		.section	.debug_aranges,"",%progbits
 11385 0000 94010000 		.4byte	0x194
 11386 0004 0200     		.2byte	0x2
 11387 0006 00000000 		.4byte	.Ldebug_info0
 11388 000a 04       		.byte	0x4
 11389 000b 00       		.byte	0
 11390 000c 0000     		.2byte	0
 11391 000e 0000     		.2byte	0
 11392 0010 00000000 		.4byte	.LFB531
 11393 0014 40000000 		.4byte	.LFE531-.LFB531
 11394 0018 00000000 		.4byte	.LFB558
 11395 001c 2C000000 		.4byte	.LFE558-.LFB558
 11396 0020 00000000 		.4byte	.LFB557
 11397 0024 12000000 		.4byte	.LFE557-.LFB557
 11398 0028 00000000 		.4byte	.LFB522
 11399 002c 9E000000 		.4byte	.LFE522-.LFB522
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 300


 11400 0030 00000000 		.4byte	.LFB555
 11401 0034 58000000 		.4byte	.LFE555-.LFB555
 11402 0038 00000000 		.4byte	.LFB523
 11403 003c AC000000 		.4byte	.LFE523-.LFB523
 11404 0040 00000000 		.4byte	.LFB568
 11405 0044 68000000 		.4byte	.LFE568-.LFB568
 11406 0048 00000000 		.4byte	.LFB521
 11407 004c 62000000 		.4byte	.LFE521-.LFB521
 11408 0050 00000000 		.4byte	.LFB524
 11409 0054 A4000000 		.4byte	.LFE524-.LFB524
 11410 0058 00000000 		.4byte	.LFB527
 11411 005c 20000000 		.4byte	.LFE527-.LFB527
 11412 0060 00000000 		.4byte	.LFB528
 11413 0064 30000000 		.4byte	.LFE528-.LFB528
 11414 0068 00000000 		.4byte	.LFB529
 11415 006c D0000000 		.4byte	.LFE529-.LFB529
 11416 0070 00000000 		.4byte	.LFB532
 11417 0074 7C000000 		.4byte	.LFE532-.LFB532
 11418 0078 00000000 		.4byte	.LFB533
 11419 007c 98000000 		.4byte	.LFE533-.LFB533
 11420 0080 00000000 		.4byte	.LFB534
 11421 0084 60000000 		.4byte	.LFE534-.LFB534
 11422 0088 00000000 		.4byte	.LFB535
 11423 008c 18000000 		.4byte	.LFE535-.LFB535
 11424 0090 00000000 		.4byte	.LFB536
 11425 0094 14000000 		.4byte	.LFE536-.LFB536
 11426 0098 00000000 		.4byte	.LFB538
 11427 009c 0C000000 		.4byte	.LFE538-.LFB538
 11428 00a0 00000000 		.4byte	.LFB539
 11429 00a4 14000000 		.4byte	.LFE539-.LFB539
 11430 00a8 00000000 		.4byte	.LFB540
 11431 00ac 0C000000 		.4byte	.LFE540-.LFB540
 11432 00b0 00000000 		.4byte	.LFB541
 11433 00b4 1C000000 		.4byte	.LFE541-.LFB541
 11434 00b8 00000000 		.4byte	.LFB542
 11435 00bc F0000000 		.4byte	.LFE542-.LFB542
 11436 00c0 00000000 		.4byte	.LFB537
 11437 00c4 E4000000 		.4byte	.LFE537-.LFB537
 11438 00c8 00000000 		.4byte	.LFB525
 11439 00cc 84000000 		.4byte	.LFE525-.LFB525
 11440 00d0 00000000 		.4byte	.LFB526
 11441 00d4 44000000 		.4byte	.LFE526-.LFB526
 11442 00d8 00000000 		.4byte	.LFB556
 11443 00dc 54000000 		.4byte	.LFE556-.LFB556
 11444 00e0 00000000 		.4byte	.LFB552
 11445 00e4 2C000000 		.4byte	.LFE552-.LFB552
 11446 00e8 00000000 		.4byte	.LFB543
 11447 00ec BC000000 		.4byte	.LFE543-.LFB543
 11448 00f0 00000000 		.4byte	.LFB530
 11449 00f4 98000000 		.4byte	.LFE530-.LFB530
 11450 00f8 00000000 		.4byte	.LFB544
 11451 00fc 24000000 		.4byte	.LFE544-.LFB544
 11452 0100 00000000 		.4byte	.LFB545
 11453 0104 40000000 		.4byte	.LFE545-.LFB545
 11454 0108 00000000 		.4byte	.LFB546
 11455 010c 2C000000 		.4byte	.LFE546-.LFB546
 11456 0110 00000000 		.4byte	.LFB547
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 301


 11457 0114 7C000000 		.4byte	.LFE547-.LFB547
 11458 0118 00000000 		.4byte	.LFB548
 11459 011c 6C000000 		.4byte	.LFE548-.LFB548
 11460 0120 00000000 		.4byte	.LFB549
 11461 0124 1C000000 		.4byte	.LFE549-.LFB549
 11462 0128 00000000 		.4byte	.LFB550
 11463 012c 64000000 		.4byte	.LFE550-.LFB550
 11464 0130 00000000 		.4byte	.LFB551
 11465 0134 10000000 		.4byte	.LFE551-.LFB551
 11466 0138 00000000 		.4byte	.LFB553
 11467 013c 1C000000 		.4byte	.LFE553-.LFB553
 11468 0140 00000000 		.4byte	.LFB554
 11469 0144 20000000 		.4byte	.LFE554-.LFB554
 11470 0148 00000000 		.4byte	.LFB559
 11471 014c 0C000000 		.4byte	.LFE559-.LFB559
 11472 0150 00000000 		.4byte	.LFB560
 11473 0154 20000000 		.4byte	.LFE560-.LFB560
 11474 0158 00000000 		.4byte	.LFB561
 11475 015c 20000000 		.4byte	.LFE561-.LFB561
 11476 0160 00000000 		.4byte	.LFB562
 11477 0164 80000000 		.4byte	.LFE562-.LFB562
 11478 0168 00000000 		.4byte	.LFB563
 11479 016c A4000000 		.4byte	.LFE563-.LFB563
 11480 0170 00000000 		.4byte	.LFB564
 11481 0174 C8000000 		.4byte	.LFE564-.LFB564
 11482 0178 00000000 		.4byte	.LFB565
 11483 017c 04010000 		.4byte	.LFE565-.LFB565
 11484 0180 00000000 		.4byte	.LFB566
 11485 0184 B0000000 		.4byte	.LFE566-.LFB566
 11486 0188 00000000 		.4byte	.LFB567
 11487 018c 34000000 		.4byte	.LFE567-.LFB567
 11488 0190 00000000 		.4byte	0
 11489 0194 00000000 		.4byte	0
 11490              		.section	.debug_ranges,"",%progbits
 11491              	.Ldebug_ranges0:
 11492 0000 0E000000 		.4byte	.LBB27
 11493 0004 4A000000 		.4byte	.LBE27
 11494 0008 4E000000 		.4byte	.LBB29
 11495 000c CC000000 		.4byte	.LBE29
 11496 0010 00000000 		.4byte	0
 11497 0014 00000000 		.4byte	0
 11498 0018 22000000 		.4byte	.LBB31
 11499 001c 38000000 		.4byte	.LBE31
 11500 0020 3C000000 		.4byte	.LBB32
 11501 0024 44000000 		.4byte	.LBE32
 11502 0028 4C000000 		.4byte	.LBB33
 11503 002c 62000000 		.4byte	.LBE33
 11504 0030 00000000 		.4byte	0
 11505 0034 00000000 		.4byte	0
 11506 0038 00000000 		.4byte	.LFB531
 11507 003c 40000000 		.4byte	.LFE531
 11508 0040 00000000 		.4byte	.LFB558
 11509 0044 2C000000 		.4byte	.LFE558
 11510 0048 00000000 		.4byte	.LFB557
 11511 004c 12000000 		.4byte	.LFE557
 11512 0050 00000000 		.4byte	.LFB522
 11513 0054 9E000000 		.4byte	.LFE522
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 302


 11514 0058 00000000 		.4byte	.LFB555
 11515 005c 58000000 		.4byte	.LFE555
 11516 0060 00000000 		.4byte	.LFB523
 11517 0064 AC000000 		.4byte	.LFE523
 11518 0068 00000000 		.4byte	.LFB568
 11519 006c 68000000 		.4byte	.LFE568
 11520 0070 00000000 		.4byte	.LFB521
 11521 0074 62000000 		.4byte	.LFE521
 11522 0078 00000000 		.4byte	.LFB524
 11523 007c A4000000 		.4byte	.LFE524
 11524 0080 00000000 		.4byte	.LFB527
 11525 0084 20000000 		.4byte	.LFE527
 11526 0088 00000000 		.4byte	.LFB528
 11527 008c 30000000 		.4byte	.LFE528
 11528 0090 00000000 		.4byte	.LFB529
 11529 0094 D0000000 		.4byte	.LFE529
 11530 0098 00000000 		.4byte	.LFB532
 11531 009c 7C000000 		.4byte	.LFE532
 11532 00a0 00000000 		.4byte	.LFB533
 11533 00a4 98000000 		.4byte	.LFE533
 11534 00a8 00000000 		.4byte	.LFB534
 11535 00ac 60000000 		.4byte	.LFE534
 11536 00b0 00000000 		.4byte	.LFB535
 11537 00b4 18000000 		.4byte	.LFE535
 11538 00b8 00000000 		.4byte	.LFB536
 11539 00bc 14000000 		.4byte	.LFE536
 11540 00c0 00000000 		.4byte	.LFB538
 11541 00c4 0C000000 		.4byte	.LFE538
 11542 00c8 00000000 		.4byte	.LFB539
 11543 00cc 14000000 		.4byte	.LFE539
 11544 00d0 00000000 		.4byte	.LFB540
 11545 00d4 0C000000 		.4byte	.LFE540
 11546 00d8 00000000 		.4byte	.LFB541
 11547 00dc 1C000000 		.4byte	.LFE541
 11548 00e0 00000000 		.4byte	.LFB542
 11549 00e4 F0000000 		.4byte	.LFE542
 11550 00e8 00000000 		.4byte	.LFB537
 11551 00ec E4000000 		.4byte	.LFE537
 11552 00f0 00000000 		.4byte	.LFB525
 11553 00f4 84000000 		.4byte	.LFE525
 11554 00f8 00000000 		.4byte	.LFB526
 11555 00fc 44000000 		.4byte	.LFE526
 11556 0100 00000000 		.4byte	.LFB556
 11557 0104 54000000 		.4byte	.LFE556
 11558 0108 00000000 		.4byte	.LFB552
 11559 010c 2C000000 		.4byte	.LFE552
 11560 0110 00000000 		.4byte	.LFB543
 11561 0114 BC000000 		.4byte	.LFE543
 11562 0118 00000000 		.4byte	.LFB530
 11563 011c 98000000 		.4byte	.LFE530
 11564 0120 00000000 		.4byte	.LFB544
 11565 0124 24000000 		.4byte	.LFE544
 11566 0128 00000000 		.4byte	.LFB545
 11567 012c 40000000 		.4byte	.LFE545
 11568 0130 00000000 		.4byte	.LFB546
 11569 0134 2C000000 		.4byte	.LFE546
 11570 0138 00000000 		.4byte	.LFB547
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 303


 11571 013c 7C000000 		.4byte	.LFE547
 11572 0140 00000000 		.4byte	.LFB548
 11573 0144 6C000000 		.4byte	.LFE548
 11574 0148 00000000 		.4byte	.LFB549
 11575 014c 1C000000 		.4byte	.LFE549
 11576 0150 00000000 		.4byte	.LFB550
 11577 0154 64000000 		.4byte	.LFE550
 11578 0158 00000000 		.4byte	.LFB551
 11579 015c 10000000 		.4byte	.LFE551
 11580 0160 00000000 		.4byte	.LFB553
 11581 0164 1C000000 		.4byte	.LFE553
 11582 0168 00000000 		.4byte	.LFB554
 11583 016c 20000000 		.4byte	.LFE554
 11584 0170 00000000 		.4byte	.LFB559
 11585 0174 0C000000 		.4byte	.LFE559
 11586 0178 00000000 		.4byte	.LFB560
 11587 017c 20000000 		.4byte	.LFE560
 11588 0180 00000000 		.4byte	.LFB561
 11589 0184 20000000 		.4byte	.LFE561
 11590 0188 00000000 		.4byte	.LFB562
 11591 018c 80000000 		.4byte	.LFE562
 11592 0190 00000000 		.4byte	.LFB563
 11593 0194 A4000000 		.4byte	.LFE563
 11594 0198 00000000 		.4byte	.LFB564
 11595 019c C8000000 		.4byte	.LFE564
 11596 01a0 00000000 		.4byte	.LFB565
 11597 01a4 04010000 		.4byte	.LFE565
 11598 01a8 00000000 		.4byte	.LFB566
 11599 01ac B0000000 		.4byte	.LFE566
 11600 01b0 00000000 		.4byte	.LFB567
 11601 01b4 34000000 		.4byte	.LFE567
 11602 01b8 00000000 		.4byte	0
 11603 01bc 00000000 		.4byte	0
 11604              		.section	.debug_line,"",%progbits
 11605              	.Ldebug_line0:
 11606 0000 960D0000 		.section	.debug_str,"MS",%progbits,1
 11606      0200A304 
 11606      00000201 
 11606      FB0E0D00 
 11606      01010101 
 11607              	.LASF193:
 11608 0000 43595F42 		.ascii	"CY_BLE_DIS_SOFTWARE_REV\000"
 11608      4C455F44 
 11608      49535F53 
 11608      4F465457 
 11608      4152455F 
 11609              	.LASF410:
 11610 0018 764C6973 		.ascii	"vListInsert\000"
 11610      74496E73 
 11610      65727400 
 11611              	.LASF396:
 11612 0024 63795F62 		.ascii	"cy_ble_connState\000"
 11612      6C655F63 
 11612      6F6E6E53 
 11612      74617465 
 11612      00
 11613              	.LASF199:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 304


 11614 0035 43595F42 		.ascii	"CY_BLE_HTS_TEMP_TYPE\000"
 11614      4C455F48 
 11614      54535F54 
 11614      454D505F 
 11614      54595045 
 11615              	.LASF231:
 11616 004a 75784E75 		.ascii	"uxNumberOfItems\000"
 11616      6D626572 
 11616      4F664974 
 11616      656D7300 
 11617              	.LASF166:
 11618 005a 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 11618      4C455F45 
 11618      56545F4C 
 11618      32434150 
 11618      5F434246 
 11619              	.LASF24:
 11620 007a 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 11620      625F7363 
 11620      625F7370 
 11620      695F6861 
 11620      6E646C65 
 11621              	.LASF144:
 11622 0098 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 11622      4C455F45 
 11622      56545F47 
 11622      41545443 
 11622      5F524541 
 11623              	.LASF114:
 11624 00b7 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 11624      4C455F45 
 11624      56545F47 
 11624      4150505F 
 11624      41445645 
 11625              	.LASF208:
 11626 00e0 43595F42 		.ascii	"CY_BLE_SRVI_COUNT\000"
 11626      4C455F53 
 11626      5256495F 
 11626      434F554E 
 11626      5400
 11627              	.LASF197:
 11628 00f2 43595F42 		.ascii	"CY_BLE_DIS_CHAR_COUNT\000"
 11628      4C455F44 
 11628      49535F43 
 11628      4841525F 
 11628      434F554E 
 11629              	.LASF168:
 11630 0108 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 11630      4C455F45 
 11630      56545F4C 
 11630      32434150 
 11630      5F434246 
 11631              	.LASF61:
 11632 012c 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 11632      4C455F45 
 11632      56545F50 
 11632      454E4449 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 305


 11632      4E475F46 
 11633              	.LASF99:
 11634 014b 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 11634      4C455F45 
 11634      56545F41 
 11634      45535F43 
 11634      434D5F44 
 11635              	.LASF152:
 11636 016f 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 11636      4C455F45 
 11636      56545F47 
 11636      41545443 
 11636      5F48414E 
 11637              	.LASF397:
 11638 0191 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 11638      494E4B5F 
 11638      5350494D 
 11638      5F636F6E 
 11638      74657874 
 11639              	.LASF414:
 11640 01a6 78506F72 		.ascii	"xPortStartScheduler\000"
 11640      74537461 
 11640      72745363 
 11640      68656475 
 11640      6C657200 
 11641              	.LASF255:
 11642 01ba 75785072 		.ascii	"uxPriority\000"
 11642      696F7269 
 11642      747900
 11643              	.LASF329:
 11644 01c5 7078436F 		.ascii	"pxConstList\000"
 11644      6E73744C 
 11644      69737400 
 11645              	.LASF251:
 11646 01d1 74736B54 		.ascii	"tskTaskControlBlock\000"
 11646      61736B43 
 11646      6F6E7472 
 11646      6F6C426C 
 11646      6F636B00 
 11647              	.LASF93:
 11648 01e5 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 11648      4C455F45 
 11648      56545F53 
 11648      45545F54 
 11648      585F5057 
 11649              	.LASF314:
 11650 0204 75785065 		.ascii	"uxPendedCounts\000"
 11650      6E646564 
 11650      436F756E 
 11650      747300
 11651              	.LASF347:
 11652 0213 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 11652      6B536574 
 11652      54687265 
 11652      61644C6F 
 11652      63616C53 
 11653              	.LASF130:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 306


 11654 0235 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 11654      4C455F45 
 11654      56545F47 
 11654      41505F47 
 11654      454E5F53 
 11655              	.LASF361:
 11656 0265 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 11656      7473546F 
 11656      436C6561 
 11656      724F6E45 
 11656      78697400 
 11657              	.LASF42:
 11658 0279 73616D70 		.ascii	"sampleTime01\000"
 11658      6C655469 
 11658      6D653031 
 11658      00
 11659              	.LASF424:
 11660 0286 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 11660      736B4765 
 11660      744E756D 
 11660      6265724F 
 11660      66546173 
 11661              	.LASF354:
 11662 029d 78546173 		.ascii	"xTaskGetSchedulerState\000"
 11662      6B476574 
 11662      53636865 
 11662      64756C65 
 11662      72537461 
 11663              	.LASF370:
 11664 02b4 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 11664      67686572 
 11664      5072696F 
 11664      72697479 
 11664      5461736B 
 11665              	.LASF236:
 11666 02ce 654E6F41 		.ascii	"eNoAction\000"
 11666      6374696F 
 11666      6E00
 11667              	.LASF167:
 11668 02d8 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 11668      4C455F45 
 11668      56545F4C 
 11668      32434150 
 11668      5F434246 
 11669              	.LASF0:
 11670 02fc 756E7369 		.ascii	"unsigned int\000"
 11670      676E6564 
 11670      20696E74 
 11670      00
 11671              	.LASF333:
 11672 0309 70784576 		.ascii	"pxEventList\000"
 11672      656E744C 
 11672      69737400 
 11673              	.LASF385:
 11674 0315 78536368 		.ascii	"xSchedulerRunning\000"
 11674      6564756C 
 11674      65725275 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 307


 11674      6E6E696E 
 11674      6700
 11675              	.LASF395:
 11676 0327 63795F62 		.ascii	"cy_ble_connHandle\000"
 11676      6C655F63 
 11676      6F6E6E48 
 11676      616E646C 
 11676      6500
 11677              	.LASF232:
 11678 0339 7078496E 		.ascii	"pxIndex\000"
 11678      64657800 
 11679              	.LASF20:
 11680 0341 75696E74 		.ascii	"uint32_t\000"
 11680      33325F74 
 11680      00
 11681              	.LASF216:
 11682 034a 53746163 		.ascii	"StackType_t\000"
 11682      6B547970 
 11682      655F7400 
 11683              	.LASF38:
 11684 0356 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 11684      41525F52 
 11684      414E4745 
 11684      5F434F4E 
 11684      445F4F55 
 11685              	.LASF242:
 11686 0370 7854494D 		.ascii	"xTIME_OUT\000"
 11686      455F4F55 
 11686      5400
 11687              	.LASF249:
 11688 037a 756C5061 		.ascii	"ulParameters\000"
 11688      72616D65 
 11688      74657273 
 11688      00
 11689              	.LASF31:
 11690 0387 74784275 		.ascii	"txBufIdx\000"
 11690      66496478 
 11690      00
 11691              	.LASF195:
 11692 0390 43595F42 		.ascii	"CY_BLE_DIS_REG_CERT_DATA\000"
 11692      4C455F44 
 11692      49535F52 
 11692      45475F43 
 11692      4552545F 
 11693              	.LASF380:
 11694 03a9 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 11694      6C657465 
 11694      64546173 
 11694      6B735761 
 11694      6974696E 
 11695              	.LASF62:
 11696 03c6 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 11696      4C455F45 
 11696      56545F46 
 11696      4C415348 
 11696      5F434F52 
 11697              	.LASF10:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 308


 11698 03df 5F5F696E 		.ascii	"__int32_t\000"
 11698      7433325F 
 11698      7400
 11699              	.LASF190:
 11700 03e9 43595F42 		.ascii	"CY_BLE_DIS_SERIAL_NUMBER\000"
 11700      4C455F44 
 11700      49535F53 
 11700      45524941 
 11700      4C5F4E55 
 11701              	.LASF221:
 11702 0402 784C4953 		.ascii	"xLIST_ITEM\000"
 11702      545F4954 
 11702      454D00
 11703              	.LASF373:
 11704 040d 70785265 		.ascii	"pxReadyTasksLists\000"
 11704      61647954 
 11704      61736B73 
 11704      4C697374 
 11704      7300
 11705              	.LASF109:
 11706 041f 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 11706      4C455F45 
 11706      56545F47 
 11706      41505F41 
 11706      5554485F 
 11707              	.LASF209:
 11708 0437 6368616E 		.ascii	"channelBase\000"
 11708      6E656C42 
 11708      61736500 
 11709              	.LASF187:
 11710 0443 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 11710      6E5F626C 
 11710      655F636F 
 11710      6E6E5F73 
 11710      74617465 
 11711              	.LASF141:
 11712 045a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 11712      4C455F45 
 11712      56545F47 
 11712      41545443 
 11712      5F46494E 
 11713              	.LASF86:
 11714 0479 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 11714      4C455F45 
 11714      56545F53 
 11714      45545F50 
 11714      52495641 
 11715              	.LASF211:
 11716 049e 6877436F 		.ascii	"hwConfigStc\000"
 11716      6E666967 
 11716      53746300 
 11717              	.LASF111:
 11718 04aa 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 11718      4C455F45 
 11718      56545F47 
 11718      41505F50 
 11718      4153534B 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 309


 11719              	.LASF230:
 11720 04d1 784C4953 		.ascii	"xLIST\000"
 11720      5400
 11721              	.LASF368:
 11722 04d7 75634F72 		.ascii	"ucOriginalNotifyState\000"
 11722      6967696E 
 11722      616C4E6F 
 11722      74696679 
 11722      53746174 
 11723              	.LASF341:
 11724 04ed 76546173 		.ascii	"vTaskSetTimeOutState\000"
 11724      6B536574 
 11724      54696D65 
 11724      4F757453 
 11724      74617465 
 11725              	.LASF379:
 11726 0502 78546173 		.ascii	"xTasksWaitingTermination\000"
 11726      6B735761 
 11726      6974696E 
 11726      67546572 
 11726      6D696E61 
 11727              	.LASF309:
 11728 051b 78546173 		.ascii	"xTaskIncrementTick\000"
 11728      6B496E63 
 11728      72656D65 
 11728      6E745469 
 11728      636B00
 11729              	.LASF145:
 11730 052e 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 11730      4C455F45 
 11730      56545F47 
 11730      41545443 
 11730      5F524541 
 11731              	.LASF135:
 11732 054e 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 11732      4C455F45 
 11732      56545F47 
 11732      4154545F 
 11732      434F4E4E 
 11733              	.LASF174:
 11734 056a 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 11734      4C455F41 
 11734      44565F53 
 11734      54415445 
 11734      5F53544F 
 11735              	.LASF375:
 11736 0583 7844656C 		.ascii	"xDelayedTaskList2\000"
 11736      61796564 
 11736      5461736B 
 11736      4C697374 
 11736      3200
 11737              	.LASF49:
 11738 0595 73617449 		.ascii	"satIntrMask\000"
 11738      6E74724D 
 11738      61736B00 
 11739              	.LASF243:
 11740 05a1 784F7665 		.ascii	"xOverflowCount\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 310


 11740      72666C6F 
 11740      77436F75 
 11740      6E7400
 11741              	.LASF422:
 11742 05b0 76506F72 		.ascii	"vPortSetBASEPRI\000"
 11742      74536574 
 11742      42415345 
 11742      50524900 
 11743              	.LASF406:
 11744 05c0 76506F72 		.ascii	"vPortEnterCritical\000"
 11744      74456E74 
 11744      65724372 
 11744      69746963 
 11744      616C00
 11745              	.LASF253:
 11746 05d3 78537461 		.ascii	"xStateListItem\000"
 11746      74654C69 
 11746      73744974 
 11746      656D00
 11747              	.LASF84:
 11748 05e2 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 11748      4C455F45 
 11748      56545F53 
 11748      45545F50 
 11748      48595F43 
 11749              	.LASF157:
 11750 05fe 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 11750      4C455F45 
 11750      56545F47 
 11750      41545453 
 11750      5F524541 
 11751              	.LASF416:
 11752 0628 76417070 		.ascii	"vApplicationIdleHook\000"
 11752      6C696361 
 11752      74696F6E 
 11752      49646C65 
 11752      486F6F6B 
 11753              	.LASF418:
 11754 063d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11754      43313120 
 11754      352E342E 
 11754      31203230 
 11754      31363036 
 11755 0670 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 11755      20726576 
 11755      6973696F 
 11755      6E203233 
 11755      37373135 
 11756 06a3 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 11756      70202D6D 
 11756      6670753D 
 11756      66707634 
 11756      2D73702D 
 11757 06d6 65637469 		.ascii	"ections -ffat-lto-objects\000"
 11757      6F6E7320 
 11757      2D666661 
 11757      742D6C74 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 311


 11757      6F2D6F62 
 11758              	.LASF129:
 11759 06f0 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 11759      4C455F45 
 11759      56545F47 
 11759      41505F52 
 11759      45534F4C 
 11760              	.LASF35:
 11761 0717 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 11761      41525F52 
 11761      414E4745 
 11761      5F434F4E 
 11761      445F4245 
 11762              	.LASF180:
 11763 072f 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 11763      4C455F43 
 11763      4F4E4E5F 
 11763      53544154 
 11763      455F434C 
 11764              	.LASF299:
 11765 0760 78546173 		.ascii	"xTaskToResume\000"
 11765      6B546F52 
 11765      6573756D 
 11765      6500
 11766              	.LASF344:
 11767 076e 70785469 		.ascii	"pxTicksToWait\000"
 11767      636B7354 
 11767      6F576169 
 11767      7400
 11768              	.LASF138:
 11769 077c 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 11769      4C455F45 
 11769      56545F47 
 11769      41545443 
 11769      5F584348 
 11770              	.LASF154:
 11771 079b 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 11771      4C455F45 
 11771      56545F47 
 11771      41545453 
 11771      5F48414E 
 11772              	.LASF284:
 11773 07bd 78436F6E 		.ascii	"xConstTickCount\000"
 11773      73745469 
 11773      636B436F 
 11773      756E7400 
 11774              	.LASF413:
 11775 07cd 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 11775      65724372 
 11775      65617465 
 11775      54696D65 
 11775      72546173 
 11776              	.LASF143:
 11777 07e3 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 11777      4C455F45 
 11777      56545F47 
 11777      41545443 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 312


 11777      5F524541 
 11778              	.LASF261:
 11779 07fd 74736B54 		.ascii	"tskTCB\000"
 11779      434200
 11780              	.LASF369:
 11781 0804 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 11781      6B47656E 
 11781      65726963 
 11781      4E6F7469 
 11781      66794672 
 11782              	.LASF218:
 11783 081e 55426173 		.ascii	"UBaseType_t\000"
 11783      65547970 
 11783      655F7400 
 11784              	.LASF179:
 11785 082a 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 11785      4C455F43 
 11785      4F4E4E5F 
 11785      53544154 
 11785      455F4449 
 11786              	.LASF76:
 11787 0849 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 11787      4C455F45 
 11787      56545F53 
 11787      45545F52 
 11787      50415F45 
 11788              	.LASF297:
 11789 086c 78596965 		.ascii	"xYieldRequired\000"
 11789      6C645265 
 11789      71756972 
 11789      656400
 11790              	.LASF57:
 11791 087b 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 11791      4C455F45 
 11791      56545F53 
 11791      5441434B 
 11791      5F4F4E00 
 11792              	.LASF87:
 11793 088f 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 11793      4C455F45 
 11793      56545F4C 
 11793      4C5F434E 
 11793      54524C5F 
 11794              	.LASF263:
 11795 08b9 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 11795      6967696E 
 11795      616C4241 
 11795      53455052 
 11795      4900
 11796              	.LASF363:
 11797 08cb 78546173 		.ascii	"xTaskGenericNotify\000"
 11797      6B47656E 
 11797      65726963 
 11797      4E6F7469 
 11797      667900
 11798              	.LASF153:
 11799 08de 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 313


 11799      4C455F45 
 11799      56545F47 
 11799      41545443 
 11799      5F48414E 
 11800              	.LASF73:
 11801 0900 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 11801      4C455F45 
 11801      56545F47 
 11801      45545F50 
 11801      4545525F 
 11802              	.LASF338:
 11803 0921 7078556E 		.ascii	"pxUnblockedTCB\000"
 11803      626C6F63 
 11803      6B656454 
 11803      434200
 11804              	.LASF56:
 11805 0930 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 11805      4C455F45 
 11805      56545F49 
 11805      4E56414C 
 11805      494400
 11806              	.LASF285:
 11807 0943 75735374 		.ascii	"usStackDepth\000"
 11807      61636B44 
 11807      65707468 
 11807      00
 11808              	.LASF357:
 11809 0950 78436C65 		.ascii	"xClearCountOnExit\000"
 11809      6172436F 
 11809      756E744F 
 11809      6E457869 
 11809      7400
 11810              	.LASF59:
 11811 0962 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 11811      4C455F45 
 11811      56545F53 
 11811      5441434B 
 11811      5F425553 
 11812              	.LASF14:
 11813 097f 6C6F6E67 		.ascii	"long long unsigned int\000"
 11813      206C6F6E 
 11813      6720756E 
 11813      7369676E 
 11813      65642069 
 11814              	.LASF74:
 11815 0996 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 11815      4C455F45 
 11815      56545F47 
 11815      45545F4C 
 11815      4F43414C 
 11816              	.LASF210:
 11817 09b8 6E756D43 		.ascii	"numChannels\000"
 11817      68616E6E 
 11817      656C7300 
 11818              	.LASF239:
 11819 09c4 65536574 		.ascii	"eSetValueWithOverwrite\000"
 11819      56616C75 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 314


 11819      65576974 
 11819      684F7665 
 11819      72777269 
 11820              	.LASF155:
 11821 09db 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 11821      4C455F45 
 11821      56545F47 
 11821      41545453 
 11821      5F444154 
 11822              	.LASF71:
 11823 0a00 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 11823      4C455F45 
 11823      56545F47 
 11823      45545F44 
 11823      4154415F 
 11824              	.LASF306:
 11825 0a24 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 11825      6B476574 
 11825      5469636B 
 11825      436F756E 
 11825      7446726F 
 11826              	.LASF291:
 11827 0a3d 75785361 		.ascii	"uxSavedInterruptState\000"
 11827      76656449 
 11827      6E746572 
 11827      72757074 
 11827      53746174 
 11828              	.LASF360:
 11829 0a53 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 11829      7473546F 
 11829      436C6561 
 11829      724F6E45 
 11829      6E747279 
 11830              	.LASF178:
 11831 0a68 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 11831      6E5F626C 
 11831      655F6164 
 11831      765F7374 
 11831      6174655F 
 11832              	.LASF91:
 11833 0a7e 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 11833      4C455F45 
 11833      56545F47 
 11833      45545F52 
 11833      5353495F 
 11834              	.LASF378:
 11835 0a9b 7850656E 		.ascii	"xPendingReadyList\000"
 11835      64696E67 
 11835      52656164 
 11835      794C6973 
 11835      7400
 11836              	.LASF300:
 11837 0aad 78546173 		.ascii	"xTaskResumeFromISR\000"
 11837      6B526573 
 11837      756D6546 
 11837      726F6D49 
 11837      535200
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 315


 11838              	.LASF44:
 11839 0ac0 72616E67 		.ascii	"rangeThres\000"
 11839      65546872 
 11839      657300
 11840              	.LASF175:
 11841 0acb 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 11841      4C455F41 
 11841      44565F53 
 11841      54415445 
 11841      5F414456 
 11842              	.LASF8:
 11843 0aea 5F5F7569 		.ascii	"__uint16_t\000"
 11843      6E743136 
 11843      5F7400
 11844              	.LASF351:
 11845 0af5 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 11845      736B4765 
 11845      74546872 
 11845      6561644C 
 11845      6F63616C 
 11846              	.LASF352:
 11847 0b18 70765265 		.ascii	"pvReturn\000"
 11847      7475726E 
 11847      00
 11848              	.LASF311:
 11849 0b21 70785465 		.ascii	"pxTemp\000"
 11849      6D7000
 11850              	.LASF117:
 11851 0b28 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 11851      4C455F45 
 11851      56545F47 
 11851      41505F45 
 11851      4E435259 
 11852              	.LASF89:
 11853 0b46 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 11853      4C455F45 
 11853      56545F53 
 11853      45545F44 
 11853      45564943 
 11854              	.LASF55:
 11855 0b6a 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 11855      74635F73 
 11855      61725F63 
 11855      6F6E6669 
 11855      675F7400 
 11856              	.LASF172:
 11857 0b7e 61747449 		.ascii	"attId\000"
 11857      6400
 11858              	.LASF40:
 11859 0b84 6374726C 		.ascii	"ctrl\000"
 11859      00
 11860              	.LASF345:
 11861 0b89 76546173 		.ascii	"vTaskSuspendAll\000"
 11861      6B537573 
 11861      70656E64 
 11861      416C6C00 
 11862              	.LASF183:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 316


 11863 0b99 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 11863      4C455F43 
 11863      4F4E4E5F 
 11863      53544154 
 11863      455F434C 
 11864              	.LASF123:
 11865 0bc3 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 11865      4C455F45 
 11865      56545F47 
 11865      41505F4F 
 11865      4F425F47 
 11866              	.LASF258:
 11867 0bed 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 11867      72656164 
 11867      4C6F6361 
 11867      6C53746F 
 11867      72616765 
 11868              	.LASF245:
 11869 0c0a 54696D65 		.ascii	"TimeOut_t\000"
 11869      4F75745F 
 11869      7400
 11870              	.LASF36:
 11871 0c14 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 11871      41525F52 
 11871      414E4745 
 11871      5F434F4E 
 11871      445F494E 
 11872              	.LASF26:
 11873 0c2d 72784275 		.ascii	"rxBuf\000"
 11873      6600
 11874              	.LASF115:
 11875 0c33 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 11875      4C455F45 
 11875      56545F47 
 11875      41505F44 
 11875      45564943 
 11876              	.LASF88:
 11877 0c53 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 11877      4C455F45 
 11877      56545F53 
 11877      4F46545F 
 11877      52455345 
 11878              	.LASF196:
 11879 0c72 43595F42 		.ascii	"CY_BLE_DIS_PNP_ID\000"
 11879      4C455F44 
 11879      49535F50 
 11879      4E505F49 
 11879      4400
 11880              	.LASF241:
 11881 0c84 654E6F74 		.ascii	"eNotifyAction\000"
 11881      69667941 
 11881      6374696F 
 11881      6E00
 11882              	.LASF149:
 11883 0c92 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 11883      4C455F45 
 11883      56545F47 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 317


 11883      41545453 
 11883      5F505245 
 11884              	.LASF4:
 11885 0cb2 73697A65 		.ascii	"size_t\000"
 11885      5F7400
 11886              	.LASF43:
 11887 0cb9 73616D70 		.ascii	"sampleTime23\000"
 11887      6C655469 
 11887      6D653233 
 11887      00
 11888              	.LASF32:
 11889 0cc6 63624576 		.ascii	"cbEvents\000"
 11889      656E7473 
 11889      00
 11890              	.LASF238:
 11891 0ccf 65496E63 		.ascii	"eIncrement\000"
 11891      72656D65 
 11891      6E7400
 11892              	.LASF22:
 11893 0cda 646F7562 		.ascii	"double\000"
 11893      6C6500
 11894              	.LASF228:
 11895 0ce1 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 11895      495F4C49 
 11895      53545F49 
 11895      54454D00 
 11896              	.LASF336:
 11897 0cf1 78576169 		.ascii	"xWaitIndefinitely\000"
 11897      74496E64 
 11897      6566696E 
 11897      6974656C 
 11897      7900
 11898              	.LASF121:
 11899 0d03 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 11899      4C455F45 
 11899      56545F47 
 11899      41505F4E 
 11899      554D4552 
 11900              	.LASF170:
 11901 0d2d 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 11901      4C455F45 
 11901      56545F4D 
 11901      415800
 11902              	.LASF383:
 11903 0d3c 78546963 		.ascii	"xTickCount\000"
 11903      6B436F75 
 11903      6E7400
 11904              	.LASF142:
 11905 0d47 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 11905      4C455F45 
 11905      56545F47 
 11905      41545443 
 11905      5F46494E 
 11906              	.LASF165:
 11907 0d6f 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 11907      4C455F45 
 11907      56545F4C 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 318


 11907      32434150 
 11907      5F434246 
 11908              	.LASF303:
 11909 0d91 76546173 		.ascii	"vTaskEndScheduler\000"
 11909      6B456E64 
 11909      53636865 
 11909      64756C65 
 11909      7200
 11910              	.LASF288:
 11911 0da3 75785461 		.ascii	"uxTaskPriorityGet\000"
 11911      736B5072 
 11911      696F7269 
 11911      74794765 
 11911      7400
 11912              	.LASF96:
 11913 0db5 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 11913      4C455F45 
 11913      56545F52 
 11913      414E444F 
 11913      4D5F4E55 
 11914              	.LASF176:
 11915 0dd8 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 11915      4C455F41 
 11915      44565F53 
 11915      54415445 
 11915      5F414456 
 11916              	.LASF407:
 11917 0df5 764C6973 		.ascii	"vListInsertEnd\000"
 11917      74496E73 
 11917      65727445 
 11917      6E6400
 11918              	.LASF126:
 11919 0e04 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 11919      4C455F45 
 11919      56545F47 
 11919      41505F53 
 11919      4D505F4E 
 11920              	.LASF381:
 11921 0e2c 78537573 		.ascii	"xSuspendedTaskList\000"
 11921      70656E64 
 11921      65645461 
 11921      736B4C69 
 11921      737400
 11922              	.LASF69:
 11923 0e3f 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 11923      4C455F45 
 11923      56545F53 
 11923      45545F44 
 11923      4154415F 
 11924              	.LASF272:
 11925 0e63 70634E61 		.ascii	"pcName\000"
 11925      6D6500
 11926              	.LASF147:
 11927 0e6a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 11927      4C455F45 
 11927      56545F47 
 11927      41545443 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 319


 11927      5F575249 
 11928              	.LASF348:
 11929 0e85 78546173 		.ascii	"xTaskToSet\000"
 11929      6B546F53 
 11929      657400
 11930              	.LASF377:
 11931 0e90 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 11931      6572666C 
 11931      6F774465 
 11931      6C617965 
 11931      64546173 
 11932              	.LASF186:
 11933 0eaa 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 11933      4C455F43 
 11933      4F4E4E5F 
 11933      53544154 
 11933      455F434C 
 11934              	.LASF332:
 11935 0ece 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 11935      6B506C61 
 11935      63654F6E 
 11935      4576656E 
 11935      744C6973 
 11936              	.LASF319:
 11937 0ee4 76546173 		.ascii	"vTaskDelay\000"
 11937      6B44656C 
 11937      617900
 11938              	.LASF161:
 11939 0eef 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 11939      4C455F45 
 11939      56545F4C 
 11939      32434150 
 11939      5F434F4D 
 11940              	.LASF66:
 11941 0f0c 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 11941      4C455F45 
 11941      56545F47 
 11941      45545F43 
 11941      48414E4E 
 11942              	.LASF202:
 11943 0f30 43595F42 		.ascii	"CY_BLE_HTS_CHAR_COUNT\000"
 11943      4C455F48 
 11943      54535F43 
 11943      4841525F 
 11943      434F554E 
 11944              	.LASF268:
 11945 0f46 70727644 		.ascii	"prvDeleteTCB\000"
 11945      656C6574 
 11945      65544342 
 11945      00
 11946              	.LASF60:
 11947 0f53 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 11947      4C455F45 
 11947      56545F4D 
 11947      454D4F52 
 11947      595F5245 
 11948              	.LASF54:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 320


 11949 0f6d 76726566 		.ascii	"vrefMvValue\000"
 11949      4D765661 
 11949      6C756500 
 11950              	.LASF259:
 11951 0f79 756C4E6F 		.ascii	"ulNotifiedValue\000"
 11951      74696669 
 11951      65645661 
 11951      6C756500 
 11952              	.LASF107:
 11953 0f89 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 11953      4C455F45 
 11953      56545F53 
 11953      45545F43 
 11953      4F4E4E5F 
 11954              	.LASF177:
 11955 0faf 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 11955      4C455F41 
 11955      44565F53 
 11955      54415445 
 11955      5F53544F 
 11956              	.LASF206:
 11957 0fcf 43595F42 		.ascii	"CY_BLE_SRVI_GAP\000"
 11957      4C455F53 
 11957      5256495F 
 11957      47415000 
 11958              	.LASF184:
 11959 0fdf 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 11959      4C455F43 
 11959      4F4E4E5F 
 11959      53544154 
 11959      455F434C 
 11960              	.LASF37:
 11961 1009 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 11961      41525F52 
 11961      414E4745 
 11961      5F434F4E 
 11961      445F4142 
 11962              	.LASF337:
 11963 1021 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 11963      6B52656D 
 11963      6F766546 
 11963      726F6D45 
 11963      76656E74 
 11964              	.LASF16:
 11965 103a 63686172 		.ascii	"char\000"
 11965      00
 11966              	.LASF98:
 11967 103f 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 11967      4C455F45 
 11967      56545F41 
 11967      45535F43 
 11967      434D5F45 
 11968              	.LASF227:
 11969 1063 4C697374 		.ascii	"ListItem_t\000"
 11969      4974656D 
 11969      5F7400
 11970              	.LASF46:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 321


 11971 106e 6368616E 		.ascii	"chanEn\000"
 11971      456E00
 11972              	.LASF240:
 11973 1075 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 11973      56616C75 
 11973      65576974 
 11973      686F7574 
 11973      4F766572 
 11974              	.LASF359:
 11975 108f 78546173 		.ascii	"xTaskNotifyWait\000"
 11975      6B4E6F74 
 11975      69667957 
 11975      61697400 
 11976              	.LASF260:
 11977 109f 75634E6F 		.ascii	"ucNotifyState\000"
 11977      74696679 
 11977      53746174 
 11977      6500
 11978              	.LASF273:
 11979 10ad 756C5374 		.ascii	"ulStackDepth\000"
 11979      61636B44 
 11979      65707468 
 11979      00
 11980              	.LASF189:
 11981 10ba 43595F42 		.ascii	"CY_BLE_DIS_MODEL_NUMBER\000"
 11981      4C455F44 
 11981      49535F4D 
 11981      4F44454C 
 11981      5F4E554D 
 11982              	.LASF318:
 11983 10d2 7853686F 		.ascii	"xShouldDelay\000"
 11983      756C6444 
 11983      656C6179 
 11983      00
 11984              	.LASF119:
 11985 10df 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 11985      4C455F45 
 11985      56545F47 
 11985      4150435F 
 11985      5343414E 
 11986              	.LASF324:
 11987 10ff 70727649 		.ascii	"prvIdleTask\000"
 11987      646C6554 
 11987      61736B00 
 11988              	.LASF140:
 11989 110b 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 11989      4C455F45 
 11989      56545F47 
 11989      41545443 
 11989      5F524541 
 11990              	.LASF233:
 11991 112d 784C6973 		.ascii	"xListEnd\000"
 11991      74456E64 
 11991      00
 11992              	.LASF322:
 11993 1136 784C6973 		.ascii	"xListIsEmpty\000"
 11993      74497345 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 322


 11993      6D707479 
 11993      00
 11994              	.LASF77:
 11995 1143 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 11995      4C455F45 
 11995      56545F53 
 11995      45545F48 
 11995      4F53545F 
 11996              	.LASF67:
 11997 1168 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 11997      4C455F45 
 11997      56545F4C 
 11997      455F5345 
 11997      545F4556 
 11998              	.LASF28:
 11999 118e 72784275 		.ascii	"rxBufIdx\000"
 11999      66496478 
 11999      00
 12000              	.LASF229:
 12001 1197 4D696E69 		.ascii	"MiniListItem_t\000"
 12001      4C697374 
 12001      4974656D 
 12001      5F7400
 12002              	.LASF419:
 12003 11a6 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0"
 12003      72617465 
 12003      645F536F 
 12003      75726365 
 12003      5C50536F 
 12004 11d4 5C536F75 		.ascii	"\\Source\\tasks.c\000"
 12004      7263655C 
 12004      7461736B 
 12004      732E6300 
 12005              	.LASF335:
 12006 11e4 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 12006      6B506C61 
 12006      63654F6E 
 12006      4576656E 
 12006      744C6973 
 12007              	.LASF219:
 12008 1204 5469636B 		.ascii	"TickType_t\000"
 12008      54797065 
 12008      5F7400
 12009              	.LASF33:
 12010 120f 696E6974 		.ascii	"initKey\000"
 12010      4B657900 
 12011              	.LASF279:
 12012 1217 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 12012      64644E65 
 12012      77546173 
 12012      6B546F52 
 12012      65616479 
 12013              	.LASF17:
 12014 1230 75696E74 		.ascii	"uint8_t\000"
 12014      385F7400 
 12015              	.LASF25:
 12016 1238 73746174 		.ascii	"status\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 323


 12016      757300
 12017              	.LASF100:
 12018 123f 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 12018      4C455F45 
 12018      56545F53 
 12018      45545F53 
 12018      4C415645 
 12019              	.LASF276:
 12020 126a 70784E65 		.ascii	"pxNewTCB\000"
 12020      77544342 
 12020      00
 12021              	.LASF124:
 12022 1273 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 12022      4C455F45 
 12022      56545F47 
 12022      41505F45 
 12022      4E48414E 
 12023              	.LASF271:
 12024 1298 70785461 		.ascii	"pxTaskCode\000"
 12024      736B436F 
 12024      646500
 12025              	.LASF112:
 12026 12a3 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 12026      4C455F45 
 12026      56545F47 
 12026      41505F41 
 12026      5554485F 
 12027              	.LASF83:
 12028 12c0 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
 12028      4C455F45 
 12028      56545F53 
 12028      45545F44 
 12028      45464155 
 12029              	.LASF52:
 12030 12e4 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 12030      77697463 
 12030      68537143 
 12030      74726C00 
 12031              	.LASF394:
 12032 12f4 63795F62 		.ascii	"cy_ble_advState\000"
 12032      6C655F61 
 12032      64765374 
 12032      61746500 
 12033              	.LASF250:
 12034 1304 4D656D6F 		.ascii	"MemoryRegion_t\000"
 12034      72795265 
 12034      67696F6E 
 12034      5F7400
 12035              	.LASF390:
 12036 1313 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 12036      74546173 
 12036      6B556E62 
 12036      6C6F636B 
 12036      54696D65 
 12037              	.LASF421:
 12038 1328 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 12038      72745261 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 324


 12038      69736542 
 12038      41534550 
 12038      524900
 12039              	.LASF45:
 12040 133b 72616E67 		.ascii	"rangeCond\000"
 12040      65436F6E 
 12040      6400
 12041              	.LASF404:
 12042 1345 7078506F 		.ascii	"pxPortInitialiseStack\000"
 12042      7274496E 
 12042      69746961 
 12042      6C697365 
 12042      53746163 
 12043              	.LASF106:
 12044 135b 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 12044      4C455F45 
 12044      56545F53 
 12044      45545F43 
 12044      455F4C45 
 12045              	.LASF105:
 12046 137d 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 12046      4C455F45 
 12046      56545F53 
 12046      45545F45 
 12046      56454E54 
 12047              	.LASF1:
 12048 13a0 6C6F6E67 		.ascii	"long long int\000"
 12048      206C6F6E 
 12048      6720696E 
 12048      7400
 12049              	.LASF163:
 12050 13ae 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 12050      4C455F45 
 12050      56545F4C 
 12050      32434150 
 12050      5F434246 
 12051              	.LASF289:
 12052 13cd 75785265 		.ascii	"uxReturn\000"
 12052      7475726E 
 12052      00
 12053              	.LASF198:
 12054 13d6 43595F42 		.ascii	"CY_BLE_HTS_TEMP_MEASURE\000"
 12054      4C455F48 
 12054      54535F54 
 12054      454D505F 
 12054      4D454153 
 12055              	.LASF132:
 12056 13ee 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 12056      4C455F45 
 12056      56545F47 
 12056      41505F43 
 12056      4F4E4E5F 
 12057              	.LASF79:
 12058 1407 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 12058      4C455F45 
 12058      56545F52 
 12058      454D4F56 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 325


 12058      455F4445 
 12059              	.LASF264:
 12060 1437 756C4E65 		.ascii	"ulNewBASEPRI\000"
 12060      77424153 
 12060      45505249 
 12060      00
 12061              	.LASF68:
 12062 1444 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 12062      4C455F45 
 12062      56545F4C 
 12062      455F5049 
 12062      4E475F41 
 12063              	.LASF248:
 12064 1464 756C4C65 		.ascii	"ulLengthInBytes\000"
 12064      6E677468 
 12064      496E4279 
 12064      74657300 
 12065              	.LASF217:
 12066 1474 42617365 		.ascii	"BaseType_t\000"
 12066      54797065 
 12066      5F7400
 12067              	.LASF327:
 12068 147f 756C4368 		.ascii	"ulCheckValue\000"
 12068      65636B56 
 12068      616C7565 
 12068      00
 12069              	.LASF420:
 12070 148c 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 12070      73657273 
 12070      5C636F64 
 12070      79675C67 
 12070      69745C70 
 12071 14ba 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\CE218138_BLE_Thermometer_RTOS01.c"
 12071      54435F49 
 12071      4D552E63 
 12071      7964736E 
 12071      5C434532 
 12072 14ec 7964736E 		.ascii	"ydsn\000"
 12072      00
 12073              	.LASF267:
 12074 14f1 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 12074      65736574 
 12074      4E657874 
 12074      5461736B 
 12074      556E626C 
 12075              	.LASF244:
 12076 150d 7854696D 		.ascii	"xTimeOnEntering\000"
 12076      654F6E45 
 12076      6E746572 
 12076      696E6700 
 12077              	.LASF294:
 12078 151d 75784E65 		.ascii	"uxNewPriority\000"
 12078      77507269 
 12078      6F726974 
 12078      7900
 12079              	.LASF95:
 12080 152b 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 326


 12080      4C455F45 
 12080      56545F53 
 12080      45545F43 
 12080      4C4B5F43 
 12081              	.LASF215:
 12082 154e 5461736B 		.ascii	"TaskFunction_t\000"
 12082      46756E63 
 12082      74696F6E 
 12082      5F7400
 12083              	.LASF223:
 12084 155d 70784E65 		.ascii	"pxNext\000"
 12084      787400
 12085              	.LASF367:
 12086 1564 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 12086      72657669 
 12086      6F75734E 
 12086      6F746966 
 12086      69636174 
 12087              	.LASF188:
 12088 1581 43595F42 		.ascii	"CY_BLE_DIS_MANUFACTURER_NAME\000"
 12088      4C455F44 
 12088      49535F4D 
 12088      414E5546 
 12088      41435455 
 12089              	.LASF402:
 12090 159e 6D656D73 		.ascii	"memset\000"
 12090      657400
 12091              	.LASF342:
 12092 15a5 70785469 		.ascii	"pxTimeOut\000"
 12092      6D654F75 
 12092      7400
 12093              	.LASF290:
 12094 15af 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 12094      736B5072 
 12094      696F7269 
 12094      74794765 
 12094      7446726F 
 12095              	.LASF34:
 12096 15c8 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 12096      74635F73 
 12096      63625F73 
 12096      70695F63 
 12096      6F6E7465 
 12097              	.LASF304:
 12098 15e1 78546173 		.ascii	"xTaskGetTickCount\000"
 12098      6B476574 
 12098      5469636B 
 12098      436F756E 
 12098      7400
 12099              	.LASF72:
 12100 15f3 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 12100      4C455F45 
 12100      56545F44 
 12100      4154415F 
 12100      4C454E47 
 12101              	.LASF47:
 12102 1611 6368616E 		.ascii	"chanConfig\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 327


 12102      436F6E66 
 12102      696700
 12103              	.LASF120:
 12104 161c 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 12104      4C455F45 
 12104      56545F47 
 12104      41505F4B 
 12104      4559494E 
 12105              	.LASF80:
 12106 1641 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 12106      4C455F45 
 12106      56545F41 
 12106      44445F44 
 12106      45564943 
 12107              	.LASF30:
 12108 166e 74784275 		.ascii	"txBufSize\000"
 12108      6653697A 
 12108      6500
 12109              	.LASF389:
 12110 1678 75785461 		.ascii	"uxTaskNumber\000"
 12110      736B4E75 
 12110      6D626572 
 12110      00
 12111              	.LASF169:
 12112 1685 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 12112      4C455F45 
 12112      56545F4C 
 12112      32434150 
 12112      5F434246 
 12113              	.LASF235:
 12114 16aa 5461736B 		.ascii	"TaskHandle_t\000"
 12114      48616E64 
 12114      6C655F74 
 12114      00
 12115              	.LASF366:
 12116 16b7 65416374 		.ascii	"eAction\000"
 12116      696F6E00 
 12117              	.LASF423:
 12118 16bf 756C4E65 		.ascii	"ulNewMaskValue\000"
 12118      774D6173 
 12118      6B56616C 
 12118      756500
 12119              	.LASF214:
 12120 16ce 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 12120      434F4E46 
 12120      49475F53 
 12120      54525543 
 12120      5400
 12121              	.LASF355:
 12122 16e0 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 12122      736B5265 
 12122      73657445 
 12122      76656E74 
 12122      4974656D 
 12123              	.LASF293:
 12124 16fa 76546173 		.ascii	"vTaskPrioritySet\000"
 12124      6B507269 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 328


 12124      6F726974 
 12124      79536574 
 12124      00
 12125              	.LASF82:
 12126 170b 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 12126      4C455F45 
 12126      56545F47 
 12126      45545F50 
 12126      48595F43 
 12127              	.LASF108:
 12128 1727 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 12128      4C455F45 
 12128      56545F47 
 12128      4150435F 
 12128      5343414E 
 12129              	.LASF162:
 12130 174c 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 12130      4C455F45 
 12130      56545F4C 
 12130      32434150 
 12130      5F434246 
 12131              	.LASF128:
 12132 176b 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 12132      4C455F45 
 12132      56545F47 
 12132      41505F4B 
 12132      4559535F 
 12133              	.LASF122:
 12134 178c 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 12134      4C455F45 
 12134      56545F47 
 12134      41505F4B 
 12134      45595052 
 12135              	.LASF234:
 12136 17b1 4C697374 		.ascii	"List_t\000"
 12136      5F7400
 12137              	.LASF185:
 12138 17b8 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 12138      4C455F43 
 12138      4F4E4E5F 
 12138      53544154 
 12138      455F434C 
 12139              	.LASF181:
 12140 17e3 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 12140      4C455F43 
 12140      4F4E4E5F 
 12140      53544154 
 12140      455F434F 
 12141              	.LASF201:
 12142 17ff 43595F42 		.ascii	"CY_BLE_HTS_MEASURE_INTERVAL\000"
 12142      4C455F48 
 12142      54535F4D 
 12142      45415355 
 12142      52455F49 
 12143              	.LASF29:
 12144 181b 74784275 		.ascii	"txBuf\000"
 12144      6600
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 329


 12145              	.LASF308:
 12146 1821 78546173 		.ascii	"xTaskToQuery\000"
 12146      6B546F51 
 12146      75657279 
 12146      00
 12147              	.LASF364:
 12148 182e 78546173 		.ascii	"xTaskToNotify\000"
 12148      6B546F4E 
 12148      6F746966 
 12148      7900
 12149              	.LASF269:
 12150 183c 78546173 		.ascii	"xTask\000"
 12150      6B00
 12151              	.LASF192:
 12152 1842 43595F42 		.ascii	"CY_BLE_DIS_FIRMWARE_REV\000"
 12152      4C455F44 
 12152      49535F46 
 12152      49524D57 
 12152      4152455F 
 12153              	.LASF237:
 12154 185a 65536574 		.ascii	"eSetBits\000"
 12154      42697473 
 12154      00
 12155              	.LASF2:
 12156 1863 6C6F6E67 		.ascii	"long double\000"
 12156      20646F75 
 12156      626C6500 
 12157              	.LASF65:
 12158 186f 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 12158      4C455F45 
 12158      56545F52 
 12158      4541445F 
 12158      41555448 
 12159              	.LASF246:
 12160 1898 784D454D 		.ascii	"xMEMORY_REGION\000"
 12160      4F52595F 
 12160      52454749 
 12160      4F4E00
 12161              	.LASF18:
 12162 18a7 75696E74 		.ascii	"uint16_t\000"
 12162      31365F74 
 12162      00
 12163              	.LASF292:
 12164 18b0 76546173 		.ascii	"vTaskDelete\000"
 12164      6B44656C 
 12164      65746500 
 12165              	.LASF75:
 12166 18bc 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 12166      4C455F45 
 12166      56545F53 
 12166      45545F52 
 12166      50415F54 
 12167              	.LASF325:
 12168 18db 76546173 		.ascii	"vTaskSwitchContext\000"
 12168      6B537769 
 12168      74636843 
 12168      6F6E7465 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 330


 12168      787400
 12169              	.LASF388:
 12170 18ee 784E756D 		.ascii	"xNumOfOverflows\000"
 12170      4F664F76 
 12170      6572666C 
 12170      6F777300 
 12171              	.LASF63:
 12172 18fe 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 12172      4C455F45 
 12172      56545F48 
 12172      41524457 
 12172      4152455F 
 12173              	.LASF23:
 12174 1918 5F426F6F 		.ascii	"_Bool\000"
 12174      6C00
 12175              	.LASF131:
 12176 191e 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 12176      4C455F45 
 12176      56545F47 
 12176      41505F43 
 12176      52454154 
 12177              	.LASF51:
 12178 1949 6D757853 		.ascii	"muxSwitch\000"
 12178      77697463 
 12178      6800
 12179              	.LASF400:
 12180 1953 70784375 		.ascii	"pxCurrentTCB\000"
 12180      7272656E 
 12180      74544342 
 12180      00
 12181              	.LASF6:
 12182 1960 756E7369 		.ascii	"unsigned char\000"
 12182      676E6564 
 12182      20636861 
 12182      7200
 12183              	.LASF134:
 12184 196e 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 12184      4C455F45 
 12184      56545F47 
 12184      41545443 
 12184      5F455252 
 12185              	.LASF139:
 12186 1989 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 12186      4C455F45 
 12186      56545F47 
 12186      41545443 
 12186      5F524541 
 12187              	.LASF78:
 12188 19b1 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 12188      4C455F45 
 12188      56545F41 
 12188      44445F44 
 12188      45564943 
 12189              	.LASF312:
 12190 19dc 78546173 		.ascii	"xTaskResumeAll\000"
 12190      6B526573 
 12190      756D6541 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 331


 12190      6C6C00
 12191              	.LASF146:
 12192 19eb 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 12192      4C455F45 
 12192      56545F47 
 12192      41545453 
 12192      5F575249 
 12193              	.LASF101:
 12194 1a06 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 12194      4C455F45 
 12194      56545F53 
 12194      5441434B 
 12194      5F534855 
 12195              	.LASF173:
 12196 1a29 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 12196      74635F62 
 12196      6C655F63 
 12196      6F6E6E5F 
 12196      68616E64 
 12197              	.LASF417:
 12198 1a42 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 12198      6C696361 
 12198      74696F6E 
 12198      53746163 
 12198      6B4F7665 
 12199              	.LASF133:
 12200 1a60 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 12200      4C455F45 
 12200      56545F47 
 12200      4150505F 
 12200      55504441 
 12201              	.LASF7:
 12202 1a8e 73686F72 		.ascii	"short int\000"
 12202      7420696E 
 12202      7400
 12203              	.LASF399:
 12204 1a98 4144435F 		.ascii	"ADC_allConfigs\000"
 12204      616C6C43 
 12204      6F6E6669 
 12204      677300
 12205              	.LASF403:
 12206 1aa7 764C6973 		.ascii	"vListInitialiseItem\000"
 12206      74496E69 
 12206      7469616C 
 12206      69736549 
 12206      74656D00 
 12207              	.LASF191:
 12208 1abb 43595F42 		.ascii	"CY_BLE_DIS_HARDWARE_REV\000"
 12208      4C455F44 
 12208      49535F48 
 12208      41524457 
 12208      4152455F 
 12209              	.LASF270:
 12210 1ad3 70727649 		.ascii	"prvInitialiseNewTask\000"
 12210      6E697469 
 12210      616C6973 
 12210      654E6577 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 332


 12210      5461736B 
 12211              	.LASF116:
 12212 1ae8 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 12212      4C455F45 
 12212      56545F47 
 12212      41505F44 
 12212      45564943 
 12213              	.LASF274:
 12214 1b0b 70765061 		.ascii	"pvParameters\000"
 12214      72616D65 
 12214      74657273 
 12214      00
 12215              	.LASF222:
 12216 1b18 78497465 		.ascii	"xItemValue\000"
 12216      6D56616C 
 12216      756500
 12217              	.LASF11:
 12218 1b23 6C6F6E67 		.ascii	"long int\000"
 12218      20696E74 
 12218      00
 12219              	.LASF393:
 12220 1b2c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12220      52784275 
 12220      66666572 
 12220      00
 12221              	.LASF104:
 12222 1b39 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 12222      4C455F45 
 12222      56545F41 
 12222      45535F43 
 12222      4D41435F 
 12223              	.LASF371:
 12224 1b5a 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 12224      6B4E6F74 
 12224      69667947 
 12224      69766546 
 12224      726F6D49 
 12225              	.LASF376:
 12226 1b71 70784465 		.ascii	"pxDelayedTaskList\000"
 12226      6C617965 
 12226      64546173 
 12226      6B4C6973 
 12226      7400
 12227              	.LASF226:
 12228 1b83 7076436F 		.ascii	"pvContainer\000"
 12228      6E746169 
 12228      6E657200 
 12229              	.LASF323:
 12230 1b8f 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 12230      61736B49 
 12230      73546173 
 12230      6B537573 
 12230      70656E64 
 12231              	.LASF310:
 12232 1ba6 78537769 		.ascii	"xSwitchRequired\000"
 12232      74636852 
 12232      65717569 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 333


 12232      72656400 
 12233              	.LASF127:
 12234 1bb6 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 12234      4C455F45 
 12234      56545F47 
 12234      41505F44 
 12234      45564943 
 12235              	.LASF256:
 12236 1bde 70785374 		.ascii	"pxStack\000"
 12236      61636B00 
 12237              	.LASF286:
 12238 1be6 78546173 		.ascii	"xTaskToDelete\000"
 12238      6B546F44 
 12238      656C6574 
 12238      6500
 12239              	.LASF356:
 12240 1bf4 756C5461 		.ascii	"ulTaskNotifyTake\000"
 12240      736B4E6F 
 12240      74696679 
 12240      54616B65 
 12240      00
 12241              	.LASF365:
 12242 1c05 756C5661 		.ascii	"ulValue\000"
 12242      6C756500 
 12243              	.LASF331:
 12244 1c0d 78546173 		.ascii	"xTaskToSuspend\000"
 12244      6B546F53 
 12244      75737065 
 12244      6E6400
 12245              	.LASF164:
 12246 1c1c 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 12246      4C455F45 
 12246      56545F4C 
 12246      32434150 
 12246      5F434246 
 12247              	.LASF343:
 12248 1c3e 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 12248      6B436865 
 12248      636B466F 
 12248      7254696D 
 12248      654F7574 
 12249              	.LASF415:
 12250 1c53 76506F72 		.ascii	"vPortEndScheduler\000"
 12250      74456E64 
 12250      53636865 
 12250      64756C65 
 12250      7200
 12251              	.LASF401:
 12252 1c65 76506F72 		.ascii	"vPortFree\000"
 12252      74467265 
 12252      6500
 12253              	.LASF150:
 12254 1c6f 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 12254      4C455F45 
 12254      56545F47 
 12254      41545453 
 12254      5F455845 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 334


 12255              	.LASF64:
 12256 1c8f 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 12256      4C455F45 
 12256      56545F57 
 12256      52495445 
 12256      5F415554 
 12257              	.LASF384:
 12258 1cb9 7578546F 		.ascii	"uxTopReadyPriority\000"
 12258      70526561 
 12258      64795072 
 12258      696F7269 
 12258      747900
 12259              	.LASF103:
 12260 1ccc 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 12260      4C455F45 
 12260      56545F52 
 12260      4144494F 
 12260      5F564F4C 
 12261              	.LASF316:
 12262 1ceb 70785072 		.ascii	"pxPreviousWakeTime\000"
 12262      6576696F 
 12262      75735761 
 12262      6B655469 
 12262      6D6500
 12263              	.LASF5:
 12264 1cfe 5F5F7569 		.ascii	"__uint8_t\000"
 12264      6E74385F 
 12264      7400
 12265              	.LASF194:
 12266 1d08 43595F42 		.ascii	"CY_BLE_DIS_SYSTEM_ID\000"
 12266      4C455F44 
 12266      49535F53 
 12266      59535445 
 12266      4D5F4944 
 12267              	.LASF349:
 12268 1d1d 78496E64 		.ascii	"xIndex\000"
 12268      657800
 12269              	.LASF391:
 12270 1d24 7849646C 		.ascii	"xIdleTaskHandle\000"
 12270      65546173 
 12270      6B48616E 
 12270      646C6500 
 12271              	.LASF374:
 12272 1d34 7844656C 		.ascii	"xDelayedTaskList1\000"
 12272      61796564 
 12272      5461736B 
 12272      4C697374 
 12272      3100
 12273              	.LASF70:
 12274 1d46 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 12274      4C455F45 
 12274      56545F53 
 12274      45545F53 
 12274      55474745 
 12275              	.LASF203:
 12276 1d74 43595F42 		.ascii	"CY_BLE_HTS_CCCD\000"
 12276      4C455F48 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 335


 12276      54535F43 
 12276      43434400 
 12277              	.LASF90:
 12278 1d84 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 12278      4C455F45 
 12278      56545F47 
 12278      45545F44 
 12278      45564943 
 12279              	.LASF97:
 12280 1da8 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 12280      4C455F45 
 12280      56545F41 
 12280      45535F45 
 12280      4E435259 
 12281              	.LASF92:
 12282 1dc8 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 12282      4C455F45 
 12282      56545F47 
 12282      45545F54 
 12282      585F5057 
 12283              	.LASF220:
 12284 1de7 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 12284      74635F73 
 12284      63625F73 
 12284      70695F63 
 12284      6F6E7465 
 12285              	.LASF362:
 12286 1dfe 70756C4E 		.ascii	"pulNotificationValue\000"
 12286      6F746966 
 12286      69636174 
 12286      696F6E56 
 12286      616C7565 
 12287              	.LASF204:
 12288 1e13 43595F42 		.ascii	"CY_BLE_HTS_VRD\000"
 12288      4C455F48 
 12288      54535F56 
 12288      524400
 12289              	.LASF265:
 12290 1e22 78526574 		.ascii	"xReturn\000"
 12290      75726E00 
 12291              	.LASF58:
 12292 1e2a 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 12292      4C455F45 
 12292      56545F54 
 12292      494D454F 
 12292      555400
 12293              	.LASF207:
 12294 1e3d 43595F42 		.ascii	"CY_BLE_SRVI_GATT\000"
 12294      4C455F53 
 12294      5256495F 
 12294      47415454 
 12294      00
 12295              	.LASF15:
 12296 1e4e 73697A65 		.ascii	"sizetype\000"
 12296      74797065 
 12296      00
 12297              	.LASF346:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 336


 12298 1e57 76546173 		.ascii	"vTaskMissedYield\000"
 12298      6B4D6973 
 12298      73656459 
 12298      69656C64 
 12298      00
 12299              	.LASF386:
 12300 1e68 75785065 		.ascii	"uxPendedTicks\000"
 12300      6E646564 
 12300      5469636B 
 12300      7300
 12301              	.LASF13:
 12302 1e76 6C6F6E67 		.ascii	"long unsigned int\000"
 12302      20756E73 
 12302      69676E65 
 12302      6420696E 
 12302      7400
 12303              	.LASF409:
 12304 1e88 75784C69 		.ascii	"uxListRemove\000"
 12304      73745265 
 12304      6D6F7665 
 12304      00
 12305              	.LASF21:
 12306 1e95 666C6F61 		.ascii	"float\000"
 12306      7400
 12307              	.LASF307:
 12308 1e9b 70635461 		.ascii	"pcTaskGetName\000"
 12308      736B4765 
 12308      744E616D 
 12308      6500
 12309              	.LASF19:
 12310 1ea9 696E7433 		.ascii	"int32_t\000"
 12310      325F7400 
 12311              	.LASF102:
 12312 1eb1 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 12312      4C455F45 
 12312      56545F52 
 12312      4144494F 
 12312      5F54454D 
 12313              	.LASF305:
 12314 1ece 78546963 		.ascii	"xTicks\000"
 12314      6B7300
 12315              	.LASF302:
 12316 1ed5 76546173 		.ascii	"vTaskStartScheduler\000"
 12316      6B537461 
 12316      72745363 
 12316      68656475 
 12316      6C657200 
 12317              	.LASF282:
 12318 1ee9 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 12318      426C6F63 
 12318      6B496E64 
 12318      6566696E 
 12318      6974656C 
 12319              	.LASF326:
 12320 1eff 70756C53 		.ascii	"pulStack\000"
 12320      7461636B 
 12320      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 337


 12321              	.LASF41:
 12322 1f08 73616D70 		.ascii	"sampleCtrl\000"
 12322      6C654374 
 12322      726C00
 12323              	.LASF247:
 12324 1f13 70764261 		.ascii	"pvBaseAddress\000"
 12324      73654164 
 12324      64726573 
 12324      7300
 12325              	.LASF320:
 12326 1f21 78546963 		.ascii	"xTicksToDelay\000"
 12326      6B73546F 
 12326      44656C61 
 12326      7900
 12327              	.LASF257:
 12328 1f2f 70635461 		.ascii	"pcTaskName\000"
 12328      736B4E61 
 12328      6D6500
 12329              	.LASF334:
 12330 1f3a 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 12330      6B506C61 
 12330      63654F6E 
 12330      556E6F72 
 12330      64657265 
 12331              	.LASF339:
 12332 1f59 78546173 		.ascii	"xTaskRemoveFromUnorderedEventList\000"
 12332      6B52656D 
 12332      6F766546 
 12332      726F6D55 
 12332      6E6F7264 
 12333              	.LASF12:
 12334 1f7b 5F5F7569 		.ascii	"__uint32_t\000"
 12334      6E743332 
 12334      5F7400
 12335              	.LASF205:
 12336 1f86 43595F42 		.ascii	"CY_BLE_HTS_DESCR_COUNT\000"
 12336      4C455F48 
 12336      54535F44 
 12336      45534352 
 12336      5F434F55 
 12337              	.LASF405:
 12338 1f9d 764C6973 		.ascii	"vListInitialise\000"
 12338      74496E69 
 12338      7469616C 
 12338      69736500 
 12339              	.LASF412:
 12340 1fad 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 12340      7456616C 
 12340      69646174 
 12340      65496E74 
 12340      65727275 
 12341              	.LASF158:
 12342 1fcc 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 12342      4C455F45 
 12342      56545F47 
 12342      41545443 
 12342      5F4C4F4E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 338


 12343              	.LASF328:
 12344 1ff0 7578546F 		.ascii	"uxTopPriority\000"
 12344      70507269 
 12344      6F726974 
 12344      7900
 12345              	.LASF81:
 12346 1ffe 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 12346      4C455F45 
 12346      56545F52 
 12346      454D4F56 
 12346      455F4445 
 12347              	.LASF315:
 12348 2030 76546173 		.ascii	"vTaskDelayUntil\000"
 12348      6B44656C 
 12348      6179556E 
 12348      74696C00 
 12349              	.LASF200:
 12350 2040 43595F42 		.ascii	"CY_BLE_HTS_INTERM_TEMP\000"
 12350      4C455F48 
 12350      54535F49 
 12350      4E544552 
 12350      4D5F5445 
 12351              	.LASF125:
 12352 2057 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 12352      4C455F45 
 12352      56545F47 
 12352      4150435F 
 12352      44495245 
 12353              	.LASF254:
 12354 2079 78457665 		.ascii	"xEventListItem\000"
 12354      6E744C69 
 12354      73744974 
 12354      656D00
 12355              	.LASF160:
 12356 2088 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 12356      4C455F45 
 12356      56545F4C 
 12356      32434150 
 12356      5F434F4E 
 12357              	.LASF296:
 12358 20af 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 12358      696F7269 
 12358      74795573 
 12358      65644F6E 
 12358      456E7472 
 12359              	.LASF262:
 12360 20c5 5443425F 		.ascii	"TCB_t\000"
 12360      7400
 12361              	.LASF281:
 12362 20cb 78546963 		.ascii	"xTicksToWait\000"
 12362      6B73546F 
 12362      57616974 
 12362      00
 12363              	.LASF225:
 12364 20d8 70764F77 		.ascii	"pvOwner\000"
 12364      6E657200 
 12365              	.LASF213:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 339


 12366 20e0 636C6B44 		.ascii	"clkDivider\000"
 12366      69766964 
 12366      657200
 12367              	.LASF330:
 12368 20eb 76546173 		.ascii	"vTaskSuspend\000"
 12368      6B537573 
 12368      70656E64 
 12368      00
 12369              	.LASF313:
 12370 20f8 78416C72 		.ascii	"xAlreadyYielded\000"
 12370      65616479 
 12370      5969656C 
 12370      64656400 
 12371              	.LASF353:
 12372 2108 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 12372      6B476574 
 12372      43757272 
 12372      656E7454 
 12372      61736B48 
 12373              	.LASF287:
 12374 2122 78546173 		.ascii	"xTaskCreate\000"
 12374      6B437265 
 12374      61746500 
 12375              	.LASF136:
 12376 212e 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 12376      4C455F45 
 12376      56545F47 
 12376      4154545F 
 12376      44495343 
 12377              	.LASF398:
 12378 214d 4144435F 		.ascii	"ADC_currentConfig\000"
 12378      63757272 
 12378      656E7443 
 12378      6F6E6669 
 12378      6700
 12379              	.LASF151:
 12380 215f 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 12380      4C455F45 
 12380      56545F47 
 12380      41545443 
 12380      5F455845 
 12381              	.LASF295:
 12382 217f 75784375 		.ascii	"uxCurrentBasePriority\000"
 12382      7272656E 
 12382      74426173 
 12382      65507269 
 12382      6F726974 
 12383              	.LASF277:
 12384 2195 78526567 		.ascii	"xRegions\000"
 12384      696F6E73 
 12384      00
 12385              	.LASF137:
 12386 219e 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 12386      4C455F45 
 12386      56545F47 
 12386      41545453 
 12386      5F58434E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 340


 12387              	.LASF156:
 12388 21bd 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 12388      4C455F45 
 12388      56545F47 
 12388      41545443 
 12388      5F53544F 
 12389              	.LASF110:
 12390 21e0 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 12390      4C455F45 
 12390      56545F47 
 12390      41505F50 
 12390      4153534B 
 12391              	.LASF171:
 12392 2205 62644861 		.ascii	"bdHandle\000"
 12392      6E646C65 
 12392      00
 12393              	.LASF224:
 12394 220e 70785072 		.ascii	"pxPrevious\000"
 12394      6576696F 
 12394      757300
 12395              	.LASF382:
 12396 2219 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 12396      7272656E 
 12396      744E756D 
 12396      6265724F 
 12396      66546173 
 12397              	.LASF317:
 12398 2230 7854696D 		.ascii	"xTimeIncrement\000"
 12398      65496E63 
 12398      72656D65 
 12398      6E7400
 12399              	.LASF3:
 12400 223f 7369676E 		.ascii	"signed char\000"
 12400      65642063 
 12400      68617200 
 12401              	.LASF9:
 12402 224b 73686F72 		.ascii	"short unsigned int\000"
 12402      7420756E 
 12402      7369676E 
 12402      65642069 
 12402      6E7400
 12403              	.LASF283:
 12404 225e 7854696D 		.ascii	"xTimeToWake\000"
 12404      65546F57 
 12404      616B6500 
 12405              	.LASF372:
 12406 226a 78546173 		.ascii	"xTaskNotifyStateClear\000"
 12406      6B4E6F74 
 12406      69667953 
 12406      74617465 
 12406      436C6561 
 12407              	.LASF148:
 12408 2280 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 12408      4C455F45 
 12408      56545F47 
 12408      41545453 
 12408      5F575249 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 341


 12409              	.LASF94:
 12410 229f 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 12410      4C455F45 
 12410      56545F47 
 12410      45545F43 
 12410      4C4B5F43 
 12411              	.LASF266:
 12412 22c2 70785443 		.ascii	"pxTCB\000"
 12412      4200
 12413              	.LASF212:
 12414 22c8 6D697363 		.ascii	"miscConfig\000"
 12414      436F6E66 
 12414      696700
 12415              	.LASF159:
 12416 22d3 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 12416      4C455F45 
 12416      56545F4C 
 12416      32434150 
 12416      5F434F4E 
 12417              	.LASF53:
 12418 22fa 636F6E66 		.ascii	"configRouting\000"
 12418      6967526F 
 12418      7574696E 
 12418      6700
 12419              	.LASF392:
 12420 2308 75785363 		.ascii	"uxSchedulerSuspended\000"
 12420      68656475 
 12420      6C657253 
 12420      75737065 
 12420      6E646564 
 12421              	.LASF280:
 12422 231d 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 12422      64644375 
 12422      7272656E 
 12422      74546173 
 12422      6B546F44 
 12423              	.LASF50:
 12424 233c 72616E67 		.ascii	"rangeIntrMask\000"
 12424      65496E74 
 12424      724D6173 
 12424      6B00
 12425              	.LASF39:
 12426 234a 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 12426      6E5F7361 
 12426      725F7261 
 12426      6E67655F 
 12426      64657465 
 12427              	.LASF252:
 12428 236d 7078546F 		.ascii	"pxTopOfStack\000"
 12428      704F6653 
 12428      7461636B 
 12428      00
 12429              	.LASF298:
 12430 237a 76546173 		.ascii	"vTaskResume\000"
 12430      6B526573 
 12430      756D6500 
 12431              	.LASF411:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 342


 12432 2386 7076506F 		.ascii	"pvPortMalloc\000"
 12432      72744D61 
 12432      6C6C6F63 
 12432      00
 12433              	.LASF278:
 12434 2393 70727649 		.ascii	"prvInitialiseTaskLists\000"
 12434      6E697469 
 12434      616C6973 
 12434      65546173 
 12434      6B4C6973 
 12435              	.LASF113:
 12436 23aa 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 12436      4C455F45 
 12436      56545F47 
 12436      41505F41 
 12436      5554485F 
 12437              	.LASF340:
 12438 23c5 70784576 		.ascii	"pxEventListItem\000"
 12438      656E744C 
 12438      69737449 
 12438      74656D00 
 12439              	.LASF350:
 12440 23d5 70765661 		.ascii	"pvValue\000"
 12440      6C756500 
 12441              	.LASF85:
 12442 23dd 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 12442      4C455F45 
 12442      56545F50 
 12442      48595F55 
 12442      50444154 
 12443              	.LASF275:
 12444 23fc 70784372 		.ascii	"pxCreatedTask\000"
 12444      65617465 
 12444      64546173 
 12444      6B00
 12445              	.LASF321:
 12446 240a 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 12446      6865636B 
 12446      5461736B 
 12446      73576169 
 12446      74696E67 
 12447              	.LASF301:
 12448 242a 75785361 		.ascii	"uxSavedInterruptStatus\000"
 12448      76656449 
 12448      6E746572 
 12448      72757074 
 12448      53746174 
 12449              	.LASF182:
 12450 2441 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 12450      4C455F43 
 12450      4F4E4E5F 
 12450      53544154 
 12450      455F434C 
 12451              	.LASF48:
 12452 246b 696E7472 		.ascii	"intrMask\000"
 12452      4D61736B 
 12452      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccbvdDLc.s 			page 343


 12453              	.LASF408:
 12454 2474 76506F72 		.ascii	"vPortExitCritical\000"
 12454      74457869 
 12454      74437269 
 12454      74696361 
 12454      6C00
 12455              	.LASF27:
 12456 2486 72784275 		.ascii	"rxBufSize\000"
 12456      6653697A 
 12456      6500
 12457              	.LASF358:
 12458 2490 756C5265 		.ascii	"ulReturn\000"
 12458      7475726E 
 12458      00
 12459              	.LASF118:
 12460 2499 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 12460      4C455F45 
 12460      56545F47 
 12460      41505F43 
 12460      4F4E4E45 
 12461              	.LASF387:
 12462 24c3 78596965 		.ascii	"xYieldPending\000"
 12462      6C645065 
 12462      6E64696E 
 12462      6700
 12463              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
