ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_INT.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_ISR,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_ISR
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_ISR, %function
  25              	ADC_ISR:
  26              	.LFB174:
  27              		.file 1 "Generated_Source\\PSoC6\\ADC_INT.c"
   1:Generated_Source\PSoC6/ADC_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_INT.c **** * \file     ADC_INT.c
   3:Generated_Source\PSoC6/ADC_INT.c **** * \version  2.10
   4:Generated_Source\PSoC6/ADC_INT.c **** *
   5:Generated_Source\PSoC6/ADC_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_INT.c **** * Provides the initialization data structure for the ADC Component.
   7:Generated_Source\PSoC6/ADC_INT.c **** *
   8:Generated_Source\PSoC6/ADC_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_INT.c **** * (c) 2017, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_INT.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC_INT.c **** * liability arising out of the application or use of the Software or any
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 2


  31:Generated_Source\PSoC6/ADC_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_INT.c **** #include "ADC.h"
  40:Generated_Source\PSoC6/ADC_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_INT.c **** 
  42:Generated_Source\PSoC6/ADC_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_INT.c **** ******************************************************************************/
  47:Generated_Source\PSoC6/ADC_INT.c **** /* `#START ADC_SYS_VAR`  */
  48:Generated_Source\PSoC6/ADC_INT.c **** 
  49:Generated_Source\PSoC6/ADC_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_INT.c **** 
  51:Generated_Source\PSoC6/ADC_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_INT.c **** * Function Name: ADC_ISR
  53:Generated_Source\PSoC6/ADC_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_INT.c **** *
  55:Generated_Source\PSoC6/ADC_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_INT.c **** *
  57:Generated_Source\PSoC6/ADC_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_INT.c **** *
  59:Generated_Source\PSoC6/ADC_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_INT.c **** *
  61:Generated_Source\PSoC6/ADC_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_INT.c **** *
  63:Generated_Source\PSoC6/ADC_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_INT.c **** void ADC_ISR(void)
  65:Generated_Source\PSoC6/ADC_INT.c **** {
  28              		.loc 1 65 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
  36              	.LVL0:
  37              	.LBB8:
  38              	.LBB9:
  39              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 3


  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar SAR ADC Subsystem (SAR)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 4


  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 5


 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 6


 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 7


 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 8


 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 9


 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 10


 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 11


 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_D
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 12


 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_Sleep flow</td>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 13


 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syslib/cy_syslib.h"
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syspm/cy_syspm.h"
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifndef CY_IP_MXS40PASS_SAR
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     #error "The SAR driver is not supported on this device"
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        10
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 14


 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 15


 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 16


 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 17


 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 18


 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 19


 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 20


 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 21


1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 22


1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 23


1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 24


1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 25


1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 26


1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Sleep(SAR_Type *base);
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 27


1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CTRL &= ~SAR_CTRL_ENABLED_Msk;
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 28


1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->CHAN_RESULT_UPDATED;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CHAN_EN = enableMask;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 29


1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->RANGE_COND = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->INTR;
  40              		.loc 2 1533 0
  41 0002 8423     		movs	r3, #132
  42 0004 9B00     		lsls	r3, r3, #2
  43 0006 074A     		ldr	r2, .L3
  44 0008 D458     		ldr	r4, [r2, r3]
  45              	.LVL1:
  46              	.LBE9:
  47              	.LBE8:
  48              	.LBB10:
  49              	.LBB11:
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 30


1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
  50              		.loc 2 1561 0
  51 000a 072C     		cmp	r4, #7
  52 000c 03D9     		bls	.L2
  53 000e 0649     		ldr	r1, .L3+4
  54 0010 0648     		ldr	r0, .L3+8
  55 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  56              	.LVL2:
  57              	.L2:
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR = intrMask;
  58              		.loc 2 1563 0
  59 0016 034A     		ldr	r2, .L3
  60 0018 8423     		movs	r3, #132
  61 001a 9B00     		lsls	r3, r3, #2
  62 001c D450     		str	r4, [r2, r3]
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) base->INTR;
  63              		.loc 2 1566 0
  64 001e D158     		ldr	r1, [r2, r3]
  65              	.LVL3:
  66              	.LBE11:
  67              	.LBE10:
  68              	.LBB12:
  69              	.LBB13:
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  70              		.loc 2 1533 0
  71 0020 D358     		ldr	r3, [r2, r3]
  72              	.LVL4:
  73              	.LBE13:
  74              	.LBE12:
  66:Generated_Source\PSoC6/ADC_INT.c ****     uint32_t intr_status;
  67:Generated_Source\PSoC6/ADC_INT.c **** 
  68:Generated_Source\PSoC6/ADC_INT.c ****     /* Read interrupt status register */
  69:Generated_Source\PSoC6/ADC_INT.c ****     intr_status = Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 31


  70:Generated_Source\PSoC6/ADC_INT.c **** 
  71:Generated_Source\PSoC6/ADC_INT.c ****     /* ISR Macro Callback */
  72:Generated_Source\PSoC6/ADC_INT.c ****     #ifdef ADC_ISR_CALLBACK
  73:Generated_Source\PSoC6/ADC_INT.c ****         ADC_ISR_Callback();
  74:Generated_Source\PSoC6/ADC_INT.c ****     #endif
  75:Generated_Source\PSoC6/ADC_INT.c **** 
  76:Generated_Source\PSoC6/ADC_INT.c ****     /************************************************************************
  77:Generated_Source\PSoC6/ADC_INT.c ****     *  Custom Code
  78:Generated_Source\PSoC6/ADC_INT.c ****     *  - add user ISR code between the following #START and #END tags
  79:Generated_Source\PSoC6/ADC_INT.c ****     *************************************************************************/
  80:Generated_Source\PSoC6/ADC_INT.c ****     /* `#START MAIN_ADC_ISR`  */
  81:Generated_Source\PSoC6/ADC_INT.c **** 
  82:Generated_Source\PSoC6/ADC_INT.c ****     /* `#END`  */
  83:Generated_Source\PSoC6/ADC_INT.c **** 
  84:Generated_Source\PSoC6/ADC_INT.c ****     /* Clear handled interrupt */
  85:Generated_Source\PSoC6/ADC_INT.c ****     Cy_SAR_ClearInterrupt(ADC_SAR__HW, intr_status);
  86:Generated_Source\PSoC6/ADC_INT.c ****     /* Read interrupt status register to ensure write completed due to buffered writes */
  87:Generated_Source\PSoC6/ADC_INT.c ****     (void)Cy_SAR_GetInterruptStatus(ADC_SAR__HW);
  88:Generated_Source\PSoC6/ADC_INT.c **** }
  75              		.loc 1 88 0
  76              		@ sp needed
  77 0022 10BD     		pop	{r4, pc}
  78              	.L4:
  79              		.align	2
  80              	.L3:
  81 0024 00001D41 		.word	1092419584
  82 0028 19060000 		.word	1561
  83 002c 00000000 		.word	.LC0
  84              		.cfi_endproc
  85              	.LFE174:
  86              		.size	ADC_ISR, .-ADC_ISR
  87              		.section	.rodata.str1.4,"aMS",%progbits,1
  88              		.align	2
  89              	.LC0:
  90 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  90      72617465 
  90      645F536F 
  90      75726365 
  90      5C50536F 
  91 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  91      5F736172 
  91      2E6800
  92              		.text
  93              	.Letext0:
  94              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
  95              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
  96              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_sar.h"
  97              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
  98              		.file 7 "Generated_Source\\PSoC6\\ADC.h"
  99              		.section	.debug_info,"",%progbits
 100              	.Ldebug_info0:
 101 0000 1B070000 		.4byte	0x71b
 102 0004 0400     		.2byte	0x4
 103 0006 00000000 		.4byte	.Ldebug_abbrev0
 104 000a 04       		.byte	0x4
 105 000b 01       		.uleb128 0x1
 106 000c F7000000 		.4byte	.LASF103
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 32


 107 0010 0C       		.byte	0xc
 108 0011 00000000 		.4byte	.LASF104
 109 0015 98040000 		.4byte	.LASF105
 110 0019 00000000 		.4byte	.Ldebug_ranges0+0
 111 001d 00000000 		.4byte	0
 112 0021 00000000 		.4byte	.Ldebug_line0
 113 0025 02       		.uleb128 0x2
 114 0026 02       		.byte	0x2
 115 0027 05       		.byte	0x5
 116 0028 9D000000 		.4byte	.LASF0
 117 002c 02       		.uleb128 0x2
 118 002d 01       		.byte	0x1
 119 002e 08       		.byte	0x8
 120 002f 3B030000 		.4byte	.LASF1
 121 0033 02       		.uleb128 0x2
 122 0034 01       		.byte	0x1
 123 0035 06       		.byte	0x6
 124 0036 7A030000 		.4byte	.LASF2
 125 003a 02       		.uleb128 0x2
 126 003b 02       		.byte	0x2
 127 003c 07       		.byte	0x7
 128 003d 6E040000 		.4byte	.LASF3
 129 0041 02       		.uleb128 0x2
 130 0042 04       		.byte	0x4
 131 0043 05       		.byte	0x5
 132 0044 B0020000 		.4byte	.LASF4
 133 0048 03       		.uleb128 0x3
 134 0049 94010000 		.4byte	.LASF9
 135 004d 03       		.byte	0x3
 136 004e 41       		.byte	0x41
 137 004f 53000000 		.4byte	0x53
 138 0053 02       		.uleb128 0x2
 139 0054 04       		.byte	0x4
 140 0055 07       		.byte	0x7
 141 0056 65050000 		.4byte	.LASF5
 142 005a 02       		.uleb128 0x2
 143 005b 08       		.byte	0x8
 144 005c 05       		.byte	0x5
 145 005d 93020000 		.4byte	.LASF6
 146 0061 02       		.uleb128 0x2
 147 0062 08       		.byte	0x8
 148 0063 07       		.byte	0x7
 149 0064 8F030000 		.4byte	.LASF7
 150 0068 04       		.uleb128 0x4
 151 0069 04       		.byte	0x4
 152 006a 05       		.byte	0x5
 153 006b 696E7400 		.ascii	"int\000"
 154 006f 02       		.uleb128 0x2
 155 0070 04       		.byte	0x4
 156 0071 07       		.byte	0x7
 157 0072 58060000 		.4byte	.LASF8
 158 0076 03       		.uleb128 0x3
 159 0077 A6030000 		.4byte	.LASF10
 160 007b 04       		.byte	0x4
 161 007c 30       		.byte	0x30
 162 007d 48000000 		.4byte	0x48
 163 0081 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 33


 164 0082 04       		.byte	0x4
 165 0083 07       		.byte	0x7
 166 0084 B7000000 		.4byte	.LASF11
 167 0088 05       		.uleb128 0x5
 168 0089 76000000 		.4byte	0x76
 169 008d 06       		.uleb128 0x6
 170 008e 88000000 		.4byte	0x88
 171 0092 07       		.uleb128 0x7
 172 0093 8D000000 		.4byte	0x8d
 173 0097 A2000000 		.4byte	0xa2
 174 009b 08       		.uleb128 0x8
 175 009c 81000000 		.4byte	0x81
 176 00a0 01       		.byte	0x1
 177 00a1 00       		.byte	0
 178 00a2 07       		.uleb128 0x7
 179 00a3 88000000 		.4byte	0x88
 180 00a7 B2000000 		.4byte	0xb2
 181 00ab 08       		.uleb128 0x8
 182 00ac 81000000 		.4byte	0x81
 183 00b0 0F       		.byte	0xf
 184 00b1 00       		.byte	0
 185 00b2 07       		.uleb128 0x7
 186 00b3 8D000000 		.4byte	0x8d
 187 00b7 C2000000 		.4byte	0xc2
 188 00bb 08       		.uleb128 0x8
 189 00bc 81000000 		.4byte	0x81
 190 00c0 02       		.byte	0x2
 191 00c1 00       		.byte	0
 192 00c2 07       		.uleb128 0x7
 193 00c3 8D000000 		.4byte	0x8d
 194 00c7 D2000000 		.4byte	0xd2
 195 00cb 08       		.uleb128 0x8
 196 00cc 81000000 		.4byte	0x81
 197 00d0 0F       		.byte	0xf
 198 00d1 00       		.byte	0
 199 00d2 07       		.uleb128 0x7
 200 00d3 8D000000 		.4byte	0x8d
 201 00d7 E2000000 		.4byte	0xe2
 202 00db 08       		.uleb128 0x8
 203 00dc 81000000 		.4byte	0x81
 204 00e0 0E       		.byte	0xe
 205 00e1 00       		.byte	0
 206 00e2 09       		.uleb128 0x9
 207 00e3 080F     		.2byte	0xf08
 208 00e5 05       		.byte	0x5
 209 00e6 21       		.byte	0x21
 210 00e7 6A030000 		.4byte	0x36a
 211 00eb 0A       		.uleb128 0xa
 212 00ec 6A030000 		.4byte	.LASF12
 213 00f0 05       		.byte	0x5
 214 00f1 22       		.byte	0x22
 215 00f2 88000000 		.4byte	0x88
 216 00f6 00       		.byte	0
 217 00f7 0A       		.uleb128 0xa
 218 00f8 35060000 		.4byte	.LASF13
 219 00fc 05       		.byte	0x5
 220 00fd 23       		.byte	0x23
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 34


 221 00fe 88000000 		.4byte	0x88
 222 0102 04       		.byte	0x4
 223 0103 0A       		.uleb128 0xa
 224 0104 2C060000 		.4byte	.LASF14
 225 0108 05       		.byte	0x5
 226 0109 24       		.byte	0x24
 227 010a 6F030000 		.4byte	0x36f
 228 010e 08       		.byte	0x8
 229 010f 0A       		.uleb128 0xa
 230 0110 5C000000 		.4byte	.LASF15
 231 0114 05       		.byte	0x5
 232 0115 25       		.byte	0x25
 233 0116 88000000 		.4byte	0x88
 234 011a 10       		.byte	0x10
 235 011b 0A       		.uleb128 0xa
 236 011c C0000000 		.4byte	.LASF16
 237 0120 05       		.byte	0x5
 238 0121 26       		.byte	0x26
 239 0122 88000000 		.4byte	0x88
 240 0126 14       		.byte	0x14
 241 0127 0A       		.uleb128 0xa
 242 0128 A9010000 		.4byte	.LASF17
 243 012c 05       		.byte	0x5
 244 012d 27       		.byte	0x27
 245 012e 88000000 		.4byte	0x88
 246 0132 18       		.byte	0x18
 247 0133 0A       		.uleb128 0xa
 248 0134 5F030000 		.4byte	.LASF18
 249 0138 05       		.byte	0x5
 250 0139 28       		.byte	0x28
 251 013a 88000000 		.4byte	0x88
 252 013e 1C       		.byte	0x1c
 253 013f 0A       		.uleb128 0xa
 254 0140 A1020000 		.4byte	.LASF19
 255 0144 05       		.byte	0x5
 256 0145 29       		.byte	0x29
 257 0146 88000000 		.4byte	0x88
 258 014a 20       		.byte	0x20
 259 014b 0A       		.uleb128 0xa
 260 014c 49030000 		.4byte	.LASF20
 261 0150 05       		.byte	0x5
 262 0151 2A       		.byte	0x2a
 263 0152 88000000 		.4byte	0x88
 264 0156 24       		.byte	0x24
 265 0157 0A       		.uleb128 0xa
 266 0158 33050000 		.4byte	.LASF21
 267 015c 05       		.byte	0x5
 268 015d 2B       		.byte	0x2b
 269 015e 89030000 		.4byte	0x389
 270 0162 28       		.byte	0x28
 271 0163 0A       		.uleb128 0xa
 272 0164 F8020000 		.4byte	.LASF22
 273 0168 05       		.byte	0x5
 274 0169 2C       		.byte	0x2c
 275 016a 8E030000 		.4byte	0x38e
 276 016e 80       		.byte	0x80
 277 016f 0A       		.uleb128 0xa
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 35


 278 0170 3D050000 		.4byte	.LASF23
 279 0174 05       		.byte	0x5
 280 0175 2D       		.byte	0x2d
 281 0176 98030000 		.4byte	0x398
 282 017a C0       		.byte	0xc0
 283 017b 0B       		.uleb128 0xb
 284 017c 9F010000 		.4byte	.LASF24
 285 0180 05       		.byte	0x5
 286 0181 2E       		.byte	0x2e
 287 0182 A2030000 		.4byte	0x3a2
 288 0186 0001     		.2byte	0x100
 289 0188 0B       		.uleb128 0xb
 290 0189 47050000 		.4byte	.LASF25
 291 018d 05       		.byte	0x5
 292 018e 2F       		.byte	0x2f
 293 018f AC030000 		.4byte	0x3ac
 294 0193 4001     		.2byte	0x140
 295 0195 0B       		.uleb128 0xb
 296 0196 B5010000 		.4byte	.LASF26
 297 019a 05       		.byte	0x5
 298 019b 30       		.byte	0x30
 299 019c B6030000 		.4byte	0x3b6
 300 01a0 8001     		.2byte	0x180
 301 01a2 0B       		.uleb128 0xb
 302 01a3 51050000 		.4byte	.LASF27
 303 01a7 05       		.byte	0x5
 304 01a8 31       		.byte	0x31
 305 01a9 C0030000 		.4byte	0x3c0
 306 01ad C001     		.2byte	0x1c0
 307 01af 0B       		.uleb128 0xb
 308 01b0 FD040000 		.4byte	.LASF28
 309 01b4 05       		.byte	0x5
 310 01b5 32       		.byte	0x32
 311 01b6 8D000000 		.4byte	0x8d
 312 01ba 0002     		.2byte	0x200
 313 01bc 0B       		.uleb128 0xb
 314 01bd CB010000 		.4byte	.LASF29
 315 01c1 05       		.byte	0x5
 316 01c2 33       		.byte	0x33
 317 01c3 8D000000 		.4byte	0x8d
 318 01c7 0402     		.2byte	0x204
 319 01c9 0B       		.uleb128 0xb
 320 01ca E5020000 		.4byte	.LASF30
 321 01ce 05       		.byte	0x5
 322 01cf 34       		.byte	0x34
 323 01d0 8D000000 		.4byte	0x8d
 324 01d4 0802     		.2byte	0x208
 325 01d6 0B       		.uleb128 0xb
 326 01d7 2D000000 		.4byte	.LASF31
 327 01db 05       		.byte	0x5
 328 01dc 35       		.byte	0x35
 329 01dd 8D000000 		.4byte	0x8d
 330 01e1 0C02     		.2byte	0x20c
 331 01e3 0B       		.uleb128 0xb
 332 01e4 93040000 		.4byte	.LASF32
 333 01e8 05       		.byte	0x5
 334 01e9 36       		.byte	0x36
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 36


 335 01ea 88000000 		.4byte	0x88
 336 01ee 1002     		.2byte	0x210
 337 01f0 0B       		.uleb128 0xb
 338 01f1 86030000 		.4byte	.LASF33
 339 01f5 05       		.byte	0x5
 340 01f6 37       		.byte	0x37
 341 01f7 88000000 		.4byte	0x88
 342 01fb 1402     		.2byte	0x214
 343 01fd 0B       		.uleb128 0xb
 344 01fe 4E060000 		.4byte	.LASF34
 345 0202 05       		.byte	0x5
 346 0203 38       		.byte	0x38
 347 0204 88000000 		.4byte	0x88
 348 0208 1802     		.2byte	0x218
 349 020a 0B       		.uleb128 0xb
 350 020b 10030000 		.4byte	.LASF35
 351 020f 05       		.byte	0x5
 352 0210 39       		.byte	0x39
 353 0211 8D000000 		.4byte	0x8d
 354 0215 1C02     		.2byte	0x21c
 355 0217 0B       		.uleb128 0xb
 356 0218 1E060000 		.4byte	.LASF36
 357 021c 05       		.byte	0x5
 358 021d 3A       		.byte	0x3a
 359 021e 88000000 		.4byte	0x88
 360 0222 2002     		.2byte	0x220
 361 0224 0B       		.uleb128 0xb
 362 0225 49040000 		.4byte	.LASF37
 363 0229 05       		.byte	0x5
 364 022a 3B       		.byte	0x3b
 365 022b 88000000 		.4byte	0x88
 366 022f 2402     		.2byte	0x224
 367 0231 0B       		.uleb128 0xb
 368 0232 5B040000 		.4byte	.LASF38
 369 0236 05       		.byte	0x5
 370 0237 3C       		.byte	0x3c
 371 0238 88000000 		.4byte	0x88
 372 023c 2802     		.2byte	0x228
 373 023e 0B       		.uleb128 0xb
 374 023f 92060000 		.4byte	.LASF39
 375 0243 05       		.byte	0x5
 376 0244 3D       		.byte	0x3d
 377 0245 8D000000 		.4byte	0x8d
 378 0249 2C02     		.2byte	0x22c
 379 024b 0B       		.uleb128 0xb
 380 024c AE050000 		.4byte	.LASF40
 381 0250 05       		.byte	0x5
 382 0251 3E       		.byte	0x3e
 383 0252 88000000 		.4byte	0x88
 384 0256 3002     		.2byte	0x230
 385 0258 0B       		.uleb128 0xb
 386 0259 1C020000 		.4byte	.LASF41
 387 025d 05       		.byte	0x5
 388 025e 3F       		.byte	0x3f
 389 025f 88000000 		.4byte	0x88
 390 0263 3402     		.2byte	0x234
 391 0265 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 37


 392 0266 A7000000 		.4byte	.LASF42
 393 026a 05       		.byte	0x5
 394 026b 40       		.byte	0x40
 395 026c 88000000 		.4byte	0x88
 396 0270 3802     		.2byte	0x238
 397 0272 0B       		.uleb128 0xb
 398 0273 D2030000 		.4byte	.LASF43
 399 0277 05       		.byte	0x5
 400 0278 41       		.byte	0x41
 401 0279 8D000000 		.4byte	0x8d
 402 027d 3C02     		.2byte	0x23c
 403 027f 0B       		.uleb128 0xb
 404 0280 6F030000 		.4byte	.LASF44
 405 0284 05       		.byte	0x5
 406 0285 42       		.byte	0x42
 407 0286 8D000000 		.4byte	0x8d
 408 028a 4002     		.2byte	0x240
 409 028c 0B       		.uleb128 0xb
 410 028d 5B050000 		.4byte	.LASF45
 411 0291 05       		.byte	0x5
 412 0292 43       		.byte	0x43
 413 0293 CA030000 		.4byte	0x3ca
 414 0297 4402     		.2byte	0x244
 415 0299 0B       		.uleb128 0xb
 416 029a 0C020000 		.4byte	.LASF46
 417 029e 05       		.byte	0x5
 418 029f 44       		.byte	0x44
 419 02a0 88000000 		.4byte	0x88
 420 02a4 8002     		.2byte	0x280
 421 02a6 0B       		.uleb128 0xb
 422 02a7 DF010000 		.4byte	.LASF47
 423 02ab 05       		.byte	0x5
 424 02ac 45       		.byte	0x45
 425 02ad D4030000 		.4byte	0x3d4
 426 02b1 8402     		.2byte	0x284
 427 02b3 0B       		.uleb128 0xb
 428 02b4 81050000 		.4byte	.LASF48
 429 02b8 05       		.byte	0x5
 430 02b9 46       		.byte	0x46
 431 02ba 8D000000 		.4byte	0x8d
 432 02be 9002     		.2byte	0x290
 433 02c0 0B       		.uleb128 0xb
 434 02c1 77050000 		.4byte	.LASF49
 435 02c5 05       		.byte	0x5
 436 02c6 47       		.byte	0x47
 437 02c7 DE030000 		.4byte	0x3de
 438 02cb 9402     		.2byte	0x294
 439 02cd 0B       		.uleb128 0xb
 440 02ce A9020000 		.4byte	.LASF50
 441 02d2 05       		.byte	0x5
 442 02d3 48       		.byte	0x48
 443 02d4 8D000000 		.4byte	0x8d
 444 02d8 A002     		.2byte	0x2a0
 445 02da 0B       		.uleb128 0xb
 446 02db A7060000 		.4byte	.LASF51
 447 02df 05       		.byte	0x5
 448 02e0 49       		.byte	0x49
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 38


 449 02e1 8D000000 		.4byte	0x8d
 450 02e5 A402     		.2byte	0x2a4
 451 02e7 0B       		.uleb128 0xb
 452 02e8 F8010000 		.4byte	.LASF52
 453 02ec 05       		.byte	0x5
 454 02ed 4A       		.byte	0x4a
 455 02ee E8030000 		.4byte	0x3e8
 456 02f2 A802     		.2byte	0x2a8
 457 02f4 0B       		.uleb128 0xb
 458 02f5 F1030000 		.4byte	.LASF53
 459 02f9 05       		.byte	0x5
 460 02fa 4B       		.byte	0x4b
 461 02fb 88000000 		.4byte	0x88
 462 02ff 0003     		.2byte	0x300
 463 0301 0B       		.uleb128 0xb
 464 0302 39020000 		.4byte	.LASF54
 465 0306 05       		.byte	0x5
 466 0307 4C       		.byte	0x4c
 467 0308 88000000 		.4byte	0x88
 468 030c 0403     		.2byte	0x304
 469 030e 0B       		.uleb128 0xb
 470 030f 02020000 		.4byte	.LASF55
 471 0313 05       		.byte	0x5
 472 0314 4D       		.byte	0x4d
 473 0315 02040000 		.4byte	0x402
 474 0319 0803     		.2byte	0x308
 475 031b 0B       		.uleb128 0xb
 476 031c 7F000000 		.4byte	.LASF56
 477 0320 05       		.byte	0x5
 478 0321 4E       		.byte	0x4e
 479 0322 88000000 		.4byte	0x88
 480 0326 4003     		.2byte	0x340
 481 0328 0B       		.uleb128 0xb
 482 0329 0F040000 		.4byte	.LASF57
 483 032d 05       		.byte	0x5
 484 032e 4F       		.byte	0x4f
 485 032f 88000000 		.4byte	0x88
 486 0333 4403     		.2byte	0x344
 487 0335 0B       		.uleb128 0xb
 488 0336 9C050000 		.4byte	.LASF58
 489 033a 05       		.byte	0x5
 490 033b 50       		.byte	0x50
 491 033c 8D000000 		.4byte	0x8d
 492 0340 4803     		.2byte	0x348
 493 0342 0B       		.uleb128 0xb
 494 0343 54030000 		.4byte	.LASF59
 495 0347 05       		.byte	0x5
 496 0348 51       		.byte	0x51
 497 0349 1D040000 		.4byte	0x41d
 498 034d 4C03     		.2byte	0x34c
 499 034f 0B       		.uleb128 0xb
 500 0350 D1020000 		.4byte	.LASF60
 501 0354 05       		.byte	0x5
 502 0355 52       		.byte	0x52
 503 0356 88000000 		.4byte	0x88
 504 035a 000F     		.2byte	0xf00
 505 035c 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 39


 506 035d DB020000 		.4byte	.LASF61
 507 0361 05       		.byte	0x5
 508 0362 53       		.byte	0x53
 509 0363 88000000 		.4byte	0x88
 510 0367 040F     		.2byte	0xf04
 511 0369 00       		.byte	0
 512 036a 05       		.uleb128 0x5
 513 036b 92000000 		.4byte	0x92
 514 036f 06       		.uleb128 0x6
 515 0370 6A030000 		.4byte	0x36a
 516 0374 07       		.uleb128 0x7
 517 0375 8D000000 		.4byte	0x8d
 518 0379 84030000 		.4byte	0x384
 519 037d 08       		.uleb128 0x8
 520 037e 81000000 		.4byte	0x81
 521 0382 15       		.byte	0x15
 522 0383 00       		.byte	0
 523 0384 05       		.uleb128 0x5
 524 0385 74030000 		.4byte	0x374
 525 0389 06       		.uleb128 0x6
 526 038a 84030000 		.4byte	0x384
 527 038e 05       		.uleb128 0x5
 528 038f A2000000 		.4byte	0xa2
 529 0393 05       		.uleb128 0x5
 530 0394 C2000000 		.4byte	0xc2
 531 0398 06       		.uleb128 0x6
 532 0399 93030000 		.4byte	0x393
 533 039d 05       		.uleb128 0x5
 534 039e C2000000 		.4byte	0xc2
 535 03a2 06       		.uleb128 0x6
 536 03a3 9D030000 		.4byte	0x39d
 537 03a7 05       		.uleb128 0x5
 538 03a8 C2000000 		.4byte	0xc2
 539 03ac 06       		.uleb128 0x6
 540 03ad A7030000 		.4byte	0x3a7
 541 03b1 05       		.uleb128 0x5
 542 03b2 C2000000 		.4byte	0xc2
 543 03b6 06       		.uleb128 0x6
 544 03b7 B1030000 		.4byte	0x3b1
 545 03bb 05       		.uleb128 0x5
 546 03bc C2000000 		.4byte	0xc2
 547 03c0 06       		.uleb128 0x6
 548 03c1 BB030000 		.4byte	0x3bb
 549 03c5 05       		.uleb128 0x5
 550 03c6 D2000000 		.4byte	0xd2
 551 03ca 06       		.uleb128 0x6
 552 03cb C5030000 		.4byte	0x3c5
 553 03cf 05       		.uleb128 0x5
 554 03d0 B2000000 		.4byte	0xb2
 555 03d4 06       		.uleb128 0x6
 556 03d5 CF030000 		.4byte	0x3cf
 557 03d9 05       		.uleb128 0x5
 558 03da B2000000 		.4byte	0xb2
 559 03de 06       		.uleb128 0x6
 560 03df D9030000 		.4byte	0x3d9
 561 03e3 05       		.uleb128 0x5
 562 03e4 74030000 		.4byte	0x374
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 40


 563 03e8 06       		.uleb128 0x6
 564 03e9 E3030000 		.4byte	0x3e3
 565 03ed 07       		.uleb128 0x7
 566 03ee 8D000000 		.4byte	0x8d
 567 03f2 FD030000 		.4byte	0x3fd
 568 03f6 08       		.uleb128 0x8
 569 03f7 81000000 		.4byte	0x81
 570 03fb 0D       		.byte	0xd
 571 03fc 00       		.byte	0
 572 03fd 05       		.uleb128 0x5
 573 03fe ED030000 		.4byte	0x3ed
 574 0402 06       		.uleb128 0x6
 575 0403 FD030000 		.4byte	0x3fd
 576 0407 07       		.uleb128 0x7
 577 0408 8D000000 		.4byte	0x8d
 578 040c 18040000 		.4byte	0x418
 579 0410 0C       		.uleb128 0xc
 580 0411 81000000 		.4byte	0x81
 581 0415 EC02     		.2byte	0x2ec
 582 0417 00       		.byte	0
 583 0418 05       		.uleb128 0x5
 584 0419 07040000 		.4byte	0x407
 585 041d 06       		.uleb128 0x6
 586 041e 18040000 		.4byte	0x418
 587 0422 03       		.uleb128 0x3
 588 0423 93050000 		.4byte	.LASF62
 589 0427 05       		.byte	0x5
 590 0428 54       		.byte	0x54
 591 0429 E2000000 		.4byte	0xe2
 592 042d 02       		.uleb128 0x2
 593 042e 08       		.byte	0x8
 594 042f 04       		.byte	0x4
 595 0430 24030000 		.4byte	.LASF63
 596 0434 0D       		.uleb128 0xd
 597 0435 CA020000 		.4byte	.LASF64
 598 0439 06       		.byte	0x6
 599 043a C401     		.2byte	0x1c4
 600 043c 40040000 		.4byte	0x440
 601 0440 02       		.uleb128 0x2
 602 0441 01       		.byte	0x1
 603 0442 08       		.byte	0x8
 604 0443 22040000 		.4byte	.LASF65
 605 0447 02       		.uleb128 0x2
 606 0448 04       		.byte	0x4
 607 0449 04       		.byte	0x4
 608 044a 2D050000 		.4byte	.LASF66
 609 044e 02       		.uleb128 0x2
 610 044f 08       		.byte	0x8
 611 0450 04       		.byte	0x4
 612 0451 8C050000 		.4byte	.LASF67
 613 0455 0E       		.uleb128 0xe
 614 0456 01       		.byte	0x1
 615 0457 2C000000 		.4byte	0x2c
 616 045b 02       		.byte	0x2
 617 045c 0504     		.2byte	0x405
 618 045e 7B040000 		.4byte	0x47b
 619 0462 0F       		.uleb128 0xf
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 41


 620 0463 7B020000 		.4byte	.LASF68
 621 0467 00       		.byte	0
 622 0468 0F       		.uleb128 0xf
 623 0469 B9050000 		.4byte	.LASF69
 624 046d 01       		.byte	0x1
 625 046e 0F       		.uleb128 0xf
 626 046f 31040000 		.4byte	.LASF70
 627 0473 02       		.byte	0x2
 628 0474 0F       		.uleb128 0xf
 629 0475 42000000 		.4byte	.LASF71
 630 0479 03       		.byte	0x3
 631 047a 00       		.byte	0
 632 047b 0D       		.uleb128 0xd
 633 047c B9060000 		.4byte	.LASF72
 634 0480 02       		.byte	0x2
 635 0481 0A04     		.2byte	0x40a
 636 0483 55040000 		.4byte	0x455
 637 0487 0E       		.uleb128 0xe
 638 0488 01       		.byte	0x1
 639 0489 2C000000 		.4byte	0x2c
 640 048d 02       		.byte	0x2
 641 048e 8604     		.2byte	0x486
 642 0490 AD040000 		.4byte	0x4ad
 643 0494 0F       		.uleb128 0xf
 644 0495 4B020000 		.4byte	.LASF73
 645 0499 00       		.byte	0
 646 049a 0F       		.uleb128 0xf
 647 049b 6A000000 		.4byte	.LASF74
 648 049f 01       		.byte	0x1
 649 04a0 0F       		.uleb128 0xf
 650 04a1 D2050000 		.4byte	.LASF75
 651 04a5 02       		.byte	0x2
 652 04a6 0F       		.uleb128 0xf
 653 04a7 0F050000 		.4byte	.LASF76
 654 04ab 04       		.byte	0x4
 655 04ac 00       		.byte	0
 656 04ad 10       		.uleb128 0x10
 657 04ae 78       		.byte	0x78
 658 04af 02       		.byte	0x2
 659 04b0 F404     		.2byte	0x4f4
 660 04b2 7A050000 		.4byte	0x57a
 661 04b6 11       		.uleb128 0x11
 662 04b7 CD030000 		.4byte	.LASF77
 663 04bb 02       		.byte	0x2
 664 04bc F604     		.2byte	0x4f6
 665 04be 76000000 		.4byte	0x76
 666 04c2 00       		.byte	0
 667 04c3 11       		.uleb128 0x11
 668 04c4 CE000000 		.4byte	.LASF78
 669 04c8 02       		.byte	0x2
 670 04c9 F704     		.2byte	0x4f7
 671 04cb 76000000 		.4byte	0x76
 672 04cf 04       		.byte	0x4
 673 04d0 11       		.uleb128 0x11
 674 04d1 E4030000 		.4byte	.LASF79
 675 04d5 02       		.byte	0x2
 676 04d6 F804     		.2byte	0x4f8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 42


 677 04d8 76000000 		.4byte	0x76
 678 04dc 08       		.byte	0x8
 679 04dd 11       		.uleb128 0x11
 680 04de 41060000 		.4byte	.LASF80
 681 04e2 02       		.byte	0x2
 682 04e3 F904     		.2byte	0x4f9
 683 04e5 76000000 		.4byte	0x76
 684 04e9 0C       		.byte	0xc
 685 04ea 11       		.uleb128 0x11
 686 04eb 89010000 		.4byte	.LASF81
 687 04ef 02       		.byte	0x2
 688 04f0 FA04     		.2byte	0x4fa
 689 04f2 76000000 		.4byte	0x76
 690 04f6 10       		.byte	0x10
 691 04f7 11       		.uleb128 0x11
 692 04f8 C1010000 		.4byte	.LASF82
 693 04fc 02       		.byte	0x2
 694 04fd FB04     		.2byte	0x4fb
 695 04ff 7B040000 		.4byte	0x47b
 696 0503 14       		.byte	0x14
 697 0504 11       		.uleb128 0x11
 698 0505 0B060000 		.4byte	.LASF83
 699 0509 02       		.byte	0x2
 700 050a FC04     		.2byte	0x4fc
 701 050c 76000000 		.4byte	0x76
 702 0510 18       		.byte	0x18
 703 0511 11       		.uleb128 0x11
 704 0512 EC050000 		.4byte	.LASF84
 705 0516 02       		.byte	0x2
 706 0517 FD04     		.2byte	0x4fd
 707 0519 7A050000 		.4byte	0x57a
 708 051d 1C       		.byte	0x1c
 709 051e 11       		.uleb128 0x11
 710 051f B0060000 		.4byte	.LASF85
 711 0523 02       		.byte	0x2
 712 0524 FE04     		.2byte	0x4fe
 713 0526 76000000 		.4byte	0x76
 714 052a 5C       		.byte	0x5c
 715 052b 11       		.uleb128 0x11
 716 052c 04030000 		.4byte	.LASF86
 717 0530 02       		.byte	0x2
 718 0531 FF04     		.2byte	0x4ff
 719 0533 76000000 		.4byte	0x76
 720 0537 60       		.byte	0x60
 721 0538 11       		.uleb128 0x11
 722 0539 AF030000 		.4byte	.LASF87
 723 053d 02       		.byte	0x2
 724 053e 0005     		.2byte	0x500
 725 0540 76000000 		.4byte	0x76
 726 0544 64       		.byte	0x64
 727 0545 11       		.uleb128 0x11
 728 0546 27040000 		.4byte	.LASF88
 729 054a 02       		.byte	0x2
 730 054b 0105     		.2byte	0x501
 731 054d 76000000 		.4byte	0x76
 732 0551 68       		.byte	0x68
 733 0552 11       		.uleb128 0x11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 43


 734 0553 BD030000 		.4byte	.LASF89
 735 0557 02       		.byte	0x2
 736 0558 0205     		.2byte	0x502
 737 055a 76000000 		.4byte	0x76
 738 055e 6C       		.byte	0x6c
 739 055f 11       		.uleb128 0x11
 740 0560 2B020000 		.4byte	.LASF90
 741 0564 02       		.byte	0x2
 742 0565 0305     		.2byte	0x503
 743 0567 8A050000 		.4byte	0x58a
 744 056b 70       		.byte	0x70
 745 056c 11       		.uleb128 0x11
 746 056d EB000000 		.4byte	.LASF91
 747 0571 02       		.byte	0x2
 748 0572 0405     		.2byte	0x504
 749 0574 76000000 		.4byte	0x76
 750 0578 74       		.byte	0x74
 751 0579 00       		.byte	0
 752 057a 07       		.uleb128 0x7
 753 057b 76000000 		.4byte	0x76
 754 057f 8A050000 		.4byte	0x58a
 755 0583 08       		.uleb128 0x8
 756 0584 81000000 		.4byte	0x81
 757 0588 0F       		.byte	0xf
 758 0589 00       		.byte	0
 759 058a 02       		.uleb128 0x2
 760 058b 01       		.byte	0x1
 761 058c 02       		.byte	0x2
 762 058d 81040000 		.4byte	.LASF92
 763 0591 0D       		.uleb128 0xd
 764 0592 F7050000 		.4byte	.LASF93
 765 0596 02       		.byte	0x2
 766 0597 0505     		.2byte	0x505
 767 0599 AD040000 		.4byte	0x4ad
 768 059d 12       		.uleb128 0x12
 769 059e 14       		.byte	0x14
 770 059f 07       		.byte	0x7
 771 05a0 3B       		.byte	0x3b
 772 05a1 E2050000 		.4byte	0x5e2
 773 05a5 0A       		.uleb128 0xa
 774 05a6 21000000 		.4byte	.LASF94
 775 05aa 07       		.byte	0x7
 776 05ab 3D       		.byte	0x3d
 777 05ac 76000000 		.4byte	0x76
 778 05b0 00       		.byte	0
 779 05b1 0A       		.uleb128 0xa
 780 05b2 12060000 		.4byte	.LASF95
 781 05b6 07       		.byte	0x7
 782 05b7 3E       		.byte	0x3e
 783 05b8 76000000 		.4byte	0x76
 784 05bc 04       		.byte	0x4
 785 05bd 0A       		.uleb128 0xa
 786 05be 87040000 		.4byte	.LASF96
 787 05c2 07       		.byte	0x7
 788 05c3 3F       		.byte	0x3f
 789 05c4 E2050000 		.4byte	0x5e2
 790 05c8 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 44


 791 05c9 0A       		.uleb128 0xa
 792 05ca 30030000 		.4byte	.LASF97
 793 05ce 07       		.byte	0x7
 794 05cf 40       		.byte	0x40
 795 05d0 76000000 		.4byte	0x76
 796 05d4 0C       		.byte	0xc
 797 05d5 0A       		.uleb128 0xa
 798 05d6 92000000 		.4byte	.LASF98
 799 05da 07       		.byte	0x7
 800 05db 45       		.byte	0x45
 801 05dc 76000000 		.4byte	0x76
 802 05e0 10       		.byte	0x10
 803 05e1 00       		.byte	0
 804 05e2 13       		.uleb128 0x13
 805 05e3 04       		.byte	0x4
 806 05e4 E8050000 		.4byte	0x5e8
 807 05e8 06       		.uleb128 0x6
 808 05e9 91050000 		.4byte	0x591
 809 05ed 03       		.uleb128 0x3
 810 05ee D9000000 		.4byte	.LASF99
 811 05f2 07       		.byte	0x7
 812 05f3 48       		.byte	0x48
 813 05f4 9D050000 		.4byte	0x59d
 814 05f8 14       		.uleb128 0x14
 815 05f9 61020000 		.4byte	.LASF106
 816 05fd 02       		.byte	0x2
 817 05fe FB05     		.2byte	0x5fb
 818 0600 76000000 		.4byte	0x76
 819 0604 03       		.byte	0x3
 820 0605 16060000 		.4byte	0x616
 821 0609 15       		.uleb128 0x15
 822 060a B9020000 		.4byte	.LASF100
 823 060e 02       		.byte	0x2
 824 060f FB05     		.2byte	0x5fb
 825 0611 16060000 		.4byte	0x616
 826 0615 00       		.byte	0
 827 0616 13       		.uleb128 0x13
 828 0617 04       		.byte	0x4
 829 0618 1C060000 		.4byte	0x61c
 830 061c 06       		.uleb128 0x6
 831 061d 22040000 		.4byte	0x422
 832 0621 16       		.uleb128 0x16
 833 0622 65060000 		.4byte	.LASF107
 834 0626 02       		.byte	0x2
 835 0627 1706     		.2byte	0x617
 836 0629 03       		.byte	0x3
 837 062a 47060000 		.4byte	0x647
 838 062e 15       		.uleb128 0x15
 839 062f B9020000 		.4byte	.LASF100
 840 0633 02       		.byte	0x2
 841 0634 1706     		.2byte	0x617
 842 0636 47060000 		.4byte	0x647
 843 063a 15       		.uleb128 0x15
 844 063b B0060000 		.4byte	.LASF85
 845 063f 02       		.byte	0x2
 846 0640 1706     		.2byte	0x617
 847 0642 76000000 		.4byte	0x76
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 45


 848 0646 00       		.byte	0
 849 0647 13       		.uleb128 0x13
 850 0648 04       		.byte	0x4
 851 0649 22040000 		.4byte	0x422
 852 064d 17       		.uleb128 0x17
 853 064e 1C030000 		.4byte	.LASF108
 854 0652 01       		.byte	0x1
 855 0653 40       		.byte	0x40
 856 0654 00000000 		.4byte	.LFB174
 857 0658 30000000 		.4byte	.LFE174-.LFB174
 858 065c 01       		.uleb128 0x1
 859 065d 9C       		.byte	0x9c
 860 065e E0060000 		.4byte	0x6e0
 861 0662 18       		.uleb128 0x18
 862 0663 BE020000 		.4byte	.LASF109
 863 0667 01       		.byte	0x1
 864 0668 42       		.byte	0x42
 865 0669 76000000 		.4byte	0x76
 866 066d 19       		.uleb128 0x19
 867 066e F8050000 		.4byte	0x5f8
 868 0672 02000000 		.4byte	.LBB8
 869 0676 08000000 		.4byte	.LBE8-.LBB8
 870 067a 01       		.byte	0x1
 871 067b 45       		.byte	0x45
 872 067c 8A060000 		.4byte	0x68a
 873 0680 1A       		.uleb128 0x1a
 874 0681 09060000 		.4byte	0x609
 875 0685 00000000 		.4byte	.LLST0
 876 0689 00       		.byte	0
 877 068a 19       		.uleb128 0x19
 878 068b 21060000 		.4byte	0x621
 879 068f 0A000000 		.4byte	.LBB10
 880 0693 16000000 		.4byte	.LBE10-.LBB10
 881 0697 01       		.byte	0x1
 882 0698 55       		.byte	0x55
 883 0699 C6060000 		.4byte	0x6c6
 884 069d 1B       		.uleb128 0x1b
 885 069e 3A060000 		.4byte	0x63a
 886 06a2 1A       		.uleb128 0x1a
 887 06a3 2E060000 		.4byte	0x62e
 888 06a7 18000000 		.4byte	.LLST1
 889 06ab 1C       		.uleb128 0x1c
 890 06ac 16000000 		.4byte	.LVL2
 891 06b0 12070000 		.4byte	0x712
 892 06b4 1D       		.uleb128 0x1d
 893 06b5 01       		.uleb128 0x1
 894 06b6 50       		.byte	0x50
 895 06b7 05       		.uleb128 0x5
 896 06b8 03       		.byte	0x3
 897 06b9 00000000 		.4byte	.LC0
 898 06bd 1D       		.uleb128 0x1d
 899 06be 01       		.uleb128 0x1
 900 06bf 51       		.byte	0x51
 901 06c0 03       		.uleb128 0x3
 902 06c1 0A       		.byte	0xa
 903 06c2 1906     		.2byte	0x619
 904 06c4 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 46


 905 06c5 00       		.byte	0
 906 06c6 1E       		.uleb128 0x1e
 907 06c7 F8050000 		.4byte	0x5f8
 908 06cb 20000000 		.4byte	.LBB12
 909 06cf 02000000 		.4byte	.LBE12-.LBB12
 910 06d3 01       		.byte	0x1
 911 06d4 57       		.byte	0x57
 912 06d5 1A       		.uleb128 0x1a
 913 06d6 09060000 		.4byte	0x609
 914 06da 30000000 		.4byte	.LLST2
 915 06de 00       		.byte	0
 916 06df 00       		.byte	0
 917 06e0 1F       		.uleb128 0x1f
 918 06e1 FD030000 		.4byte	.LASF101
 919 06e5 07       		.byte	0x7
 920 06e6 6001     		.2byte	0x160
 921 06e8 76000000 		.4byte	0x76
 922 06ec 07       		.uleb128 0x7
 923 06ed FC060000 		.4byte	0x6fc
 924 06f1 FC060000 		.4byte	0x6fc
 925 06f5 08       		.uleb128 0x8
 926 06f6 81000000 		.4byte	0x81
 927 06fa 00       		.byte	0
 928 06fb 00       		.byte	0
 929 06fc 06       		.uleb128 0x6
 930 06fd ED050000 		.4byte	0x5ed
 931 0701 1F       		.uleb128 0x1f
 932 0702 E9010000 		.4byte	.LASF102
 933 0706 07       		.byte	0x7
 934 0707 6401     		.2byte	0x164
 935 0709 0D070000 		.4byte	0x70d
 936 070d 06       		.uleb128 0x6
 937 070e EC060000 		.4byte	0x6ec
 938 0712 20       		.uleb128 0x20
 939 0713 7B060000 		.4byte	.LASF110
 940 0717 7B060000 		.4byte	.LASF110
 941 071b 06       		.byte	0x6
 942 071c 2A03     		.2byte	0x32a
 943 071e 00       		.byte	0
 944              		.section	.debug_abbrev,"",%progbits
 945              	.Ldebug_abbrev0:
 946 0000 01       		.uleb128 0x1
 947 0001 11       		.uleb128 0x11
 948 0002 01       		.byte	0x1
 949 0003 25       		.uleb128 0x25
 950 0004 0E       		.uleb128 0xe
 951 0005 13       		.uleb128 0x13
 952 0006 0B       		.uleb128 0xb
 953 0007 03       		.uleb128 0x3
 954 0008 0E       		.uleb128 0xe
 955 0009 1B       		.uleb128 0x1b
 956 000a 0E       		.uleb128 0xe
 957 000b 55       		.uleb128 0x55
 958 000c 17       		.uleb128 0x17
 959 000d 11       		.uleb128 0x11
 960 000e 01       		.uleb128 0x1
 961 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 47


 962 0010 17       		.uleb128 0x17
 963 0011 00       		.byte	0
 964 0012 00       		.byte	0
 965 0013 02       		.uleb128 0x2
 966 0014 24       		.uleb128 0x24
 967 0015 00       		.byte	0
 968 0016 0B       		.uleb128 0xb
 969 0017 0B       		.uleb128 0xb
 970 0018 3E       		.uleb128 0x3e
 971 0019 0B       		.uleb128 0xb
 972 001a 03       		.uleb128 0x3
 973 001b 0E       		.uleb128 0xe
 974 001c 00       		.byte	0
 975 001d 00       		.byte	0
 976 001e 03       		.uleb128 0x3
 977 001f 16       		.uleb128 0x16
 978 0020 00       		.byte	0
 979 0021 03       		.uleb128 0x3
 980 0022 0E       		.uleb128 0xe
 981 0023 3A       		.uleb128 0x3a
 982 0024 0B       		.uleb128 0xb
 983 0025 3B       		.uleb128 0x3b
 984 0026 0B       		.uleb128 0xb
 985 0027 49       		.uleb128 0x49
 986 0028 13       		.uleb128 0x13
 987 0029 00       		.byte	0
 988 002a 00       		.byte	0
 989 002b 04       		.uleb128 0x4
 990 002c 24       		.uleb128 0x24
 991 002d 00       		.byte	0
 992 002e 0B       		.uleb128 0xb
 993 002f 0B       		.uleb128 0xb
 994 0030 3E       		.uleb128 0x3e
 995 0031 0B       		.uleb128 0xb
 996 0032 03       		.uleb128 0x3
 997 0033 08       		.uleb128 0x8
 998 0034 00       		.byte	0
 999 0035 00       		.byte	0
 1000 0036 05       		.uleb128 0x5
 1001 0037 35       		.uleb128 0x35
 1002 0038 00       		.byte	0
 1003 0039 49       		.uleb128 0x49
 1004 003a 13       		.uleb128 0x13
 1005 003b 00       		.byte	0
 1006 003c 00       		.byte	0
 1007 003d 06       		.uleb128 0x6
 1008 003e 26       		.uleb128 0x26
 1009 003f 00       		.byte	0
 1010 0040 49       		.uleb128 0x49
 1011 0041 13       		.uleb128 0x13
 1012 0042 00       		.byte	0
 1013 0043 00       		.byte	0
 1014 0044 07       		.uleb128 0x7
 1015 0045 01       		.uleb128 0x1
 1016 0046 01       		.byte	0x1
 1017 0047 49       		.uleb128 0x49
 1018 0048 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 48


 1019 0049 01       		.uleb128 0x1
 1020 004a 13       		.uleb128 0x13
 1021 004b 00       		.byte	0
 1022 004c 00       		.byte	0
 1023 004d 08       		.uleb128 0x8
 1024 004e 21       		.uleb128 0x21
 1025 004f 00       		.byte	0
 1026 0050 49       		.uleb128 0x49
 1027 0051 13       		.uleb128 0x13
 1028 0052 2F       		.uleb128 0x2f
 1029 0053 0B       		.uleb128 0xb
 1030 0054 00       		.byte	0
 1031 0055 00       		.byte	0
 1032 0056 09       		.uleb128 0x9
 1033 0057 13       		.uleb128 0x13
 1034 0058 01       		.byte	0x1
 1035 0059 0B       		.uleb128 0xb
 1036 005a 05       		.uleb128 0x5
 1037 005b 3A       		.uleb128 0x3a
 1038 005c 0B       		.uleb128 0xb
 1039 005d 3B       		.uleb128 0x3b
 1040 005e 0B       		.uleb128 0xb
 1041 005f 01       		.uleb128 0x1
 1042 0060 13       		.uleb128 0x13
 1043 0061 00       		.byte	0
 1044 0062 00       		.byte	0
 1045 0063 0A       		.uleb128 0xa
 1046 0064 0D       		.uleb128 0xd
 1047 0065 00       		.byte	0
 1048 0066 03       		.uleb128 0x3
 1049 0067 0E       		.uleb128 0xe
 1050 0068 3A       		.uleb128 0x3a
 1051 0069 0B       		.uleb128 0xb
 1052 006a 3B       		.uleb128 0x3b
 1053 006b 0B       		.uleb128 0xb
 1054 006c 49       		.uleb128 0x49
 1055 006d 13       		.uleb128 0x13
 1056 006e 38       		.uleb128 0x38
 1057 006f 0B       		.uleb128 0xb
 1058 0070 00       		.byte	0
 1059 0071 00       		.byte	0
 1060 0072 0B       		.uleb128 0xb
 1061 0073 0D       		.uleb128 0xd
 1062 0074 00       		.byte	0
 1063 0075 03       		.uleb128 0x3
 1064 0076 0E       		.uleb128 0xe
 1065 0077 3A       		.uleb128 0x3a
 1066 0078 0B       		.uleb128 0xb
 1067 0079 3B       		.uleb128 0x3b
 1068 007a 0B       		.uleb128 0xb
 1069 007b 49       		.uleb128 0x49
 1070 007c 13       		.uleb128 0x13
 1071 007d 38       		.uleb128 0x38
 1072 007e 05       		.uleb128 0x5
 1073 007f 00       		.byte	0
 1074 0080 00       		.byte	0
 1075 0081 0C       		.uleb128 0xc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 49


 1076 0082 21       		.uleb128 0x21
 1077 0083 00       		.byte	0
 1078 0084 49       		.uleb128 0x49
 1079 0085 13       		.uleb128 0x13
 1080 0086 2F       		.uleb128 0x2f
 1081 0087 05       		.uleb128 0x5
 1082 0088 00       		.byte	0
 1083 0089 00       		.byte	0
 1084 008a 0D       		.uleb128 0xd
 1085 008b 16       		.uleb128 0x16
 1086 008c 00       		.byte	0
 1087 008d 03       		.uleb128 0x3
 1088 008e 0E       		.uleb128 0xe
 1089 008f 3A       		.uleb128 0x3a
 1090 0090 0B       		.uleb128 0xb
 1091 0091 3B       		.uleb128 0x3b
 1092 0092 05       		.uleb128 0x5
 1093 0093 49       		.uleb128 0x49
 1094 0094 13       		.uleb128 0x13
 1095 0095 00       		.byte	0
 1096 0096 00       		.byte	0
 1097 0097 0E       		.uleb128 0xe
 1098 0098 04       		.uleb128 0x4
 1099 0099 01       		.byte	0x1
 1100 009a 0B       		.uleb128 0xb
 1101 009b 0B       		.uleb128 0xb
 1102 009c 49       		.uleb128 0x49
 1103 009d 13       		.uleb128 0x13
 1104 009e 3A       		.uleb128 0x3a
 1105 009f 0B       		.uleb128 0xb
 1106 00a0 3B       		.uleb128 0x3b
 1107 00a1 05       		.uleb128 0x5
 1108 00a2 01       		.uleb128 0x1
 1109 00a3 13       		.uleb128 0x13
 1110 00a4 00       		.byte	0
 1111 00a5 00       		.byte	0
 1112 00a6 0F       		.uleb128 0xf
 1113 00a7 28       		.uleb128 0x28
 1114 00a8 00       		.byte	0
 1115 00a9 03       		.uleb128 0x3
 1116 00aa 0E       		.uleb128 0xe
 1117 00ab 1C       		.uleb128 0x1c
 1118 00ac 0B       		.uleb128 0xb
 1119 00ad 00       		.byte	0
 1120 00ae 00       		.byte	0
 1121 00af 10       		.uleb128 0x10
 1122 00b0 13       		.uleb128 0x13
 1123 00b1 01       		.byte	0x1
 1124 00b2 0B       		.uleb128 0xb
 1125 00b3 0B       		.uleb128 0xb
 1126 00b4 3A       		.uleb128 0x3a
 1127 00b5 0B       		.uleb128 0xb
 1128 00b6 3B       		.uleb128 0x3b
 1129 00b7 05       		.uleb128 0x5
 1130 00b8 01       		.uleb128 0x1
 1131 00b9 13       		.uleb128 0x13
 1132 00ba 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 50


 1133 00bb 00       		.byte	0
 1134 00bc 11       		.uleb128 0x11
 1135 00bd 0D       		.uleb128 0xd
 1136 00be 00       		.byte	0
 1137 00bf 03       		.uleb128 0x3
 1138 00c0 0E       		.uleb128 0xe
 1139 00c1 3A       		.uleb128 0x3a
 1140 00c2 0B       		.uleb128 0xb
 1141 00c3 3B       		.uleb128 0x3b
 1142 00c4 05       		.uleb128 0x5
 1143 00c5 49       		.uleb128 0x49
 1144 00c6 13       		.uleb128 0x13
 1145 00c7 38       		.uleb128 0x38
 1146 00c8 0B       		.uleb128 0xb
 1147 00c9 00       		.byte	0
 1148 00ca 00       		.byte	0
 1149 00cb 12       		.uleb128 0x12
 1150 00cc 13       		.uleb128 0x13
 1151 00cd 01       		.byte	0x1
 1152 00ce 0B       		.uleb128 0xb
 1153 00cf 0B       		.uleb128 0xb
 1154 00d0 3A       		.uleb128 0x3a
 1155 00d1 0B       		.uleb128 0xb
 1156 00d2 3B       		.uleb128 0x3b
 1157 00d3 0B       		.uleb128 0xb
 1158 00d4 01       		.uleb128 0x1
 1159 00d5 13       		.uleb128 0x13
 1160 00d6 00       		.byte	0
 1161 00d7 00       		.byte	0
 1162 00d8 13       		.uleb128 0x13
 1163 00d9 0F       		.uleb128 0xf
 1164 00da 00       		.byte	0
 1165 00db 0B       		.uleb128 0xb
 1166 00dc 0B       		.uleb128 0xb
 1167 00dd 49       		.uleb128 0x49
 1168 00de 13       		.uleb128 0x13
 1169 00df 00       		.byte	0
 1170 00e0 00       		.byte	0
 1171 00e1 14       		.uleb128 0x14
 1172 00e2 2E       		.uleb128 0x2e
 1173 00e3 01       		.byte	0x1
 1174 00e4 03       		.uleb128 0x3
 1175 00e5 0E       		.uleb128 0xe
 1176 00e6 3A       		.uleb128 0x3a
 1177 00e7 0B       		.uleb128 0xb
 1178 00e8 3B       		.uleb128 0x3b
 1179 00e9 05       		.uleb128 0x5
 1180 00ea 27       		.uleb128 0x27
 1181 00eb 19       		.uleb128 0x19
 1182 00ec 49       		.uleb128 0x49
 1183 00ed 13       		.uleb128 0x13
 1184 00ee 20       		.uleb128 0x20
 1185 00ef 0B       		.uleb128 0xb
 1186 00f0 01       		.uleb128 0x1
 1187 00f1 13       		.uleb128 0x13
 1188 00f2 00       		.byte	0
 1189 00f3 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 51


 1190 00f4 15       		.uleb128 0x15
 1191 00f5 05       		.uleb128 0x5
 1192 00f6 00       		.byte	0
 1193 00f7 03       		.uleb128 0x3
 1194 00f8 0E       		.uleb128 0xe
 1195 00f9 3A       		.uleb128 0x3a
 1196 00fa 0B       		.uleb128 0xb
 1197 00fb 3B       		.uleb128 0x3b
 1198 00fc 05       		.uleb128 0x5
 1199 00fd 49       		.uleb128 0x49
 1200 00fe 13       		.uleb128 0x13
 1201 00ff 00       		.byte	0
 1202 0100 00       		.byte	0
 1203 0101 16       		.uleb128 0x16
 1204 0102 2E       		.uleb128 0x2e
 1205 0103 01       		.byte	0x1
 1206 0104 03       		.uleb128 0x3
 1207 0105 0E       		.uleb128 0xe
 1208 0106 3A       		.uleb128 0x3a
 1209 0107 0B       		.uleb128 0xb
 1210 0108 3B       		.uleb128 0x3b
 1211 0109 05       		.uleb128 0x5
 1212 010a 27       		.uleb128 0x27
 1213 010b 19       		.uleb128 0x19
 1214 010c 20       		.uleb128 0x20
 1215 010d 0B       		.uleb128 0xb
 1216 010e 01       		.uleb128 0x1
 1217 010f 13       		.uleb128 0x13
 1218 0110 00       		.byte	0
 1219 0111 00       		.byte	0
 1220 0112 17       		.uleb128 0x17
 1221 0113 2E       		.uleb128 0x2e
 1222 0114 01       		.byte	0x1
 1223 0115 3F       		.uleb128 0x3f
 1224 0116 19       		.uleb128 0x19
 1225 0117 03       		.uleb128 0x3
 1226 0118 0E       		.uleb128 0xe
 1227 0119 3A       		.uleb128 0x3a
 1228 011a 0B       		.uleb128 0xb
 1229 011b 3B       		.uleb128 0x3b
 1230 011c 0B       		.uleb128 0xb
 1231 011d 27       		.uleb128 0x27
 1232 011e 19       		.uleb128 0x19
 1233 011f 11       		.uleb128 0x11
 1234 0120 01       		.uleb128 0x1
 1235 0121 12       		.uleb128 0x12
 1236 0122 06       		.uleb128 0x6
 1237 0123 40       		.uleb128 0x40
 1238 0124 18       		.uleb128 0x18
 1239 0125 9742     		.uleb128 0x2117
 1240 0127 19       		.uleb128 0x19
 1241 0128 01       		.uleb128 0x1
 1242 0129 13       		.uleb128 0x13
 1243 012a 00       		.byte	0
 1244 012b 00       		.byte	0
 1245 012c 18       		.uleb128 0x18
 1246 012d 34       		.uleb128 0x34
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 52


 1247 012e 00       		.byte	0
 1248 012f 03       		.uleb128 0x3
 1249 0130 0E       		.uleb128 0xe
 1250 0131 3A       		.uleb128 0x3a
 1251 0132 0B       		.uleb128 0xb
 1252 0133 3B       		.uleb128 0x3b
 1253 0134 0B       		.uleb128 0xb
 1254 0135 49       		.uleb128 0x49
 1255 0136 13       		.uleb128 0x13
 1256 0137 00       		.byte	0
 1257 0138 00       		.byte	0
 1258 0139 19       		.uleb128 0x19
 1259 013a 1D       		.uleb128 0x1d
 1260 013b 01       		.byte	0x1
 1261 013c 31       		.uleb128 0x31
 1262 013d 13       		.uleb128 0x13
 1263 013e 11       		.uleb128 0x11
 1264 013f 01       		.uleb128 0x1
 1265 0140 12       		.uleb128 0x12
 1266 0141 06       		.uleb128 0x6
 1267 0142 58       		.uleb128 0x58
 1268 0143 0B       		.uleb128 0xb
 1269 0144 59       		.uleb128 0x59
 1270 0145 0B       		.uleb128 0xb
 1271 0146 01       		.uleb128 0x1
 1272 0147 13       		.uleb128 0x13
 1273 0148 00       		.byte	0
 1274 0149 00       		.byte	0
 1275 014a 1A       		.uleb128 0x1a
 1276 014b 05       		.uleb128 0x5
 1277 014c 00       		.byte	0
 1278 014d 31       		.uleb128 0x31
 1279 014e 13       		.uleb128 0x13
 1280 014f 02       		.uleb128 0x2
 1281 0150 17       		.uleb128 0x17
 1282 0151 00       		.byte	0
 1283 0152 00       		.byte	0
 1284 0153 1B       		.uleb128 0x1b
 1285 0154 05       		.uleb128 0x5
 1286 0155 00       		.byte	0
 1287 0156 31       		.uleb128 0x31
 1288 0157 13       		.uleb128 0x13
 1289 0158 00       		.byte	0
 1290 0159 00       		.byte	0
 1291 015a 1C       		.uleb128 0x1c
 1292 015b 898201   		.uleb128 0x4109
 1293 015e 01       		.byte	0x1
 1294 015f 11       		.uleb128 0x11
 1295 0160 01       		.uleb128 0x1
 1296 0161 31       		.uleb128 0x31
 1297 0162 13       		.uleb128 0x13
 1298 0163 00       		.byte	0
 1299 0164 00       		.byte	0
 1300 0165 1D       		.uleb128 0x1d
 1301 0166 8A8201   		.uleb128 0x410a
 1302 0169 00       		.byte	0
 1303 016a 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 53


 1304 016b 18       		.uleb128 0x18
 1305 016c 9142     		.uleb128 0x2111
 1306 016e 18       		.uleb128 0x18
 1307 016f 00       		.byte	0
 1308 0170 00       		.byte	0
 1309 0171 1E       		.uleb128 0x1e
 1310 0172 1D       		.uleb128 0x1d
 1311 0173 01       		.byte	0x1
 1312 0174 31       		.uleb128 0x31
 1313 0175 13       		.uleb128 0x13
 1314 0176 11       		.uleb128 0x11
 1315 0177 01       		.uleb128 0x1
 1316 0178 12       		.uleb128 0x12
 1317 0179 06       		.uleb128 0x6
 1318 017a 58       		.uleb128 0x58
 1319 017b 0B       		.uleb128 0xb
 1320 017c 59       		.uleb128 0x59
 1321 017d 0B       		.uleb128 0xb
 1322 017e 00       		.byte	0
 1323 017f 00       		.byte	0
 1324 0180 1F       		.uleb128 0x1f
 1325 0181 34       		.uleb128 0x34
 1326 0182 00       		.byte	0
 1327 0183 03       		.uleb128 0x3
 1328 0184 0E       		.uleb128 0xe
 1329 0185 3A       		.uleb128 0x3a
 1330 0186 0B       		.uleb128 0xb
 1331 0187 3B       		.uleb128 0x3b
 1332 0188 05       		.uleb128 0x5
 1333 0189 49       		.uleb128 0x49
 1334 018a 13       		.uleb128 0x13
 1335 018b 3F       		.uleb128 0x3f
 1336 018c 19       		.uleb128 0x19
 1337 018d 3C       		.uleb128 0x3c
 1338 018e 19       		.uleb128 0x19
 1339 018f 00       		.byte	0
 1340 0190 00       		.byte	0
 1341 0191 20       		.uleb128 0x20
 1342 0192 2E       		.uleb128 0x2e
 1343 0193 00       		.byte	0
 1344 0194 3F       		.uleb128 0x3f
 1345 0195 19       		.uleb128 0x19
 1346 0196 3C       		.uleb128 0x3c
 1347 0197 19       		.uleb128 0x19
 1348 0198 6E       		.uleb128 0x6e
 1349 0199 0E       		.uleb128 0xe
 1350 019a 03       		.uleb128 0x3
 1351 019b 0E       		.uleb128 0xe
 1352 019c 3A       		.uleb128 0x3a
 1353 019d 0B       		.uleb128 0xb
 1354 019e 3B       		.uleb128 0x3b
 1355 019f 05       		.uleb128 0x5
 1356 01a0 00       		.byte	0
 1357 01a1 00       		.byte	0
 1358 01a2 00       		.byte	0
 1359              		.section	.debug_loc,"",%progbits
 1360              	.Ldebug_loc0:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 54


 1361              	.LLST0:
 1362 0000 02000000 		.4byte	.LVL0
 1363 0004 0A000000 		.4byte	.LVL1
 1364 0008 0600     		.2byte	0x6
 1365 000a 0C       		.byte	0xc
 1366 000b 00001D41 		.4byte	0x411d0000
 1367 000f 9F       		.byte	0x9f
 1368 0010 00000000 		.4byte	0
 1369 0014 00000000 		.4byte	0
 1370              	.LLST1:
 1371 0018 0A000000 		.4byte	.LVL1
 1372 001c 20000000 		.4byte	.LVL3
 1373 0020 0600     		.2byte	0x6
 1374 0022 0C       		.byte	0xc
 1375 0023 00001D41 		.4byte	0x411d0000
 1376 0027 9F       		.byte	0x9f
 1377 0028 00000000 		.4byte	0
 1378 002c 00000000 		.4byte	0
 1379              	.LLST2:
 1380 0030 20000000 		.4byte	.LVL3
 1381 0034 22000000 		.4byte	.LVL4
 1382 0038 0600     		.2byte	0x6
 1383 003a 0C       		.byte	0xc
 1384 003b 00001D41 		.4byte	0x411d0000
 1385 003f 9F       		.byte	0x9f
 1386 0040 00000000 		.4byte	0
 1387 0044 00000000 		.4byte	0
 1388              		.section	.debug_aranges,"",%progbits
 1389 0000 1C000000 		.4byte	0x1c
 1390 0004 0200     		.2byte	0x2
 1391 0006 00000000 		.4byte	.Ldebug_info0
 1392 000a 04       		.byte	0x4
 1393 000b 00       		.byte	0
 1394 000c 0000     		.2byte	0
 1395 000e 0000     		.2byte	0
 1396 0010 00000000 		.4byte	.LFB174
 1397 0014 30000000 		.4byte	.LFE174-.LFB174
 1398 0018 00000000 		.4byte	0
 1399 001c 00000000 		.4byte	0
 1400              		.section	.debug_ranges,"",%progbits
 1401              	.Ldebug_ranges0:
 1402 0000 00000000 		.4byte	.LFB174
 1403 0004 30000000 		.4byte	.LFE174
 1404 0008 00000000 		.4byte	0
 1405 000c 00000000 		.4byte	0
 1406              		.section	.debug_line,"",%progbits
 1407              	.Ldebug_line0:
 1408 0000 23020000 		.section	.debug_str,"MS",%progbits,1
 1408      0200F901 
 1408      00000201 
 1408      FB0E0D00 
 1408      01010101 
 1409              	.LASF104:
 1410 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_INT.c\000"
 1410      72617465 
 1410      645F536F 
 1410      75726365 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 55


 1410      5C50536F 
 1411              	.LASF94:
 1412 0021 6368616E 		.ascii	"channelBase\000"
 1412      6E656C42 
 1412      61736500 
 1413              	.LASF31:
 1414 002d 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 1414      5F524553 
 1414      554C545F 
 1414      4E455756 
 1414      414C5545 
 1415              	.LASF71:
 1416 0042 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 1416      41525F52 
 1416      414E4745 
 1416      5F434F4E 
 1416      445F4F55 
 1417              	.LASF15:
 1418 005c 53414D50 		.ascii	"SAMPLE_TIME01\000"
 1418      4C455F54 
 1418      494D4530 
 1418      3100
 1419              	.LASF74:
 1420 006a 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 1420      41525F49 
 1420      4E54525F 
 1420      454F535F 
 1420      4D41534B 
 1421              	.LASF56:
 1422 007f 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 1422      53574954 
 1422      43485F44 
 1422      535F4354 
 1422      524C00
 1423              	.LASF98:
 1424 0092 636C6B44 		.ascii	"clkDivider\000"
 1424      69766964 
 1424      657200
 1425              	.LASF0:
 1426 009d 73686F72 		.ascii	"short int\000"
 1426      7420696E 
 1426      7400
 1427              	.LASF42:
 1428 00a7 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 1428      455F494E 
 1428      54525F4D 
 1428      41534B00 
 1429              	.LASF11:
 1430 00b7 73697A65 		.ascii	"sizetype\000"
 1430      74797065 
 1430      00
 1431              	.LASF16:
 1432 00c0 53414D50 		.ascii	"SAMPLE_TIME23\000"
 1432      4C455F54 
 1432      494D4532 
 1432      3300
 1433              	.LASF78:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 56


 1434 00ce 73616D70 		.ascii	"sampleCtrl\000"
 1434      6C654374 
 1434      726C00
 1435              	.LASF99:
 1436 00d9 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 1436      434F4E46 
 1436      49475F53 
 1436      54525543 
 1436      5400
 1437              	.LASF91:
 1438 00eb 76726566 		.ascii	"vrefMvValue\000"
 1438      4D765661 
 1438      6C756500 
 1439              	.LASF103:
 1440 00f7 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1440      43313120 
 1440      352E342E 
 1440      31203230 
 1440      31363036 
 1441 012a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 1441      20726576 
 1441      6973696F 
 1441      6E203233 
 1441      37373135 
 1442 015d 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 1442      67202D66 
 1442      66756E63 
 1442      74696F6E 
 1442      2D736563 
 1443              	.LASF81:
 1444 0189 72616E67 		.ascii	"rangeThres\000"
 1444      65546872 
 1444      657300
 1445              	.LASF9:
 1446 0194 5F5F7569 		.ascii	"__uint32_t\000"
 1446      6E743332 
 1446      5F7400
 1447              	.LASF24:
 1448 019f 4348414E 		.ascii	"CHAN_WORK\000"
 1448      5F574F52 
 1448      4B00
 1449              	.LASF17:
 1450 01a9 52414E47 		.ascii	"RANGE_THRES\000"
 1450      455F5448 
 1450      52455300 
 1451              	.LASF26:
 1452 01b5 4348414E 		.ascii	"CHAN_RESULT\000"
 1452      5F524553 
 1452      554C5400 
 1453              	.LASF82:
 1454 01c1 72616E67 		.ascii	"rangeCond\000"
 1454      65436F6E 
 1454      6400
 1455              	.LASF29:
 1456 01cb 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 1456      5F524553 
 1456      554C545F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 57


 1456      55504441 
 1456      54454400 
 1457              	.LASF47:
 1458 01df 52455345 		.ascii	"RESERVED6\000"
 1458      52564544 
 1458      3600
 1459              	.LASF102:
 1460 01e9 4144435F 		.ascii	"ADC_allConfigs\000"
 1460      616C6C43 
 1460      6F6E6669 
 1460      677300
 1461              	.LASF52:
 1462 01f8 52455345 		.ascii	"RESERVED8\000"
 1462      52564544 
 1462      3800
 1463              	.LASF55:
 1464 0202 52455345 		.ascii	"RESERVED9\000"
 1464      52564544 
 1464      3900
 1465              	.LASF46:
 1466 020c 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 1466      4348414E 
 1466      5F434F4E 
 1466      46494700 
 1467              	.LASF41:
 1468 021c 52414E47 		.ascii	"RANGE_INTR_SET\000"
 1468      455F494E 
 1468      54525F53 
 1468      455400
 1469              	.LASF90:
 1470 022b 636F6E66 		.ascii	"configRouting\000"
 1470      6967526F 
 1470      7574696E 
 1470      6700
 1471              	.LASF54:
 1472 0239 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 1472      53574954 
 1472      43485F43 
 1472      4C454152 
 1472      3000
 1473              	.LASF73:
 1474 024b 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 1474      41525F49 
 1474      4E54525F 
 1474      4D41534B 
 1474      5F4E4F4E 
 1475              	.LASF106:
 1476 0261 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 1476      41525F47 
 1476      6574496E 
 1476      74657272 
 1476      75707453 
 1477              	.LASF68:
 1478 027b 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 1478      41525F52 
 1478      414E4745 
 1478      5F434F4E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 58


 1478      445F4245 
 1479              	.LASF6:
 1480 0293 6C6F6E67 		.ascii	"long long int\000"
 1480      206C6F6E 
 1480      6720696E 
 1480      7400
 1481              	.LASF19:
 1482 02a1 4348414E 		.ascii	"CHAN_EN\000"
 1482      5F454E00 
 1483              	.LASF50:
 1484 02a9 53544154 		.ascii	"STATUS\000"
 1484      555300
 1485              	.LASF4:
 1486 02b0 6C6F6E67 		.ascii	"long int\000"
 1486      20696E74 
 1486      00
 1487              	.LASF100:
 1488 02b9 62617365 		.ascii	"base\000"
 1488      00
 1489              	.LASF109:
 1490 02be 696E7472 		.ascii	"intr_status\000"
 1490      5F737461 
 1490      74757300 
 1491              	.LASF64:
 1492 02ca 63686172 		.ascii	"char_t\000"
 1492      5F7400
 1493              	.LASF60:
 1494 02d1 414E415F 		.ascii	"ANA_TRIM0\000"
 1494      5452494D 
 1494      3000
 1495              	.LASF61:
 1496 02db 414E415F 		.ascii	"ANA_TRIM1\000"
 1496      5452494D 
 1496      3100
 1497              	.LASF30:
 1498 02e5 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 1498      5F574F52 
 1498      4B5F4E45 
 1498      5756414C 
 1498      554500
 1499              	.LASF22:
 1500 02f8 4348414E 		.ascii	"CHAN_CONFIG\000"
 1500      5F434F4E 
 1500      46494700 
 1501              	.LASF86:
 1502 0304 73617449 		.ascii	"satIntrMask\000"
 1502      6E74724D 
 1502      61736B00 
 1503              	.LASF35:
 1504 0310 494E5452 		.ascii	"INTR_MASKED\000"
 1504      5F4D4153 
 1504      4B454400 
 1505              	.LASF108:
 1506 031c 4144435F 		.ascii	"ADC_ISR\000"
 1506      49535200 
 1507              	.LASF63:
 1508 0324 6C6F6E67 		.ascii	"long double\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 59


 1508      20646F75 
 1508      626C6500 
 1509              	.LASF97:
 1510 0330 6D697363 		.ascii	"miscConfig\000"
 1510      436F6E66 
 1510      696700
 1511              	.LASF1:
 1512 033b 756E7369 		.ascii	"unsigned char\000"
 1512      676E6564 
 1512      20636861 
 1512      7200
 1513              	.LASF20:
 1514 0349 53544152 		.ascii	"START_CTRL\000"
 1514      545F4354 
 1514      524C00
 1515              	.LASF59:
 1516 0354 52455345 		.ascii	"RESERVED10\000"
 1516      52564544 
 1516      313000
 1517              	.LASF18:
 1518 035f 52414E47 		.ascii	"RANGE_COND\000"
 1518      455F434F 
 1518      4E4400
 1519              	.LASF12:
 1520 036a 4354524C 		.ascii	"CTRL\000"
 1520      00
 1521              	.LASF44:
 1522 036f 494E5452 		.ascii	"INTR_CAUSE\000"
 1522      5F434155 
 1522      534500
 1523              	.LASF2:
 1524 037a 7369676E 		.ascii	"signed char\000"
 1524      65642063 
 1524      68617200 
 1525              	.LASF33:
 1526 0386 494E5452 		.ascii	"INTR_SET\000"
 1526      5F534554 
 1526      00
 1527              	.LASF7:
 1528 038f 6C6F6E67 		.ascii	"long long unsigned int\000"
 1528      206C6F6E 
 1528      6720756E 
 1528      7369676E 
 1528      65642069 
 1529              	.LASF10:
 1530 03a6 75696E74 		.ascii	"uint32_t\000"
 1530      33325F74 
 1530      00
 1531              	.LASF87:
 1532 03af 72616E67 		.ascii	"rangeIntrMask\000"
 1532      65496E74 
 1532      724D6173 
 1532      6B00
 1533              	.LASF89:
 1534 03bd 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 1534      77697463 
 1534      68537143 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 60


 1534      74726C00 
 1535              	.LASF77:
 1536 03cd 6374726C 		.ascii	"ctrl\000"
 1536      00
 1537              	.LASF43:
 1538 03d2 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 1538      455F494E 
 1538      54525F4D 
 1538      41534B45 
 1538      4400
 1539              	.LASF79:
 1540 03e4 73616D70 		.ascii	"sampleTime01\000"
 1540      6C655469 
 1540      6D653031 
 1540      00
 1541              	.LASF53:
 1542 03f1 4D55585F 		.ascii	"MUX_SWITCH0\000"
 1542      53574954 
 1542      43483000 
 1543              	.LASF101:
 1544 03fd 4144435F 		.ascii	"ADC_currentConfig\000"
 1544      63757272 
 1544      656E7443 
 1544      6F6E6669 
 1544      6700
 1545              	.LASF57:
 1546 040f 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 1546      53574954 
 1546      43485F53 
 1546      515F4354 
 1546      524C00
 1547              	.LASF65:
 1548 0422 63686172 		.ascii	"char\000"
 1548      00
 1549              	.LASF88:
 1550 0427 6D757853 		.ascii	"muxSwitch\000"
 1550      77697463 
 1550      6800
 1551              	.LASF70:
 1552 0431 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 1552      41525F52 
 1552      414E4745 
 1552      5F434F4E 
 1552      445F4142 
 1553              	.LASF37:
 1554 0449 53415455 		.ascii	"SATURATE_INTR_SET\000"
 1554      52415445 
 1554      5F494E54 
 1554      525F5345 
 1554      5400
 1555              	.LASF38:
 1556 045b 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 1556      52415445 
 1556      5F494E54 
 1556      525F4D41 
 1556      534B00
 1557              	.LASF3:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 61


 1558 046e 73686F72 		.ascii	"short unsigned int\000"
 1558      7420756E 
 1558      7369676E 
 1558      65642069 
 1558      6E7400
 1559              	.LASF92:
 1560 0481 5F426F6F 		.ascii	"_Bool\000"
 1560      6C00
 1561              	.LASF96:
 1562 0487 6877436F 		.ascii	"hwConfigStc\000"
 1562      6E666967 
 1562      53746300 
 1563              	.LASF32:
 1564 0493 494E5452 		.ascii	"INTR\000"
 1564      00
 1565              	.LASF105:
 1566 0498 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 1566      73657273 
 1566      5C636F64 
 1566      79675C67 
 1566      69745C70 
 1567 04c6 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\CE218138_BLE_Thermometer_RTOS01.c"
 1567      54435F49 
 1567      4D552E63 
 1567      7964736E 
 1567      5C434532 
 1568 04f8 7964736E 		.ascii	"ydsn\000"
 1568      00
 1569              	.LASF28:
 1570 04fd 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 1570      5F574F52 
 1570      4B5F5550 
 1570      44415445 
 1570      4400
 1571              	.LASF76:
 1572 050f 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 1572      41525F49 
 1572      4E54525F 
 1572      46575F43 
 1572      4F4C4C49 
 1573              	.LASF66:
 1574 052d 666C6F61 		.ascii	"float\000"
 1574      7400
 1575              	.LASF21:
 1576 0533 52455345 		.ascii	"RESERVED1\000"
 1576      52564544 
 1576      3100
 1577              	.LASF23:
 1578 053d 52455345 		.ascii	"RESERVED2\000"
 1578      52564544 
 1578      3200
 1579              	.LASF25:
 1580 0547 52455345 		.ascii	"RESERVED3\000"
 1580      52564544 
 1580      3300
 1581              	.LASF27:
 1582 0551 52455345 		.ascii	"RESERVED4\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 62


 1582      52564544 
 1582      3400
 1583              	.LASF45:
 1584 055b 52455345 		.ascii	"RESERVED5\000"
 1584      52564544 
 1584      3500
 1585              	.LASF5:
 1586 0565 6C6F6E67 		.ascii	"long unsigned int\000"
 1586      20756E73 
 1586      69676E65 
 1586      6420696E 
 1586      7400
 1587              	.LASF49:
 1588 0577 52455345 		.ascii	"RESERVED7\000"
 1588      52564544 
 1588      3700
 1589              	.LASF48:
 1590 0581 494E4A5F 		.ascii	"INJ_RESULT\000"
 1590      52455355 
 1590      4C5400
 1591              	.LASF67:
 1592 058c 646F7562 		.ascii	"double\000"
 1592      6C6500
 1593              	.LASF62:
 1594 0593 5341525F 		.ascii	"SAR_Type\000"
 1594      54797065 
 1594      00
 1595              	.LASF58:
 1596 059c 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 1596      53574954 
 1596      43485F53 
 1596      54415455 
 1596      5300
 1597              	.LASF40:
 1598 05ae 52414E47 		.ascii	"RANGE_INTR\000"
 1598      455F494E 
 1598      545200
 1599              	.LASF69:
 1600 05b9 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 1600      41525F52 
 1600      414E4745 
 1600      5F434F4E 
 1600      445F494E 
 1601              	.LASF75:
 1602 05d2 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 1602      41525F49 
 1602      4E54525F 
 1602      4F564552 
 1602      464C4F57 
 1603              	.LASF84:
 1604 05ec 6368616E 		.ascii	"chanConfig\000"
 1604      436F6E66 
 1604      696700
 1605              	.LASF93:
 1606 05f7 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 1606      74635F73 
 1606      61725F63 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 63


 1606      6F6E6669 
 1606      675F7400 
 1607              	.LASF83:
 1608 060b 6368616E 		.ascii	"chanEn\000"
 1608      456E00
 1609              	.LASF95:
 1610 0612 6E756D43 		.ascii	"numChannels\000"
 1610      68616E6E 
 1610      656C7300 
 1611              	.LASF36:
 1612 061e 53415455 		.ascii	"SATURATE_INTR\000"
 1612      52415445 
 1612      5F494E54 
 1612      5200
 1613              	.LASF14:
 1614 062c 52455345 		.ascii	"RESERVED\000"
 1614      52564544 
 1614      00
 1615              	.LASF13:
 1616 0635 53414D50 		.ascii	"SAMPLE_CTRL\000"
 1616      4C455F43 
 1616      54524C00 
 1617              	.LASF80:
 1618 0641 73616D70 		.ascii	"sampleTime23\000"
 1618      6C655469 
 1618      6D653233 
 1618      00
 1619              	.LASF34:
 1620 064e 494E5452 		.ascii	"INTR_MASK\000"
 1620      5F4D4153 
 1620      4B00
 1621              	.LASF8:
 1622 0658 756E7369 		.ascii	"unsigned int\000"
 1622      676E6564 
 1622      20696E74 
 1622      00
 1623              	.LASF107:
 1624 0665 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 1624      41525F43 
 1624      6C656172 
 1624      496E7465 
 1624      72727570 
 1625              	.LASF110:
 1626 067b 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 1626      79734C69 
 1626      625F4173 
 1626      73657274 
 1626      4661696C 
 1627              	.LASF39:
 1628 0692 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 1628      52415445 
 1628      5F494E54 
 1628      525F4D41 
 1628      534B4544 
 1629              	.LASF51:
 1630 06a7 4156475F 		.ascii	"AVG_STAT\000"
 1630      53544154 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccTG2Yhd.s 			page 64


 1630      00
 1631              	.LASF85:
 1632 06b0 696E7472 		.ascii	"intrMask\000"
 1632      4D61736B 
 1632      00
 1633              	.LASF72:
 1634 06b9 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 1634      6E5F7361 
 1634      725F7261 
 1634      6E67655F 
 1634      64657465 
 1635              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
