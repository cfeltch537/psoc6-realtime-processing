ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_InitConfig,"ax",%progbits
  20              		.align	2
  21              		.global	ADC_InitConfig
  22              		.code	16
  23              		.thumb_func
  24              		.type	ADC_InitConfig, %function
  25              	ADC_InitConfig:
  26              	.LFB178:
  27              		.file 1 "Generated_Source\\PSoC6\\ADC.c"
   1:Generated_Source\PSoC6/ADC.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC.c **** * \file     ADC.c
   3:Generated_Source\PSoC6/ADC.c **** * \version  2.10
   4:Generated_Source\PSoC6/ADC.c **** *
   5:Generated_Source\PSoC6/ADC.c **** * \brief
   6:Generated_Source\PSoC6/ADC.c **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC6/ADC.c **** *
   8:Generated_Source\PSoC6/ADC.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC.c **** * \copyright
  10:Generated_Source\PSoC6/ADC.c **** * (c) 2017, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC.c **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC.c **** * liability arising out of the application or use of the Software or any
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 2


  31:Generated_Source\PSoC6/ADC.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC.c **** #include "ADC.h"
  40:Generated_Source\PSoC6/ADC.c **** #include <sysint/cy_sysint.h>
  41:Generated_Source\PSoC6/ADC.c **** #include <cyfitter_sysint_cfg.h>
  42:Generated_Source\PSoC6/ADC.c **** 
  43:Generated_Source\PSoC6/ADC.c **** uint8_t ADC_initVar = 0u;
  44:Generated_Source\PSoC6/ADC.c **** uint8_t ADC_selected = 0u; /* 0 if no configuration selected. 1 otherwise. */
  45:Generated_Source\PSoC6/ADC.c **** uint32_t ADC_currentConfig = 0u; /* Currently active configuration */
  46:Generated_Source\PSoC6/ADC.c **** 
  47:Generated_Source\PSoC6/ADC.c **** /*******************************************************************************
  48:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_Start
  49:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//**
  50:Generated_Source\PSoC6/ADC.c **** *
  51:Generated_Source\PSoC6/ADC.c **** * \brief Performs all required initialization for this component and enables the
  52:Generated_Source\PSoC6/ADC.c **** *  power. The power will be set to the appropriate power based on the clock
  53:Generated_Source\PSoC6/ADC.c **** *  frequency.
  54:Generated_Source\PSoC6/ADC.c **** *
  55:Generated_Source\PSoC6/ADC.c **** * \param None
  56:Generated_Source\PSoC6/ADC.c **** *
  57:Generated_Source\PSoC6/ADC.c **** * \return None
  58:Generated_Source\PSoC6/ADC.c **** *
  59:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
  60:Generated_Source\PSoC6/ADC.c **** *
  61:Generated_Source\PSoC6/ADC.c **** * \globalvars
  62:Generated_Source\PSoC6/ADC.c **** *  \ref ADC_initVar (RW)
  63:Generated_Source\PSoC6/ADC.c **** *
  64:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
  65:Generated_Source\PSoC6/ADC.c **** void ADC_Start(void)
  66:Generated_Source\PSoC6/ADC.c **** {
  67:Generated_Source\PSoC6/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
  68:Generated_Source\PSoC6/ADC.c ****     {
  69:Generated_Source\PSoC6/ADC.c ****         ADC_Init();
  70:Generated_Source\PSoC6/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
  71:Generated_Source\PSoC6/ADC.c ****     }
  72:Generated_Source\PSoC6/ADC.c **** 
  73:Generated_Source\PSoC6/ADC.c ****     ADC_Enable();
  74:Generated_Source\PSoC6/ADC.c **** 
  75:Generated_Source\PSoC6/ADC.c ****     return;
  76:Generated_Source\PSoC6/ADC.c **** }
  77:Generated_Source\PSoC6/ADC.c **** 
  78:Generated_Source\PSoC6/ADC.c **** /*******************************************************************************
  79:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_StartEx
  80:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//**
  81:Generated_Source\PSoC6/ADC.c **** *
  82:Generated_Source\PSoC6/ADC.c **** * \brief This function starts the ADC and sets the Interrupt
  83:Generated_Source\PSoC6/ADC.c **** * Service Routine to the provided address using the
  84:Generated_Source\PSoC6/ADC.c **** * Cy_SysInt_Init() function. Refer to the Interrupt component
  85:Generated_Source\PSoC6/ADC.c **** * datasheet for more information on the Cy_SysInt_Init() function.
  86:Generated_Source\PSoC6/ADC.c **** *
  87:Generated_Source\PSoC6/ADC.c **** * \param address This is the address of a user defined function for the ISR.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 3


  88:Generated_Source\PSoC6/ADC.c **** *
  89:Generated_Source\PSoC6/ADC.c **** * \return None
  90:Generated_Source\PSoC6/ADC.c **** *
  91:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
  92:Generated_Source\PSoC6/ADC.c **** *
  93:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC6/ADC.c **** void ADC_StartEx(cy_israddress userIsr)
  95:Generated_Source\PSoC6/ADC.c **** {
  96:Generated_Source\PSoC6/ADC.c ****     ADC_Start();
  97:Generated_Source\PSoC6/ADC.c **** 
  98:Generated_Source\PSoC6/ADC.c ****     /* Interrupt core assignment will be up to the user. Initialize and enable the interrupt*/
  99:Generated_Source\PSoC6/ADC.c ****     #ifdef ADC_IRQ__INTC_CORTEXM4_ASSIGNED
 100:Generated_Source\PSoC6/ADC.c ****     #if (CY_CPU_CORTEX_M4)
 101:Generated_Source\PSoC6/ADC.c ****         (void)Cy_SysInt_Init(&ADC_IRQ_cfg, userIsr);
 102:Generated_Source\PSoC6/ADC.c ****         NVIC_EnableIRQ(ADC_IRQ_cfg.intrSrc);
 103:Generated_Source\PSoC6/ADC.c ****     #endif
 104:Generated_Source\PSoC6/ADC.c ****     #endif
 105:Generated_Source\PSoC6/ADC.c **** 
 106:Generated_Source\PSoC6/ADC.c ****     #ifdef ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 107:Generated_Source\PSoC6/ADC.c ****     #if (CY_CPU_CORTEX_M0P)
 108:Generated_Source\PSoC6/ADC.c ****         (void)Cy_SysInt_Init(&ADC_IRQ_cfg, userIsr);
 109:Generated_Source\PSoC6/ADC.c ****         NVIC_EnableIRQ(ADC_IRQ_cfg.intrSrc);
 110:Generated_Source\PSoC6/ADC.c ****     #endif
 111:Generated_Source\PSoC6/ADC.c ****     #endif
 112:Generated_Source\PSoC6/ADC.c **** 
 113:Generated_Source\PSoC6/ADC.c **** }
 114:Generated_Source\PSoC6/ADC.c **** 
 115:Generated_Source\PSoC6/ADC.c **** /* ****************************************************************************
 116:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_InitConfig
 117:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//*
 118:Generated_Source\PSoC6/ADC.c **** *
 119:Generated_Source\PSoC6/ADC.c **** * \brief Configures all of the registers for a given configuration for scanning.
 120:Generated_Source\PSoC6/ADC.c **** *
 121:Generated_Source\PSoC6/ADC.c **** * \param scan Number of scan defined in the ADC.
 122:Generated_Source\PSoC6/ADC.c **** *
 123:Generated_Source\PSoC6/ADC.c **** * \return None
 124:Generated_Source\PSoC6/ADC.c **** *
 125:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
 126:Generated_Source\PSoC6/ADC.c **** *
 127:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 128:Generated_Source\PSoC6/ADC.c **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config)
 129:Generated_Source\PSoC6/ADC.c **** {
  28              		.loc 1 129 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0500     		movs	r5, r0
  40              	.LVL1:
  41              	.LBB32:
  42              	.LBB33:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 4


  43              	.LBB34:
  44              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sysclk/cy_sysclk.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \file cy_sysclk.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \version 1.10.1
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Provides an API declaration of the sysclk driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Copyright 2016-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk System Clock (SysClk)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The System Clock (SysClk) driver contains the API for configuring system and
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * peripheral clocks. Firmware uses the API to configure , enable, or disable
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * a clock.
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * 
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The clock system includes a variety of resources that can vary per device, including:
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Internal clock sources such as internal oscillators
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - External clock sources such as crystal oscillators or a signal on an I/O pin
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * - Generated clocks such as an FLL, a PLL, and peripheral clocks
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Consult the Technical Reference Manual for your device for details of the 
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock system.
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The PDL defines clock system capabilities in:\n
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices\<family\>/<series\>/include\<series\>_config.h. (E.g.
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * devices/psoc6/psoc63/include/psoc63_config.h). 
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * User-configurable clock speeds are defined in the file system_<series>.h.
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * As an illustration of the clocking system, the following diagram shows the
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * PSoC 63 series clock tree. The actual tree may vary depending on the device series.
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * ![](sysclk_tree.png)
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The sysclk driver supports multiple peripheral clocks, as well as the fast 
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock, slow clock, backup domain clock, timer clock, and pump clock. The API
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for any given clock contains the functions to manage that clock. Functions
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for clock measurement and trimming are also provided.
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_configuration Configuration Considerations
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The availability of clock functions depend on the availability of the chip
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * resources that support those functions. Consult the device TRM before
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * attempting to use these functions.
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * LPActive and LPSleep power modes limit the maximum clock frequency allowed
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * on the device. Refer to the SysPm driver and the TRM for details.
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_more_information More Information
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the technical reference manual (TRM) and the device datasheet.
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_MISRA MISRA-C Compliance
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 5


  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>MISRA Rule</th>
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Class (Required/Advisory)</th>
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Rule Description</th>
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <th>Description of Deviation(s)</th>
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.2</td>
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No reliance on undefined behavior.</td>
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Calculation of an absolute value in the FLL and PLL configuration.</td>
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>5.6</td>
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No identifier in one name space should have the same spelling as an identifier in another
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         exception of structure member and union member names.</td>
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The "mode" and "retval" are used as a structure/union member they are a label, tag or ord
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         identifier.</td>
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.1</td>
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value of an expression of integer type shall not be implicitly converted to a differe
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if the expression is complex.</td>
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Use of a Cypress defined macro to access memory mapped objects.
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         Use of a Cypress defined macro to divide with rounding.</td>
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.2</td>
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value of an expression of floating type shall not be implicitly converted to a differ
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         a) it is not a conversion to a wider floating type, or
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         b) the expression is complex, or
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         c) the expression is a function argument, or
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         d) the expression is a return expression.</td>
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The operands of this relational operator are expressions of different "essential type" ca
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         (enum and unsigned).</td>
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.3</td>
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite integer expression is being cast to a wider type.</td>
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Use of a Cypress defined macro to access memory-mapped objects. Calculating the clock par
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.4</td>
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A composite floating point expression is being cast to double, or unsigned.</td>
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Use of the C library sqrt() function. Casting a floating-point calculation result to an i
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>10.5</td>
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value of an expression of integer type shall not be implicitly converted to a differe
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         if the expression is complex.</td>
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 6


 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Use of a Cypress defined macro to access memory-mapped objects.</td>
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>12.1</td>
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A</td>
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Extra parentheses recommended.</td>
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Ternary operator uses constants; extra parentheses not needed.</td>
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>12.2</td>
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A</td>
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The value of an expression must be the same under any order of evaluation that the standa
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The "rtnval" is modified more than once between the sequence points - the evaluation orde
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>12.4</td>
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>A</td>
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The right hand operand of a logical && or || operator shall not contain side effects.</td
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>No side effect in this case.</td>
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>13.4</td>
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The controlling expression of a for statement shall not contain any objects of floating t
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Scanning through a list of floating point values.</td>
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>16.7</td>
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The object addressed by the pointer parameter is not modified and so the pointer could be
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         type 'pointer to const'.</td>
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The callback function for system power management (SysPm) must be of generic callback typ
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         contains non-const pointer parameter.</td>
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>18.4</td>
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Unions shall not be used.</td>
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The clock path in \ref Cy_SysClk_PeriphGetFrequency() uses either FLL or PLL.</td>
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>19.4</td>
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>R</td>
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Macros shall only expand to a limited set of constructs.</td>
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The macro CY_SYSCLK_CLR_SET uses a concatenate operation,
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *         so one of the macro parameters cannot be enclosed in parentheses.</td>
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \section group_sysclk_changelog Changelog
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * <table class="doxtable">
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.10.1</td>
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Renamed Power Management section to Low Power Callback section</td>
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Documentation update and clarification</td>
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 7


 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td rowspan="5">1.10</td>
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated FLL parameter calculation</td>
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support low frequency sources</td>
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Added Cy_SysClk_PiloSetTrim() and Cy_SysclkPiloGetTrim() functions</td>
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Support PILO manual trims</td>
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Made Cy_SysClk_FllLostLock() function dependent on SRSS v1</td>
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Feature is not supported in SRSS v1</td>
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Updated Cy_SysClk_DeepSleepCallback() to save/restore both FLL and PLL settings</td>
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>The function should return when the lock is established or a timeout has occurred</td>
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>General documentation updates</td>
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   <tr>
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>1.0</td>
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td>Initial version</td>
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     <td></td>
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   </tr>
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * </table>
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_macros           Macros
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_enums           General Enumerated Types
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_returns         Function return values
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_eco             External Crystal Oscillator (ECO)
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The External Crystal Oscillator (ECO) is a clock source that consists
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of an oscillator circuit that drives an external crystal through its
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   dedicated ECO pins. The ECO is a source clock that can be used to
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source one or more clock paths (Refer to \ref group_sysclk_path_src).
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These clock paths can then source the processors and peripherals in
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the device.
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ECO relies on the presence of an external crystal. The pins
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connected to this crystal must be configured to operate in analog
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   drive mode with HSIOM connection set to GPIO control (HSIOM_SEL_GPIO).
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_eco_funcs       Functions
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_path_src           Clock Path Source
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Clock paths are a series of multiplexers that allow a source clock
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to drive multiple clocking resources down the chain. These paths are
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   used for active domain clocks that are not operational during chip 
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep, hibernate and off modes. Illustrated below is a diagram
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 8


 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   of the clock paths for the PSoC 63 series, showing the first three
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   clock paths. The source clocks for these paths are highlighted in
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the red box.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - IMO: 8 MHz Internal Main Oscillator (Default)
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - EXTCLK: External clock (signal brought in through dedicated pins)
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ECO: External Crystal Oscillator (requires external crystal on dedicated pins)
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - ALTHF: Select on-chip signals (e.g. BLE ECO)
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - Digital Signal (DSI): Digital signal from a UDB source
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some clock paths such as path 0 and path 1 have additional resources
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   that can be utilized to provide a higher frequency clock. For example, 
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 0 source clock can be used as the reference clock for the FLL and 
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   path 1 source clock can be used as the reference clock for the PLL.
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_path_source.png)
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The PDL driver cannot configure a clock path to use Digital Signal
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Interconnect (DSI) outputs as sources. This must be done through DSI
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   configuration tool such as PSoC Creator.
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_funcs     Functions
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_path_src_enums     Enumerated Types
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_fll             Frequency Locked Loop (FLL)
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is a clock generation circuit that can be used to produce a
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   some characteristics of the reference clock such as the accuracy of the
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   source. However other attributes such as the clock phase are not preserved.
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The FLL is similar in purpose to a (Phase locked loop) PLL but they are
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   not equivalent.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL starts up (locks) faster and consumes less current than the PLL.
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL accepts a source clock with lower frequency than PLL, such as the WCO (32 KHz). 
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The FLL does not lock phase. The hardware consist of a counter with a
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     current-controlled oscillator (CCO). The counter counts the number of output
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     clock edges in a reference clock period and adjusts the CCO until the
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     expected ratio is achieved (locked). After initial lock, the CCO is
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     adjusted dynamically to keep the ratio within tolerance. The lock tolerance
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *     is user-adjustable.
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fll.png)
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the FLL. The first
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_FllConfigure() function, which calculates the 
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the FLL at run-time. This may be necessary for dynamic
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the FLL. However this method is slow as it needs to perform 
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the FLL. The other model is to call 
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_FllManualConfigure() function with pre-calculated parameter values. 
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the FLL calculation equations.
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_funcs       Functions
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_structs     Data Structures
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_fll_enums       Enumerated Types
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 9


 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pll             Phase Locked Loop (PLL)
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PLL is a clock generation circuit that can be used to produce a
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   higher frequency clock from a reference clock. The output clock exhibits
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   characteristics of the reference clock such as the accuracy of the source
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and its phase. The PLL is similar in purpose to a (Frequency locked loop) FLL
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   but they are not equivalent.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - They may have different frequency ranges.
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL starts up more slowly and consumes more current than the FLL.
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The PLL requires a higher frequency source clock than PLL. 
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_pll.png)
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver supports two models for configuring the PLL. The first
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   model is to call the Cy_SysClk_PllConfigure() function, which calculates the 
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   necessary parameters for the PLL at run-time. This may be necessary for dynamic
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   run-time changes to the PLL. However this method is slow as it needs to perform 
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the calculation before configuring the PLL. The other model is to call 
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PllManualConfigure() function with pre-calculated parameter values. 
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This method is faster but requires prior knowledge of the necessary parameters.
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Consult the device TRM for the PLL calculation equations.
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_funcs       Functions
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pll_structs     Data Structures
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ilo             Internal Low-Speed Oscillator (ILO)
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The ILO operates with no external components and outputs a stable clock at
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   32.768 kHz nominal. The ILO is relatively low power and low accuracy. It is 
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   available in all power modes and can be used as a source for the Backup domain clock.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To ensure the ILO remains active in Hibernate mode, and across power-on-reset
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (POR) or brown out detect (BOD), firmware must call Cy_SysClk_IloHibernateOn(). 
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Additionally, the ILO clock can be trimmed to +/- 1.5% of nominal frequency using
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a higher precision clock source. Use the \ref group_sysclk_calclk API to measure 
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the current ILO frequency before trimming.
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note The ILO is always the source clock for the \ref group_wdt. Therefore:
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - The WDT must be unlocked when making an ILO function call in the PDL
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - It is recommended to always have the ILO enabled
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_ilo_funcs       Functions
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pilo            Precision Internal Low-Speed Oscillator (PILO)
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PILO provides a higher accuracy 32.768 kHz clock than the \ref group_sysclk_ilo "ILO".
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   When periodically calibrated using a high-accuracy clock such as the
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_eco "ECO", the PILO can achieve 250 ppm accuracy of nominal frequency.
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO is capable of operating in device Active, Sleep and Deep-Sleep power modes. 
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is not available in Hibernate mode.
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The PILO can be used as a source for the \ref group_sysclk_clk_lf. However,
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because PILO is disabled in Hibernate mode, RTC timers cannot operate in this mode
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   when clocked using the PILO. Instead, either the \ref group_sysclk_ilo "ILO" or
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO" should be used when hibernate operation is required. 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 10


 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Periodic calibration to a high-accuracy clock (such as ECO) is required to
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   maintain accuracy. The application should use the functions described in the 
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_calclk API to measure the current PILO frequency before trimming.
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pilo_funcs      Functions
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_calclk          Clock Measurement
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions measure the frequency of a specified clock relative to a
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   reference clock. They are typically called in the following order:
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Specify the measured clock, the count, and the reference clock
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Start the counters
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Wait for the measurement counter to finish counting
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4. Retrieve the measured frequency
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note These functions may also be used as part of a clock trimming
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   process. Refer to the \ref group_sysclk_trim "Clock Trim" API.
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_funcs    Functions
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_calclk_enums    Enumerated Types
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_trim            Clock Trim (ILO, PILO)
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   These functions perform a single trim operation on the ILO or PILO. Each
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   function's parameter is the actual frequency of the clock. To measure the
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   frequency, use the functions described in the \ref group_sysclk_calclk API.
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   To trim the clock as close as possible to the target frequency, multiple
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   calls to the trim function may be needed. A typical usage example is to:
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   1. Call the clock measurement functions to get the actual frequency of the clock
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   2. Call the trim function, passing in the measured frequency
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   3. Repeat the above until the trim function reports that the clock is trimmed to within limits.
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_trim_funcs      Functions
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_pm              Low Power Callback
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Entering and exiting low power modes require compatible clock configurations
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   to be set before entering low power and restored upon wake-up and exit. The
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SysClk driver provides a Cy_SysClk_DeepSleepCallback() function to support
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   deep-sleep mode entry. 
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This function can be called either by itself before initiating low-power mode
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   entry or it can be used in conjunction with the SysPm driver as a registered 
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   callback. To do so, register this function as a callback before calling 
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysPm_DeepSleep(). Specify \ref CY_SYSPM_DEEPSLEEP as the callback type, 
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and call Cy_SysPm_RegisterCallback().
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \note If the FLL or PLL source is the ECO, this function must be called.
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_pm_funcs        Functions
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_wco             Watch Crystal Oscillator (WCO)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 11


 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO is a highly accurate 32.768 kHz clock source capable of operating
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   in all power modes (excluding the Off mode). It is the primary clock source for
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the backup domain clock, which is used by the real-time clock (RTC). The 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   WCO can also be used as a source for the low-frequency clock to support other
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   low power mode peripherals.
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_backup.png)
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The WCO requires the configuration of the dedicated WCO pins (SRSS_WCO_IN_PIN,
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN). These must be configured as Analog Hi-Z drive modes and the
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   HSIOM selection set to GPIO. The WCO can also be used in bypass mode, where
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   an external 32.768 kHz square wave is brought in directly through the 
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   SRSS_WCO_OUT_PIN pin.
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a built-in clock supervisor (CSV) in the WCO. The clock
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   supervisor detects if the WCO has been lost; that is, the WCO is no longer 
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   producing clock pulses. The CSV does this by checking to ensure there is at 
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   least one WCO clock pulse within a certain time window. The ILO or PILO can be
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the supervising clock. Firmware can configure the CSV to trigger a fault,
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a reset, or both after specified cycles of the supervising clock.
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_funcs       Functions
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_structs     Data Structures
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_wco_enums       Enumerated Types
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_hf          High-Frequency Clocks
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Multiple high frequency clocks (CLK_HF) are available in the device. For example,
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   PSoC 63 series has five high-frequency root clocks. Each CLK_HF has a particular
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   connection and chip-specific destination on the device.
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |Name     |Description                                             |
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |:--------|:-------------------------------------------------------|
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[0]| Root clock for CPUs, PERI, and AHB infrastructure      |
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[1]| Root clock for the PDM/PCM and I2S audio subsystem     |
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[2]| Root clock for the Serial Memory Interface subsystem   |
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[3]| Root clock for USB communications                      |
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   |CLK_HF[4]| Clock output on clk_ext pin (when used as an output)   |
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf.png)
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   High frequency clocks are sourced by path clocks, which should be configured
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   first. An exception to this rule is CLK_HF[0], which cannot be disabled. 
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This divided clock drives the core processors and the peripherals in the system.
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   In order to update its clock source, CLK_HF[0] source must be selected without
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   disabling the clock.
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_hf_dist.png)
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Some devices support a clock supervisor (CSV) for each root clock. These
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can detect frequency loss, or monitor that the clock frequency stays within
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a specified range. The possible supervising clocks are IMO, ECO, or ALTHF. 
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Loss detection and frequency monitoring can be enabled or disabled independently.
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each has its own programmable action that occurs on detection of an error.
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_funcs    Functions
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 12


 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_structs  Data Structures
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_hf_enums    Enumerated Types
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_fast        Fast Clock
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The fast clock drives the "fast" processor (e.g. Cortex-M4 processor in PSoC 6).
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is sourced by CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks").
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   A divider value of 1~256 can be used to further divide the CLK_HF[0] to a
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   desired clock speed for the processor.
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_fast.png)
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_fast_funcs  Functions
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peri        Peripheral Clock
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The peripheral clock is a divided clock of CLK_HF0 (\ref group_sysclk_clk_hf "HF Clocks").
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   It is the source clock for the \ref group_sysclk_clk_slow, and most active domain
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   peripheral clocks (\ref group_sysclk_clk_peripheral). A divider value of 1~256 
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   can be used to further divide the CLK_HF[0] to a desired clock speed for the peripherals.
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri.png)
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peri_funcs  Functions
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_peripheral  Peripherals Clock Dividers
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   There are multiple peripheral clock dividers that, in effect, create 
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   multiple separate peripheral clocks. The available dividers vary per device 
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   series. As an example, for the PSoC 63 series there are 29 dividers:
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - eight 8-bit dividers
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - sixteen 16-bit dividers
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - four fractional 16.5-bit dividers (16 integer bits, 5 fractional bits)
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   - one fractional 24.5-bit divider (24 integer bits, 5 fractional bits)
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The five fractional bits supports further precision in 1/32nd increments. For
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   example, a divider with an integer value of 3 and a fractional value of
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   4 (4/32) results in a divider of 3.125. Fractional dividers are useful when
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a high-precision clock is required, for example, for a UART/SPI serial
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   interface.
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_peri_divs.png)
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Each peripheral can connect to any one of the programmable dividers. A
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   particular peripheral clock divider can drive multiple peripherals.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The SysClk driver also supports phase aligning two peripheral clock dividers using
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Cy_SysClk_PeriphEnablePhaseAlignDivider(). Alignment works for both integer
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and fractional dividers. The divider to which a second divider is aligned
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   must already be enabled.
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_funcs Functions
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_peripheral_enums Enumerated Types
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_slow        Slow Clock
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 13


 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The slow clock is the source clock for the "slow" processor (e.g. Cortex-M0+ in PSoC 6).
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock is a divided version of the \ref group_sysclk_clk_peri, which in turn is 
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   a divided version of CLK_HF[0] (\ref group_sysclk_clk_hf "HF Clocks"). A divider 
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   value of 1~256 can be used to further divide the Peri clock to a desired clock speed
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for the processor.
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_slow.png)
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_slow_funcs  Functions
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_lf          Low-Frequency Clock
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock is the source clock for the \ref group_mcwdt
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   and can be the source clock for \ref group_sysclk_clk_bak, which drives the
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_rtc.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The low-frequency clock has three possible source clocks:
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", and
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO".
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   ![](sysclk_lf.png)
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_funcs    Functions
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_lf_enums    Enumerated Types
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_timer       Timer Clock
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock can be a source for the alternative clock driving 
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   the \ref group_arm_system_timer. It can also be used as a reference clock 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   for a counter in the \ref group_energy_profiler "Energy Profiler".
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The timer clock is a divided clock of either the IMO or CLK_HF[0]
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_clk_hf "HF Clocks").
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_funcs Functions
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_timer_enums Enumerated Types
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_pump        Pump Clock
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The pump clock is a clock source used to provide analog precision in low voltage
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   applications. Depedning on the usage scenario, it may be required to drive the
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   internal voltage pump for the Continuous Time Block mini (CTBm) in the analog 
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   subsystem. The pump clock is a divided clock of one of the clock paths 
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   (\ref group_sysclk_path_src).
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_funcs  Functions
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_pump_enums  Enumerated Types
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_clk_bak         Backup Domain Clock
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   The backup domain clock drives the \ref group_rtc.
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   This clock has two possible source clocks: \ref group_sysclk_wco "WCO"
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   or the \ref group_sysclk_clk_lf. In turn the low frequency clock is sourced by
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_ilo "ILO", \ref group_sysclk_pilo "PILO", or
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \ref group_sysclk_wco "WCO". Typically the ILO is not suitable as an RTC source,
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   because of its low accuracy. However the ILO does operate in hibernate mode and
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   may be used as an alterative to the WCO with a tradeoff in precision.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 14


 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_funcs   Functions
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   \defgroup group_sysclk_clk_bak_enums   Enumerated Types
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \}
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if !defined(__CY_SYSCLK_H__)
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define __CY_SYSCLK_H__
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "cy_device_headers.h"
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "syslib/cy_syslib.h"
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include "syspm/cy_syspm.h"
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #include <stdbool.h>
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if defined(__cplusplus)
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** extern "C" {
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* __cplusplus */
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver major version */
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MAJOR   1
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Driver minor version */
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define  CY_SYSCLK_DRV_VERSION_MINOR   10
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Sysclk driver identifier */
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ID   CY_PDL_DRV_ID(0x12U)
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_returns
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines general-purpose function return values. */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_SUCCESS       = 0u, /**< Command completed with no errors */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_BAD_PARAM     = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 1u), /**< Invalid function inpu
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_TIMEOUT       = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 2u), /**< Timeout occurred */
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_INVALID_STATE = (CY_SYSCLK_ID | CY_PDL_STATUS_ERROR | 3u)  /**< Clock is in an invali
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_sysclk_status_t;
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_returns */
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \cond INTERNAL */
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Generates shorter code for setting register bitfields */
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_CLR_SET(reg, field, value) (reg) = _CLR_SET_FLD32U((reg), field, (value))
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding to the nearest integer. a and b must have the same sign. */
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUND(a, b) (((a) + ((b) / 2u)) / (b))
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* Calculate a / b with rounding up if remainder != 0. a and b must both be positive. */
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_DIV_ROUNDUP(a, b) ((((a) - 1u) / (b)) + 1u)
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \endcond */
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ECO SECTION    ============================ */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 15


 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_macros
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \defgroup group_sysclk_ecostatus ECO status
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Constants used for expressing ECO status.
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_AMPLITUDE  0UL /**< \brief ECO does not have sufficient amplitude */
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_INACCURATE 1UL /**< \brief ECO may not be meeting accuracy and duty cycle
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #define CY_SYSCLK_ECOSTAT_STABLE     2UL /**< \brief ECO has fully stabilized */
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} */
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_macros */
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_eco_funcs
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoConfigure(uint32_t freq, uint32_t cLoad, uint32_t esr, uint32_t 
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_EcoEnable(uint32_t timeoutus);
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void);
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void);
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoDisable
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the external crystal oscillator (ECO). This function should not be
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * called if the ECO is sourcing clkHf[0].
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_EcoDisable
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_EcoDisable(void)
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_ECO_CONFIG &= ~_VAL2FLD(SRSS_CLK_ECO_CONFIG_ECO_EN, 1u); /* 0 = disable */
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_EcoGetStatus
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current status of the external crystal oscillator (ECO).
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_AMPLITUDE = ECO does not have sufficient amplitude<br>
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_INACCURATE = ECO has sufficient amplitude but may not be meeting accuracy and d
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_ECOSTAT_STABLE = ECO has fully stabilized
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_EcoGetStatus
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 16


 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_EcoGetStatus(void)
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retval = (SRSS->CLK_ECO_STATUS & 3ul); /* bit 0 = ECO_OK, bit 1 = ECO_READY */
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* if ECO is not ready, just report the ECO_OK bit. Otherwise report 2 = ECO ready */
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (((retval & 2ul) == 0) ? retval : 2ul);
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_eco_funcs */
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    INPUT MULTIPLEXER SECTION    ===================== */
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_enums
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *   Input multiplexer clock sources
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_IMO    =     0u, /**< Select the IMO as the output of the path mux */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_EXT    =     1u, /**< Select the EXT as the output of the path mux */
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ECO    =     2u, /**< Select the ECO as the output of the path mux */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTHF  =     3u, /**< Select the ALTHF as the output of the path mux */
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSIMUX =     4u, /**< Select the DSI MUX output as the output of the path 
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_DSI    = 0x100u, /**< Select a DSI signal (0 - 15) as the output of the DS
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ILO    = 0x110u, /**< Select the ILO (16) as the output of the DSI mux and
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_WCO    = 0x111u, /**< Select the WCO (17) as the output of the DSI mux and
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_ALTLF  = 0x112u, /**< Select the ALTLF (18) as the output of the DSI mux a
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKPATH_IN_PILO   = 0x113u  /**< Select the PILO (19) as the output of the DSI mux an
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkpath_in_sources_t;
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_enums */
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_path_src_funcs
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_ClkPathSetSource(uint32_t clkPath, cy_en_clkpath_in_sources_t sourc
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_clkpath_in_sources_t Cy_SysClk_ClkPathGetSource(uint32_t clkPath);
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_path_src_funcs */
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    FLL SECTION    ============================ */
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_enums
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL and PLL output mode.
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_FLL_CONFIG3 and CLK_PLL_CONFIG0, bits BYPASS_SEL.
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 17


 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO   = 0u, /**< Output FLL/PLL input source when not locked, and FLL/
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_AUTO1  = 1u, /**< Same as AUTO */
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_INPUT  = 2u, /**< Output FLL/PLL input source regardless of lock status
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLLPLL_OUTPUT_OUTPUT = 3u  /**< Output FLL/PLL output regardless of lock status. This
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_pll_output_mode_t;
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** FLL current-controlled oscillator (CCO) frequency ranges.
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See register CLK_FLL_CONFIG4, bits CCO_RANGE.
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE0, /**< Target frequency is in range  48 -  64 MHz. */
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE1, /**< Target frequency is in range  64 -  85 MHz. */
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE2, /**< Target frequency is in range  85 - 113 MHz. */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE3, /**< Target frequency is in range 113 - 150 MHz. */
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_FLL_CCO_RANGE4  /**< Target frequency is in range 150 - 200 MHz. */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_fll_cco_ranges_t;
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_enums */
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_structs
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of FLL.
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    fllMult;         /**< CLK_FLL_CONFIG  register, FLL_MULT bits */
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    refDiv;          /**< CLK_FLL_CONFIG2 register, FLL_REF_DIV bits */
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_cco_ranges_t      ccoRange;        /**< CLK_FLL_CONFIG4 register, CCO_RANGE bits */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        enableOutputDiv; /**< CLK_FLL_CONFIG  register, FLL_OUTPUT_DIV bit 
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    lockTolerance;   /**< CLK_FLL_CONFIG2 register, LOCK_TOL bits */
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     igain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_IGAIN bits *
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     pgain;           /**< CLK_FLL_CONFIG3 register, FLL_LF_PGAIN bits *
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    settlingCount;   /**< CLK_FLL_CONFIG3 register, SETTLING_COUNT bits
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;      /**< CLK_FLL_CONFIG3 register, BYPASS_SEL bits */
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t                    cco_Freq;        /**< CLK_FLL_CONFIG4 register, CCO_FREQ bits */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_fll_manual_config_t;
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_structs */
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_fll_funcs
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllConfigure(uint32_t inputFreq, uint32_t outputFreq, cy_en_fll_pll
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllManualConfigure(const cy_stc_fll_manual_config_t *config);
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** void Cy_SysClk_FllGetConfiguration(cy_stc_fll_manual_config_t *config);
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_FllEnable(uint32_t timeoutus);
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void);
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if (CY_IP_MXS40SRSS_VERSION != 1) || defined(CY_DOXYGEN)
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLostLock(void);
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void);
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLocked
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 18


 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the FLL is locked.
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_FllLocked
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLocked(void)
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (bool)(_FLD2VAL(SRSS_CLK_FLL_STATUS_LOCKED, SRSS->CLK_FLL_STATUS));
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if (CY_IP_MXS40SRSS_VERSION != 1) || defined(CY_DOXYGEN)
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllLostLock
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the FLL lost its lock since the last time this function
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * was called. Clears the lost lock indicator.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_FllLostLock
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_FllLostLock(void)
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retval = _FLD2VAL(SRSS_CLK_FLL_STATUS_UNLOCK_OCCURRED, SRSS->CLK_FLL_STATUS);
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_FLL_STATUS = _VAL2FLD(SRSS_CLK_FLL_STATUS_UNLOCK_OCCURRED, 1u);
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((bool)retval);
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_FllDisable
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the FLL and the CCO.
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_FllDisable
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_FllDisable(void)
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_FLL_CONFIG  &= ~_VAL2FLD(SRSS_CLK_FLL_CONFIG_FLL_ENABLE,  1u); /* 0 = disable */
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_FLL_CONFIG4 &= ~_VAL2FLD(SRSS_CLK_FLL_CONFIG4_CCO_ENABLE, 1u); /* 0 = disable */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 19


 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return CY_SYSCLK_SUCCESS;
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_fll_funcs */
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PLL SECTION    ============================ */
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_structs
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for configuration of a PLL.
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    inputFreq;  /**< frequency of PLL source, in Hz */
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t                    outputFreq; /**< frequency of PLL output, in Hz */
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;     /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode; /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_config_t;
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Structure containing information for manual configuration of a PLL.
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     feedbackDiv;  /**< CLK_PLL_CONFIG register, FEEDBACK_DIV (P) bits *
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     referenceDiv; /**< CLK_PLL_CONFIG register, REFERENCE_DIV (Q) bits 
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint8_t                     outputDiv;    /**< CLK_PLL_CONFIG register, OUTPUT_DIV bits */
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool                        lfMode;       /**< CLK_PLL_CONFIG register, PLL_LF_MODE bit */
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_fll_pll_output_mode_t outputMode;   /**< CLK_PLL_CONFIG register, BYPASS_SEL bits */
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_pll_manual_config_t;
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_structs */
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pll_funcs
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllConfigure(uint32_t clkPath, const cy_stc_pll_config_t *config);
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllManualConfigure(uint32_t clkPath, const cy_stc_pll_manual_config
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllGetConfiguration(uint32_t clkPath, cy_stc_pll_manual_config_t *c
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_PllEnable(uint32_t clkPath, uint32_t timeoutus);
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath);
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath);
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath);
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLocked
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL is locked.
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not locked<br>
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = locked
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 20


 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PllLocked
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLocked(uint32_t clkPath)
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1((clkPath != 0ul) && (clkPath <= SRSS_NUM_PLL));
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (bool)(_FLD2VAL(SRSS_CLK_PLL_STATUS_LOCKED, SRSS->CLK_PLL_STATUS[clkPath - 1ul]));
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllLostLock
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports whether or not the selected PLL lost its lock since the last time this
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * function was called. Clears the lost lock indicator.
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to check. 1 is the first PLL; 0 is invalid.
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = did not lose lock<br>
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = lost lock
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PllLostLock
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PllLostLock(uint32_t clkPath)
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retval = 0ul;
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1((clkPath != 0ul) && (clkPath <= SRSS_NUM_PLL));
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     retval = _FLD2VAL(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, SRSS->CLK_PLL_STATUS[clkPath - 1ul]);
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* write a 1 to clear the unlock occurred bit */
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_PLL_STATUS[clkPath - 1ul] = _VAL2FLD(SRSS_CLK_PLL_STATUS_UNLOCK_OCCURRED, 1u);
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((bool)retval);
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PllDisable
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected PLL.
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkPath Selects which PLL to disable. 1 is the first PLL; 0 is invalid.
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - PLL successfully disabled<br>
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_BAD_PARAM - invalid clock path number
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PllDisable
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PllDisable(uint32_t clkPath)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 21


 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkPath != 0ul) && (clkPath <= SRSS_NUM_PLL))
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS->CLK_PLL_CONFIG[clkPath - 1ul] &= ~_VAL2FLD(SRSS_CLK_PLL_CONFIG_ENABLE, 1u); /* 0 = di
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = CY_SYSCLK_SUCCESS;
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pll_funcs */
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    ILO SECTION    ============================ */
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_ilo_funcs
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void);
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void);
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on);
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloEnable
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the ILO.
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_IloEnable
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloEnable(void)
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_ILO_CONFIG |= _VAL2FLD(SRSS_CLK_ILO_CONFIG_ENABLE, 1u); /* 1 = enable */
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloDisable
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the ILO. ILO can't be disabled if WDT is enabled.
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - ILO successfully disabled<br>
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_INVALID_STATE - Cannot disable the ILO if the WDT is enabled.
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note The watchdog timer (WDT) must be unlocked before calling this function.
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Do not call this function if the WDT is enabled, because the WDT is clocked by
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * the ILO.
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_IloDisable
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 22


1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_IloDisable(void)
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_INVALID_STATE;
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (_FLD2VAL(SRSS_WDT_CTL_WDT_EN, SRSS->WDT_CTL) == 0ul) /* 0 = disabled */
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS->CLK_ILO_CONFIG &= ~_VAL2FLD(SRSS_CLK_ILO_CONFIG_ENABLE, 1u); /* 0 = disable */
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = CY_SYSCLK_SUCCESS;
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return retval;
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_IloHibernateOn
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Controls whether the ILO stays on during a hibernate, or through an XRES or
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * brown-out detect (BOD) event.
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param on
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = ILO stays on during hibernate or across XRES/BOD.<br> 
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = ILO turns off for hibernate or XRES/BOD.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Writes to the register/bit are ignored if the watchdog (WDT) is locked.
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_IloHibernateOn
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_IloHibernateOn(bool on)
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLR_SET(SRSS->CLK_ILO_CONFIG, SRSS_CLK_ILO_CONFIG_ILO_BACKUP, (uint32_t)on);
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_ilo_funcs */
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    PILO SECTION    =========================== */
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pilo_funcs
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void);
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void);
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal);
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void);
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloEnable
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the PILO. 
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function blocks for 1 millisecond between enabling the PILO and 
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * releasing the PILO reset.
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 23


1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PiloEnable
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloEnable(void)
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_PILO_CONFIG |= _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1u); /* 1 = enable */
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     Cy_SysLib_Delay(1/*msec*/);
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* release the reset and enable clock output */
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_PILO_CONFIG |= (_VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_RESET_N, 1u) |
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                               _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_CLK_EN, 1u));
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloDisable
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the PILO.
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PiloDisable
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloDisable(void)
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* Clear PILO_EN, PILO_RESET_N, and PILO_CLK_EN bitfields. This disables the
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****        PILO and holds the PILO in a reset state. */
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     SRSS->CLK_PILO_CONFIG &= ~(_VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_EN, 1u)      |
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_RESET_N, 1u) |
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                _VAL2FLD(SRSS_CLK_PILO_CONFIG_PILO_CLK_EN, 1u));
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloSetTrim
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the PILO trim bits, which adjusts the PILO frequency. This is typically
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * done after measuring the PILO frequency; see \ref Cy_SysClk_StartClkMeasurementCounters().
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PiloSetTrim
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PiloSetTrim(uint32_t trimVal)
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLR_SET(SRSS->CLK_PILO_CONFIG, SRSS_CLK_PILO_CONFIG_PILO_FFREQ, trimVal);
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PiloGetTrim
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the current PILO trim bits value.
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_PiloSetTrim() function usage.
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 24


1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PiloGetTrim(void)
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_PILO_CONFIG_PILO_FFREQ, SRSS->CLK_PILO_CONFIG));
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pilo_funcs */
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ====================    CLOCK MEASUREMENT SECTION    ===================== */
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_enums
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Defines all possible clock sources. */
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ILO =           1u,
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_WCO =           2u,
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_BAK =           3u,
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTLF =         4u,
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LFCLK =         5u,
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_IMO =           6u,
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PILO =          8u,
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_FAST_CLKS =     0x100u,
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ECO =           0x101u,
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_EXT =           0x102u,
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_ALTHF =         0x103u,
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH_CLKS =     0x500u,
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH0 =         0x500u,
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH1 =         0x501u,
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH2 =         0x502u,
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH3 =         0x503u,
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH4 =         0x504u,
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH5 =         0x505u,
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH6 =         0x506u,
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH7 =         0x507u,
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH8 =         0x508u,
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH9 =         0x509u,
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH10 =        0x50Au,
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH11 =        0x50Bu,
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH12 =        0x50Cu,
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH13 =        0x50Du,
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH14 =        0x50Eu,
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_PATH15 =        0x50Fu,
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHFS =        0x600u,
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF0 =        0x600u,
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF1 =        0x601u,
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF2 =        0x602u,
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF3 =        0x603u,
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF4 =        0x604u,
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF5 =        0x605u,
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF6 =        0x606u,
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF7 =        0x607u,
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF8 =        0x608u,
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF9 =        0x609u,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 25


1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF10 =       0x60Au,
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF11 =       0x60Bu,
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF12 =       0x60Cu,
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF13 =       0x60Du,
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF14 =       0x60Eu,
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_CLKHF15 =       0x60Fu,
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_MEAS_CLK_LAST_CLK =      0x610u
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_meas_clks_t;
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_enums */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_calclk_funcs
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_sysclk_status_t Cy_SysClk_StartClkMeasurementCounters(cy_en_meas_clks_t clock1, uint32_t coun
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void);
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_ClkMeasurementCountersGetFreq(bool measuredClock, uint32_t refClkFreq);
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkMeasurementCountersDone
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Checks if clock measurement counting is done, that is, counter1 has counted down
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * to zero. Call \ref Cy_SysClk_StartClkMeasurementCounters() before calling this function.
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Status of calibration counters:<br>
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = done<br>
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not done
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Refer to the Cy_SysClk_StartClkMeasurementCounters() function usage.
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_ClkMeasurementCountersDone(void)
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (_FLD2VAL(SRSS_CLK_CAL_CNT1_CAL_COUNTER_DONE, SRSS->CLK_CAL_CNT1)); /* 1 = done */
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_calclk_funcs */
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ==========================    TRIM SECTION    ============================ */
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_trim_funcs
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_IloTrim(uint32_t iloFreq);
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** int32_t Cy_SysClk_PiloTrim(uint32_t piloFreq);
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_trim_funcs */
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ======================    POWER MANAGEMENT SECTION    ==================== */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_pm_funcs
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 26


1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** cy_en_syspm_status_t Cy_SysClk_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_pm_funcs */
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ===========================    WCO SECTION    ============================ */
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_enums
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO bypass modes */
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_NOT_BYPASSED = 0u, /**< WCO is not bypassed crystal is used */
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_BYPASSED = 1u      /**< WCO is bypassed external clock must be supplied  on XTAL 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_bypass_modes_t;
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** WCO CSV supervisor clock selections */
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ILO,   /**< WCO CSV supervisor clock source is the ILO */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_ALTLF, /**< WCO CSV supervisor clock source is the alternate low-f
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_WCO_CSV_SUPERVISOR_PILO   /**< WCO CSV supervisor clock source is the PILO */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_wco_csv_supervisor_clock_t;
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor clock loss window. There must be one clock of the supervised
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clock within this many clocks of the supervising clock.
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See registers CLK_CSV_HF_CTL and CLK_CSV_WCO_CTL, bitfield CSV_LOSS_WINDOW.
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_4_CYCLES =   0u, /**< 1 clock must be seen within 4 cycles of the supervisin
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_8_CYCLES =   1u, /**< 1 clock must be seen within 8 cycles of the supervisin
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_16_CYCLES =  2u, /**< 1 clock must be seen within 16 cycles of the supervisi
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_32_CYCLES =  3u, /**< 1 clock must be seen within 32 cycles of the supervisi
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_64_CYCLES =  4u, /**< 1 clock must be seen within 64 cycles of the supervisi
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_128_CYCLES = 5u, /**< 1 clock must be seen within 128 cycles of the supervis
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_256_CYCLES = 6u, /**< 1 clock must be seen within 256 cycles of the supervis
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_LOSS_512_CYCLES = 7u  /**< 1 clock must be seen within 512 cycles of the supervis
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_loss_window_t;
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Clock supervisor error actions. See register CLK_CSV_HF_CTL[CSV_FREQ_ACTION and CSV_LOSS_ACTION].
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_IGNORE = 0u,     /**< Ignore the error reported by the clock supervisor. */
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT = 1u,      /**< Trigger a fault when an error is reported by the cloc
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_RESET = 2u,      /**< Trigger a reset when an error is reported by the cloc
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CSV_ERROR_FAULT_RESET = 3u /**< Trigger a fault then reset when an error is reported 
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_csv_error_actions_t;
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_enums */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 27


1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_structs
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for the WCO.
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_wco_csv_supervisor_clock_t supervisorClock; /**< supervisor clock selection */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                         /**< 1= enabled, 0= disabled. Note that if lo
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;               /**< \ref cy_en_csv_loss_window_t */
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;             /**< \ref cy_en_csv_error_actions_t */
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_wco_csv_config_t;
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_structs */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_wco_funcs
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus);
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void);
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void);
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass);
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if (SRSS_WCOCSV_PRESENT != 0) || defined(CY_DOXYGEN)
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     void Cy_SysClk_WcoConfigureCsv(const cy_stc_wco_csv_config_t *config);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* (SRSS_WCOCSV_PRESENT != 0) || defined(CY_DOXYGEN) */
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoEnable
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the WCO.
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param timeoutus amount of time in microseconds to wait for the WCO to be ready.
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * If WCO is not ready, WCO is stopped. To avoid waiting for WCO ready set this to 0,
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * and manually check if WCO is okay using \ref Cy_SysClk_WcoOkay.
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return Error / status code:<br>
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_SUCCESS - WCO successfully enabled<br>
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * CY_SYSCLK_TIMEOUT - Timeout waiting for WCO to stabilize
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_WcoEnable
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_WcoEnable(uint32_t timeoutus)
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t rtnval = CY_SYSCLK_TIMEOUT;
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* first set the WCO enable bit */
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP->CTL |= _VAL2FLD(BACKUP_CTL_WCO_EN, 1u); /* 1 = enable */
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     /* now do the timeout wait for STATUS, bit WCO_OK */
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     for (; (Cy_SysClk_WcoOkay() == false) && (timeoutus != 0ul); timeoutus--)
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 28


1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         Cy_SysLib_DelayUs(1u);
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (timeoutus != 0ul)
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         rtnval = CY_SYSCLK_SUCCESS;
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (rtnval);
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoOkay
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the status of the WCO_OK bit.
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return 
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * true = okay<br>
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * false = not okay
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_WcoOkay
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_WcoOkay(void)
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (bool)(_FLD2VAL(BACKUP_STATUS_WCO_OK, BACKUP->STATUS));
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoDisable
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the WCO.
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_WcoDisable
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoDisable(void)
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     BACKUP->CTL &= ~_VAL2FLD(BACKUP_CTL_WCO_EN, 1u); /* 0 = disable */
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_WcoBypass
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets whether the WCO is bypassed or not. If it is bypassed, then a 32-kHz clock
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * must be provided on the wco_out pin.
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param bypass \ref cy_en_wco_bypass_modes_t
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_WcoBypass
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 29


1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_WcoBypass(cy_en_wco_bypass_modes_t bypass)
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLR_SET(BACKUP->CTL, BACKUP_CTL_WCO_BYPASS, bypass);
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_wco_funcs */
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clkHf[n] SECTION    ========================= */
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_enums
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects which clkHf input, or root mux, to configure.
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * See CLK_ROOT_SELECT registers, bits ROOT_MUX.
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetSource and \ref Cy_SysClk_ClkHfGetSource.
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH0  = 0u,  /**< clkHf input is Clock Path 0 */
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH1  = 1u,  /**< clkHf input is Clock Path 1 */
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH2  = 2u,  /**< clkHf input is Clock Path 2 */
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH3  = 3u,  /**< clkHf input is Clock Path 3 */
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH4  = 4u,  /**< clkHf input is Clock Path 4 */
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH5  = 5u,  /**< clkHf input is Clock Path 5 */
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH6  = 6u,  /**< clkHf input is Clock Path 6 */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH7  = 7u,  /**< clkHf input is Clock Path 7 */
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH8  = 8u,  /**< clkHf input is Clock Path 8 */
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH9  = 9u,  /**< clkHf input is Clock Path 9 */
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH10 = 10u, /**< clkHf input is Clock Path 10 */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH11 = 11u, /**< clkHf input is Clock Path 11 */
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH12 = 12u, /**< clkHf input is Clock Path 12 */
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH13 = 13u, /**< clkHf input is Clock Path 13 */
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH14 = 14u, /**< clkHf input is Clock Path 14 */
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_IN_CLKPATH15 = 15u, /**< clkHf input is Clock Path 15 */
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_in_sources_t;
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf divider values. See CLK_ROOT_SELECT registers, bits ROOT_DIV.
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Used with functions \ref Cy_SysClk_ClkHfSetDivider and \ref Cy_SysClk_ClkHfGetDivider.
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_NO_DIVIDE   = 0u,    /**< don't divide clkHf. */
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_2 = 1u,    /**< divide clkHf by 2 */
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_4 = 2u,    /**< divide clkHf by 4 */
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_DIVIDE_BY_8 = 3u     /**< divide clkHf by 8 */
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_dividers_t;
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * clkHf clock supervisor input sources. See register CLK_CSV_HF_CTL[CSV_MUX].
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 30


1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_IMO   = 0u,  /**< Supervising clock is the IMO. */
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_EXT   = 1u,  /**< Supervising clock is the external clock */
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLKHF_CSV_SUPERVISOR_ALTHF = 2u   /**< Supervising clock is clk_althf */
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_clkhf_csv_supervisor_clock_t;
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_enums */
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_structs
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{SupervisingWindow
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * This structure is used to configure the clock supervisor for clkHf.
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef struct
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_clkhf_csv_supervisor_clock_t supervisorClock; /**< \ref cy_en_clkhf_csv_supervisor_clock_
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t supervisingWindow;                         /**< Number of supervising clock cycles */
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableFrequencyFaultDetection;                 /**< 1= enabled, 0= disabled */
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyLowerLimit;                       /**< Lowest frequency in kHz that supervise
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint16_t frequencyUpperLimit;                       /**< Highest frequency in kHz that supervis
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t frequencyAction;          /**< \ref cy_en_csv_error_actions_t */
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     bool enableLossDetection;                           /**< 1= enabled, 0= disabled */
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_loss_window_t lossWindow;                 /**< \ref cy_en_csv_loss_window_t */
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_csv_error_actions_t lossAction;               /**< \ref cy_en_csv_error_actions_t */
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_stc_clkhf_csv_config_t;
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_structs */
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_hf_funcs
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf);
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf);
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf);
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf);
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #if (SRSS_MASK_HFCSV != 0)  || defined(CY_DOXYGEN)
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t Cy_SysClk_ClkHfConfigureCsv(uint32_t clkHf, const cy_stc_clkhf_csv_config
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** #endif /* (SRSS_MASK_HFCSV != 0)  || defined(CY_DOXYGEN) */
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfEnable
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected clkHf.
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkHfEnable
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfEnable(uint32_t clkHf)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 31


1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (clkHf < SRSS_NUM_HFROOT)
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS->CLK_ROOT_SELECT[clkHf] |= _VAL2FLD(SRSS_CLK_ROOT_SELECT_ENABLE, 1ul); /* 1 = enable *
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = CY_SYSCLK_SUCCESS;
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfDisable
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables the selected clkHf.
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf Selects which clkHf to enable.
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note clkHf[0] cannot be disabled.
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkHfDisable
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfDisable(uint32_t clkHf)
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((0ul < clkHf) && (clkHf < SRSS_NUM_HFROOT))
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         SRSS->CLK_ROOT_SELECT[clkHf] &= ~_VAL2FLD(SRSS_CLK_ROOT_SELECT_ENABLE, 1ul); /* 0 = disable
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = CY_SYSCLK_SUCCESS;
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetSource
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Selects the source of the selected clkHf.
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf mux to configure.
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param source \ref cy_en_clkhf_in_sources_t
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkHfSetSource
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetSource(uint32_t clkHf, cy_en_clkhf_in_sourc
1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < SRSS_NUM_HFROOT) && (source <= CY_SYSCLK_CLKHF_IN_CLKPATH15))
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 32


1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_SYSCLK_CLR_SET(SRSS->CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_MUX, source);
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = CY_SYSCLK_SUCCESS;
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetSource
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the source of the selected clkHf.
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to get the source of.
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_in_sources_t
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkHfSetSource
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_in_sources_t Cy_SysClk_ClkHfGetSource(uint32_t clkHf)
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < SRSS_NUM_HFROOT);
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_in_sources_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_MUX, SRSS->CLK_ROOT_SELECT
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfSetDivider
1624:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1625:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1626:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the pre-divider for a clkHf.
1627:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1628:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf divider to configure.
1629:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1630:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider \ref cy_en_clkhf_dividers_t
1631:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1632:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1633:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1634:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note Also call \ref Cy_SysClk_ClkHfSetSource to set the clkHf source.
1635:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1636:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1637:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkHfSetDivider
1638:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1639:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1640:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_ClkHfSetDivider(uint32_t clkHf, cy_en_clkhf_divider
1641:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1642:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
1643:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((clkHf < SRSS_NUM_HFROOT) && (divider <= CY_SYSCLK_CLKHF_DIVIDE_BY_8))
1644:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1645:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_SYSCLK_CLR_SET(SRSS->CLK_ROOT_SELECT[clkHf], SRSS_CLK_ROOT_SELECT_ROOT_DIV, divider);
1646:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = CY_SYSCLK_SUCCESS;
1647:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1648:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
1649:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1650:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1651:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 33


1652:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkHfGetDivider
1653:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1654:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1655:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the pre-divider value for a clkHf.
1656:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1657:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param clkHf selects which clkHf to check divider of.
1658:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1659:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_clkhf_dividers_t
1660:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1661:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1662:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkHfSetDivider
1663:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1664:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1665:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_clkhf_dividers_t Cy_SysClk_ClkHfGetDivider(uint32_t clkHf)
1666:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1667:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(clkHf < SRSS_NUM_HFROOT);
1668:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (cy_en_clkhf_dividers_t)(_FLD2VAL(SRSS_CLK_ROOT_SELECT_ROOT_DIV, SRSS->CLK_ROOT_SELECT[c
1669:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1670:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_hf_funcs */
1671:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1672:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1673:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1674:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =========================    clk_fast SECTION    ========================= */
1675:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1676:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1677:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_fast_funcs
1678:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1679:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1680:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider);
1681:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void);
1682:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1683:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1684:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastSetDivider
1685:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1686:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1687:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the fast clock, which sources the main processor.
1688:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of this divider is clkHf[0].
1689:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1690:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255.
1691:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1692:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1693:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1694:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkFastSetDivider
1695:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1696:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1697:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkFastSetDivider(uint8_t divider)
1698:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1699:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLR_SET(CPUSS->CM4_CLOCK_CTL, CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, (uint32_t)divider);
1700:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1701:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1702:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1703:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkFastGetDivider
1704:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1705:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1706:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider for the fast clock.
1707:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1708:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value for the fast clock.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 34


1709:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1710:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1711:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1712:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkFastSetDivider
1713:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1714:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1715:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkFastGetDivider(void)
1716:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1717:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM4_CLOCK_CTL_FAST_INT_DIV, CPUSS->CM4_CLOCK_CTL));
1718:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1719:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_fast_funcs */
1720:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1721:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1722:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1723:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================    clk_peri SECTION    ========================== */
1724:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1725:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1726:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peri_funcs
1727:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1728:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1729:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider);
1730:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void);
1731:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1732:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1733:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriSetDivider
1734:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1735:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1736:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets the clock divider for the peripheral clock tree. All peripheral clock
1737:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers are sourced from this clock. Also the Cortex M0+ clock divider is
1738:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * sourced from this clock. The source of this divider is clkHf[0]
1739:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1740:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param divider divider value between 0 and 255
1741:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256.
1742:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1743:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1744:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkPeriSetDivider
1745:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1746:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1747:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_ClkPeriSetDivider(uint8_t divider)
1748:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1749:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_CLR_SET(CPUSS->CM0_CLOCK_CTL, CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, (uint32_t)divider);
1750:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1751:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1752:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1753:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_ClkPeriGetDivider
1754:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1755:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1756:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the clock divider of the peripheral (peri) clock.
1757:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1758:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1759:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256.
1760:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1761:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1762:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_ClkPeriSetDivider
1763:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1764:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1765:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint8_t Cy_SysClk_ClkPeriGetDivider(void)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 35


1766:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1767:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return ((uint8_t)_FLD2VAL(CPUSS_CM0_CLOCK_CTL_PERI_INT_DIV, CPUSS->CM0_CLOCK_CTL));
1768:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1769:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peri_funcs */
1770:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1771:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1772:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1773:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* =====================    clk_peripherals SECTION    ====================== */
1774:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /* ========================================================================== */
1775:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1776:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_enums
1777:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1778:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1779:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** Programmable clock divider types */
1780:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** typedef enum
1781:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1782:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_8_BIT    = 0u, /**< Divider Type is an 8 bit divider */
1783:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_BIT   = 1u, /**< Divider Type is a 16 bit divider */
1784:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_16_5_BIT = 2u, /**< Divider Type is a 16.5 bit fractional divider */
1785:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_SYSCLK_DIV_24_5_BIT = 3u  /**< Divider Type is a 24.5 bit fractional divider */
1786:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** } cy_en_divider_types_t;
1787:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /** \} group_sysclk_clk_peripheral_enums */
1788:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1789:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /**
1790:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \addtogroup group_sysclk_clk_peripheral_funcs
1791:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \{
1792:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** */
1793:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1794:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1795:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerT
1796:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1797:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock, cy_en_div
1798:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock);
1799:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerTy
1800:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerT
1801:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t Cy_SysClk_PeriphEnablePhaseAlignDivider(cy_en_divider_types_t
1802:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE bool Cy_SysClk_PeriphGetDividerEnabled(cy_en_divider_types_t dividerType, uint32_t 
1803:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** uint32_t Cy_SysClk_PeriphGetFrequency(cy_en_divider_types_t dividerType, uint32_t dividerNum);
1804:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1805:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1806:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetDivider
1807:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1808:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1809:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This is only used for integer
1810:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * dividers. Use \ref Cy_SysClk_PeriphSetFracDivider for setting factional dividers.
1811:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1812:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1813:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1814:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum the divider number.
1815:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1816:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerValue divider value
1817:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Causes integer division of (divider value + 1), or division by 1 to 256
1818:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1819:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1820:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1821:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1822:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 36


1823:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphSetDivider
1824:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1825:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1826:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1827:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetDivider(cy_en_divider_types_t dividerType,
1828:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                            uint32_t dividerNum, uint32_t dividerValue)
1829:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1830:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
1831:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1832:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_8_NR) &&
1834:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
1835:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_SYSCLK_CLR_SET(PERI->DIV_8_CTL[dividerNum], PERI_DIV_8_CTL_INT8_DIV, dividerValue);
1837:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
1838:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1839:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1840:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_16_BIT)
1841:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1842:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_NR) &&
1843:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_16_CTL_INT16_DIV_Msk >> PERI_DIV_16_CTL_INT16_DIV_Pos)))
1844:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1845:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_SYSCLK_CLR_SET(PERI->DIV_16_CTL[dividerNum], PERI_DIV_16_CTL_INT16_DIV, dividerValue
1846:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
1847:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1848:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1849:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1850:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1851:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1852:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
1853:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1854:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1855:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1856:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetDivider
1857:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1858:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1859:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Returns the integer divider value for the specified divider. One works for
1860:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * integer dividers. Use \ref Cy_SysClk_PeriphGetFracDivider to get the fractional
1861:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider value
1862:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1863:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1864:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1865:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1866:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1867:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider value.
1868:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The integer division done is by (divider value + 1), or division by 1 to 256
1869:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * (8-bit divider) or 1 to 65536 (16-bit divider).
1870:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1871:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1872:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphSetDivider
1873:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1874:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1875:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetDivider(cy_en_divider_types_t dividerType, uint32_t div
1876:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1877:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     uint32_t retval;
1878:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1879:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(dividerType <= CY_SYSCLK_DIV_16_BIT);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 37


1880:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1881:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_8_BIT)
1882:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1883:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_8_NR);
1884:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = _FLD2VAL(PERI_DIV_8_CTL_INT8_DIV, PERI->DIV_8_CTL[dividerNum]);
1885:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1886:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1887:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 16-bit divider */
1888:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_NR);
1889:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         retval = _FLD2VAL(PERI_DIV_16_CTL_INT16_DIV, PERI->DIV_16_CTL[dividerNum]);
1890:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1891:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
1892:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1893:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1894:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1895:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphSetFracDivider
1896:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1897:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1898:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Sets one of the programmable clock dividers. This function should only be used
1899:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for fractional clock dividers.
1900:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1901:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1902:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1903:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1904:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1905:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerIntValue the integer divider value
1906:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The source of the divider is peri_clk, which is a divided version of hf_clk[0].
1907:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The divider value causes integer division of (divider value + 1), or division
1908:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * by 1 to 65536 (16-bit divider) or 1 to 16777216 (24-bit divider).
1909:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1910:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerFracValue the fraction part of the divider
1911:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * The fractional divider can be 1-32, thus it divides the clock by 1/32 for each
1912:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * count. To divide the clock by 11/32nds set this value to 11.
1913:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1914:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
1915:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1916:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1917:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphSetFracDivider
1918:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1919:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1920:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
1921:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphSetFracDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
1922:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                uint32_t dividerIntValue, uint32_t dividerFracValue)
1923:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1924:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
1925:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1926:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1927:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_16_5_NR) &&
1928:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_16_5_CTL_INT16_DIV_Msk >> PERI_DIV_16_5_CTL_INT16_DIV_Pos
1929:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_16_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_16_5_CTL_FRAC5_DIV_Po
1930:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1931:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_SYSCLK_CLR_SET(PERI->DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_INT16_DIV, dividerI
1932:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_SYSCLK_CLR_SET(PERI->DIV_16_5_CTL[dividerNum], PERI_DIV_16_5_CTL_FRAC5_DIV, dividerF
1933:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
1934:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1935:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1936:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else if (dividerType == CY_SYSCLK_DIV_24_5_BIT)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 38


1937:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1938:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if ((dividerNum < PERI_DIV_24_5_NR) &&
1939:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerIntValue <= (PERI_DIV_24_5_CTL_INT24_DIV_Msk >> PERI_DIV_24_5_CTL_INT24_DIV_Pos
1940:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerFracValue <= (PERI_DIV_24_5_CTL_FRAC5_DIV_Msk >> PERI_DIV_24_5_CTL_FRAC5_DIV_Po
1941:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
1942:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_SYSCLK_CLR_SET(PERI->DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_INT24_DIV, dividerI
1943:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             CY_SYSCLK_CLR_SET(PERI->DIV_24_5_CTL[dividerNum], PERI_DIV_24_5_CTL_FRAC5_DIV, dividerF
1944:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
1945:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
1946:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1947:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1948:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* return bad parameter */
1949:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1950:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
1951:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1952:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1953:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
1954:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetFracDivider
1955:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1956:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1957:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports the integer and fractional parts of the divider
1958:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1959:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
1960:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1961:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
1962:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1963:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerIntValue pointer to return integer divider value
1964:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1965:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param *dividerFracValue pointer to return fractional divider value
1966:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1967:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return None. Loads pointed-to variables.
1968:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1969:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
1970:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphSetFracDivider
1971:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1972:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
1973:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE void Cy_SysClk_PeriphGetFracDivider(cy_en_divider_types_t dividerType, uint32_t div
1974:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                                     uint32_t *dividerIntValue, uint32_t *dividerFra
1975:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
1976:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(((dividerType == CY_SYSCLK_DIV_16_5_BIT) || (dividerType == CY_SYSCLK_DIV_24_5_BIT
1977:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                  (dividerIntValue != NULL) && (dividerFracValue != NULL));
1978:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1979:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType == CY_SYSCLK_DIV_16_5_BIT)
1980:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
1981:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_16_5_NR);
1982:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_16_5_CTL_INT16_DIV, PERI->DIV_16_5_CTL[dividerNum]);
1983:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_16_5_CTL_FRAC5_DIV, PERI->DIV_16_5_CTL[dividerNum]);
1984:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1985:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     else
1986:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     { /* 24.5-bit divider */
1987:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         CY_ASSERT_L1(dividerNum < PERI_DIV_24_5_NR);
1988:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerIntValue  = _FLD2VAL(PERI_DIV_24_5_CTL_INT24_DIV, PERI->DIV_24_5_CTL[dividerNum]);
1989:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         *dividerFracValue = _FLD2VAL(PERI_DIV_24_5_CTL_FRAC5_DIV, PERI->DIV_24_5_CTL[dividerNum]);
1990:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
1991:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
1992:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
1993:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 39


1994:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphAssignDivider
1995:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
1996:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1997:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Assigns a programmable divider to a selected IP block, such as a TCPWM or SCB.
1998:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
1999:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2000:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2001:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2002:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2003:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2004:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2005:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return \ref cy_en_sysclk_status_t
2006:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2007:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2008:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphAssignDivider
2009:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2010:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2011:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2012:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphAssignDivider(en_clk_dst_t ipBlock,
2013:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                               cy_en_divider_types_t dividerType, uint32_t dividerNu
2014:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2015:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
2016:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if ((ipBlock < PERI_CLOCK_NR) && (dividerType <= CY_SYSCLK_DIV_24_5_BIT))
2017:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2018:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2019:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2020:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2021:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2022:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2023:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI->CLOCK_CTL[ipBlock] = _VAL2FLD(PERI_CLOCK_CTL_TYPE_SEL, dividerType) |
2024:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                                        _VAL2FLD(PERI_CLOCK_CTL_DIV_SEL,  dividerNum);
2025:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
2026:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2027:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2028:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
2029:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2030:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2031:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2032:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphGetAssignedDivider
2033:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2034:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2035:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Reports which clock divider is assigned to a selected IP block.
2036:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2037:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param ipBlock specifies ip block to connect the clock divider to.
2038:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2039:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \return The divider type and number, where bits [7:6] = type, bits[5:0] = divider
2040:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * number within that type
2041:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2042:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2043:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphAssignDivider
2044:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2045:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2046:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE uint32_t Cy_SysClk_PeriphGetAssignedDivider(en_clk_dst_t ipBlock)
2047:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2048:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     CY_ASSERT_L1(ipBlock < PERI_CLOCK_NR);
2049:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return PERI->CLOCK_CTL[ipBlock] & 0xFFul; /* bits [7:6] = TYPE_SEL, bits[5:0] = DIV_SEL */
2050:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 40


2051:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2052:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2053:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphEnableDivider
2054:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2055:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2056:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Enables the selected divider.
2057:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2058:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t
2059:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2060:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure
2061:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2062:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \note This function also sets the phase alignment bits such that the enabled
2063:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * divider is aligned to clk_peri. See \ref Cy_SysClk_PeriphDisableDivider()
2064:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * for information on how to phase-align a divider after it is enabled.
2065:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2066:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2067:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphEnableDivider
2068:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2069:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
2070:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2071:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphEnableDivider(cy_en_divider_types_t dividerType, uint32_t dividerNu
2072:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2073:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
2074:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2075:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2076:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2077:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2078:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2079:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2080:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2081:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider, make the reference = clk_peri, and enable the divider */
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI->DIV_CMD = PERI_DIV_CMD_ENABLE_Msk                      |
2083:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
2084:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             PERI_DIV_CMD_PA_DIV_SEL_Msk                  |
2085:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             _VAL2FLD(PERI_DIV_CMD_TYPE_SEL, dividerType) |
2086:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             _VAL2FLD(PERI_DIV_CMD_DIV_SEL,  dividerNum);
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (void)PERI->DIV_CMD; /* dummy read to handle buffered writes */
2088:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
2089:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         }
2090:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     }
2091:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     return (retval);
2092:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** }
2093:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** 
2094:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** /*******************************************************************************
2095:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Function Name: Cy_SysClk_PeriphDisableDivider
2096:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** ****************************************************************************//**
2097:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2098:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * Disables a selected divider.
2099:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2100:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerType specifies which type of divider to use; \ref cy_en_divider_types_t.
2101:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2102:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \param dividerNum specifies which divider of the selected type to configure.
2103:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2104:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \funcusage
2105:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** * \snippet sysclk/sysclk_v1_10_sut_01.cydsn/main_cm4.c snippet_Cy_SysClk_PeriphDisableDivider
2106:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *
2107:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** *******************************************************************************/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 41


2108:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** __STATIC_INLINE cy_en_sysclk_status_t
2109:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                 Cy_SysClk_PeriphDisableDivider(cy_en_divider_types_t dividerType, uint32_t dividerN
2110:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h **** {
2111:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     cy_en_sysclk_status_t retval = CY_SYSCLK_BAD_PARAM;
2112:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     if (dividerType <= CY_SYSCLK_DIV_24_5_BIT)
2113:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****     {
2114:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         if (((dividerType == CY_SYSCLK_DIV_8_BIT)    && (dividerNum < PERI_DIV_8_NR))    ||
2115:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_BIT)   && (dividerNum < PERI_DIV_16_NR))   ||
2116:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_16_5_BIT) && (dividerNum < PERI_DIV_16_5_NR)) ||
2117:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             ((dividerType == CY_SYSCLK_DIV_24_5_BIT) && (dividerNum < PERI_DIV_24_5_NR)))
2118:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****         {
2119:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             /* specify the divider and disable it */
2120:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             PERI->DIV_CMD = _VAL2FLD(PERI_DIV_CMD_DISABLE, 1u) /* 1 = disable */ |
  45              		.loc 2 2120 0
  46 0004 1049     		ldr	r1, .L3
  47 0006 8023     		movs	r3, #128
  48 0008 DB00     		lsls	r3, r3, #3
  49 000a 104A     		ldr	r2, .L3+4
  50 000c D150     		str	r1, [r2, r3]
  51              	.LVL2:
  52              	.LBE34:
  53              	.LBE33:
  54              	.LBE32:
 130:Generated_Source\PSoC6/ADC.c ****     bool deInitRouting = false;
 131:Generated_Source\PSoC6/ADC.c **** 
 132:Generated_Source\PSoC6/ADC.c ****     /* If there is an internal SAR clock, set up its divider values. */
 133:Generated_Source\PSoC6/ADC.c ****     #if (ADC_CLOCK_INTERNAL)
 134:Generated_Source\PSoC6/ADC.c ****         ADC_intSarClock_Disable();
 135:Generated_Source\PSoC6/ADC.c ****         ADC_intSarClock_SetDivider(config->clkDivider);
  55              		.loc 1 135 0
  56 000e 0369     		ldr	r3, [r0, #16]
  57              	.LVL3:
  58              	.LBB35:
  59              	.LBB36:
  60              	.LBB37:
1833:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             (dividerValue <= (PERI_DIV_8_CTL_INT8_DIV_Msk >> PERI_DIV_8_CTL_INT8_DIV_Pos)))
  61              		.loc 2 1833 0
  62 0010 FF2B     		cmp	r3, #255
  63 0012 08D8     		bhi	.L2
1836:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
  64              		.loc 2 1836 0
  65 0014 1000     		movs	r0, r2
  66              	.LVL4:
  67 0016 0E49     		ldr	r1, .L3+8
  68 0018 5458     		ldr	r4, [r2, r1]
  69 001a 0E4A     		ldr	r2, .L3+12
  70 001c 2240     		ands	r2, r4
  71 001e 1B06     		lsls	r3, r3, #24
  72              	.LVL5:
  73 0020 1B0C     		lsrs	r3, r3, #16
  74 0022 1343     		orrs	r3, r2
  75 0024 4350     		str	r3, [r0, r1]
  76              	.LVL6:
  77              	.L2:
  78              	.LBE37:
  79              	.LBE36:
  80              	.LBE35:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 42


  81              	.LBB38:
  82              	.LBB39:
  83              	.LBB40:
2082:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****                             PERI_DIV_CMD_PA_TYPE_SEL_Msk                 |
  84              		.loc 2 2082 0
  85 0026 094A     		ldr	r2, .L3+4
  86 0028 8023     		movs	r3, #128
  87 002a DB00     		lsls	r3, r3, #3
  88 002c 0A49     		ldr	r1, .L3+16
  89 002e D150     		str	r1, [r2, r3]
2087:Generated_Source\PSoC6\pdl\drivers/peripheral/sysclk/cy_sysclk.h ****             retval = CY_SYSCLK_SUCCESS;
  90              		.loc 2 2087 0
  91 0030 D358     		ldr	r3, [r2, r3]
  92              	.LVL7:
  93              	.LBE40:
  94              	.LBE39:
  95              	.LBE38:
 136:Generated_Source\PSoC6/ADC.c ****         ADC_intSarClock_Enable();
 137:Generated_Source\PSoC6/ADC.c ****     #endif /* ADC_CLOCK_INTERNAL */
 138:Generated_Source\PSoC6/ADC.c **** 
 139:Generated_Source\PSoC6/ADC.c ****     /* Init SAR and MUX registers */
 140:Generated_Source\PSoC6/ADC.c ****     (void)Cy_SAR_DeInit(ADC_SAR__HW, deInitRouting);
  96              		.loc 1 140 0
  97 0032 0A4C     		ldr	r4, .L3+20
  98 0034 0021     		movs	r1, #0
  99 0036 2000     		movs	r0, r4
 100 0038 FFF7FEFF 		bl	Cy_SAR_DeInit
 101              	.LVL8:
 141:Generated_Source\PSoC6/ADC.c ****     (void)Cy_SAR_Init(ADC_SAR__HW, config->hwConfigStc);
 102              		.loc 1 141 0
 103 003c A968     		ldr	r1, [r5, #8]
 104 003e 2000     		movs	r0, r4
 105 0040 FFF7FEFF 		bl	Cy_SAR_Init
 106              	.LVL9:
 142:Generated_Source\PSoC6/ADC.c **** 
 143:Generated_Source\PSoC6/ADC.c ****     /* Connect Vminus to VSSA when even one channel is single-ended or multiple channels configured
 144:Generated_Source\PSoC6/ADC.c ****     if(1uL == ADC_MUX_SWITCH0_INIT)
 145:Generated_Source\PSoC6/ADC.c ****     {
 146:Generated_Source\PSoC6/ADC.c ****         Cy_SAR_SetVssaVminusSwitch(ADC_SAR__HW, CY_SAR_SWITCH_CLOSE);
 147:Generated_Source\PSoC6/ADC.c **** 
 148:Generated_Source\PSoC6/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 149:Generated_Source\PSoC6/ADC.c ****         if(1uL < config->numChannels)
 150:Generated_Source\PSoC6/ADC.c ****         {
 151:Generated_Source\PSoC6/ADC.c ****             Cy_SAR_SetVssaSarSeqCtrl(ADC_SAR__HW, CY_SAR_SWITCH_SEQ_CTRL_ENABLE);
 152:Generated_Source\PSoC6/ADC.c ****         }
 153:Generated_Source\PSoC6/ADC.c ****     }
 154:Generated_Source\PSoC6/ADC.c **** 
 155:Generated_Source\PSoC6/ADC.c ****     return;
 156:Generated_Source\PSoC6/ADC.c **** }
 107              		.loc 1 156 0
 108              		@ sp needed
 109              	.LVL10:
 110 0044 70BD     		pop	{r4, r5, r6, pc}
 111              	.L4:
 112 0046 C046     		.align	2
 113              	.L3:
 114 0048 01000040 		.word	1073741825
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 43


 115 004c 00000140 		.word	1073807360
 116 0050 04080000 		.word	2052
 117 0054 FF00FFFF 		.word	-65281
 118 0058 01FF0080 		.word	-2147418367
 119 005c 00001D41 		.word	1092419584
 120              		.cfi_endproc
 121              	.LFE178:
 122              		.size	ADC_InitConfig, .-ADC_InitConfig
 123              		.section	.text.ADC_StartConvert,"ax",%progbits
 124              		.align	2
 125              		.global	ADC_StartConvert
 126              		.code	16
 127              		.thumb_func
 128              		.type	ADC_StartConvert, %function
 129              	ADC_StartConvert:
 130              	.LFB180:
 157:Generated_Source\PSoC6/ADC.c **** 
 158:Generated_Source\PSoC6/ADC.c **** /* ****************************************************************************
 159:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_SelectConfig
 160:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//*
 161:Generated_Source\PSoC6/ADC.c **** *
 162:Generated_Source\PSoC6/ADC.c **** * \brief Selects the predefined configuration for scanning.
 163:Generated_Source\PSoC6/ADC.c **** *
 164:Generated_Source\PSoC6/ADC.c **** * \param config Number of configuration in the ADC.
 165:Generated_Source\PSoC6/ADC.c **** *
 166:Generated_Source\PSoC6/ADC.c **** * \param restart Set to 1u if the ADC should be  restarted after
 167:Generated_Source\PSoC6/ADC.c **** * selecting the configuration.
 168:Generated_Source\PSoC6/ADC.c **** *
 169:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 170:Generated_Source\PSoC6/ADC.c **** void ADC_SelectConfig(uint32_t config, uint32_t restart)
 171:Generated_Source\PSoC6/ADC.c **** {
 172:Generated_Source\PSoC6/ADC.c ****     /* Check whether the configuration number is valid or not */
 173:Generated_Source\PSoC6/ADC.c ****     if(ADC_TOTAL_CONFIGS > config)
 174:Generated_Source\PSoC6/ADC.c ****     {
 175:Generated_Source\PSoC6/ADC.c ****         /* Stop the ADC before changing configurations */
 176:Generated_Source\PSoC6/ADC.c ****         ADC_Stop();
 177:Generated_Source\PSoC6/ADC.c ****         ADC_selected = 1u;
 178:Generated_Source\PSoC6/ADC.c **** 
 179:Generated_Source\PSoC6/ADC.c ****         if(0u == ADC_initVar)
 180:Generated_Source\PSoC6/ADC.c ****         {
 181:Generated_Source\PSoC6/ADC.c ****             ADC_Init();
 182:Generated_Source\PSoC6/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 183:Generated_Source\PSoC6/ADC.c ****         }
 184:Generated_Source\PSoC6/ADC.c ****         #if (ADC_VREF_ROUTED)
 185:Generated_Source\PSoC6/ADC.c ****             ADC_vrefAMux_DisconnectAll();
 186:Generated_Source\PSoC6/ADC.c ****         #endif
 187:Generated_Source\PSoC6/ADC.c **** 
 188:Generated_Source\PSoC6/ADC.c ****         ADC_InitConfig(&ADC_allConfigs[config]);
 189:Generated_Source\PSoC6/ADC.c **** 
 190:Generated_Source\PSoC6/ADC.c ****         #if (ADC_VREF_ROUTED)
 191:Generated_Source\PSoC6/ADC.c ****             ADC_vrefAMux_Select((uint8)config);
 192:Generated_Source\PSoC6/ADC.c ****         #endif
 193:Generated_Source\PSoC6/ADC.c **** 
 194:Generated_Source\PSoC6/ADC.c ****         ADC_currentConfig = config;
 195:Generated_Source\PSoC6/ADC.c **** 
 196:Generated_Source\PSoC6/ADC.c ****         if(1u == restart)
 197:Generated_Source\PSoC6/ADC.c ****         {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 44


 198:Generated_Source\PSoC6/ADC.c ****             /* Restart the ADC */
 199:Generated_Source\PSoC6/ADC.c ****             ADC_Start();
 200:Generated_Source\PSoC6/ADC.c **** 
 201:Generated_Source\PSoC6/ADC.c ****             /* Restart the scan */
 202:Generated_Source\PSoC6/ADC.c ****             ADC_StartConvert();
 203:Generated_Source\PSoC6/ADC.c ****         }
 204:Generated_Source\PSoC6/ADC.c ****     }
 205:Generated_Source\PSoC6/ADC.c ****     return;
 206:Generated_Source\PSoC6/ADC.c **** }
 207:Generated_Source\PSoC6/ADC.c **** 
 208:Generated_Source\PSoC6/ADC.c **** /*******************************************************************************
 209:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_StartConvert
 210:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//**
 211:Generated_Source\PSoC6/ADC.c **** *
 212:Generated_Source\PSoC6/ADC.c **** * \brief In continuous mode, this API starts the conversion process and it runs
 213:Generated_Source\PSoC6/ADC.c **** * continuously.
 214:Generated_Source\PSoC6/ADC.c **** 
 215:Generated_Source\PSoC6/ADC.c **** * In Single Shot mode, the function triggers a single scan and
 216:Generated_Source\PSoC6/ADC.c **** * every scan requires a call of this function. The mode is set with the
 217:Generated_Source\PSoC6/ADC.c **** * Sample Mode parameter in the customizer. The customizer setting can be
 218:Generated_Source\PSoC6/ADC.c **** * overridden at run time with the ADC_SetConvertMode() function.
 219:Generated_Source\PSoC6/ADC.c **** *
 220:Generated_Source\PSoC6/ADC.c **** * \param None
 221:Generated_Source\PSoC6/ADC.c **** *
 222:Generated_Source\PSoC6/ADC.c **** * \return None
 223:Generated_Source\PSoC6/ADC.c **** *
 224:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
 225:Generated_Source\PSoC6/ADC.c **** *
 226:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 227:Generated_Source\PSoC6/ADC.c **** void ADC_StartConvert(void)
 228:Generated_Source\PSoC6/ADC.c **** {
 131              		.loc 1 228 0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 0
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135 0000 10B5     		push	{r4, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 4, -8
 138              		.cfi_offset 14, -4
 229:Generated_Source\PSoC6/ADC.c ****     if (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk == (ADC_SAR__HW->SAMPLE_CTRL & SAR_SAMPLE_CTRL_DSI_TR
 139              		.loc 1 229 0
 140 0002 074B     		ldr	r3, .L8
 141 0004 5B68     		ldr	r3, [r3, #4]
 142 0006 5B03     		lsls	r3, r3, #13
 143 0008 04D5     		bpl	.L6
 230:Generated_Source\PSoC6/ADC.c ****     {
 231:Generated_Source\PSoC6/ADC.c ****         Cy_SAR_StartConvert(ADC_SAR__HW, CY_SAR_START_CONVERT_CONTINUOUS);
 144              		.loc 1 231 0
 145 000a 0121     		movs	r1, #1
 146 000c 0448     		ldr	r0, .L8
 147 000e FFF7FEFF 		bl	Cy_SAR_StartConvert
 148              	.LVL11:
 149 0012 03E0     		b	.L5
 150              	.L6:
 232:Generated_Source\PSoC6/ADC.c ****     }
 233:Generated_Source\PSoC6/ADC.c ****     else
 234:Generated_Source\PSoC6/ADC.c ****     {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 45


 235:Generated_Source\PSoC6/ADC.c ****         Cy_SAR_StartConvert(ADC_SAR__HW, CY_SAR_START_CONVERT_SINGLE_SHOT);
 151              		.loc 1 235 0
 152 0014 0021     		movs	r1, #0
 153 0016 0248     		ldr	r0, .L8
 154 0018 FFF7FEFF 		bl	Cy_SAR_StartConvert
 155              	.LVL12:
 156              	.L5:
 236:Generated_Source\PSoC6/ADC.c ****     }
 237:Generated_Source\PSoC6/ADC.c **** }
 157              		.loc 1 237 0
 158              		@ sp needed
 159 001c 10BD     		pop	{r4, pc}
 160              	.L9:
 161 001e C046     		.align	2
 162              	.L8:
 163 0020 00001D41 		.word	1092419584
 164              		.cfi_endproc
 165              	.LFE180:
 166              		.size	ADC_StartConvert, .-ADC_StartConvert
 167              		.section	.text.ADC_SetConvertMode,"ax",%progbits
 168              		.align	2
 169              		.global	ADC_SetConvertMode
 170              		.code	16
 171              		.thumb_func
 172              		.type	ADC_SetConvertMode, %function
 173              	ADC_SetConvertMode:
 174              	.LFB181:
 238:Generated_Source\PSoC6/ADC.c **** 
 239:Generated_Source\PSoC6/ADC.c **** /*******************************************************************************
 240:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_SetConvertMode
 241:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//**
 242:Generated_Source\PSoC6/ADC.c **** *
 243:Generated_Source\PSoC6/ADC.c **** * \brief Sets the conversion mode to either Single-Shot or continuous. This
 244:Generated_Source\PSoC6/ADC.c **** * function overrides the settings applied in the customizer. Changing
 245:Generated_Source\PSoC6/ADC.c **** * configurations will restore the values set in the customizer.
 246:Generated_Source\PSoC6/ADC.c **** *
 247:Generated_Source\PSoC6/ADC.c **** * \param mode Sets the conversion mode.
 248:Generated_Source\PSoC6/ADC.c **** *
 249:Generated_Source\PSoC6/ADC.c **** * \return None
 250:Generated_Source\PSoC6/ADC.c **** *
 251:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
 252:Generated_Source\PSoC6/ADC.c **** *
 253:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 254:Generated_Source\PSoC6/ADC.c **** void ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode)
 255:Generated_Source\PSoC6/ADC.c **** {
 175              		.loc 1 255 0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 180              	.LVL13:
 256:Generated_Source\PSoC6/ADC.c ****     switch(mode)
 181              		.loc 1 256 0
 182 0000 0128     		cmp	r0, #1
 183 0002 06D1     		bne	.L14
 257:Generated_Source\PSoC6/ADC.c ****     {
 258:Generated_Source\PSoC6/ADC.c ****     case CY_SAR_START_CONVERT_CONTINUOUS:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 46


 259:Generated_Source\PSoC6/ADC.c ****         ADC_SAR__HW->SAMPLE_CTRL |= SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 184              		.loc 1 259 0
 185 0004 064A     		ldr	r2, .L15
 186 0006 5368     		ldr	r3, [r2, #4]
 187 0008 8021     		movs	r1, #128
 188 000a C902     		lsls	r1, r1, #11
 189 000c 0B43     		orrs	r3, r1
 190 000e 5360     		str	r3, [r2, #4]
 260:Generated_Source\PSoC6/ADC.c ****         break;
 191              		.loc 1 260 0
 192 0010 04E0     		b	.L10
 193              	.L14:
 261:Generated_Source\PSoC6/ADC.c ****     case CY_SAR_START_CONVERT_SINGLE_SHOT:
 262:Generated_Source\PSoC6/ADC.c ****     default:
 263:Generated_Source\PSoC6/ADC.c ****         ADC_SAR__HW->SAMPLE_CTRL &= ~SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk;
 194              		.loc 1 263 0
 195 0012 034A     		ldr	r2, .L15
 196 0014 5168     		ldr	r1, [r2, #4]
 197 0016 034B     		ldr	r3, .L15+4
 198 0018 0B40     		ands	r3, r1
 199 001a 5360     		str	r3, [r2, #4]
 200              	.L10:
 264:Generated_Source\PSoC6/ADC.c ****         break;
 265:Generated_Source\PSoC6/ADC.c ****     }
 266:Generated_Source\PSoC6/ADC.c **** }
 201              		.loc 1 266 0
 202              		@ sp needed
 203 001c 7047     		bx	lr
 204              	.L16:
 205 001e C046     		.align	2
 206              	.L15:
 207 0020 00001D41 		.word	1092419584
 208 0024 FFFFFBFF 		.word	-262145
 209              		.cfi_endproc
 210              	.LFE181:
 211              		.size	ADC_SetConvertMode, .-ADC_SetConvertMode
 212              		.section	.text.ADC_IRQ_Enable,"ax",%progbits
 213              		.align	2
 214              		.global	ADC_IRQ_Enable
 215              		.code	16
 216              		.thumb_func
 217              		.type	ADC_IRQ_Enable, %function
 218              	ADC_IRQ_Enable:
 219              	.LFB182:
 267:Generated_Source\PSoC6/ADC.c **** 
 268:Generated_Source\PSoC6/ADC.c **** /* ****************************************************************************
 269:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_IRQ_Enable
 270:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//*
 271:Generated_Source\PSoC6/ADC.c **** *
 272:Generated_Source\PSoC6/ADC.c **** * \brief Enables interrupts to occur at the end of a conversion. Global
 273:Generated_Source\PSoC6/ADC.c **** * interrupts must also be enabled for the ADC interrupts to occur.
 274:Generated_Source\PSoC6/ADC.c **** *
 275:Generated_Source\PSoC6/ADC.c **** * \param None
 276:Generated_Source\PSoC6/ADC.c **** *
 277:Generated_Source\PSoC6/ADC.c **** * \return None
 278:Generated_Source\PSoC6/ADC.c **** *
 279:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 47


 280:Generated_Source\PSoC6/ADC.c **** *
 281:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 282:Generated_Source\PSoC6/ADC.c **** void ADC_IRQ_Enable(void){
 220              		.loc 1 282 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 283:Generated_Source\PSoC6/ADC.c ****     /* Interrupt core assignment will be up to the user. */
 284:Generated_Source\PSoC6/ADC.c ****     #ifdef ADC_IRQ__INTC_CORTEXM4_ASSIGNED
 285:Generated_Source\PSoC6/ADC.c ****     #if (CY_CPU_CORTEX_M4)
 286:Generated_Source\PSoC6/ADC.c ****         NVIC_EnableIRQ(ADC_IRQ_cfg.intrSrc);
 287:Generated_Source\PSoC6/ADC.c ****     #endif
 288:Generated_Source\PSoC6/ADC.c ****     #endif
 289:Generated_Source\PSoC6/ADC.c **** 
 290:Generated_Source\PSoC6/ADC.c ****     #ifdef ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 291:Generated_Source\PSoC6/ADC.c ****     #if (CY_CPU_CORTEX_M0P)
 292:Generated_Source\PSoC6/ADC.c ****         NVIC_EnableIRQ(ADC_IRQ_cfg.intrSrc);
 293:Generated_Source\PSoC6/ADC.c ****     #endif
 294:Generated_Source\PSoC6/ADC.c ****     #endif
 295:Generated_Source\PSoC6/ADC.c **** }
 225              		.loc 1 295 0
 226              		@ sp needed
 227 0000 7047     		bx	lr
 228              		.cfi_endproc
 229              	.LFE182:
 230              		.size	ADC_IRQ_Enable, .-ADC_IRQ_Enable
 231 0002 C046     		.section	.text.ADC_IRQ_Disable,"ax",%progbits
 232              		.align	2
 233              		.global	ADC_IRQ_Disable
 234              		.code	16
 235              		.thumb_func
 236              		.type	ADC_IRQ_Disable, %function
 237              	ADC_IRQ_Disable:
 238              	.LFB183:
 296:Generated_Source\PSoC6/ADC.c **** 
 297:Generated_Source\PSoC6/ADC.c **** /* ****************************************************************************
 298:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_IRQ_Disable
 299:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//*
 300:Generated_Source\PSoC6/ADC.c **** *
 301:Generated_Source\PSoC6/ADC.c **** * \brief Disables end of conversion interrupts.
 302:Generated_Source\PSoC6/ADC.c **** *
 303:Generated_Source\PSoC6/ADC.c **** * \param None
 304:Generated_Source\PSoC6/ADC.c **** *
 305:Generated_Source\PSoC6/ADC.c **** * \return None
 306:Generated_Source\PSoC6/ADC.c **** *
 307:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
 308:Generated_Source\PSoC6/ADC.c **** *
 309:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 310:Generated_Source\PSoC6/ADC.c **** void ADC_IRQ_Disable(void){
 239              		.loc 1 310 0
 240              		.cfi_startproc
 241              		@ args = 0, pretend = 0, frame = 0
 242              		@ frame_needed = 0, uses_anonymous_args = 0
 243              		@ link register save eliminated.
 311:Generated_Source\PSoC6/ADC.c ****     /* Interrupt core assignment will be up to the user. */
 312:Generated_Source\PSoC6/ADC.c ****     #ifdef ADC_IRQ__INTC_CORTEXM4_ASSIGNED
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 48


 313:Generated_Source\PSoC6/ADC.c ****     #if (CY_CPU_CORTEX_M4)
 314:Generated_Source\PSoC6/ADC.c ****         NVIC_DisableIRQ(ADC_IRQ_cfg.intrSrc);
 315:Generated_Source\PSoC6/ADC.c ****     #endif
 316:Generated_Source\PSoC6/ADC.c ****     #endif
 317:Generated_Source\PSoC6/ADC.c **** 
 318:Generated_Source\PSoC6/ADC.c ****     #ifdef ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 319:Generated_Source\PSoC6/ADC.c ****     #if (CY_CPU_CORTEX_M0P)
 320:Generated_Source\PSoC6/ADC.c ****         NVIC_DisableIRQ(ADC_IRQ_cfg.intrSrc);
 321:Generated_Source\PSoC6/ADC.c ****     #endif
 322:Generated_Source\PSoC6/ADC.c ****     #endif
 323:Generated_Source\PSoC6/ADC.c **** }
 244              		.loc 1 323 0
 245              		@ sp needed
 246 0000 7047     		bx	lr
 247              		.cfi_endproc
 248              	.LFE183:
 249              		.size	ADC_IRQ_Disable, .-ADC_IRQ_Disable
 250 0002 C046     		.section	.text.ADC_SetEosMask,"ax",%progbits
 251              		.align	2
 252              		.global	ADC_SetEosMask
 253              		.code	16
 254              		.thumb_func
 255              		.type	ADC_SetEosMask, %function
 256              	ADC_SetEosMask:
 257              	.LFB184:
 324:Generated_Source\PSoC6/ADC.c **** 
 325:Generated_Source\PSoC6/ADC.c **** /*******************************************************************************
 326:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_SetEosMask
 327:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//**
 328:Generated_Source\PSoC6/ADC.c **** *
 329:Generated_Source\PSoC6/ADC.c **** * \brief Sets or clears the End of Scan (EOS) interrupt mask.
 330:Generated_Source\PSoC6/ADC.c **** *
 331:Generated_Source\PSoC6/ADC.c **** * \param mask 1 to set the mask, 0 to clear the mask.
 332:Generated_Source\PSoC6/ADC.c **** *
 333:Generated_Source\PSoC6/ADC.c **** * \return None
 334:Generated_Source\PSoC6/ADC.c **** *
 335:Generated_Source\PSoC6/ADC.c **** * \sideeffect All other bits in the INTR register are cleared by this function.
 336:Generated_Source\PSoC6/ADC.c **** *
 337:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 338:Generated_Source\PSoC6/ADC.c **** void ADC_SetEosMask(uint32_t mask)
 339:Generated_Source\PSoC6/ADC.c **** {
 258              		.loc 1 339 0
 259              		.cfi_startproc
 260              		@ args = 0, pretend = 0, frame = 0
 261              		@ frame_needed = 0, uses_anonymous_args = 0
 262              	.LVL14:
 263 0000 10B5     		push	{r4, lr}
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 14, -4
 340:Generated_Source\PSoC6/ADC.c ****     uint32_t intrMaskReg;
 341:Generated_Source\PSoC6/ADC.c **** 
 342:Generated_Source\PSoC6/ADC.c ****     intrMaskReg = (0uL == mask) ? CY_SAR_DEINIT : SAR_INTR_MASK_EOS_MASK_Msk;
 267              		.loc 1 342 0
 268 0002 441E     		subs	r4, r0, #1
 269 0004 A041     		sbcs	r0, r0, r4
 270              	.LVL15:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 49


 271 0006 C4B2     		uxtb	r4, r0
 272              	.LVL16:
 273              	.LBB41:
 274              	.LBB42:
 275              		.file 3 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar SAR ADC Subsystem (SAR)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 50


  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 51


 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 52


 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 53


 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 54


 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 55


 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 56


 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 57


 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_D
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 58


 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_Sleep flow</td>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 59


 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syslib/cy_syslib.h"
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syspm/cy_syspm.h"
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifndef CY_IP_MXS40PASS_SAR
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     #error "The SAR driver is not supported on this device"
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        10
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 60


 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 61


 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 62


 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 63


 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 64


 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 65


 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 66


 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 67


1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 68


1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 69


1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 70


1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 71


1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 72


1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Sleep(SAR_Type *base);
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 73


1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 74


1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CTRL &= ~SAR_CTRL_ENABLED_Msk;
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->CHAN_RESULT_UPDATED;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 75


1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CHAN_EN = enableMask;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->RANGE_COND = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->INTR;
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 76


1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR = intrMask;
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) base->INTR;
1567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterrupt
1571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Trigger an interrupt with software.
1574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to set.
1580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask)
1589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
1591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 77


1592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR_SET = intrMask;
1593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetInterruptMask
1597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable which interrupts can trigger the CPU interrupt controller.
1600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts. Select one or more values from \ref cy_en_sar_intr_mask_t
1606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and "OR" them together.
1607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_MASK_NONE : Disable EOS, overflow, and firmware collision interrupts.
1608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_INTERRUPT_MASK
1617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask)
1620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
 276              		.loc 3 1621 0
 277 0008 072C     		cmp	r4, #7
 278 000a 03D9     		bls	.L20
 279 000c 0449     		ldr	r1, .L21
 280 000e 0548     		ldr	r0, .L21+4
 281 0010 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 282              	.LVL17:
 283              	.L20:
1622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR_MASK = intrMask;
 284              		.loc 3 1623 0
 285 0014 8623     		movs	r3, #134
 286 0016 9B00     		lsls	r3, r3, #2
 287 0018 034A     		ldr	r2, .L21+8
 288 001a D450     		str	r4, [r2, r3]
 289              	.LVL18:
 290              	.LBE42:
 291              	.LBE41:
 343:Generated_Source\PSoC6/ADC.c **** 
 344:Generated_Source\PSoC6/ADC.c ****     Cy_SAR_SetInterruptMask(ADC_SAR__HW, intrMaskReg);
 345:Generated_Source\PSoC6/ADC.c **** }
 292              		.loc 1 345 0
 293              		@ sp needed
 294              	.LVL19:
 295 001c 10BD     		pop	{r4, pc}
 296              	.L22:
 297 001e C046     		.align	2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 78


 298              	.L21:
 299 0020 55060000 		.word	1621
 300 0024 00000000 		.word	.LC0
 301 0028 00001D41 		.word	1092419584
 302              		.cfi_endproc
 303              	.LFE184:
 304              		.size	ADC_SetEosMask, .-ADC_SetEosMask
 305              		.section	.text.ADC_SetChanMask,"ax",%progbits
 306              		.align	2
 307              		.global	ADC_SetChanMask
 308              		.code	16
 309              		.thumb_func
 310              		.type	ADC_SetChanMask, %function
 311              	ADC_SetChanMask:
 312              	.LFB185:
 346:Generated_Source\PSoC6/ADC.c **** 
 347:Generated_Source\PSoC6/ADC.c **** /******************************************************************************
 348:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_SetChanMask
 349:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//*
 350:Generated_Source\PSoC6/ADC.c **** *
 351:Generated_Source\PSoC6/ADC.c **** * \brief Sets enable/disable mask for all channels in current configuration.
 352:Generated_Source\PSoC6/ADC.c **** *
 353:Generated_Source\PSoC6/ADC.c **** *
 354:Generated_Source\PSoC6/ADC.c **** * \param enableMask
 355:Generated_Source\PSoC6/ADC.c **** *  Channel enable/disable mask.
 356:Generated_Source\PSoC6/ADC.c **** *
 357:Generated_Source\PSoC6/ADC.c **** * \sideeffect
 358:Generated_Source\PSoC6/ADC.c **** *  None.
 359:Generated_Source\PSoC6/ADC.c **** *
 360:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 361:Generated_Source\PSoC6/ADC.c **** void ADC_SetChanMask(uint32_t enableMask)
 362:Generated_Source\PSoC6/ADC.c **** {
 313              		.loc 1 362 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              	.LVL20:
 318 0000 10B5     		push	{r4, lr}
 319              		.cfi_def_cfa_offset 8
 320              		.cfi_offset 4, -8
 321              		.cfi_offset 14, -4
 363:Generated_Source\PSoC6/ADC.c ****     uint32 chanCount = ADC_allConfigs[ADC_currentConfig].numChannels;
 322              		.loc 1 363 0
 323 0002 0B4B     		ldr	r3, .L25
 324 0004 1B68     		ldr	r3, [r3]
 325 0006 9A00     		lsls	r2, r3, #2
 326 0008 D318     		adds	r3, r2, r3
 327 000a 9A00     		lsls	r2, r3, #2
 328 000c 094B     		ldr	r3, .L25+4
 329 000e 9A18     		adds	r2, r3, r2
 330 0010 5368     		ldr	r3, [r2, #4]
 331              	.LVL21:
 364:Generated_Source\PSoC6/ADC.c ****     enableMask &= (uint32)((uint32)(1ul << chanCount) - 1ul);
 332              		.loc 1 364 0
 333 0012 0124     		movs	r4, #1
 334 0014 9C40     		lsls	r4, r4, r3
 335 0016 013C     		subs	r4, r4, #1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 79


 336 0018 0440     		ands	r4, r0
 337              	.LVL22:
 338              	.LBB43:
 339              	.LBB44:
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 340              		.loc 3 1479 0
 341 001a 074B     		ldr	r3, .L25+8
 342              	.LVL23:
 343 001c 9C42     		cmp	r4, r3
 344 001e 03D9     		bls	.L24
 345 0020 0649     		ldr	r1, .L25+12
 346 0022 0748     		ldr	r0, .L25+16
 347 0024 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
 348              	.LVL24:
 349              	.L24:
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
 350              		.loc 3 1481 0
 351 0028 064B     		ldr	r3, .L25+20
 352 002a 1C62     		str	r4, [r3, #32]
 353              	.LVL25:
 354              	.LBE44:
 355              	.LBE43:
 365:Generated_Source\PSoC6/ADC.c **** 
 366:Generated_Source\PSoC6/ADC.c ****     Cy_SAR_SetChanMask(ADC_SAR__HW, enableMask);
 367:Generated_Source\PSoC6/ADC.c **** }
 356              		.loc 1 367 0
 357              		@ sp needed
 358              	.LVL26:
 359 002c 10BD     		pop	{r4, pc}
 360              	.L26:
 361 002e C046     		.align	2
 362              	.L25:
 363 0030 00000000 		.word	.LANCHOR0
 364 0034 00000000 		.word	ADC_allConfigs
 365 0038 FFFF0000 		.word	65535
 366 003c C7050000 		.word	1479
 367 0040 00000000 		.word	.LC0
 368 0044 00001D41 		.word	1092419584
 369              		.cfi_endproc
 370              	.LFE185:
 371              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 372              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 373              		.align	2
 374              		.global	ADC_IsEndConversion
 375              		.code	16
 376              		.thumb_func
 377              		.type	ADC_IsEndConversion, %function
 378              	ADC_IsEndConversion:
 379              	.LFB186:
 368:Generated_Source\PSoC6/ADC.c **** 
 369:Generated_Source\PSoC6/ADC.c **** /*******************************************************************************
 370:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_IsEndConversion
 371:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//**
 372:Generated_Source\PSoC6/ADC.c **** *
 373:Generated_Source\PSoC6/ADC.c **** * \brief Immediately returns the status of the conversion or does not return
 374:Generated_Source\PSoC6/ADC.c **** * (blocking) until the conversion completes, depending on the retMode parameter.
 375:Generated_Source\PSoC6/ADC.c **** * In blocking mode, there is a time out of about 10 seconds for a CPU speed of
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 80


 376:Generated_Source\PSoC6/ADC.c **** * 100 Mhz.
 377:Generated_Source\PSoC6/ADC.c **** *
 378:Generated_Source\PSoC6/ADC.c **** * \param retMode Check conversion return mode.
 379:Generated_Source\PSoC6/ADC.c **** *
 380:Generated_Source\PSoC6/ADC.c **** * \return uint32_t: If a nonzero value is returned, the last conversion is complete.
 381:Generated_Source\PSoC6/ADC.c **** * If the returned value is zero, the ADC is still calculating the last result.
 382:Generated_Source\PSoC6/ADC.c **** *
 383:Generated_Source\PSoC6/ADC.c **** * \sideeffect This function reads the end of conversion status, and clears it afterward.
 384:Generated_Source\PSoC6/ADC.c **** *
 385:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 386:Generated_Source\PSoC6/ADC.c **** uint32_t ADC_IsEndConversion(cy_en_sar_return_mode_t retMode)
 387:Generated_Source\PSoC6/ADC.c **** {
 380              		.loc 1 387 0
 381              		.cfi_startproc
 382              		@ args = 0, pretend = 0, frame = 0
 383              		@ frame_needed = 0, uses_anonymous_args = 0
 384              	.LVL27:
 385 0000 10B5     		push	{r4, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 389 0002 0100     		movs	r1, r0
 390              	.LVL28:
 388:Generated_Source\PSoC6/ADC.c ****     uint32 endOfConversion = 0u;
 389:Generated_Source\PSoC6/ADC.c ****     cy_en_sar_status_t result;
 390:Generated_Source\PSoC6/ADC.c **** 
 391:Generated_Source\PSoC6/ADC.c ****     result = Cy_SAR_IsEndConversion(ADC_SAR__HW, retMode);
 391              		.loc 1 391 0
 392 0004 0448     		ldr	r0, .L30
 393              	.LVL29:
 394 0006 FFF7FEFF 		bl	Cy_SAR_IsEndConversion
 395              	.LVL30:
 392:Generated_Source\PSoC6/ADC.c **** 
 393:Generated_Source\PSoC6/ADC.c ****     if (result == CY_SAR_SUCCESS)
 396              		.loc 1 393 0
 397 000a 0028     		cmp	r0, #0
 398 000c 01D0     		beq	.L29
 388:Generated_Source\PSoC6/ADC.c ****     uint32 endOfConversion = 0u;
 399              		.loc 1 388 0
 400 000e 0020     		movs	r0, #0
 401              	.LVL31:
 402 0010 00E0     		b	.L28
 403              	.LVL32:
 404              	.L29:
 394:Generated_Source\PSoC6/ADC.c ****     {
 395:Generated_Source\PSoC6/ADC.c ****         endOfConversion = 1u;
 405              		.loc 1 395 0
 406 0012 0120     		movs	r0, #1
 407              	.LVL33:
 408              	.L28:
 396:Generated_Source\PSoC6/ADC.c ****     }
 397:Generated_Source\PSoC6/ADC.c **** 
 398:Generated_Source\PSoC6/ADC.c ****     return endOfConversion;
 399:Generated_Source\PSoC6/ADC.c **** }
 409              		.loc 1 399 0
 410              		@ sp needed
 411 0014 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 81


 412              	.L31:
 413 0016 C046     		.align	2
 414              	.L30:
 415 0018 00001D41 		.word	1092419584
 416              		.cfi_endproc
 417              	.LFE186:
 418              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 419              		.section	.text.ADC_Init,"ax",%progbits
 420              		.align	2
 421              		.global	ADC_Init
 422              		.code	16
 423              		.thumb_func
 424              		.type	ADC_Init, %function
 425              	ADC_Init:
 426              	.LFB187:
 400:Generated_Source\PSoC6/ADC.c **** 
 401:Generated_Source\PSoC6/ADC.c **** /* ****************************************************************************
 402:Generated_Source\PSoC6/ADC.c **** * Function Name: ADC_Init
 403:Generated_Source\PSoC6/ADC.c **** ****************************************************************************//*
 404:Generated_Source\PSoC6/ADC.c **** *
 405:Generated_Source\PSoC6/ADC.c **** * \brief Initialize the component according to parameters defined in the
 406:Generated_Source\PSoC6/ADC.c **** * customizer.
 407:Generated_Source\PSoC6/ADC.c **** *
 408:Generated_Source\PSoC6/ADC.c **** * \param None
 409:Generated_Source\PSoC6/ADC.c **** *
 410:Generated_Source\PSoC6/ADC.c **** * \return None
 411:Generated_Source\PSoC6/ADC.c **** *
 412:Generated_Source\PSoC6/ADC.c **** * \sideeffect None
 413:Generated_Source\PSoC6/ADC.c **** *
 414:Generated_Source\PSoC6/ADC.c **** *******************************************************************************/
 415:Generated_Source\PSoC6/ADC.c **** void ADC_Init(void)
 416:Generated_Source\PSoC6/ADC.c **** {
 427              		.loc 1 416 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 10B5     		push	{r4, lr}
 432              		.cfi_def_cfa_offset 8
 433              		.cfi_offset 4, -8
 434              		.cfi_offset 14, -4
 435              	.LVL34:
 417:Generated_Source\PSoC6/ADC.c ****     uint32_t configNum = 0u;
 418:Generated_Source\PSoC6/ADC.c **** 
 419:Generated_Source\PSoC6/ADC.c ****     if(0u == ADC_initVar)
 436              		.loc 1 419 0
 437 0002 074B     		ldr	r3, .L34
 438 0004 1B79     		ldrb	r3, [r3, #4]
 439 0006 002B     		cmp	r3, #0
 440 0008 09D1     		bne	.L32
 420:Generated_Source\PSoC6/ADC.c ****     {
 421:Generated_Source\PSoC6/ADC.c ****         /* Interrupt core assignment will be up to the user. Initialize but do not enable the inter
 422:Generated_Source\PSoC6/ADC.c ****         #ifdef ADC_IRQ__INTC_CORTEXM4_ASSIGNED
 423:Generated_Source\PSoC6/ADC.c ****         #if (CY_CPU_CORTEX_M4)
 424:Generated_Source\PSoC6/ADC.c ****             (void)Cy_SysInt_Init(&ADC_IRQ_cfg, &ADC_ISR);
 425:Generated_Source\PSoC6/ADC.c ****         #endif
 426:Generated_Source\PSoC6/ADC.c ****         #endif
 427:Generated_Source\PSoC6/ADC.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 82


 428:Generated_Source\PSoC6/ADC.c ****         #ifdef ADC_IRQ__INTC_CORTEXM0P_ASSIGNED
 429:Generated_Source\PSoC6/ADC.c ****         #if (CY_CPU_CORTEX_M0P)
 430:Generated_Source\PSoC6/ADC.c ****             (void)Cy_SysInt_Init(&ADC_IRQ_cfg, &ADC_ISR);
 431:Generated_Source\PSoC6/ADC.c ****         #endif
 432:Generated_Source\PSoC6/ADC.c ****         #endif
 433:Generated_Source\PSoC6/ADC.c **** 
 434:Generated_Source\PSoC6/ADC.c ****         /* Initialize configuration zero if SelectConfig has not been called */
 435:Generated_Source\PSoC6/ADC.c ****         if(0u == ADC_selected)
 441              		.loc 1 435 0
 442 000a 054B     		ldr	r3, .L34
 443 000c 5B79     		ldrb	r3, [r3, #5]
 444 000e 002B     		cmp	r3, #0
 445 0010 05D1     		bne	.L32
 436:Generated_Source\PSoC6/ADC.c ****         {
 437:Generated_Source\PSoC6/ADC.c ****             ADC_selected = 1u;
 446              		.loc 1 437 0
 447 0012 0122     		movs	r2, #1
 448 0014 024B     		ldr	r3, .L34
 449 0016 5A71     		strb	r2, [r3, #5]
 438:Generated_Source\PSoC6/ADC.c ****             configNum = 0uL;
 439:Generated_Source\PSoC6/ADC.c **** 
 440:Generated_Source\PSoC6/ADC.c ****             /* Change Vref selection if is was routed by Creator. Break. */
 441:Generated_Source\PSoC6/ADC.c ****             #if (ADC_VREF_ROUTED)
 442:Generated_Source\PSoC6/ADC.c ****                 ADC_vrefAMux_DisconnectAll();
 443:Generated_Source\PSoC6/ADC.c ****             #endif
 444:Generated_Source\PSoC6/ADC.c **** 
 445:Generated_Source\PSoC6/ADC.c ****             ADC_InitConfig(&ADC_allConfigs[configNum]);
 450              		.loc 1 445 0
 451 0018 0248     		ldr	r0, .L34+4
 452 001a FFF7FEFF 		bl	ADC_InitConfig
 453              	.LVL35:
 454              	.L32:
 446:Generated_Source\PSoC6/ADC.c **** 
 447:Generated_Source\PSoC6/ADC.c ****             /* Change Vref selection if is was routed by Creator. Make. */
 448:Generated_Source\PSoC6/ADC.c ****             #if (ADC_VREF_ROUTED)
 449:Generated_Source\PSoC6/ADC.c ****                 ADC_vrefAMux_Select((uint8)configNum);
 450:Generated_Source\PSoC6/ADC.c ****             #endif
 451:Generated_Source\PSoC6/ADC.c ****         }
 452:Generated_Source\PSoC6/ADC.c ****     }
 453:Generated_Source\PSoC6/ADC.c **** }
 455              		.loc 1 453 0
 456              		@ sp needed
 457 001e 10BD     		pop	{r4, pc}
 458              	.L35:
 459              		.align	2
 460              	.L34:
 461 0020 00000000 		.word	.LANCHOR0
 462 0024 00000000 		.word	ADC_allConfigs
 463              		.cfi_endproc
 464              	.LFE187:
 465              		.size	ADC_Init, .-ADC_Init
 466              		.section	.text.ADC_Start,"ax",%progbits
 467              		.align	2
 468              		.global	ADC_Start
 469              		.code	16
 470              		.thumb_func
 471              		.type	ADC_Start, %function
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 83


 472              	ADC_Start:
 473              	.LFB176:
  66:Generated_Source\PSoC6/ADC.c ****     if (ADC_INIT_VAR_INIT_FLAG != (ADC_INIT_VAR_INIT_FLAG & ADC_initVar))
 474              		.loc 1 66 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 10B5     		push	{r4, lr}
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 4, -8
 481              		.cfi_offset 14, -4
  67:Generated_Source\PSoC6/ADC.c ****     {
 482              		.loc 1 67 0
 483 0002 074B     		ldr	r3, .L38
 484 0004 1B79     		ldrb	r3, [r3, #4]
 485 0006 DB07     		lsls	r3, r3, #31
 486 0008 06D4     		bmi	.L37
  69:Generated_Source\PSoC6/ADC.c ****         ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 487              		.loc 1 69 0
 488 000a FFF7FEFF 		bl	ADC_Init
 489              	.LVL36:
  70:Generated_Source\PSoC6/ADC.c ****     }
 490              		.loc 1 70 0
 491 000e 044A     		ldr	r2, .L38
 492 0010 1179     		ldrb	r1, [r2, #4]
 493 0012 0123     		movs	r3, #1
 494 0014 0B43     		orrs	r3, r1
 495 0016 1371     		strb	r3, [r2, #4]
 496              	.L37:
 497              	.LBB45:
 498              	.LBB46:
 499              		.file 4 "Generated_Source\\PSoC6\\ADC.h"
   1:Generated_Source\PSoC6/ADC.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC.h **** * \file     ADC.h
   3:Generated_Source\PSoC6/ADC.h **** * \version  2.10
   4:Generated_Source\PSoC6/ADC.h **** *
   5:Generated_Source\PSoC6/ADC.h **** * \brief
   6:Generated_Source\PSoC6/ADC.h **** * Provides the source code to the API for the ADC Component.
   7:Generated_Source\PSoC6/ADC.h **** *
   8:Generated_Source\PSoC6/ADC.h **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC.h **** * \copyright
  10:Generated_Source\PSoC6/ADC.h **** * (c) 2017, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC.h **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC.h **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC.h **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC.h **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC.h **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC.h **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC.h **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC.h **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC.h **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC.h **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC.h **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC.h **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC.h **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC.h **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC.h **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 84


  26:Generated_Source\PSoC6/ADC.h **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC.h **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC.h **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC.h **** * changes to the Software without notice. Cypress does not assume any
  30:Generated_Source\PSoC6/ADC.h **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC.h **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC.h **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC.h **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC.h **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC.h **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC.h **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC.h **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC.h **** #if !defined(CY_ADC_H)
  40:Generated_Source\PSoC6/ADC.h **** #define CY_ADC_H
  41:Generated_Source\PSoC6/ADC.h **** 
  42:Generated_Source\PSoC6/ADC.h **** #include <cy_device_headers.h>
  43:Generated_Source\PSoC6/ADC.h **** #include <sar/cy_sar.h>
  44:Generated_Source\PSoC6/ADC.h **** 
  45:Generated_Source\PSoC6/ADC.h **** #define ADC_VREF_ROUTED                  ((0) == 1u)
  46:Generated_Source\PSoC6/ADC.h **** #if (ADC_VREF_ROUTED)
  47:Generated_Source\PSoC6/ADC.h **** #include "ADC_vrefAMux.h"
  48:Generated_Source\PSoC6/ADC.h **** #endif
  49:Generated_Source\PSoC6/ADC.h **** 
  50:Generated_Source\PSoC6/ADC.h **** #define ADC_CLOCK_INTERNAL               ((1) == 1u)
  51:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  52:Generated_Source\PSoC6/ADC.h **** #include "ADC_intSarClock.h"
  53:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  54:Generated_Source\PSoC6/ADC.h **** 
  55:Generated_Source\PSoC6/ADC.h **** /**
  56:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_structures
  57:Generated_Source\PSoC6/ADC.h **** *
  58:Generated_Source\PSoC6/ADC.h **** */
  59:Generated_Source\PSoC6/ADC.h **** typedef struct
  60:Generated_Source\PSoC6/ADC.h **** {
  61:Generated_Source\PSoC6/ADC.h ****     uint32_t channelBase;                   /* Start of channels for the configuration */
  62:Generated_Source\PSoC6/ADC.h ****     uint32_t numChannels;                   /* Number of channels in the configuration */
  63:Generated_Source\PSoC6/ADC.h ****     const cy_stc_sar_config_t *hwConfigStc; /* PDL structure */
  64:Generated_Source\PSoC6/ADC.h ****     uint32_t miscConfig;                    /* Miscellaneous configuration bits broken down as foll
  65:Generated_Source\PSoC6/ADC.h ****                                             [0] - Freerunning: Set if the sample mode is freerunnin
  66:Generated_Source\PSoC6/ADC.h ****                                             [2] - Mux Switch 0: Set when VSSA is used for the neg i
  67:Generated_Source\PSoC6/ADC.h ****                                             */
  68:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
  69:Generated_Source\PSoC6/ADC.h ****     uint32_t clkDivider;                    /* Clock divider */
  70:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CLOCK_INTERNAL */
  71:Generated_Source\PSoC6/ADC.h **** 
  72:Generated_Source\PSoC6/ADC.h **** } ADC_CONFIG_STRUCT;
  73:Generated_Source\PSoC6/ADC.h **** /** @} structures */
  74:Generated_Source\PSoC6/ADC.h **** 
  75:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
  76:Generated_Source\PSoC6/ADC.h **** * Function Prototypes
  77:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
  78:Generated_Source\PSoC6/ADC.h **** void ADC_SelectConfig(uint32_t config, uint32_t restart);
  79:Generated_Source\PSoC6/ADC.h **** void ADC_InitConfig(const ADC_CONFIG_STRUCT *config);
  80:Generated_Source\PSoC6/ADC.h **** void ADC_Init(void);
  81:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void);
  82:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 85


  83:Generated_Source\PSoC6/ADC.h **** /**
  84:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_general
  85:Generated_Source\PSoC6/ADC.h **** * @{
  86:Generated_Source\PSoC6/ADC.h **** */
  87:Generated_Source\PSoC6/ADC.h **** void ADC_Start(void);
  88:Generated_Source\PSoC6/ADC.h **** void ADC_StartEx(cy_israddress userIsr);
  89:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Stop(void);
  90:Generated_Source\PSoC6/ADC.h **** void ADC_StartConvert(void);
  91:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_StopConvert(void);
  92:Generated_Source\PSoC6/ADC.h **** void ADC_SetConvertMode(cy_en_sar_start_convert_sel_t mode);
  93:Generated_Source\PSoC6/ADC.h **** void ADC_SetEosMask(uint32_t mask);
  94:Generated_Source\PSoC6/ADC.h **** uint32_t ADC_IsEndConversion(cy_en_sar_return_mode_t retMode);
  95:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_GetResult16(uint32_t chan);
  96:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_GetResult32(uint32_t chan);
  97:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLowLimit(uint32_t lowLimit);
  98:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetHighLimit(uint32_t highLimit);
  99:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetLimitMask(uint32_t limitMask);
 100:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_SetSatMask(uint32_t satMask);
 101:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetOffset(uint32_t chan, int16_t offset);
 102:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE cy_en_sar_status_t ADC_SetGain(uint32_t chan, int32_t adcGain);
 103:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE float32_t ADC_CountsTo_Volts(uint32_t chan, int16_t adcCounts);
 104:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int16_t ADC_CountsTo_mVolts(uint32_t chan, int16_t adcCounts);
 105:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE int32_t ADC_CountsTo_uVolts(uint32_t chan, int16_t adcCounts);
 106:Generated_Source\PSoC6/ADC.h **** 
 107:Generated_Source\PSoC6/ADC.h **** /** @} general */
 108:Generated_Source\PSoC6/ADC.h **** 
 109:Generated_Source\PSoC6/ADC.h **** void ADC_SetChanMask(uint32_t enableMask);
 110:Generated_Source\PSoC6/ADC.h **** 
 111:Generated_Source\PSoC6/ADC.h **** /**
 112:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_power
 113:Generated_Source\PSoC6/ADC.h **** * @{
 114:Generated_Source\PSoC6/ADC.h **** */
 115:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Sleep(void);
 116:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Wakeup(void);
 117:Generated_Source\PSoC6/ADC.h **** 
 118:Generated_Source\PSoC6/ADC.h **** /** @} power */
 119:Generated_Source\PSoC6/ADC.h **** 
 120:Generated_Source\PSoC6/ADC.h **** /**
 121:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_interrupt
 122:Generated_Source\PSoC6/ADC.h **** * @{
 123:Generated_Source\PSoC6/ADC.h **** */
 124:Generated_Source\PSoC6/ADC.h **** void ADC_ISR(void);
 125:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Enable(void);
 126:Generated_Source\PSoC6/ADC.h **** void ADC_IRQ_Disable(void);
 127:Generated_Source\PSoC6/ADC.h **** 
 128:Generated_Source\PSoC6/ADC.h **** /** @} interrupt */
 129:Generated_Source\PSoC6/ADC.h **** 
 130:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 131:Generated_Source\PSoC6/ADC.h ****                                   Parameters
 132:Generated_Source\PSoC6/ADC.h **** The parameters that are set in the customizer are redefined as constants here.
 133:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 134:Generated_Source\PSoC6/ADC.h **** 
 135:Generated_Source\PSoC6/ADC.h **** /*  Sample Mode setting constants */
 136:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CONFIGS                (1ul)
 137:Generated_Source\PSoC6/ADC.h **** 
 138:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 139:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 customizer defines                                   */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 86


 140:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 141:Generated_Source\PSoC6/ADC.h **** 
 142:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_RATE             (200)
 143:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_BASE            (0u)
 144:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_COUNT           (2u)
 145:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_SEL_MASK           (0x70u)
 146:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_NOMINAL_CLOCK_FREQ      (12000000u)
 147:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CHANNEL_EN              (0x3u)
 148:Generated_Source\PSoC6/ADC.h **** 
 149:Generated_Source\PSoC6/ADC.h **** /* Sample Control Register */
 150:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_ENDED_FORMAT     (0uL)
 151:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFFERENTIAL_FORMAT     (1uL)
 152:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLES_AVERAGED        (7uL)
 153:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_INTR_MASK         (0x0u)
 154:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SATURATE_INTR_MASK      (0x0u)
 155:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VNEG_INPUT_SEL          (7)
 156:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SINGLE_PRESENT          (0)
 157:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_MV_VALUE           (3300)
 158:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME0          (3uL)
 159:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME1          (2uL)
 160:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME2          (2uL)
 161:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_APERTURE_TIME3          (2uL)
 162:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_FREERUNNING             (0u)
 163:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVGERAGING_MODE         (1uL)
 164:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_LOW_LIMIT               (512u)
 165:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_HIGH_LIMIT              (3584u)
 166:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND              (0uL)
 167:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_USE_SOC                 (0uL)
 168:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_PWR                (2uL)
 169:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR                (3uL)
 170:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY                (3uL)
 171:Generated_Source\PSoC6/ADC.h **** 
 172:Generated_Source\PSoC6/ADC.h **** /* Clock parameters*/
 173:Generated_Source\PSoC6/ADC.h **** #if (ADC_CLOCK_INTERNAL)
 174:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG0_NOMINAL_CLOCK_FREQ))
 175:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_CLOCK_INTERNAL) */
 176:Generated_Source\PSoC6/ADC.h **** 
 177:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 178:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 customizer defines                                     */
 179:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 180:Generated_Source\PSoC6/ADC.h **** 
 181:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 182:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 customizer defines                                   */
 183:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 184:Generated_Source\PSoC6/ADC.h **** 
 185:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 186:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_RATE             ()
 187:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_BASE            (u)
 188:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_COUNT           (u)
 189:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_SEL_MASK           (u)
 190:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NOMINAL_CLOCK_FREQ      (u)
 191:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CHANNEL_EN              (u)
 192:Generated_Source\PSoC6/ADC.h **** 
 193:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 194:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_ENDED_FORMAT     (uL)
 195:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFFERENTIAL_FORMAT     (uL)
 196:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLES_AVERAGED        (uL)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 87


 197:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_INTR_MASK         (u)
 198:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SATURATE_INTR_MASK      (u)
 199:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VNEG_INPUT_SEL          ()
 200:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SINGLE_PRESENT          ()
 201:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_MV_VALUE           ()
 202:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME0          (uL)
 203:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME1          (uL)
 204:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME2          (uL)
 205:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_APERTURE_TIME3          (uL)
 206:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_FREERUNNING             (u)
 207:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVGERAGING_MODE         (uL)
 208:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_LOW_LIMIT               (u)
 209:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HIGH_LIMIT              (u)
 210:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND              (uL)
 211:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_USE_SOC                 (0uL)
 212:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_PWR                (uL)
 213:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR                (uL)
 214:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY                (uL)
 215:Generated_Source\PSoC6/ADC.h **** 
 216:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 217:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 218:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG1_NOMINAL_CLOCK_FR
 219:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 220:Generated_Source\PSoC6/ADC.h **** #endif /* #if(ADC_TOTAL_CONFIGS > 1) */
 221:Generated_Source\PSoC6/ADC.h **** 
 222:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 223:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 customizer defines                                     */
 224:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 225:Generated_Source\PSoC6/ADC.h **** 
 226:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 227:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 customizer defines                                         */
 228:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 229:Generated_Source\PSoC6/ADC.h **** 
 230:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 231:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_RATE             ()
 232:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_BASE            (u)
 233:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_COUNT           (u)
 234:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_SEL_MASK           (u)
 235:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_NOMINAL_CLOCK_FREQ      (u)
 236:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CHANNEL_EN              (u)
 237:Generated_Source\PSoC6/ADC.h **** 
 238:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 239:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_ENDED_FORMAT     (uL)
 240:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFFERENTIAL_FORMAT     (uL)
 241:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLES_AVERAGED        (uL)
 242:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_INTR_MASK         (u)
 243:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SATURATE_INTR_MASK      (u)
 244:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VNEG_INPUT_SEL          ()
 245:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SINGLE_PRESENT          ()
 246:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_MV_VALUE           ()
 247:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME0          (uL)
 248:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME1          (uL)
 249:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME2          (uL)
 250:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_APERTURE_TIME3          (uL)
 251:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_FREERUNNING             (u)
 252:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVGERAGING_MODE         (uL)
 253:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_LOW_LIMIT               (u)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 88


 254:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HIGH_LIMIT              (u)
 255:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND              (uL)
 256:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_USE_SOC                 (0uL)
 257:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_PWR                (uL)
 258:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR                (uL)
 259:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY                (uL)
 260:Generated_Source\PSoC6/ADC.h **** 
 261:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 262:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 263:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG2_NOMINAL_CLOCK_FR
 264:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 265:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 2) */
 266:Generated_Source\PSoC6/ADC.h **** 
 267:Generated_Source\PSoC6/ADC.h **** 
 268:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 269:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 customizer defines                                     */
 270:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 271:Generated_Source\PSoC6/ADC.h **** 
 272:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 273:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 customizer defines                                   */
 274:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 275:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 276:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_RATE             ()
 277:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_BASE            (u)
 278:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_COUNT           (u)
 279:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_SEL_MASK           (u)
 280:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NOMINAL_CLOCK_FREQ      (u)
 281:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CHANNEL_EN              (u)
 282:Generated_Source\PSoC6/ADC.h **** 
 283:Generated_Source\PSoC6/ADC.h ****     /* Sample Control Register */
 284:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_ENDED_FORMAT     (uL)
 285:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFFERENTIAL_FORMAT     (uL)
 286:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLES_AVERAGED        (uL)
 287:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_INTR_MASK         (u)
 288:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SATURATE_INTR_MASK      (u)
 289:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VNEG_INPUT_SEL          ()
 290:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SINGLE_PRESENT          ()
 291:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_MV_VALUE           ()
 292:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME0          (uL)
 293:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME1          (uL)
 294:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME2          (uL)
 295:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_APERTURE_TIME3          (uL)
 296:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_FREERUNNING             (u)
 297:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVGERAGING_MODE         (uL)
 298:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_LOW_LIMIT               (u)
 299:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HIGH_LIMIT              (u)
 300:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND              (uL)
 301:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_USE_SOC                 (0uL)
 302:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_PWR                (uL)
 303:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR                (uL)
 304:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY                (uL)
 305:Generated_Source\PSoC6/ADC.h **** 
 306:Generated_Source\PSoC6/ADC.h ****     /* Clock parameters*/
 307:Generated_Source\PSoC6/ADC.h ****     #if (ADC_CLOCK_INTERNAL)
 308:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_CLOCKDIVIDER        (((CYDEV_CLK_PERICLK__HZ) / (ADC_CFG3_NOMINAL_CLOCK_FR
 309:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CLOCK_INTERNAL) */
 310:Generated_Source\PSoC6/ADC.h **** #endif /* (ADC_TOTAL_CONFIGS > 3) */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 89


 311:Generated_Source\PSoC6/ADC.h **** 
 312:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 313:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 customizer defines                                     */
 314:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 315:Generated_Source\PSoC6/ADC.h **** 
 316:Generated_Source\PSoC6/ADC.h **** #define ADC_DEFAULT_SAMPLE_MODE_SEL      (0u)
 317:Generated_Source\PSoC6/ADC.h **** #define ADC_FREERUNNING                  (1u)
 318:Generated_Source\PSoC6/ADC.h **** #define ADC_HARDWARESOC                  (1u)
 319:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VSSA_KELVIN          (0x0uL)
 320:Generated_Source\PSoC6/ADC.h **** #define ADC_NEG_SEL_VREF                 (0x7uL)
 321:Generated_Source\PSoC6/ADC.h **** #define ADC_PWR_CTRL_VREF_NORMAL_PWR     (0x0uL)
 322:Generated_Source\PSoC6/ADC.h **** 
 323:Generated_Source\PSoC6/ADC.h **** /** ADC_TOTAL_CHANNELS_NUM
 324:Generated_Source\PSoC6/ADC.h **** * This constant represents the number of input channels available for scanning.
 325:Generated_Source\PSoC6/ADC.h **** */
 326:Generated_Source\PSoC6/ADC.h **** #define ADC_TOTAL_CHANNELS_NUM           (2u)
 327:Generated_Source\PSoC6/ADC.h **** 
 328:Generated_Source\PSoC6/ADC.h **** /*******************************************************************************
 329:Generated_Source\PSoC6/ADC.h **** *    Variables with External Linkage
 330:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 331:Generated_Source\PSoC6/ADC.h **** /**
 332:Generated_Source\PSoC6/ADC.h **** * \addtogroup group_globals
 333:Generated_Source\PSoC6/ADC.h **** * Globals are noted in the descriptions of the functions that use globals.
 334:Generated_Source\PSoC6/ADC.h **** * They are marked with (R), (W), or (RW) noting whether the variable is read,
 335:Generated_Source\PSoC6/ADC.h **** * write, or read/write.
 336:Generated_Source\PSoC6/ADC.h **** * @{
 337:Generated_Source\PSoC6/ADC.h **** */
 338:Generated_Source\PSoC6/ADC.h **** 
 339:Generated_Source\PSoC6/ADC.h **** /** ADC_initVar
 340:Generated_Source\PSoC6/ADC.h **** * The ADC_initVar variable is used to indicate
 341:Generated_Source\PSoC6/ADC.h **** * initial configuration of this component. The variable is initialized to zero and
 342:Generated_Source\PSoC6/ADC.h **** * set to 1 the first time ADC_Start() is called. This allows for
 343:Generated_Source\PSoC6/ADC.h **** * component initialization without reinitialization in all subsequent calls to the
 344:Generated_Source\PSoC6/ADC.h **** * ADC_Start() routine.
 345:Generated_Source\PSoC6/ADC.h **** *
 346:Generated_Source\PSoC6/ADC.h **** * If reinitialization of the component is required, then the ADC_Init() function
 347:Generated_Source\PSoC6/ADC.h **** * can be called before the ADC_Start() or ADC_Enable()
 348:Generated_Source\PSoC6/ADC.h **** * functions.
 349:Generated_Source\PSoC6/ADC.h **** */
 350:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_initVar;
 351:Generated_Source\PSoC6/ADC.h **** extern uint8_t ADC_selected;
 352:Generated_Source\PSoC6/ADC.h **** extern uint32_t ADC_currentConfig;
 353:Generated_Source\PSoC6/ADC.h **** 
 354:Generated_Source\PSoC6/ADC.h **** #define ADC_INIT_VAR_INIT_FLAG     (0x01u)
 355:Generated_Source\PSoC6/ADC.h **** 
 356:Generated_Source\PSoC6/ADC.h **** extern const ADC_CONFIG_STRUCT ADC_allConfigs[ADC_TOTAL_CONFIGS];
 357:Generated_Source\PSoC6/ADC.h **** 
 358:Generated_Source\PSoC6/ADC.h **** /* SysPm callback structure for deep sleep entry and exit.
 359:Generated_Source\PSoC6/ADC.h ****  * Call the Cy_SysPm_RegisterCallback function with this
 360:Generated_Source\PSoC6/ADC.h ****  * structure before calling Cy_SysPm_DeepSleep.
 361:Generated_Source\PSoC6/ADC.h **** */
 362:Generated_Source\PSoC6/ADC.h **** extern cy_stc_syspm_callback_t ADC_DeepSleepCallbackStruct;
 363:Generated_Source\PSoC6/ADC.h **** 
 364:Generated_Source\PSoC6/ADC.h **** /** @} globals */
 365:Generated_Source\PSoC6/ADC.h **** 
 366:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 367:Generated_Source\PSoC6/ADC.h **** /* *******************Global MUX_SWITCH0 Definitions ************************ */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 90


 368:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 369:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 370:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VSSA to VMINUS when one channel in differential mode used */
 371:Generated_Source\PSoC6/ADC.h ****     #if((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 372:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      0u
 373:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single ended channel */
 374:Generated_Source\PSoC6/ADC.h ****         #define ADC_MUX_SWITCH0_INIT      1u
 375:Generated_Source\PSoC6/ADC.h ****     #endif /* ((ADC_TOTAL_CHANNELS_NUM == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u)) */
 376:Generated_Source\PSoC6/ADC.h **** #else
 377:Generated_Source\PSoC6/ADC.h ****     #define ADC_MUX_SWITCH0_INIT          0u
 378:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 379:Generated_Source\PSoC6/ADC.h **** 
 380:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 381:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 0 calculated defines                                   */
 382:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 383:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME01_INIT \
 384:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME0 \
 385:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 386:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME1 \
 387:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 388:Generated_Source\PSoC6/ADC.h **** 
 389:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_TIME23_INIT \
 390:Generated_Source\PSoC6/ADC.h ****         ((ADC_CFG0_APERTURE_TIME2 \
 391:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 392:Generated_Source\PSoC6/ADC.h ****         | (ADC_CFG0_APERTURE_TIME3 \
 393:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 394:Generated_Source\PSoC6/ADC.h **** 
 395:Generated_Source\PSoC6/ADC.h **** /* Enable soc pin if used */
 396:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DSI_TRIGGER_EN_INIT \
 397:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_USE_SOC \
 398:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 399:Generated_Source\PSoC6/ADC.h **** 
 400:Generated_Source\PSoC6/ADC.h **** /* Set soc operation to edge or level based on sample mode */
 401:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_FREERUNNING == ADC_FREERUNNING)
 402:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 403:Generated_Source\PSoC6/ADC.h **** #else /* Edge trigger */
 404:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_DSI_TRIGGER_LEVEL_INIT    (0u)
 405:Generated_Source\PSoC6/ADC.h **** #endif /* End ADC_CFG0_FREERUNNING == ADC_FREERUNNING */
 406:Generated_Source\PSoC6/ADC.h **** 
 407:Generated_Source\PSoC6/ADC.h **** /* Set SE_NEG_INPUT */
 408:Generated_Source\PSoC6/ADC.h **** #if(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 409:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT \
 410:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 411:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 412:Generated_Source\PSoC6/ADC.h **** #elif(ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 413:Generated_Source\PSoC6/ADC.h **** 
 414:Generated_Source\PSoC6/ADC.h ****     /* Do not connect VNEG to VREF when one channel in differential mode used */
 415:Generated_Source\PSoC6/ADC.h ****     /* Only needed for config 0 since 2+ configs == 2+ channels */
 416:Generated_Source\PSoC6/ADC.h ****     #if((ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_SINGLE_PRESENT == 0u))
 417:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     0u
 418:Generated_Source\PSoC6/ADC.h ****     #else    /* multiple channels or one single channel */
 419:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG0_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 420:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 421:Generated_Source\PSoC6/ADC.h ****     #endif /* (ADC_CFG0_CHANNEL_COUNT == 1u) && (ADC_CFG0_CHANNELS_MODE != 0u) */
 422:Generated_Source\PSoC6/ADC.h **** #elif (ADC_CFG0_SINGLE_PRESENT != 0u)
 423:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         ADC_CFG0_NEG_OTHER
 424:Generated_Source\PSoC6/ADC.h **** #else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 91


 425:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SE_NEG_INPUT_INIT         0u
 426:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 427:Generated_Source\PSoC6/ADC.h **** 
 428:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 429:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG0 << SAR_CTRL_NEG_S
 430:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          0u
 431:Generated_Source\PSoC6/ADC.h **** #else /* Disable SAR sequencer from enabling routing switches in single channel mode */
 432:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_SWITCH_CONF_INIT          SAR_CTRL_SWITCH_DISABLE_Msk
 433:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_NEG_OTHER                 0u
 434:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT > 1u */
 435:Generated_Source\PSoC6/ADC.h **** 
 436:Generated_Source\PSoC6/ADC.h **** /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 437:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CHANNELS_NUM == 1u)
 438:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      0u
 439:Generated_Source\PSoC6/ADC.h **** #else
 440:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG0_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 441:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_CFG0_CHANNEL_COUNT == 1u */
 442:Generated_Source\PSoC6/ADC.h **** 
 443:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 444:Generated_Source\PSoC6/ADC.h **** 
 445:Generated_Source\PSoC6/ADC.h **** /* SAMPLE_CTRL initial values */
 446:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SE_RESULT_FORMAT_INIT \
 447:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SINGLE_ENDED_FORMAT \
 448:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 449:Generated_Source\PSoC6/ADC.h **** 
 450:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 451:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_DIFFERENTIAL_FORMAT \
 452:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 453:Generated_Source\PSoC6/ADC.h **** 
 454:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 455:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SAMPLES_AVERAGED \
 456:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 457:Generated_Source\PSoC6/ADC.h **** 
 458:Generated_Source\PSoC6/ADC.h **** /* Combination of Average Mode and Average Shift */
 459:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_AVG_MODE_INIT \
 460:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_AVGERAGING_MODE \
 461:Generated_Source\PSoC6/ADC.h ****         << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 462:Generated_Source\PSoC6/ADC.h **** 
 463:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_TRIGGER_OUT_INIT      (0u)
 464:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_UAB_SCAN_MODE_INIT    (0u)
 465:Generated_Source\PSoC6/ADC.h **** 
 466:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_VREF_POWER_INIT  \
 467:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_PWR \
 468:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_PWR_CTRL_VREF_Pos)
 469:Generated_Source\PSoC6/ADC.h **** 
 470:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_PWR_INIT  \
 471:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_PWR \
 472:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_PWR_Pos)
 473:Generated_Source\PSoC6/ADC.h **** 
 474:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_COMP_DLY_INIT  \
 475:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_COMP_DLY \
 476:Generated_Source\PSoC6/ADC.h ****         << SAR_CTRL_COMP_DLY_Pos)
 477:Generated_Source\PSoC6/ADC.h **** 
 478:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_CTRL_INIT  \
 479:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_VREF_POWER_INIT \
 480:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_VREF_SEL_MASK \
 481:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SE_NEG_INPUT_INIT \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 92


 482:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_HW_CTRL_NEGVREF_INIT \
 483:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_DLY_INIT \
 484:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_REFBUF_EN_Msk \
 485:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_COMP_PWR_INIT \
 486:Generated_Source\PSoC6/ADC.h ****         | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 487:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_SWITCH_CONF_INIT )
 488:Generated_Source\PSoC6/ADC.h **** 
 489:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_SAMPLE_CTRL_INIT \
 490:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_SE_RESULT_FORMAT_INIT \
 491:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DIFF_RESULT_FORMAT_INIT \
 492:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_SAMPLES_NUM_INIT \
 493:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_AVG_MODE_INIT \
 494:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_LEVEL_INIT \
 495:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_DSI_TRIGGER_EN_INIT \
 496:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_UAB_SCAN_MODE_INIT \
 497:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 498:Generated_Source\PSoC6/ADC.h ****         | ADC_CFG0_TRIGGER_OUT_INIT \
 499:Generated_Source\PSoC6/ADC.h ****         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 500:Generated_Source\PSoC6/ADC.h **** )
 501:Generated_Source\PSoC6/ADC.h **** 
 502:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_THRES_INIT \
 503:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_LOW_LIMIT \
 504:Generated_Source\PSoC6/ADC.h ****         | (uint32)((uint32)ADC_CFG0_HIGH_LIMIT \
 505:Generated_Source\PSoC6/ADC.h ****         << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 506:Generated_Source\PSoC6/ADC.h **** 
 507:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG0_RANGE_COND
 508:Generated_Source\PSoC6/ADC.h **** 
 509:Generated_Source\PSoC6/ADC.h **** /* Misc Config
 510:Generated_Source\PSoC6/ADC.h ****     [0] - Freerunning: Set if the sample mode is freerunning
 511:Generated_Source\PSoC6/ADC.h **** */
 512:Generated_Source\PSoC6/ADC.h **** #define ADC_CFG0_MISC_CONFIG_INIT \
 513:Generated_Source\PSoC6/ADC.h ****         (ADC_CFG0_FREERUNNING)
 514:Generated_Source\PSoC6/ADC.h **** 
 515:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 516:Generated_Source\PSoC6/ADC.h **** /* End configuration 0 calculated defines                                     */
 517:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 518:Generated_Source\PSoC6/ADC.h **** 
 519:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 520:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 1 calculated defines                                   */
 521:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 522:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 1)
 523:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME01_INIT \
 524:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME0 \
 525:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 526:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME1 \
 527:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 528:Generated_Source\PSoC6/ADC.h **** 
 529:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_TIME23_INIT \
 530:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG1_APERTURE_TIME2 \
 531:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 532:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG1_APERTURE_TIME3 \
 533:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 534:Generated_Source\PSoC6/ADC.h **** 
 535:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 536:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DSI_TRIGGER_EN_INIT \
 537:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_USE_SOC \
 538:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 93


 539:Generated_Source\PSoC6/ADC.h **** 
 540:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 541:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_FREERUNNING == ADC_FREERUNNING)
 542:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 543:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 544:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_DSI_TRIGGER_LEVEL_INIT    (0u)
 545:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG1_FREERUNNING == ADC_FREERUNNING */
 546:Generated_Source\PSoC6/ADC.h **** 
 547:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 548:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 549:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT \
 550:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 551:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 552:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 553:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 554:Generated_Source\PSoC6/ADC.h ****                                                             << SAR_CTRL_NEG_SEL_Pos )
 555:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG1_SINGLE_PRESENT != 0u)
 556:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         ADC_CFG1_NEG_OTHER
 557:Generated_Source\PSoC6/ADC.h ****     #else
 558:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG1_SE_NEG_INPUT_INIT         0u
 559:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG1_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 560:Generated_Source\PSoC6/ADC.h **** 
 561:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG1 << SAR_CTRL_NEG_S
 562:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SWITCH_CONF_INIT          0u
 563:Generated_Source\PSoC6/ADC.h **** 
 564:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 565:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 566:Generated_Source\PSoC6/ADC.h **** 
 567:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 568:Generated_Source\PSoC6/ADC.h **** 
 569:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 570:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SE_RESULT_FORMAT_INIT \
 571:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SINGLE_ENDED_FORMAT \
 572:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 573:Generated_Source\PSoC6/ADC.h **** 
 574:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 575:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_DIFFERENTIAL_FORMAT \
 576:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 577:Generated_Source\PSoC6/ADC.h **** 
 578:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 579:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SAMPLES_AVERAGED \
 580:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 581:Generated_Source\PSoC6/ADC.h **** 
 582:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 583:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_AVG_MODE_INIT \
 584:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_AVGERAGING_MODE \
 585:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 586:Generated_Source\PSoC6/ADC.h **** 
 587:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_TRIGGER_OUT_INIT      (0u)
 588:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_UAB_SCAN_MODE_INIT    (0u)
 589:Generated_Source\PSoC6/ADC.h **** 
 590:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_VREF_POWER_INIT  \
 591:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_PWR \
 592:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 593:Generated_Source\PSoC6/ADC.h **** 
 594:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_PWR_INIT  \
 595:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_PWR \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 94


 596:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 597:Generated_Source\PSoC6/ADC.h **** 
 598:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_COMP_DLY_INIT  \
 599:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_COMP_DLY \
 600:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 601:Generated_Source\PSoC6/ADC.h **** 
 602:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_CTRL_INIT  \
 603:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_VREF_POWER_INIT \
 604:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_VREF_SEL_MASK \
 605:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SE_NEG_INPUT_INIT \
 606:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_HW_CTRL_NEGVREF_INIT \
 607:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_DLY_INIT \
 608:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 609:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_COMP_PWR_INIT \
 610:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 611:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_SWITCH_CONF_INIT )
 612:Generated_Source\PSoC6/ADC.h **** 
 613:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_SAMPLE_CTRL_INIT \
 614:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_SE_RESULT_FORMAT_INIT \
 615:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DIFF_RESULT_FORMAT_INIT \
 616:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_SAMPLES_NUM_INIT \
 617:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_AVG_MODE_INIT \
 618:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_LEVEL_INIT \
 619:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_DSI_TRIGGER_EN_INIT \
 620:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_UAB_SCAN_MODE_INIT \
 621:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 622:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG1_TRIGGER_OUT_INIT \
 623:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 624:Generated_Source\PSoC6/ADC.h ****     )
 625:Generated_Source\PSoC6/ADC.h **** 
 626:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_THRES_INIT \
 627:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_LOW_LIMIT \
 628:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG1_HIGH_LIMIT \
 629:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 630:Generated_Source\PSoC6/ADC.h **** 
 631:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG1_RANGE_COND
 632:Generated_Source\PSoC6/ADC.h **** 
 633:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 634:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 635:Generated_Source\PSoC6/ADC.h ****     */
 636:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG1_MISC_CONFIG_INIT \
 637:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG1_FREERUNNING)
 638:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 1 */
 639:Generated_Source\PSoC6/ADC.h **** 
 640:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 641:Generated_Source\PSoC6/ADC.h **** /* End configuration 1 calculated defines                                     */
 642:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 643:Generated_Source\PSoC6/ADC.h **** 
 644:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 645:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 2 calculated defines                                   */
 646:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 647:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 2)
 648:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME01_INIT \
 649:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME0 \
 650:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 651:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME1 \
 652:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 95


 653:Generated_Source\PSoC6/ADC.h **** 
 654:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_TIME23_INIT \
 655:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG2_APERTURE_TIME2 \
 656:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 657:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG2_APERTURE_TIME3 \
 658:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 659:Generated_Source\PSoC6/ADC.h **** 
 660:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 661:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DSI_TRIGGER_EN_INIT \
 662:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_USE_SOC \
 663:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 664:Generated_Source\PSoC6/ADC.h **** 
 665:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 666:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_FREERUNNING == ADC_FREERUNNING)
 667:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 668:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 669:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_DSI_TRIGGER_LEVEL_INIT    (0u)
 670:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG2_FREERUNNING == ADC_FREERUNNING */
 671:Generated_Source\PSoC6/ADC.h **** 
 672:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT */
 673:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 674:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT \
 675:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 676:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 677:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 678:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 679:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 680:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG2_SINGLE_PRESENT != 0u)
 681:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         ADC_CFG2_NEG_OTHER
 682:Generated_Source\PSoC6/ADC.h ****     #else
 683:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG2_SE_NEG_INPUT_INIT         0u
 684:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG2_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 685:Generated_Source\PSoC6/ADC.h **** 
 686:Generated_Source\PSoC6/ADC.h ****    #define ADC_CFG2_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG2 << SAR_CTRL_NEG_SE
 687:Generated_Source\PSoC6/ADC.h **** 
 688:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SWITCH_CONF_INIT          0u
 689:Generated_Source\PSoC6/ADC.h **** 
 690:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 691:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 692:Generated_Source\PSoC6/ADC.h **** 
 693:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 694:Generated_Source\PSoC6/ADC.h **** 
 695:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
 696:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SE_RESULT_FORMAT_INIT \
 697:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SINGLE_ENDED_FORMAT \
 698:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 699:Generated_Source\PSoC6/ADC.h **** 
 700:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 701:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_DIFFERENTIAL_FORMAT \
 702:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 703:Generated_Source\PSoC6/ADC.h **** 
 704:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 705:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SAMPLES_AVERAGED \
 706:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 707:Generated_Source\PSoC6/ADC.h **** 
 708:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 709:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_AVG_MODE_INIT \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 96


 710:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_AVGERAGING_MODE \
 711:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 712:Generated_Source\PSoC6/ADC.h **** 
 713:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_TRIGGER_OUT_INIT      (0u)
 714:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_UAB_SCAN_MODE_INIT    (0u)
 715:Generated_Source\PSoC6/ADC.h **** 
 716:Generated_Source\PSoC6/ADC.h **** 
 717:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_VREF_POWER_INIT  \
 718:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_PWR \
 719:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 720:Generated_Source\PSoC6/ADC.h **** 
 721:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_PWR_INIT  \
 722:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_PWR \
 723:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 724:Generated_Source\PSoC6/ADC.h **** 
 725:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_COMP_DLY_INIT  \
 726:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_COMP_DLY \
 727:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 728:Generated_Source\PSoC6/ADC.h **** 
 729:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_CTRL_INIT  \
 730:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_VREF_POWER_INIT \
 731:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_VREF_SEL_MASK \
 732:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SE_NEG_INPUT_INIT \
 733:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_HW_CTRL_NEGVREF_INIT \
 734:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_DLY_INIT \
 735:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 736:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_COMP_PWR_INIT \
 737:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 738:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_SWITCH_CONF_INIT )
 739:Generated_Source\PSoC6/ADC.h **** 
 740:Generated_Source\PSoC6/ADC.h **** 
 741:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_SAMPLE_CTRL_INIT \
 742:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_SE_RESULT_FORMAT_INIT \
 743:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DIFF_RESULT_FORMAT_INIT \
 744:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_SAMPLES_NUM_INIT \
 745:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_AVG_MODE_INIT \
 746:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_LEVEL_INIT \
 747:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_DSI_TRIGGER_EN_INIT \
 748:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_UAB_SCAN_MODE_INIT \
 749:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 750:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG2_TRIGGER_OUT_INIT \
 751:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 752:Generated_Source\PSoC6/ADC.h ****     )
 753:Generated_Source\PSoC6/ADC.h **** 
 754:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_THRES_INIT \
 755:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_LOW_LIMIT \
 756:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG2_HIGH_LIMIT \
 757:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 758:Generated_Source\PSoC6/ADC.h **** 
 759:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG2_RANGE_COND
 760:Generated_Source\PSoC6/ADC.h **** 
 761:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 762:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 763:Generated_Source\PSoC6/ADC.h ****     */
 764:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG2_MISC_CONFIG_INIT \
 765:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG2_FREERUNNING)
 766:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 2 */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 97


 767:Generated_Source\PSoC6/ADC.h **** 
 768:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 769:Generated_Source\PSoC6/ADC.h **** /* End configuration 2 calculated defines                                     */
 770:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 771:Generated_Source\PSoC6/ADC.h **** 
 772:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 773:Generated_Source\PSoC6/ADC.h **** /* Begin configuration 3 calculated defines                                   */
 774:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 775:Generated_Source\PSoC6/ADC.h **** #if(ADC_TOTAL_CONFIGS > 3)
 776:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME01_INIT \
 777:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME0 \
 778:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) \
 779:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME1 \
 780:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos))
 781:Generated_Source\PSoC6/ADC.h **** 
 782:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_TIME23_INIT \
 783:Generated_Source\PSoC6/ADC.h ****             ((ADC_CFG3_APERTURE_TIME2 \
 784:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos) \
 785:Generated_Source\PSoC6/ADC.h ****             | (ADC_CFG3_APERTURE_TIME3 \
 786:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos))
 787:Generated_Source\PSoC6/ADC.h **** 
 788:Generated_Source\PSoC6/ADC.h ****     /* Enable soc pin if used */
 789:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DSI_TRIGGER_EN_INIT \
 790:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_USE_SOC \
 791:Generated_Source\PSoC6/ADC.h ****              << SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Pos)
 792:Generated_Source\PSoC6/ADC.h **** 
 793:Generated_Source\PSoC6/ADC.h ****     /* Set soc operation to edge or level based on sample mode */
 794:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_FREERUNNING == ADC_FREERUNNING)
 795:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk)
 796:Generated_Source\PSoC6/ADC.h ****     #else /* Edge trigger */
 797:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_DSI_TRIGGER_LEVEL_INIT    (0u)
 798:Generated_Source\PSoC6/ADC.h ****     #endif /* End ADC_CFG3_FREERUNNING == ADC_FREERUNNING */
 799:Generated_Source\PSoC6/ADC.h **** 
 800:Generated_Source\PSoC6/ADC.h ****     /* Set SE_NEG_INPUT  */
 801:Generated_Source\PSoC6/ADC.h ****     #if(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN)
 802:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT \
 803:Generated_Source\PSoC6/ADC.h ****             ((uint32)(ADC_NEG_SEL_VSSA_KELVIN \
 804:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_NEG_SEL_Pos ))
 805:Generated_Source\PSoC6/ADC.h ****     #elif(ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VREF)
 806:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT     (ADC_NEG_SEL_VREF \
 807:Generated_Source\PSoC6/ADC.h ****                                                                 << SAR_CTRL_NEG_SEL_Pos )
 808:Generated_Source\PSoC6/ADC.h ****     #elif (ADC_CFG3_SINGLE_PRESENT != 0u)
 809:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         ADC_CFG3_NEG_OTHER
 810:Generated_Source\PSoC6/ADC.h ****     #else
 811:Generated_Source\PSoC6/ADC.h ****         #define ADC_CFG3_SE_NEG_INPUT_INIT         0u
 812:Generated_Source\PSoC6/ADC.h ****     #endif /* ADC_CFG3_VNEG_INPUT_SEL == ADC_NEG_SEL_VSSA_KELVIN */
 813:Generated_Source\PSoC6/ADC.h **** 
 814:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_NEG_OTHER                 (uint16)((uint16)ADC_SARMUX__VNEG3 << SAR_CTRL_NEG_S
 815:Generated_Source\PSoC6/ADC.h **** 
 816:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SWITCH_CONF_INIT          0u
 817:Generated_Source\PSoC6/ADC.h **** 
 818:Generated_Source\PSoC6/ADC.h ****     /* If the SAR is configured for multiple channels, always set SAR_HW_CTRL_NEGVREF to 1 */
 819:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_HW_CTRL_NEGVREF_INIT      SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk
 820:Generated_Source\PSoC6/ADC.h **** 
 821:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_POWER_INIT  (ADC_PWR_CTRL_VREF_NORMAL_PWR)
 822:Generated_Source\PSoC6/ADC.h **** 
 823:Generated_Source\PSoC6/ADC.h ****     /* SAMPLE_CTRL initial values */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 98


 824:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SE_RESULT_FORMAT_INIT \
 825:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SINGLE_ENDED_FORMAT \
 826:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos)
 827:Generated_Source\PSoC6/ADC.h **** 
 828:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 829:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_DIFFERENTIAL_FORMAT \
 830:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos)
 831:Generated_Source\PSoC6/ADC.h **** 
 832:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 833:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SAMPLES_AVERAGED \
 834:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_CNT_Pos)
 835:Generated_Source\PSoC6/ADC.h **** 
 836:Generated_Source\PSoC6/ADC.h ****     /* Combination of Average Mode and Average Shift */
 837:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_AVG_MODE_INIT \
 838:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_AVGERAGING_MODE \
 839:Generated_Source\PSoC6/ADC.h ****             << SAR_SAMPLE_CTRL_AVG_SHIFT_Pos)
 840:Generated_Source\PSoC6/ADC.h **** 
 841:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_TRIGGER_OUT_INIT      (0u)
 842:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_UAB_SCAN_MODE_INIT    (0u)
 843:Generated_Source\PSoC6/ADC.h **** 
 844:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_VREF_POWER_INIT  \
 845:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_PWR \
 846:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_PWR_CTRL_VREF_Pos)
 847:Generated_Source\PSoC6/ADC.h **** 
 848:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_PWR_INIT  \
 849:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_PWR \
 850:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_PWR_Pos)
 851:Generated_Source\PSoC6/ADC.h **** 
 852:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_COMP_DLY_INIT  \
 853:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_COMP_DLY \
 854:Generated_Source\PSoC6/ADC.h ****             << SAR_CTRL_COMP_DLY_Pos)
 855:Generated_Source\PSoC6/ADC.h **** 
 856:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_CTRL_INIT  \
 857:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_VREF_POWER_INIT \
 858:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_VREF_SEL_MASK \
 859:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SE_NEG_INPUT_INIT \
 860:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_HW_CTRL_NEGVREF_INIT \
 861:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_DLY_INIT \
 862:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_REFBUF_EN_Msk \
 863:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_COMP_PWR_INIT \
 864:Generated_Source\PSoC6/ADC.h ****             | SAR_CTRL_DSI_SYNC_CONFIG_Msk  \
 865:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_SWITCH_CONF_INIT )
 866:Generated_Source\PSoC6/ADC.h **** 
 867:Generated_Source\PSoC6/ADC.h **** 
 868:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_SAMPLE_CTRL_INIT \
 869:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_SE_RESULT_FORMAT_INIT \
 870:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DIFF_RESULT_FORMAT_INIT \
 871:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_SAMPLES_NUM_INIT \
 872:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_AVG_MODE_INIT \
 873:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_LEVEL_INIT \
 874:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_DSI_TRIGGER_EN_INIT \
 875:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_UAB_SCAN_MODE_INIT \
 876:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 877:Generated_Source\PSoC6/ADC.h ****             | ADC_CFG3_TRIGGER_OUT_INIT \
 878:Generated_Source\PSoC6/ADC.h ****             | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk \
 879:Generated_Source\PSoC6/ADC.h ****     )
 880:Generated_Source\PSoC6/ADC.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 99


 881:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_THRES_INIT \
 882:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_LOW_LIMIT \
 883:Generated_Source\PSoC6/ADC.h ****             | (uint32)((uint32)ADC_CFG3_HIGH_LIMIT \
 884:Generated_Source\PSoC6/ADC.h ****             << SAR_RANGE_THRES_RANGE_HIGH_Pos))
 885:Generated_Source\PSoC6/ADC.h **** 
 886:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_RANGE_COND_INIT   (cy_en_sar_range_detect_condition_t)ADC_CFG3_RANGE_COND
 887:Generated_Source\PSoC6/ADC.h **** 
 888:Generated_Source\PSoC6/ADC.h ****     /* Misc Config
 889:Generated_Source\PSoC6/ADC.h ****         [0] - Freerunning: Set if the sample mode is freerunning
 890:Generated_Source\PSoC6/ADC.h ****     */
 891:Generated_Source\PSoC6/ADC.h ****     #define ADC_CFG3_MISC_CONFIG_INIT \
 892:Generated_Source\PSoC6/ADC.h ****             (ADC_CFG3_FREERUNNING )
 893:Generated_Source\PSoC6/ADC.h **** 
 894:Generated_Source\PSoC6/ADC.h **** #endif /* ADC_TOTAL_CONFIGS > 3 */
 895:Generated_Source\PSoC6/ADC.h **** 
 896:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 897:Generated_Source\PSoC6/ADC.h **** /* End configuration 3 calculated defines                                     */
 898:Generated_Source\PSoC6/ADC.h **** /* ************************************************************************** */
 899:Generated_Source\PSoC6/ADC.h **** 
 900:Generated_Source\PSoC6/ADC.h **** /******************************************************************************
 901:Generated_Source\PSoC6/ADC.h **** * Function Name: ADC_Enable
 902:Generated_Source\PSoC6/ADC.h **** ****************************************************************************//*
 903:Generated_Source\PSoC6/ADC.h **** *
 904:Generated_Source\PSoC6/ADC.h **** * \brief Enables the component.
 905:Generated_Source\PSoC6/ADC.h **** *
 906:Generated_Source\PSoC6/ADC.h **** * \param None
 907:Generated_Source\PSoC6/ADC.h **** *
 908:Generated_Source\PSoC6/ADC.h **** * \return None
 909:Generated_Source\PSoC6/ADC.h **** *
 910:Generated_Source\PSoC6/ADC.h **** * \sideeffect
 911:Generated_Source\PSoC6/ADC.h **** *  None
 912:Generated_Source\PSoC6/ADC.h **** *
 913:Generated_Source\PSoC6/ADC.h **** *******************************************************************************/
 914:Generated_Source\PSoC6/ADC.h **** __STATIC_INLINE void ADC_Enable(void)
 915:Generated_Source\PSoC6/ADC.h **** {
 916:Generated_Source\PSoC6/ADC.h ****     Cy_SAR_Enable(ADC_SAR__HW);
 500              		.loc 4 916 0
 501 0018 0248     		ldr	r0, .L38+4
 502 001a FFF7FEFF 		bl	Cy_SAR_Enable
 503              	.LVL37:
 504              	.LBE46:
 505              	.LBE45:
  76:Generated_Source\PSoC6/ADC.c **** 
 506              		.loc 1 76 0
 507              		@ sp needed
 508 001e 10BD     		pop	{r4, pc}
 509              	.L39:
 510              		.align	2
 511              	.L38:
 512 0020 00000000 		.word	.LANCHOR0
 513 0024 00001D41 		.word	1092419584
 514              		.cfi_endproc
 515              	.LFE176:
 516              		.size	ADC_Start, .-ADC_Start
 517              		.section	.text.ADC_StartEx,"ax",%progbits
 518              		.align	2
 519              		.global	ADC_StartEx
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 100


 520              		.code	16
 521              		.thumb_func
 522              		.type	ADC_StartEx, %function
 523              	ADC_StartEx:
 524              	.LFB177:
  95:Generated_Source\PSoC6/ADC.c ****     ADC_Start();
 525              		.loc 1 95 0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              	.LVL38:
 530 0000 10B5     		push	{r4, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 4, -8
 533              		.cfi_offset 14, -4
  96:Generated_Source\PSoC6/ADC.c **** 
 534              		.loc 1 96 0
 535 0002 FFF7FEFF 		bl	ADC_Start
 536              	.LVL39:
 113:Generated_Source\PSoC6/ADC.c **** 
 537              		.loc 1 113 0
 538              		@ sp needed
 539 0006 10BD     		pop	{r4, pc}
 540              		.cfi_endproc
 541              	.LFE177:
 542              		.size	ADC_StartEx, .-ADC_StartEx
 543              		.section	.text.ADC_SelectConfig,"ax",%progbits
 544              		.align	2
 545              		.global	ADC_SelectConfig
 546              		.code	16
 547              		.thumb_func
 548              		.type	ADC_SelectConfig, %function
 549              	ADC_SelectConfig:
 550              	.LFB179:
 171:Generated_Source\PSoC6/ADC.c ****     /* Check whether the configuration number is valid or not */
 551              		.loc 1 171 0
 552              		.cfi_startproc
 553              		@ args = 0, pretend = 0, frame = 0
 554              		@ frame_needed = 0, uses_anonymous_args = 0
 555              	.LVL40:
 556 0000 70B5     		push	{r4, r5, r6, lr}
 557              		.cfi_def_cfa_offset 16
 558              		.cfi_offset 4, -16
 559              		.cfi_offset 5, -12
 560              		.cfi_offset 6, -8
 561              		.cfi_offset 14, -4
 562 0002 0400     		movs	r4, r0
 563 0004 0D00     		movs	r5, r1
 173:Generated_Source\PSoC6/ADC.c ****     {
 564              		.loc 1 173 0
 565 0006 0028     		cmp	r0, #0
 566 0008 20D1     		bne	.L41
 567              	.LVL41:
 568              	.LBB47:
 569              	.LBB48:
 570              	.LBB49:
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 101


 571              		.loc 3 1421 0
 572 000a 114A     		ldr	r2, .L44
 573 000c 1368     		ldr	r3, [r2]
 574 000e 5B00     		lsls	r3, r3, #1
 575 0010 5B08     		lsrs	r3, r3, #1
 576 0012 1360     		str	r3, [r2]
 577              	.LVL42:
 578              	.LBE49:
 579              	.LBE48:
 580              	.LBE47:
 177:Generated_Source\PSoC6/ADC.c **** 
 581              		.loc 1 177 0
 582 0014 0F4B     		ldr	r3, .L44+4
 583 0016 0122     		movs	r2, #1
 584 0018 5A71     		strb	r2, [r3, #5]
 179:Generated_Source\PSoC6/ADC.c ****         {
 585              		.loc 1 179 0
 586 001a 1B79     		ldrb	r3, [r3, #4]
 587 001c 002B     		cmp	r3, #0
 588 001e 06D1     		bne	.L43
 181:Generated_Source\PSoC6/ADC.c ****             ADC_initVar |= ADC_INIT_VAR_INIT_FLAG;
 589              		.loc 1 181 0
 590 0020 FFF7FEFF 		bl	ADC_Init
 591              	.LVL43:
 182:Generated_Source\PSoC6/ADC.c ****         }
 592              		.loc 1 182 0
 593 0024 0B4A     		ldr	r2, .L44+4
 594 0026 1179     		ldrb	r1, [r2, #4]
 595 0028 0123     		movs	r3, #1
 596 002a 0B43     		orrs	r3, r1
 597 002c 1371     		strb	r3, [r2, #4]
 598              	.L43:
 188:Generated_Source\PSoC6/ADC.c **** 
 599              		.loc 1 188 0
 600 002e A300     		lsls	r3, r4, #2
 601 0030 1B19     		adds	r3, r3, r4
 602 0032 9800     		lsls	r0, r3, #2
 603 0034 084B     		ldr	r3, .L44+8
 604 0036 C018     		adds	r0, r0, r3
 605 0038 FFF7FEFF 		bl	ADC_InitConfig
 606              	.LVL44:
 194:Generated_Source\PSoC6/ADC.c **** 
 607              		.loc 1 194 0
 608 003c 054B     		ldr	r3, .L44+4
 609 003e 1C60     		str	r4, [r3]
 196:Generated_Source\PSoC6/ADC.c ****         {
 610              		.loc 1 196 0
 611 0040 012D     		cmp	r5, #1
 612 0042 03D1     		bne	.L41
 199:Generated_Source\PSoC6/ADC.c **** 
 613              		.loc 1 199 0
 614 0044 FFF7FEFF 		bl	ADC_Start
 615              	.LVL45:
 202:Generated_Source\PSoC6/ADC.c ****         }
 616              		.loc 1 202 0
 617 0048 FFF7FEFF 		bl	ADC_StartConvert
 618              	.LVL46:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 102


 619              	.L41:
 206:Generated_Source\PSoC6/ADC.c **** 
 620              		.loc 1 206 0
 621              		@ sp needed
 622              	.LVL47:
 623              	.LVL48:
 624 004c 70BD     		pop	{r4, r5, r6, pc}
 625              	.L45:
 626 004e C046     		.align	2
 627              	.L44:
 628 0050 00001D41 		.word	1092419584
 629 0054 00000000 		.word	.LANCHOR0
 630 0058 00000000 		.word	ADC_allConfigs
 631              		.cfi_endproc
 632              	.LFE179:
 633              		.size	ADC_SelectConfig, .-ADC_SelectConfig
 634              		.global	ADC_currentConfig
 635              		.global	ADC_selected
 636              		.global	ADC_initVar
 637              		.section	.rodata.str1.4,"aMS",%progbits,1
 638              		.align	2
 639              	.LC0:
 640 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
 640      72617465 
 640      645F536F 
 640      75726365 
 640      5C50536F 
 641 0030 722F6379 		.ascii	"r/cy_sar.h\000"
 641      5F736172 
 641      2E6800
 642              		.bss
 643              		.align	2
 644              		.set	.LANCHOR0,. + 0
 645              		.type	ADC_currentConfig, %object
 646              		.size	ADC_currentConfig, 4
 647              	ADC_currentConfig:
 648 0000 00000000 		.space	4
 649              		.type	ADC_initVar, %object
 650              		.size	ADC_initVar, 1
 651              	ADC_initVar:
 652 0004 00       		.space	1
 653              		.type	ADC_selected, %object
 654              		.size	ADC_selected, 1
 655              	ADC_selected:
 656 0005 00       		.space	1
 657              		.text
 658              	.Letext0:
 659              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 660              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 661              		.file 7 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_peri.h"
 662              		.file 8 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_sar.h"
 663              		.file 9 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 664              		.file 10 "Generated_Source\\PSoC6\\ADC_intSarClock.h"
 665              		.section	.debug_info,"",%progbits
 666              	.Ldebug_info0:
 667 0000 F2100000 		.4byte	0x10f2
 668 0004 0400     		.2byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 103


 669 0006 00000000 		.4byte	.Ldebug_abbrev0
 670 000a 04       		.byte	0x4
 671 000b 01       		.uleb128 0x1
 672 000c DF080000 		.4byte	.LASF201
 673 0010 0C       		.byte	0xc
 674 0011 FC010000 		.4byte	.LASF202
 675 0015 96060000 		.4byte	.LASF203
 676 0019 00000000 		.4byte	.Ldebug_ranges0+0
 677 001d 00000000 		.4byte	0
 678 0021 00000000 		.4byte	.Ldebug_line0
 679 0025 02       		.uleb128 0x2
 680 0026 02       		.byte	0x2
 681 0027 05       		.byte	0x5
 682 0028 08080000 		.4byte	.LASF0
 683 002c 02       		.uleb128 0x2
 684 002d 01       		.byte	0x1
 685 002e 08       		.byte	0x8
 686 002f 6B0A0000 		.4byte	.LASF1
 687 0033 02       		.uleb128 0x2
 688 0034 01       		.byte	0x1
 689 0035 06       		.byte	0x6
 690 0036 3E000000 		.4byte	.LASF2
 691 003a 03       		.uleb128 0x3
 692 003b 4A000000 		.4byte	.LASF5
 693 003f 05       		.byte	0x5
 694 0040 1D       		.byte	0x1d
 695 0041 2C000000 		.4byte	0x2c
 696 0045 02       		.uleb128 0x2
 697 0046 02       		.byte	0x2
 698 0047 07       		.byte	0x7
 699 0048 B0040000 		.4byte	.LASF3
 700 004c 02       		.uleb128 0x2
 701 004d 04       		.byte	0x4
 702 004e 05       		.byte	0x5
 703 004f 6B020000 		.4byte	.LASF4
 704 0053 03       		.uleb128 0x3
 705 0054 73030000 		.4byte	.LASF6
 706 0058 05       		.byte	0x5
 707 0059 41       		.byte	0x41
 708 005a 5E000000 		.4byte	0x5e
 709 005e 02       		.uleb128 0x2
 710 005f 04       		.byte	0x4
 711 0060 07       		.byte	0x7
 712 0061 1A040000 		.4byte	.LASF7
 713 0065 02       		.uleb128 0x2
 714 0066 08       		.byte	0x8
 715 0067 05       		.byte	0x5
 716 0068 C0010000 		.4byte	.LASF8
 717 006c 02       		.uleb128 0x2
 718 006d 08       		.byte	0x8
 719 006e 07       		.byte	0x7
 720 006f E7000000 		.4byte	.LASF9
 721 0073 04       		.uleb128 0x4
 722 0074 04       		.byte	0x4
 723 0075 05       		.byte	0x5
 724 0076 696E7400 		.ascii	"int\000"
 725 007a 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 104


 726 007b 04       		.byte	0x4
 727 007c 07       		.byte	0x7
 728 007d DF030000 		.4byte	.LASF10
 729 0081 03       		.uleb128 0x3
 730 0082 020A0000 		.4byte	.LASF11
 731 0086 06       		.byte	0x6
 732 0087 18       		.byte	0x18
 733 0088 3A000000 		.4byte	0x3a
 734 008c 03       		.uleb128 0x3
 735 008d BC080000 		.4byte	.LASF12
 736 0091 06       		.byte	0x6
 737 0092 30       		.byte	0x30
 738 0093 53000000 		.4byte	0x53
 739 0097 02       		.uleb128 0x2
 740 0098 04       		.byte	0x4
 741 0099 07       		.byte	0x7
 742 009a 00040000 		.4byte	.LASF13
 743 009e 05       		.uleb128 0x5
 744 009f 8C000000 		.4byte	0x8c
 745 00a3 06       		.uleb128 0x6
 746 00a4 9E000000 		.4byte	0x9e
 747 00a8 07       		.uleb128 0x7
 748 00a9 A3000000 		.4byte	0xa3
 749 00ad B8000000 		.4byte	0xb8
 750 00b1 08       		.uleb128 0x8
 751 00b2 97000000 		.4byte	0x97
 752 00b6 01       		.byte	0x1
 753 00b7 00       		.byte	0
 754 00b8 07       		.uleb128 0x7
 755 00b9 9E000000 		.4byte	0x9e
 756 00bd C8000000 		.4byte	0xc8
 757 00c1 08       		.uleb128 0x8
 758 00c2 97000000 		.4byte	0x97
 759 00c6 7F       		.byte	0x7f
 760 00c7 00       		.byte	0
 761 00c8 07       		.uleb128 0x7
 762 00c9 9E000000 		.4byte	0x9e
 763 00cd D8000000 		.4byte	0xd8
 764 00d1 08       		.uleb128 0x8
 765 00d2 97000000 		.4byte	0x97
 766 00d6 0F       		.byte	0xf
 767 00d7 00       		.byte	0
 768 00d8 09       		.uleb128 0x9
 769 00d9 40       		.byte	0x40
 770 00da 07       		.byte	0x7
 771 00db 27       		.byte	0x27
 772 00dc 1D010000 		.4byte	0x11d
 773 00e0 0A       		.uleb128 0xa
 774 00e1 9F000000 		.4byte	.LASF14
 775 00e5 07       		.byte	0x7
 776 00e6 28       		.byte	0x28
 777 00e7 9E000000 		.4byte	0x9e
 778 00eb 00       		.byte	0
 779 00ec 0A       		.uleb128 0xa
 780 00ed 47080000 		.4byte	.LASF15
 781 00f1 07       		.byte	0x7
 782 00f2 29       		.byte	0x29
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 105


 783 00f3 32010000 		.4byte	0x132
 784 00f7 04       		.byte	0x4
 785 00f8 0A       		.uleb128 0xa
 786 00f9 7A050000 		.4byte	.LASF16
 787 00fd 07       		.byte	0x7
 788 00fe 2A       		.byte	0x2a
 789 00ff 9E000000 		.4byte	0x9e
 790 0103 20       		.byte	0x20
 791 0104 0A       		.uleb128 0xa
 792 0105 C3040000 		.4byte	.LASF17
 793 0109 07       		.byte	0x7
 794 010a 2B       		.byte	0x2b
 795 010b 9E000000 		.4byte	0x9e
 796 010f 24       		.byte	0x24
 797 0110 0A       		.uleb128 0xa
 798 0111 1A070000 		.4byte	.LASF18
 799 0115 07       		.byte	0x7
 800 0116 2C       		.byte	0x2c
 801 0117 4C010000 		.4byte	0x14c
 802 011b 28       		.byte	0x28
 803 011c 00       		.byte	0
 804 011d 07       		.uleb128 0x7
 805 011e A3000000 		.4byte	0xa3
 806 0122 2D010000 		.4byte	0x12d
 807 0126 08       		.uleb128 0x8
 808 0127 97000000 		.4byte	0x97
 809 012b 06       		.byte	0x6
 810 012c 00       		.byte	0
 811 012d 05       		.uleb128 0x5
 812 012e 1D010000 		.4byte	0x11d
 813 0132 06       		.uleb128 0x6
 814 0133 2D010000 		.4byte	0x12d
 815 0137 07       		.uleb128 0x7
 816 0138 A3000000 		.4byte	0xa3
 817 013c 47010000 		.4byte	0x147
 818 0140 08       		.uleb128 0x8
 819 0141 97000000 		.4byte	0x97
 820 0145 05       		.byte	0x5
 821 0146 00       		.byte	0
 822 0147 05       		.uleb128 0x5
 823 0148 37010000 		.4byte	0x137
 824 014c 06       		.uleb128 0x6
 825 014d 47010000 		.4byte	0x147
 826 0151 03       		.uleb128 0x3
 827 0152 97080000 		.4byte	.LASF19
 828 0156 07       		.byte	0x7
 829 0157 2D       		.byte	0x2d
 830 0158 D8000000 		.4byte	0xd8
 831 015c 0B       		.uleb128 0xb
 832 015d 0002     		.2byte	0x200
 833 015f 07       		.byte	0x7
 834 0160 32       		.byte	0x32
 835 0161 72010000 		.4byte	0x172
 836 0165 0A       		.uleb128 0xa
 837 0166 D50A0000 		.4byte	.LASF20
 838 016a 07       		.byte	0x7
 839 016b 33       		.byte	0x33
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 106


 840 016c 72010000 		.4byte	0x172
 841 0170 00       		.byte	0
 842 0171 00       		.byte	0
 843 0172 05       		.uleb128 0x5
 844 0173 B8000000 		.4byte	0xb8
 845 0177 03       		.uleb128 0x3
 846 0178 72080000 		.4byte	.LASF21
 847 017c 07       		.byte	0x7
 848 017d 34       		.byte	0x34
 849 017e 5C010000 		.4byte	0x15c
 850 0182 09       		.uleb128 0x9
 851 0183 40       		.byte	0x40
 852 0184 07       		.byte	0x7
 853 0185 39       		.byte	0x39
 854 0186 D3010000 		.4byte	0x1d3
 855 018a 0A       		.uleb128 0xa
 856 018b CF040000 		.4byte	.LASF22
 857 018f 07       		.byte	0x7
 858 0190 3A       		.byte	0x3a
 859 0191 9E000000 		.4byte	0x9e
 860 0195 00       		.byte	0
 861 0196 0A       		.uleb128 0xa
 862 0197 980A0000 		.4byte	.LASF23
 863 019b 07       		.byte	0x7
 864 019c 3B       		.byte	0x3b
 865 019d 9E000000 		.4byte	0x9e
 866 01a1 04       		.byte	0x4
 867 01a2 0A       		.uleb128 0xa
 868 01a3 47080000 		.4byte	.LASF15
 869 01a7 07       		.byte	0x7
 870 01a8 3C       		.byte	0x3c
 871 01a9 D8010000 		.4byte	0x1d8
 872 01ad 08       		.byte	0x8
 873 01ae 0A       		.uleb128 0xa
 874 01af D5040000 		.4byte	.LASF24
 875 01b3 07       		.byte	0x7
 876 01b4 3D       		.byte	0x3d
 877 01b5 A3000000 		.4byte	0xa3
 878 01b9 20       		.byte	0x20
 879 01ba 0A       		.uleb128 0xa
 880 01bb 6E030000 		.4byte	.LASF25
 881 01bf 07       		.byte	0x7
 882 01c0 3E       		.byte	0x3e
 883 01c1 9E000000 		.4byte	0x9e
 884 01c5 24       		.byte	0x24
 885 01c6 0A       		.uleb128 0xa
 886 01c7 1A070000 		.4byte	.LASF18
 887 01cb 07       		.byte	0x7
 888 01cc 3F       		.byte	0x3f
 889 01cd E2010000 		.4byte	0x1e2
 890 01d1 28       		.byte	0x28
 891 01d2 00       		.byte	0
 892 01d3 05       		.uleb128 0x5
 893 01d4 37010000 		.4byte	0x137
 894 01d8 06       		.uleb128 0x6
 895 01d9 D3010000 		.4byte	0x1d3
 896 01dd 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 107


 897 01de 37010000 		.4byte	0x137
 898 01e2 06       		.uleb128 0x6
 899 01e3 DD010000 		.4byte	0x1dd
 900 01e7 03       		.uleb128 0x3
 901 01e8 FE0A0000 		.4byte	.LASF26
 902 01ec 07       		.byte	0x7
 903 01ed 40       		.byte	0x40
 904 01ee 82010000 		.4byte	0x182
 905 01f2 09       		.uleb128 0x9
 906 01f3 40       		.byte	0x40
 907 01f4 07       		.byte	0x7
 908 01f5 45       		.byte	0x45
 909 01f6 43020000 		.4byte	0x243
 910 01fa 0A       		.uleb128 0xa
 911 01fb CF040000 		.4byte	.LASF22
 912 01ff 07       		.byte	0x7
 913 0200 46       		.byte	0x46
 914 0201 A3000000 		.4byte	0xa3
 915 0205 00       		.byte	0
 916 0206 0A       		.uleb128 0xa
 917 0207 980A0000 		.4byte	.LASF23
 918 020b 07       		.byte	0x7
 919 020c 47       		.byte	0x47
 920 020d 9E000000 		.4byte	0x9e
 921 0211 04       		.byte	0x4
 922 0212 0A       		.uleb128 0xa
 923 0213 47080000 		.4byte	.LASF15
 924 0217 07       		.byte	0x7
 925 0218 48       		.byte	0x48
 926 0219 48020000 		.4byte	0x248
 927 021d 08       		.byte	0x8
 928 021e 0A       		.uleb128 0xa
 929 021f D5040000 		.4byte	.LASF24
 930 0223 07       		.byte	0x7
 931 0224 49       		.byte	0x49
 932 0225 A3000000 		.4byte	0xa3
 933 0229 20       		.byte	0x20
 934 022a 0A       		.uleb128 0xa
 935 022b 6E030000 		.4byte	.LASF25
 936 022f 07       		.byte	0x7
 937 0230 4A       		.byte	0x4a
 938 0231 9E000000 		.4byte	0x9e
 939 0235 24       		.byte	0x24
 940 0236 0A       		.uleb128 0xa
 941 0237 1A070000 		.4byte	.LASF18
 942 023b 07       		.byte	0x7
 943 023c 4B       		.byte	0x4b
 944 023d 52020000 		.4byte	0x252
 945 0241 28       		.byte	0x28
 946 0242 00       		.byte	0
 947 0243 05       		.uleb128 0x5
 948 0244 37010000 		.4byte	0x137
 949 0248 06       		.uleb128 0x6
 950 0249 43020000 		.4byte	0x243
 951 024d 05       		.uleb128 0x5
 952 024e 37010000 		.4byte	0x137
 953 0252 06       		.uleb128 0x6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 108


 954 0253 4D020000 		.4byte	0x24d
 955 0257 03       		.uleb128 0x3
 956 0258 730B0000 		.4byte	.LASF27
 957 025c 07       		.byte	0x7
 958 025d 4C       		.byte	0x4c
 959 025e F2010000 		.4byte	0x1f2
 960 0262 0B       		.uleb128 0xb
 961 0263 0054     		.2byte	0x5400
 962 0265 07       		.byte	0x7
 963 0266 69       		.byte	0x69
 964 0267 3A030000 		.4byte	0x33a
 965 026b 0C       		.uleb128 0xc
 966 026c 475200   		.ascii	"GR\000"
 967 026f 07       		.byte	0x7
 968 0270 6A       		.byte	0x6a
 969 0271 3A030000 		.4byte	0x33a
 970 0275 00       		.byte	0
 971 0276 0D       		.uleb128 0xd
 972 0277 34030000 		.4byte	.LASF28
 973 027b 07       		.byte	0x7
 974 027c 6B       		.byte	0x6b
 975 027d 9E000000 		.4byte	0x9e
 976 0281 0004     		.2byte	0x400
 977 0283 0D       		.uleb128 0xd
 978 0284 47080000 		.4byte	.LASF15
 979 0288 07       		.byte	0x7
 980 0289 6C       		.byte	0x6c
 981 028a 5F030000 		.4byte	0x35f
 982 028e 0404     		.2byte	0x404
 983 0290 0D       		.uleb128 0xd
 984 0291 840B0000 		.4byte	.LASF29
 985 0295 07       		.byte	0x7
 986 0296 6D       		.byte	0x6d
 987 0297 74030000 		.4byte	0x374
 988 029b 0008     		.2byte	0x800
 989 029d 0D       		.uleb128 0xd
 990 029e 680B0000 		.4byte	.LASF30
 991 02a2 07       		.byte	0x7
 992 02a3 6E       		.byte	0x6e
 993 02a4 79030000 		.4byte	0x379
 994 02a8 0009     		.2byte	0x900
 995 02aa 0D       		.uleb128 0xd
 996 02ab 89060000 		.4byte	.LASF31
 997 02af 07       		.byte	0x7
 998 02b0 6F       		.byte	0x6f
 999 02b1 7E030000 		.4byte	0x37e
 1000 02b5 000A     		.2byte	0xa00
 1001 02b7 0D       		.uleb128 0xd
 1002 02b8 27030000 		.4byte	.LASF32
 1003 02bc 07       		.byte	0x7
 1004 02bd 70       		.byte	0x70
 1005 02be 93030000 		.4byte	0x393
 1006 02c2 000B     		.2byte	0xb00
 1007 02c4 0D       		.uleb128 0xd
 1008 02c5 1A070000 		.4byte	.LASF18
 1009 02c9 07       		.byte	0x7
 1010 02ca 71       		.byte	0x71
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 109


 1011 02cb A3000000 		.4byte	0xa3
 1012 02cf FC0B     		.2byte	0xbfc
 1013 02d1 0D       		.uleb128 0xd
 1014 02d2 9F000000 		.4byte	.LASF14
 1015 02d6 07       		.byte	0x7
 1016 02d7 72       		.byte	0x72
 1017 02d8 98030000 		.4byte	0x398
 1018 02dc 000C     		.2byte	0xc00
 1019 02de 0D       		.uleb128 0xd
 1020 02df 24070000 		.4byte	.LASF33
 1021 02e3 07       		.byte	0x7
 1022 02e4 73       		.byte	0x73
 1023 02e5 B2030000 		.4byte	0x3b2
 1024 02e9 000E     		.2byte	0xe00
 1025 02eb 0D       		.uleb128 0xd
 1026 02ec 45050000 		.4byte	.LASF34
 1027 02f0 07       		.byte	0x7
 1028 02f1 74       		.byte	0x74
 1029 02f2 9E000000 		.4byte	0x9e
 1030 02f6 0010     		.2byte	0x1000
 1031 02f8 0D       		.uleb128 0xd
 1032 02f9 2E070000 		.4byte	.LASF35
 1033 02fd 07       		.byte	0x7
 1034 02fe 75       		.byte	0x75
 1035 02ff CD030000 		.4byte	0x3cd
 1036 0303 0410     		.2byte	0x1004
 1037 0305 0D       		.uleb128 0xd
 1038 0306 06060000 		.4byte	.LASF36
 1039 030a 07       		.byte	0x7
 1040 030b 76       		.byte	0x76
 1041 030c D2030000 		.4byte	0x3d2
 1042 0310 0020     		.2byte	0x2000
 1043 0312 0D       		.uleb128 0xd
 1044 0313 9D0A0000 		.4byte	.LASF37
 1045 0317 07       		.byte	0x7
 1046 0318 77       		.byte	0x77
 1047 0319 E2030000 		.4byte	0x3e2
 1048 031d 0040     		.2byte	0x4000
 1049 031f 0D       		.uleb128 0xd
 1050 0320 38070000 		.4byte	.LASF38
 1051 0324 07       		.byte	0x7
 1052 0325 78       		.byte	0x78
 1053 0326 08040000 		.4byte	0x408
 1054 032a 0048     		.2byte	0x4800
 1055 032c 0D       		.uleb128 0xd
 1056 032d DD070000 		.4byte	.LASF39
 1057 0331 07       		.byte	0x7
 1058 0332 79       		.byte	0x79
 1059 0333 0D040000 		.4byte	0x40d
 1060 0337 0050     		.2byte	0x5000
 1061 0339 00       		.byte	0
 1062 033a 07       		.uleb128 0x7
 1063 033b 51010000 		.4byte	0x151
 1064 033f 4A030000 		.4byte	0x34a
 1065 0343 08       		.uleb128 0x8
 1066 0344 97000000 		.4byte	0x97
 1067 0348 0F       		.byte	0xf
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 110


 1068 0349 00       		.byte	0
 1069 034a 07       		.uleb128 0x7
 1070 034b A3000000 		.4byte	0xa3
 1071 034f 5A030000 		.4byte	0x35a
 1072 0353 08       		.uleb128 0x8
 1073 0354 97000000 		.4byte	0x97
 1074 0358 FE       		.byte	0xfe
 1075 0359 00       		.byte	0
 1076 035a 05       		.uleb128 0x5
 1077 035b 4A030000 		.4byte	0x34a
 1078 035f 06       		.uleb128 0x6
 1079 0360 5A030000 		.4byte	0x35a
 1080 0364 07       		.uleb128 0x7
 1081 0365 9E000000 		.4byte	0x9e
 1082 0369 74030000 		.4byte	0x374
 1083 036d 08       		.uleb128 0x8
 1084 036e 97000000 		.4byte	0x97
 1085 0372 3F       		.byte	0x3f
 1086 0373 00       		.byte	0
 1087 0374 05       		.uleb128 0x5
 1088 0375 64030000 		.4byte	0x364
 1089 0379 05       		.uleb128 0x5
 1090 037a 64030000 		.4byte	0x364
 1091 037e 05       		.uleb128 0x5
 1092 037f 64030000 		.4byte	0x364
 1093 0383 07       		.uleb128 0x7
 1094 0384 9E000000 		.4byte	0x9e
 1095 0388 93030000 		.4byte	0x393
 1096 038c 08       		.uleb128 0x8
 1097 038d 97000000 		.4byte	0x97
 1098 0391 3E       		.byte	0x3e
 1099 0392 00       		.byte	0
 1100 0393 05       		.uleb128 0x5
 1101 0394 83030000 		.4byte	0x383
 1102 0398 05       		.uleb128 0x5
 1103 0399 B8000000 		.4byte	0xb8
 1104 039d 07       		.uleb128 0x7
 1105 039e A3000000 		.4byte	0xa3
 1106 03a2 AD030000 		.4byte	0x3ad
 1107 03a6 08       		.uleb128 0x8
 1108 03a7 97000000 		.4byte	0x97
 1109 03ab 7F       		.byte	0x7f
 1110 03ac 00       		.byte	0
 1111 03ad 05       		.uleb128 0x5
 1112 03ae 9D030000 		.4byte	0x39d
 1113 03b2 06       		.uleb128 0x6
 1114 03b3 AD030000 		.4byte	0x3ad
 1115 03b7 07       		.uleb128 0x7
 1116 03b8 A3000000 		.4byte	0xa3
 1117 03bc C8030000 		.4byte	0x3c8
 1118 03c0 0E       		.uleb128 0xe
 1119 03c1 97000000 		.4byte	0x97
 1120 03c5 FE03     		.2byte	0x3fe
 1121 03c7 00       		.byte	0
 1122 03c8 05       		.uleb128 0x5
 1123 03c9 B7030000 		.4byte	0x3b7
 1124 03cd 06       		.uleb128 0x6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 111


 1125 03ce C8030000 		.4byte	0x3c8
 1126 03d2 07       		.uleb128 0x7
 1127 03d3 77010000 		.4byte	0x177
 1128 03d7 E2030000 		.4byte	0x3e2
 1129 03db 08       		.uleb128 0x8
 1130 03dc 97000000 		.4byte	0x97
 1131 03e0 0F       		.byte	0xf
 1132 03e1 00       		.byte	0
 1133 03e2 07       		.uleb128 0x7
 1134 03e3 E7010000 		.4byte	0x1e7
 1135 03e7 F2030000 		.4byte	0x3f2
 1136 03eb 08       		.uleb128 0x8
 1137 03ec 97000000 		.4byte	0x97
 1138 03f0 1F       		.byte	0x1f
 1139 03f1 00       		.byte	0
 1140 03f2 07       		.uleb128 0x7
 1141 03f3 A3000000 		.4byte	0xa3
 1142 03f7 03040000 		.4byte	0x403
 1143 03fb 0E       		.uleb128 0xe
 1144 03fc 97000000 		.4byte	0x97
 1145 0400 FF01     		.2byte	0x1ff
 1146 0402 00       		.byte	0
 1147 0403 05       		.uleb128 0x5
 1148 0404 F2030000 		.4byte	0x3f2
 1149 0408 06       		.uleb128 0x6
 1150 0409 03040000 		.4byte	0x403
 1151 040d 07       		.uleb128 0x7
 1152 040e 57020000 		.4byte	0x257
 1153 0412 1D040000 		.4byte	0x41d
 1154 0416 08       		.uleb128 0x8
 1155 0417 97000000 		.4byte	0x97
 1156 041b 0F       		.byte	0xf
 1157 041c 00       		.byte	0
 1158 041d 03       		.uleb128 0x3
 1159 041e DA090000 		.4byte	.LASF40
 1160 0422 07       		.byte	0x7
 1161 0423 7B       		.byte	0x7b
 1162 0424 62020000 		.4byte	0x262
 1163 0428 07       		.uleb128 0x7
 1164 0429 A3000000 		.4byte	0xa3
 1165 042d 38040000 		.4byte	0x438
 1166 0431 08       		.uleb128 0x8
 1167 0432 97000000 		.4byte	0x97
 1168 0436 02       		.byte	0x2
 1169 0437 00       		.byte	0
 1170 0438 07       		.uleb128 0x7
 1171 0439 A3000000 		.4byte	0xa3
 1172 043d 48040000 		.4byte	0x448
 1173 0441 08       		.uleb128 0x8
 1174 0442 97000000 		.4byte	0x97
 1175 0446 0F       		.byte	0xf
 1176 0447 00       		.byte	0
 1177 0448 07       		.uleb128 0x7
 1178 0449 A3000000 		.4byte	0xa3
 1179 044d 58040000 		.4byte	0x458
 1180 0451 08       		.uleb128 0x8
 1181 0452 97000000 		.4byte	0x97
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 112


 1182 0456 0E       		.byte	0xe
 1183 0457 00       		.byte	0
 1184 0458 0B       		.uleb128 0xb
 1185 0459 080F     		.2byte	0xf08
 1186 045b 08       		.byte	0x8
 1187 045c 21       		.byte	0x21
 1188 045d E0060000 		.4byte	0x6e0
 1189 0461 0A       		.uleb128 0xa
 1190 0462 D00A0000 		.4byte	.LASF41
 1191 0466 08       		.byte	0x8
 1192 0467 22       		.byte	0x22
 1193 0468 9E000000 		.4byte	0x9e
 1194 046c 00       		.byte	0
 1195 046d 0A       		.uleb128 0xa
 1196 046e 20060000 		.4byte	.LASF42
 1197 0472 08       		.byte	0x8
 1198 0473 23       		.byte	0x23
 1199 0474 9E000000 		.4byte	0x9e
 1200 0478 04       		.byte	0x4
 1201 0479 0A       		.uleb128 0xa
 1202 047a 47080000 		.4byte	.LASF15
 1203 047e 08       		.byte	0x8
 1204 047f 24       		.byte	0x24
 1205 0480 E5060000 		.4byte	0x6e5
 1206 0484 08       		.byte	0x8
 1207 0485 0A       		.uleb128 0xa
 1208 0486 8F030000 		.4byte	.LASF43
 1209 048a 08       		.byte	0x8
 1210 048b 25       		.byte	0x25
 1211 048c 9E000000 		.4byte	0x9e
 1212 0490 10       		.byte	0x10
 1213 0491 0A       		.uleb128 0xa
 1214 0492 4F060000 		.4byte	.LASF44
 1215 0496 08       		.byte	0x8
 1216 0497 26       		.byte	0x26
 1217 0498 9E000000 		.4byte	0x9e
 1218 049c 14       		.byte	0x14
 1219 049d 0A       		.uleb128 0xa
 1220 049e 2C060000 		.4byte	.LASF45
 1221 04a2 08       		.byte	0x8
 1222 04a3 27       		.byte	0x27
 1223 04a4 9E000000 		.4byte	0x9e
 1224 04a8 18       		.byte	0x18
 1225 04a9 0A       		.uleb128 0xa
 1226 04aa 1E0A0000 		.4byte	.LASF46
 1227 04ae 08       		.byte	0x8
 1228 04af 28       		.byte	0x28
 1229 04b0 9E000000 		.4byte	0x9e
 1230 04b4 1C       		.byte	0x1c
 1231 04b5 0A       		.uleb128 0xa
 1232 04b6 47060000 		.4byte	.LASF47
 1233 04ba 08       		.byte	0x8
 1234 04bb 29       		.byte	0x29
 1235 04bc 9E000000 		.4byte	0x9e
 1236 04c0 20       		.byte	0x20
 1237 04c1 0A       		.uleb128 0xa
 1238 04c2 200B0000 		.4byte	.LASF48
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 113


 1239 04c6 08       		.byte	0x8
 1240 04c7 2A       		.byte	0x2a
 1241 04c8 9E000000 		.4byte	0x9e
 1242 04cc 24       		.byte	0x24
 1243 04cd 0A       		.uleb128 0xa
 1244 04ce 1A070000 		.4byte	.LASF18
 1245 04d2 08       		.byte	0x8
 1246 04d3 2B       		.byte	0x2b
 1247 04d4 FF060000 		.4byte	0x6ff
 1248 04d8 28       		.byte	0x28
 1249 04d9 0A       		.uleb128 0xa
 1250 04da B7030000 		.4byte	.LASF49
 1251 04de 08       		.byte	0x8
 1252 04df 2C       		.byte	0x2c
 1253 04e0 04070000 		.4byte	0x704
 1254 04e4 80       		.byte	0x80
 1255 04e5 0A       		.uleb128 0xa
 1256 04e6 24070000 		.4byte	.LASF33
 1257 04ea 08       		.byte	0x8
 1258 04eb 2D       		.byte	0x2d
 1259 04ec 0E070000 		.4byte	0x70e
 1260 04f0 C0       		.byte	0xc0
 1261 04f1 0D       		.uleb128 0xd
 1262 04f2 A40A0000 		.4byte	.LASF50
 1263 04f6 08       		.byte	0x8
 1264 04f7 2E       		.byte	0x2e
 1265 04f8 18070000 		.4byte	0x718
 1266 04fc 0001     		.2byte	0x100
 1267 04fe 0D       		.uleb128 0xd
 1268 04ff 2E070000 		.4byte	.LASF35
 1269 0503 08       		.byte	0x8
 1270 0504 2F       		.byte	0x2f
 1271 0505 22070000 		.4byte	0x722
 1272 0509 4001     		.2byte	0x140
 1273 050b 0D       		.uleb128 0xd
 1274 050c ED050000 		.4byte	.LASF51
 1275 0510 08       		.byte	0x8
 1276 0511 30       		.byte	0x30
 1277 0512 2C070000 		.4byte	0x72c
 1278 0516 8001     		.2byte	0x180
 1279 0518 0D       		.uleb128 0xd
 1280 0519 38070000 		.4byte	.LASF38
 1281 051d 08       		.byte	0x8
 1282 051e 31       		.byte	0x31
 1283 051f 36070000 		.4byte	0x736
 1284 0523 C001     		.2byte	0x1c0
 1285 0525 0D       		.uleb128 0xd
 1286 0526 05050000 		.4byte	.LASF52
 1287 052a 08       		.byte	0x8
 1288 052b 32       		.byte	0x32
 1289 052c A3000000 		.4byte	0xa3
 1290 0530 0002     		.2byte	0x200
 1291 0532 0D       		.uleb128 0xd
 1292 0533 360B0000 		.4byte	.LASF53
 1293 0537 08       		.byte	0x8
 1294 0538 33       		.byte	0x33
 1295 0539 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 114


 1296 053d 0402     		.2byte	0x204
 1297 053f 0D       		.uleb128 0xd
 1298 0540 4D040000 		.4byte	.LASF54
 1299 0544 08       		.byte	0x8
 1300 0545 34       		.byte	0x34
 1301 0546 A3000000 		.4byte	0xa3
 1302 054a 0802     		.2byte	0x208
 1303 054c 0D       		.uleb128 0xd
 1304 054d 82080000 		.4byte	.LASF55
 1305 0551 08       		.byte	0x8
 1306 0552 35       		.byte	0x35
 1307 0553 A3000000 		.4byte	0xa3
 1308 0557 0C02     		.2byte	0x20c
 1309 0559 0D       		.uleb128 0xd
 1310 055a C1000000 		.4byte	.LASF56
 1311 055e 08       		.byte	0x8
 1312 055f 36       		.byte	0x36
 1313 0560 9E000000 		.4byte	0x9e
 1314 0564 1002     		.2byte	0x210
 1315 0566 0D       		.uleb128 0xd
 1316 0567 81050000 		.4byte	.LASF57
 1317 056b 08       		.byte	0x8
 1318 056c 37       		.byte	0x37
 1319 056d 9E000000 		.4byte	0x9e
 1320 0571 1402     		.2byte	0x214
 1321 0573 0D       		.uleb128 0xd
 1322 0574 7E040000 		.4byte	.LASF58
 1323 0578 08       		.byte	0x8
 1324 0579 38       		.byte	0x38
 1325 057a 9E000000 		.4byte	0x9e
 1326 057e 1802     		.2byte	0x218
 1327 0580 0D       		.uleb128 0xd
 1328 0581 E8060000 		.4byte	.LASF59
 1329 0585 08       		.byte	0x8
 1330 0586 39       		.byte	0x39
 1331 0587 A3000000 		.4byte	0xa3
 1332 058b 1C02     		.2byte	0x21c
 1333 058d 0D       		.uleb128 0xd
 1334 058e A9030000 		.4byte	.LASF60
 1335 0592 08       		.byte	0x8
 1336 0593 3A       		.byte	0x3a
 1337 0594 9E000000 		.4byte	0x9e
 1338 0598 2002     		.2byte	0x220
 1339 059a 0D       		.uleb128 0xd
 1340 059b B1070000 		.4byte	.LASF61
 1341 059f 08       		.byte	0x8
 1342 05a0 3B       		.byte	0x3b
 1343 05a1 9E000000 		.4byte	0x9e
 1344 05a5 2402     		.2byte	0x224
 1345 05a7 0D       		.uleb128 0xd
 1346 05a8 5D010000 		.4byte	.LASF62
 1347 05ac 08       		.byte	0x8
 1348 05ad 3C       		.byte	0x3c
 1349 05ae 9E000000 		.4byte	0x9e
 1350 05b2 2802     		.2byte	0x228
 1351 05b4 0D       		.uleb128 0xd
 1352 05b5 1A0C0000 		.4byte	.LASF63
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 115


 1353 05b9 08       		.byte	0x8
 1354 05ba 3D       		.byte	0x3d
 1355 05bb A3000000 		.4byte	0xa3
 1356 05bf 2C02     		.2byte	0x22c
 1357 05c1 0D       		.uleb128 0xd
 1358 05c2 F2040000 		.4byte	.LASF64
 1359 05c6 08       		.byte	0x8
 1360 05c7 3E       		.byte	0x3e
 1361 05c8 9E000000 		.4byte	0x9e
 1362 05cc 3002     		.2byte	0x230
 1363 05ce 0D       		.uleb128 0xd
 1364 05cf AC020000 		.4byte	.LASF65
 1365 05d3 08       		.byte	0x8
 1366 05d4 3F       		.byte	0x3f
 1367 05d5 9E000000 		.4byte	0x9e
 1368 05d9 3402     		.2byte	0x234
 1369 05db 0D       		.uleb128 0xd
 1370 05dc CA090000 		.4byte	.LASF66
 1371 05e0 08       		.byte	0x8
 1372 05e1 40       		.byte	0x40
 1373 05e2 9E000000 		.4byte	0x9e
 1374 05e6 3802     		.2byte	0x238
 1375 05e8 0D       		.uleb128 0xd
 1376 05e9 080C0000 		.4byte	.LASF67
 1377 05ed 08       		.byte	0x8
 1378 05ee 41       		.byte	0x41
 1379 05ef A3000000 		.4byte	0xa3
 1380 05f3 3C02     		.2byte	0x23c
 1381 05f5 0D       		.uleb128 0xd
 1382 05f6 96020000 		.4byte	.LASF68
 1383 05fa 08       		.byte	0x8
 1384 05fb 42       		.byte	0x42
 1385 05fc A3000000 		.4byte	0xa3
 1386 0600 4002     		.2byte	0x240
 1387 0602 0D       		.uleb128 0xd
 1388 0603 42070000 		.4byte	.LASF69
 1389 0607 08       		.byte	0x8
 1390 0608 43       		.byte	0x43
 1391 0609 40070000 		.4byte	0x740
 1392 060d 4402     		.2byte	0x244
 1393 060f 0D       		.uleb128 0xd
 1394 0610 D2050000 		.4byte	.LASF70
 1395 0614 08       		.byte	0x8
 1396 0615 44       		.byte	0x44
 1397 0616 9E000000 		.4byte	0x9e
 1398 061a 8002     		.2byte	0x280
 1399 061c 0D       		.uleb128 0xd
 1400 061d 4C070000 		.4byte	.LASF71
 1401 0621 08       		.byte	0x8
 1402 0622 45       		.byte	0x45
 1403 0623 4A070000 		.4byte	0x74a
 1404 0627 8402     		.2byte	0x284
 1405 0629 0D       		.uleb128 0xd
 1406 062a A1020000 		.4byte	.LASF72
 1407 062e 08       		.byte	0x8
 1408 062f 46       		.byte	0x46
 1409 0630 A3000000 		.4byte	0xa3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 116


 1410 0634 9002     		.2byte	0x290
 1411 0636 0D       		.uleb128 0xd
 1412 0637 56070000 		.4byte	.LASF73
 1413 063b 08       		.byte	0x8
 1414 063c 47       		.byte	0x47
 1415 063d 54070000 		.4byte	0x754
 1416 0641 9402     		.2byte	0x294
 1417 0643 0D       		.uleb128 0xd
 1418 0644 0F0B0000 		.4byte	.LASF74
 1419 0648 08       		.byte	0x8
 1420 0649 48       		.byte	0x48
 1421 064a A3000000 		.4byte	0xa3
 1422 064e A002     		.2byte	0x2a0
 1423 0650 0D       		.uleb128 0xd
 1424 0651 13000000 		.4byte	.LASF75
 1425 0655 08       		.byte	0x8
 1426 0656 49       		.byte	0x49
 1427 0657 A3000000 		.4byte	0xa3
 1428 065b A402     		.2byte	0x2a4
 1429 065d 0D       		.uleb128 0xd
 1430 065e 60070000 		.4byte	.LASF76
 1431 0662 08       		.byte	0x8
 1432 0663 4A       		.byte	0x4a
 1433 0664 5E070000 		.4byte	0x75e
 1434 0668 A802     		.2byte	0x2a8
 1435 066a 0D       		.uleb128 0xd
 1436 066b 32000000 		.4byte	.LASF77
 1437 066f 08       		.byte	0x8
 1438 0670 4B       		.byte	0x4b
 1439 0671 9E000000 		.4byte	0x9e
 1440 0675 0003     		.2byte	0x300
 1441 0677 0D       		.uleb128 0xd
 1442 0678 03030000 		.4byte	.LASF78
 1443 067c 08       		.byte	0x8
 1444 067d 4C       		.byte	0x4c
 1445 067e 9E000000 		.4byte	0x9e
 1446 0682 0403     		.2byte	0x304
 1447 0684 0D       		.uleb128 0xd
 1448 0685 6A070000 		.4byte	.LASF79
 1449 0689 08       		.byte	0x8
 1450 068a 4D       		.byte	0x4d
 1451 068b 78070000 		.4byte	0x778
 1452 068f 0803     		.2byte	0x308
 1453 0691 0D       		.uleb128 0xd
 1454 0692 6B040000 		.4byte	.LASF80
 1455 0696 08       		.byte	0x8
 1456 0697 4E       		.byte	0x4e
 1457 0698 9E000000 		.4byte	0x9e
 1458 069c 4003     		.2byte	0x340
 1459 069e 0D       		.uleb128 0xd
 1460 069f BD0A0000 		.4byte	.LASF81
 1461 06a3 08       		.byte	0x8
 1462 06a4 4F       		.byte	0x4f
 1463 06a5 9E000000 		.4byte	0x9e
 1464 06a9 4403     		.2byte	0x344
 1465 06ab 0D       		.uleb128 0xd
 1466 06ac 74020000 		.4byte	.LASF82
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 117


 1467 06b0 08       		.byte	0x8
 1468 06b1 50       		.byte	0x50
 1469 06b2 A3000000 		.4byte	0xa3
 1470 06b6 4803     		.2byte	0x348
 1471 06b8 0D       		.uleb128 0xd
 1472 06b9 24020000 		.4byte	.LASF83
 1473 06bd 08       		.byte	0x8
 1474 06be 51       		.byte	0x51
 1475 06bf 93070000 		.4byte	0x793
 1476 06c3 4C03     		.2byte	0x34c
 1477 06c5 0D       		.uleb128 0xd
 1478 06c6 98010000 		.4byte	.LASF84
 1479 06ca 08       		.byte	0x8
 1480 06cb 52       		.byte	0x52
 1481 06cc 9E000000 		.4byte	0x9e
 1482 06d0 000F     		.2byte	0xf00
 1483 06d2 0D       		.uleb128 0xd
 1484 06d3 A2010000 		.4byte	.LASF85
 1485 06d7 08       		.byte	0x8
 1486 06d8 53       		.byte	0x53
 1487 06d9 9E000000 		.4byte	0x9e
 1488 06dd 040F     		.2byte	0xf04
 1489 06df 00       		.byte	0
 1490 06e0 05       		.uleb128 0x5
 1491 06e1 A8000000 		.4byte	0xa8
 1492 06e5 06       		.uleb128 0x6
 1493 06e6 E0060000 		.4byte	0x6e0
 1494 06ea 07       		.uleb128 0x7
 1495 06eb A3000000 		.4byte	0xa3
 1496 06ef FA060000 		.4byte	0x6fa
 1497 06f3 08       		.uleb128 0x8
 1498 06f4 97000000 		.4byte	0x97
 1499 06f8 15       		.byte	0x15
 1500 06f9 00       		.byte	0
 1501 06fa 05       		.uleb128 0x5
 1502 06fb EA060000 		.4byte	0x6ea
 1503 06ff 06       		.uleb128 0x6
 1504 0700 FA060000 		.4byte	0x6fa
 1505 0704 05       		.uleb128 0x5
 1506 0705 C8000000 		.4byte	0xc8
 1507 0709 05       		.uleb128 0x5
 1508 070a 38040000 		.4byte	0x438
 1509 070e 06       		.uleb128 0x6
 1510 070f 09070000 		.4byte	0x709
 1511 0713 05       		.uleb128 0x5
 1512 0714 38040000 		.4byte	0x438
 1513 0718 06       		.uleb128 0x6
 1514 0719 13070000 		.4byte	0x713
 1515 071d 05       		.uleb128 0x5
 1516 071e 38040000 		.4byte	0x438
 1517 0722 06       		.uleb128 0x6
 1518 0723 1D070000 		.4byte	0x71d
 1519 0727 05       		.uleb128 0x5
 1520 0728 38040000 		.4byte	0x438
 1521 072c 06       		.uleb128 0x6
 1522 072d 27070000 		.4byte	0x727
 1523 0731 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 118


 1524 0732 38040000 		.4byte	0x438
 1525 0736 06       		.uleb128 0x6
 1526 0737 31070000 		.4byte	0x731
 1527 073b 05       		.uleb128 0x5
 1528 073c 48040000 		.4byte	0x448
 1529 0740 06       		.uleb128 0x6
 1530 0741 3B070000 		.4byte	0x73b
 1531 0745 05       		.uleb128 0x5
 1532 0746 28040000 		.4byte	0x428
 1533 074a 06       		.uleb128 0x6
 1534 074b 45070000 		.4byte	0x745
 1535 074f 05       		.uleb128 0x5
 1536 0750 28040000 		.4byte	0x428
 1537 0754 06       		.uleb128 0x6
 1538 0755 4F070000 		.4byte	0x74f
 1539 0759 05       		.uleb128 0x5
 1540 075a EA060000 		.4byte	0x6ea
 1541 075e 06       		.uleb128 0x6
 1542 075f 59070000 		.4byte	0x759
 1543 0763 07       		.uleb128 0x7
 1544 0764 A3000000 		.4byte	0xa3
 1545 0768 73070000 		.4byte	0x773
 1546 076c 08       		.uleb128 0x8
 1547 076d 97000000 		.4byte	0x97
 1548 0771 0D       		.byte	0xd
 1549 0772 00       		.byte	0
 1550 0773 05       		.uleb128 0x5
 1551 0774 63070000 		.4byte	0x763
 1552 0778 06       		.uleb128 0x6
 1553 0779 73070000 		.4byte	0x773
 1554 077d 07       		.uleb128 0x7
 1555 077e A3000000 		.4byte	0xa3
 1556 0782 8E070000 		.4byte	0x78e
 1557 0786 0E       		.uleb128 0xe
 1558 0787 97000000 		.4byte	0x97
 1559 078b EC02     		.2byte	0x2ec
 1560 078d 00       		.byte	0
 1561 078e 05       		.uleb128 0x5
 1562 078f 7D070000 		.4byte	0x77d
 1563 0793 06       		.uleb128 0x6
 1564 0794 8E070000 		.4byte	0x78e
 1565 0798 03       		.uleb128 0x3
 1566 0799 B3080000 		.4byte	.LASF86
 1567 079d 08       		.byte	0x8
 1568 079e 54       		.byte	0x54
 1569 079f 58040000 		.4byte	0x458
 1570 07a3 02       		.uleb128 0x2
 1571 07a4 08       		.byte	0x8
 1572 07a5 04       		.byte	0x4
 1573 07a6 71090000 		.4byte	.LASF87
 1574 07aa 0F       		.uleb128 0xf
 1575 07ab 39080000 		.4byte	.LASF88
 1576 07af 09       		.byte	0x9
 1577 07b0 BC01     		.2byte	0x1bc
 1578 07b2 B6070000 		.4byte	0x7b6
 1579 07b6 10       		.uleb128 0x10
 1580 07b7 04       		.byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 119


 1581 07b8 BC070000 		.4byte	0x7bc
 1582 07bc 11       		.uleb128 0x11
 1583 07bd 0F       		.uleb128 0xf
 1584 07be 13040000 		.4byte	.LASF89
 1585 07c2 09       		.byte	0x9
 1586 07c3 C401     		.2byte	0x1c4
 1587 07c5 C9070000 		.4byte	0x7c9
 1588 07c9 02       		.uleb128 0x2
 1589 07ca 01       		.byte	0x1
 1590 07cb 08       		.byte	0x8
 1591 07cc 7D090000 		.4byte	.LASF90
 1592 07d0 02       		.uleb128 0x2
 1593 07d1 04       		.byte	0x4
 1594 07d2 04       		.byte	0x4
 1595 07d3 F4060000 		.4byte	.LASF91
 1596 07d7 02       		.uleb128 0x2
 1597 07d8 08       		.byte	0x8
 1598 07d9 04       		.byte	0x4
 1599 07da EE020000 		.4byte	.LASF92
 1600 07de 0F       		.uleb128 0xf
 1601 07df 49030000 		.4byte	.LASF93
 1602 07e3 09       		.byte	0x9
 1603 07e4 8703     		.2byte	0x387
 1604 07e6 8C000000 		.4byte	0x8c
 1605 07ea 12       		.uleb128 0x12
 1606 07eb 04       		.byte	0x4
 1607 07ec 7A000000 		.4byte	0x7a
 1608 07f0 03       		.byte	0x3
 1609 07f1 F002     		.2byte	0x2f0
 1610 07f3 19080000 		.4byte	0x819
 1611 07f7 13       		.uleb128 0x13
 1612 07f8 A4080000 		.4byte	.LASF94
 1613 07fc 00       		.byte	0
 1614 07fd 14       		.uleb128 0x14
 1615 07fe 50080000 		.4byte	.LASF95
 1616 0802 01000600 		.4byte	0x60001
 1617 0806 14       		.uleb128 0x14
 1618 0807 AE0A0000 		.4byte	.LASF96
 1619 080b 02000600 		.4byte	0x60002
 1620 080f 14       		.uleb128 0x14
 1621 0810 82090000 		.4byte	.LASF97
 1622 0814 03000600 		.4byte	0x60003
 1623 0818 00       		.byte	0
 1624 0819 0F       		.uleb128 0xf
 1625 081a 66060000 		.4byte	.LASF98
 1626 081e 03       		.byte	0x3
 1627 081f F502     		.2byte	0x2f5
 1628 0821 EA070000 		.4byte	0x7ea
 1629 0825 12       		.uleb128 0x12
 1630 0826 01       		.byte	0x1
 1631 0827 2C000000 		.4byte	0x2c
 1632 082b 03       		.byte	0x3
 1633 082c F902     		.2byte	0x2f9
 1634 082e 3F080000 		.4byte	0x83f
 1635 0832 13       		.uleb128 0x13
 1636 0833 2C040000 		.4byte	.LASF99
 1637 0837 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 120


 1638 0838 13       		.uleb128 0x13
 1639 0839 FA060000 		.4byte	.LASF100
 1640 083d 01       		.byte	0x1
 1641 083e 00       		.byte	0
 1642 083f 0F       		.uleb128 0xf
 1643 0840 50030000 		.4byte	.LASF101
 1644 0844 03       		.byte	0x3
 1645 0845 FC02     		.2byte	0x2fc
 1646 0847 25080000 		.4byte	0x825
 1647 084b 12       		.uleb128 0x12
 1648 084c 01       		.byte	0x1
 1649 084d 2C000000 		.4byte	0x2c
 1650 0851 03       		.byte	0x3
 1651 0852 0003     		.2byte	0x300
 1652 0854 65080000 		.4byte	0x865
 1653 0858 13       		.uleb128 0x13
 1654 0859 B20B0000 		.4byte	.LASF102
 1655 085d 00       		.byte	0
 1656 085e 13       		.uleb128 0x13
 1657 085f 94070000 		.4byte	.LASF103
 1658 0863 01       		.byte	0x1
 1659 0864 00       		.byte	0
 1660 0865 0F       		.uleb128 0xf
 1661 0866 8E0B0000 		.4byte	.LASF104
 1662 086a 03       		.byte	0x3
 1663 086b 0303     		.2byte	0x303
 1664 086d 4B080000 		.4byte	0x84b
 1665 0871 12       		.uleb128 0x12
 1666 0872 01       		.byte	0x1
 1667 0873 2C000000 		.4byte	0x2c
 1668 0877 03       		.byte	0x3
 1669 0878 0703     		.2byte	0x307
 1670 087a 8B080000 		.4byte	0x88b
 1671 087e 13       		.uleb128 0x13
 1672 087f 66000000 		.4byte	.LASF105
 1673 0883 00       		.byte	0
 1674 0884 13       		.uleb128 0x13
 1675 0885 25080000 		.4byte	.LASF106
 1676 0889 01       		.byte	0x1
 1677 088a 00       		.byte	0
 1678 088b 12       		.uleb128 0x12
 1679 088c 01       		.byte	0x1
 1680 088d 2C000000 		.4byte	0x2c
 1681 0891 03       		.byte	0x3
 1682 0892 0E03     		.2byte	0x30e
 1683 0894 A5080000 		.4byte	0x8a5
 1684 0898 13       		.uleb128 0x13
 1685 0899 4C050000 		.4byte	.LASF107
 1686 089d 00       		.byte	0
 1687 089e 13       		.uleb128 0x13
 1688 089f E4090000 		.4byte	.LASF108
 1689 08a3 01       		.byte	0x1
 1690 08a4 00       		.byte	0
 1691 08a5 12       		.uleb128 0x12
 1692 08a6 01       		.byte	0x1
 1693 08a7 2C000000 		.4byte	0x2c
 1694 08ab 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 121


 1695 08ac 0504     		.2byte	0x405
 1696 08ae CB080000 		.4byte	0x8cb
 1697 08b2 13       		.uleb128 0x13
 1698 08b3 53020000 		.4byte	.LASF109
 1699 08b7 00       		.byte	0
 1700 08b8 13       		.uleb128 0x13
 1701 08b9 7B070000 		.4byte	.LASF110
 1702 08bd 01       		.byte	0x1
 1703 08be 13       		.uleb128 0x13
 1704 08bf D6020000 		.4byte	.LASF111
 1705 08c3 02       		.byte	0x2
 1706 08c4 13       		.uleb128 0x13
 1707 08c5 8F050000 		.4byte	.LASF112
 1708 08c9 03       		.byte	0x3
 1709 08ca 00       		.byte	0
 1710 08cb 0F       		.uleb128 0xf
 1711 08cc D9010000 		.4byte	.LASF113
 1712 08d0 03       		.byte	0x3
 1713 08d1 0A04     		.2byte	0x40a
 1714 08d3 A5080000 		.4byte	0x8a5
 1715 08d7 12       		.uleb128 0x12
 1716 08d8 01       		.byte	0x1
 1717 08d9 2C000000 		.4byte	0x2c
 1718 08dd 03       		.byte	0x3
 1719 08de 8604     		.2byte	0x486
 1720 08e0 FD080000 		.4byte	0x8fd
 1721 08e4 13       		.uleb128 0x13
 1722 08e5 BC050000 		.4byte	.LASF114
 1723 08e9 00       		.byte	0
 1724 08ea 13       		.uleb128 0x13
 1725 08eb FE000000 		.4byte	.LASF115
 1726 08ef 01       		.byte	0x1
 1727 08f0 13       		.uleb128 0x13
 1728 08f1 C3070000 		.4byte	.LASF116
 1729 08f5 02       		.byte	0x2
 1730 08f6 13       		.uleb128 0x13
 1731 08f7 4A0B0000 		.4byte	.LASF117
 1732 08fb 04       		.byte	0x4
 1733 08fc 00       		.byte	0
 1734 08fd 15       		.uleb128 0x15
 1735 08fe 78       		.byte	0x78
 1736 08ff 03       		.byte	0x3
 1737 0900 F404     		.2byte	0x4f4
 1738 0902 CA090000 		.4byte	0x9ca
 1739 0906 16       		.uleb128 0x16
 1740 0907 440A0000 		.4byte	.LASF118
 1741 090b 03       		.byte	0x3
 1742 090c F604     		.2byte	0x4f6
 1743 090e 8C000000 		.4byte	0x8c
 1744 0912 00       		.byte	0
 1745 0913 16       		.uleb128 0x16
 1746 0914 2B0B0000 		.4byte	.LASF119
 1747 0918 03       		.byte	0x3
 1748 0919 F704     		.2byte	0x4f7
 1749 091b 8C000000 		.4byte	0x8c
 1750 091f 04       		.byte	0x4
 1751 0920 16       		.uleb128 0x16
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 122


 1752 0921 3C030000 		.4byte	.LASF120
 1753 0925 03       		.byte	0x3
 1754 0926 F804     		.2byte	0x4f8
 1755 0928 8C000000 		.4byte	0x8c
 1756 092c 08       		.byte	0x8
 1757 092d 16       		.uleb128 0x16
 1758 092e F9050000 		.4byte	.LASF121
 1759 0932 03       		.byte	0x3
 1760 0933 F904     		.2byte	0x4f9
 1761 0935 8C000000 		.4byte	0x8c
 1762 0939 0C       		.byte	0xc
 1763 093a 16       		.uleb128 0x16
 1764 093b DB040000 		.4byte	.LASF122
 1765 093f 03       		.byte	0x3
 1766 0940 FA04     		.2byte	0x4fa
 1767 0942 8C000000 		.4byte	0x8c
 1768 0946 10       		.byte	0x10
 1769 0947 16       		.uleb128 0x16
 1770 0948 160B0000 		.4byte	.LASF123
 1771 094c 03       		.byte	0x3
 1772 094d FB04     		.2byte	0x4fb
 1773 094f CB080000 		.4byte	0x8cb
 1774 0953 14       		.byte	0x14
 1775 0954 16       		.uleb128 0x16
 1776 0955 74070000 		.4byte	.LASF124
 1777 0959 03       		.byte	0x3
 1778 095a FC04     		.2byte	0x4fc
 1779 095c 8C000000 		.4byte	0x8c
 1780 0960 18       		.byte	0x18
 1781 0961 16       		.uleb128 0x16
 1782 0962 3A050000 		.4byte	.LASF125
 1783 0966 03       		.byte	0x3
 1784 0967 FD04     		.2byte	0x4fd
 1785 0969 CA090000 		.4byte	0x9ca
 1786 096d 1C       		.byte	0x1c
 1787 096e 16       		.uleb128 0x16
 1788 096f 1C080000 		.4byte	.LASF126
 1789 0973 03       		.byte	0x3
 1790 0974 FE04     		.2byte	0x4fe
 1791 0976 8C000000 		.4byte	0x8c
 1792 097a 5C       		.byte	0x5c
 1793 097b 16       		.uleb128 0x16
 1794 097c 26000000 		.4byte	.LASF127
 1795 0980 03       		.byte	0x3
 1796 0981 FF04     		.2byte	0x4ff
 1797 0983 8C000000 		.4byte	0x8c
 1798 0987 60       		.byte	0x60
 1799 0988 16       		.uleb128 0x16
 1800 0989 2F020000 		.4byte	.LASF128
 1801 098d 03       		.byte	0x3
 1802 098e 0005     		.2byte	0x500
 1803 0990 8C000000 		.4byte	0x8c
 1804 0994 64       		.byte	0x64
 1805 0995 16       		.uleb128 0x16
 1806 0996 12080000 		.4byte	.LASF129
 1807 099a 03       		.byte	0x3
 1808 099b 0105     		.2byte	0x501
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 123


 1809 099d 8C000000 		.4byte	0x8c
 1810 09a1 68       		.byte	0x68
 1811 09a2 16       		.uleb128 0x16
 1812 09a3 EC0B0000 		.4byte	.LASF130
 1813 09a7 03       		.byte	0x3
 1814 09a8 0205     		.2byte	0x502
 1815 09aa 8C000000 		.4byte	0x8c
 1816 09ae 6C       		.byte	0x6c
 1817 09af 16       		.uleb128 0x16
 1818 09b0 BC090000 		.4byte	.LASF131
 1819 09b4 03       		.byte	0x3
 1820 09b5 0305     		.2byte	0x503
 1821 09b7 DA090000 		.4byte	0x9da
 1822 09bb 70       		.byte	0x70
 1823 09bc 16       		.uleb128 0x16
 1824 09bd D3080000 		.4byte	.LASF132
 1825 09c1 03       		.byte	0x3
 1826 09c2 0405     		.2byte	0x504
 1827 09c4 8C000000 		.4byte	0x8c
 1828 09c8 74       		.byte	0x74
 1829 09c9 00       		.byte	0
 1830 09ca 07       		.uleb128 0x7
 1831 09cb 8C000000 		.4byte	0x8c
 1832 09cf DA090000 		.4byte	0x9da
 1833 09d3 08       		.uleb128 0x8
 1834 09d4 97000000 		.4byte	0x97
 1835 09d8 0F       		.byte	0xf
 1836 09d9 00       		.byte	0
 1837 09da 02       		.uleb128 0x2
 1838 09db 01       		.byte	0x1
 1839 09dc 02       		.byte	0x2
 1840 09dd AB070000 		.4byte	.LASF133
 1841 09e1 0F       		.uleb128 0xf
 1842 09e2 AC010000 		.4byte	.LASF134
 1843 09e6 03       		.byte	0x3
 1844 09e7 0505     		.2byte	0x505
 1845 09e9 FD080000 		.4byte	0x8fd
 1846 09ed 12       		.uleb128 0x12
 1847 09ee 04       		.byte	0x4
 1848 09ef 7A000000 		.4byte	0x7a
 1849 09f3 02       		.byte	0x2
 1850 09f4 5E02     		.2byte	0x25e
 1851 09f6 1C0A0000 		.4byte	0xa1c
 1852 09fa 13       		.uleb128 0x13
 1853 09fb 9E040000 		.4byte	.LASF135
 1854 09ff 00       		.byte	0
 1855 0a00 14       		.uleb128 0x14
 1856 0a01 BB020000 		.4byte	.LASF136
 1857 0a05 01004A00 		.4byte	0x4a0001
 1858 0a09 14       		.uleb128 0x14
 1859 0a0a 54000000 		.4byte	.LASF137
 1860 0a0e 02004A00 		.4byte	0x4a0002
 1861 0a12 14       		.uleb128 0x14
 1862 0a13 45010000 		.4byte	.LASF138
 1863 0a17 03004A00 		.4byte	0x4a0003
 1864 0a1b 00       		.byte	0
 1865 0a1c 0F       		.uleb128 0xf
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 124


 1866 0a1d 430C0000 		.4byte	.LASF139
 1867 0a21 02       		.byte	0x2
 1868 0a22 6302     		.2byte	0x263
 1869 0a24 ED090000 		.4byte	0x9ed
 1870 0a28 12       		.uleb128 0x12
 1871 0a29 01       		.byte	0x1
 1872 0a2a 2C000000 		.4byte	0x2c
 1873 0a2e 02       		.byte	0x2
 1874 0a2f F506     		.2byte	0x6f5
 1875 0a31 4E0A0000 		.4byte	0xa4e
 1876 0a35 13       		.uleb128 0x13
 1877 0a36 EC030000 		.4byte	.LASF140
 1878 0a3a 00       		.byte	0
 1879 0a3b 13       		.uleb128 0x13
 1880 0a3c C70B0000 		.4byte	.LASF141
 1881 0a40 01       		.byte	0x1
 1882 0a41 13       		.uleb128 0x13
 1883 0a42 17050000 		.4byte	.LASF142
 1884 0a46 02       		.byte	0x2
 1885 0a47 13       		.uleb128 0x13
 1886 0a48 2E010000 		.4byte	.LASF143
 1887 0a4c 03       		.byte	0x3
 1888 0a4d 00       		.byte	0
 1889 0a4e 0F       		.uleb128 0xf
 1890 0a4f 88040000 		.4byte	.LASF144
 1891 0a53 02       		.byte	0x2
 1892 0a54 FA06     		.2byte	0x6fa
 1893 0a56 280A0000 		.4byte	0xa28
 1894 0a5a 09       		.uleb128 0x9
 1895 0a5b 14       		.byte	0x14
 1896 0a5c 04       		.byte	0x4
 1897 0a5d 3B       		.byte	0x3b
 1898 0a5e 9F0A0000 		.4byte	0xa9f
 1899 0a62 0A       		.uleb128 0xa
 1900 0a63 A60B0000 		.4byte	.LASF145
 1901 0a67 04       		.byte	0x4
 1902 0a68 3D       		.byte	0x3d
 1903 0a69 8C000000 		.4byte	0x8c
 1904 0a6d 00       		.byte	0
 1905 0a6e 0A       		.uleb128 0xa
 1906 0a6f 2E050000 		.4byte	.LASF146
 1907 0a73 04       		.byte	0x4
 1908 0a74 3E       		.byte	0x3e
 1909 0a75 8C000000 		.4byte	0x8c
 1910 0a79 04       		.byte	0x4
 1911 0a7a 0A       		.uleb128 0xa
 1912 0a7b 83030000 		.4byte	.LASF147
 1913 0a7f 04       		.byte	0x4
 1914 0a80 3F       		.byte	0x3f
 1915 0a81 9F0A0000 		.4byte	0xa9f
 1916 0a85 08       		.byte	0x8
 1917 0a86 0A       		.uleb128 0xa
 1918 0a87 E2050000 		.4byte	.LASF148
 1919 0a8b 04       		.byte	0x4
 1920 0a8c 40       		.byte	0x40
 1921 0a8d 8C000000 		.4byte	0x8c
 1922 0a91 0C       		.byte	0xc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 125


 1923 0a92 0A       		.uleb128 0xa
 1924 0a93 19020000 		.4byte	.LASF149
 1925 0a97 04       		.byte	0x4
 1926 0a98 45       		.byte	0x45
 1927 0a99 8C000000 		.4byte	0x8c
 1928 0a9d 10       		.byte	0x10
 1929 0a9e 00       		.byte	0
 1930 0a9f 10       		.uleb128 0x10
 1931 0aa0 04       		.byte	0x4
 1932 0aa1 A50A0000 		.4byte	0xaa5
 1933 0aa5 06       		.uleb128 0x6
 1934 0aa6 E1090000 		.4byte	0x9e1
 1935 0aaa 03       		.uleb128 0x3
 1936 0aab 15030000 		.4byte	.LASF150
 1937 0aaf 04       		.byte	0x4
 1938 0ab0 48       		.byte	0x48
 1939 0ab1 5A0A0000 		.4byte	0xa5a
 1940 0ab5 17       		.uleb128 0x17
 1941 0ab6 E00A0000 		.4byte	.LASF153
 1942 0aba 02       		.byte	0x2
 1943 0abb 1708     		.2byte	0x817
 1944 0abd 1C0A0000 		.4byte	0xa1c
 1945 0ac1 03       		.byte	0x3
 1946 0ac2 EB0A0000 		.4byte	0xaeb
 1947 0ac6 18       		.uleb128 0x18
 1948 0ac7 E6040000 		.4byte	.LASF151
 1949 0acb 02       		.byte	0x2
 1950 0acc 1708     		.2byte	0x817
 1951 0ace 4E0A0000 		.4byte	0xa4e
 1952 0ad2 18       		.uleb128 0x18
 1953 0ad3 490A0000 		.4byte	.LASF152
 1954 0ad7 02       		.byte	0x2
 1955 0ad8 1708     		.2byte	0x817
 1956 0ada 8C000000 		.4byte	0x8c
 1957 0ade 19       		.uleb128 0x19
 1958 0adf CF020000 		.4byte	.LASF155
 1959 0ae3 02       		.byte	0x2
 1960 0ae4 1908     		.2byte	0x819
 1961 0ae6 1C0A0000 		.4byte	0xa1c
 1962 0aea 00       		.byte	0
 1963 0aeb 17       		.uleb128 0x17
 1964 0aec 790A0000 		.4byte	.LASF154
 1965 0af0 02       		.byte	0x2
 1966 0af1 3D08     		.2byte	0x83d
 1967 0af3 1C0A0000 		.4byte	0xa1c
 1968 0af7 03       		.byte	0x3
 1969 0af8 210B0000 		.4byte	0xb21
 1970 0afc 18       		.uleb128 0x18
 1971 0afd E6040000 		.4byte	.LASF151
 1972 0b01 02       		.byte	0x2
 1973 0b02 3D08     		.2byte	0x83d
 1974 0b04 4E0A0000 		.4byte	0xa4e
 1975 0b08 18       		.uleb128 0x18
 1976 0b09 490A0000 		.4byte	.LASF152
 1977 0b0d 02       		.byte	0x2
 1978 0b0e 3D08     		.2byte	0x83d
 1979 0b10 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 126


 1980 0b14 19       		.uleb128 0x19
 1981 0b15 CF020000 		.4byte	.LASF155
 1982 0b19 02       		.byte	0x2
 1983 0b1a 3F08     		.2byte	0x83f
 1984 0b1c 1C0A0000 		.4byte	0xa1c
 1985 0b20 00       		.byte	0
 1986 0b21 17       		.uleb128 0x17
 1987 0b22 290A0000 		.4byte	.LASF156
 1988 0b26 02       		.byte	0x2
 1989 0b27 2307     		.2byte	0x723
 1990 0b29 1C0A0000 		.4byte	0xa1c
 1991 0b2d 03       		.byte	0x3
 1992 0b2e 630B0000 		.4byte	0xb63
 1993 0b32 18       		.uleb128 0x18
 1994 0b33 E6040000 		.4byte	.LASF151
 1995 0b37 02       		.byte	0x2
 1996 0b38 2307     		.2byte	0x723
 1997 0b3a 4E0A0000 		.4byte	0xa4e
 1998 0b3e 18       		.uleb128 0x18
 1999 0b3f 490A0000 		.4byte	.LASF152
 2000 0b43 02       		.byte	0x2
 2001 0b44 2407     		.2byte	0x724
 2002 0b46 8C000000 		.4byte	0x8c
 2003 0b4a 18       		.uleb128 0x18
 2004 0b4b E4070000 		.4byte	.LASF157
 2005 0b4f 02       		.byte	0x2
 2006 0b50 2407     		.2byte	0x724
 2007 0b52 8C000000 		.4byte	0x8c
 2008 0b56 19       		.uleb128 0x19
 2009 0b57 CF020000 		.4byte	.LASF155
 2010 0b5b 02       		.byte	0x2
 2011 0b5c 2607     		.2byte	0x726
 2012 0b5e 1C0A0000 		.4byte	0xa1c
 2013 0b62 00       		.byte	0
 2014 0b63 1A       		.uleb128 0x1a
 2015 0b64 6B050000 		.4byte	.LASF159
 2016 0b68 03       		.byte	0x3
 2017 0b69 8B05     		.2byte	0x58b
 2018 0b6b 03       		.byte	0x3
 2019 0b6c 7D0B0000 		.4byte	0xb7d
 2020 0b70 18       		.uleb128 0x18
 2021 0b71 8A050000 		.4byte	.LASF158
 2022 0b75 03       		.byte	0x3
 2023 0b76 8B05     		.2byte	0x58b
 2024 0b78 7D0B0000 		.4byte	0xb7d
 2025 0b7c 00       		.byte	0
 2026 0b7d 10       		.uleb128 0x10
 2027 0b7e 04       		.byte	0x4
 2028 0b7f 98070000 		.4byte	0x798
 2029 0b83 1B       		.uleb128 0x1b
 2030 0b84 F1070000 		.4byte	.LASF161
 2031 0b88 0A       		.byte	0xa
 2032 0b89 3C       		.byte	0x3c
 2033 0b8a 03       		.byte	0x3
 2034 0b8b 1C       		.uleb128 0x1c
 2035 0b8c 13010000 		.4byte	.LASF160
 2036 0b90 0A       		.byte	0xa
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 127


 2037 0b91 62       		.byte	0x62
 2038 0b92 03       		.byte	0x3
 2039 0b93 A30B0000 		.4byte	0xba3
 2040 0b97 1D       		.uleb128 0x1d
 2041 0b98 E4070000 		.4byte	.LASF157
 2042 0b9c 0A       		.byte	0xa
 2043 0b9d 62       		.byte	0x62
 2044 0b9e 8C000000 		.4byte	0x8c
 2045 0ba2 00       		.byte	0
 2046 0ba3 1B       		.uleb128 0x1b
 2047 0ba4 590C0000 		.4byte	.LASF162
 2048 0ba8 0A       		.byte	0xa
 2049 0ba9 4C       		.byte	0x4c
 2050 0baa 03       		.byte	0x3
 2051 0bab 1A       		.uleb128 0x1a
 2052 0bac A9000000 		.4byte	.LASF163
 2053 0bb0 03       		.byte	0x3
 2054 0bb1 5306     		.2byte	0x653
 2055 0bb3 03       		.byte	0x3
 2056 0bb4 D10B0000 		.4byte	0xbd1
 2057 0bb8 18       		.uleb128 0x18
 2058 0bb9 8A050000 		.4byte	.LASF158
 2059 0bbd 03       		.byte	0x3
 2060 0bbe 5306     		.2byte	0x653
 2061 0bc0 7D0B0000 		.4byte	0xb7d
 2062 0bc4 18       		.uleb128 0x18
 2063 0bc5 1C080000 		.4byte	.LASF126
 2064 0bc9 03       		.byte	0x3
 2065 0bca 5306     		.2byte	0x653
 2066 0bcc 8C000000 		.4byte	0x8c
 2067 0bd0 00       		.byte	0
 2068 0bd1 1A       		.uleb128 0x1a
 2069 0bd2 00000000 		.4byte	.LASF164
 2070 0bd6 03       		.byte	0x3
 2071 0bd7 C505     		.2byte	0x5c5
 2072 0bd9 03       		.byte	0x3
 2073 0bda F70B0000 		.4byte	0xbf7
 2074 0bde 18       		.uleb128 0x18
 2075 0bdf 8A050000 		.4byte	.LASF158
 2076 0be3 03       		.byte	0x3
 2077 0be4 C505     		.2byte	0x5c5
 2078 0be6 7D0B0000 		.4byte	0xb7d
 2079 0bea 18       		.uleb128 0x18
 2080 0beb 60040000 		.4byte	.LASF165
 2081 0bef 03       		.byte	0x3
 2082 0bf0 C505     		.2byte	0x5c5
 2083 0bf2 8C000000 		.4byte	0x8c
 2084 0bf6 00       		.byte	0
 2085 0bf7 1E       		.uleb128 0x1e
 2086 0bf8 CE010000 		.4byte	.LASF166
 2087 0bfc 04       		.byte	0x4
 2088 0bfd 9203     		.2byte	0x392
 2089 0bff 03       		.byte	0x3
 2090 0c00 1E       		.uleb128 0x1e
 2091 0c01 5D060000 		.4byte	.LASF167
 2092 0c05 04       		.byte	0x4
 2093 0c06 AE03     		.2byte	0x3ae
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 128


 2094 0c08 03       		.byte	0x3
 2095 0c09 1F       		.uleb128 0x1f
 2096 0c0a 38060000 		.4byte	.LASF168
 2097 0c0e 01       		.byte	0x1
 2098 0c0f 80       		.byte	0x80
 2099 0c10 00000000 		.4byte	.LFB178
 2100 0c14 60000000 		.4byte	.LFE178-.LFB178
 2101 0c18 01       		.uleb128 0x1
 2102 0c19 9C       		.byte	0x9c
 2103 0c1a 500D0000 		.4byte	0xd50
 2104 0c1e 20       		.uleb128 0x20
 2105 0c1f B5090000 		.4byte	.LASF171
 2106 0c23 01       		.byte	0x1
 2107 0c24 80       		.byte	0x80
 2108 0c25 500D0000 		.4byte	0xd50
 2109 0c29 00000000 		.4byte	.LLST0
 2110 0c2d 21       		.uleb128 0x21
 2111 0c2e F5020000 		.4byte	.LASF177
 2112 0c32 01       		.byte	0x1
 2113 0c33 82       		.byte	0x82
 2114 0c34 DA090000 		.4byte	0x9da
 2115 0c38 00       		.byte	0
 2116 0c39 22       		.uleb128 0x22
 2117 0c3a A30B0000 		.4byte	0xba3
 2118 0c3e 04000000 		.4byte	.LBB32
 2119 0c42 0A000000 		.4byte	.LBE32-.LBB32
 2120 0c46 01       		.byte	0x1
 2121 0c47 86       		.byte	0x86
 2122 0c48 820C0000 		.4byte	0xc82
 2123 0c4c 23       		.uleb128 0x23
 2124 0c4d EB0A0000 		.4byte	0xaeb
 2125 0c51 04000000 		.4byte	.LBB33
 2126 0c55 0A000000 		.4byte	.LBE33-.LBB33
 2127 0c59 0A       		.byte	0xa
 2128 0c5a 4E       		.byte	0x4e
 2129 0c5b 24       		.uleb128 0x24
 2130 0c5c 080B0000 		.4byte	0xb08
 2131 0c60 2C000000 		.4byte	.LLST1
 2132 0c64 24       		.uleb128 0x24
 2133 0c65 FC0A0000 		.4byte	0xafc
 2134 0c69 40000000 		.4byte	.LLST2
 2135 0c6d 25       		.uleb128 0x25
 2136 0c6e 04000000 		.4byte	.LBB34
 2137 0c72 0A000000 		.4byte	.LBE34-.LBB34
 2138 0c76 26       		.uleb128 0x26
 2139 0c77 140B0000 		.4byte	0xb14
 2140 0c7b 54000000 		.4byte	.LLST3
 2141 0c7f 00       		.byte	0
 2142 0c80 00       		.byte	0
 2143 0c81 00       		.byte	0
 2144 0c82 22       		.uleb128 0x22
 2145 0c83 8B0B0000 		.4byte	0xb8b
 2146 0c87 10000000 		.4byte	.LBB35
 2147 0c8b 16000000 		.4byte	.LBE35-.LBB35
 2148 0c8f 01       		.byte	0x1
 2149 0c90 87       		.byte	0x87
 2150 0c91 DD0C0000 		.4byte	0xcdd
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 129


 2151 0c95 24       		.uleb128 0x24
 2152 0c96 970B0000 		.4byte	0xb97
 2153 0c9a 6C000000 		.4byte	.LLST4
 2154 0c9e 23       		.uleb128 0x23
 2155 0c9f 210B0000 		.4byte	0xb21
 2156 0ca3 10000000 		.4byte	.LBB36
 2157 0ca7 16000000 		.4byte	.LBE36-.LBB36
 2158 0cab 0A       		.byte	0xa
 2159 0cac 64       		.byte	0x64
 2160 0cad 24       		.uleb128 0x24
 2161 0cae 4A0B0000 		.4byte	0xb4a
 2162 0cb2 6C000000 		.4byte	.LLST4
 2163 0cb6 24       		.uleb128 0x24
 2164 0cb7 3E0B0000 		.4byte	0xb3e
 2165 0cbb 8B000000 		.4byte	.LLST6
 2166 0cbf 24       		.uleb128 0x24
 2167 0cc0 320B0000 		.4byte	0xb32
 2168 0cc4 9F000000 		.4byte	.LLST7
 2169 0cc8 25       		.uleb128 0x25
 2170 0cc9 10000000 		.4byte	.LBB37
 2171 0ccd 16000000 		.4byte	.LBE37-.LBB37
 2172 0cd1 26       		.uleb128 0x26
 2173 0cd2 560B0000 		.4byte	0xb56
 2174 0cd6 B3000000 		.4byte	.LLST8
 2175 0cda 00       		.byte	0
 2176 0cdb 00       		.byte	0
 2177 0cdc 00       		.byte	0
 2178 0cdd 22       		.uleb128 0x22
 2179 0cde 830B0000 		.4byte	0xb83
 2180 0ce2 26000000 		.4byte	.LBB38
 2181 0ce6 0C000000 		.4byte	.LBE38-.LBB38
 2182 0cea 01       		.byte	0x1
 2183 0ceb 88       		.byte	0x88
 2184 0cec 260D0000 		.4byte	0xd26
 2185 0cf0 23       		.uleb128 0x23
 2186 0cf1 B50A0000 		.4byte	0xab5
 2187 0cf5 26000000 		.4byte	.LBB39
 2188 0cf9 0C000000 		.4byte	.LBE39-.LBB39
 2189 0cfd 0A       		.byte	0xa
 2190 0cfe 3E       		.byte	0x3e
 2191 0cff 24       		.uleb128 0x24
 2192 0d00 D20A0000 		.4byte	0xad2
 2193 0d04 CB000000 		.4byte	.LLST9
 2194 0d08 24       		.uleb128 0x24
 2195 0d09 C60A0000 		.4byte	0xac6
 2196 0d0d DF000000 		.4byte	.LLST10
 2197 0d11 25       		.uleb128 0x25
 2198 0d12 26000000 		.4byte	.LBB40
 2199 0d16 0C000000 		.4byte	.LBE40-.LBB40
 2200 0d1a 26       		.uleb128 0x26
 2201 0d1b DE0A0000 		.4byte	0xade
 2202 0d1f F3000000 		.4byte	.LLST11
 2203 0d23 00       		.byte	0
 2204 0d24 00       		.byte	0
 2205 0d25 00       		.byte	0
 2206 0d26 27       		.uleb128 0x27
 2207 0d27 3C000000 		.4byte	.LVL8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 130


 2208 0d2b AD100000 		.4byte	0x10ad
 2209 0d2f 3F0D0000 		.4byte	0xd3f
 2210 0d33 28       		.uleb128 0x28
 2211 0d34 01       		.uleb128 0x1
 2212 0d35 50       		.byte	0x50
 2213 0d36 02       		.uleb128 0x2
 2214 0d37 74       		.byte	0x74
 2215 0d38 00       		.sleb128 0
 2216 0d39 28       		.uleb128 0x28
 2217 0d3a 01       		.uleb128 0x1
 2218 0d3b 51       		.byte	0x51
 2219 0d3c 01       		.uleb128 0x1
 2220 0d3d 30       		.byte	0x30
 2221 0d3e 00       		.byte	0
 2222 0d3f 29       		.uleb128 0x29
 2223 0d40 44000000 		.4byte	.LVL9
 2224 0d44 B9100000 		.4byte	0x10b9
 2225 0d48 28       		.uleb128 0x28
 2226 0d49 01       		.uleb128 0x1
 2227 0d4a 50       		.byte	0x50
 2228 0d4b 02       		.uleb128 0x2
 2229 0d4c 74       		.byte	0x74
 2230 0d4d 00       		.sleb128 0
 2231 0d4e 00       		.byte	0
 2232 0d4f 00       		.byte	0
 2233 0d50 10       		.uleb128 0x10
 2234 0d51 04       		.byte	0x4
 2235 0d52 560D0000 		.4byte	0xd56
 2236 0d56 06       		.uleb128 0x6
 2237 0d57 AA0A0000 		.4byte	0xaaa
 2238 0d5b 1F       		.uleb128 0x1f
 2239 0d5c 70010000 		.4byte	.LASF169
 2240 0d60 01       		.byte	0x1
 2241 0d61 E3       		.byte	0xe3
 2242 0d62 00000000 		.4byte	.LFB180
 2243 0d66 24000000 		.4byte	.LFE180-.LFB180
 2244 0d6a 01       		.uleb128 0x1
 2245 0d6b 9C       		.byte	0x9c
 2246 0d6c A50D0000 		.4byte	0xda5
 2247 0d70 27       		.uleb128 0x27
 2248 0d71 12000000 		.4byte	.LVL11
 2249 0d75 C5100000 		.4byte	0x10c5
 2250 0d79 8C0D0000 		.4byte	0xd8c
 2251 0d7d 28       		.uleb128 0x28
 2252 0d7e 01       		.uleb128 0x1
 2253 0d7f 50       		.byte	0x50
 2254 0d80 05       		.uleb128 0x5
 2255 0d81 0C       		.byte	0xc
 2256 0d82 00001D41 		.4byte	0x411d0000
 2257 0d86 28       		.uleb128 0x28
 2258 0d87 01       		.uleb128 0x1
 2259 0d88 51       		.byte	0x51
 2260 0d89 01       		.uleb128 0x1
 2261 0d8a 31       		.byte	0x31
 2262 0d8b 00       		.byte	0
 2263 0d8c 29       		.uleb128 0x29
 2264 0d8d 1C000000 		.4byte	.LVL12
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 131


 2265 0d91 C5100000 		.4byte	0x10c5
 2266 0d95 28       		.uleb128 0x28
 2267 0d96 01       		.uleb128 0x1
 2268 0d97 50       		.byte	0x50
 2269 0d98 05       		.uleb128 0x5
 2270 0d99 0C       		.byte	0xc
 2271 0d9a 00001D41 		.4byte	0x411d0000
 2272 0d9e 28       		.uleb128 0x28
 2273 0d9f 01       		.uleb128 0x1
 2274 0da0 51       		.byte	0x51
 2275 0da1 01       		.uleb128 0x1
 2276 0da2 30       		.byte	0x30
 2277 0da3 00       		.byte	0
 2278 0da4 00       		.byte	0
 2279 0da5 1F       		.uleb128 0x1f
 2280 0da6 A9050000 		.4byte	.LASF170
 2281 0daa 01       		.byte	0x1
 2282 0dab FE       		.byte	0xfe
 2283 0dac 00000000 		.4byte	.LFB181
 2284 0db0 28000000 		.4byte	.LFE181-.LFB181
 2285 0db4 01       		.uleb128 0x1
 2286 0db5 9C       		.byte	0x9c
 2287 0db6 C80D0000 		.4byte	0xdc8
 2288 0dba 2A       		.uleb128 0x2a
 2289 0dbb A1090000 		.4byte	.LASF172
 2290 0dbf 01       		.byte	0x1
 2291 0dc0 FE       		.byte	0xfe
 2292 0dc1 3F080000 		.4byte	0x83f
 2293 0dc5 01       		.uleb128 0x1
 2294 0dc6 50       		.byte	0x50
 2295 0dc7 00       		.byte	0
 2296 0dc8 2B       		.uleb128 0x2b
 2297 0dc9 87000000 		.4byte	.LASF173
 2298 0dcd 01       		.byte	0x1
 2299 0dce 1A01     		.2byte	0x11a
 2300 0dd0 00000000 		.4byte	.LFB182
 2301 0dd4 02000000 		.4byte	.LFE182-.LFB182
 2302 0dd8 01       		.uleb128 0x1
 2303 0dd9 9C       		.byte	0x9c
 2304 0dda 2B       		.uleb128 0x2b
 2305 0ddb 86020000 		.4byte	.LASF174
 2306 0ddf 01       		.byte	0x1
 2307 0de0 3601     		.2byte	0x136
 2308 0de2 00000000 		.4byte	.LFB183
 2309 0de6 02000000 		.4byte	.LFE183-.LFB183
 2310 0dea 01       		.uleb128 0x1
 2311 0deb 9C       		.byte	0x9c
 2312 0dec 2C       		.uleb128 0x2c
 2313 0ded D8000000 		.4byte	.LASF175
 2314 0df1 01       		.byte	0x1
 2315 0df2 5201     		.2byte	0x152
 2316 0df4 00000000 		.4byte	.LFB184
 2317 0df8 2C000000 		.4byte	.LFE184-.LFB184
 2318 0dfc 01       		.uleb128 0x1
 2319 0dfd 9C       		.byte	0x9c
 2320 0dfe 600E0000 		.4byte	0xe60
 2321 0e02 2D       		.uleb128 0x2d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 132


 2322 0e03 7E030000 		.4byte	.LASF176
 2323 0e07 01       		.byte	0x1
 2324 0e08 5201     		.2byte	0x152
 2325 0e0a 8C000000 		.4byte	0x8c
 2326 0e0e 0B010000 		.4byte	.LLST12
 2327 0e12 2E       		.uleb128 0x2e
 2328 0e13 FC0B0000 		.4byte	.LASF178
 2329 0e17 01       		.byte	0x1
 2330 0e18 5401     		.2byte	0x154
 2331 0e1a 8C000000 		.4byte	0x8c
 2332 0e1e 2C010000 		.4byte	.LLST13
 2333 0e22 2F       		.uleb128 0x2f
 2334 0e23 AB0B0000 		.4byte	0xbab
 2335 0e27 08000000 		.4byte	.LBB41
 2336 0e2b 14000000 		.4byte	.LBE41-.LBB41
 2337 0e2f 01       		.byte	0x1
 2338 0e30 5801     		.2byte	0x158
 2339 0e32 24       		.uleb128 0x24
 2340 0e33 C40B0000 		.4byte	0xbc4
 2341 0e37 4E010000 		.4byte	.LLST14
 2342 0e3b 24       		.uleb128 0x24
 2343 0e3c B80B0000 		.4byte	0xbb8
 2344 0e40 61010000 		.4byte	.LLST15
 2345 0e44 29       		.uleb128 0x29
 2346 0e45 14000000 		.4byte	.LVL17
 2347 0e49 D1100000 		.4byte	0x10d1
 2348 0e4d 28       		.uleb128 0x28
 2349 0e4e 01       		.uleb128 0x1
 2350 0e4f 50       		.byte	0x50
 2351 0e50 05       		.uleb128 0x5
 2352 0e51 03       		.byte	0x3
 2353 0e52 00000000 		.4byte	.LC0
 2354 0e56 28       		.uleb128 0x28
 2355 0e57 01       		.uleb128 0x1
 2356 0e58 51       		.byte	0x51
 2357 0e59 03       		.uleb128 0x3
 2358 0e5a 0A       		.byte	0xa
 2359 0e5b 5506     		.2byte	0x655
 2360 0e5d 00       		.byte	0
 2361 0e5e 00       		.byte	0
 2362 0e5f 00       		.byte	0
 2363 0e60 2C       		.uleb128 0x2c
 2364 0e61 79060000 		.4byte	.LASF179
 2365 0e65 01       		.byte	0x1
 2366 0e66 6901     		.2byte	0x169
 2367 0e68 00000000 		.4byte	.LFB185
 2368 0e6c 48000000 		.4byte	.LFE185-.LFB185
 2369 0e70 01       		.uleb128 0x1
 2370 0e71 9C       		.byte	0x9c
 2371 0e72 D40E0000 		.4byte	0xed4
 2372 0e76 2D       		.uleb128 0x2d
 2373 0e77 60040000 		.4byte	.LASF165
 2374 0e7b 01       		.byte	0x1
 2375 0e7c 6901     		.2byte	0x169
 2376 0e7e 8C000000 		.4byte	0x8c
 2377 0e82 79010000 		.4byte	.LLST16
 2378 0e86 2E       		.uleb128 0x2e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 133


 2379 0e87 1C000000 		.4byte	.LASF180
 2380 0e8b 01       		.byte	0x1
 2381 0e8c 6B01     		.2byte	0x16b
 2382 0e8e DE070000 		.4byte	0x7de
 2383 0e92 A3010000 		.4byte	.LLST17
 2384 0e96 2F       		.uleb128 0x2f
 2385 0e97 D10B0000 		.4byte	0xbd1
 2386 0e9b 1A000000 		.4byte	.LBB43
 2387 0e9f 12000000 		.4byte	.LBE43-.LBB43
 2388 0ea3 01       		.byte	0x1
 2389 0ea4 6E01     		.2byte	0x16e
 2390 0ea6 24       		.uleb128 0x24
 2391 0ea7 EA0B0000 		.4byte	0xbea
 2392 0eab C2010000 		.4byte	.LLST18
 2393 0eaf 24       		.uleb128 0x24
 2394 0eb0 DE0B0000 		.4byte	0xbde
 2395 0eb4 D5010000 		.4byte	.LLST19
 2396 0eb8 29       		.uleb128 0x29
 2397 0eb9 28000000 		.4byte	.LVL24
 2398 0ebd D1100000 		.4byte	0x10d1
 2399 0ec1 28       		.uleb128 0x28
 2400 0ec2 01       		.uleb128 0x1
 2401 0ec3 50       		.byte	0x50
 2402 0ec4 05       		.uleb128 0x5
 2403 0ec5 03       		.byte	0x3
 2404 0ec6 00000000 		.4byte	.LC0
 2405 0eca 28       		.uleb128 0x28
 2406 0ecb 01       		.uleb128 0x1
 2407 0ecc 51       		.byte	0x51
 2408 0ecd 03       		.uleb128 0x3
 2409 0ece 0A       		.byte	0xa
 2410 0ecf C705     		.2byte	0x5c7
 2411 0ed1 00       		.byte	0
 2412 0ed2 00       		.byte	0
 2413 0ed3 00       		.byte	0
 2414 0ed4 30       		.uleb128 0x30
 2415 0ed5 0C060000 		.4byte	.LASF204
 2416 0ed9 01       		.byte	0x1
 2417 0eda 8201     		.2byte	0x182
 2418 0edc 8C000000 		.4byte	0x8c
 2419 0ee0 00000000 		.4byte	.LFB186
 2420 0ee4 1C000000 		.4byte	.LFE186-.LFB186
 2421 0ee8 01       		.uleb128 0x1
 2422 0ee9 9C       		.byte	0x9c
 2423 0eea 320F0000 		.4byte	0xf32
 2424 0eee 2D       		.uleb128 0x2d
 2425 0eef C3030000 		.4byte	.LASF181
 2426 0ef3 01       		.byte	0x1
 2427 0ef4 8201     		.2byte	0x182
 2428 0ef6 65080000 		.4byte	0x865
 2429 0efa ED010000 		.4byte	.LLST20
 2430 0efe 2E       		.uleb128 0x2e
 2431 0eff DC0B0000 		.4byte	.LASF182
 2432 0f03 01       		.byte	0x1
 2433 0f04 8401     		.2byte	0x184
 2434 0f06 DE070000 		.4byte	0x7de
 2435 0f0a 0E020000 		.4byte	.LLST21
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 134


 2436 0f0e 2E       		.uleb128 0x2e
 2437 0f0f 2F0C0000 		.4byte	.LASF183
 2438 0f13 01       		.byte	0x1
 2439 0f14 8501     		.2byte	0x185
 2440 0f16 19080000 		.4byte	0x819
 2441 0f1a 2D020000 		.4byte	.LLST22
 2442 0f1e 29       		.uleb128 0x29
 2443 0f1f 0A000000 		.4byte	.LVL30
 2444 0f23 DD100000 		.4byte	0x10dd
 2445 0f27 28       		.uleb128 0x28
 2446 0f28 01       		.uleb128 0x1
 2447 0f29 50       		.byte	0x50
 2448 0f2a 05       		.uleb128 0x5
 2449 0f2b 0C       		.byte	0xc
 2450 0f2c 00001D41 		.4byte	0x411d0000
 2451 0f30 00       		.byte	0
 2452 0f31 00       		.byte	0
 2453 0f32 2C       		.uleb128 0x2c
 2454 0f33 96000000 		.4byte	.LASF184
 2455 0f37 01       		.byte	0x1
 2456 0f38 9F01     		.2byte	0x19f
 2457 0f3a 00000000 		.4byte	.LFB187
 2458 0f3e 28000000 		.4byte	.LFE187-.LFB187
 2459 0f42 01       		.uleb128 0x1
 2460 0f43 9C       		.byte	0x9c
 2461 0f44 5F0F0000 		.4byte	0xf5f
 2462 0f48 31       		.uleb128 0x31
 2463 0f49 09040000 		.4byte	.LASF185
 2464 0f4d 01       		.byte	0x1
 2465 0f4e A101     		.2byte	0x1a1
 2466 0f50 8C000000 		.4byte	0x8c
 2467 0f54 00       		.byte	0
 2468 0f55 32       		.uleb128 0x32
 2469 0f56 1E000000 		.4byte	.LVL35
 2470 0f5a 090C0000 		.4byte	0xc09
 2471 0f5e 00       		.byte	0
 2472 0f5f 1F       		.uleb128 0x1f
 2473 0f60 3D020000 		.4byte	.LASF186
 2474 0f64 01       		.byte	0x1
 2475 0f65 41       		.byte	0x41
 2476 0f66 00000000 		.4byte	.LFB176
 2477 0f6a 28000000 		.4byte	.LFE176-.LFB176
 2478 0f6e 01       		.uleb128 0x1
 2479 0f6f 9C       		.byte	0x9c
 2480 0f70 A50F0000 		.4byte	0xfa5
 2481 0f74 22       		.uleb128 0x22
 2482 0f75 F70B0000 		.4byte	0xbf7
 2483 0f79 18000000 		.4byte	.LBB45
 2484 0f7d 06000000 		.4byte	.LBE45-.LBB45
 2485 0f81 01       		.byte	0x1
 2486 0f82 49       		.byte	0x49
 2487 0f83 9B0F0000 		.4byte	0xf9b
 2488 0f87 29       		.uleb128 0x29
 2489 0f88 1E000000 		.4byte	.LVL37
 2490 0f8c E9100000 		.4byte	0x10e9
 2491 0f90 28       		.uleb128 0x28
 2492 0f91 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 135


 2493 0f92 50       		.byte	0x50
 2494 0f93 05       		.uleb128 0x5
 2495 0f94 0C       		.byte	0xc
 2496 0f95 00001D41 		.4byte	0x411d0000
 2497 0f99 00       		.byte	0
 2498 0f9a 00       		.byte	0
 2499 0f9b 32       		.uleb128 0x32
 2500 0f9c 0E000000 		.4byte	.LVL36
 2501 0fa0 320F0000 		.4byte	0xf32
 2502 0fa4 00       		.byte	0
 2503 0fa5 1F       		.uleb128 0x1f
 2504 0fa6 47020000 		.4byte	.LASF187
 2505 0faa 01       		.byte	0x1
 2506 0fab 5E       		.byte	0x5e
 2507 0fac 00000000 		.4byte	.LFB177
 2508 0fb0 08000000 		.4byte	.LFE177-.LFB177
 2509 0fb4 01       		.uleb128 0x1
 2510 0fb5 9C       		.byte	0x9c
 2511 0fb6 D30F0000 		.4byte	0xfd3
 2512 0fba 20       		.uleb128 0x20
 2513 0fbb FD040000 		.4byte	.LASF188
 2514 0fbf 01       		.byte	0x1
 2515 0fc0 5E       		.byte	0x5e
 2516 0fc1 AA070000 		.4byte	0x7aa
 2517 0fc5 4B020000 		.4byte	.LLST23
 2518 0fc9 32       		.uleb128 0x32
 2519 0fca 06000000 		.4byte	.LVL39
 2520 0fce 5F0F0000 		.4byte	0xf5f
 2521 0fd2 00       		.byte	0
 2522 0fd3 1F       		.uleb128 0x1f
 2523 0fd4 61080000 		.4byte	.LASF189
 2524 0fd8 01       		.byte	0x1
 2525 0fd9 AA       		.byte	0xaa
 2526 0fda 00000000 		.4byte	.LFB179
 2527 0fde 5C000000 		.4byte	.LFE179-.LFB179
 2528 0fe2 01       		.uleb128 0x1
 2529 0fe3 9C       		.byte	0x9c
 2530 0fe4 59100000 		.4byte	0x1059
 2531 0fe8 20       		.uleb128 0x20
 2532 0fe9 B5090000 		.4byte	.LASF171
 2533 0fed 01       		.byte	0x1
 2534 0fee AA       		.byte	0xaa
 2535 0fef 8C000000 		.4byte	0x8c
 2536 0ff3 6C020000 		.4byte	.LLST24
 2537 0ff7 20       		.uleb128 0x20
 2538 0ff8 CB030000 		.4byte	.LASF190
 2539 0ffc 01       		.byte	0x1
 2540 0ffd AA       		.byte	0xaa
 2541 0ffe 8C000000 		.4byte	0x8c
 2542 1002 98020000 		.4byte	.LLST25
 2543 1006 22       		.uleb128 0x22
 2544 1007 000C0000 		.4byte	0xc00
 2545 100b 0A000000 		.4byte	.LBB47
 2546 100f 0A000000 		.4byte	.LBE47-.LBB47
 2547 1013 01       		.byte	0x1
 2548 1014 B0       		.byte	0xb0
 2549 1015 34100000 		.4byte	0x1034
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 136


 2550 1019 2F       		.uleb128 0x2f
 2551 101a 630B0000 		.4byte	0xb63
 2552 101e 0A000000 		.4byte	.LBB48
 2553 1022 0A000000 		.4byte	.LBE48-.LBB48
 2554 1026 04       		.byte	0x4
 2555 1027 B003     		.2byte	0x3b0
 2556 1029 24       		.uleb128 0x24
 2557 102a 700B0000 		.4byte	0xb70
 2558 102e C4020000 		.4byte	.LLST26
 2559 1032 00       		.byte	0
 2560 1033 00       		.byte	0
 2561 1034 32       		.uleb128 0x32
 2562 1035 24000000 		.4byte	.LVL43
 2563 1039 320F0000 		.4byte	0xf32
 2564 103d 32       		.uleb128 0x32
 2565 103e 3C000000 		.4byte	.LVL44
 2566 1042 090C0000 		.4byte	0xc09
 2567 1046 32       		.uleb128 0x32
 2568 1047 48000000 		.4byte	.LVL45
 2569 104b 5F0F0000 		.4byte	0xf5f
 2570 104f 32       		.uleb128 0x32
 2571 1050 4C000000 		.4byte	.LVL46
 2572 1054 5B0D0000 		.4byte	0xd5b
 2573 1058 00       		.byte	0
 2574 1059 33       		.uleb128 0x33
 2575 105a 9D030000 		.4byte	.LASF191
 2576 105e 01       		.byte	0x1
 2577 105f 2B       		.byte	0x2b
 2578 1060 81000000 		.4byte	0x81
 2579 1064 05       		.uleb128 0x5
 2580 1065 03       		.byte	0x3
 2581 1066 00000000 		.4byte	ADC_initVar
 2582 106a 33       		.uleb128 0x33
 2583 106b 360C0000 		.4byte	.LASF192
 2584 106f 01       		.byte	0x1
 2585 1070 2C       		.byte	0x2c
 2586 1071 81000000 		.4byte	0x81
 2587 1075 05       		.uleb128 0x5
 2588 1076 03       		.byte	0x3
 2589 1077 00000000 		.4byte	ADC_selected
 2590 107b 33       		.uleb128 0x33
 2591 107c C6000000 		.4byte	.LASF193
 2592 1080 01       		.byte	0x1
 2593 1081 2D       		.byte	0x2d
 2594 1082 8C000000 		.4byte	0x8c
 2595 1086 05       		.uleb128 0x5
 2596 1087 03       		.byte	0x3
 2597 1088 00000000 		.4byte	ADC_currentConfig
 2598 108c 07       		.uleb128 0x7
 2599 108d 560D0000 		.4byte	0xd56
 2600 1091 9C100000 		.4byte	0x109c
 2601 1095 08       		.uleb128 0x8
 2602 1096 97000000 		.4byte	0x97
 2603 109a 00       		.byte	0
 2604 109b 00       		.byte	0
 2605 109c 34       		.uleb128 0x34
 2606 109d A6090000 		.4byte	.LASF194
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 137


 2607 10a1 04       		.byte	0x4
 2608 10a2 6401     		.2byte	0x164
 2609 10a4 A8100000 		.4byte	0x10a8
 2610 10a8 06       		.uleb128 0x6
 2611 10a9 8C100000 		.4byte	0x108c
 2612 10ad 35       		.uleb128 0x35
 2613 10ae 79000000 		.4byte	.LASF195
 2614 10b2 79000000 		.4byte	.LASF195
 2615 10b6 03       		.byte	0x3
 2616 10b7 1E05     		.2byte	0x51e
 2617 10b9 35       		.uleb128 0x35
 2618 10ba D3030000 		.4byte	.LASF196
 2619 10be D3030000 		.4byte	.LASF196
 2620 10c2 03       		.byte	0x3
 2621 10c3 1D05     		.2byte	0x51d
 2622 10c5 35       		.uleb128 0x35
 2623 10c6 0A0A0000 		.4byte	.LASF197
 2624 10ca 0A0A0000 		.4byte	.LASF197
 2625 10ce 03       		.byte	0x3
 2626 10cf 2105     		.2byte	0x521
 2627 10d1 35       		.uleb128 0x35
 2628 10d2 540A0000 		.4byte	.LASF198
 2629 10d6 540A0000 		.4byte	.LASF198
 2630 10da 09       		.byte	0x9
 2631 10db 2A03     		.2byte	0x32a
 2632 10dd 35       		.uleb128 0x35
 2633 10de 81010000 		.4byte	.LASF199
 2634 10e2 81010000 		.4byte	.LASF199
 2635 10e6 03       		.byte	0x3
 2636 10e7 2305     		.2byte	0x523
 2637 10e9 35       		.uleb128 0x35
 2638 10ea C5080000 		.4byte	.LASF200
 2639 10ee C5080000 		.4byte	.LASF200
 2640 10f2 03       		.byte	0x3
 2641 10f3 1F05     		.2byte	0x51f
 2642 10f5 00       		.byte	0
 2643              		.section	.debug_abbrev,"",%progbits
 2644              	.Ldebug_abbrev0:
 2645 0000 01       		.uleb128 0x1
 2646 0001 11       		.uleb128 0x11
 2647 0002 01       		.byte	0x1
 2648 0003 25       		.uleb128 0x25
 2649 0004 0E       		.uleb128 0xe
 2650 0005 13       		.uleb128 0x13
 2651 0006 0B       		.uleb128 0xb
 2652 0007 03       		.uleb128 0x3
 2653 0008 0E       		.uleb128 0xe
 2654 0009 1B       		.uleb128 0x1b
 2655 000a 0E       		.uleb128 0xe
 2656 000b 55       		.uleb128 0x55
 2657 000c 17       		.uleb128 0x17
 2658 000d 11       		.uleb128 0x11
 2659 000e 01       		.uleb128 0x1
 2660 000f 10       		.uleb128 0x10
 2661 0010 17       		.uleb128 0x17
 2662 0011 00       		.byte	0
 2663 0012 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 138


 2664 0013 02       		.uleb128 0x2
 2665 0014 24       		.uleb128 0x24
 2666 0015 00       		.byte	0
 2667 0016 0B       		.uleb128 0xb
 2668 0017 0B       		.uleb128 0xb
 2669 0018 3E       		.uleb128 0x3e
 2670 0019 0B       		.uleb128 0xb
 2671 001a 03       		.uleb128 0x3
 2672 001b 0E       		.uleb128 0xe
 2673 001c 00       		.byte	0
 2674 001d 00       		.byte	0
 2675 001e 03       		.uleb128 0x3
 2676 001f 16       		.uleb128 0x16
 2677 0020 00       		.byte	0
 2678 0021 03       		.uleb128 0x3
 2679 0022 0E       		.uleb128 0xe
 2680 0023 3A       		.uleb128 0x3a
 2681 0024 0B       		.uleb128 0xb
 2682 0025 3B       		.uleb128 0x3b
 2683 0026 0B       		.uleb128 0xb
 2684 0027 49       		.uleb128 0x49
 2685 0028 13       		.uleb128 0x13
 2686 0029 00       		.byte	0
 2687 002a 00       		.byte	0
 2688 002b 04       		.uleb128 0x4
 2689 002c 24       		.uleb128 0x24
 2690 002d 00       		.byte	0
 2691 002e 0B       		.uleb128 0xb
 2692 002f 0B       		.uleb128 0xb
 2693 0030 3E       		.uleb128 0x3e
 2694 0031 0B       		.uleb128 0xb
 2695 0032 03       		.uleb128 0x3
 2696 0033 08       		.uleb128 0x8
 2697 0034 00       		.byte	0
 2698 0035 00       		.byte	0
 2699 0036 05       		.uleb128 0x5
 2700 0037 35       		.uleb128 0x35
 2701 0038 00       		.byte	0
 2702 0039 49       		.uleb128 0x49
 2703 003a 13       		.uleb128 0x13
 2704 003b 00       		.byte	0
 2705 003c 00       		.byte	0
 2706 003d 06       		.uleb128 0x6
 2707 003e 26       		.uleb128 0x26
 2708 003f 00       		.byte	0
 2709 0040 49       		.uleb128 0x49
 2710 0041 13       		.uleb128 0x13
 2711 0042 00       		.byte	0
 2712 0043 00       		.byte	0
 2713 0044 07       		.uleb128 0x7
 2714 0045 01       		.uleb128 0x1
 2715 0046 01       		.byte	0x1
 2716 0047 49       		.uleb128 0x49
 2717 0048 13       		.uleb128 0x13
 2718 0049 01       		.uleb128 0x1
 2719 004a 13       		.uleb128 0x13
 2720 004b 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 139


 2721 004c 00       		.byte	0
 2722 004d 08       		.uleb128 0x8
 2723 004e 21       		.uleb128 0x21
 2724 004f 00       		.byte	0
 2725 0050 49       		.uleb128 0x49
 2726 0051 13       		.uleb128 0x13
 2727 0052 2F       		.uleb128 0x2f
 2728 0053 0B       		.uleb128 0xb
 2729 0054 00       		.byte	0
 2730 0055 00       		.byte	0
 2731 0056 09       		.uleb128 0x9
 2732 0057 13       		.uleb128 0x13
 2733 0058 01       		.byte	0x1
 2734 0059 0B       		.uleb128 0xb
 2735 005a 0B       		.uleb128 0xb
 2736 005b 3A       		.uleb128 0x3a
 2737 005c 0B       		.uleb128 0xb
 2738 005d 3B       		.uleb128 0x3b
 2739 005e 0B       		.uleb128 0xb
 2740 005f 01       		.uleb128 0x1
 2741 0060 13       		.uleb128 0x13
 2742 0061 00       		.byte	0
 2743 0062 00       		.byte	0
 2744 0063 0A       		.uleb128 0xa
 2745 0064 0D       		.uleb128 0xd
 2746 0065 00       		.byte	0
 2747 0066 03       		.uleb128 0x3
 2748 0067 0E       		.uleb128 0xe
 2749 0068 3A       		.uleb128 0x3a
 2750 0069 0B       		.uleb128 0xb
 2751 006a 3B       		.uleb128 0x3b
 2752 006b 0B       		.uleb128 0xb
 2753 006c 49       		.uleb128 0x49
 2754 006d 13       		.uleb128 0x13
 2755 006e 38       		.uleb128 0x38
 2756 006f 0B       		.uleb128 0xb
 2757 0070 00       		.byte	0
 2758 0071 00       		.byte	0
 2759 0072 0B       		.uleb128 0xb
 2760 0073 13       		.uleb128 0x13
 2761 0074 01       		.byte	0x1
 2762 0075 0B       		.uleb128 0xb
 2763 0076 05       		.uleb128 0x5
 2764 0077 3A       		.uleb128 0x3a
 2765 0078 0B       		.uleb128 0xb
 2766 0079 3B       		.uleb128 0x3b
 2767 007a 0B       		.uleb128 0xb
 2768 007b 01       		.uleb128 0x1
 2769 007c 13       		.uleb128 0x13
 2770 007d 00       		.byte	0
 2771 007e 00       		.byte	0
 2772 007f 0C       		.uleb128 0xc
 2773 0080 0D       		.uleb128 0xd
 2774 0081 00       		.byte	0
 2775 0082 03       		.uleb128 0x3
 2776 0083 08       		.uleb128 0x8
 2777 0084 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 140


 2778 0085 0B       		.uleb128 0xb
 2779 0086 3B       		.uleb128 0x3b
 2780 0087 0B       		.uleb128 0xb
 2781 0088 49       		.uleb128 0x49
 2782 0089 13       		.uleb128 0x13
 2783 008a 38       		.uleb128 0x38
 2784 008b 0B       		.uleb128 0xb
 2785 008c 00       		.byte	0
 2786 008d 00       		.byte	0
 2787 008e 0D       		.uleb128 0xd
 2788 008f 0D       		.uleb128 0xd
 2789 0090 00       		.byte	0
 2790 0091 03       		.uleb128 0x3
 2791 0092 0E       		.uleb128 0xe
 2792 0093 3A       		.uleb128 0x3a
 2793 0094 0B       		.uleb128 0xb
 2794 0095 3B       		.uleb128 0x3b
 2795 0096 0B       		.uleb128 0xb
 2796 0097 49       		.uleb128 0x49
 2797 0098 13       		.uleb128 0x13
 2798 0099 38       		.uleb128 0x38
 2799 009a 05       		.uleb128 0x5
 2800 009b 00       		.byte	0
 2801 009c 00       		.byte	0
 2802 009d 0E       		.uleb128 0xe
 2803 009e 21       		.uleb128 0x21
 2804 009f 00       		.byte	0
 2805 00a0 49       		.uleb128 0x49
 2806 00a1 13       		.uleb128 0x13
 2807 00a2 2F       		.uleb128 0x2f
 2808 00a3 05       		.uleb128 0x5
 2809 00a4 00       		.byte	0
 2810 00a5 00       		.byte	0
 2811 00a6 0F       		.uleb128 0xf
 2812 00a7 16       		.uleb128 0x16
 2813 00a8 00       		.byte	0
 2814 00a9 03       		.uleb128 0x3
 2815 00aa 0E       		.uleb128 0xe
 2816 00ab 3A       		.uleb128 0x3a
 2817 00ac 0B       		.uleb128 0xb
 2818 00ad 3B       		.uleb128 0x3b
 2819 00ae 05       		.uleb128 0x5
 2820 00af 49       		.uleb128 0x49
 2821 00b0 13       		.uleb128 0x13
 2822 00b1 00       		.byte	0
 2823 00b2 00       		.byte	0
 2824 00b3 10       		.uleb128 0x10
 2825 00b4 0F       		.uleb128 0xf
 2826 00b5 00       		.byte	0
 2827 00b6 0B       		.uleb128 0xb
 2828 00b7 0B       		.uleb128 0xb
 2829 00b8 49       		.uleb128 0x49
 2830 00b9 13       		.uleb128 0x13
 2831 00ba 00       		.byte	0
 2832 00bb 00       		.byte	0
 2833 00bc 11       		.uleb128 0x11
 2834 00bd 15       		.uleb128 0x15
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 141


 2835 00be 00       		.byte	0
 2836 00bf 27       		.uleb128 0x27
 2837 00c0 19       		.uleb128 0x19
 2838 00c1 00       		.byte	0
 2839 00c2 00       		.byte	0
 2840 00c3 12       		.uleb128 0x12
 2841 00c4 04       		.uleb128 0x4
 2842 00c5 01       		.byte	0x1
 2843 00c6 0B       		.uleb128 0xb
 2844 00c7 0B       		.uleb128 0xb
 2845 00c8 49       		.uleb128 0x49
 2846 00c9 13       		.uleb128 0x13
 2847 00ca 3A       		.uleb128 0x3a
 2848 00cb 0B       		.uleb128 0xb
 2849 00cc 3B       		.uleb128 0x3b
 2850 00cd 05       		.uleb128 0x5
 2851 00ce 01       		.uleb128 0x1
 2852 00cf 13       		.uleb128 0x13
 2853 00d0 00       		.byte	0
 2854 00d1 00       		.byte	0
 2855 00d2 13       		.uleb128 0x13
 2856 00d3 28       		.uleb128 0x28
 2857 00d4 00       		.byte	0
 2858 00d5 03       		.uleb128 0x3
 2859 00d6 0E       		.uleb128 0xe
 2860 00d7 1C       		.uleb128 0x1c
 2861 00d8 0B       		.uleb128 0xb
 2862 00d9 00       		.byte	0
 2863 00da 00       		.byte	0
 2864 00db 14       		.uleb128 0x14
 2865 00dc 28       		.uleb128 0x28
 2866 00dd 00       		.byte	0
 2867 00de 03       		.uleb128 0x3
 2868 00df 0E       		.uleb128 0xe
 2869 00e0 1C       		.uleb128 0x1c
 2870 00e1 06       		.uleb128 0x6
 2871 00e2 00       		.byte	0
 2872 00e3 00       		.byte	0
 2873 00e4 15       		.uleb128 0x15
 2874 00e5 13       		.uleb128 0x13
 2875 00e6 01       		.byte	0x1
 2876 00e7 0B       		.uleb128 0xb
 2877 00e8 0B       		.uleb128 0xb
 2878 00e9 3A       		.uleb128 0x3a
 2879 00ea 0B       		.uleb128 0xb
 2880 00eb 3B       		.uleb128 0x3b
 2881 00ec 05       		.uleb128 0x5
 2882 00ed 01       		.uleb128 0x1
 2883 00ee 13       		.uleb128 0x13
 2884 00ef 00       		.byte	0
 2885 00f0 00       		.byte	0
 2886 00f1 16       		.uleb128 0x16
 2887 00f2 0D       		.uleb128 0xd
 2888 00f3 00       		.byte	0
 2889 00f4 03       		.uleb128 0x3
 2890 00f5 0E       		.uleb128 0xe
 2891 00f6 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 142


 2892 00f7 0B       		.uleb128 0xb
 2893 00f8 3B       		.uleb128 0x3b
 2894 00f9 05       		.uleb128 0x5
 2895 00fa 49       		.uleb128 0x49
 2896 00fb 13       		.uleb128 0x13
 2897 00fc 38       		.uleb128 0x38
 2898 00fd 0B       		.uleb128 0xb
 2899 00fe 00       		.byte	0
 2900 00ff 00       		.byte	0
 2901 0100 17       		.uleb128 0x17
 2902 0101 2E       		.uleb128 0x2e
 2903 0102 01       		.byte	0x1
 2904 0103 03       		.uleb128 0x3
 2905 0104 0E       		.uleb128 0xe
 2906 0105 3A       		.uleb128 0x3a
 2907 0106 0B       		.uleb128 0xb
 2908 0107 3B       		.uleb128 0x3b
 2909 0108 05       		.uleb128 0x5
 2910 0109 27       		.uleb128 0x27
 2911 010a 19       		.uleb128 0x19
 2912 010b 49       		.uleb128 0x49
 2913 010c 13       		.uleb128 0x13
 2914 010d 20       		.uleb128 0x20
 2915 010e 0B       		.uleb128 0xb
 2916 010f 01       		.uleb128 0x1
 2917 0110 13       		.uleb128 0x13
 2918 0111 00       		.byte	0
 2919 0112 00       		.byte	0
 2920 0113 18       		.uleb128 0x18
 2921 0114 05       		.uleb128 0x5
 2922 0115 00       		.byte	0
 2923 0116 03       		.uleb128 0x3
 2924 0117 0E       		.uleb128 0xe
 2925 0118 3A       		.uleb128 0x3a
 2926 0119 0B       		.uleb128 0xb
 2927 011a 3B       		.uleb128 0x3b
 2928 011b 05       		.uleb128 0x5
 2929 011c 49       		.uleb128 0x49
 2930 011d 13       		.uleb128 0x13
 2931 011e 00       		.byte	0
 2932 011f 00       		.byte	0
 2933 0120 19       		.uleb128 0x19
 2934 0121 34       		.uleb128 0x34
 2935 0122 00       		.byte	0
 2936 0123 03       		.uleb128 0x3
 2937 0124 0E       		.uleb128 0xe
 2938 0125 3A       		.uleb128 0x3a
 2939 0126 0B       		.uleb128 0xb
 2940 0127 3B       		.uleb128 0x3b
 2941 0128 05       		.uleb128 0x5
 2942 0129 49       		.uleb128 0x49
 2943 012a 13       		.uleb128 0x13
 2944 012b 00       		.byte	0
 2945 012c 00       		.byte	0
 2946 012d 1A       		.uleb128 0x1a
 2947 012e 2E       		.uleb128 0x2e
 2948 012f 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 143


 2949 0130 03       		.uleb128 0x3
 2950 0131 0E       		.uleb128 0xe
 2951 0132 3A       		.uleb128 0x3a
 2952 0133 0B       		.uleb128 0xb
 2953 0134 3B       		.uleb128 0x3b
 2954 0135 05       		.uleb128 0x5
 2955 0136 27       		.uleb128 0x27
 2956 0137 19       		.uleb128 0x19
 2957 0138 20       		.uleb128 0x20
 2958 0139 0B       		.uleb128 0xb
 2959 013a 01       		.uleb128 0x1
 2960 013b 13       		.uleb128 0x13
 2961 013c 00       		.byte	0
 2962 013d 00       		.byte	0
 2963 013e 1B       		.uleb128 0x1b
 2964 013f 2E       		.uleb128 0x2e
 2965 0140 00       		.byte	0
 2966 0141 03       		.uleb128 0x3
 2967 0142 0E       		.uleb128 0xe
 2968 0143 3A       		.uleb128 0x3a
 2969 0144 0B       		.uleb128 0xb
 2970 0145 3B       		.uleb128 0x3b
 2971 0146 0B       		.uleb128 0xb
 2972 0147 27       		.uleb128 0x27
 2973 0148 19       		.uleb128 0x19
 2974 0149 20       		.uleb128 0x20
 2975 014a 0B       		.uleb128 0xb
 2976 014b 00       		.byte	0
 2977 014c 00       		.byte	0
 2978 014d 1C       		.uleb128 0x1c
 2979 014e 2E       		.uleb128 0x2e
 2980 014f 01       		.byte	0x1
 2981 0150 03       		.uleb128 0x3
 2982 0151 0E       		.uleb128 0xe
 2983 0152 3A       		.uleb128 0x3a
 2984 0153 0B       		.uleb128 0xb
 2985 0154 3B       		.uleb128 0x3b
 2986 0155 0B       		.uleb128 0xb
 2987 0156 27       		.uleb128 0x27
 2988 0157 19       		.uleb128 0x19
 2989 0158 20       		.uleb128 0x20
 2990 0159 0B       		.uleb128 0xb
 2991 015a 01       		.uleb128 0x1
 2992 015b 13       		.uleb128 0x13
 2993 015c 00       		.byte	0
 2994 015d 00       		.byte	0
 2995 015e 1D       		.uleb128 0x1d
 2996 015f 05       		.uleb128 0x5
 2997 0160 00       		.byte	0
 2998 0161 03       		.uleb128 0x3
 2999 0162 0E       		.uleb128 0xe
 3000 0163 3A       		.uleb128 0x3a
 3001 0164 0B       		.uleb128 0xb
 3002 0165 3B       		.uleb128 0x3b
 3003 0166 0B       		.uleb128 0xb
 3004 0167 49       		.uleb128 0x49
 3005 0168 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 144


 3006 0169 00       		.byte	0
 3007 016a 00       		.byte	0
 3008 016b 1E       		.uleb128 0x1e
 3009 016c 2E       		.uleb128 0x2e
 3010 016d 00       		.byte	0
 3011 016e 03       		.uleb128 0x3
 3012 016f 0E       		.uleb128 0xe
 3013 0170 3A       		.uleb128 0x3a
 3014 0171 0B       		.uleb128 0xb
 3015 0172 3B       		.uleb128 0x3b
 3016 0173 05       		.uleb128 0x5
 3017 0174 27       		.uleb128 0x27
 3018 0175 19       		.uleb128 0x19
 3019 0176 20       		.uleb128 0x20
 3020 0177 0B       		.uleb128 0xb
 3021 0178 00       		.byte	0
 3022 0179 00       		.byte	0
 3023 017a 1F       		.uleb128 0x1f
 3024 017b 2E       		.uleb128 0x2e
 3025 017c 01       		.byte	0x1
 3026 017d 3F       		.uleb128 0x3f
 3027 017e 19       		.uleb128 0x19
 3028 017f 03       		.uleb128 0x3
 3029 0180 0E       		.uleb128 0xe
 3030 0181 3A       		.uleb128 0x3a
 3031 0182 0B       		.uleb128 0xb
 3032 0183 3B       		.uleb128 0x3b
 3033 0184 0B       		.uleb128 0xb
 3034 0185 27       		.uleb128 0x27
 3035 0186 19       		.uleb128 0x19
 3036 0187 11       		.uleb128 0x11
 3037 0188 01       		.uleb128 0x1
 3038 0189 12       		.uleb128 0x12
 3039 018a 06       		.uleb128 0x6
 3040 018b 40       		.uleb128 0x40
 3041 018c 18       		.uleb128 0x18
 3042 018d 9742     		.uleb128 0x2117
 3043 018f 19       		.uleb128 0x19
 3044 0190 01       		.uleb128 0x1
 3045 0191 13       		.uleb128 0x13
 3046 0192 00       		.byte	0
 3047 0193 00       		.byte	0
 3048 0194 20       		.uleb128 0x20
 3049 0195 05       		.uleb128 0x5
 3050 0196 00       		.byte	0
 3051 0197 03       		.uleb128 0x3
 3052 0198 0E       		.uleb128 0xe
 3053 0199 3A       		.uleb128 0x3a
 3054 019a 0B       		.uleb128 0xb
 3055 019b 3B       		.uleb128 0x3b
 3056 019c 0B       		.uleb128 0xb
 3057 019d 49       		.uleb128 0x49
 3058 019e 13       		.uleb128 0x13
 3059 019f 02       		.uleb128 0x2
 3060 01a0 17       		.uleb128 0x17
 3061 01a1 00       		.byte	0
 3062 01a2 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 145


 3063 01a3 21       		.uleb128 0x21
 3064 01a4 34       		.uleb128 0x34
 3065 01a5 00       		.byte	0
 3066 01a6 03       		.uleb128 0x3
 3067 01a7 0E       		.uleb128 0xe
 3068 01a8 3A       		.uleb128 0x3a
 3069 01a9 0B       		.uleb128 0xb
 3070 01aa 3B       		.uleb128 0x3b
 3071 01ab 0B       		.uleb128 0xb
 3072 01ac 49       		.uleb128 0x49
 3073 01ad 13       		.uleb128 0x13
 3074 01ae 1C       		.uleb128 0x1c
 3075 01af 0B       		.uleb128 0xb
 3076 01b0 00       		.byte	0
 3077 01b1 00       		.byte	0
 3078 01b2 22       		.uleb128 0x22
 3079 01b3 1D       		.uleb128 0x1d
 3080 01b4 01       		.byte	0x1
 3081 01b5 31       		.uleb128 0x31
 3082 01b6 13       		.uleb128 0x13
 3083 01b7 11       		.uleb128 0x11
 3084 01b8 01       		.uleb128 0x1
 3085 01b9 12       		.uleb128 0x12
 3086 01ba 06       		.uleb128 0x6
 3087 01bb 58       		.uleb128 0x58
 3088 01bc 0B       		.uleb128 0xb
 3089 01bd 59       		.uleb128 0x59
 3090 01be 0B       		.uleb128 0xb
 3091 01bf 01       		.uleb128 0x1
 3092 01c0 13       		.uleb128 0x13
 3093 01c1 00       		.byte	0
 3094 01c2 00       		.byte	0
 3095 01c3 23       		.uleb128 0x23
 3096 01c4 1D       		.uleb128 0x1d
 3097 01c5 01       		.byte	0x1
 3098 01c6 31       		.uleb128 0x31
 3099 01c7 13       		.uleb128 0x13
 3100 01c8 11       		.uleb128 0x11
 3101 01c9 01       		.uleb128 0x1
 3102 01ca 12       		.uleb128 0x12
 3103 01cb 06       		.uleb128 0x6
 3104 01cc 58       		.uleb128 0x58
 3105 01cd 0B       		.uleb128 0xb
 3106 01ce 59       		.uleb128 0x59
 3107 01cf 0B       		.uleb128 0xb
 3108 01d0 00       		.byte	0
 3109 01d1 00       		.byte	0
 3110 01d2 24       		.uleb128 0x24
 3111 01d3 05       		.uleb128 0x5
 3112 01d4 00       		.byte	0
 3113 01d5 31       		.uleb128 0x31
 3114 01d6 13       		.uleb128 0x13
 3115 01d7 02       		.uleb128 0x2
 3116 01d8 17       		.uleb128 0x17
 3117 01d9 00       		.byte	0
 3118 01da 00       		.byte	0
 3119 01db 25       		.uleb128 0x25
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 146


 3120 01dc 0B       		.uleb128 0xb
 3121 01dd 01       		.byte	0x1
 3122 01de 11       		.uleb128 0x11
 3123 01df 01       		.uleb128 0x1
 3124 01e0 12       		.uleb128 0x12
 3125 01e1 06       		.uleb128 0x6
 3126 01e2 00       		.byte	0
 3127 01e3 00       		.byte	0
 3128 01e4 26       		.uleb128 0x26
 3129 01e5 34       		.uleb128 0x34
 3130 01e6 00       		.byte	0
 3131 01e7 31       		.uleb128 0x31
 3132 01e8 13       		.uleb128 0x13
 3133 01e9 02       		.uleb128 0x2
 3134 01ea 17       		.uleb128 0x17
 3135 01eb 00       		.byte	0
 3136 01ec 00       		.byte	0
 3137 01ed 27       		.uleb128 0x27
 3138 01ee 898201   		.uleb128 0x4109
 3139 01f1 01       		.byte	0x1
 3140 01f2 11       		.uleb128 0x11
 3141 01f3 01       		.uleb128 0x1
 3142 01f4 31       		.uleb128 0x31
 3143 01f5 13       		.uleb128 0x13
 3144 01f6 01       		.uleb128 0x1
 3145 01f7 13       		.uleb128 0x13
 3146 01f8 00       		.byte	0
 3147 01f9 00       		.byte	0
 3148 01fa 28       		.uleb128 0x28
 3149 01fb 8A8201   		.uleb128 0x410a
 3150 01fe 00       		.byte	0
 3151 01ff 02       		.uleb128 0x2
 3152 0200 18       		.uleb128 0x18
 3153 0201 9142     		.uleb128 0x2111
 3154 0203 18       		.uleb128 0x18
 3155 0204 00       		.byte	0
 3156 0205 00       		.byte	0
 3157 0206 29       		.uleb128 0x29
 3158 0207 898201   		.uleb128 0x4109
 3159 020a 01       		.byte	0x1
 3160 020b 11       		.uleb128 0x11
 3161 020c 01       		.uleb128 0x1
 3162 020d 31       		.uleb128 0x31
 3163 020e 13       		.uleb128 0x13
 3164 020f 00       		.byte	0
 3165 0210 00       		.byte	0
 3166 0211 2A       		.uleb128 0x2a
 3167 0212 05       		.uleb128 0x5
 3168 0213 00       		.byte	0
 3169 0214 03       		.uleb128 0x3
 3170 0215 0E       		.uleb128 0xe
 3171 0216 3A       		.uleb128 0x3a
 3172 0217 0B       		.uleb128 0xb
 3173 0218 3B       		.uleb128 0x3b
 3174 0219 0B       		.uleb128 0xb
 3175 021a 49       		.uleb128 0x49
 3176 021b 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 147


 3177 021c 02       		.uleb128 0x2
 3178 021d 18       		.uleb128 0x18
 3179 021e 00       		.byte	0
 3180 021f 00       		.byte	0
 3181 0220 2B       		.uleb128 0x2b
 3182 0221 2E       		.uleb128 0x2e
 3183 0222 00       		.byte	0
 3184 0223 3F       		.uleb128 0x3f
 3185 0224 19       		.uleb128 0x19
 3186 0225 03       		.uleb128 0x3
 3187 0226 0E       		.uleb128 0xe
 3188 0227 3A       		.uleb128 0x3a
 3189 0228 0B       		.uleb128 0xb
 3190 0229 3B       		.uleb128 0x3b
 3191 022a 05       		.uleb128 0x5
 3192 022b 27       		.uleb128 0x27
 3193 022c 19       		.uleb128 0x19
 3194 022d 11       		.uleb128 0x11
 3195 022e 01       		.uleb128 0x1
 3196 022f 12       		.uleb128 0x12
 3197 0230 06       		.uleb128 0x6
 3198 0231 40       		.uleb128 0x40
 3199 0232 18       		.uleb128 0x18
 3200 0233 9742     		.uleb128 0x2117
 3201 0235 19       		.uleb128 0x19
 3202 0236 00       		.byte	0
 3203 0237 00       		.byte	0
 3204 0238 2C       		.uleb128 0x2c
 3205 0239 2E       		.uleb128 0x2e
 3206 023a 01       		.byte	0x1
 3207 023b 3F       		.uleb128 0x3f
 3208 023c 19       		.uleb128 0x19
 3209 023d 03       		.uleb128 0x3
 3210 023e 0E       		.uleb128 0xe
 3211 023f 3A       		.uleb128 0x3a
 3212 0240 0B       		.uleb128 0xb
 3213 0241 3B       		.uleb128 0x3b
 3214 0242 05       		.uleb128 0x5
 3215 0243 27       		.uleb128 0x27
 3216 0244 19       		.uleb128 0x19
 3217 0245 11       		.uleb128 0x11
 3218 0246 01       		.uleb128 0x1
 3219 0247 12       		.uleb128 0x12
 3220 0248 06       		.uleb128 0x6
 3221 0249 40       		.uleb128 0x40
 3222 024a 18       		.uleb128 0x18
 3223 024b 9742     		.uleb128 0x2117
 3224 024d 19       		.uleb128 0x19
 3225 024e 01       		.uleb128 0x1
 3226 024f 13       		.uleb128 0x13
 3227 0250 00       		.byte	0
 3228 0251 00       		.byte	0
 3229 0252 2D       		.uleb128 0x2d
 3230 0253 05       		.uleb128 0x5
 3231 0254 00       		.byte	0
 3232 0255 03       		.uleb128 0x3
 3233 0256 0E       		.uleb128 0xe
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 148


 3234 0257 3A       		.uleb128 0x3a
 3235 0258 0B       		.uleb128 0xb
 3236 0259 3B       		.uleb128 0x3b
 3237 025a 05       		.uleb128 0x5
 3238 025b 49       		.uleb128 0x49
 3239 025c 13       		.uleb128 0x13
 3240 025d 02       		.uleb128 0x2
 3241 025e 17       		.uleb128 0x17
 3242 025f 00       		.byte	0
 3243 0260 00       		.byte	0
 3244 0261 2E       		.uleb128 0x2e
 3245 0262 34       		.uleb128 0x34
 3246 0263 00       		.byte	0
 3247 0264 03       		.uleb128 0x3
 3248 0265 0E       		.uleb128 0xe
 3249 0266 3A       		.uleb128 0x3a
 3250 0267 0B       		.uleb128 0xb
 3251 0268 3B       		.uleb128 0x3b
 3252 0269 05       		.uleb128 0x5
 3253 026a 49       		.uleb128 0x49
 3254 026b 13       		.uleb128 0x13
 3255 026c 02       		.uleb128 0x2
 3256 026d 17       		.uleb128 0x17
 3257 026e 00       		.byte	0
 3258 026f 00       		.byte	0
 3259 0270 2F       		.uleb128 0x2f
 3260 0271 1D       		.uleb128 0x1d
 3261 0272 01       		.byte	0x1
 3262 0273 31       		.uleb128 0x31
 3263 0274 13       		.uleb128 0x13
 3264 0275 11       		.uleb128 0x11
 3265 0276 01       		.uleb128 0x1
 3266 0277 12       		.uleb128 0x12
 3267 0278 06       		.uleb128 0x6
 3268 0279 58       		.uleb128 0x58
 3269 027a 0B       		.uleb128 0xb
 3270 027b 59       		.uleb128 0x59
 3271 027c 05       		.uleb128 0x5
 3272 027d 00       		.byte	0
 3273 027e 00       		.byte	0
 3274 027f 30       		.uleb128 0x30
 3275 0280 2E       		.uleb128 0x2e
 3276 0281 01       		.byte	0x1
 3277 0282 3F       		.uleb128 0x3f
 3278 0283 19       		.uleb128 0x19
 3279 0284 03       		.uleb128 0x3
 3280 0285 0E       		.uleb128 0xe
 3281 0286 3A       		.uleb128 0x3a
 3282 0287 0B       		.uleb128 0xb
 3283 0288 3B       		.uleb128 0x3b
 3284 0289 05       		.uleb128 0x5
 3285 028a 27       		.uleb128 0x27
 3286 028b 19       		.uleb128 0x19
 3287 028c 49       		.uleb128 0x49
 3288 028d 13       		.uleb128 0x13
 3289 028e 11       		.uleb128 0x11
 3290 028f 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 149


 3291 0290 12       		.uleb128 0x12
 3292 0291 06       		.uleb128 0x6
 3293 0292 40       		.uleb128 0x40
 3294 0293 18       		.uleb128 0x18
 3295 0294 9742     		.uleb128 0x2117
 3296 0296 19       		.uleb128 0x19
 3297 0297 01       		.uleb128 0x1
 3298 0298 13       		.uleb128 0x13
 3299 0299 00       		.byte	0
 3300 029a 00       		.byte	0
 3301 029b 31       		.uleb128 0x31
 3302 029c 34       		.uleb128 0x34
 3303 029d 00       		.byte	0
 3304 029e 03       		.uleb128 0x3
 3305 029f 0E       		.uleb128 0xe
 3306 02a0 3A       		.uleb128 0x3a
 3307 02a1 0B       		.uleb128 0xb
 3308 02a2 3B       		.uleb128 0x3b
 3309 02a3 05       		.uleb128 0x5
 3310 02a4 49       		.uleb128 0x49
 3311 02a5 13       		.uleb128 0x13
 3312 02a6 1C       		.uleb128 0x1c
 3313 02a7 0B       		.uleb128 0xb
 3314 02a8 00       		.byte	0
 3315 02a9 00       		.byte	0
 3316 02aa 32       		.uleb128 0x32
 3317 02ab 898201   		.uleb128 0x4109
 3318 02ae 00       		.byte	0
 3319 02af 11       		.uleb128 0x11
 3320 02b0 01       		.uleb128 0x1
 3321 02b1 31       		.uleb128 0x31
 3322 02b2 13       		.uleb128 0x13
 3323 02b3 00       		.byte	0
 3324 02b4 00       		.byte	0
 3325 02b5 33       		.uleb128 0x33
 3326 02b6 34       		.uleb128 0x34
 3327 02b7 00       		.byte	0
 3328 02b8 03       		.uleb128 0x3
 3329 02b9 0E       		.uleb128 0xe
 3330 02ba 3A       		.uleb128 0x3a
 3331 02bb 0B       		.uleb128 0xb
 3332 02bc 3B       		.uleb128 0x3b
 3333 02bd 0B       		.uleb128 0xb
 3334 02be 49       		.uleb128 0x49
 3335 02bf 13       		.uleb128 0x13
 3336 02c0 3F       		.uleb128 0x3f
 3337 02c1 19       		.uleb128 0x19
 3338 02c2 02       		.uleb128 0x2
 3339 02c3 18       		.uleb128 0x18
 3340 02c4 00       		.byte	0
 3341 02c5 00       		.byte	0
 3342 02c6 34       		.uleb128 0x34
 3343 02c7 34       		.uleb128 0x34
 3344 02c8 00       		.byte	0
 3345 02c9 03       		.uleb128 0x3
 3346 02ca 0E       		.uleb128 0xe
 3347 02cb 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 150


 3348 02cc 0B       		.uleb128 0xb
 3349 02cd 3B       		.uleb128 0x3b
 3350 02ce 05       		.uleb128 0x5
 3351 02cf 49       		.uleb128 0x49
 3352 02d0 13       		.uleb128 0x13
 3353 02d1 3F       		.uleb128 0x3f
 3354 02d2 19       		.uleb128 0x19
 3355 02d3 3C       		.uleb128 0x3c
 3356 02d4 19       		.uleb128 0x19
 3357 02d5 00       		.byte	0
 3358 02d6 00       		.byte	0
 3359 02d7 35       		.uleb128 0x35
 3360 02d8 2E       		.uleb128 0x2e
 3361 02d9 00       		.byte	0
 3362 02da 3F       		.uleb128 0x3f
 3363 02db 19       		.uleb128 0x19
 3364 02dc 3C       		.uleb128 0x3c
 3365 02dd 19       		.uleb128 0x19
 3366 02de 6E       		.uleb128 0x6e
 3367 02df 0E       		.uleb128 0xe
 3368 02e0 03       		.uleb128 0x3
 3369 02e1 0E       		.uleb128 0xe
 3370 02e2 3A       		.uleb128 0x3a
 3371 02e3 0B       		.uleb128 0xb
 3372 02e4 3B       		.uleb128 0x3b
 3373 02e5 05       		.uleb128 0x5
 3374 02e6 00       		.byte	0
 3375 02e7 00       		.byte	0
 3376 02e8 00       		.byte	0
 3377              		.section	.debug_loc,"",%progbits
 3378              	.Ldebug_loc0:
 3379              	.LLST0:
 3380 0000 00000000 		.4byte	.LVL0
 3381 0004 16000000 		.4byte	.LVL4
 3382 0008 0100     		.2byte	0x1
 3383 000a 50       		.byte	0x50
 3384 000b 16000000 		.4byte	.LVL4
 3385 000f 44000000 		.4byte	.LVL10
 3386 0013 0100     		.2byte	0x1
 3387 0015 55       		.byte	0x55
 3388 0016 44000000 		.4byte	.LVL10
 3389 001a 60000000 		.4byte	.LFE178
 3390 001e 0400     		.2byte	0x4
 3391 0020 F3       		.byte	0xf3
 3392 0021 01       		.uleb128 0x1
 3393 0022 50       		.byte	0x50
 3394 0023 9F       		.byte	0x9f
 3395 0024 00000000 		.4byte	0
 3396 0028 00000000 		.4byte	0
 3397              	.LLST1:
 3398 002c 04000000 		.4byte	.LVL1
 3399 0030 0E000000 		.4byte	.LVL2
 3400 0034 0200     		.2byte	0x2
 3401 0036 31       		.byte	0x31
 3402 0037 9F       		.byte	0x9f
 3403 0038 00000000 		.4byte	0
 3404 003c 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 151


 3405              	.LLST2:
 3406 0040 04000000 		.4byte	.LVL1
 3407 0044 0E000000 		.4byte	.LVL2
 3408 0048 0200     		.2byte	0x2
 3409 004a 30       		.byte	0x30
 3410 004b 9F       		.byte	0x9f
 3411 004c 00000000 		.4byte	0
 3412 0050 00000000 		.4byte	0
 3413              	.LLST3:
 3414 0054 04000000 		.4byte	.LVL1
 3415 0058 0E000000 		.4byte	.LVL2
 3416 005c 0600     		.2byte	0x6
 3417 005e 0C       		.byte	0xc
 3418 005f 01004A00 		.4byte	0x4a0001
 3419 0063 9F       		.byte	0x9f
 3420 0064 00000000 		.4byte	0
 3421 0068 00000000 		.4byte	0
 3422              	.LLST4:
 3423 006c 10000000 		.4byte	.LVL3
 3424 0070 20000000 		.4byte	.LVL5
 3425 0074 0100     		.2byte	0x1
 3426 0076 53       		.byte	0x53
 3427 0077 20000000 		.4byte	.LVL5
 3428 007b 26000000 		.4byte	.LVL6
 3429 007f 0200     		.2byte	0x2
 3430 0081 75       		.byte	0x75
 3431 0082 10       		.sleb128 16
 3432 0083 00000000 		.4byte	0
 3433 0087 00000000 		.4byte	0
 3434              	.LLST6:
 3435 008b 10000000 		.4byte	.LVL3
 3436 008f 26000000 		.4byte	.LVL6
 3437 0093 0200     		.2byte	0x2
 3438 0095 31       		.byte	0x31
 3439 0096 9F       		.byte	0x9f
 3440 0097 00000000 		.4byte	0
 3441 009b 00000000 		.4byte	0
 3442              	.LLST7:
 3443 009f 10000000 		.4byte	.LVL3
 3444 00a3 26000000 		.4byte	.LVL6
 3445 00a7 0200     		.2byte	0x2
 3446 00a9 30       		.byte	0x30
 3447 00aa 9F       		.byte	0x9f
 3448 00ab 00000000 		.4byte	0
 3449 00af 00000000 		.4byte	0
 3450              	.LLST8:
 3451 00b3 10000000 		.4byte	.LVL3
 3452 00b7 26000000 		.4byte	.LVL6
 3453 00bb 0600     		.2byte	0x6
 3454 00bd 0C       		.byte	0xc
 3455 00be 01004A00 		.4byte	0x4a0001
 3456 00c2 9F       		.byte	0x9f
 3457 00c3 00000000 		.4byte	0
 3458 00c7 00000000 		.4byte	0
 3459              	.LLST9:
 3460 00cb 26000000 		.4byte	.LVL6
 3461 00cf 32000000 		.4byte	.LVL7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 152


 3462 00d3 0200     		.2byte	0x2
 3463 00d5 31       		.byte	0x31
 3464 00d6 9F       		.byte	0x9f
 3465 00d7 00000000 		.4byte	0
 3466 00db 00000000 		.4byte	0
 3467              	.LLST10:
 3468 00df 26000000 		.4byte	.LVL6
 3469 00e3 32000000 		.4byte	.LVL7
 3470 00e7 0200     		.2byte	0x2
 3471 00e9 30       		.byte	0x30
 3472 00ea 9F       		.byte	0x9f
 3473 00eb 00000000 		.4byte	0
 3474 00ef 00000000 		.4byte	0
 3475              	.LLST11:
 3476 00f3 26000000 		.4byte	.LVL6
 3477 00f7 32000000 		.4byte	.LVL7
 3478 00fb 0600     		.2byte	0x6
 3479 00fd 0C       		.byte	0xc
 3480 00fe 01004A00 		.4byte	0x4a0001
 3481 0102 9F       		.byte	0x9f
 3482 0103 00000000 		.4byte	0
 3483 0107 00000000 		.4byte	0
 3484              	.LLST12:
 3485 010b 00000000 		.4byte	.LVL14
 3486 010f 06000000 		.4byte	.LVL15
 3487 0113 0100     		.2byte	0x1
 3488 0115 50       		.byte	0x50
 3489 0116 06000000 		.4byte	.LVL15
 3490 011a 2C000000 		.4byte	.LFE184
 3491 011e 0400     		.2byte	0x4
 3492 0120 F3       		.byte	0xf3
 3493 0121 01       		.uleb128 0x1
 3494 0122 50       		.byte	0x50
 3495 0123 9F       		.byte	0x9f
 3496 0124 00000000 		.4byte	0
 3497 0128 00000000 		.4byte	0
 3498              	.LLST13:
 3499 012c 08000000 		.4byte	.LVL16
 3500 0130 1C000000 		.4byte	.LVL19
 3501 0134 0100     		.2byte	0x1
 3502 0136 54       		.byte	0x54
 3503 0137 1C000000 		.4byte	.LVL19
 3504 013b 2C000000 		.4byte	.LFE184
 3505 013f 0500     		.2byte	0x5
 3506 0141 72       		.byte	0x72
 3507 0142 00       		.sleb128 0
 3508 0143 73       		.byte	0x73
 3509 0144 00       		.sleb128 0
 3510 0145 22       		.byte	0x22
 3511 0146 00000000 		.4byte	0
 3512 014a 00000000 		.4byte	0
 3513              	.LLST14:
 3514 014e 08000000 		.4byte	.LVL16
 3515 0152 1C000000 		.4byte	.LVL18
 3516 0156 0100     		.2byte	0x1
 3517 0158 54       		.byte	0x54
 3518 0159 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 153


 3519 015d 00000000 		.4byte	0
 3520              	.LLST15:
 3521 0161 08000000 		.4byte	.LVL16
 3522 0165 1C000000 		.4byte	.LVL18
 3523 0169 0600     		.2byte	0x6
 3524 016b 0C       		.byte	0xc
 3525 016c 00001D41 		.4byte	0x411d0000
 3526 0170 9F       		.byte	0x9f
 3527 0171 00000000 		.4byte	0
 3528 0175 00000000 		.4byte	0
 3529              	.LLST16:
 3530 0179 00000000 		.4byte	.LVL20
 3531 017d 1A000000 		.4byte	.LVL22
 3532 0181 0100     		.2byte	0x1
 3533 0183 50       		.byte	0x50
 3534 0184 1A000000 		.4byte	.LVL22
 3535 0188 2C000000 		.4byte	.LVL26
 3536 018c 0100     		.2byte	0x1
 3537 018e 54       		.byte	0x54
 3538 018f 2C000000 		.4byte	.LVL26
 3539 0193 48000000 		.4byte	.LFE185
 3540 0197 0200     		.2byte	0x2
 3541 0199 73       		.byte	0x73
 3542 019a 20       		.sleb128 32
 3543 019b 00000000 		.4byte	0
 3544 019f 00000000 		.4byte	0
 3545              	.LLST17:
 3546 01a3 12000000 		.4byte	.LVL21
 3547 01a7 1C000000 		.4byte	.LVL23
 3548 01ab 0100     		.2byte	0x1
 3549 01ad 53       		.byte	0x53
 3550 01ae 1C000000 		.4byte	.LVL23
 3551 01b2 27000000 		.4byte	.LVL24-1
 3552 01b6 0200     		.2byte	0x2
 3553 01b8 72       		.byte	0x72
 3554 01b9 04       		.sleb128 4
 3555 01ba 00000000 		.4byte	0
 3556 01be 00000000 		.4byte	0
 3557              	.LLST18:
 3558 01c2 1A000000 		.4byte	.LVL22
 3559 01c6 2C000000 		.4byte	.LVL25
 3560 01ca 0100     		.2byte	0x1
 3561 01cc 54       		.byte	0x54
 3562 01cd 00000000 		.4byte	0
 3563 01d1 00000000 		.4byte	0
 3564              	.LLST19:
 3565 01d5 1A000000 		.4byte	.LVL22
 3566 01d9 2C000000 		.4byte	.LVL25
 3567 01dd 0600     		.2byte	0x6
 3568 01df 0C       		.byte	0xc
 3569 01e0 00001D41 		.4byte	0x411d0000
 3570 01e4 9F       		.byte	0x9f
 3571 01e5 00000000 		.4byte	0
 3572 01e9 00000000 		.4byte	0
 3573              	.LLST20:
 3574 01ed 00000000 		.4byte	.LVL27
 3575 01f1 06000000 		.4byte	.LVL29
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 154


 3576 01f5 0100     		.2byte	0x1
 3577 01f7 50       		.byte	0x50
 3578 01f8 06000000 		.4byte	.LVL29
 3579 01fc 1C000000 		.4byte	.LFE186
 3580 0200 0400     		.2byte	0x4
 3581 0202 F3       		.byte	0xf3
 3582 0203 01       		.uleb128 0x1
 3583 0204 50       		.byte	0x50
 3584 0205 9F       		.byte	0x9f
 3585 0206 00000000 		.4byte	0
 3586 020a 00000000 		.4byte	0
 3587              	.LLST21:
 3588 020e 04000000 		.4byte	.LVL28
 3589 0212 14000000 		.4byte	.LVL33
 3590 0216 0200     		.2byte	0x2
 3591 0218 30       		.byte	0x30
 3592 0219 9F       		.byte	0x9f
 3593 021a 14000000 		.4byte	.LVL33
 3594 021e 1C000000 		.4byte	.LFE186
 3595 0222 0100     		.2byte	0x1
 3596 0224 50       		.byte	0x50
 3597 0225 00000000 		.4byte	0
 3598 0229 00000000 		.4byte	0
 3599              	.LLST22:
 3600 022d 0A000000 		.4byte	.LVL30
 3601 0231 10000000 		.4byte	.LVL31
 3602 0235 0100     		.2byte	0x1
 3603 0237 50       		.byte	0x50
 3604 0238 12000000 		.4byte	.LVL32
 3605 023c 14000000 		.4byte	.LVL33
 3606 0240 0100     		.2byte	0x1
 3607 0242 50       		.byte	0x50
 3608 0243 00000000 		.4byte	0
 3609 0247 00000000 		.4byte	0
 3610              	.LLST23:
 3611 024b 00000000 		.4byte	.LVL38
 3612 024f 05000000 		.4byte	.LVL39-1
 3613 0253 0100     		.2byte	0x1
 3614 0255 50       		.byte	0x50
 3615 0256 05000000 		.4byte	.LVL39-1
 3616 025a 08000000 		.4byte	.LFE177
 3617 025e 0400     		.2byte	0x4
 3618 0260 F3       		.byte	0xf3
 3619 0261 01       		.uleb128 0x1
 3620 0262 50       		.byte	0x50
 3621 0263 9F       		.byte	0x9f
 3622 0264 00000000 		.4byte	0
 3623 0268 00000000 		.4byte	0
 3624              	.LLST24:
 3625 026c 00000000 		.4byte	.LVL40
 3626 0270 23000000 		.4byte	.LVL43-1
 3627 0274 0100     		.2byte	0x1
 3628 0276 50       		.byte	0x50
 3629 0277 23000000 		.4byte	.LVL43-1
 3630 027b 4C000000 		.4byte	.LVL47
 3631 027f 0100     		.2byte	0x1
 3632 0281 54       		.byte	0x54
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 155


 3633 0282 4C000000 		.4byte	.LVL47
 3634 0286 5C000000 		.4byte	.LFE179
 3635 028a 0400     		.2byte	0x4
 3636 028c F3       		.byte	0xf3
 3637 028d 01       		.uleb128 0x1
 3638 028e 50       		.byte	0x50
 3639 028f 9F       		.byte	0x9f
 3640 0290 00000000 		.4byte	0
 3641 0294 00000000 		.4byte	0
 3642              	.LLST25:
 3643 0298 00000000 		.4byte	.LVL40
 3644 029c 23000000 		.4byte	.LVL43-1
 3645 02a0 0100     		.2byte	0x1
 3646 02a2 51       		.byte	0x51
 3647 02a3 23000000 		.4byte	.LVL43-1
 3648 02a7 4C000000 		.4byte	.LVL48
 3649 02ab 0100     		.2byte	0x1
 3650 02ad 55       		.byte	0x55
 3651 02ae 4C000000 		.4byte	.LVL48
 3652 02b2 5C000000 		.4byte	.LFE179
 3653 02b6 0400     		.2byte	0x4
 3654 02b8 F3       		.byte	0xf3
 3655 02b9 01       		.uleb128 0x1
 3656 02ba 51       		.byte	0x51
 3657 02bb 9F       		.byte	0x9f
 3658 02bc 00000000 		.4byte	0
 3659 02c0 00000000 		.4byte	0
 3660              	.LLST26:
 3661 02c4 0A000000 		.4byte	.LVL41
 3662 02c8 14000000 		.4byte	.LVL42
 3663 02cc 0600     		.2byte	0x6
 3664 02ce 0C       		.byte	0xc
 3665 02cf 00001D41 		.4byte	0x411d0000
 3666 02d3 9F       		.byte	0x9f
 3667 02d4 00000000 		.4byte	0
 3668 02d8 00000000 		.4byte	0
 3669              		.section	.debug_aranges,"",%progbits
 3670 0000 74000000 		.4byte	0x74
 3671 0004 0200     		.2byte	0x2
 3672 0006 00000000 		.4byte	.Ldebug_info0
 3673 000a 04       		.byte	0x4
 3674 000b 00       		.byte	0
 3675 000c 0000     		.2byte	0
 3676 000e 0000     		.2byte	0
 3677 0010 00000000 		.4byte	.LFB178
 3678 0014 60000000 		.4byte	.LFE178-.LFB178
 3679 0018 00000000 		.4byte	.LFB180
 3680 001c 24000000 		.4byte	.LFE180-.LFB180
 3681 0020 00000000 		.4byte	.LFB181
 3682 0024 28000000 		.4byte	.LFE181-.LFB181
 3683 0028 00000000 		.4byte	.LFB182
 3684 002c 02000000 		.4byte	.LFE182-.LFB182
 3685 0030 00000000 		.4byte	.LFB183
 3686 0034 02000000 		.4byte	.LFE183-.LFB183
 3687 0038 00000000 		.4byte	.LFB184
 3688 003c 2C000000 		.4byte	.LFE184-.LFB184
 3689 0040 00000000 		.4byte	.LFB185
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 156


 3690 0044 48000000 		.4byte	.LFE185-.LFB185
 3691 0048 00000000 		.4byte	.LFB186
 3692 004c 1C000000 		.4byte	.LFE186-.LFB186
 3693 0050 00000000 		.4byte	.LFB187
 3694 0054 28000000 		.4byte	.LFE187-.LFB187
 3695 0058 00000000 		.4byte	.LFB176
 3696 005c 28000000 		.4byte	.LFE176-.LFB176
 3697 0060 00000000 		.4byte	.LFB177
 3698 0064 08000000 		.4byte	.LFE177-.LFB177
 3699 0068 00000000 		.4byte	.LFB179
 3700 006c 5C000000 		.4byte	.LFE179-.LFB179
 3701 0070 00000000 		.4byte	0
 3702 0074 00000000 		.4byte	0
 3703              		.section	.debug_ranges,"",%progbits
 3704              	.Ldebug_ranges0:
 3705 0000 00000000 		.4byte	.LFB178
 3706 0004 60000000 		.4byte	.LFE178
 3707 0008 00000000 		.4byte	.LFB180
 3708 000c 24000000 		.4byte	.LFE180
 3709 0010 00000000 		.4byte	.LFB181
 3710 0014 28000000 		.4byte	.LFE181
 3711 0018 00000000 		.4byte	.LFB182
 3712 001c 02000000 		.4byte	.LFE182
 3713 0020 00000000 		.4byte	.LFB183
 3714 0024 02000000 		.4byte	.LFE183
 3715 0028 00000000 		.4byte	.LFB184
 3716 002c 2C000000 		.4byte	.LFE184
 3717 0030 00000000 		.4byte	.LFB185
 3718 0034 48000000 		.4byte	.LFE185
 3719 0038 00000000 		.4byte	.LFB186
 3720 003c 1C000000 		.4byte	.LFE186
 3721 0040 00000000 		.4byte	.LFB187
 3722 0044 28000000 		.4byte	.LFE187
 3723 0048 00000000 		.4byte	.LFB176
 3724 004c 28000000 		.4byte	.LFE176
 3725 0050 00000000 		.4byte	.LFB177
 3726 0054 08000000 		.4byte	.LFE177
 3727 0058 00000000 		.4byte	.LFB179
 3728 005c 5C000000 		.4byte	.LFE179
 3729 0060 00000000 		.4byte	0
 3730 0064 00000000 		.4byte	0
 3731              		.section	.debug_line,"",%progbits
 3732              	.Ldebug_line0:
 3733 0000 A6030000 		.section	.debug_str,"MS",%progbits,1
 3733      02005D02 
 3733      00000201 
 3733      FB0E0D00 
 3733      01010101 
 3734              	.LASF164:
 3735 0000 43795F53 		.ascii	"Cy_SAR_SetChanMask\000"
 3735      41525F53 
 3735      65744368 
 3735      616E4D61 
 3735      736B00
 3736              	.LASF75:
 3737 0013 4156475F 		.ascii	"AVG_STAT\000"
 3737      53544154 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 157


 3737      00
 3738              	.LASF180:
 3739 001c 6368616E 		.ascii	"chanCount\000"
 3739      436F756E 
 3739      7400
 3740              	.LASF127:
 3741 0026 73617449 		.ascii	"satIntrMask\000"
 3741      6E74724D 
 3741      61736B00 
 3742              	.LASF77:
 3743 0032 4D55585F 		.ascii	"MUX_SWITCH0\000"
 3743      53574954 
 3743      43483000 
 3744              	.LASF2:
 3745 003e 7369676E 		.ascii	"signed char\000"
 3745      65642063 
 3745      68617200 
 3746              	.LASF5:
 3747 004a 5F5F7569 		.ascii	"__uint8_t\000"
 3747      6E74385F 
 3747      7400
 3748              	.LASF137:
 3749 0054 43595F53 		.ascii	"CY_SYSCLK_TIMEOUT\000"
 3749      5953434C 
 3749      4B5F5449 
 3749      4D454F55 
 3749      5400
 3750              	.LASF105:
 3751 0066 43595F53 		.ascii	"CY_SAR_SWITCH_OPEN\000"
 3751      41525F53 
 3751      57495443 
 3751      485F4F50 
 3751      454E00
 3752              	.LASF195:
 3753 0079 43795F53 		.ascii	"Cy_SAR_DeInit\000"
 3753      41525F44 
 3753      65496E69 
 3753      7400
 3754              	.LASF173:
 3755 0087 4144435F 		.ascii	"ADC_IRQ_Enable\000"
 3755      4952515F 
 3755      456E6162 
 3755      6C6500
 3756              	.LASF184:
 3757 0096 4144435F 		.ascii	"ADC_Init\000"
 3757      496E6974 
 3757      00
 3758              	.LASF14:
 3759 009f 434C4F43 		.ascii	"CLOCK_CTL\000"
 3759      4B5F4354 
 3759      4C00
 3760              	.LASF163:
 3761 00a9 43795F53 		.ascii	"Cy_SAR_SetInterruptMask\000"
 3761      41525F53 
 3761      6574496E 
 3761      74657272 
 3761      7570744D 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 158


 3762              	.LASF56:
 3763 00c1 494E5452 		.ascii	"INTR\000"
 3763      00
 3764              	.LASF193:
 3765 00c6 4144435F 		.ascii	"ADC_currentConfig\000"
 3765      63757272 
 3765      656E7443 
 3765      6F6E6669 
 3765      6700
 3766              	.LASF175:
 3767 00d8 4144435F 		.ascii	"ADC_SetEosMask\000"
 3767      53657445 
 3767      6F734D61 
 3767      736B00
 3768              	.LASF9:
 3769 00e7 6C6F6E67 		.ascii	"long long unsigned int\000"
 3769      206C6F6E 
 3769      6720756E 
 3769      7369676E 
 3769      65642069 
 3770              	.LASF115:
 3771 00fe 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 3771      41525F49 
 3771      4E54525F 
 3771      454F535F 
 3771      4D41534B 
 3772              	.LASF160:
 3773 0113 4144435F 		.ascii	"ADC_intSarClock_SetDivider\000"
 3773      696E7453 
 3773      6172436C 
 3773      6F636B5F 
 3773      53657444 
 3774              	.LASF143:
 3775 012e 43595F53 		.ascii	"CY_SYSCLK_DIV_24_5_BIT\000"
 3775      5953434C 
 3775      4B5F4449 
 3775      565F3234 
 3775      5F355F42 
 3776              	.LASF138:
 3777 0145 43595F53 		.ascii	"CY_SYSCLK_INVALID_STATE\000"
 3777      5953434C 
 3777      4B5F494E 
 3777      56414C49 
 3777      445F5354 
 3778              	.LASF62:
 3779 015d 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 3779      52415445 
 3779      5F494E54 
 3779      525F4D41 
 3779      534B00
 3780              	.LASF169:
 3781 0170 4144435F 		.ascii	"ADC_StartConvert\000"
 3781      53746172 
 3781      74436F6E 
 3781      76657274 
 3781      00
 3782              	.LASF199:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 159


 3783 0181 43795F53 		.ascii	"Cy_SAR_IsEndConversion\000"
 3783      41525F49 
 3783      73456E64 
 3783      436F6E76 
 3783      65727369 
 3784              	.LASF84:
 3785 0198 414E415F 		.ascii	"ANA_TRIM0\000"
 3785      5452494D 
 3785      3000
 3786              	.LASF85:
 3787 01a2 414E415F 		.ascii	"ANA_TRIM1\000"
 3787      5452494D 
 3787      3100
 3788              	.LASF134:
 3789 01ac 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 3789      74635F73 
 3789      61725F63 
 3789      6F6E6669 
 3789      675F7400 
 3790              	.LASF8:
 3791 01c0 6C6F6E67 		.ascii	"long long int\000"
 3791      206C6F6E 
 3791      6720696E 
 3791      7400
 3792              	.LASF166:
 3793 01ce 4144435F 		.ascii	"ADC_Enable\000"
 3793      456E6162 
 3793      6C6500
 3794              	.LASF113:
 3795 01d9 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 3795      6E5F7361 
 3795      725F7261 
 3795      6E67655F 
 3795      64657465 
 3796              	.LASF202:
 3797 01fc 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC.c\000"
 3797      72617465 
 3797      645F536F 
 3797      75726365 
 3797      5C50536F 
 3798              	.LASF149:
 3799 0219 636C6B44 		.ascii	"clkDivider\000"
 3799      69766964 
 3799      657200
 3800              	.LASF83:
 3801 0224 52455345 		.ascii	"RESERVED10\000"
 3801      52564544 
 3801      313000
 3802              	.LASF128:
 3803 022f 72616E67 		.ascii	"rangeIntrMask\000"
 3803      65496E74 
 3803      724D6173 
 3803      6B00
 3804              	.LASF186:
 3805 023d 4144435F 		.ascii	"ADC_Start\000"
 3805      53746172 
 3805      7400
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 160


 3806              	.LASF187:
 3807 0247 4144435F 		.ascii	"ADC_StartEx\000"
 3807      53746172 
 3807      74457800 
 3808              	.LASF109:
 3809 0253 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 3809      41525F52 
 3809      414E4745 
 3809      5F434F4E 
 3809      445F4245 
 3810              	.LASF4:
 3811 026b 6C6F6E67 		.ascii	"long int\000"
 3811      20696E74 
 3811      00
 3812              	.LASF82:
 3813 0274 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 3813      53574954 
 3813      43485F53 
 3813      54415455 
 3813      5300
 3814              	.LASF174:
 3815 0286 4144435F 		.ascii	"ADC_IRQ_Disable\000"
 3815      4952515F 
 3815      44697361 
 3815      626C6500 
 3816              	.LASF68:
 3817 0296 494E5452 		.ascii	"INTR_CAUSE\000"
 3817      5F434155 
 3817      534500
 3818              	.LASF72:
 3819 02a1 494E4A5F 		.ascii	"INJ_RESULT\000"
 3819      52455355 
 3819      4C5400
 3820              	.LASF65:
 3821 02ac 52414E47 		.ascii	"RANGE_INTR_SET\000"
 3821      455F494E 
 3821      54525F53 
 3821      455400
 3822              	.LASF136:
 3823 02bb 43595F53 		.ascii	"CY_SYSCLK_BAD_PARAM\000"
 3823      5953434C 
 3823      4B5F4241 
 3823      445F5041 
 3823      52414D00 
 3824              	.LASF155:
 3825 02cf 72657476 		.ascii	"retval\000"
 3825      616C00
 3826              	.LASF111:
 3827 02d6 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 3827      41525F52 
 3827      414E4745 
 3827      5F434F4E 
 3827      445F4142 
 3828              	.LASF92:
 3829 02ee 646F7562 		.ascii	"double\000"
 3829      6C6500
 3830              	.LASF177:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 161


 3831 02f5 6465496E 		.ascii	"deInitRouting\000"
 3831      6974526F 
 3831      7574696E 
 3831      6700
 3832              	.LASF78:
 3833 0303 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 3833      53574954 
 3833      43485F43 
 3833      4C454152 
 3833      3000
 3834              	.LASF150:
 3835 0315 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 3835      434F4E46 
 3835      49475F53 
 3835      54525543 
 3835      5400
 3836              	.LASF32:
 3837 0327 4449565F 		.ascii	"DIV_24_5_CTL\000"
 3837      32345F35 
 3837      5F43544C 
 3837      00
 3838              	.LASF28:
 3839 0334 4449565F 		.ascii	"DIV_CMD\000"
 3839      434D4400 
 3840              	.LASF120:
 3841 033c 73616D70 		.ascii	"sampleTime01\000"
 3841      6C655469 
 3841      6D653031 
 3841      00
 3842              	.LASF93:
 3843 0349 75696E74 		.ascii	"uint32\000"
 3843      333200
 3844              	.LASF101:
 3845 0350 63795F65 		.ascii	"cy_en_sar_start_convert_sel_t\000"
 3845      6E5F7361 
 3845      725F7374 
 3845      6172745F 
 3845      636F6E76 
 3846              	.LASF25:
 3847 036e 41545431 		.ascii	"ATT1\000"
 3847      00
 3848              	.LASF6:
 3849 0373 5F5F7569 		.ascii	"__uint32_t\000"
 3849      6E743332 
 3849      5F7400
 3850              	.LASF176:
 3851 037e 6D61736B 		.ascii	"mask\000"
 3851      00
 3852              	.LASF147:
 3853 0383 6877436F 		.ascii	"hwConfigStc\000"
 3853      6E666967 
 3853      53746300 
 3854              	.LASF43:
 3855 038f 53414D50 		.ascii	"SAMPLE_TIME01\000"
 3855      4C455F54 
 3855      494D4530 
 3855      3100
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 162


 3856              	.LASF191:
 3857 039d 4144435F 		.ascii	"ADC_initVar\000"
 3857      696E6974 
 3857      56617200 
 3858              	.LASF60:
 3859 03a9 53415455 		.ascii	"SATURATE_INTR\000"
 3859      52415445 
 3859      5F494E54 
 3859      5200
 3860              	.LASF49:
 3861 03b7 4348414E 		.ascii	"CHAN_CONFIG\000"
 3861      5F434F4E 
 3861      46494700 
 3862              	.LASF181:
 3863 03c3 7265744D 		.ascii	"retMode\000"
 3863      6F646500 
 3864              	.LASF190:
 3865 03cb 72657374 		.ascii	"restart\000"
 3865      61727400 
 3866              	.LASF196:
 3867 03d3 43795F53 		.ascii	"Cy_SAR_Init\000"
 3867      41525F49 
 3867      6E697400 
 3868              	.LASF10:
 3869 03df 756E7369 		.ascii	"unsigned int\000"
 3869      676E6564 
 3869      20696E74 
 3869      00
 3870              	.LASF140:
 3871 03ec 43595F53 		.ascii	"CY_SYSCLK_DIV_8_BIT\000"
 3871      5953434C 
 3871      4B5F4449 
 3871      565F385F 
 3871      42495400 
 3872              	.LASF13:
 3873 0400 73697A65 		.ascii	"sizetype\000"
 3873      74797065 
 3873      00
 3874              	.LASF185:
 3875 0409 636F6E66 		.ascii	"configNum\000"
 3875      69674E75 
 3875      6D00
 3876              	.LASF89:
 3877 0413 63686172 		.ascii	"char_t\000"
 3877      5F7400
 3878              	.LASF7:
 3879 041a 6C6F6E67 		.ascii	"long unsigned int\000"
 3879      20756E73 
 3879      69676E65 
 3879      6420696E 
 3879      7400
 3880              	.LASF99:
 3881 042c 43595F53 		.ascii	"CY_SAR_START_CONVERT_SINGLE_SHOT\000"
 3881      41525F53 
 3881      54415254 
 3881      5F434F4E 
 3881      56455254 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 163


 3882              	.LASF54:
 3883 044d 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 3883      5F574F52 
 3883      4B5F4E45 
 3883      5756414C 
 3883      554500
 3884              	.LASF165:
 3885 0460 656E6162 		.ascii	"enableMask\000"
 3885      6C654D61 
 3885      736B00
 3886              	.LASF80:
 3887 046b 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 3887      53574954 
 3887      43485F44 
 3887      535F4354 
 3887      524C00
 3888              	.LASF58:
 3889 047e 494E5452 		.ascii	"INTR_MASK\000"
 3889      5F4D4153 
 3889      4B00
 3890              	.LASF144:
 3891 0488 63795F65 		.ascii	"cy_en_divider_types_t\000"
 3891      6E5F6469 
 3891      76696465 
 3891      725F7479 
 3891      7065735F 
 3892              	.LASF135:
 3893 049e 43595F53 		.ascii	"CY_SYSCLK_SUCCESS\000"
 3893      5953434C 
 3893      4B5F5355 
 3893      43434553 
 3893      5300
 3894              	.LASF3:
 3895 04b0 73686F72 		.ascii	"short unsigned int\000"
 3895      7420756E 
 3895      7369676E 
 3895      65642069 
 3895      6E7400
 3896              	.LASF17:
 3897 04c3 54494D45 		.ascii	"TIMEOUT_CTL\000"
 3897      4F55545F 
 3897      43544C00 
 3898              	.LASF22:
 3899 04cf 41444452 		.ascii	"ADDR0\000"
 3899      3000
 3900              	.LASF24:
 3901 04d5 41444452 		.ascii	"ADDR1\000"
 3901      3100
 3902              	.LASF122:
 3903 04db 72616E67 		.ascii	"rangeThres\000"
 3903      65546872 
 3903      657300
 3904              	.LASF151:
 3905 04e6 64697669 		.ascii	"dividerType\000"
 3905      64657254 
 3905      79706500 
 3906              	.LASF64:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 164


 3907 04f2 52414E47 		.ascii	"RANGE_INTR\000"
 3907      455F494E 
 3907      545200
 3908              	.LASF188:
 3909 04fd 75736572 		.ascii	"userIsr\000"
 3909      49737200 
 3910              	.LASF52:
 3911 0505 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 3911      5F574F52 
 3911      4B5F5550 
 3911      44415445 
 3911      4400
 3912              	.LASF142:
 3913 0517 43595F53 		.ascii	"CY_SYSCLK_DIV_16_5_BIT\000"
 3913      5953434C 
 3913      4B5F4449 
 3913      565F3136 
 3913      5F355F42 
 3914              	.LASF146:
 3915 052e 6E756D43 		.ascii	"numChannels\000"
 3915      68616E6E 
 3915      656C7300 
 3916              	.LASF125:
 3917 053a 6368616E 		.ascii	"chanConfig\000"
 3917      436F6E66 
 3917      696700
 3918              	.LASF34:
 3919 0545 54525F43 		.ascii	"TR_CMD\000"
 3919      4D4400
 3920              	.LASF107:
 3921 054c 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_DISABLE\000"
 3921      41525F53 
 3921      57495443 
 3921      485F5345 
 3921      515F4354 
 3922              	.LASF159:
 3923 056b 43795F53 		.ascii	"Cy_SAR_Disable\000"
 3923      41525F44 
 3923      69736162 
 3923      6C6500
 3924              	.LASF16:
 3925 057a 534C5F43 		.ascii	"SL_CTL\000"
 3925      544C00
 3926              	.LASF57:
 3927 0581 494E5452 		.ascii	"INTR_SET\000"
 3927      5F534554 
 3927      00
 3928              	.LASF158:
 3929 058a 62617365 		.ascii	"base\000"
 3929      00
 3930              	.LASF112:
 3931 058f 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 3931      41525F52 
 3931      414E4745 
 3931      5F434F4E 
 3931      445F4F55 
 3932              	.LASF170:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 165


 3933 05a9 4144435F 		.ascii	"ADC_SetConvertMode\000"
 3933      53657443 
 3933      6F6E7665 
 3933      72744D6F 
 3933      646500
 3934              	.LASF114:
 3935 05bc 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 3935      41525F49 
 3935      4E54525F 
 3935      4D41534B 
 3935      5F4E4F4E 
 3936              	.LASF70:
 3937 05d2 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 3937      4348414E 
 3937      5F434F4E 
 3937      46494700 
 3938              	.LASF148:
 3939 05e2 6D697363 		.ascii	"miscConfig\000"
 3939      436F6E66 
 3939      696700
 3940              	.LASF51:
 3941 05ed 4348414E 		.ascii	"CHAN_RESULT\000"
 3941      5F524553 
 3941      554C5400 
 3942              	.LASF121:
 3943 05f9 73616D70 		.ascii	"sampleTime23\000"
 3943      6C655469 
 3943      6D653233 
 3943      00
 3944              	.LASF36:
 3945 0606 54525F47 		.ascii	"TR_GR\000"
 3945      5200
 3946              	.LASF204:
 3947 060c 4144435F 		.ascii	"ADC_IsEndConversion\000"
 3947      4973456E 
 3947      64436F6E 
 3947      76657273 
 3947      696F6E00 
 3948              	.LASF42:
 3949 0620 53414D50 		.ascii	"SAMPLE_CTRL\000"
 3949      4C455F43 
 3949      54524C00 
 3950              	.LASF45:
 3951 062c 52414E47 		.ascii	"RANGE_THRES\000"
 3951      455F5448 
 3951      52455300 
 3952              	.LASF168:
 3953 0638 4144435F 		.ascii	"ADC_InitConfig\000"
 3953      496E6974 
 3953      436F6E66 
 3953      696700
 3954              	.LASF47:
 3955 0647 4348414E 		.ascii	"CHAN_EN\000"
 3955      5F454E00 
 3956              	.LASF44:
 3957 064f 53414D50 		.ascii	"SAMPLE_TIME23\000"
 3957      4C455F54 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 166


 3957      494D4532 
 3957      3300
 3958              	.LASF167:
 3959 065d 4144435F 		.ascii	"ADC_Stop\000"
 3959      53746F70 
 3959      00
 3960              	.LASF98:
 3961 0666 63795F65 		.ascii	"cy_en_sar_status_t\000"
 3961      6E5F7361 
 3961      725F7374 
 3961      61747573 
 3961      5F7400
 3962              	.LASF179:
 3963 0679 4144435F 		.ascii	"ADC_SetChanMask\000"
 3963      53657443 
 3963      68616E4D 
 3963      61736B00 
 3964              	.LASF31:
 3965 0689 4449565F 		.ascii	"DIV_16_5_CTL\000"
 3965      31365F35 
 3965      5F43544C 
 3965      00
 3966              	.LASF203:
 3967 0696 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 3967      73657273 
 3967      5C636F64 
 3967      79675C67 
 3967      69745C70 
 3968 06c4 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\RestEaze_BLE.cydsn\000"
 3968      54435F49 
 3968      4D552E63 
 3968      7964736E 
 3968      5C526573 
 3969              	.LASF59:
 3970 06e8 494E5452 		.ascii	"INTR_MASKED\000"
 3970      5F4D4153 
 3970      4B454400 
 3971              	.LASF91:
 3972 06f4 666C6F61 		.ascii	"float\000"
 3972      7400
 3973              	.LASF100:
 3974 06fa 43595F53 		.ascii	"CY_SAR_START_CONVERT_CONTINUOUS\000"
 3974      41525F53 
 3974      54415254 
 3974      5F434F4E 
 3974      56455254 
 3975              	.LASF18:
 3976 071a 52455345 		.ascii	"RESERVED1\000"
 3976      52564544 
 3976      3100
 3977              	.LASF33:
 3978 0724 52455345 		.ascii	"RESERVED2\000"
 3978      52564544 
 3978      3200
 3979              	.LASF35:
 3980 072e 52455345 		.ascii	"RESERVED3\000"
 3980      52564544 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 167


 3980      3300
 3981              	.LASF38:
 3982 0738 52455345 		.ascii	"RESERVED4\000"
 3982      52564544 
 3982      3400
 3983              	.LASF69:
 3984 0742 52455345 		.ascii	"RESERVED5\000"
 3984      52564544 
 3984      3500
 3985              	.LASF71:
 3986 074c 52455345 		.ascii	"RESERVED6\000"
 3986      52564544 
 3986      3600
 3987              	.LASF73:
 3988 0756 52455345 		.ascii	"RESERVED7\000"
 3988      52564544 
 3988      3700
 3989              	.LASF76:
 3990 0760 52455345 		.ascii	"RESERVED8\000"
 3990      52564544 
 3990      3800
 3991              	.LASF79:
 3992 076a 52455345 		.ascii	"RESERVED9\000"
 3992      52564544 
 3992      3900
 3993              	.LASF124:
 3994 0774 6368616E 		.ascii	"chanEn\000"
 3994      456E00
 3995              	.LASF110:
 3996 077b 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 3996      41525F52 
 3996      414E4745 
 3996      5F434F4E 
 3996      445F494E 
 3997              	.LASF103:
 3998 0794 43595F53 		.ascii	"CY_SAR_WAIT_FOR_RESULT\000"
 3998      41525F57 
 3998      4149545F 
 3998      464F525F 
 3998      52455355 
 3999              	.LASF133:
 4000 07ab 5F426F6F 		.ascii	"_Bool\000"
 4000      6C00
 4001              	.LASF61:
 4002 07b1 53415455 		.ascii	"SATURATE_INTR_SET\000"
 4002      52415445 
 4002      5F494E54 
 4002      525F5345 
 4002      5400
 4003              	.LASF116:
 4004 07c3 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 4004      41525F49 
 4004      4E54525F 
 4004      4F564552 
 4004      464C4F57 
 4005              	.LASF39:
 4006 07dd 5050555F 		.ascii	"PPU_GR\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 168


 4006      475200
 4007              	.LASF157:
 4008 07e4 64697669 		.ascii	"dividerValue\000"
 4008      64657256 
 4008      616C7565 
 4008      00
 4009              	.LASF161:
 4010 07f1 4144435F 		.ascii	"ADC_intSarClock_Enable\000"
 4010      696E7453 
 4010      6172436C 
 4010      6F636B5F 
 4010      456E6162 
 4011              	.LASF0:
 4012 0808 73686F72 		.ascii	"short int\000"
 4012      7420696E 
 4012      7400
 4013              	.LASF129:
 4014 0812 6D757853 		.ascii	"muxSwitch\000"
 4014      77697463 
 4014      6800
 4015              	.LASF126:
 4016 081c 696E7472 		.ascii	"intrMask\000"
 4016      4D61736B 
 4016      00
 4017              	.LASF106:
 4018 0825 43595F53 		.ascii	"CY_SAR_SWITCH_CLOSE\000"
 4018      41525F53 
 4018      57495443 
 4018      485F434C 
 4018      4F534500 
 4019              	.LASF88:
 4020 0839 63795F69 		.ascii	"cy_israddress\000"
 4020      73726164 
 4020      64726573 
 4020      7300
 4021              	.LASF15:
 4022 0847 52455345 		.ascii	"RESERVED\000"
 4022      52564544 
 4022      00
 4023              	.LASF95:
 4024 0850 43595F53 		.ascii	"CY_SAR_BAD_PARAM\000"
 4024      41525F42 
 4024      41445F50 
 4024      4152414D 
 4024      00
 4025              	.LASF189:
 4026 0861 4144435F 		.ascii	"ADC_SelectConfig\000"
 4026      53656C65 
 4026      6374436F 
 4026      6E666967 
 4026      00
 4027              	.LASF21:
 4028 0872 50455249 		.ascii	"PERI_TR_GR_Type\000"
 4028      5F54525F 
 4028      47525F54 
 4028      79706500 
 4029              	.LASF55:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 169


 4030 0882 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 4030      5F524553 
 4030      554C545F 
 4030      4E455756 
 4030      414C5545 
 4031              	.LASF19:
 4032 0897 50455249 		.ascii	"PERI_GR_Type\000"
 4032      5F47525F 
 4032      54797065 
 4032      00
 4033              	.LASF94:
 4034 08a4 43595F53 		.ascii	"CY_SAR_SUCCESS\000"
 4034      41525F53 
 4034      55434345 
 4034      535300
 4035              	.LASF86:
 4036 08b3 5341525F 		.ascii	"SAR_Type\000"
 4036      54797065 
 4036      00
 4037              	.LASF12:
 4038 08bc 75696E74 		.ascii	"uint32_t\000"
 4038      33325F74 
 4038      00
 4039              	.LASF200:
 4040 08c5 43795F53 		.ascii	"Cy_SAR_Enable\000"
 4040      41525F45 
 4040      6E61626C 
 4040      6500
 4041              	.LASF132:
 4042 08d3 76726566 		.ascii	"vrefMvValue\000"
 4042      4D765661 
 4042      6C756500 
 4043              	.LASF201:
 4044 08df 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4044      43313120 
 4044      352E342E 
 4044      31203230 
 4044      31363036 
 4045 0912 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 4045      20726576 
 4045      6973696F 
 4045      6E203233 
 4045      37373135 
 4046 0945 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 4046      67202D66 
 4046      66756E63 
 4046      74696F6E 
 4046      2D736563 
 4047              	.LASF87:
 4048 0971 6C6F6E67 		.ascii	"long double\000"
 4048      20646F75 
 4048      626C6500 
 4049              	.LASF90:
 4050 097d 63686172 		.ascii	"char\000"
 4050      00
 4051              	.LASF97:
 4052 0982 43595F53 		.ascii	"CY_SAR_CONVERSION_NOT_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 170


 4052      41525F43 
 4052      4F4E5645 
 4052      5253494F 
 4052      4E5F4E4F 
 4053              	.LASF172:
 4054 09a1 6D6F6465 		.ascii	"mode\000"
 4054      00
 4055              	.LASF194:
 4056 09a6 4144435F 		.ascii	"ADC_allConfigs\000"
 4056      616C6C43 
 4056      6F6E6669 
 4056      677300
 4057              	.LASF171:
 4058 09b5 636F6E66 		.ascii	"config\000"
 4058      696700
 4059              	.LASF131:
 4060 09bc 636F6E66 		.ascii	"configRouting\000"
 4060      6967526F 
 4060      7574696E 
 4060      6700
 4061              	.LASF66:
 4062 09ca 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 4062      455F494E 
 4062      54525F4D 
 4062      41534B00 
 4063              	.LASF40:
 4064 09da 50455249 		.ascii	"PERI_Type\000"
 4064      5F547970 
 4064      6500
 4065              	.LASF108:
 4066 09e4 43595F53 		.ascii	"CY_SAR_SWITCH_SEQ_CTRL_ENABLE\000"
 4066      41525F53 
 4066      57495443 
 4066      485F5345 
 4066      515F4354 
 4067              	.LASF11:
 4068 0a02 75696E74 		.ascii	"uint8_t\000"
 4068      385F7400 
 4069              	.LASF197:
 4070 0a0a 43795F53 		.ascii	"Cy_SAR_StartConvert\000"
 4070      41525F53 
 4070      74617274 
 4070      436F6E76 
 4070      65727400 
 4071              	.LASF46:
 4072 0a1e 52414E47 		.ascii	"RANGE_COND\000"
 4072      455F434F 
 4072      4E4400
 4073              	.LASF156:
 4074 0a29 43795F53 		.ascii	"Cy_SysClk_PeriphSetDivider\000"
 4074      7973436C 
 4074      6B5F5065 
 4074      72697068 
 4074      53657444 
 4075              	.LASF118:
 4076 0a44 6374726C 		.ascii	"ctrl\000"
 4076      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 171


 4077              	.LASF152:
 4078 0a49 64697669 		.ascii	"dividerNum\000"
 4078      6465724E 
 4078      756D00
 4079              	.LASF198:
 4080 0a54 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 4080      79734C69 
 4080      625F4173 
 4080      73657274 
 4080      4661696C 
 4081              	.LASF1:
 4082 0a6b 756E7369 		.ascii	"unsigned char\000"
 4082      676E6564 
 4082      20636861 
 4082      7200
 4083              	.LASF154:
 4084 0a79 43795F53 		.ascii	"Cy_SysClk_PeriphDisableDivider\000"
 4084      7973436C 
 4084      6B5F5065 
 4084      72697068 
 4084      44697361 
 4085              	.LASF23:
 4086 0a98 41545430 		.ascii	"ATT0\000"
 4086      00
 4087              	.LASF37:
 4088 0a9d 5050555F 		.ascii	"PPU_PR\000"
 4088      505200
 4089              	.LASF50:
 4090 0aa4 4348414E 		.ascii	"CHAN_WORK\000"
 4090      5F574F52 
 4090      4B00
 4091              	.LASF96:
 4092 0aae 43595F53 		.ascii	"CY_SAR_TIMEOUT\000"
 4092      41525F54 
 4092      494D454F 
 4092      555400
 4093              	.LASF81:
 4094 0abd 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 4094      53574954 
 4094      43485F53 
 4094      515F4354 
 4094      524C00
 4095              	.LASF41:
 4096 0ad0 4354524C 		.ascii	"CTRL\000"
 4096      00
 4097              	.LASF20:
 4098 0ad5 54525F4F 		.ascii	"TR_OUT_CTL\000"
 4098      55545F43 
 4098      544C00
 4099              	.LASF153:
 4100 0ae0 43795F53 		.ascii	"Cy_SysClk_PeriphEnableDivider\000"
 4100      7973436C 
 4100      6B5F5065 
 4100      72697068 
 4100      456E6162 
 4101              	.LASF26:
 4102 0afe 50455249 		.ascii	"PERI_PPU_PR_Type\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 172


 4102      5F505055 
 4102      5F50525F 
 4102      54797065 
 4102      00
 4103              	.LASF74:
 4104 0b0f 53544154 		.ascii	"STATUS\000"
 4104      555300
 4105              	.LASF123:
 4106 0b16 72616E67 		.ascii	"rangeCond\000"
 4106      65436F6E 
 4106      6400
 4107              	.LASF48:
 4108 0b20 53544152 		.ascii	"START_CTRL\000"
 4108      545F4354 
 4108      524C00
 4109              	.LASF119:
 4110 0b2b 73616D70 		.ascii	"sampleCtrl\000"
 4110      6C654374 
 4110      726C00
 4111              	.LASF53:
 4112 0b36 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 4112      5F524553 
 4112      554C545F 
 4112      55504441 
 4112      54454400 
 4113              	.LASF117:
 4114 0b4a 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 4114      41525F49 
 4114      4E54525F 
 4114      46575F43 
 4114      4F4C4C49 
 4115              	.LASF30:
 4116 0b68 4449565F 		.ascii	"DIV_16_CTL\000"
 4116      31365F43 
 4116      544C00
 4117              	.LASF27:
 4118 0b73 50455249 		.ascii	"PERI_PPU_GR_Type\000"
 4118      5F505055 
 4118      5F47525F 
 4118      54797065 
 4118      00
 4119              	.LASF29:
 4120 0b84 4449565F 		.ascii	"DIV_8_CTL\000"
 4120      385F4354 
 4120      4C00
 4121              	.LASF104:
 4122 0b8e 63795F65 		.ascii	"cy_en_sar_return_mode_t\000"
 4122      6E5F7361 
 4122      725F7265 
 4122      7475726E 
 4122      5F6D6F64 
 4123              	.LASF145:
 4124 0ba6 6368616E 		.ascii	"channelBase\000"
 4124      6E656C42 
 4124      61736500 
 4125              	.LASF102:
 4126 0bb2 43595F53 		.ascii	"CY_SAR_RETURN_STATUS\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 173


 4126      41525F52 
 4126      45545552 
 4126      4E5F5354 
 4126      41545553 
 4127              	.LASF141:
 4128 0bc7 43595F53 		.ascii	"CY_SYSCLK_DIV_16_BIT\000"
 4128      5953434C 
 4128      4B5F4449 
 4128      565F3136 
 4128      5F424954 
 4129              	.LASF182:
 4130 0bdc 656E644F 		.ascii	"endOfConversion\000"
 4130      66436F6E 
 4130      76657273 
 4130      696F6E00 
 4131              	.LASF130:
 4132 0bec 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 4132      77697463 
 4132      68537143 
 4132      74726C00 
 4133              	.LASF178:
 4134 0bfc 696E7472 		.ascii	"intrMaskReg\000"
 4134      4D61736B 
 4134      52656700 
 4135              	.LASF67:
 4136 0c08 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 4136      455F494E 
 4136      54525F4D 
 4136      41534B45 
 4136      4400
 4137              	.LASF63:
 4138 0c1a 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 4138      52415445 
 4138      5F494E54 
 4138      525F4D41 
 4138      534B4544 
 4139              	.LASF183:
 4140 0c2f 72657375 		.ascii	"result\000"
 4140      6C7400
 4141              	.LASF192:
 4142 0c36 4144435F 		.ascii	"ADC_selected\000"
 4142      73656C65 
 4142      63746564 
 4142      00
 4143              	.LASF139:
 4144 0c43 63795F65 		.ascii	"cy_en_sysclk_status_t\000"
 4144      6E5F7379 
 4144      73636C6B 
 4144      5F737461 
 4144      7475735F 
 4145              	.LASF162:
 4146 0c59 4144435F 		.ascii	"ADC_intSarClock_Disable\000"
 4146      696E7453 
 4146      6172436C 
 4146      6F636B5F 
 4146      44697361 
 4147              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\codyg\AppData\Local\Temp\cc9MShgh.s 			page 174


