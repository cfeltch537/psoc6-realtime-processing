ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"ADC_INT.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.ADC_ISR,"ax",%progbits
  21              		.align	2
  22              		.global	ADC_ISR
  23              		.thumb
  24              		.thumb_func
  25              		.type	ADC_ISR, %function
  26              	ADC_ISR:
  27              	.LFB263:
  28              		.file 1 "Generated_Source\\PSoC6\\ADC_INT.c"
   1:Generated_Source\PSoC6/ADC_INT.c **** /***************************************************************************//**
   2:Generated_Source\PSoC6/ADC_INT.c **** * \file     ADC_INT.c
   3:Generated_Source\PSoC6/ADC_INT.c **** * \version  2.10
   4:Generated_Source\PSoC6/ADC_INT.c **** *
   5:Generated_Source\PSoC6/ADC_INT.c **** * \brief
   6:Generated_Source\PSoC6/ADC_INT.c **** * Provides the initialization data structure for the ADC Component.
   7:Generated_Source\PSoC6/ADC_INT.c **** *
   8:Generated_Source\PSoC6/ADC_INT.c **** ********************************************************************************
   9:Generated_Source\PSoC6/ADC_INT.c **** * \copyright
  10:Generated_Source\PSoC6/ADC_INT.c **** * (c) 2017, Cypress Semiconductor Corporation. All rights reserved.
  11:Generated_Source\PSoC6/ADC_INT.c **** * This software, including source code, documentation and related
  12:Generated_Source\PSoC6/ADC_INT.c **** * materials ("Software"), is owned by Cypress Semiconductor
  13:Generated_Source\PSoC6/ADC_INT.c **** * Corporation ("Cypress") and is protected by and subject to worldwide
  14:Generated_Source\PSoC6/ADC_INT.c **** * patent protection (United States and foreign), United States copyright
  15:Generated_Source\PSoC6/ADC_INT.c **** * laws and international treaty provisions. Therefore, you may use this
  16:Generated_Source\PSoC6/ADC_INT.c **** * Software only as provided in the license agreement accompanying the
  17:Generated_Source\PSoC6/ADC_INT.c **** * software package from which you obtained this Software ("EULA").
  18:Generated_Source\PSoC6/ADC_INT.c **** * If no EULA applies, Cypress hereby grants you a personal, nonexclusive,
  19:Generated_Source\PSoC6/ADC_INT.c **** * non-transferable license to copy, modify, and compile the
  20:Generated_Source\PSoC6/ADC_INT.c **** * Software source code solely for use in connection with Cypress's
  21:Generated_Source\PSoC6/ADC_INT.c **** * integrated circuit products. Any reproduction, modification, translation,
  22:Generated_Source\PSoC6/ADC_INT.c **** * compilation, or representation of this Software except as specified
  23:Generated_Source\PSoC6/ADC_INT.c **** * above is prohibited without the express written permission of Cypress.
  24:Generated_Source\PSoC6/ADC_INT.c **** * Disclaimer: THIS SOFTWARE IS PROVIDED AS-IS, WITH NO
  25:Generated_Source\PSoC6/ADC_INT.c **** * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING,
  26:Generated_Source\PSoC6/ADC_INT.c **** * BUT NOT LIMITED TO, NONINFRINGEMENT, IMPLIED
  27:Generated_Source\PSoC6/ADC_INT.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  28:Generated_Source\PSoC6/ADC_INT.c **** * PARTICULAR PURPOSE. Cypress reserves the right to make
  29:Generated_Source\PSoC6/ADC_INT.c **** * changes to the Software without notice. Cypress does not assume any
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 2


  30:Generated_Source\PSoC6/ADC_INT.c **** * liability arising out of the application or use of the Software or any
  31:Generated_Source\PSoC6/ADC_INT.c **** * product or circuit described in the Software. Cypress does not
  32:Generated_Source\PSoC6/ADC_INT.c **** * authorize its products for use in any products where a malfunction or
  33:Generated_Source\PSoC6/ADC_INT.c **** * failure of the Cypress product may reasonably be expected to result in
  34:Generated_Source\PSoC6/ADC_INT.c **** * significant property damage, injury or death ("High Risk Product"). By
  35:Generated_Source\PSoC6/ADC_INT.c **** * including Cypress's product in a High Risk Product, the manufacturer
  36:Generated_Source\PSoC6/ADC_INT.c **** * of such system or application assumes all risk of such use and in doing
  37:Generated_Source\PSoC6/ADC_INT.c **** * so agrees to indemnify Cypress against all liability.
  38:Generated_Source\PSoC6/ADC_INT.c **** *******************************************************************************/
  39:Generated_Source\PSoC6/ADC_INT.c **** #include "ADC.h"
  40:Generated_Source\PSoC6/ADC_INT.c **** #include "cyapicallbacks.h"
  41:Generated_Source\PSoC6/ADC_INT.c **** 
  42:Generated_Source\PSoC6/ADC_INT.c **** /******************************************************************************
  43:Generated_Source\PSoC6/ADC_INT.c **** * Custom Declarations and Variables
  44:Generated_Source\PSoC6/ADC_INT.c **** * - add user include files, prototypes and variables between the following
  45:Generated_Source\PSoC6/ADC_INT.c **** *   #START and #END tags
  46:Generated_Source\PSoC6/ADC_INT.c **** ******************************************************************************/
  47:Generated_Source\PSoC6/ADC_INT.c **** /* `#START ADC_SYS_VAR`  */
  48:Generated_Source\PSoC6/ADC_INT.c **** 
  49:Generated_Source\PSoC6/ADC_INT.c **** /* `#END`  */
  50:Generated_Source\PSoC6/ADC_INT.c **** 
  51:Generated_Source\PSoC6/ADC_INT.c **** /******************************************************************************
  52:Generated_Source\PSoC6/ADC_INT.c **** * Function Name: ADC_ISR
  53:Generated_Source\PSoC6/ADC_INT.c **** *******************************************************************************
  54:Generated_Source\PSoC6/ADC_INT.c **** *
  55:Generated_Source\PSoC6/ADC_INT.c **** * \brief Handle Interrupt Service Routine.
  56:Generated_Source\PSoC6/ADC_INT.c **** *
  57:Generated_Source\PSoC6/ADC_INT.c **** * \param None
  58:Generated_Source\PSoC6/ADC_INT.c **** *
  59:Generated_Source\PSoC6/ADC_INT.c **** * \return None
  60:Generated_Source\PSoC6/ADC_INT.c **** *
  61:Generated_Source\PSoC6/ADC_INT.c **** * \sideeffect None
  62:Generated_Source\PSoC6/ADC_INT.c **** *
  63:Generated_Source\PSoC6/ADC_INT.c **** ******************************************************************************/
  64:Generated_Source\PSoC6/ADC_INT.c **** void ADC_ISR(void)
  65:Generated_Source\PSoC6/ADC_INT.c **** {
  29              		.loc 1 65 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37              	.LVL0:
  38              	.LBB8:
  39              	.LBB9:
  40              		.file 2 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
   1:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************************************************//**
   2:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \file cy_sar.h
   3:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \version 1.10
   4:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   5:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Header file for the SAR driver.
   6:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
   7:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ********************************************************************************
   8:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \copyright
   9:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Copyright 2017-2018, Cypress Semiconductor Corporation. All rights reserved.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 3


  10:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * You may use this file only in accordance with the license, terms, conditions,
  11:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * disclaimers, and limitations in the end user license agreement accompanying
  12:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the software package with which this file was provided.
  13:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
  14:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
  15:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**
  16:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar SAR ADC Subsystem (SAR)
  17:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
  18:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver configures and controls the SAR ADC subsystem block.
  19:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  20:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR ADC subsystem is comprised of:
  21:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a 12-bit SAR converter (SARADC)
  22:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an embedded reference block (SARREF)
  23:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a mux (\ref group_sar_sarmux "SARMUX") at the inputs of the converter
  24:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a sequence controller (\ref group_sar_sarmux "SARSEQ") that enables multi-channel acquisition
  25:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       in a round robin fashion, without CPU intervention, to maximize scan rates.
  26:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  27:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_block_diagram.png
  28:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  29:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level features of the subsystem are:
  30:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - maximum sample rate of 1 Msps
  31:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Sixteen individually configurable channels (depends on device routing capabilities)
  32:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - per channel selectable
  33:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - single-ended or differential input mode
  34:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - input from external pin (8 channels in single-ended mode or 4 channels in differential mo
  35:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         or from internal signals (AMUXBUS, CTB, Die Temperature Sensor)
  36:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - choose one of four programmable acquisition times
  37:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - averaging and accumulation
  38:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - scan can be triggered by firmware or hardware in single shot or continuous mode
  39:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - hardware averaging from 2 to 256 samples
  40:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - selectable voltage references
  41:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - internal VDDA and VDDA/2 references
  42:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - buffered 1.2 V bandgap reference from \ref group_sysanalog "AREF"
  43:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       - external reference from dedicated pin
  44:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Interrupt generation
  45:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  46:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_usage Usage
  47:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  48:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The high level steps to use this driver are:
  49:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  50:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_initialization
  51:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_trigger_conversions
  52:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_handle_interrupts
  53:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   -# \ref group_sar_retrieve_result
  54:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  55:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_initialization Initialization and Enable
  56:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  57:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To configure the SAR subsystem, call \ref Cy_SAR_Init. Pass in a pointer to the \ref SAR_Type
  58:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * structure for the base hardware register address and pass in the configuration structure,
  59:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref cy_stc_sar_config_t.
  60:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  61:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * After initialization, call \ref Cy_SAR_Enable to enable the hardware.
  62:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  63:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Here is guidance on how to set the data fields of the configuration structure:
  64:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  65:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_ctrl uint32_t ctrl
  66:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 4


  67:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field specifies configurations that apply to all channels such as the Vref
  68:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * source or the negative terminal selection for all single-ended channels.
  69:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_ctrl_" and "OR" them t
  70:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_pwr_ctrl_vref_t
  71:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_vref_sel_t
  72:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_bypass_cap_t
  73:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_neg_sel_t
  74:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_hw_ctrl_negvref_t
  75:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_delay_t
  76:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_comp_pwr_t
  77:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarmux_deep_sleep_t
  78:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_ctrl_sarseq_routing_switches_t
  79:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  80:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAR_CTRL
  81:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  82:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleCtrl uint32_t sampleCtrl
  83:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  84:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures sampling details that apply to all channels.
  85:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_sample_" and "OR" them
  86:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_result_align_t
  87:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_single_ended_format_t
  88:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_differential_format_t
  89:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_cnt_t
  90:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_avg_mode_t
  91:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_sample_ctrl_trigger_mode_t
  92:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  93:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_CTRL
  94:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  95:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime01 uint32_t sampleTime01
  96:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  97:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 0 and 1 in ADC clock cycles.
  98:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
  99:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR has four programmable 10-bit aperture times that are configured using two data fields,
 100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime01 and
 101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
 102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Ten bits allow for a range of 0 to 1023 cycles, however 0 and 1 are invalid.
 103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The minimum aperture time is 167 ns. With an 18 MHz ADC clock, this is
 104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to 3 cycles or a value of 4 in this field. The actual aperture time is one cycle less than
 105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the value stored in this field.
 106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME01
 110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_sampleTime23 uint32_t sampleTime23
 112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the value for sample times 2 and 3 in ADC clock cycles.
 114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_sample_time_shift_t.
 115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SAMPLE_TIME23
 117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeThres uint32_t rangeThres
 119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the upper and lower thresholds for the range interrupt.
 121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These thresholds apply on a global level for all channels with range detection enabled.
 122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample values
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 5


 124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * compared to two programmable thresholds without CPU involvement.
 125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is done after averaging, alignment, and sign extension (if applicable). In other 
 126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * threshold values need to have the same data format as the result data.
 127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The values are interpreted as signed or unsigned according to each channel's configuration.
 128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the shifts defined in \ref cy_en_sar_range_thres_shift_t.
 130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_SetLowLimit and \ref Cy_SAR_SetHighLimit provide run-time configurability of thes
 132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_RANGE_THRES
 134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeCond cy_en_sar_range_detect_condition_t rangeCond
 136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures the condition (below, inside, outside, or above) that will trigger
 138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the range interrupt. Select a value from the \ref cy_en_sar_range_detect_condition_t enum.
 139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanEn uint32_t chanEn
 141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will be scanned.
 143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. Bit 0 enables channel 0, bit 1 enables channel 1,
 144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * bit 2 enables channel 2, and so on.
 145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_chanConfig uint32_t chanConfig[16]
 147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each channel has its own channel configuration register.
 149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel configuration specifies which pin/signal is connected to that channel
 150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and how the channel is sampled.
 151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select a value from each of the following enums that begin with "cy_en_sar_chan_config_" and "OR"
 153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_input_mode_t
 155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_pin_addr_t
 156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_pos_port_addr_t
 157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_avg_en_t
 158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_sample_time_t
 159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_pin_addr_t
 160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - \ref cy_en_sar_chan_config_neg_port_addr_t
 161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Some important considerations are:
 163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - The POS_PORT_ADDR and POS_PIN_ADDR bit fields are used by the SARSEQ to select
 164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the connection to the positive terminal (Vplus) of the ADC for each channel.
 165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is an unpaired differential input (\ref CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED), 
 166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   NEG_PORT_ADDR and NEG_PIN_ADDR are used by the SARSEQ to select the connection
 167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   to the negative terminal (Vminus) of the ADC.
 168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - When the channel is a differential input pair (\ref CY_SAR_CHAN_DIFFERENTIAL_PAIRED), the NEG
 169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   For differential input pairs, only the pin for the positive terminal needs to be
 170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   specified and this pin must be even. For example, Pin 0 (positive terminal) and Pin 1 (negative
 171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   are a pair. Pin 2 (positive terminal) and Pin 3 (negative terminal) are a pair.
 172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is disabled (\ref cy_en_sar_ctrl_sarseq_routing_switches_t) or
 174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * it is not controlling any switches (\ref group_sar_init_struct_muxSwitchSqCtrl = 0), the port and
 175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are ignored. This is possible when there is only one channel to scan.
 176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CHAN_CONFIG
 178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_intrMask uint32_t intrMask
 180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 6


 181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which interrupt events (end of scan, overflow, or firmware collision) will 
 182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Select one or more values from the \ref cy_en_sar_intr_mask_t enum and "OR" them
 184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * together.
 185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_INTR_MASK
 187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_satIntrMask uint32_t satIntrMask
 189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a saturation interrupt.
 191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ has a saturation detect that is always applied to every conversion.
 193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This feature detects whether a channel's sample value is equal to the minimum or maximum values.
 194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This allows the firmware to take action, for example, discard the result, when the SARADC saturat
 195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample value is tested right after conversion, that is, before averaging. This means that it
 196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can happen that the interrupt is set while the averaged result in the data register is not
 197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * equal to the minimum or maximum.
 198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables saturation detection for all channels.
 200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_rangeIntrMask uint32_t rangeIntrMask
 202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field configures which channels will cause a range detection interrupt.
 204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit corresponds to a channel. A value of 0 disables range detection for all channels.
 205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitch uint32_t muxSwitch
 207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field is the firmware control of the SARMUX switches.
 209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_fw_ctrl_t enum and "OR" them together.
 211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the SARSEQ is enabled, the SARMUX switches that will be used must
 212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * also be closed using this firmware control.
 213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SWITCH
 215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware control can be changed at run-time by calling \ref Cy_SAR_SetAnalogSwitch with \ref CY_S
 217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the desired switch states.
 218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_muxSwitchSqCtrl uint32_t muxSwitchSqCtrl
 220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field enables or disables SARSEQ control of the SARMUX switches.
 222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To disable control of all switches, set this field to 0. To disable the SARSEQ all together,
 223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * use \ref CY_SAR_SARSEQ_SWITCH_DISABLE when configuring the \ref group_sar_init_struct_ctrl regist
 224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use one or more values from the \ref cy_en_sar_mux_switch_sq_ctrl_t enum and "OR" them together.
 226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_MUX_SQ_CTRL
 228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * SARSEQ control can be changed at run-time by calling \ref Cy_SAR_SetSwitchSarSeqCtrl.
 230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_configRouting bool configRouting
 232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If true, the \ref group_sar_init_struct_muxSwitch and \ref group_sar_init_struct_muxSwitchSqCtrl 
 234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * will be used. If false, the fields will be ignored.
 235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_init_struct_vrefMvValue uint32_t vrefMvValue
 237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 7


 238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This field sets the value of the reference voltage in millivolts used. This value
 239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is used for converting counts to volts in the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mV
 240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions.
 241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_trigger_conversions Triggering Conversions
 243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR subsystem has the following modes for triggering a conversion:
 245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Mode</th>
 248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description</th>
 249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Usage</th>
 250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Continuous</td>
 253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>After completing a scan, the
 254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     SARSEQ will immediately start the next scan. That is, the SARSEQ will always be BUSY.
 255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     As a result all other triggers, firmware or hardware, are essentially ignored.
 256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *  </td>
 257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enter this mode, call \ref Cy_SAR_StartConvert with \ref CY_SAR_START_CONVERT_CONTINUO
 258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To stop continuous conversions, call \ref Cy_SAR_StopConvert.
 259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Firmware single shot</td>
 263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered with a function call to \ref Cy_
 264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_START_CONVERT_SINGLE_SHOT.
 265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>
 267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     Firmware triggering is always available by calling \ref Cy_SAR_StartConvert with \ref CY_SAR_
 268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     To allow only firmware triggering, or disable
 269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     hardware triggering, set up the \ref cy_stc_sar_config_t config structure with \ref CY_SAR_TR
 270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware edge sensitive</td>
 274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A single conversion of all enabled channels is triggered on the rising edge of the hardwa
 275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     trigger signal.</td>
 276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE.</td>
 278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    <tr>
 280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Hardware level sensitive</td>
 281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Conversions are triggered continuously when the hardware trigger signal is high.</td>
 282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>To enable this mode, set up the \ref cy_stc_sar_config_t config structure with
 283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     \ref CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL.</td>
 284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *    </tr>
 285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The trigger mode can be changed during run time with \ref Cy_SAR_SetConvertMode.
 288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For the hardware trigger modes, use the \ref group_trigmux driver to route an internal or externa
 290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * signal to the SAR trigger input.
 291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When making the required \ref Cy_TrigMux_Connect calls, use the pre-defined enum, TRIG6_OUT_PASS_
 292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for the SAR trigger input.
 293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_TRIGGER
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 8


 295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_handle_interrupts Handling Interrupts
 297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR can generate interrupts on these events:
 299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - End of scan (EOS): when scanning of all enabled channels complete.
 301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Overflow: when the result register is updated before the previous result is read.
 302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - FW collision: when a new trigger is received while the SAR is still processing the previous t
 303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Saturation detection: when the channel result is equal to the minimum or maximum value.
 304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Range detection: when the channel result meets the programmed upper or lower threshold values
 305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR interrupt to the NVIC is raised any time the intersection (logic and) of the interrupt
 307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * flags and the corresponding interrupt masks are non-zero.
 308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Implement an interrupt routine and assign it to the SAR interrupt.
 310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Use the pre-defined enum, pass_interrupt_sar_IRQn, as the interrupt source for the SAR.
 311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to implement a routine to handle the interrupt.
 313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The routine gets called when any one of the SAR interrupts are triggered.
 314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When servicing an interrupt, the user must clear the interrupt so that subsequent
 315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * interrupts can be handled.
 316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
 318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following code snippet demonstrates how to configure and enable the interrupt.
 320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_CONFIG_INTR
 322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, instead of handling the interrupts, the \ref Cy_SAR_IsEndConversion function
 324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * allows for firmware polling of the end of conversion status.
 325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_retrieve_result Retrieve Channel Results
 327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Retrieve the ADC result by calling \ref Cy_SAR_GetResult16 with the desired channel.
 329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To convert the result to a voltage, pass the ADC result to \ref Cy_SAR_CountsTo_Volts, \ref Cy_SA
 330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts.
 331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_clock SAR Clock Configuration
 333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR requires a clock. Assign a clock to the SAR using the
 335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * pre-defined enum, PCLK_PASS_CLOCK_SAR, to identify the SAR subsystem.
 336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the clock divider value to achieve the desired clock rate. The SAR can support
 337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * a maximum frequency of 18 MHz.
 338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm4.c SAR_SNIPPET_CONFIGURE_CLOCK
 340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_scan_time Scan Rate
 342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The scan rate is dependent on the following:
 344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - ADC clock rate
 346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Number of channels
 347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Averaging
 348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Resolution
 349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - Acquisition times
 350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_acquisition_time Acquisition Time
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 9


 352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The acquisition time of a channel is based on which of the four global aperture times are selecte
 354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * channel. The selection is done during initialization per channel with \ref group_sar_init_struct_
 355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The four global aperture times are also set during initialization with \ref group_sar_init_struct
 356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23. Note that these global aperture times are in SAR clock c
 357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * acquisition time is 1 less than that value in the register.
 358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_acquisition_time_eqn.png
 360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_channel_sample_time Channel Sample Time
 362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The sample time for a channel is the time required to acquire the analog signal
 364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and convert it to a digital code.
 365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_channel_sample_time_eqn.png
 367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC is a 12-bit converter so Resolution = 12.
 369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_total_scan_time Total Scan Time
 371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels using one of the sequential averaging modes (\ref CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM or \r
 373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are sampled multiple times per scan. The number of samples averaged are set during initialization
 374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * with \ref group_sar_init_struct_sampleCtrl using one of the values from \ref cy_en_sar_sample_ctr
 375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channels that are not averaged or use the \ref CY_SAR_AVG_MODE_INTERLEAVED mode are only sampled 
 376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The total scan time is the sum of each channel's sample time multiplied by the samples per scan.
 378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_scan_rate_eqn.png
 380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * where N is the total number of channels in the scan.
 382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_sarmux SARMUX and SARSEQ
 384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARMUX is an analog programmable multiplexer. Its switches can be controlled by the SARSEQ or
 386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and the inputs can come from:
 387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - a dedicated port (can support 8 single-ended channels or 4 differential channels)
 388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - an internal die temperature (DieTemp) sensor
 389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - CTB output via SARBUS0/1 (if CTBs are available on the device)
 390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - AMUXBUSA/B
 391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure shows the SARMUX switches. See the device datasheet for the exact location o
 393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_switches.png
 395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the SARSEQ, the following configurations must be performed:
 397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - enable SARSEQ control of required switches (see \ref group_sar_init_struct_muxSwitchSqCtrl)
 398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - close the required switches with firmware (see \ref group_sar_init_struct_muxSwitch)
 399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   - configure the POS_PORT_ADDR and POS_PIN_ADDR, and if used, the NEG_PORT_ADDR and NEG_PIN_ADDR
 400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * While firmware can control every switch in the SARMUX, not every switch can be controlled by the 
 402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, switches outside of the SARMUX such as the AMUXBUSA/B switches or
 403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * CTB switches will require separate function calls (see \ref group_gpio "GPIO" and \ref group_ctb 
 404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ can control three switches in the \ref group_ctb "CTB" driver (see \ref Cy_CTB_EnableS
 405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * These switches need to be enabled for SARSEQ control if the CTB outputs are used as the SARMUX in
 406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following table shows the required POS_PORT_ADDR and POS_PIN_ADDR settings
 408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * for different input connections.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 10


 409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Input Connection Selection</th>
 413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PORT_ADDR</th>
 414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>POS_PIN_ADDR</th>
 415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>SARMUX dedicated port</td>
 418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX</td>
 419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0 through \ref CY_SAR_CHAN_POS_PIN_ADDR_7</td>
 420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>DieTemp sensor</td>
 423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_0</td>
 425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSA</td>
 428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>AMUXBUSB</td>
 433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_SARMUX_VIRT</td>
 434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp0 1x output</td>
 438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_2</td>
 440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>CTB0 Opamp1 1x output</td>
 443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_POS_PORT_ADDR_CTB0</td>
 444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>\ref CY_SAR_CHAN_POS_PIN_ADDR_3</td>
 445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_dietemp Input from DieTemp sensor
 449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When using the DieTemp sensor, always use single-ended mode.
 451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The temperature sensor can be routed to Vplus using the \ref CY_SAR_MUX_FW_TEMP_VPLUS switch.
 452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Connecting this switch will also enable the sensor. Set the \ref group_sar_acquisition_time "acqu
 453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be at least 1 us to meet the settling time of the temperature sensor.
 454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dietemp.png
 456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_DIETEMP
 458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_se_diff Input from SARMUX port
 460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on the SARMUX dedicated port
 462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_dedicated_port.png
 465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 11


 466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_SE_DIFF
 467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_ctb Input from CTB output visa SARBUS0/1
 469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how the two opamp outputs from the CTB
 471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to configure and enable the opamps, perform required
 473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and enable SARSEQ control of the switches contained in the CTB.
 474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_ctb.png
 476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_CTB
 478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \subsection group_sar_sarmux_amuxbus Input from other pins through AMUXBUSA/B
 480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The following figure and code snippet show how two GPIOs on any port through the AMUXBUSA and AMU
 482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are connected to the SARADC as separate single-ended channels and as a differential-pair channel.
 483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Note that separate function calls are needed to route the device pins to the SARMUX. The AMUXBUSe
 484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * are separated into multiple segments and these segments are connected/disconnected using the AMUX
 485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * registers in the HSIOM. In the following code snippet, to connect Port 1 to the SARMUX, the left 
 486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * switches of AMUX_SPLIT_CTL[1] and AMUX_SPLIT_CTL[6] need to be closed.
 487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \image html sar_sarmux_amuxbus.png
 489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_02.cydsn/main_cm4.c SNIPPET_SAR_SARMUX_AMUXBUS
 491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_low_power Low Power Support
 493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This SAR driver provides a callback function to handle power mode transitions.
 494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The \ref Cy_SAR_DeepSleepCallback function ensures that SAR conversions are stopped
 495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before Deep Sleep entry. Upon wakeup, the callback
 496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * enables the hardware and continuous conversions, if previously enabled.
 497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To trigger the callback execution, the callback must be registered before calling \ref Cy_SysPm_D
 499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_syspm driver for more information about power mode transitions and
 500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * callback registration.
 501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Recall that during configuration of the \ref group_sar_init_struct_ctrl "ctrl" field,
 503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the SARMUX can be configured to remain enabled in Deep Sleep mode.
 504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * All other blocks (SARADC, REFBUF, and SARSEQ) do not support Deep Sleep mode operation.
 505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_more_information More Information
 507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * For more information on the SAR ADC subsystem, refer to the technical reference manual (TRM).
 508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_MISRA MISRA-C Compliance]
 510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This driver has the following specific deviations:
 512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>MISRA Rule</th>
 516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Class (Required/Advisory)</th>
 517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Rule Description</th>
 518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <th>Description of Deviation(s)</th>
 519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>11.4</td>
 522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Advisory</td>
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 12


 523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>A cast should not be performed between a pointer to object type and a different pointer t
 524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>The cy_syspm driver defines the pointer to void in the \ref cy_stc_syspm_callback_params_
 525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       This SAR driver implements a Deep Sleep callback conforming to the cy_syspm driver requirem
 526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       When the callback is called, the base should point to the SAR_Type register address.
 527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \section group_sar_changelog Changelog
 532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * <table class="doxtable">
 533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr><th>Version</th><th>Changes</th><th>Reason for Change</th></tr>
 534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td rowspan="3">1.10</td>
 536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Added workaround for parts with out of range CAP_TRIM in Init API.</td>
 537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Correct CAP_TRIM is necessary achieving specified SAR ADC linearity</td>
 538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Turn off the entire hardware block only if the SARMUX is not enabled 
 541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *          for Deep Sleep operation.                
 542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     </td>
 543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td> Improvement of the \ref Cy_SAR_Sleep flow</td>
 544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Updated "Low Power Support" section to describe registering the Deep Sleep callback.
 547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *         Added parenthesis around logical AND operation in Sleep API.</td>
 548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Documentation update and clarification</td>
 549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   <tr>
 551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>1.0</td>
 552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td>Initial version</td>
 553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *     <td></td>
 554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   </tr>
 555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * </table>
 556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_macros Macros
 558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_functions Functions
 559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_basic         Initialization and Basic Functions
 561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_power         Low Power Callback
 562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_config        Run-time Configuration Functions
 563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_countsto      Counts Conversion Functions
 564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_interrupt     Interrupt Functions
 565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_switches      SARMUX Switch Control Functions
 566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_functions_helper        Useful Configuration Query Functions
 567:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
 568:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_globals Global Variables
 569:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_data_structures Data Structures
 570:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \defgroup group_sar_enums Enumerated Types
 571:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \{
 572:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_ctrl_register_enums         Control Register Enums
 573:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_ctrl_register_enums  Sample Control Register Enums
 574:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_sample_time_shift_enums     Sample Time Register Enums
 575:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_range_thres_register_enums  Range Interrupt Register Enums
 576:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_chan_config_register_enums  Channel Configuration Register Enums
 577:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_intr_mask_t_register_enums  Interrupt Mask Register Enums
 578:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       \defgroup group_sar_mux_switch_register_enums   SARMUX Switch Control Register Enums
 579:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 13


 580:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 581:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 582:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if !defined(CY_SAR_H)
 583:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_H
 584:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 585:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdint.h>
 586:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stdbool.h>
 587:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include <stddef.h>
 588:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "cy_device_headers.h"
 589:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syslib/cy_syslib.h"
 590:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #include "syspm/cy_syspm.h"
 591:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 592:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #ifndef CY_IP_MXS40PASS_SAR
 593:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     #error "The SAR driver is not supported on this device"
 594:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 595:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 596:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #if defined(__cplusplus)
 597:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern "C" {
 598:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #endif
 599:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 600:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_macros
 601:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 602:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 603:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 604:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver major version */
 605:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MAJOR        1
 606:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 607:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Driver minor version */
 608:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DRV_VERSION_MINOR        10
 609:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 610:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** SAR driver identifier */
 611:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_ID                       CY_PDL_DRV_ID(0x01u)
 612:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 613:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Maximum number of channels */
 614:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_MAX_NUM_CHANNELS         (PASS_SAR_SAR_CHANNELS)
 615:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 616:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \cond INTERNAL */
 617:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT                   (0uL)             /**< De-init value for most SAR registers
 618:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME_DEINIT       ((3uL << SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos) | (3uL << SAR_
 619:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CLEAR_ALL_SWITCHES       (0x3FFFFFFFuL)    /**< Value to clear all SARMUX switches *
 620:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_DEINIT_SQ_CTRL           (SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk \
 621:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk \
 622:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk \
 623:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk \
 624:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk \
 625:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk \
 626:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk \
 627:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk \
 628:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk \
 629:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk \
 630:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk \
 631:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk \
 632:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk \
 633:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk)
 634:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CTRL_MASK            (SAR_CTRL_PWR_CTRL_VREF_Msk \
 635:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_SEL_Msk \
 636:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_VREF_BYP_CAP_EN_Msk \
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 14


 637:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_NEG_SEL_Msk \
 638:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SAR_HW_CTRL_NEGVREF_Msk \
 639:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_DLY_Msk \
 640:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_REFBUF_EN_Msk \
 641:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_COMP_PWR_Msk \
 642:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DEEPSLEEP_ON_Msk \
 643:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_SYNC_CONFIG_Msk \
 644:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_DSI_MODE_Msk \
 645:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_SWITCH_DISABLE_Msk \
 646:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CTRL_ENABLED_Msk)
 647:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_CTRL_MASK     (SAR_SAMPLE_CTRL_LEFT_ALIGN_Msk \
 648:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Msk \
 649:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Msk \
 650:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_CNT_Msk \
 651:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_SHIFT_Msk \
 652:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_AVG_MODE_Msk \
 653:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_CONTINUOUS_Msk \
 654:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk \
 655:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_TRIGGER_LEVEL_Msk \
 656:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_DSI_SYNC_TRIGGER_Msk \
 657:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_UAB_SCAN_MODE_Msk \
 658:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_REPEAT_INVALID_Msk \
 659:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_Msk \
 660:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_SEL_EN_Msk \
 661:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_VALID_IGNORE_Msk \
 662:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_TRIGGER_OUT_EN_Msk \
 663:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_SAMPLE_CTRL_EOS_DSI_OUT_EN_Msk)
 664:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_CHAN_CONFIG_MASK     (SAR_CHAN_CONFIG_POS_PIN_ADDR_Msk \
 665:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_POS_PORT_ADDR_Msk \
 666:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk \
 667:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_AVG_EN_Msk \
 668:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Msk \
 669:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PIN_ADDR_Msk \
 670:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_PORT_ADDR_Msk \
 671:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk \
 672:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         | SAR_CHAN_CONFIG_DSI_OUT_EN_Msk)
 673:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_REG_SAMPLE_TIME_MASK     (SAR_SAMPLE_TIME01_SAMPLE_TIME0_Msk | SAR_SAMPLE_TIME01_SAM
 674:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 675:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_2US_DELAY                (2u)              /**< Delay used in Enable API function to
 676:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10V_COUNTS               (10.0F)           /**< Value of 10 in volts */
 677:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10MV_COUNTS              (10000)           /**< Value of 10 in millivolts */
 678:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_10UV_COUNTS              (10000000L)       /**< Value of 10 in microvolts */
 679:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_WRK_MAX_12BIT            (0x00001000uL)    /**< Maximum SAR work register value for 
 680:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT_MAX          (0xFFFFuL)        /**< Maximum value for the low and high r
 681:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MAX             (0x3FuL)          /**< Maximum value for CAP_TRIM */
 682:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM_MIN             (0x00uL)          /**< Maximum value for CAP_TRIM */
 683:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CAP_TRIM                 (0x0BuL)          /**< Correct cap trim value */
 684:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 685:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /**< Macros for conditions used in CY_ASSERT calls */
 686:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANNUM(chan)            ((chan) < CY_SAR_MAX_NUM_CHANNELS)
 687:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHANMASK(mask)           ((mask) < (1uL << CY_SAR_MAX_NUM_CHANNELS))
 688:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGECOND(cond)          ((cond) <= CY_SAR_RANGE_COND_OUTSIDE)
 689:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_INTRMASK(mask)           ((mask) <= (uint32_t)(CY_SAR_INTR_EOS_MASK | CY_SAR_INTR_OV
 690:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_TRIGGER(mode)            (((mode) == CY_SAR_TRIGGER_MODE_FW_ONLY) \
 691:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE) \
 692:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****                                         || ((mode) == CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL))
 693:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RETURN(mode)             (((mode) == CY_SAR_RETURN_STATUS) || ((mode) == CY_SAR_WAIT
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 15


 694:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_STARTCONVERT(mode)       (((mode) == CY_SAR_START_CONVERT_SINGLE_SHOT) || ((mode) ==
 695:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_RANGE_LIMIT(limit)       ((limit) <= CY_SAR_RANGE_LIMIT_MAX)
 696:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSELECT(select)     ((select) == CY_SAR_MUX_SWITCH0)
 697:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHMASK(mask)         ((mask) <= CY_SAR_CLEAR_ALL_SWITCHES)
 698:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SWITCHSTATE(state)       (((state) == CY_SAR_SWITCH_OPEN) || ((state) == CY_SAR_SWIT
 699:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQMASK(mask)             (((mask) & (~CY_SAR_DEINIT_SQ_CTRL)) == 0uL)
 700:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SQCTRL(ctrl)             (((ctrl) == CY_SAR_SWITCH_SEQ_CTRL_ENABLE) || ((ctrl) == CY
 701:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 702:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CTRL(value)              (((value) & (~CY_SAR_REG_CTRL_MASK)) == 0uL)
 703:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_CTRL(value)       (((value) & (~CY_SAR_REG_SAMPLE_CTRL_MASK)) == 0uL)
 704:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_SAMPLE_TIME(value)       (((value) & (~CY_SAR_REG_SAMPLE_TIME_MASK)) == 0uL)
 705:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** #define CY_SAR_CHAN_CONFIG(value)       (((value) & (~CY_SAR_REG_CHAN_CONFIG_MASK)) == 0uL)
 706:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \endcond */
 707:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 708:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_macro */
 709:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 710:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_globals
 711:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 712:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 713:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
 714:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Global Variables
 715:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
 716:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 717:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the offset for each channel.
 718:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 719:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * At initialization, channels that are single-ended, signed, and with Vneg = Vref
 720:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * have an offset of -(2^12)/2 = -2048. All other channels have an offset of 0.
 721:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The offset can be overridden using \ref Cy_SAR_SetOffset.
 722:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 723:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel offsets are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 724:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 725:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 726:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 727:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int16_t Cy_SAR_offset[CY_SAR_MAX_NUM_CHANNELS];
 728:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 729:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This array is used to calibrate the gain for each channel.
 730:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 731:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * It is set at initialization and the value depends on the SARADC resolution
 732:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * and voltage reference, 10*(2^12)/(2*Vref).
 733:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The gain can be overridden using \ref Cy_SAR_SetGain.
 734:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 735:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The channel gains are used by the \ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts, and
 736:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts functions to convert counts to voltage.
 737:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 738:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** extern volatile int32_t Cy_SAR_countsPer10Volt[CY_SAR_MAX_NUM_CHANNELS];
 739:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 740:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_globals */
 741:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 742:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_enums
 743:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 744:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 745:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 746:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /******************************************************************************
 747:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  * Enumerations
 748:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****  *****************************************************************************/
 749:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 750:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** The SAR status/error code definitions */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 16


 751:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 752:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 753:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SUCCESS    = 0x00uL,                                      /**< Success */
 754:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BAD_PARAM  = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x01uL,    /**< Invalid input parameters 
 755:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TIMEOUT    = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x02uL,    /**< A timeout occurred */
 756:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CONVERSION_NOT_COMPLETE = CY_SAR_ID | CY_PDL_STATUS_ERROR | 0x03uL,    /**< SAR conversi
 757:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_status_t;
 758:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 759:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for starting a conversion used in \ref Cy_SAR_StartConvert */
 760:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 761:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 762:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_SINGLE_SHOT = 0uL, /**< Start a single scan (one shot) from firmware */
 763:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_START_CONVERT_CONTINUOUS  = 1uL, /**< Continuously scan enabled channels and ignores all
 764:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_start_convert_sel_t;
 765:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 766:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for the return mode used in \ref Cy_SAR_IsEndConversion */
 767:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 768:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 769:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RETURN_STATUS    = 0uL,      /**< Immediately returns the conversion status. */
 770:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_WAIT_FOR_RESULT  = 1uL,    /**< Does not return a result until the conversion of all seq
 771:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_return_mode_t;
 772:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 773:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch state definitions */
 774:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 775:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 776:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_OPEN      = 0uL,    /**< Open the switch */
 777:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_CLOSE     = 1uL     /**< Close the switch */
 778:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_state_t;
 779:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 780:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Definitions for sequencer control of switches */
 781:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 782:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 783:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_DISABLE = 0uL, /**< Disable sequencer control of switch */
 784:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SWITCH_SEQ_CTRL_ENABLE  = 1uL  /**< Enable sequencer control of switch */
 785:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_sar_seq_ctrl_t;
 786:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 787:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Switch register selection for \ref Cy_SAR_SetAnalogSwitch and \ref Cy_SAR_GetAnalogSwitch */
 788:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 789:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 790:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SWITCH0  = 0uL,      /**< SARMUX switch control register */
 791:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_switch_register_sel_t;
 792:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 793:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_ctrl_register_enums
 794:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CTRL register
 795:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 796:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 797:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage buffer power mode definitions */
 798:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 799:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 800:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_100     = 0uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< Full power (100%) */
 801:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_80      = 1uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 80% power */
 802:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_60      = 2uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 60% power */
 803:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_50      = 3uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 50% power */
 804:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_40      = 4uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 40% power */
 805:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_30      = 5uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 30% power */
 806:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_20      = 6uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 20% power */
 807:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_PWR_10      = 7uL << SAR_CTRL_PWR_CTRL_VREF_Pos,      /**< 10% power */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 17


 808:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_pwr_ctrl_vref_t;
 809:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 810:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Reference voltage selection definitions */
 811:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 812:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 813:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_BGR         = 4uL << SAR_CTRL_VREF_SEL_Pos,     /**< System wide bandgap from \
 814:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_EXT         = 5uL << SAR_CTRL_VREF_SEL_Pos,     /**< External Vref direct from 
 815:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA_DIV_2  = 6uL << SAR_CTRL_VREF_SEL_Pos,     /**< Vdda/2 (Vref buffer on) */
 816:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_VREF_SEL_VDDA        = 7uL << SAR_CTRL_VREF_SEL_Pos      /**< Vdda */
 817:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_vref_sel_t;
 818:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 819:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Vref bypass cap enable.
 820:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When enabled, a bypass capacitor should
 821:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * be connected to the dedicated Vref pin of the device.
 822:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Refer to the device datasheet for the minimum bypass capacitor value to use.
 823:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 824:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 825:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 826:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_DISABLE = 0uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos,    /**< Disable Vref bypass ca
 827:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_BYPASS_CAP_ENABLE  = 1uL << SAR_CTRL_VREF_BYP_CAP_EN_Pos     /**< Enable Vref bypass cap
 828:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_bypass_cap_t;
 829:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 830:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Negative terminal (Vminus) selection definitions for single-ended channels.
 831:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 832:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The Vminus input for single ended channels can be connected to
 833:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Vref, VSSA, or routed out to an external pin.
 834:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The options for routing to a pin are through Pin 1, Pin 3, Pin 5, or Pin 7
 835:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * of the SARMUX dedicated port or an acore wire in AROUTE, if available on the device.
 836:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 837:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref CY_SAR_NEG_SEL_VSSA_KELVIN comes straight from a Vssa pad without any shared branches
 838:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * so as to keep quiet and avoid voltage drops.
 839:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 840:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 841:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 842:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VSSA_KELVIN  = 0uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VSSA_KELVIN 
 843:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P1           = 2uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 1 of SAR
 844:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P3           = 3uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 3 of SAR
 845:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P5           = 4uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 5 of SAR
 846:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_P7           = 5uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to Pin 6 of SAR
 847:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_ACORE        = 6uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to an ACORE in 
 848:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_SEL_VREF         = 7uL << SAR_CTRL_NEG_SEL_Pos,  /**< Connect Vminus to VREF input o
 849:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_neg_sel_t;
 850:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 851:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable hardware control of the switch between Vref and the Vminus input */
 852:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 853:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 854:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_FW_ONLY = 0uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos,    /**< Only firmware co
 855:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_NEGVREF_HW      = 1uL << SAR_CTRL_SAR_HW_CTRL_NEGVREF_Pos     /**< Enable hardware 
 856:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_hw_ctrl_negvref_t;
 857:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 858:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator latch delay */
 859:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 860:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 861:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_2P5    = 0uL << SAR_CTRL_COMP_DLY_Pos,    /**< 2.5 ns delay, use for SAR c
 862:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_4      = 1uL << SAR_CTRL_COMP_DLY_Pos,    /**< 4 ns delay, use for SAR con
 863:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_10     = 2uL << SAR_CTRL_COMP_DLY_Pos,    /**< 10 ns delay, use for SAR co
 864:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CTRL_COMP_DLY_12     = 3uL << SAR_CTRL_COMP_DLY_Pos     /**< 12 ns delay, use for SAR co
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 18


 865:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_delay_t;
 866:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 867:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the comparator power mode */
 868:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 869:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 870:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_100     = 0uL << SAR_CTRL_COMP_PWR_Pos,      /**< 100% power, use this for > 2 
 871:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_80      = 1uL << SAR_CTRL_COMP_PWR_Pos,      /**< 80% power, use this for 1.5 -
 872:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_60      = 2uL << SAR_CTRL_COMP_PWR_Pos,      /**< 60% power, use this for 1.0 -
 873:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_50      = 3uL << SAR_CTRL_COMP_PWR_Pos,      /**< 50% power, use this for 500 k
 874:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_40      = 4uL << SAR_CTRL_COMP_PWR_Pos,      /**< 40% power, use this for 250 -
 875:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_30      = 5uL << SAR_CTRL_COMP_PWR_Pos,      /**< 30% power, use this for 100 -
 876:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_20      = 6uL << SAR_CTRL_COMP_PWR_Pos,      /**< 20% power, use this for TDB s
 877:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_COMP_PWR_10      = 7uL << SAR_CTRL_COMP_PWR_Pos,      /**< 10% power, use this for < 100
 878:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_comp_pwr_t;
 879:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 880:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARMUX during Deep Sleep power mode. */
 881:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 882:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 883:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_OFF = 0uL << SAR_CTRL_DEEPSLEEP_ON_Pos,    /**< Disable SARMUX operatio
 884:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DEEPSLEEP_SARMUX_ON  = 1uL << SAR_CTRL_DEEPSLEEP_ON_Pos     /**< Enable SARMUX operation
 885:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarmux_deep_sleep_t;
 886:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 887:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable the SARSEQ control of routing switches */
 888:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 889:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 890:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_ENABLE    = 0uL << SAR_CTRL_SWITCH_DISABLE_Pos,    /**< Enable the SARSEQ 
 891:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SARSEQ_SWITCH_DISABLE   = 1uL << SAR_CTRL_SWITCH_DISABLE_Pos     /**< Disable the SARSEQ
 892:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_ctrl_sarseq_routing_switches_t;
 893:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 894:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 895:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 896:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_ctrl_register_enums
 897:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations are used in configuring the SAR SAMPLE_CTRL register
 898:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 899:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 900:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure result alignment, either left or right aligned.
 901:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 902:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 903:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Averaging always uses right alignment. If the \ref CY_SAR_LEFT_ALIGN
 904:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is selected with averaging enabled, it is ignored.
 905:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 906:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \note
 907:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The voltage conversion functions (\ref Cy_SAR_CountsTo_Volts, \ref Cy_SAR_CountsTo_mVolts,
 908:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref Cy_SAR_CountsTo_uVolts) are only valid for right alignment.
 909:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * */
 910:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 911:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 912:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RIGHT_ALIGN  = 0uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos,    /**< Right align result data to
 913:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_LEFT_ALIGN   = 1uL << SAR_SAMPLE_CTRL_LEFT_ALIGN_Pos     /**< Left align result data to 
 914:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_result_align_t;
 915:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 916:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of single-ended channels */
 917:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 918:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 919:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos,    /**< Result 
 920:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SINGLE_ENDED_SIGNED    = 1uL << SAR_SAMPLE_CTRL_SINGLE_ENDED_SIGNED_Pos     /**< Result 
 921:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_single_ended_format_t;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 19


 922:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 923:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure format, signed or unsigned, of differential channels */
 924:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 925:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 926:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_UNSIGNED  = 0uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos,    /**< Result 
 927:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_DIFFERENTIAL_SIGNED    = 1uL << SAR_SAMPLE_CTRL_DIFFERENTIAL_SIGNED_Pos     /**< Result 
 928:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_differential_format_t;
 929:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 930:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure number of samples for averaging.
 931:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This applies only to channels with averaging enabled.
 932:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 933:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 934:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 935:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_2          = 0uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 936:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_4          = 1uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 937:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_8          = 2uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 938:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_16         = 3uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 939:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_32         = 4uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 940:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_64         = 5uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 941:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_128        = 6uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos,    /**< Set samples averaged to
 942:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_CNT_256        = 7uL << SAR_SAMPLE_CTRL_AVG_CNT_Pos     /**< Set samples averaged to
 943:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_cnt_t;
 944:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 945:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the averaging mode.
 946:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 947:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential accumulate and dump: a channel will be sampled back to back.
 948:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 949:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 16 bits
 950:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 951:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Sequential fixed:  a channel will be sampled back to back.
 952:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 20-bit register. At the end
 953:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   of the scan, the accumulated value is shifted right to fit into 12 bits
 954:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 955:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Interleaved: a channel will be sampled once per scan.
 956:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The result is added to a running sum in a 16-bit register.
 957:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the scan where the final averaging count is reached,
 958:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   the accumulated value is shifted right to fit into 12 bits
 959:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and stored into the CHAN_RESULT register.
 960:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In all other scans, the CHAN_RESULT will have an invalid result.
 961:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In interleaved mode, make sure that the averaging
 962:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   count is low enough to ensure that the intermediate value does not exceed 16 bits,
 963:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   that is averaging count is 16 or less. Otherwise, the MSBs will be lost.
 964:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In the special case that averaging is enabled for all enabled channels
 965:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   and interleaved mode is used, the interrupt frequency
 966:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   will be reduced by a factor of the number of samples averaged.
 967:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 968:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 969:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 970:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_ACCUM    = 0uL,                               /**< Set mode to seque
 971:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_SEQUENTIAL_FIXED    = SAR_SAMPLE_CTRL_AVG_SHIFT_Msk,     /**< Set mode to seque
 972:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_AVG_MODE_INTERLEAVED         = SAR_SAMPLE_CTRL_AVG_MODE_Msk,      /**< Set mode to inter
 973:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_avg_mode_t;
 974:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 975:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the trigger mode.
 976:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
 977:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Firmware triggering is always enabled and can be single shot or continuous.
 978:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Additionally, hardware triggering can be enabled with the option to be
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 20


 979:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * edge or level sensitive.
 980:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 981:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 982:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 983:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_ONLY        = 0uL,                                /**< Firmware trigger 
 984:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWEDGE  = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk, /**< Enable edge sensi
 985:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_TRIGGER_MODE_FW_AND_HWLEVEL = SAR_SAMPLE_CTRL_DSI_TRIGGER_EN_Msk | SAR_SAMPLE_CTRL_DSI_T
 986:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_ctrl_trigger_mode_t;
 987:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 988:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
 989:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
 990:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_sample_time_shift_enums
 991:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR SAMPLE_TIME* registers
 992:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
 993:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
 994:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the sample time by using these shifts */
 995:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
 996:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
 997:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME0_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME0_Pos,             /**< Shift fo
 998:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME1_SHIFT       = SAR_SAMPLE_TIME01_SAMPLE_TIME1_Pos,             /**< Shift fo
 999:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME2_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME2_Pos,             /**< Shift fo
1000:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_SAMPLE_TIME3_SHIFT       = SAR_SAMPLE_TIME23_SAMPLE_TIME3_Pos,             /**< Shift fo
1001:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_sample_time_shift_t;
1002:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1003:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1004:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_range_thres_register_enums
1005:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR RANGE* registers
1006:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1007:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1008:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the lower and upper thresholds for range detection
1009:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1010:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SARSEQ supports range detection to allow for automatic detection of sample
1011:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * values compared to two programmable thresholds without CPU involvement.
1012:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is defined by two global thresholds and a condition.
1013:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The RANGE_LOW value defines the lower threshold and RANGE_HIGH defines
1014:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the upper threshold of the range.
1015:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1016:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detect is done after averaging, alignment, and sign extension (if applicable).
1017:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * In other words, the thresholds values must have the same data format as the result data.
1018:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Range detection is always done for all channels scanned. By making RANGE_INTR_MASK=0,
1019:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * the firmware can choose to ignore the range detect interrupt for any channel.
1020:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1021:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1022:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1023:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_LOW_SHIFT      = SAR_RANGE_THRES_RANGE_LOW_Pos,        /**< Shift for setting lowe
1024:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_HIGH_SHIFT     = SAR_RANGE_THRES_RANGE_HIGH_Pos,       /**< Shift for setting uppe
1025:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_thres_shift_t;
1026:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1027:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the condition (below, inside, above, or outside) of the range detection interrupt */
1028:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1029:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1030:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_BELOW     = 0uL,  /**< Range interrupt detected when result < RANGE_LOW */
1031:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_INSIDE    = 1uL,  /**< Range interrupt detected when RANGE_LOW <= result < RA
1032:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_ABOVE     = 2uL,  /**< Range interrupt detected when RANGE_HIGH <= result */
1033:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_RANGE_COND_OUTSIDE   = 3uL,  /**< Range interrupt detected when result < RANGE_LOW || RA
1034:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_range_detect_condition_t;
1035:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 21


1036:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1037:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_chan_config_register_enums
1038:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR CHAN_CONFIG register
1039:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1040:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1041:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure the input mode of the channel
1042:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1043:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Single ended channel: the \ref cy_en_sar_ctrl_neg_sel_t selection in the \ref group_sar_init_st
1044:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   determines what drives the Vminus pin
1045:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential paired: Vplus and Vminus are a pair. Bit 0 of \ref cy_en_sar_chan_config_pos_pin_a
1046:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   is ignored and considered to be 0.
1047:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   In other words, \ref cy_en_sar_chan_config_pos_pin_addr_t "POS_PIN_ADDR" points to the even pin
1048:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   The even pin is connected to Vplus and the odd pin is connected to Vminus.
1049:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_pos_port_addr_t "POS_PORT_ADDR" is used to identify the port that co
1050:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Differential unpaired: The \ref cy_en_sar_chan_config_neg_pin_addr_t "NEG_PIN_ADDR" and
1051:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   \ref cy_en_sar_chan_config_neg_port_addr_t "NEG_PORT_ADDR" determine what drives the Vminus pin
1052:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   This is a variation of differential mode with no even-odd pair limitation
1053:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1054:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1055:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1056:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SINGLE_ENDED            = 0uL,                                     /**< Single ende
1057:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_PAIRED     = SAR_CHAN_CONFIG_DIFFERENTIAL_EN_Msk,     /**< Differentia
1058:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_DIFFERENTIAL_UNPAIRED   = SAR_CHAN_CONFIG_NEG_ADDR_EN_Msk          /**< Differentia
1059:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_input_mode_t;
1060:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1061:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vplus terminal of the SARADC. */
1062:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1063:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1064:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1065:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 1 on 
1066:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 2 on 
1067:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 3 on 
1068:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 4 on 
1069:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 5 on 
1070:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 6 on 
1071:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_POS_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_POS_PIN_ADDR_Pos,        /**< Pin 7 on 
1072:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_pin_addr_t;
1073:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1074:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vplus terminal of the SARA
1075:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1076:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_POS_PORT_ADDR_SARMUX is for the dedicated SARMUX port (8 pins)
1077:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 1 through 4 are respectively the pins of CTB0, CTB1, CTB2, and CTB3 (if present)
1078:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1079:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1080:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1081:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1082:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1083:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1084:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1085:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1086:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB0           = 1uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1087:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB1           = 2uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1088:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB2           = 3uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1089:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_CTB3           = 4uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< Outputs f
1090:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1091:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1092:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_POS_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 22


1093:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_pos_port_addr_t;
1094:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1095:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Enable or disable averaging for the channel */
1096:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1097:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1098:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_DISABLE      = 0uL,                                 /**< Disable averaging for 
1099:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_AVG_ENABLE       = 1uL << SAR_CHAN_CONFIG_AVG_EN_Pos    /**< Enable averaging for t
1100:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_avg_en_t;
1101:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1102:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Select which sample time to use for the channel.
1103:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * There are four global samples times available set by \ref group_sar_init_struct_sampleTime01 and
1104:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \ref group_sar_init_struct_sampleTime23.
1105:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1106:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1107:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1108:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_0     = 0uL,                                          /**< Use sample t
1109:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_1     = 1uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1110:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_2     = 2uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1111:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_SAMPLE_TIME_3     = 3uL << SAR_CHAN_CONFIG_SAMPLE_TIME_SEL_Pos,   /**< Use sample t
1112:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_sample_time_t;
1113:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1114:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the pin connected to the Vminus terminal of the SARADC. */
1115:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1116:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1117:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_0     = 0uL,                                            /**< Pin 0 on 
1118:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_1     = 1uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 1 on 
1119:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_2     = 2uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 2 on 
1120:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_3     = 3uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 3 on 
1121:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_4     = 4uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 4 on 
1122:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_5     = 5uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 5 on 
1123:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_6     = 6uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 6 on 
1124:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_CHAN_NEG_PIN_ADDR_7     = 7uL << SAR_CHAN_CONFIG_NEG_PIN_ADDR_Pos,        /**< Pin 7 on 
1125:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_pin_addr_t;
1126:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1127:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure address of the port that contains the pin connected to the Vminus terminal of the SAR
1128:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1129:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 0 is 8 pins of the SARMUX
1130:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Port 7, 5, and 6 (VPORT0/1/2) are the groups of internal signals that can be selected
1131:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   in the SARMUX or AROUTE (if present).
1132:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1133:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1134:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1135:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX         = 0uL,                                       /**< Dedicated
1136:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT2   = 5uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1137:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_AROUTE_VIRT1   = 6uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< AROUTE vi
1138:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_NEG_PORT_ADDR_SARMUX_VIRT    = 7uL << SAR_CHAN_CONFIG_POS_PORT_ADDR_Pos,  /**< SARMUX vi
1139:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_chan_config_neg_port_addr_t;
1140:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1141:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1142:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1143:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_intr_mask_t_register_enums
1144:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the SAR INTR_MASK register
1145:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1146:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1147:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Configure which signal will cause an interrupt event.
1148:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1149:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - End of scan (EOS): occurs after completing a scan of all enabled channels
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 23


1150:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Overflow: occurs when hardware sets a new EOS interrupt while the previous interrupt
1151:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   has not be cleared by the firmware
1152:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - Firmware collision: occurs when firmware attempts to start one-shot
1153:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *   conversion while the SAR is busy.
1154:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1155:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Enable all, one, or none of the interrupt events.
1156:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1157:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1158:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1159:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_MASK_NONE           = 0uL,                                  /**< Disable all interr
1160:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_EOS_MASK            = SAR_INTR_MASK_EOS_MASK_Msk,           /**< Enable end of scan
1161:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_OVERFLOW_MASK       = SAR_INTR_MASK_OVERFLOW_MASK_Msk,      /**< Enable overflow in
1162:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_INTR_FW_COLLISION_MASK   = SAR_INTR_MASK_FW_COLLISION_MASK_Msk,  /**< Enable firmware co
1163:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_intr_mask_t;
1164:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1165:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1166:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1167:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_mux_switch_register_enums
1168:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of enumerations aids in configuring the \ref group_sar_init_struct_muxSwitch and \ref gr
1169:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1170:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1171:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1172:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Firmware control for the SARMUX switches to connect analog signals to the SAR ADC
1173:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1174:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To close multiple switches, "OR" the enum values together.
1175:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1176:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1177:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1178:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1179:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1180:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vplus */
1181:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P0_VPLUS_Msk,    /**< Switch between Pi
1182:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P1_VPLUS_Msk,    /**< Switch between Pi
1183:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P2_VPLUS_Msk,    /**< Switch between Pi
1184:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P3_VPLUS_Msk,    /**< Switch between Pi
1185:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P4_VPLUS_Msk,    /**< Switch between Pi
1186:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P5_VPLUS_Msk,    /**< Switch between Pi
1187:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P6_VPLUS_Msk,    /**< Switch between Pi
1188:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VPLUS         = SAR_MUX_SWITCH0_MUX_FW_P7_VPLUS_Msk,    /**< Switch between Pi
1189:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1190:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Vminus */
1191:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P0_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P0_VMINUS_Msk,   /**< Switch between Pi
1192:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P1_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P1_VMINUS_Msk,   /**< Switch between Pi
1193:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P2_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P2_VMINUS_Msk,   /**< Switch between Pi
1194:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P3_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P3_VMINUS_Msk,   /**< Switch between Pi
1195:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P4_VMINUS_Msk,   /**< Switch between Pi
1196:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P5_VMINUS_Msk,   /**< Switch between Pi
1197:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P6_VMINUS_Msk,   /**< Switch between Pi
1198:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_VMINUS        = SAR_MUX_SWITCH0_MUX_FW_P7_VMINUS_Msk,   /**< Switch between Pi
1199:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1200:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Vssa to Vminus and temperature sensor to Vplus */
1201:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_VSSA_VMINUS      = SAR_MUX_SWITCH0_MUX_FW_VSSA_VMINUS_Msk,    /**< Switch between
1202:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_TEMP_VPLUS       = SAR_MUX_SWITCH0_MUX_FW_TEMP_VPLUS_Msk,     /**< Switch between
1203:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1204:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Amuxbus A and B to Vplus and Vminus */
1205:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VPLUS_Msk,     /**< Switch bet
1206:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VPLUS   = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VPLUS_Msk,     /**< Switch bet
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 24


1207:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSA_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSA_VMINUS_Msk,    /**< Switch bet
1208:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_AMUXBUSB_VMINUS  = SAR_MUX_SWITCH0_MUX_FW_AMUXBUSB_VMINUS_Msk,    /**< Switch bet
1209:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1210:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Sarbus 0 and 1 to Vplus and Vminus */
1211:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VPLUS_Msk,      /**< Switch bet
1212:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VPLUS    = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VPLUS_Msk,      /**< Switch bet
1213:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS0_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS0_VMINUS_Msk,     /**< Switch bet
1214:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_SARBUS1_VMINUS   = SAR_MUX_SWITCH0_MUX_FW_SARBUS1_VMINUS_Msk,     /**< Switch bet
1215:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1216:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* SARMUX pins to Core IO */
1217:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P4_COREIO0       = SAR_MUX_SWITCH0_MUX_FW_P4_COREIO0_Msk,      /**< Switch betwee
1218:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P5_COREIO1       = SAR_MUX_SWITCH0_MUX_FW_P5_COREIO1_Msk,      /**< Switch betwee
1219:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P6_COREIO2       = SAR_MUX_SWITCH0_MUX_FW_P6_COREIO2_Msk,      /**< Switch betwee
1220:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_FW_P7_COREIO3       = SAR_MUX_SWITCH0_MUX_FW_P7_COREIO3_Msk,      /**< Switch betwee
1221:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_fw_ctrl_t;
1222:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1223:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** Mask definitions of SARMUX switches that can be controlled by the SARSEQ.
1224:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1225:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * To enable sequencer control of multiple switches, "OR" the enum values together.
1226:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1227:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_sarmux section for more guidance.
1228:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1229:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef enum
1230:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1231:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P0           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P0_Msk,        /**< Enable
1232:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P1           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P1_Msk,        /**< Enable
1233:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P2           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P2_Msk,        /**< Enable
1234:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P3           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P3_Msk,        /**< Enable
1235:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P4           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P4_Msk,        /**< Enable
1236:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P5           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P5_Msk,        /**< Enable
1237:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P6           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P6_Msk,        /**< Enable
1238:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_P7           = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_P7_Msk,        /**< Enable
1239:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_VSSA         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_VSSA_Msk,      /**< Enable
1240:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_TEMP         = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_TEMP_Msk,      /**< Enable
1241:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSA     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSA_Msk,  /**< Enable
1242:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_AMUXBUSB     = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_AMUXBUSB_Msk,  /**< Enable
1243:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS0      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS0_Msk,   /**< Enable
1244:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_SAR_MUX_SQ_CTRL_SARBUS1      = SAR_MUX_SWITCH_SQ_CTRL_MUX_SQ_CTRL_SARBUS1_Msk,   /**< Enable
1245:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }cy_en_sar_mux_switch_sq_ctrl_t;
1246:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1247:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /* \} */
1248:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1249:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_enums */
1250:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1251:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_data_structures
1252:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1253:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1254:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1255:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1256:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *       Configuration Structures
1257:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1258:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1259:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used to initialize the SAR ADC subsystem.
1260:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1261:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The SAR ADC subsystem is highly configurable with many options.
1262:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * When calling \ref Cy_SAR_Init, provide a pointer to the structure containing this configuration d
1263:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A set of enumerations is provided in this
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 25


1264:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * driver to help with configuring this structure.
1265:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1266:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * See the \ref group_sar_initialization section for guidance.
1267:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** **/
1268:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1269:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1270:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t ctrl;                                      /**< Control register settings (applies to 
1271:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleCtrl;                                /**< Sample control register settings (appl
1272:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime01;                              /**< Sample time in ADC clocks for Sample T
1273:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t sampleTime23;                              /**< Sample time in ADC clocks for Sample T
1274:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeThres;                                /**< Range detect threshold register for al
1275:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     cy_en_sar_range_detect_condition_t rangeCond;       /**< Range detect condition (below, inside,
1276:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanEn;                                    /**< Enable bits for the channels */
1277:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t chanConfig[CY_SAR_MAX_NUM_CHANNELS];       /**< Channel configuration */
1278:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t intrMask;                                  /**< Interrupt enable mask */
1279:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t satIntrMask;                               /**< Saturation detection interrupt enable 
1280:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t rangeIntrMask;                             /**< Range detection interrupt enable mask 
1281:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitch;                                 /**< SARMUX firmware switches to connect an
1282:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t muxSwitchSqCtrl;                           /**< Enable SARSEQ control of specific SARM
1283:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     bool configRouting;                                 /**< Configure or ignore routing related re
1284:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t vrefMvValue;                               /**< Reference voltage in millivolts used i
1285:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_config_t;
1286:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1287:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** This structure is used by the driver to backup the state of the SAR
1288:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * before entering sleep so that it can be re-enabled after waking up */
1289:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** typedef struct
1290:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1291:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t hwEnabled;         /**< SAR enabled state */
1292:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     uint32_t continuous;        /**< State of the continuous bit */
1293:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** } cy_stc_sar_state_backup_t;
1294:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1295:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} group_sar_data_structures */
1296:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1297:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions
1298:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1299:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1300:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1301:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /***************************************
1302:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *        Function Prototypes
1303:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ***************************************/
1304:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1305:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1306:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for initialization and basic usage
1307:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1308:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1309:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_Init(SAR_Type *base, const cy_stc_sar_config_t *config);
1310:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_DeInit(SAR_Type *base, bool deInitRouting);
1311:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Enable(SAR_Type *base);
1312:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base);
1313:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StartConvert(SAR_Type *base, cy_en_sar_start_convert_sel_t startSelect);
1314:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_StopConvert(SAR_Type *base);
1315:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_IsEndConversion(SAR_Type *base, cy_en_sar_return_mode_t retMode);
1316:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_GetResult16(const SAR_Type *base, uint32_t chan);
1317:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_GetResult32(const SAR_Type *base, uint32_t chan);
1318:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base);
1319:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1320:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 26


1321:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_power
1322:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for Deep Sleep entry and exit
1323:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1324:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1325:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_syspm_status_t Cy_SAR_DeepSleepCallback(cy_stc_syspm_callback_params_t *callbackParams);
1326:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Sleep(SAR_Type *base);
1327:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_Wakeup(SAR_Type *base);
1328:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1329:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1330:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1331:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions allows changes to the SAR configuration
1332:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * after initialization.
1333:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1334:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1335:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetConvertMode(SAR_Type *base, cy_en_sar_sample_ctrl_trigger_mode_t mode);
1336:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask);
1337:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetLowLimit(SAR_Type *base, uint32_t lowLimit);
1338:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetHighLimit(SAR_Type *base, uint32_t highLimit);
1339:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond);
1340:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1341:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1342:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_countsto
1343:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions performs counts to *volts conversions.
1344:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1345:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1346:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_RawCounts2Counts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1347:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** float32_t Cy_SAR_CountsTo_Volts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1348:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int16_t Cy_SAR_CountsTo_mVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1349:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** int32_t Cy_SAR_CountsTo_uVolts(const SAR_Type *base, uint32_t chan, int16_t adcCounts);
1350:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetOffset(uint32_t chan, int16_t offset);
1351:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** cy_en_sar_status_t Cy_SAR_SetGain(uint32_t chan, int32_t adcGain);
1352:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1353:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1354:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_switches
1355:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for controlling/querying the SARMUX switches
1356:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1357:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1358:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetAnalogSwitch(SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect, uint32_t 
1359:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** uint32_t Cy_SAR_GetAnalogSwitch(const SAR_Type *base, cy_en_sar_switch_register_sel_t switchSelect)
1360:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaVminusSwitch(SAR_Type *base, cy_en_sar_switch_state_t state);
1361:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** void Cy_SAR_SetSwitchSarSeqCtrl(SAR_Type *base, uint32_t switchMask, cy_en_sar_switch_sar_seq_ctrl_
1362:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetVssaSarSeqCtrl(SAR_Type *base, cy_en_sar_switch_sar_seq_ctrl_t ctrl)
1363:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1364:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1365:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1366:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions are related to SAR interrupts.
1367:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1368:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1369:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base);
1370:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask);
1371:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterrupt(SAR_Type *base, uint32_t intrMask);
1372:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetInterruptMask(SAR_Type *base, uint32_t intrMask);
1373:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptMask(const SAR_Type *base);
1374:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatusMasked(const SAR_Type *base);
1375:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1376:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatus(const SAR_Type *base);
1377:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearRangeInterrupt(SAR_Type *base, uint32_t chanMask);
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 27


1378:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterrupt(SAR_Type *base, uint32_t chanMask);
1379:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeInterruptMask(SAR_Type *base, uint32_t chanMask);
1380:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptMask(const SAR_Type *base);
1381:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetRangeInterruptStatusMasked(const SAR_Type *base);
1382:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1383:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatus(const SAR_Type *base);
1384:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearSatInterrupt(SAR_Type *base, uint32_t chanMask);
1385:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterrupt(SAR_Type *base, uint32_t chanMask);
1386:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetSatInterruptMask(SAR_Type *base, uint32_t chanMask);
1387:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptMask(const SAR_Type *base);
1388:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetSatInterruptStatusMasked(const SAR_Type *base);
1389:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1390:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptCause(const SAR_Type *base);
1391:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1392:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1393:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1394:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_helper
1395:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * This set of functions is for useful configuration query
1396:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1397:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1398:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSigned(const SAR_Type *base, uint32_t chan);
1399:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** bool Cy_SAR_IsChannelSingleEnded(const SAR_Type *base, uint32_t chan);
1400:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE bool Cy_SAR_IsChannelDifferential(const SAR_Type *base, uint32_t chan);
1401:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1402:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1403:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_basic
1404:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1405:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1406:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1407:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1408:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_Disable
1409:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1410:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1411:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Turn off the hardware block.
1412:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1413:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1414:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1415:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1416:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1417:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1418:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1419:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_Disable(SAR_Type *base)
1420:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1421:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CTRL &= ~SAR_CTRL_ENABLED_Msk;
1422:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1423:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1424:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1425:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetChanResultUpdated
1426:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1427:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1428:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return whether the RESULT register has been updated or not.
1429:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is high, the corresponding channel RESULT register was updated,
1430:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * i.e. was sampled during the previous scan and, in case of Interleaved averaging,
1431:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * reached the averaging count.
1432:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * If the bit is low, the corresponding channel is not enabled or the averaging count
1433:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * is not yet reached for Interleaved averaging.
1434:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 28


1435:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1436:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1437:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1438:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return
1439:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Each bit of the result corresponds to the channel.
1440:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Bit 0 is for channel 0, etc.
1441:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1442:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1443:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1444:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_GET_CHAN_RESULT_UPDATED
1445:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1446:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1447:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetChanResultUpdated(const SAR_Type *base)
1448:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1449:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->CHAN_RESULT_UPDATED;
1450:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1451:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1452:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1453:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_config
1454:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1455:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1456:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1457:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetChanMask
1458:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1459:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1460:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the enable/disable mask for the channels.
1461:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1462:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1463:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1464:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1465:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param enableMask
1466:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Channel enable/disable mask. Each bit corresponds to a channel.
1467:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 0: the corresponding channel is disabled.
1468:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - 1: the corresponding channel is enabled; it will be included in the next scan.
1469:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1470:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1471:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1472:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1473:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1474:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_CHAN_MASK
1475:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1476:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1477:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetChanMask(SAR_Type *base, uint32_t enableMask)
1478:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1479:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_CHANMASK(enableMask));
1480:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1481:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->CHAN_EN = enableMask;
1482:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1483:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1484:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1485:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_SetRangeCond
1486:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1487:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1488:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Set the condition in which range detection interrupts are triggered.
1489:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1490:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1491:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 29


1492:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1493:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param cond
1494:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * A value of the enum \ref cy_en_sar_range_detect_condition_t.
1495:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1496:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1497:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1498:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1499:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1500:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_SET_RANGE_COND
1501:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1502:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1503:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_SetRangeCond(SAR_Type *base, cy_en_sar_range_detect_condition_t cond)
1504:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1505:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L3(CY_SAR_RANGECOND(cond));
1506:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1507:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->RANGE_COND = (uint32_t)cond << SAR_RANGE_COND_RANGE_COND_Pos;
1508:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1509:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1510:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \} */
1511:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1512:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /** \addtogroup group_sar_functions_interrupt
1513:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \{
1514:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** */
1515:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1516:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_GetInterruptStatus
1517:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1518:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1519:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Return the interrupt register status.
1520:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1521:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1522:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1523:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1524:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return Interrupt status
1525:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1526:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \funcusage
1527:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1528:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \snippet sar_sut_01.cydsn/main_cm0p.c SNIPPET_SAR_ISR
1529:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1530:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1531:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE uint32_t Cy_SAR_GetInterruptStatus(const SAR_Type *base)
1532:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     return base->INTR;
  41              		.loc 2 1533 0
  42 0002 094B     		ldr	r3, .L4
  43 0004 D3F81042 		ldr	r4, [r3, #528]
  44              	.LVL1:
  45              	.LBE9:
  46              	.LBE8:
  47              	.LBB10:
  48              	.LBB11:
1534:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
1535:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1536:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** /*******************************************************************************
1537:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Function Name: Cy_SAR_ClearInterrupt
1538:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** ****************************************************************************//**
1539:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1540:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Clear the interrupt.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 30


1541:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The interrupt must be cleared with this function so that the hardware
1542:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * can set subsequent interrupts and those interrupts can be forwarded
1543:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * to the interrupt controller, if enabled.
1544:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1545:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param base
1546:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Pointer to structure describing registers
1547:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1548:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \param intrMask
1549:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * The mask of interrupts to clear. Typically this will be the value returned
1550:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * from \ref Cy_SAR_GetInterruptStatus.
1551:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * Alternately, select one or more values from \ref cy_en_sar_intr_mask_t and "OR" them together.
1552:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_EOS_MASK
1553:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_OVERFLOW_MASK
1554:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * - \ref CY_SAR_INTR_FW_COLLISION_MASK
1555:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1556:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** * \return None
1557:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *
1558:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** *******************************************************************************/
1559:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** __STATIC_INLINE void Cy_SAR_ClearInterrupt(SAR_Type *base, uint32_t intrMask)
1560:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** {
1561:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     CY_ASSERT_L2(CY_SAR_INTRMASK(intrMask));
  49              		.loc 2 1561 0
  50 0008 072C     		cmp	r4, #7
  51 000a 04D9     		bls	.L2
  52 000c 40F21961 		movw	r1, #1561
  53 0010 0648     		ldr	r0, .L4+4
  54 0012 FFF7FEFF 		bl	Cy_SysLib_AssertFailed
  55              	.LVL2:
  56              	.L2:
1562:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1563:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     base->INTR = intrMask;
  57              		.loc 2 1563 0
  58 0016 044B     		ldr	r3, .L4
  59 0018 C3F81042 		str	r4, [r3, #528]
1564:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** 
1565:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     /* Dummy read for buffered writes. */
1566:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h ****     (void) base->INTR;
  60              		.loc 2 1566 0
  61 001c D3F81022 		ldr	r2, [r3, #528]
  62              	.LVL3:
  63              	.LBE11:
  64              	.LBE10:
  65              	.LBB12:
  66              	.LBB13:
1533:Generated_Source\PSoC6\pdl\drivers/peripheral/sar/cy_sar.h **** }
  67              		.loc 2 1533 0
  68 0020 D3F81032 		ldr	r3, [r3, #528]
  69              	.LVL4:
  70 0024 10BD     		pop	{r4, pc}
  71              	.L5:
  72 0026 00BF     		.align	2
  73              	.L4:
  74 0028 00001D41 		.word	1092419584
  75 002c 00000000 		.word	.LC0
  76              	.LBE13:
  77              	.LBE12:
  78              		.cfi_endproc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 31


  79              	.LFE263:
  80              		.size	ADC_ISR, .-ADC_ISR
  81              		.section	.rodata.str1.4,"aMS",%progbits,1
  82              		.align	2
  83              	.LC0:
  84 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sa"
  84      72617465 
  84      645F536F 
  84      75726365 
  84      5C50536F 
  85 0030 722F6379 		.ascii	"r/cy_sar.h\000"
  85      5F736172 
  85      2E6800
  86              		.text
  87              	.Letext0:
  88              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
  89              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
  90              		.file 5 "Generated_Source\\PSoC6\\pdl\\devices/psoc6/ip/cyip_sar.h"
  91              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
  92              		.file 7 "Generated_Source\\PSoC6\\ADC.h"
  93              		.file 8 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
  94              		.section	.debug_info,"",%progbits
  95              	.Ldebug_info0:
  96 0000 42070000 		.4byte	0x742
  97 0004 0400     		.2byte	0x4
  98 0006 00000000 		.4byte	.Ldebug_abbrev0
  99 000a 04       		.byte	0x4
 100 000b 01       		.uleb128 0x1
 101 000c 02010000 		.4byte	.LASF106
 102 0010 0C       		.byte	0xc
 103 0011 00000000 		.4byte	.LASF107
 104 0015 B4020000 		.4byte	.LASF108
 105 0019 00000000 		.4byte	.Ldebug_ranges0+0
 106 001d 00000000 		.4byte	0
 107 0021 00000000 		.4byte	.Ldebug_line0
 108 0025 02       		.uleb128 0x2
 109 0026 02       		.byte	0x2
 110 0027 05       		.byte	0x5
 111 0028 9D000000 		.4byte	.LASF0
 112 002c 02       		.uleb128 0x2
 113 002d 01       		.byte	0x1
 114 002e 06       		.byte	0x6
 115 002f ED030000 		.4byte	.LASF1
 116 0033 02       		.uleb128 0x2
 117 0034 01       		.byte	0x1
 118 0035 08       		.byte	0x8
 119 0036 AE030000 		.4byte	.LASF2
 120 003a 02       		.uleb128 0x2
 121 003b 02       		.byte	0x2
 122 003c 07       		.byte	0x7
 123 003d F3040000 		.4byte	.LASF3
 124 0041 03       		.uleb128 0x3
 125 0042 CE050000 		.4byte	.LASF5
 126 0046 03       		.byte	0x3
 127 0047 3F       		.byte	0x3f
 128 0048 4C000000 		.4byte	0x4c
 129 004c 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 32


 130 004d 04       		.byte	0x4
 131 004e 05       		.byte	0x5
 132 004f 23030000 		.4byte	.LASF4
 133 0053 03       		.uleb128 0x3
 134 0054 B5010000 		.4byte	.LASF6
 135 0058 03       		.byte	0x3
 136 0059 41       		.byte	0x41
 137 005a 5E000000 		.4byte	0x5e
 138 005e 02       		.uleb128 0x2
 139 005f 04       		.byte	0x4
 140 0060 07       		.byte	0x7
 141 0061 85050000 		.4byte	.LASF7
 142 0065 02       		.uleb128 0x2
 143 0066 08       		.byte	0x8
 144 0067 05       		.byte	0x5
 145 0068 06030000 		.4byte	.LASF8
 146 006c 02       		.uleb128 0x2
 147 006d 08       		.byte	0x8
 148 006e 07       		.byte	0x7
 149 006f 02040000 		.4byte	.LASF9
 150 0073 04       		.uleb128 0x4
 151 0074 04       		.byte	0x4
 152 0075 05       		.byte	0x5
 153 0076 696E7400 		.ascii	"int\000"
 154 007a 02       		.uleb128 0x2
 155 007b 04       		.byte	0x4
 156 007c 07       		.byte	0x7
 157 007d 85060000 		.4byte	.LASF10
 158 0081 03       		.uleb128 0x3
 159 0082 D8040000 		.4byte	.LASF11
 160 0086 04       		.byte	0x4
 161 0087 2C       		.byte	0x2c
 162 0088 41000000 		.4byte	0x41
 163 008c 03       		.uleb128 0x3
 164 008d 19040000 		.4byte	.LASF12
 165 0091 04       		.byte	0x4
 166 0092 30       		.byte	0x30
 167 0093 53000000 		.4byte	0x53
 168 0097 02       		.uleb128 0x2
 169 0098 04       		.byte	0x4
 170 0099 07       		.byte	0x7
 171 009a B7000000 		.4byte	.LASF13
 172 009e 05       		.uleb128 0x5
 173 009f 8C000000 		.4byte	0x8c
 174 00a3 06       		.uleb128 0x6
 175 00a4 9E000000 		.4byte	0x9e
 176 00a8 07       		.uleb128 0x7
 177 00a9 A3000000 		.4byte	0xa3
 178 00ad B8000000 		.4byte	0xb8
 179 00b1 08       		.uleb128 0x8
 180 00b2 97000000 		.4byte	0x97
 181 00b6 01       		.byte	0x1
 182 00b7 00       		.byte	0
 183 00b8 07       		.uleb128 0x7
 184 00b9 9E000000 		.4byte	0x9e
 185 00bd C8000000 		.4byte	0xc8
 186 00c1 08       		.uleb128 0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 33


 187 00c2 97000000 		.4byte	0x97
 188 00c6 0F       		.byte	0xf
 189 00c7 00       		.byte	0
 190 00c8 07       		.uleb128 0x7
 191 00c9 A3000000 		.4byte	0xa3
 192 00cd D8000000 		.4byte	0xd8
 193 00d1 08       		.uleb128 0x8
 194 00d2 97000000 		.4byte	0x97
 195 00d6 02       		.byte	0x2
 196 00d7 00       		.byte	0
 197 00d8 07       		.uleb128 0x7
 198 00d9 A3000000 		.4byte	0xa3
 199 00dd E8000000 		.4byte	0xe8
 200 00e1 08       		.uleb128 0x8
 201 00e2 97000000 		.4byte	0x97
 202 00e6 0F       		.byte	0xf
 203 00e7 00       		.byte	0
 204 00e8 07       		.uleb128 0x7
 205 00e9 A3000000 		.4byte	0xa3
 206 00ed F8000000 		.4byte	0xf8
 207 00f1 08       		.uleb128 0x8
 208 00f2 97000000 		.4byte	0x97
 209 00f6 0E       		.byte	0xe
 210 00f7 00       		.byte	0
 211 00f8 09       		.uleb128 0x9
 212 00f9 080F     		.2byte	0xf08
 213 00fb 05       		.byte	0x5
 214 00fc 21       		.byte	0x21
 215 00fd 80030000 		.4byte	0x380
 216 0101 0A       		.uleb128 0xa
 217 0102 DD030000 		.4byte	.LASF14
 218 0106 05       		.byte	0x5
 219 0107 22       		.byte	0x22
 220 0108 9E000000 		.4byte	0x9e
 221 010c 00       		.byte	0
 222 010d 0A       		.uleb128 0xa
 223 010e 5F060000 		.4byte	.LASF15
 224 0112 05       		.byte	0x5
 225 0113 23       		.byte	0x23
 226 0114 9E000000 		.4byte	0x9e
 227 0118 04       		.byte	0x4
 228 0119 0A       		.uleb128 0xa
 229 011a 56060000 		.4byte	.LASF16
 230 011e 05       		.byte	0x5
 231 011f 24       		.byte	0x24
 232 0120 85030000 		.4byte	0x385
 233 0124 08       		.byte	0x8
 234 0125 0A       		.uleb128 0xa
 235 0126 5C000000 		.4byte	.LASF17
 236 012a 05       		.byte	0x5
 237 012b 25       		.byte	0x25
 238 012c 9E000000 		.4byte	0x9e
 239 0130 10       		.byte	0x10
 240 0131 0A       		.uleb128 0xa
 241 0132 C0000000 		.4byte	.LASF18
 242 0136 05       		.byte	0x5
 243 0137 26       		.byte	0x26
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 34


 244 0138 9E000000 		.4byte	0x9e
 245 013c 14       		.byte	0x14
 246 013d 0A       		.uleb128 0xa
 247 013e CA010000 		.4byte	.LASF19
 248 0142 05       		.byte	0x5
 249 0143 27       		.byte	0x27
 250 0144 9E000000 		.4byte	0x9e
 251 0148 18       		.byte	0x18
 252 0149 0A       		.uleb128 0xa
 253 014a D2030000 		.4byte	.LASF20
 254 014e 05       		.byte	0x5
 255 014f 28       		.byte	0x28
 256 0150 9E000000 		.4byte	0x9e
 257 0154 1C       		.byte	0x1c
 258 0155 0A       		.uleb128 0xa
 259 0156 14030000 		.4byte	.LASF21
 260 015a 05       		.byte	0x5
 261 015b 29       		.byte	0x29
 262 015c 9E000000 		.4byte	0x9e
 263 0160 20       		.byte	0x20
 264 0161 0A       		.uleb128 0xa
 265 0162 BC030000 		.4byte	.LASF22
 266 0166 05       		.byte	0x5
 267 0167 2A       		.byte	0x2a
 268 0168 9E000000 		.4byte	0x9e
 269 016c 24       		.byte	0x24
 270 016d 0A       		.uleb128 0xa
 271 016e 53050000 		.4byte	.LASF23
 272 0172 05       		.byte	0x5
 273 0173 2B       		.byte	0x2b
 274 0174 9F030000 		.4byte	0x39f
 275 0178 28       		.byte	0x28
 276 0179 0A       		.uleb128 0xa
 277 017a 6B030000 		.4byte	.LASF24
 278 017e 05       		.byte	0x5
 279 017f 2C       		.byte	0x2c
 280 0180 A4030000 		.4byte	0x3a4
 281 0184 80       		.byte	0x80
 282 0185 0A       		.uleb128 0xa
 283 0186 5D050000 		.4byte	.LASF25
 284 018a 05       		.byte	0x5
 285 018b 2D       		.byte	0x2d
 286 018c AE030000 		.4byte	0x3ae
 287 0190 C0       		.byte	0xc0
 288 0191 0B       		.uleb128 0xb
 289 0192 C0010000 		.4byte	.LASF26
 290 0196 05       		.byte	0x5
 291 0197 2E       		.byte	0x2e
 292 0198 B8030000 		.4byte	0x3b8
 293 019c 0001     		.2byte	0x100
 294 019e 0B       		.uleb128 0xb
 295 019f 67050000 		.4byte	.LASF27
 296 01a3 05       		.byte	0x5
 297 01a4 2F       		.byte	0x2f
 298 01a5 C2030000 		.4byte	0x3c2
 299 01a9 4001     		.2byte	0x140
 300 01ab 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 35


 301 01ac D6010000 		.4byte	.LASF28
 302 01b0 05       		.byte	0x5
 303 01b1 30       		.byte	0x30
 304 01b2 CC030000 		.4byte	0x3cc
 305 01b6 8001     		.2byte	0x180
 306 01b8 0B       		.uleb128 0xb
 307 01b9 71050000 		.4byte	.LASF29
 308 01bd 05       		.byte	0x5
 309 01be 31       		.byte	0x31
 310 01bf D6030000 		.4byte	0x3d6
 311 01c3 C001     		.2byte	0x1c0
 312 01c5 0B       		.uleb128 0xb
 313 01c6 1D050000 		.4byte	.LASF30
 314 01ca 05       		.byte	0x5
 315 01cb 32       		.byte	0x32
 316 01cc A3000000 		.4byte	0xa3
 317 01d0 0002     		.2byte	0x200
 318 01d2 0B       		.uleb128 0xb
 319 01d3 EC010000 		.4byte	.LASF31
 320 01d7 05       		.byte	0x5
 321 01d8 33       		.byte	0x33
 322 01d9 A3000000 		.4byte	0xa3
 323 01dd 0402     		.2byte	0x204
 324 01df 0B       		.uleb128 0xb
 325 01e0 58030000 		.4byte	.LASF32
 326 01e4 05       		.byte	0x5
 327 01e5 34       		.byte	0x34
 328 01e6 A3000000 		.4byte	0xa3
 329 01ea 0802     		.2byte	0x208
 330 01ec 0B       		.uleb128 0xb
 331 01ed 2D000000 		.4byte	.LASF33
 332 01f1 05       		.byte	0x5
 333 01f2 35       		.byte	0x35
 334 01f3 A3000000 		.4byte	0xa3
 335 01f7 0C02     		.2byte	0x20c
 336 01f9 0B       		.uleb128 0xb
 337 01fa 18050000 		.4byte	.LASF34
 338 01fe 05       		.byte	0x5
 339 01ff 36       		.byte	0x36
 340 0200 9E000000 		.4byte	0x9e
 341 0204 1002     		.2byte	0x210
 342 0206 0B       		.uleb128 0xb
 343 0207 F9030000 		.4byte	.LASF35
 344 020b 05       		.byte	0x5
 345 020c 37       		.byte	0x37
 346 020d 9E000000 		.4byte	0x9e
 347 0211 1402     		.2byte	0x214
 348 0213 0B       		.uleb128 0xb
 349 0214 45040000 		.4byte	.LASF36
 350 0218 05       		.byte	0x5
 351 0219 38       		.byte	0x38
 352 021a 9E000000 		.4byte	0x9e
 353 021e 1802     		.2byte	0x218
 354 0220 0B       		.uleb128 0xb
 355 0221 83030000 		.4byte	.LASF37
 356 0225 05       		.byte	0x5
 357 0226 39       		.byte	0x39
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 36


 358 0227 A3000000 		.4byte	0xa3
 359 022b 1C02     		.2byte	0x21c
 360 022d 0B       		.uleb128 0xb
 361 022e 48060000 		.4byte	.LASF38
 362 0232 05       		.byte	0x5
 363 0233 3A       		.byte	0x3a
 364 0234 9E000000 		.4byte	0x9e
 365 0238 2002     		.2byte	0x220
 366 023a 0B       		.uleb128 0xb
 367 023b C6040000 		.4byte	.LASF39
 368 023f 05       		.byte	0x5
 369 0240 3B       		.byte	0x3b
 370 0241 9E000000 		.4byte	0x9e
 371 0245 2402     		.2byte	0x224
 372 0247 0B       		.uleb128 0xb
 373 0248 E0040000 		.4byte	.LASF40
 374 024c 05       		.byte	0x5
 375 024d 3C       		.byte	0x3c
 376 024e 9E000000 		.4byte	0x9e
 377 0252 2802     		.2byte	0x228
 378 0254 0B       		.uleb128 0xb
 379 0255 BF060000 		.4byte	.LASF41
 380 0259 05       		.byte	0x5
 381 025a 3D       		.byte	0x3d
 382 025b A3000000 		.4byte	0xa3
 383 025f 2C02     		.2byte	0x22c
 384 0261 0B       		.uleb128 0xb
 385 0262 F1050000 		.4byte	.LASF42
 386 0266 05       		.byte	0x5
 387 0267 3E       		.byte	0x3e
 388 0268 9E000000 		.4byte	0x9e
 389 026c 3002     		.2byte	0x230
 390 026e 0B       		.uleb128 0xb
 391 026f 55020000 		.4byte	.LASF43
 392 0273 05       		.byte	0x5
 393 0274 3F       		.byte	0x3f
 394 0275 9E000000 		.4byte	0x9e
 395 0279 3402     		.2byte	0x234
 396 027b 0B       		.uleb128 0xb
 397 027c A7000000 		.4byte	.LASF44
 398 0280 05       		.byte	0x5
 399 0281 40       		.byte	0x40
 400 0282 9E000000 		.4byte	0x9e
 401 0286 3802     		.2byte	0x238
 402 0288 0B       		.uleb128 0xb
 403 0289 4F040000 		.4byte	.LASF45
 404 028d 05       		.byte	0x5
 405 028e 41       		.byte	0x41
 406 028f A3000000 		.4byte	0xa3
 407 0293 3C02     		.2byte	0x23c
 408 0295 0B       		.uleb128 0xb
 409 0296 E2030000 		.4byte	.LASF46
 410 029a 05       		.byte	0x5
 411 029b 42       		.byte	0x42
 412 029c A3000000 		.4byte	0xa3
 413 02a0 4002     		.2byte	0x240
 414 02a2 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 37


 415 02a3 7B050000 		.4byte	.LASF47
 416 02a7 05       		.byte	0x5
 417 02a8 43       		.byte	0x43
 418 02a9 E0030000 		.4byte	0x3e0
 419 02ad 4402     		.2byte	0x244
 420 02af 0B       		.uleb128 0xb
 421 02b0 2D020000 		.4byte	.LASF48
 422 02b4 05       		.byte	0x5
 423 02b5 44       		.byte	0x44
 424 02b6 9E000000 		.4byte	0x9e
 425 02ba 8002     		.2byte	0x280
 426 02bc 0B       		.uleb128 0xb
 427 02bd 00020000 		.4byte	.LASF49
 428 02c1 05       		.byte	0x5
 429 02c2 45       		.byte	0x45
 430 02c3 EA030000 		.4byte	0x3ea
 431 02c7 8402     		.2byte	0x284
 432 02c9 0B       		.uleb128 0xb
 433 02ca A1050000 		.4byte	.LASF50
 434 02ce 05       		.byte	0x5
 435 02cf 46       		.byte	0x46
 436 02d0 A3000000 		.4byte	0xa3
 437 02d4 9002     		.2byte	0x290
 438 02d6 0B       		.uleb128 0xb
 439 02d7 97050000 		.4byte	.LASF51
 440 02db 05       		.byte	0x5
 441 02dc 47       		.byte	0x47
 442 02dd F4030000 		.4byte	0x3f4
 443 02e1 9402     		.2byte	0x294
 444 02e3 0B       		.uleb128 0xb
 445 02e4 1C030000 		.4byte	.LASF52
 446 02e8 05       		.byte	0x5
 447 02e9 48       		.byte	0x48
 448 02ea A3000000 		.4byte	0xa3
 449 02ee A002     		.2byte	0x2a0
 450 02f0 0B       		.uleb128 0xb
 451 02f1 D4060000 		.4byte	.LASF53
 452 02f5 05       		.byte	0x5
 453 02f6 49       		.byte	0x49
 454 02f7 A3000000 		.4byte	0xa3
 455 02fb A402     		.2byte	0x2a4
 456 02fd 0B       		.uleb128 0xb
 457 02fe 19020000 		.4byte	.LASF54
 458 0302 05       		.byte	0x5
 459 0303 4A       		.byte	0x4a
 460 0304 FE030000 		.4byte	0x3fe
 461 0308 A802     		.2byte	0x2a8
 462 030a 0B       		.uleb128 0xb
 463 030b 6E040000 		.4byte	.LASF55
 464 030f 05       		.byte	0x5
 465 0310 4B       		.byte	0x4b
 466 0311 9E000000 		.4byte	0x9e
 467 0315 0003     		.2byte	0x300
 468 0317 0B       		.uleb128 0xb
 469 0318 72020000 		.4byte	.LASF56
 470 031c 05       		.byte	0x5
 471 031d 4C       		.byte	0x4c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 38


 472 031e 9E000000 		.4byte	0x9e
 473 0322 0403     		.2byte	0x304
 474 0324 0B       		.uleb128 0xb
 475 0325 23020000 		.4byte	.LASF57
 476 0329 05       		.byte	0x5
 477 032a 4D       		.byte	0x4d
 478 032b 18040000 		.4byte	0x418
 479 032f 0803     		.2byte	0x308
 480 0331 0B       		.uleb128 0xb
 481 0332 7F000000 		.4byte	.LASF58
 482 0336 05       		.byte	0x5
 483 0337 4E       		.byte	0x4e
 484 0338 9E000000 		.4byte	0x9e
 485 033c 4003     		.2byte	0x340
 486 033e 0B       		.uleb128 0xb
 487 033f 8C040000 		.4byte	.LASF59
 488 0343 05       		.byte	0x5
 489 0344 4F       		.byte	0x4f
 490 0345 9E000000 		.4byte	0x9e
 491 0349 4403     		.2byte	0x344
 492 034b 0B       		.uleb128 0xb
 493 034c BC050000 		.4byte	.LASF60
 494 0350 05       		.byte	0x5
 495 0351 50       		.byte	0x50
 496 0352 A3000000 		.4byte	0xa3
 497 0356 4803     		.2byte	0x348
 498 0358 0B       		.uleb128 0xb
 499 0359 C7030000 		.4byte	.LASF61
 500 035d 05       		.byte	0x5
 501 035e 51       		.byte	0x51
 502 035f 33040000 		.4byte	0x433
 503 0363 4C03     		.2byte	0x34c
 504 0365 0B       		.uleb128 0xb
 505 0366 44030000 		.4byte	.LASF62
 506 036a 05       		.byte	0x5
 507 036b 52       		.byte	0x52
 508 036c 9E000000 		.4byte	0x9e
 509 0370 000F     		.2byte	0xf00
 510 0372 0B       		.uleb128 0xb
 511 0373 4E030000 		.4byte	.LASF63
 512 0377 05       		.byte	0x5
 513 0378 53       		.byte	0x53
 514 0379 9E000000 		.4byte	0x9e
 515 037d 040F     		.2byte	0xf04
 516 037f 00       		.byte	0
 517 0380 05       		.uleb128 0x5
 518 0381 A8000000 		.4byte	0xa8
 519 0385 06       		.uleb128 0x6
 520 0386 80030000 		.4byte	0x380
 521 038a 07       		.uleb128 0x7
 522 038b A3000000 		.4byte	0xa3
 523 038f 9A030000 		.4byte	0x39a
 524 0393 08       		.uleb128 0x8
 525 0394 97000000 		.4byte	0x97
 526 0398 15       		.byte	0x15
 527 0399 00       		.byte	0
 528 039a 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 39


 529 039b 8A030000 		.4byte	0x38a
 530 039f 06       		.uleb128 0x6
 531 03a0 9A030000 		.4byte	0x39a
 532 03a4 05       		.uleb128 0x5
 533 03a5 B8000000 		.4byte	0xb8
 534 03a9 05       		.uleb128 0x5
 535 03aa D8000000 		.4byte	0xd8
 536 03ae 06       		.uleb128 0x6
 537 03af A9030000 		.4byte	0x3a9
 538 03b3 05       		.uleb128 0x5
 539 03b4 D8000000 		.4byte	0xd8
 540 03b8 06       		.uleb128 0x6
 541 03b9 B3030000 		.4byte	0x3b3
 542 03bd 05       		.uleb128 0x5
 543 03be D8000000 		.4byte	0xd8
 544 03c2 06       		.uleb128 0x6
 545 03c3 BD030000 		.4byte	0x3bd
 546 03c7 05       		.uleb128 0x5
 547 03c8 D8000000 		.4byte	0xd8
 548 03cc 06       		.uleb128 0x6
 549 03cd C7030000 		.4byte	0x3c7
 550 03d1 05       		.uleb128 0x5
 551 03d2 D8000000 		.4byte	0xd8
 552 03d6 06       		.uleb128 0x6
 553 03d7 D1030000 		.4byte	0x3d1
 554 03db 05       		.uleb128 0x5
 555 03dc E8000000 		.4byte	0xe8
 556 03e0 06       		.uleb128 0x6
 557 03e1 DB030000 		.4byte	0x3db
 558 03e5 05       		.uleb128 0x5
 559 03e6 C8000000 		.4byte	0xc8
 560 03ea 06       		.uleb128 0x6
 561 03eb E5030000 		.4byte	0x3e5
 562 03ef 05       		.uleb128 0x5
 563 03f0 C8000000 		.4byte	0xc8
 564 03f4 06       		.uleb128 0x6
 565 03f5 EF030000 		.4byte	0x3ef
 566 03f9 05       		.uleb128 0x5
 567 03fa 8A030000 		.4byte	0x38a
 568 03fe 06       		.uleb128 0x6
 569 03ff F9030000 		.4byte	0x3f9
 570 0403 07       		.uleb128 0x7
 571 0404 A3000000 		.4byte	0xa3
 572 0408 13040000 		.4byte	0x413
 573 040c 08       		.uleb128 0x8
 574 040d 97000000 		.4byte	0x97
 575 0411 0D       		.byte	0xd
 576 0412 00       		.byte	0
 577 0413 05       		.uleb128 0x5
 578 0414 03040000 		.4byte	0x403
 579 0418 06       		.uleb128 0x6
 580 0419 13040000 		.4byte	0x413
 581 041d 07       		.uleb128 0x7
 582 041e A3000000 		.4byte	0xa3
 583 0422 2E040000 		.4byte	0x42e
 584 0426 0C       		.uleb128 0xc
 585 0427 97000000 		.4byte	0x97
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 40


 586 042b EC02     		.2byte	0x2ec
 587 042d 00       		.byte	0
 588 042e 05       		.uleb128 0x5
 589 042f 1D040000 		.4byte	0x41d
 590 0433 06       		.uleb128 0x6
 591 0434 2E040000 		.4byte	0x42e
 592 0438 03       		.uleb128 0x3
 593 0439 B3050000 		.4byte	.LASF64
 594 043d 05       		.byte	0x5
 595 043e 54       		.byte	0x54
 596 043f F8000000 		.4byte	0xf8
 597 0443 02       		.uleb128 0x2
 598 0444 08       		.byte	0x8
 599 0445 04       		.byte	0x4
 600 0446 97030000 		.4byte	.LASF65
 601 044a 0D       		.uleb128 0xd
 602 044b 3D030000 		.4byte	.LASF66
 603 044f 06       		.byte	0x6
 604 0450 C401     		.2byte	0x1c4
 605 0452 56040000 		.4byte	0x456
 606 0456 02       		.uleb128 0x2
 607 0457 01       		.byte	0x1
 608 0458 08       		.byte	0x8
 609 0459 9F040000 		.4byte	.LASF67
 610 045d 02       		.uleb128 0x2
 611 045e 04       		.byte	0x4
 612 045f 04       		.byte	0x4
 613 0460 4D050000 		.4byte	.LASF68
 614 0464 02       		.uleb128 0x2
 615 0465 08       		.byte	0x8
 616 0466 04       		.byte	0x4
 617 0467 AC050000 		.4byte	.LASF69
 618 046b 0E       		.uleb128 0xe
 619 046c 01       		.byte	0x1
 620 046d 33000000 		.4byte	0x33
 621 0471 02       		.byte	0x2
 622 0472 0504     		.2byte	0x405
 623 0474 91040000 		.4byte	0x491
 624 0478 0F       		.uleb128 0xf
 625 0479 3D020000 		.4byte	.LASF70
 626 047d 00       		.byte	0
 627 047e 0F       		.uleb128 0xf
 628 047f D8050000 		.4byte	.LASF71
 629 0483 01       		.byte	0x1
 630 0484 0F       		.uleb128 0xf
 631 0485 AE040000 		.4byte	.LASF72
 632 0489 02       		.byte	0x2
 633 048a 0F       		.uleb128 0xf
 634 048b 42000000 		.4byte	.LASF73
 635 048f 03       		.byte	0x3
 636 0490 00       		.byte	0
 637 0491 0D       		.uleb128 0xd
 638 0492 E6060000 		.4byte	.LASF74
 639 0496 02       		.byte	0x2
 640 0497 0A04     		.2byte	0x40a
 641 0499 6B040000 		.4byte	0x46b
 642 049d 0E       		.uleb128 0xe
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 41


 643 049e 01       		.byte	0x1
 644 049f 33000000 		.4byte	0x33
 645 04a3 02       		.byte	0x2
 646 04a4 8604     		.2byte	0x486
 647 04a6 C3040000 		.4byte	0x4c3
 648 04aa 0F       		.uleb128 0xf
 649 04ab 84020000 		.4byte	.LASF75
 650 04af 00       		.byte	0
 651 04b0 0F       		.uleb128 0xf
 652 04b1 6A000000 		.4byte	.LASF76
 653 04b5 01       		.byte	0x1
 654 04b6 0F       		.uleb128 0xf
 655 04b7 FC050000 		.4byte	.LASF77
 656 04bb 02       		.byte	0x2
 657 04bc 0F       		.uleb128 0xf
 658 04bd 2F050000 		.4byte	.LASF78
 659 04c1 04       		.byte	0x4
 660 04c2 00       		.byte	0
 661 04c3 10       		.uleb128 0x10
 662 04c4 78       		.byte	0x78
 663 04c5 02       		.byte	0x2
 664 04c6 F404     		.2byte	0x4f4
 665 04c8 90050000 		.4byte	0x590
 666 04cc 11       		.uleb128 0x11
 667 04cd 40040000 		.4byte	.LASF79
 668 04d1 02       		.byte	0x2
 669 04d2 F604     		.2byte	0x4f6
 670 04d4 8C000000 		.4byte	0x8c
 671 04d8 00       		.byte	0
 672 04d9 11       		.uleb128 0x11
 673 04da CE000000 		.4byte	.LASF80
 674 04de 02       		.byte	0x2
 675 04df F704     		.2byte	0x4f7
 676 04e1 8C000000 		.4byte	0x8c
 677 04e5 04       		.byte	0x4
 678 04e6 11       		.uleb128 0x11
 679 04e7 61040000 		.4byte	.LASF81
 680 04eb 02       		.byte	0x2
 681 04ec F804     		.2byte	0x4f8
 682 04ee 8C000000 		.4byte	0x8c
 683 04f2 08       		.byte	0x8
 684 04f3 11       		.uleb128 0x11
 685 04f4 6B060000 		.4byte	.LASF82
 686 04f8 02       		.byte	0x2
 687 04f9 F904     		.2byte	0x4f9
 688 04fb 8C000000 		.4byte	0x8c
 689 04ff 0C       		.byte	0xc
 690 0500 11       		.uleb128 0x11
 691 0501 F7000000 		.4byte	.LASF83
 692 0505 02       		.byte	0x2
 693 0506 FA04     		.2byte	0x4fa
 694 0508 8C000000 		.4byte	0x8c
 695 050c 10       		.byte	0x10
 696 050d 11       		.uleb128 0x11
 697 050e E2010000 		.4byte	.LASF84
 698 0512 02       		.byte	0x2
 699 0513 FB04     		.2byte	0x4fb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 42


 700 0515 91040000 		.4byte	0x491
 701 0519 14       		.byte	0x14
 702 051a 11       		.uleb128 0x11
 703 051b 35060000 		.4byte	.LASF85
 704 051f 02       		.byte	0x2
 705 0520 FC04     		.2byte	0x4fc
 706 0522 8C000000 		.4byte	0x8c
 707 0526 18       		.byte	0x18
 708 0527 11       		.uleb128 0x11
 709 0528 16060000 		.4byte	.LASF86
 710 052c 02       		.byte	0x2
 711 052d FD04     		.2byte	0x4fd
 712 052f 90050000 		.4byte	0x590
 713 0533 1C       		.byte	0x1c
 714 0534 11       		.uleb128 0x11
 715 0535 DD060000 		.4byte	.LASF87
 716 0539 02       		.byte	0x2
 717 053a FE04     		.2byte	0x4fe
 718 053c 8C000000 		.4byte	0x8c
 719 0540 5C       		.byte	0x5c
 720 0541 11       		.uleb128 0x11
 721 0542 77030000 		.4byte	.LASF88
 722 0546 02       		.byte	0x2
 723 0547 FF04     		.2byte	0x4ff
 724 0549 8C000000 		.4byte	0x8c
 725 054d 60       		.byte	0x60
 726 054e 11       		.uleb128 0x11
 727 054f 22040000 		.4byte	.LASF89
 728 0553 02       		.byte	0x2
 729 0554 0005     		.2byte	0x500
 730 0556 8C000000 		.4byte	0x8c
 731 055a 64       		.byte	0x64
 732 055b 11       		.uleb128 0x11
 733 055c A4040000 		.4byte	.LASF90
 734 0560 02       		.byte	0x2
 735 0561 0105     		.2byte	0x501
 736 0563 8C000000 		.4byte	0x8c
 737 0567 68       		.byte	0x68
 738 0568 11       		.uleb128 0x11
 739 0569 30040000 		.4byte	.LASF91
 740 056d 02       		.byte	0x2
 741 056e 0205     		.2byte	0x502
 742 0570 8C000000 		.4byte	0x8c
 743 0574 6C       		.byte	0x6c
 744 0575 11       		.uleb128 0x11
 745 0576 64020000 		.4byte	.LASF92
 746 057a 02       		.byte	0x2
 747 057b 0305     		.2byte	0x503
 748 057d A0050000 		.4byte	0x5a0
 749 0581 70       		.byte	0x70
 750 0582 11       		.uleb128 0x11
 751 0583 EB000000 		.4byte	.LASF93
 752 0587 02       		.byte	0x2
 753 0588 0405     		.2byte	0x504
 754 058a 8C000000 		.4byte	0x8c
 755 058e 74       		.byte	0x74
 756 058f 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 43


 757 0590 07       		.uleb128 0x7
 758 0591 8C000000 		.4byte	0x8c
 759 0595 A0050000 		.4byte	0x5a0
 760 0599 08       		.uleb128 0x8
 761 059a 97000000 		.4byte	0x97
 762 059e 0F       		.byte	0xf
 763 059f 00       		.byte	0
 764 05a0 02       		.uleb128 0x2
 765 05a1 01       		.byte	0x1
 766 05a2 02       		.byte	0x2
 767 05a3 06050000 		.4byte	.LASF94
 768 05a7 0D       		.uleb128 0xd
 769 05a8 21060000 		.4byte	.LASF95
 770 05ac 02       		.byte	0x2
 771 05ad 0505     		.2byte	0x505
 772 05af C3040000 		.4byte	0x4c3
 773 05b3 12       		.uleb128 0x12
 774 05b4 14       		.byte	0x14
 775 05b5 07       		.byte	0x7
 776 05b6 3B       		.byte	0x3b
 777 05b7 F8050000 		.4byte	0x5f8
 778 05bb 0A       		.uleb128 0xa
 779 05bc 21000000 		.4byte	.LASF96
 780 05c0 07       		.byte	0x7
 781 05c1 3D       		.byte	0x3d
 782 05c2 8C000000 		.4byte	0x8c
 783 05c6 00       		.byte	0
 784 05c7 0A       		.uleb128 0xa
 785 05c8 3C060000 		.4byte	.LASF97
 786 05cc 07       		.byte	0x7
 787 05cd 3E       		.byte	0x3e
 788 05ce 8C000000 		.4byte	0x8c
 789 05d2 04       		.byte	0x4
 790 05d3 0A       		.uleb128 0xa
 791 05d4 0C050000 		.4byte	.LASF98
 792 05d8 07       		.byte	0x7
 793 05d9 3F       		.byte	0x3f
 794 05da F8050000 		.4byte	0x5f8
 795 05de 08       		.byte	0x8
 796 05df 0A       		.uleb128 0xa
 797 05e0 A3030000 		.4byte	.LASF99
 798 05e4 07       		.byte	0x7
 799 05e5 40       		.byte	0x40
 800 05e6 8C000000 		.4byte	0x8c
 801 05ea 0C       		.byte	0xc
 802 05eb 0A       		.uleb128 0xa
 803 05ec 92000000 		.4byte	.LASF100
 804 05f0 07       		.byte	0x7
 805 05f1 45       		.byte	0x45
 806 05f2 8C000000 		.4byte	0x8c
 807 05f6 10       		.byte	0x10
 808 05f7 00       		.byte	0
 809 05f8 13       		.uleb128 0x13
 810 05f9 04       		.byte	0x4
 811 05fa FE050000 		.4byte	0x5fe
 812 05fe 06       		.uleb128 0x6
 813 05ff A7050000 		.4byte	0x5a7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 44


 814 0603 03       		.uleb128 0x3
 815 0604 D9000000 		.4byte	.LASF101
 816 0608 07       		.byte	0x7
 817 0609 48       		.byte	0x48
 818 060a B3050000 		.4byte	0x5b3
 819 060e 14       		.uleb128 0x14
 820 060f 9A020000 		.4byte	.LASF109
 821 0613 02       		.byte	0x2
 822 0614 FB05     		.2byte	0x5fb
 823 0616 8C000000 		.4byte	0x8c
 824 061a 03       		.byte	0x3
 825 061b 2C060000 		.4byte	0x62c
 826 061f 15       		.uleb128 0x15
 827 0620 2C030000 		.4byte	.LASF102
 828 0624 02       		.byte	0x2
 829 0625 FB05     		.2byte	0x5fb
 830 0627 2C060000 		.4byte	0x62c
 831 062b 00       		.byte	0
 832 062c 13       		.uleb128 0x13
 833 062d 04       		.byte	0x4
 834 062e 32060000 		.4byte	0x632
 835 0632 06       		.uleb128 0x6
 836 0633 38040000 		.4byte	0x438
 837 0637 16       		.uleb128 0x16
 838 0638 92060000 		.4byte	.LASF110
 839 063c 02       		.byte	0x2
 840 063d 1706     		.2byte	0x617
 841 063f 03       		.byte	0x3
 842 0640 5D060000 		.4byte	0x65d
 843 0644 15       		.uleb128 0x15
 844 0645 2C030000 		.4byte	.LASF102
 845 0649 02       		.byte	0x2
 846 064a 1706     		.2byte	0x617
 847 064c 5D060000 		.4byte	0x65d
 848 0650 15       		.uleb128 0x15
 849 0651 DD060000 		.4byte	.LASF87
 850 0655 02       		.byte	0x2
 851 0656 1706     		.2byte	0x617
 852 0658 8C000000 		.4byte	0x8c
 853 065c 00       		.byte	0
 854 065d 13       		.uleb128 0x13
 855 065e 04       		.byte	0x4
 856 065f 38040000 		.4byte	0x438
 857 0663 17       		.uleb128 0x17
 858 0664 8F030000 		.4byte	.LASF111
 859 0668 01       		.byte	0x1
 860 0669 40       		.byte	0x40
 861 066a 00000000 		.4byte	.LFB263
 862 066e 30000000 		.4byte	.LFE263-.LFB263
 863 0672 01       		.uleb128 0x1
 864 0673 9C       		.byte	0x9c
 865 0674 F6060000 		.4byte	0x6f6
 866 0678 18       		.uleb128 0x18
 867 0679 31030000 		.4byte	.LASF112
 868 067d 01       		.byte	0x1
 869 067e 42       		.byte	0x42
 870 067f 8C000000 		.4byte	0x8c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 45


 871 0683 19       		.uleb128 0x19
 872 0684 0E060000 		.4byte	0x60e
 873 0688 02000000 		.4byte	.LBB8
 874 068c 06000000 		.4byte	.LBE8-.LBB8
 875 0690 01       		.byte	0x1
 876 0691 45       		.byte	0x45
 877 0692 A0060000 		.4byte	0x6a0
 878 0696 1A       		.uleb128 0x1a
 879 0697 1F060000 		.4byte	0x61f
 880 069b 00000000 		.4byte	.LLST0
 881 069f 00       		.byte	0
 882 06a0 19       		.uleb128 0x19
 883 06a1 37060000 		.4byte	0x637
 884 06a5 08000000 		.4byte	.LBB10
 885 06a9 18000000 		.4byte	.LBE10-.LBB10
 886 06ad 01       		.byte	0x1
 887 06ae 55       		.byte	0x55
 888 06af DC060000 		.4byte	0x6dc
 889 06b3 1B       		.uleb128 0x1b
 890 06b4 50060000 		.4byte	0x650
 891 06b8 1A       		.uleb128 0x1a
 892 06b9 44060000 		.4byte	0x644
 893 06bd 18000000 		.4byte	.LLST1
 894 06c1 1C       		.uleb128 0x1c
 895 06c2 16000000 		.4byte	.LVL2
 896 06c6 39070000 		.4byte	0x739
 897 06ca 1D       		.uleb128 0x1d
 898 06cb 01       		.uleb128 0x1
 899 06cc 50       		.byte	0x50
 900 06cd 05       		.uleb128 0x5
 901 06ce 03       		.byte	0x3
 902 06cf 00000000 		.4byte	.LC0
 903 06d3 1D       		.uleb128 0x1d
 904 06d4 01       		.uleb128 0x1
 905 06d5 51       		.byte	0x51
 906 06d6 03       		.uleb128 0x3
 907 06d7 0A       		.byte	0xa
 908 06d8 1906     		.2byte	0x619
 909 06da 00       		.byte	0
 910 06db 00       		.byte	0
 911 06dc 1E       		.uleb128 0x1e
 912 06dd 0E060000 		.4byte	0x60e
 913 06e1 20000000 		.4byte	.LBB12
 914 06e5 10000000 		.4byte	.LBE12-.LBB12
 915 06e9 01       		.byte	0x1
 916 06ea 57       		.byte	0x57
 917 06eb 1A       		.uleb128 0x1a
 918 06ec 1F060000 		.4byte	0x61f
 919 06f0 30000000 		.4byte	.LLST2
 920 06f4 00       		.byte	0
 921 06f5 00       		.byte	0
 922 06f6 1F       		.uleb128 0x1f
 923 06f7 78060000 		.4byte	.LASF103
 924 06fb 08       		.byte	0x8
 925 06fc EA07     		.2byte	0x7ea
 926 06fe 02070000 		.4byte	0x702
 927 0702 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 46


 928 0703 81000000 		.4byte	0x81
 929 0707 1F       		.uleb128 0x1f
 930 0708 7A040000 		.4byte	.LASF104
 931 070c 07       		.byte	0x7
 932 070d 6001     		.2byte	0x160
 933 070f 8C000000 		.4byte	0x8c
 934 0713 07       		.uleb128 0x7
 935 0714 23070000 		.4byte	0x723
 936 0718 23070000 		.4byte	0x723
 937 071c 08       		.uleb128 0x8
 938 071d 97000000 		.4byte	0x97
 939 0721 00       		.byte	0
 940 0722 00       		.byte	0
 941 0723 06       		.uleb128 0x6
 942 0724 03060000 		.4byte	0x603
 943 0728 1F       		.uleb128 0x1f
 944 0729 0A020000 		.4byte	.LASF105
 945 072d 07       		.byte	0x7
 946 072e 6401     		.2byte	0x164
 947 0730 34070000 		.4byte	0x734
 948 0734 06       		.uleb128 0x6
 949 0735 13070000 		.4byte	0x713
 950 0739 20       		.uleb128 0x20
 951 073a A8060000 		.4byte	.LASF113
 952 073e A8060000 		.4byte	.LASF113
 953 0742 06       		.byte	0x6
 954 0743 2A03     		.2byte	0x32a
 955 0745 00       		.byte	0
 956              		.section	.debug_abbrev,"",%progbits
 957              	.Ldebug_abbrev0:
 958 0000 01       		.uleb128 0x1
 959 0001 11       		.uleb128 0x11
 960 0002 01       		.byte	0x1
 961 0003 25       		.uleb128 0x25
 962 0004 0E       		.uleb128 0xe
 963 0005 13       		.uleb128 0x13
 964 0006 0B       		.uleb128 0xb
 965 0007 03       		.uleb128 0x3
 966 0008 0E       		.uleb128 0xe
 967 0009 1B       		.uleb128 0x1b
 968 000a 0E       		.uleb128 0xe
 969 000b 55       		.uleb128 0x55
 970 000c 17       		.uleb128 0x17
 971 000d 11       		.uleb128 0x11
 972 000e 01       		.uleb128 0x1
 973 000f 10       		.uleb128 0x10
 974 0010 17       		.uleb128 0x17
 975 0011 00       		.byte	0
 976 0012 00       		.byte	0
 977 0013 02       		.uleb128 0x2
 978 0014 24       		.uleb128 0x24
 979 0015 00       		.byte	0
 980 0016 0B       		.uleb128 0xb
 981 0017 0B       		.uleb128 0xb
 982 0018 3E       		.uleb128 0x3e
 983 0019 0B       		.uleb128 0xb
 984 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 47


 985 001b 0E       		.uleb128 0xe
 986 001c 00       		.byte	0
 987 001d 00       		.byte	0
 988 001e 03       		.uleb128 0x3
 989 001f 16       		.uleb128 0x16
 990 0020 00       		.byte	0
 991 0021 03       		.uleb128 0x3
 992 0022 0E       		.uleb128 0xe
 993 0023 3A       		.uleb128 0x3a
 994 0024 0B       		.uleb128 0xb
 995 0025 3B       		.uleb128 0x3b
 996 0026 0B       		.uleb128 0xb
 997 0027 49       		.uleb128 0x49
 998 0028 13       		.uleb128 0x13
 999 0029 00       		.byte	0
 1000 002a 00       		.byte	0
 1001 002b 04       		.uleb128 0x4
 1002 002c 24       		.uleb128 0x24
 1003 002d 00       		.byte	0
 1004 002e 0B       		.uleb128 0xb
 1005 002f 0B       		.uleb128 0xb
 1006 0030 3E       		.uleb128 0x3e
 1007 0031 0B       		.uleb128 0xb
 1008 0032 03       		.uleb128 0x3
 1009 0033 08       		.uleb128 0x8
 1010 0034 00       		.byte	0
 1011 0035 00       		.byte	0
 1012 0036 05       		.uleb128 0x5
 1013 0037 35       		.uleb128 0x35
 1014 0038 00       		.byte	0
 1015 0039 49       		.uleb128 0x49
 1016 003a 13       		.uleb128 0x13
 1017 003b 00       		.byte	0
 1018 003c 00       		.byte	0
 1019 003d 06       		.uleb128 0x6
 1020 003e 26       		.uleb128 0x26
 1021 003f 00       		.byte	0
 1022 0040 49       		.uleb128 0x49
 1023 0041 13       		.uleb128 0x13
 1024 0042 00       		.byte	0
 1025 0043 00       		.byte	0
 1026 0044 07       		.uleb128 0x7
 1027 0045 01       		.uleb128 0x1
 1028 0046 01       		.byte	0x1
 1029 0047 49       		.uleb128 0x49
 1030 0048 13       		.uleb128 0x13
 1031 0049 01       		.uleb128 0x1
 1032 004a 13       		.uleb128 0x13
 1033 004b 00       		.byte	0
 1034 004c 00       		.byte	0
 1035 004d 08       		.uleb128 0x8
 1036 004e 21       		.uleb128 0x21
 1037 004f 00       		.byte	0
 1038 0050 49       		.uleb128 0x49
 1039 0051 13       		.uleb128 0x13
 1040 0052 2F       		.uleb128 0x2f
 1041 0053 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 48


 1042 0054 00       		.byte	0
 1043 0055 00       		.byte	0
 1044 0056 09       		.uleb128 0x9
 1045 0057 13       		.uleb128 0x13
 1046 0058 01       		.byte	0x1
 1047 0059 0B       		.uleb128 0xb
 1048 005a 05       		.uleb128 0x5
 1049 005b 3A       		.uleb128 0x3a
 1050 005c 0B       		.uleb128 0xb
 1051 005d 3B       		.uleb128 0x3b
 1052 005e 0B       		.uleb128 0xb
 1053 005f 01       		.uleb128 0x1
 1054 0060 13       		.uleb128 0x13
 1055 0061 00       		.byte	0
 1056 0062 00       		.byte	0
 1057 0063 0A       		.uleb128 0xa
 1058 0064 0D       		.uleb128 0xd
 1059 0065 00       		.byte	0
 1060 0066 03       		.uleb128 0x3
 1061 0067 0E       		.uleb128 0xe
 1062 0068 3A       		.uleb128 0x3a
 1063 0069 0B       		.uleb128 0xb
 1064 006a 3B       		.uleb128 0x3b
 1065 006b 0B       		.uleb128 0xb
 1066 006c 49       		.uleb128 0x49
 1067 006d 13       		.uleb128 0x13
 1068 006e 38       		.uleb128 0x38
 1069 006f 0B       		.uleb128 0xb
 1070 0070 00       		.byte	0
 1071 0071 00       		.byte	0
 1072 0072 0B       		.uleb128 0xb
 1073 0073 0D       		.uleb128 0xd
 1074 0074 00       		.byte	0
 1075 0075 03       		.uleb128 0x3
 1076 0076 0E       		.uleb128 0xe
 1077 0077 3A       		.uleb128 0x3a
 1078 0078 0B       		.uleb128 0xb
 1079 0079 3B       		.uleb128 0x3b
 1080 007a 0B       		.uleb128 0xb
 1081 007b 49       		.uleb128 0x49
 1082 007c 13       		.uleb128 0x13
 1083 007d 38       		.uleb128 0x38
 1084 007e 05       		.uleb128 0x5
 1085 007f 00       		.byte	0
 1086 0080 00       		.byte	0
 1087 0081 0C       		.uleb128 0xc
 1088 0082 21       		.uleb128 0x21
 1089 0083 00       		.byte	0
 1090 0084 49       		.uleb128 0x49
 1091 0085 13       		.uleb128 0x13
 1092 0086 2F       		.uleb128 0x2f
 1093 0087 05       		.uleb128 0x5
 1094 0088 00       		.byte	0
 1095 0089 00       		.byte	0
 1096 008a 0D       		.uleb128 0xd
 1097 008b 16       		.uleb128 0x16
 1098 008c 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 49


 1099 008d 03       		.uleb128 0x3
 1100 008e 0E       		.uleb128 0xe
 1101 008f 3A       		.uleb128 0x3a
 1102 0090 0B       		.uleb128 0xb
 1103 0091 3B       		.uleb128 0x3b
 1104 0092 05       		.uleb128 0x5
 1105 0093 49       		.uleb128 0x49
 1106 0094 13       		.uleb128 0x13
 1107 0095 00       		.byte	0
 1108 0096 00       		.byte	0
 1109 0097 0E       		.uleb128 0xe
 1110 0098 04       		.uleb128 0x4
 1111 0099 01       		.byte	0x1
 1112 009a 0B       		.uleb128 0xb
 1113 009b 0B       		.uleb128 0xb
 1114 009c 49       		.uleb128 0x49
 1115 009d 13       		.uleb128 0x13
 1116 009e 3A       		.uleb128 0x3a
 1117 009f 0B       		.uleb128 0xb
 1118 00a0 3B       		.uleb128 0x3b
 1119 00a1 05       		.uleb128 0x5
 1120 00a2 01       		.uleb128 0x1
 1121 00a3 13       		.uleb128 0x13
 1122 00a4 00       		.byte	0
 1123 00a5 00       		.byte	0
 1124 00a6 0F       		.uleb128 0xf
 1125 00a7 28       		.uleb128 0x28
 1126 00a8 00       		.byte	0
 1127 00a9 03       		.uleb128 0x3
 1128 00aa 0E       		.uleb128 0xe
 1129 00ab 1C       		.uleb128 0x1c
 1130 00ac 0B       		.uleb128 0xb
 1131 00ad 00       		.byte	0
 1132 00ae 00       		.byte	0
 1133 00af 10       		.uleb128 0x10
 1134 00b0 13       		.uleb128 0x13
 1135 00b1 01       		.byte	0x1
 1136 00b2 0B       		.uleb128 0xb
 1137 00b3 0B       		.uleb128 0xb
 1138 00b4 3A       		.uleb128 0x3a
 1139 00b5 0B       		.uleb128 0xb
 1140 00b6 3B       		.uleb128 0x3b
 1141 00b7 05       		.uleb128 0x5
 1142 00b8 01       		.uleb128 0x1
 1143 00b9 13       		.uleb128 0x13
 1144 00ba 00       		.byte	0
 1145 00bb 00       		.byte	0
 1146 00bc 11       		.uleb128 0x11
 1147 00bd 0D       		.uleb128 0xd
 1148 00be 00       		.byte	0
 1149 00bf 03       		.uleb128 0x3
 1150 00c0 0E       		.uleb128 0xe
 1151 00c1 3A       		.uleb128 0x3a
 1152 00c2 0B       		.uleb128 0xb
 1153 00c3 3B       		.uleb128 0x3b
 1154 00c4 05       		.uleb128 0x5
 1155 00c5 49       		.uleb128 0x49
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 50


 1156 00c6 13       		.uleb128 0x13
 1157 00c7 38       		.uleb128 0x38
 1158 00c8 0B       		.uleb128 0xb
 1159 00c9 00       		.byte	0
 1160 00ca 00       		.byte	0
 1161 00cb 12       		.uleb128 0x12
 1162 00cc 13       		.uleb128 0x13
 1163 00cd 01       		.byte	0x1
 1164 00ce 0B       		.uleb128 0xb
 1165 00cf 0B       		.uleb128 0xb
 1166 00d0 3A       		.uleb128 0x3a
 1167 00d1 0B       		.uleb128 0xb
 1168 00d2 3B       		.uleb128 0x3b
 1169 00d3 0B       		.uleb128 0xb
 1170 00d4 01       		.uleb128 0x1
 1171 00d5 13       		.uleb128 0x13
 1172 00d6 00       		.byte	0
 1173 00d7 00       		.byte	0
 1174 00d8 13       		.uleb128 0x13
 1175 00d9 0F       		.uleb128 0xf
 1176 00da 00       		.byte	0
 1177 00db 0B       		.uleb128 0xb
 1178 00dc 0B       		.uleb128 0xb
 1179 00dd 49       		.uleb128 0x49
 1180 00de 13       		.uleb128 0x13
 1181 00df 00       		.byte	0
 1182 00e0 00       		.byte	0
 1183 00e1 14       		.uleb128 0x14
 1184 00e2 2E       		.uleb128 0x2e
 1185 00e3 01       		.byte	0x1
 1186 00e4 03       		.uleb128 0x3
 1187 00e5 0E       		.uleb128 0xe
 1188 00e6 3A       		.uleb128 0x3a
 1189 00e7 0B       		.uleb128 0xb
 1190 00e8 3B       		.uleb128 0x3b
 1191 00e9 05       		.uleb128 0x5
 1192 00ea 27       		.uleb128 0x27
 1193 00eb 19       		.uleb128 0x19
 1194 00ec 49       		.uleb128 0x49
 1195 00ed 13       		.uleb128 0x13
 1196 00ee 20       		.uleb128 0x20
 1197 00ef 0B       		.uleb128 0xb
 1198 00f0 01       		.uleb128 0x1
 1199 00f1 13       		.uleb128 0x13
 1200 00f2 00       		.byte	0
 1201 00f3 00       		.byte	0
 1202 00f4 15       		.uleb128 0x15
 1203 00f5 05       		.uleb128 0x5
 1204 00f6 00       		.byte	0
 1205 00f7 03       		.uleb128 0x3
 1206 00f8 0E       		.uleb128 0xe
 1207 00f9 3A       		.uleb128 0x3a
 1208 00fa 0B       		.uleb128 0xb
 1209 00fb 3B       		.uleb128 0x3b
 1210 00fc 05       		.uleb128 0x5
 1211 00fd 49       		.uleb128 0x49
 1212 00fe 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 51


 1213 00ff 00       		.byte	0
 1214 0100 00       		.byte	0
 1215 0101 16       		.uleb128 0x16
 1216 0102 2E       		.uleb128 0x2e
 1217 0103 01       		.byte	0x1
 1218 0104 03       		.uleb128 0x3
 1219 0105 0E       		.uleb128 0xe
 1220 0106 3A       		.uleb128 0x3a
 1221 0107 0B       		.uleb128 0xb
 1222 0108 3B       		.uleb128 0x3b
 1223 0109 05       		.uleb128 0x5
 1224 010a 27       		.uleb128 0x27
 1225 010b 19       		.uleb128 0x19
 1226 010c 20       		.uleb128 0x20
 1227 010d 0B       		.uleb128 0xb
 1228 010e 01       		.uleb128 0x1
 1229 010f 13       		.uleb128 0x13
 1230 0110 00       		.byte	0
 1231 0111 00       		.byte	0
 1232 0112 17       		.uleb128 0x17
 1233 0113 2E       		.uleb128 0x2e
 1234 0114 01       		.byte	0x1
 1235 0115 3F       		.uleb128 0x3f
 1236 0116 19       		.uleb128 0x19
 1237 0117 03       		.uleb128 0x3
 1238 0118 0E       		.uleb128 0xe
 1239 0119 3A       		.uleb128 0x3a
 1240 011a 0B       		.uleb128 0xb
 1241 011b 3B       		.uleb128 0x3b
 1242 011c 0B       		.uleb128 0xb
 1243 011d 27       		.uleb128 0x27
 1244 011e 19       		.uleb128 0x19
 1245 011f 11       		.uleb128 0x11
 1246 0120 01       		.uleb128 0x1
 1247 0121 12       		.uleb128 0x12
 1248 0122 06       		.uleb128 0x6
 1249 0123 40       		.uleb128 0x40
 1250 0124 18       		.uleb128 0x18
 1251 0125 9742     		.uleb128 0x2117
 1252 0127 19       		.uleb128 0x19
 1253 0128 01       		.uleb128 0x1
 1254 0129 13       		.uleb128 0x13
 1255 012a 00       		.byte	0
 1256 012b 00       		.byte	0
 1257 012c 18       		.uleb128 0x18
 1258 012d 34       		.uleb128 0x34
 1259 012e 00       		.byte	0
 1260 012f 03       		.uleb128 0x3
 1261 0130 0E       		.uleb128 0xe
 1262 0131 3A       		.uleb128 0x3a
 1263 0132 0B       		.uleb128 0xb
 1264 0133 3B       		.uleb128 0x3b
 1265 0134 0B       		.uleb128 0xb
 1266 0135 49       		.uleb128 0x49
 1267 0136 13       		.uleb128 0x13
 1268 0137 00       		.byte	0
 1269 0138 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 52


 1270 0139 19       		.uleb128 0x19
 1271 013a 1D       		.uleb128 0x1d
 1272 013b 01       		.byte	0x1
 1273 013c 31       		.uleb128 0x31
 1274 013d 13       		.uleb128 0x13
 1275 013e 11       		.uleb128 0x11
 1276 013f 01       		.uleb128 0x1
 1277 0140 12       		.uleb128 0x12
 1278 0141 06       		.uleb128 0x6
 1279 0142 58       		.uleb128 0x58
 1280 0143 0B       		.uleb128 0xb
 1281 0144 59       		.uleb128 0x59
 1282 0145 0B       		.uleb128 0xb
 1283 0146 01       		.uleb128 0x1
 1284 0147 13       		.uleb128 0x13
 1285 0148 00       		.byte	0
 1286 0149 00       		.byte	0
 1287 014a 1A       		.uleb128 0x1a
 1288 014b 05       		.uleb128 0x5
 1289 014c 00       		.byte	0
 1290 014d 31       		.uleb128 0x31
 1291 014e 13       		.uleb128 0x13
 1292 014f 02       		.uleb128 0x2
 1293 0150 17       		.uleb128 0x17
 1294 0151 00       		.byte	0
 1295 0152 00       		.byte	0
 1296 0153 1B       		.uleb128 0x1b
 1297 0154 05       		.uleb128 0x5
 1298 0155 00       		.byte	0
 1299 0156 31       		.uleb128 0x31
 1300 0157 13       		.uleb128 0x13
 1301 0158 00       		.byte	0
 1302 0159 00       		.byte	0
 1303 015a 1C       		.uleb128 0x1c
 1304 015b 898201   		.uleb128 0x4109
 1305 015e 01       		.byte	0x1
 1306 015f 11       		.uleb128 0x11
 1307 0160 01       		.uleb128 0x1
 1308 0161 31       		.uleb128 0x31
 1309 0162 13       		.uleb128 0x13
 1310 0163 00       		.byte	0
 1311 0164 00       		.byte	0
 1312 0165 1D       		.uleb128 0x1d
 1313 0166 8A8201   		.uleb128 0x410a
 1314 0169 00       		.byte	0
 1315 016a 02       		.uleb128 0x2
 1316 016b 18       		.uleb128 0x18
 1317 016c 9142     		.uleb128 0x2111
 1318 016e 18       		.uleb128 0x18
 1319 016f 00       		.byte	0
 1320 0170 00       		.byte	0
 1321 0171 1E       		.uleb128 0x1e
 1322 0172 1D       		.uleb128 0x1d
 1323 0173 01       		.byte	0x1
 1324 0174 31       		.uleb128 0x31
 1325 0175 13       		.uleb128 0x13
 1326 0176 11       		.uleb128 0x11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 53


 1327 0177 01       		.uleb128 0x1
 1328 0178 12       		.uleb128 0x12
 1329 0179 06       		.uleb128 0x6
 1330 017a 58       		.uleb128 0x58
 1331 017b 0B       		.uleb128 0xb
 1332 017c 59       		.uleb128 0x59
 1333 017d 0B       		.uleb128 0xb
 1334 017e 00       		.byte	0
 1335 017f 00       		.byte	0
 1336 0180 1F       		.uleb128 0x1f
 1337 0181 34       		.uleb128 0x34
 1338 0182 00       		.byte	0
 1339 0183 03       		.uleb128 0x3
 1340 0184 0E       		.uleb128 0xe
 1341 0185 3A       		.uleb128 0x3a
 1342 0186 0B       		.uleb128 0xb
 1343 0187 3B       		.uleb128 0x3b
 1344 0188 05       		.uleb128 0x5
 1345 0189 49       		.uleb128 0x49
 1346 018a 13       		.uleb128 0x13
 1347 018b 3F       		.uleb128 0x3f
 1348 018c 19       		.uleb128 0x19
 1349 018d 3C       		.uleb128 0x3c
 1350 018e 19       		.uleb128 0x19
 1351 018f 00       		.byte	0
 1352 0190 00       		.byte	0
 1353 0191 20       		.uleb128 0x20
 1354 0192 2E       		.uleb128 0x2e
 1355 0193 00       		.byte	0
 1356 0194 3F       		.uleb128 0x3f
 1357 0195 19       		.uleb128 0x19
 1358 0196 3C       		.uleb128 0x3c
 1359 0197 19       		.uleb128 0x19
 1360 0198 6E       		.uleb128 0x6e
 1361 0199 0E       		.uleb128 0xe
 1362 019a 03       		.uleb128 0x3
 1363 019b 0E       		.uleb128 0xe
 1364 019c 3A       		.uleb128 0x3a
 1365 019d 0B       		.uleb128 0xb
 1366 019e 3B       		.uleb128 0x3b
 1367 019f 05       		.uleb128 0x5
 1368 01a0 00       		.byte	0
 1369 01a1 00       		.byte	0
 1370 01a2 00       		.byte	0
 1371              		.section	.debug_loc,"",%progbits
 1372              	.Ldebug_loc0:
 1373              	.LLST0:
 1374 0000 02000000 		.4byte	.LVL0
 1375 0004 08000000 		.4byte	.LVL1
 1376 0008 0600     		.2byte	0x6
 1377 000a 0C       		.byte	0xc
 1378 000b 00001D41 		.4byte	0x411d0000
 1379 000f 9F       		.byte	0x9f
 1380 0010 00000000 		.4byte	0
 1381 0014 00000000 		.4byte	0
 1382              	.LLST1:
 1383 0018 08000000 		.4byte	.LVL1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 54


 1384 001c 20000000 		.4byte	.LVL3
 1385 0020 0600     		.2byte	0x6
 1386 0022 0C       		.byte	0xc
 1387 0023 00001D41 		.4byte	0x411d0000
 1388 0027 9F       		.byte	0x9f
 1389 0028 00000000 		.4byte	0
 1390 002c 00000000 		.4byte	0
 1391              	.LLST2:
 1392 0030 20000000 		.4byte	.LVL3
 1393 0034 24000000 		.4byte	.LVL4
 1394 0038 0600     		.2byte	0x6
 1395 003a 0C       		.byte	0xc
 1396 003b 00001D41 		.4byte	0x411d0000
 1397 003f 9F       		.byte	0x9f
 1398 0040 00000000 		.4byte	0
 1399 0044 00000000 		.4byte	0
 1400              		.section	.debug_aranges,"",%progbits
 1401 0000 1C000000 		.4byte	0x1c
 1402 0004 0200     		.2byte	0x2
 1403 0006 00000000 		.4byte	.Ldebug_info0
 1404 000a 04       		.byte	0x4
 1405 000b 00       		.byte	0
 1406 000c 0000     		.2byte	0
 1407 000e 0000     		.2byte	0
 1408 0010 00000000 		.4byte	.LFB263
 1409 0014 30000000 		.4byte	.LFE263-.LFB263
 1410 0018 00000000 		.4byte	0
 1411 001c 00000000 		.4byte	0
 1412              		.section	.debug_ranges,"",%progbits
 1413              	.Ldebug_ranges0:
 1414 0000 00000000 		.4byte	.LFB263
 1415 0004 30000000 		.4byte	.LFE263
 1416 0008 00000000 		.4byte	0
 1417 000c 00000000 		.4byte	0
 1418              		.section	.debug_line,"",%progbits
 1419              	.Ldebug_line0:
 1420 0000 54020000 		.section	.debug_str,"MS",%progbits,1
 1420      02003002 
 1420      00000201 
 1420      FB0E0D00 
 1420      01010101 
 1421              	.LASF107:
 1422 0000 47656E65 		.ascii	"Generated_Source\\PSoC6\\ADC_INT.c\000"
 1422      72617465 
 1422      645F536F 
 1422      75726365 
 1422      5C50536F 
 1423              	.LASF96:
 1424 0021 6368616E 		.ascii	"channelBase\000"
 1424      6E656C42 
 1424      61736500 
 1425              	.LASF33:
 1426 002d 4348414E 		.ascii	"CHAN_RESULT_NEWVALUE\000"
 1426      5F524553 
 1426      554C545F 
 1426      4E455756 
 1426      414C5545 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 55


 1427              	.LASF73:
 1428 0042 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 1428      41525F52 
 1428      414E4745 
 1428      5F434F4E 
 1428      445F4F55 
 1429              	.LASF17:
 1430 005c 53414D50 		.ascii	"SAMPLE_TIME01\000"
 1430      4C455F54 
 1430      494D4530 
 1430      3100
 1431              	.LASF76:
 1432 006a 43595F53 		.ascii	"CY_SAR_INTR_EOS_MASK\000"
 1432      41525F49 
 1432      4E54525F 
 1432      454F535F 
 1432      4D41534B 
 1433              	.LASF58:
 1434 007f 4D55585F 		.ascii	"MUX_SWITCH_DS_CTRL\000"
 1434      53574954 
 1434      43485F44 
 1434      535F4354 
 1434      524C00
 1435              	.LASF100:
 1436 0092 636C6B44 		.ascii	"clkDivider\000"
 1436      69766964 
 1436      657200
 1437              	.LASF0:
 1438 009d 73686F72 		.ascii	"short int\000"
 1438      7420696E 
 1438      7400
 1439              	.LASF44:
 1440 00a7 52414E47 		.ascii	"RANGE_INTR_MASK\000"
 1440      455F494E 
 1440      54525F4D 
 1440      41534B00 
 1441              	.LASF13:
 1442 00b7 73697A65 		.ascii	"sizetype\000"
 1442      74797065 
 1442      00
 1443              	.LASF18:
 1444 00c0 53414D50 		.ascii	"SAMPLE_TIME23\000"
 1444      4C455F54 
 1444      494D4532 
 1444      3300
 1445              	.LASF80:
 1446 00ce 73616D70 		.ascii	"sampleCtrl\000"
 1446      6C654374 
 1446      726C00
 1447              	.LASF101:
 1448 00d9 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 1448      434F4E46 
 1448      49475F53 
 1448      54525543 
 1448      5400
 1449              	.LASF93:
 1450 00eb 76726566 		.ascii	"vrefMvValue\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 56


 1450      4D765661 
 1450      6C756500 
 1451              	.LASF83:
 1452 00f7 72616E67 		.ascii	"rangeThres\000"
 1452      65546872 
 1452      657300
 1453              	.LASF106:
 1454 0102 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1454      43313120 
 1454      352E342E 
 1454      31203230 
 1454      31363036 
 1455 0135 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 1455      20726576 
 1455      6973696F 
 1455      6E203233 
 1455      37373135 
 1456 0168 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 1456      70202D6D 
 1456      6670753D 
 1456      66707634 
 1456      2D73702D 
 1457 019b 65637469 		.ascii	"ections -ffat-lto-objects\000"
 1457      6F6E7320 
 1457      2D666661 
 1457      742D6C74 
 1457      6F2D6F62 
 1458              	.LASF6:
 1459 01b5 5F5F7569 		.ascii	"__uint32_t\000"
 1459      6E743332 
 1459      5F7400
 1460              	.LASF26:
 1461 01c0 4348414E 		.ascii	"CHAN_WORK\000"
 1461      5F574F52 
 1461      4B00
 1462              	.LASF19:
 1463 01ca 52414E47 		.ascii	"RANGE_THRES\000"
 1463      455F5448 
 1463      52455300 
 1464              	.LASF28:
 1465 01d6 4348414E 		.ascii	"CHAN_RESULT\000"
 1465      5F524553 
 1465      554C5400 
 1466              	.LASF84:
 1467 01e2 72616E67 		.ascii	"rangeCond\000"
 1467      65436F6E 
 1467      6400
 1468              	.LASF31:
 1469 01ec 4348414E 		.ascii	"CHAN_RESULT_UPDATED\000"
 1469      5F524553 
 1469      554C545F 
 1469      55504441 
 1469      54454400 
 1470              	.LASF49:
 1471 0200 52455345 		.ascii	"RESERVED6\000"
 1471      52564544 
 1471      3600
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 57


 1472              	.LASF105:
 1473 020a 4144435F 		.ascii	"ADC_allConfigs\000"
 1473      616C6C43 
 1473      6F6E6669 
 1473      677300
 1474              	.LASF54:
 1475 0219 52455345 		.ascii	"RESERVED8\000"
 1475      52564544 
 1475      3800
 1476              	.LASF57:
 1477 0223 52455345 		.ascii	"RESERVED9\000"
 1477      52564544 
 1477      3900
 1478              	.LASF48:
 1479 022d 494E4A5F 		.ascii	"INJ_CHAN_CONFIG\000"
 1479      4348414E 
 1479      5F434F4E 
 1479      46494700 
 1480              	.LASF70:
 1481 023d 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 1481      41525F52 
 1481      414E4745 
 1481      5F434F4E 
 1481      445F4245 
 1482              	.LASF43:
 1483 0255 52414E47 		.ascii	"RANGE_INTR_SET\000"
 1483      455F494E 
 1483      54525F53 
 1483      455400
 1484              	.LASF92:
 1485 0264 636F6E66 		.ascii	"configRouting\000"
 1485      6967526F 
 1485      7574696E 
 1485      6700
 1486              	.LASF56:
 1487 0272 4D55585F 		.ascii	"MUX_SWITCH_CLEAR0\000"
 1487      53574954 
 1487      43485F43 
 1487      4C454152 
 1487      3000
 1488              	.LASF75:
 1489 0284 43595F53 		.ascii	"CY_SAR_INTR_MASK_NONE\000"
 1489      41525F49 
 1489      4E54525F 
 1489      4D41534B 
 1489      5F4E4F4E 
 1490              	.LASF109:
 1491 029a 43795F53 		.ascii	"Cy_SAR_GetInterruptStatus\000"
 1491      41525F47 
 1491      6574496E 
 1491      74657272 
 1491      75707453 
 1492              	.LASF108:
 1493 02b4 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 1493      73657273 
 1493      5C636F64 
 1493      79675C67 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 58


 1493      69745C70 
 1494 02e2 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\RestEaze_BLE.cydsn\000"
 1494      54435F49 
 1494      4D552E63 
 1494      7964736E 
 1494      5C526573 
 1495              	.LASF8:
 1496 0306 6C6F6E67 		.ascii	"long long int\000"
 1496      206C6F6E 
 1496      6720696E 
 1496      7400
 1497              	.LASF21:
 1498 0314 4348414E 		.ascii	"CHAN_EN\000"
 1498      5F454E00 
 1499              	.LASF52:
 1500 031c 53544154 		.ascii	"STATUS\000"
 1500      555300
 1501              	.LASF4:
 1502 0323 6C6F6E67 		.ascii	"long int\000"
 1502      20696E74 
 1502      00
 1503              	.LASF102:
 1504 032c 62617365 		.ascii	"base\000"
 1504      00
 1505              	.LASF112:
 1506 0331 696E7472 		.ascii	"intr_status\000"
 1506      5F737461 
 1506      74757300 
 1507              	.LASF66:
 1508 033d 63686172 		.ascii	"char_t\000"
 1508      5F7400
 1509              	.LASF62:
 1510 0344 414E415F 		.ascii	"ANA_TRIM0\000"
 1510      5452494D 
 1510      3000
 1511              	.LASF63:
 1512 034e 414E415F 		.ascii	"ANA_TRIM1\000"
 1512      5452494D 
 1512      3100
 1513              	.LASF32:
 1514 0358 4348414E 		.ascii	"CHAN_WORK_NEWVALUE\000"
 1514      5F574F52 
 1514      4B5F4E45 
 1514      5756414C 
 1514      554500
 1515              	.LASF24:
 1516 036b 4348414E 		.ascii	"CHAN_CONFIG\000"
 1516      5F434F4E 
 1516      46494700 
 1517              	.LASF88:
 1518 0377 73617449 		.ascii	"satIntrMask\000"
 1518      6E74724D 
 1518      61736B00 
 1519              	.LASF37:
 1520 0383 494E5452 		.ascii	"INTR_MASKED\000"
 1520      5F4D4153 
 1520      4B454400 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 59


 1521              	.LASF111:
 1522 038f 4144435F 		.ascii	"ADC_ISR\000"
 1522      49535200 
 1523              	.LASF65:
 1524 0397 6C6F6E67 		.ascii	"long double\000"
 1524      20646F75 
 1524      626C6500 
 1525              	.LASF99:
 1526 03a3 6D697363 		.ascii	"miscConfig\000"
 1526      436F6E66 
 1526      696700
 1527              	.LASF2:
 1528 03ae 756E7369 		.ascii	"unsigned char\000"
 1528      676E6564 
 1528      20636861 
 1528      7200
 1529              	.LASF22:
 1530 03bc 53544152 		.ascii	"START_CTRL\000"
 1530      545F4354 
 1530      524C00
 1531              	.LASF61:
 1532 03c7 52455345 		.ascii	"RESERVED10\000"
 1532      52564544 
 1532      313000
 1533              	.LASF20:
 1534 03d2 52414E47 		.ascii	"RANGE_COND\000"
 1534      455F434F 
 1534      4E4400
 1535              	.LASF14:
 1536 03dd 4354524C 		.ascii	"CTRL\000"
 1536      00
 1537              	.LASF46:
 1538 03e2 494E5452 		.ascii	"INTR_CAUSE\000"
 1538      5F434155 
 1538      534500
 1539              	.LASF1:
 1540 03ed 7369676E 		.ascii	"signed char\000"
 1540      65642063 
 1540      68617200 
 1541              	.LASF35:
 1542 03f9 494E5452 		.ascii	"INTR_SET\000"
 1542      5F534554 
 1542      00
 1543              	.LASF9:
 1544 0402 6C6F6E67 		.ascii	"long long unsigned int\000"
 1544      206C6F6E 
 1544      6720756E 
 1544      7369676E 
 1544      65642069 
 1545              	.LASF12:
 1546 0419 75696E74 		.ascii	"uint32_t\000"
 1546      33325F74 
 1546      00
 1547              	.LASF89:
 1548 0422 72616E67 		.ascii	"rangeIntrMask\000"
 1548      65496E74 
 1548      724D6173 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 60


 1548      6B00
 1549              	.LASF91:
 1550 0430 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 1550      77697463 
 1550      68537143 
 1550      74726C00 
 1551              	.LASF79:
 1552 0440 6374726C 		.ascii	"ctrl\000"
 1552      00
 1553              	.LASF36:
 1554 0445 494E5452 		.ascii	"INTR_MASK\000"
 1554      5F4D4153 
 1554      4B00
 1555              	.LASF45:
 1556 044f 52414E47 		.ascii	"RANGE_INTR_MASKED\000"
 1556      455F494E 
 1556      54525F4D 
 1556      41534B45 
 1556      4400
 1557              	.LASF81:
 1558 0461 73616D70 		.ascii	"sampleTime01\000"
 1558      6C655469 
 1558      6D653031 
 1558      00
 1559              	.LASF55:
 1560 046e 4D55585F 		.ascii	"MUX_SWITCH0\000"
 1560      53574954 
 1560      43483000 
 1561              	.LASF104:
 1562 047a 4144435F 		.ascii	"ADC_currentConfig\000"
 1562      63757272 
 1562      656E7443 
 1562      6F6E6669 
 1562      6700
 1563              	.LASF59:
 1564 048c 4D55585F 		.ascii	"MUX_SWITCH_SQ_CTRL\000"
 1564      53574954 
 1564      43485F53 
 1564      515F4354 
 1564      524C00
 1565              	.LASF67:
 1566 049f 63686172 		.ascii	"char\000"
 1566      00
 1567              	.LASF90:
 1568 04a4 6D757853 		.ascii	"muxSwitch\000"
 1568      77697463 
 1568      6800
 1569              	.LASF72:
 1570 04ae 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 1570      41525F52 
 1570      414E4745 
 1570      5F434F4E 
 1570      445F4142 
 1571              	.LASF39:
 1572 04c6 53415455 		.ascii	"SATURATE_INTR_SET\000"
 1572      52415445 
 1572      5F494E54 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 61


 1572      525F5345 
 1572      5400
 1573              	.LASF11:
 1574 04d8 696E7433 		.ascii	"int32_t\000"
 1574      325F7400 
 1575              	.LASF40:
 1576 04e0 53415455 		.ascii	"SATURATE_INTR_MASK\000"
 1576      52415445 
 1576      5F494E54 
 1576      525F4D41 
 1576      534B00
 1577              	.LASF3:
 1578 04f3 73686F72 		.ascii	"short unsigned int\000"
 1578      7420756E 
 1578      7369676E 
 1578      65642069 
 1578      6E7400
 1579              	.LASF94:
 1580 0506 5F426F6F 		.ascii	"_Bool\000"
 1580      6C00
 1581              	.LASF98:
 1582 050c 6877436F 		.ascii	"hwConfigStc\000"
 1582      6E666967 
 1582      53746300 
 1583              	.LASF34:
 1584 0518 494E5452 		.ascii	"INTR\000"
 1584      00
 1585              	.LASF30:
 1586 051d 4348414E 		.ascii	"CHAN_WORK_UPDATED\000"
 1586      5F574F52 
 1586      4B5F5550 
 1586      44415445 
 1586      4400
 1587              	.LASF78:
 1588 052f 43595F53 		.ascii	"CY_SAR_INTR_FW_COLLISION_MASK\000"
 1588      41525F49 
 1588      4E54525F 
 1588      46575F43 
 1588      4F4C4C49 
 1589              	.LASF68:
 1590 054d 666C6F61 		.ascii	"float\000"
 1590      7400
 1591              	.LASF23:
 1592 0553 52455345 		.ascii	"RESERVED1\000"
 1592      52564544 
 1592      3100
 1593              	.LASF25:
 1594 055d 52455345 		.ascii	"RESERVED2\000"
 1594      52564544 
 1594      3200
 1595              	.LASF27:
 1596 0567 52455345 		.ascii	"RESERVED3\000"
 1596      52564544 
 1596      3300
 1597              	.LASF29:
 1598 0571 52455345 		.ascii	"RESERVED4\000"
 1598      52564544 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 62


 1598      3400
 1599              	.LASF47:
 1600 057b 52455345 		.ascii	"RESERVED5\000"
 1600      52564544 
 1600      3500
 1601              	.LASF7:
 1602 0585 6C6F6E67 		.ascii	"long unsigned int\000"
 1602      20756E73 
 1602      69676E65 
 1602      6420696E 
 1602      7400
 1603              	.LASF51:
 1604 0597 52455345 		.ascii	"RESERVED7\000"
 1604      52564544 
 1604      3700
 1605              	.LASF50:
 1606 05a1 494E4A5F 		.ascii	"INJ_RESULT\000"
 1606      52455355 
 1606      4C5400
 1607              	.LASF69:
 1608 05ac 646F7562 		.ascii	"double\000"
 1608      6C6500
 1609              	.LASF64:
 1610 05b3 5341525F 		.ascii	"SAR_Type\000"
 1610      54797065 
 1610      00
 1611              	.LASF60:
 1612 05bc 4D55585F 		.ascii	"MUX_SWITCH_STATUS\000"
 1612      53574954 
 1612      43485F53 
 1612      54415455 
 1612      5300
 1613              	.LASF5:
 1614 05ce 5F5F696E 		.ascii	"__int32_t\000"
 1614      7433325F 
 1614      7400
 1615              	.LASF71:
 1616 05d8 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 1616      41525F52 
 1616      414E4745 
 1616      5F434F4E 
 1616      445F494E 
 1617              	.LASF42:
 1618 05f1 52414E47 		.ascii	"RANGE_INTR\000"
 1618      455F494E 
 1618      545200
 1619              	.LASF77:
 1620 05fc 43595F53 		.ascii	"CY_SAR_INTR_OVERFLOW_MASK\000"
 1620      41525F49 
 1620      4E54525F 
 1620      4F564552 
 1620      464C4F57 
 1621              	.LASF86:
 1622 0616 6368616E 		.ascii	"chanConfig\000"
 1622      436F6E66 
 1622      696700
 1623              	.LASF95:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 63


 1624 0621 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 1624      74635F73 
 1624      61725F63 
 1624      6F6E6669 
 1624      675F7400 
 1625              	.LASF85:
 1626 0635 6368616E 		.ascii	"chanEn\000"
 1626      456E00
 1627              	.LASF97:
 1628 063c 6E756D43 		.ascii	"numChannels\000"
 1628      68616E6E 
 1628      656C7300 
 1629              	.LASF38:
 1630 0648 53415455 		.ascii	"SATURATE_INTR\000"
 1630      52415445 
 1630      5F494E54 
 1630      5200
 1631              	.LASF16:
 1632 0656 52455345 		.ascii	"RESERVED\000"
 1632      52564544 
 1632      00
 1633              	.LASF15:
 1634 065f 53414D50 		.ascii	"SAMPLE_CTRL\000"
 1634      4C455F43 
 1634      54524C00 
 1635              	.LASF82:
 1636 066b 73616D70 		.ascii	"sampleTime23\000"
 1636      6C655469 
 1636      6D653233 
 1636      00
 1637              	.LASF103:
 1638 0678 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1638      52784275 
 1638      66666572 
 1638      00
 1639              	.LASF10:
 1640 0685 756E7369 		.ascii	"unsigned int\000"
 1640      676E6564 
 1640      20696E74 
 1640      00
 1641              	.LASF110:
 1642 0692 43795F53 		.ascii	"Cy_SAR_ClearInterrupt\000"
 1642      41525F43 
 1642      6C656172 
 1642      496E7465 
 1642      72727570 
 1643              	.LASF113:
 1644 06a8 43795F53 		.ascii	"Cy_SysLib_AssertFailed\000"
 1644      79734C69 
 1644      625F4173 
 1644      73657274 
 1644      4661696C 
 1645              	.LASF41:
 1646 06bf 53415455 		.ascii	"SATURATE_INTR_MASKED\000"
 1646      52415445 
 1646      5F494E54 
 1646      525F4D41 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccRxBjDh.s 			page 64


 1646      534B4544 
 1647              	.LASF53:
 1648 06d4 4156475F 		.ascii	"AVG_STAT\000"
 1648      53544154 
 1648      00
 1649              	.LASF87:
 1650 06dd 696E7472 		.ascii	"intrMask\000"
 1650      4D61736B 
 1650      00
 1651              	.LASF74:
 1652 06e6 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 1652      6E5F7361 
 1652      725F7261 
 1652      6E67655F 
 1652      64657465 
 1653              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
