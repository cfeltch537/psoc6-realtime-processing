ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB537:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    is the industry's de facto standard.                               *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** */
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Standard includes. */
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <stdlib.h>
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <string.h>
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task.h is included from an application file. */
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* FreeRTOS includes. */
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "FreeRTOS.h"
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "task.h"
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "timers.h"
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "StackMacros.h"
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** functions but without including stdio.h here. */
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#include <stdio.h>
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * global, rather than file scope.
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define static
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	microcontroller architecture. */
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	state task. */
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			--uxTopPriority;																			\
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	being used. */
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	architecture being used. */
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																								\
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** count overflows. */
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {																									\
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** to its original value when it is released. */
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* See the comments above the definition of
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** } tskTCB;
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef tskTCB TCB_t;
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static variables must be declared volatile. */
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** accessed from a critical section. */
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint +e956 */
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /**
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is in any other state.
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * creation of the first user task.
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and its TCB deleted.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * a suspended list, etc.).
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * set to a value other than 1.
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * will exit the Blocked state.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * human readable tables of task information.
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 */
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * under the control of the scheduler.
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function - use them. */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = NULL;
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not static allocation is being used. */
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const char * const pcName,
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							void * const pvParameters,
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the TCB then the stack. */
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allocation is being used. */
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				be deleted later if required. */
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB = NULL;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxStack;
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxStack != NULL )
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it again. */
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxStack );
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = NULL;
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t x;
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	by the port. */
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		performed. */
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			break;
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xRegions;
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	updated. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				fails, but we will report the failure. */
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			so far. */
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTaskNumber++;
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then it should run now. */
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being deleted. */
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready list. */
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not return. */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTaskNumber++;
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				required. */
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task that has just been deleted. */
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been deleted. */
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			block. */
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				tick time is less than the wake time. */
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY();
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is resumed.
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				executing task. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eReturn;
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxStateList;
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eRunning;
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lists. */
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eBlocked;
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					indefinitely? */
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eSuspended;
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eBlocked;
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					all. */
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					eReturn = eDeleted;
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eReady;
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being queried. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being changed. */
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority than the calling task. */
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						raised above that of the running task? */
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but the running task must already be the highest
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					there may now be another task of higher priority that
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is ready to execute. */
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					require a yield as the running task must be above the
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new priority of the task being modified. */
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					currently using an inherited priority. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				being used for anything else. */
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						there is no need to check again and the port level
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						reset macro can be called directly. */
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				optimised task selection is not being used. */
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being suspended. */
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			suspended list. */
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is. */
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vTaskSwitchContext();
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
  28              		.loc 1 1657 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		section. */
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 0
  35 0000 0246     		mov	r2, r0
  36 0002 08B9     		cbnz	r0, .L2
  37              		.loc 1 1665 0 is_stmt 0 discriminator 1
  38              		.syntax unified
  39              	@ 1665 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
  40 0004 72B6     		 cpsid i 
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L3:
  45 0006 FEE7     		b	.L3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 31


  46              	.L2:
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  47              		.loc 1 1668 0 is_stmt 1
  48 0008 4169     		ldr	r1, [r0, #20]
  49 000a 0B4B     		ldr	r3, .L12
  50 000c 9942     		cmp	r1, r3
  51 000e 01D1     		bne	.L7
  52 0010 0123     		movs	r3, #1
  53 0012 00E0     		b	.L4
  54              	.L7:
  55 0014 0023     		movs	r3, #0
  56              	.L4:
  57              		.loc 1 1668 0 is_stmt 0 discriminator 4
  58 0016 43B1     		cbz	r3, .L8
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  59              		.loc 1 1671 0 is_stmt 1
  60 0018 926A     		ldr	r2, [r2, #40]
  61 001a 0849     		ldr	r1, .L12+4
  62 001c 8A42     		cmp	r2, r1
  63 001e 06D0     		beq	.L9
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
  64              		.loc 1 1675 0
  65 0020 02B1     		cbz	r2, .L6
  66 0022 0023     		movs	r3, #0
  67              	.L6:
  68              		.loc 1 1675 0 is_stmt 0 discriminator 4
  69 0024 2BB9     		cbnz	r3, .L11
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  70              		.loc 1 1658 0 is_stmt 1
  71 0026 0020     		movs	r0, #0
  72              	.LVL1:
  73 0028 7047     		bx	lr
  74              	.LVL2:
  75              	.L8:
  76 002a 0020     		movs	r0, #0
  77              	.LVL3:
  78 002c 7047     		bx	lr
  79              	.LVL4:
  80              	.L9:
  81 002e 0020     		movs	r0, #0
  82              	.LVL5:
  83 0030 7047     		bx	lr
  84              	.LVL6:
  85              	.L11:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
  86              		.loc 1 1677 0
  87 0032 0120     		movs	r0, #1
  88              	.LVL7:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 32


1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  89              		.loc 1 1695 0
  90 0034 7047     		bx	lr
  91              	.L13:
  92 0036 00BF     		.align	2
  93              	.L12:
  94 0038 00000000 		.word	.LANCHOR0
  95 003c 14000000 		.word	.LANCHOR0+20
  96              		.cfi_endproc
  97              	.LFE537:
  98              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
  99              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 100              		.align	2
 101              		.thumb
 102              		.thumb_func
 103              		.type	prvResetNextTaskUnblockTime, %function
 104              	prvResetNextTaskUnblockTime:
 105              	.LFB564:
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		currently executing task. */
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 33


1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						next yield. */
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 34


1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unsuspended. */
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xYieldRequired;
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskStartScheduler( void )
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 35


1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												"IDLE",
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( void * ) NULL,
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( void * ) NULL,
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		starts to run. */
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 36


1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the run time counter time base. */
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portable interface. */
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function will not return. */
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		or the timer task. */
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskEndScheduler( void )
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSuspendAll( void )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 37


1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xReturn;
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		running. */
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			processed. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 38


2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				appropriate ready list. */
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					task then a yield must be performed. */
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 39


2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					important for low power tickless implementations, where
2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					state. */
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				time. */
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						do
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							else
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							--uxPendedCounts;
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						uxPendedTicks = 0;
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 40


2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xAlreadyYielded;
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTicks = xTickCount;
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xTicks;
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTickCount;
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 41


2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t. */
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queried. */
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t x;
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cNextChar;
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mismatch. */
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Characters didn't match. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						found. */
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 42


2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxReturn != NULL )
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The handle has been found. */
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxReturn;
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t* pxTCB;
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the ready lists. */
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxQueue--;
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Found the handle. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the delayed lists. */
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 43


2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the suspended list. */
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the deleted list. */
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Ready state. */
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				do
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxQueue--;
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Blocked state. */
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 44


2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task in the Suspended state. */
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xIdleTaskHandle;
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 45


2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 1. */
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		each stepped tick. */
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended. */
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 46


2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch if preemption is turned off. */
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						is unsuspended. */
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTaskResumeAll();
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xItemValue;
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks to be unblocked. */
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		block. */
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		delayed lists if it wraps to 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 47


2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		look any further down the list. */
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( ;; )
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					to the maximum possible value so it is extremely
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unlikely that the
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					next time through. */
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be removed from the Blocked state. */
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						item value is the time at which the task at the head
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						state -	so record the item value in
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 48


2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it from the event list. */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list. */
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority that is equal to or higher than the
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						currently executing task. */
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 49


2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vApplicationTickHook();
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		++uxPendedTicks;
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		scheduler is locked. */
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationTickHook();
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xSwitchRequired;
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		getting set. */
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 50


2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 51


2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSwitchContext( void )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch. */
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 52


2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		optimised asm code. */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to this task. */
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event groups implementation. */
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	task that is not in the Blocked state. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 53


2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the task level). */
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function should not be called by application code hence the
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		can be used in place of vListInsert. */
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TIMERS */
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	called from a critical section within an ISR. */
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the delayed list, and add it to the ready list.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 54


2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxEventList is not empty. */
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pending until the scheduler is resumed. */
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should force a context switch now. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 55


2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event flags implementation. */
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the new item value in the event list. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event flags. */
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	lists. */
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		a higher priority than the calling task.  This allows
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task to know if it should force a context
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch now. */
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 56


3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				but has the same result. */
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				specified is the maximum block time then the task should block
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The tick count is greater than the time at which
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			was called. */
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 57


3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskMissedYield( void )
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = 0U;
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * -----------------------------------------------------------
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The Idle task.
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * ----------------------------------------------------------
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 58


3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) pvParameters;
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( ;; )
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			see if any other task has become available.  If we are using
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			will automatically get the processor anyway. */
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD();
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timeslice.
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskYIELD();
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allows the application designer to add background functionality
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			without the overhead of a separate task.
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationIdleHook();
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 59


3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		user defined low power mode	implementations require
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			test of the expected idle time is performed without the
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			valid. */
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					time can be sampled again, and this time its value can
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be used. */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) xTaskResumeAll();
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 60


3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupts. */
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 61


3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = NULL;
3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pvReturn;
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task. */
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	using list2. */
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 62


3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xListIsEmpty;
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		too often in the idle task. */
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( void ) xTaskResumeAll();
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				TCB_t *pxTCB;
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 63


3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being in the Blocked state. */
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xTaskResumeAll();
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		just set to whatever is passed in. */
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( eState != eInvalid )
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 64


3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask++;
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 65


3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulCount = 0U;
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulCount++;
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 66


3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the stack and TCB. */
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			check what was statically allocated before trying to free the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			memory. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be freed. */
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				only memory that must be freed. */
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing needs to be freed. */
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 106              		.loc 1 3647 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 111              		.loc 1 3650 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 67


 112 0000 094B     		ldr	r3, .L19
 113 0002 9B6A     		ldr	r3, [r3, #40]
 114 0004 1B68     		ldr	r3, [r3]
 115 0006 0BB9     		cbnz	r3, .L18
 116 0008 0123     		movs	r3, #1
 117 000a 00E0     		b	.L15
 118              	.L18:
 119 000c 0023     		movs	r3, #0
 120              	.L15:
 121              		.loc 1 3650 0 is_stmt 0 discriminator 4
 122 000e 23B1     		cbz	r3, .L16
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		there is an item in the delayed list. */
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 123              		.loc 1 3656 0 is_stmt 1
 124 0010 4FF0FF32 		mov	r2, #-1
 125 0014 044B     		ldr	r3, .L19
 126 0016 DA62     		str	r2, [r3, #44]
 127 0018 7047     		bx	lr
 128              	.L16:
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from the Blocked state. */
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 129              		.loc 1 3664 0
 130 001a 034B     		ldr	r3, .L19
 131 001c 9A6A     		ldr	r2, [r3, #40]
 132 001e D268     		ldr	r2, [r2, #12]
 133 0020 D268     		ldr	r2, [r2, #12]
 134              	.LVL8:
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 135              		.loc 1 3665 0
 136 0022 5268     		ldr	r2, [r2, #4]
 137              	.LVL9:
 138 0024 DA62     		str	r2, [r3, #44]
 139 0026 7047     		bx	lr
 140              	.L20:
 141              		.align	2
 142              	.L19:
 143 0028 00000000 		.word	.LANCHOR0
 144              		.cfi_endproc
 145              	.LFE564:
 146              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 147              		.section	.text.prvDeleteTCB,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 151              		.type	prvDeleteTCB, %function
 152              	prvDeleteTCB:
 153              	.LFB563:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 68


3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 154              		.loc 1 3593 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL10:
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
 164              		.loc 1 3611 0
 165 0004 006B     		ldr	r0, [r0, #48]
 166              	.LVL11:
 167 0006 FFF7FEFF 		bl	vPortFree
 168              	.LVL12:
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 169              		.loc 1 3612 0
 170 000a 2046     		mov	r0, r4
 171 000c FFF7FEFF 		bl	vPortFree
 172              	.LVL13:
 173 0010 10BD     		pop	{r4, pc}
 174              		.cfi_endproc
 175              	.LFE563:
 176              		.size	prvDeleteTCB, .-prvDeleteTCB
 177 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 178              		.align	2
 179              		.thumb
 180              		.thumb_func
 181              		.type	prvInitialiseNewTask, %function
 182              	prvInitialiseNewTask:
 183              	.LFB528:
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 775 0
 185              		.cfi_startproc
 186              		@ args = 16, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL14:
 189 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 190              		.cfi_def_cfa_offset 32
 191              		.cfi_offset 4, -32
 192              		.cfi_offset 5, -28
 193              		.cfi_offset 6, -24
 194              		.cfi_offset 7, -20
 195              		.cfi_offset 8, -16
 196              		.cfi_offset 9, -12
 197              		.cfi_offset 10, -8
 198              		.cfi_offset 14, -4
 199 0004 8246     		mov	r10, r0
 200 0006 8946     		mov	r9, r1
 201 0008 1546     		mov	r5, r2
 202 000a 9846     		mov	r8, r3
 203 000c 089F     		ldr	r7, [sp, #32]
 204 000e 099E     		ldr	r6, [sp, #36]
 205 0010 0A9C     		ldr	r4, [sp, #40]
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 69


 206              		.loc 1 797 0
 207 0012 9200     		lsls	r2, r2, #2
 208              	.LVL15:
 209 0014 A521     		movs	r1, #165
 210              	.LVL16:
 211 0016 206B     		ldr	r0, [r4, #48]
 212              	.LVL17:
 213 0018 FFF7FEFF 		bl	memset
 214              	.LVL18:
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 215              		.loc 1 807 0
 216 001c 236B     		ldr	r3, [r4, #48]
 217 001e 05F18042 		add	r2, r5, #1073741824
 218 0022 013A     		subs	r2, r2, #1
 219 0024 03EB8205 		add	r5, r3, r2, lsl #2
 220              	.LVL19:
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 221              		.loc 1 808 0
 222 0028 25F00705 		bic	r5, r5, #7
 223              	.LVL20:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 224              		.loc 1 827 0
 225 002c 0023     		movs	r3, #0
 226 002e 08E0     		b	.L24
 227              	.LVL21:
 228              	.L26:
 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 229              		.loc 1 829 0
 230 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 231 0034 E218     		adds	r2, r4, r3
 232 0036 82F83410 		strb	r1, [r2, #52]
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 233              		.loc 1 834 0
 234 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 235 003e 12B1     		cbz	r2, .L25
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 236              		.loc 1 827 0 discriminator 2
 237 0040 0133     		adds	r3, r3, #1
 238              	.LVL22:
 239              	.L24:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 240              		.loc 1 827 0 is_stmt 0 discriminator 1
 241 0042 0F2B     		cmp	r3, #15
 242 0044 F4D9     		bls	.L26
 243              	.L25:
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 244              		.loc 1 846 0 is_stmt 1
 245 0046 0023     		movs	r3, #0
 246              	.LVL23:
 247 0048 84F84330 		strb	r3, [r4, #67]
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 248              		.loc 1 850 0
 249 004c 132F     		cmp	r7, #19
 250 004e 00D9     		bls	.L27
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 251              		.loc 1 852 0
 252 0050 1327     		movs	r7, #19
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 70


 253              	.L27:
 254              	.LVL24:
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 255              		.loc 1 859 0
 256 0052 E762     		str	r7, [r4, #44]
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 257              		.loc 1 867 0
 258 0054 201D     		adds	r0, r4, #4
 259 0056 FFF7FEFF 		bl	vListInitialiseItem
 260              	.LVL25:
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 261              		.loc 1 868 0
 262 005a 04F11800 		add	r0, r4, #24
 263 005e FFF7FEFF 		bl	vListInitialiseItem
 264              	.LVL26:
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 265              		.loc 1 872 0
 266 0062 2461     		str	r4, [r4, #16]
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 267              		.loc 1 875 0
 268 0064 C7F11403 		rsb	r3, r7, #20
 269 0068 A361     		str	r3, [r4, #24]
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 270              		.loc 1 876 0
 271 006a 6462     		str	r4, [r4, #36]
 272              	.LVL27:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 273              		.loc 1 909 0
 274 006c 0023     		movs	r3, #0
 275 006e 06E0     		b	.L28
 276              	.LVL28:
 277              	.L29:
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 278              		.loc 1 911 0 discriminator 3
 279 0070 03F11002 		add	r2, r3, #16
 280 0074 04EB8202 		add	r2, r4, r2, lsl #2
 281 0078 0021     		movs	r1, #0
 282 007a 5160     		str	r1, [r2, #4]
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 283              		.loc 1 909 0 discriminator 3
 284 007c 0133     		adds	r3, r3, #1
 285              	.LVL29:
 286              	.L28:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 287              		.loc 1 909 0 is_stmt 0 discriminator 1
 288 007e 042B     		cmp	r3, #4
 289 0080 F6D9     		bls	.L29
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 290              		.loc 1 918 0 is_stmt 1
 291 0082 0023     		movs	r3, #0
 292              	.LVL30:
 293 0084 A365     		str	r3, [r4, #88]
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 294              		.loc 1 919 0
 295 0086 84F85C30 		strb	r3, [r4, #92]
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 296              		.loc 1 946 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 71


 297 008a 4246     		mov	r2, r8
 298 008c 5146     		mov	r1, r10
 299 008e 2846     		mov	r0, r5
 300 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 301              	.LVL31:
 302 0094 2060     		str	r0, [r4]
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 303              		.loc 1 950 0
 304 0096 06B1     		cbz	r6, .L23
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 305              		.loc 1 954 0
 306 0098 3460     		str	r4, [r6]
 307              	.L23:
 308 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 309              		.cfi_endproc
 310              	.LFE528:
 311              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 312 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 313              		.align	2
 314              		.thumb
 315              		.thumb_func
 316              		.type	prvInitialiseTaskLists, %function
 317              	prvInitialiseTaskLists:
 318              	.LFB561:
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
 319              		.loc 1 3345 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 70B5     		push	{r4, r5, r6, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 4, -16
 326              		.cfi_offset 5, -12
 327              		.cfi_offset 6, -8
 328              		.cfi_offset 14, -4
 329              	.LVL32:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 330              		.loc 1 3348 0
 331 0002 0024     		movs	r4, #0
 332 0004 07E0     		b	.L34
 333              	.LVL33:
 334              	.L35:
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 335              		.loc 1 3350 0 discriminator 3
 336 0006 04EB8402 		add	r2, r4, r4, lsl #2
 337 000a 9300     		lsls	r3, r2, #2
 338 000c 1048     		ldr	r0, .L37
 339 000e 1844     		add	r0, r0, r3
 340 0010 FFF7FEFF 		bl	vListInitialise
 341              	.LVL34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 342              		.loc 1 3348 0 discriminator 3
 343 0014 0134     		adds	r4, r4, #1
 344              	.LVL35:
 345              	.L34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 346              		.loc 1 3348 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 72


 347 0016 132C     		cmp	r4, #19
 348 0018 F5D9     		bls	.L35
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 349              		.loc 1 3353 0 is_stmt 1
 350 001a 0E4C     		ldr	r4, .L37+4
 351              	.LVL36:
 352 001c 04F5E076 		add	r6, r4, #448
 353 0020 3046     		mov	r0, r6
 354 0022 FFF7FEFF 		bl	vListInitialise
 355              	.LVL37:
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 356              		.loc 1 3354 0
 357 0026 04F5EA75 		add	r5, r4, #468
 358 002a 2846     		mov	r0, r5
 359 002c FFF7FEFF 		bl	vListInitialise
 360              	.LVL38:
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 361              		.loc 1 3355 0
 362 0030 04F11400 		add	r0, r4, #20
 363 0034 FFF7FEFF 		bl	vListInitialise
 364              	.LVL39:
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 365              		.loc 1 3359 0
 366 0038 04F5F470 		add	r0, r4, #488
 367 003c FFF7FEFF 		bl	vListInitialise
 368              	.LVL40:
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 369              		.loc 1 3365 0
 370 0040 2046     		mov	r0, r4
 371 0042 FFF7FEFF 		bl	vListInitialise
 372              	.LVL41:
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 373              		.loc 1 3371 0
 374 0046 A662     		str	r6, [r4, #40]
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 375              		.loc 1 3372 0
 376 0048 C4F8FC51 		str	r5, [r4, #508]
 377 004c 70BD     		pop	{r4, r5, r6, pc}
 378              	.L38:
 379 004e 00BF     		.align	2
 380              	.L37:
 381 0050 30000000 		.word	.LANCHOR0+48
 382 0054 00000000 		.word	.LANCHOR0
 383              		.cfi_endproc
 384              	.LFE561:
 385              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 386              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 387              		.align	2
 388              		.thumb
 389              		.thumb_func
 390              		.type	prvAddNewTaskToReadyList, %function
 391              	prvAddNewTaskToReadyList:
 392              	.LFB529:
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 393              		.loc 1 964 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 73


 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL42:
 398 0000 38B5     		push	{r3, r4, r5, lr}
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 3, -16
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 5, -8
 403              		.cfi_offset 14, -4
 404 0002 0446     		mov	r4, r0
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 405              		.loc 1 967 0
 406 0004 FFF7FEFF 		bl	vPortEnterCritical
 407              	.LVL43:
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 408              		.loc 1 969 0
 409 0008 264B     		ldr	r3, .L45
 410 000a D3F80022 		ldr	r2, [r3, #512]
 411 000e 0132     		adds	r2, r2, #1
 412 0010 C3F80022 		str	r2, [r3, #512]
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 413              		.loc 1 970 0
 414 0014 D3F80432 		ldr	r3, [r3, #516]
 415 0018 4BB9     		cbnz	r3, .L40
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 416              		.loc 1 974 0
 417 001a 224B     		ldr	r3, .L45
 418 001c C3F80442 		str	r4, [r3, #516]
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 419              		.loc 1 976 0
 420 0020 D3F80032 		ldr	r3, [r3, #512]
 421 0024 012B     		cmp	r3, #1
 422 0026 10D1     		bne	.L41
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 423              		.loc 1 981 0
 424 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 425              	.LVL44:
 426 002c 0DE0     		b	.L41
 427              	.L40:
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 428              		.loc 1 993 0
 429 002e 1D4B     		ldr	r3, .L45
 430 0030 D3F80832 		ldr	r3, [r3, #520]
 431 0034 4BB9     		cbnz	r3, .L41
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 432              		.loc 1 995 0
 433 0036 1B4B     		ldr	r3, .L45
 434 0038 D3F80432 		ldr	r3, [r3, #516]
 435 003c DA6A     		ldr	r2, [r3, #44]
 436 003e E36A     		ldr	r3, [r4, #44]
 437 0040 9A42     		cmp	r2, r3
 438 0042 02D8     		bhi	.L41
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 439              		.loc 1 997 0
 440 0044 174B     		ldr	r3, .L45
 441 0046 C3F80442 		str	r4, [r3, #516]
 442              	.L41:
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 74


 443              		.loc 1 1010 0
 444 004a 164A     		ldr	r2, .L45
 445 004c D2F80C32 		ldr	r3, [r2, #524]
 446 0050 0133     		adds	r3, r3, #1
 447 0052 C2F80C32 		str	r3, [r2, #524]
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 448              		.loc 1 1020 0
 449 0056 E36A     		ldr	r3, [r4, #44]
 450 0058 D2F81022 		ldr	r2, [r2, #528]
 451 005c 9342     		cmp	r3, r2
 452 005e 02D9     		bls	.L42
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 453              		.loc 1 1020 0 is_stmt 0 discriminator 1
 454 0060 104A     		ldr	r2, .L45
 455 0062 C2F81032 		str	r3, [r2, #528]
 456              	.L42:
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 457              		.loc 1 1020 0 discriminator 3
 458 0066 0F4D     		ldr	r5, .L45
 459 0068 05F13000 		add	r0, r5, #48
 460 006c 03EB8303 		add	r3, r3, r3, lsl #2
 461 0070 9A00     		lsls	r2, r3, #2
 462 0072 211D     		adds	r1, r4, #4
 463 0074 1044     		add	r0, r0, r2
 464 0076 FFF7FEFF 		bl	vListInsertEnd
 465              	.LVL45:
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 466              		.loc 1 1024 0 is_stmt 1 discriminator 3
 467 007a FFF7FEFF 		bl	vPortExitCritical
 468              	.LVL46:
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 469              		.loc 1 1026 0 discriminator 3
 470 007e D5F80832 		ldr	r3, [r5, #520]
 471 0082 6BB1     		cbz	r3, .L39
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 472              		.loc 1 1030 0
 473 0084 D5F80432 		ldr	r3, [r5, #516]
 474 0088 DA6A     		ldr	r2, [r3, #44]
 475 008a E36A     		ldr	r3, [r4, #44]
 476 008c 9A42     		cmp	r2, r3
 477 008e 07D2     		bcs	.L39
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 478              		.loc 1 1032 0
 479 0090 4FF08052 		mov	r2, #268435456
 480 0094 044B     		ldr	r3, .L45+4
 481 0096 1A60     		str	r2, [r3]
 482              		.syntax unified
 483              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 484 0098 BFF34F8F 		dsb
 485              	@ 0 "" 2
 486              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 487 009c BFF36F8F 		isb
 488              	@ 0 "" 2
 489              		.thumb
 490              		.syntax unified
 491              	.L39:
 492 00a0 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 75


 493              	.LVL47:
 494              	.L46:
 495 00a2 00BF     		.align	2
 496              	.L45:
 497 00a4 00000000 		.word	.LANCHOR0
 498 00a8 04ED00E0 		.word	-536810236
 499              		.cfi_endproc
 500              	.LFE529:
 501              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 502              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 503              		.align	2
 504              		.thumb
 505              		.thumb_func
 506              		.type	prvAddCurrentTaskToDelayedList, %function
 507              	prvAddCurrentTaskToDelayedList:
 508              	.LFB574:
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		individual execution thread. */
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 76


3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	being used for anything else. */
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to be moved into a new list. */
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Just inherit the priority. */
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 77


3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			be the running state task. */
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task? */
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the	holding task from the ready	list. */
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 78


3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new	ready list. */
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					running to give back the mutex. */
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This is only actually required in the corner case whereby
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					in an order different to that in which they were taken.
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a task is waiting on it or not. */
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskEnterCritical( void )
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			critical section. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 79


3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskExitCritical( void )
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portENABLE_INTERRUPTS();
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	size_t x;
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Start by copying the entire string. */
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 80


3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		printed out. */
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Terminate. */
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return the new end of string. */
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return &( pcBuffer[ x ] );
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cStatus;
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays task names, states and stack usage.
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * snprintf() implementation!).
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskList().
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 81


3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										to prevent static checking errors. */
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										cStatus = 0x00;
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				can be printed in tabular form more easily. */
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the rest of the string. */
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 82


4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * in both absolute and percentage terms.
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a full snprintf() implementation!).
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* For percentage calculations. */
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulTotalTime /= 100UL;
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Avoid divide by zero errors. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 83


4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulTotalTime > 0 )
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Write the task name to the string, padding with
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					easily. */
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 84


4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queues and semaphores. */
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxReturn;
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxCurrentTCB;
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 85


4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulReturn != 0UL )
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ulReturn;
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 86


4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				clear the value to zero. */
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				have changed. */
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			unblocked because of a timeout. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was not received. */
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 87


4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was already pending or a notification was
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				received while the task was waiting. */
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 88


4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY();
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					because it will automatically get reset to a new value when
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					earliest possible time. */
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 89


4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 90


4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction :
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 91


4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			semaphore. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 92


4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 93


4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		its notification state cleared. */
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFAIL;
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 509              		.loc 1 4704 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL48:
 514 0000 70B5     		push	{r4, r5, r6, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 4, -16
 517              		.cfi_offset 5, -12
 518              		.cfi_offset 6, -8
 519              		.cfi_offset 14, -4
 520 0002 0446     		mov	r4, r0
 521 0004 0E46     		mov	r6, r1
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTimeToWake;
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 522              		.loc 1 4706 0
 523 0006 174B     		ldr	r3, .L52
 524 0008 D3F81452 		ldr	r5, [r3, #532]
 525              	.LVL49:
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		when the task leaves the Blocked state. */
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 94


4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	as the same list item is used for both lists. */
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 526              		.loc 1 4719 0
 527 000c D3F80402 		ldr	r0, [r3, #516]
 528              	.LVL50:
 529 0010 0430     		adds	r0, r0, #4
 530 0012 FFF7FEFF 		bl	uxListRemove
 531              	.LVL51:
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 532              		.loc 1 4732 0
 533 0016 B4F1FF3F 		cmp	r4, #-1
 534 001a 07D1     		bne	.L48
 535              		.loc 1 4732 0 is_stmt 0 discriminator 1
 536 001c 36B1     		cbz	r6, .L48
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			indefinitely. */
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 537              		.loc 1 4737 0 is_stmt 1
 538 001e 1148     		ldr	r0, .L52
 539 0020 D0F80412 		ldr	r1, [r0, #516]
 540 0024 0431     		adds	r1, r1, #4
 541 0026 FFF7FEFF 		bl	vListInsertEnd
 542              	.LVL52:
 543 002a 70BD     		pop	{r4, r5, r6, pc}
 544              	.LVL53:
 545              	.L48:
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			kernel will manage it correctly. */
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 546              		.loc 1 4744 0
 547 002c 2C44     		add	r4, r4, r5
 548              	.LVL54:
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 549              		.loc 1 4747 0
 550 002e 0D4B     		ldr	r3, .L52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 95


 551 0030 D3F80432 		ldr	r3, [r3, #516]
 552 0034 5C60     		str	r4, [r3, #4]
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 553              		.loc 1 4749 0
 554 0036 A542     		cmp	r5, r4
 555 0038 08D9     		bls	.L50
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list. */
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 556              		.loc 1 4753 0
 557 003a 0A4B     		ldr	r3, .L52
 558 003c D3F8FC01 		ldr	r0, [r3, #508]
 559 0040 D3F80412 		ldr	r1, [r3, #516]
 560 0044 0431     		adds	r1, r1, #4
 561 0046 FFF7FEFF 		bl	vListInsert
 562              	.LVL55:
 563 004a 70BD     		pop	{r4, r5, r6, pc}
 564              	.LVL56:
 565              	.L50:
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 566              		.loc 1 4759 0
 567 004c 054D     		ldr	r5, .L52
 568              	.LVL57:
 569 004e A86A     		ldr	r0, [r5, #40]
 570 0050 D5F80412 		ldr	r1, [r5, #516]
 571 0054 0431     		adds	r1, r1, #4
 572 0056 FFF7FEFF 		bl	vListInsert
 573              	.LVL58:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				needs to be updated too. */
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 574              		.loc 1 4764 0
 575 005a EB6A     		ldr	r3, [r5, #44]
 576 005c 9C42     		cmp	r4, r3
 577 005e 00D2     		bcs	.L47
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 578              		.loc 1 4766 0
 579 0060 EC62     		str	r4, [r5, #44]
 580              	.L47:
 581 0062 70BD     		pop	{r4, r5, r6, pc}
 582              	.LVL59:
 583              	.L53:
 584              		.align	2
 585              	.L52:
 586 0064 00000000 		.word	.LANCHOR0
 587              		.cfi_endproc
 588              	.LFE574:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 96


 589              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 590              		.section	.text.xTaskCreate,"ax",%progbits
 591              		.align	2
 592              		.global	xTaskCreate
 593              		.thumb
 594              		.thumb_func
 595              		.type	xTaskCreate, %function
 596              	xTaskCreate:
 597              	.LFB527:
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 598              		.loc 1 682 0
 599              		.cfi_startproc
 600              		@ args = 8, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL60:
 603 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 604              		.cfi_def_cfa_offset 28
 605              		.cfi_offset 4, -28
 606              		.cfi_offset 5, -24
 607              		.cfi_offset 6, -20
 608              		.cfi_offset 7, -16
 609              		.cfi_offset 8, -12
 610              		.cfi_offset 9, -8
 611              		.cfi_offset 14, -4
 612 0004 85B0     		sub	sp, sp, #20
 613              		.cfi_def_cfa_offset 48
 614 0006 0646     		mov	r6, r0
 615 0008 0F46     		mov	r7, r1
 616 000a 1546     		mov	r5, r2
 617 000c 9846     		mov	r8, r3
 618              	.LBB18:
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 619              		.loc 1 716 0
 620 000e 9000     		lsls	r0, r2, #2
 621              	.LVL61:
 622 0010 FFF7FEFF 		bl	pvPortMalloc
 623              	.LVL62:
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 624              		.loc 1 718 0
 625 0014 60B1     		cbz	r0, .L58
 626 0016 8146     		mov	r9, r0
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 627              		.loc 1 721 0
 628 0018 6020     		movs	r0, #96
 629              	.LVL63:
 630 001a FFF7FEFF 		bl	pvPortMalloc
 631              	.LVL64:
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 632              		.loc 1 723 0
 633 001e 0446     		mov	r4, r0
 634 0020 10B1     		cbz	r0, .L56
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 635              		.loc 1 726 0
 636 0022 C0F83090 		str	r9, [r0, #48]
 637 0026 04E0     		b	.L55
 638              	.L56:
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 97


 639              		.loc 1 732 0
 640 0028 4846     		mov	r0, r9
 641              	.LVL65:
 642 002a FFF7FEFF 		bl	vPortFree
 643              	.LVL66:
 644 002e 00E0     		b	.L55
 645              	.LVL67:
 646              	.L58:
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 647              		.loc 1 737 0
 648 0030 0024     		movs	r4, #0
 649              	.LVL68:
 650              	.L55:
 651              	.LBE18:
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 652              		.loc 1 742 0
 653 0032 8CB1     		cbz	r4, .L59
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 654              		.loc 1 752 0
 655 0034 0023     		movs	r3, #0
 656 0036 0393     		str	r3, [sp, #12]
 657 0038 0294     		str	r4, [sp, #8]
 658 003a 0D9B     		ldr	r3, [sp, #52]
 659 003c 0193     		str	r3, [sp, #4]
 660 003e 0C9B     		ldr	r3, [sp, #48]
 661 0040 0093     		str	r3, [sp]
 662 0042 4346     		mov	r3, r8
 663 0044 2A46     		mov	r2, r5
 664 0046 3946     		mov	r1, r7
 665 0048 3046     		mov	r0, r6
 666 004a FFF7FEFF 		bl	prvInitialiseNewTask
 667              	.LVL69:
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 668              		.loc 1 753 0
 669 004e 2046     		mov	r0, r4
 670 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 671              	.LVL70:
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 672              		.loc 1 754 0
 673 0054 0120     		movs	r0, #1
 674 0056 01E0     		b	.L57
 675              	.LVL71:
 676              	.L59:
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 677              		.loc 1 758 0
 678 0058 4FF0FF30 		mov	r0, #-1
 679              	.L57:
 680              	.LVL72:
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 681              		.loc 1 762 0
 682 005c 05B0     		add	sp, sp, #20
 683              		.cfi_def_cfa_offset 28
 684              		@ sp needed
 685 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 686              		.cfi_endproc
 687              	.LFE527:
 688              		.size	xTaskCreate, .-xTaskCreate
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 98


 689 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 690              		.align	2
 691              		.global	vTaskDelete
 692              		.thumb
 693              		.thumb_func
 694              		.type	vTaskDelete, %function
 695              	vTaskDelete:
 696              	.LFB530:
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 697              		.loc 1 1049 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              	.LVL73:
 702 0000 70B5     		push	{r4, r5, r6, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
 708 0002 0446     		mov	r4, r0
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 709              		.loc 1 1052 0
 710 0004 FFF7FEFF 		bl	vPortEnterCritical
 711              	.LVL74:
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 712              		.loc 1 1056 0
 713 0008 14B9     		cbnz	r4, .L62
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 714              		.loc 1 1056 0 is_stmt 0 discriminator 1
 715 000a 244B     		ldr	r3, .L70
 716 000c D3F80442 		ldr	r4, [r3, #516]
 717              	.LVL75:
 718              	.L62:
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 719              		.loc 1 1059 0 is_stmt 1 discriminator 4
 720 0010 261D     		adds	r6, r4, #4
 721 0012 3046     		mov	r0, r6
 722 0014 FFF7FEFF 		bl	uxListRemove
 723              	.LVL76:
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 724              		.loc 1 1069 0 discriminator 4
 725 0018 A36A     		ldr	r3, [r4, #40]
 726 001a 1BB1     		cbz	r3, .L63
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 727              		.loc 1 1071 0
 728 001c 04F11800 		add	r0, r4, #24
 729 0020 FFF7FEFF 		bl	uxListRemove
 730              	.LVL77:
 731              	.L63:
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 732              		.loc 1 1082 0
 733 0024 1D4B     		ldr	r3, .L70
 734 0026 D3F80C22 		ldr	r2, [r3, #524]
 735 002a 0132     		adds	r2, r2, #1
 736 002c C3F80C22 		str	r2, [r3, #524]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 99


 737              		.loc 1 1084 0
 738 0030 D3F80432 		ldr	r3, [r3, #516]
 739 0034 9C42     		cmp	r4, r3
 740 0036 0BD1     		bne	.L64
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 741              		.loc 1 1091 0
 742 0038 184D     		ldr	r5, .L70
 743 003a 3146     		mov	r1, r6
 744 003c 05F5F470 		add	r0, r5, #488
 745 0040 FFF7FEFF 		bl	vListInsertEnd
 746              	.LVL78:
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 747              		.loc 1 1096 0
 748 0044 D5F81832 		ldr	r3, [r5, #536]
 749 0048 0133     		adds	r3, r3, #1
 750 004a C5F81832 		str	r3, [r5, #536]
 751 004e 0AE0     		b	.L65
 752              	.L64:
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 753              		.loc 1 1107 0
 754 0050 124A     		ldr	r2, .L70
 755 0052 D2F80032 		ldr	r3, [r2, #512]
 756 0056 013B     		subs	r3, r3, #1
 757 0058 C2F80032 		str	r3, [r2, #512]
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 758              		.loc 1 1108 0
 759 005c 2046     		mov	r0, r4
 760 005e FFF7FEFF 		bl	prvDeleteTCB
 761              	.LVL79:
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 762              		.loc 1 1112 0
 763 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 764              	.LVL80:
 765              	.L65:
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 766              		.loc 1 1117 0
 767 0066 FFF7FEFF 		bl	vPortExitCritical
 768              	.LVL81:
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 769              		.loc 1 1121 0
 770 006a 0C4B     		ldr	r3, .L70
 771 006c D3F80832 		ldr	r3, [r3, #520]
 772 0070 93B1     		cbz	r3, .L61
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 773              		.loc 1 1123 0
 774 0072 0A4B     		ldr	r3, .L70
 775 0074 D3F80432 		ldr	r3, [r3, #516]
 776 0078 9C42     		cmp	r4, r3
 777 007a 0DD1     		bne	.L61
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 778              		.loc 1 1125 0
 779 007c 074B     		ldr	r3, .L70
 780 007e D3F81C32 		ldr	r3, [r3, #540]
 781 0082 0BB1     		cbz	r3, .L67
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 782              		.loc 1 1125 0 is_stmt 0 discriminator 1
 783              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 100


 784              	@ 1125 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 785 0084 72B6     		 cpsid i 
 786              	@ 0 "" 2
 787              		.thumb
 788              		.syntax unified
 789              	.L68:
 790 0086 FEE7     		b	.L68
 791              	.L67:
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 792              		.loc 1 1126 0 is_stmt 1
 793 0088 4FF08052 		mov	r2, #268435456
 794 008c 044B     		ldr	r3, .L70+4
 795 008e 1A60     		str	r2, [r3]
 796              		.syntax unified
 797              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 798 0090 BFF34F8F 		dsb
 799              	@ 0 "" 2
 800              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 801 0094 BFF36F8F 		isb
 802              	@ 0 "" 2
 803              		.thumb
 804              		.syntax unified
 805              	.L61:
 806 0098 70BD     		pop	{r4, r5, r6, pc}
 807              	.LVL82:
 808              	.L71:
 809 009a 00BF     		.align	2
 810              	.L70:
 811 009c 00000000 		.word	.LANCHOR0
 812 00a0 04ED00E0 		.word	-536810236
 813              		.cfi_endproc
 814              	.LFE530:
 815              		.size	vTaskDelete, .-vTaskDelete
 816              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 817              		.align	2
 818              		.global	uxTaskPriorityGet
 819              		.thumb
 820              		.thumb_func
 821              		.type	uxTaskPriorityGet, %function
 822              	uxTaskPriorityGet:
 823              	.LFB533:
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 824              		.loc 1 1341 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL83:
 829 0000 10B5     		push	{r4, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833 0002 0446     		mov	r4, r0
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 834              		.loc 1 1345 0
 835 0004 FFF7FEFF 		bl	vPortEnterCritical
 836              	.LVL84:
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 101


 837              		.loc 1 1349 0
 838 0008 14B9     		cbnz	r4, .L73
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 839              		.loc 1 1349 0 is_stmt 0 discriminator 1
 840 000a 044B     		ldr	r3, .L75
 841 000c D3F80442 		ldr	r4, [r3, #516]
 842              	.LVL85:
 843              	.L73:
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 844              		.loc 1 1350 0 is_stmt 1 discriminator 4
 845 0010 E46A     		ldr	r4, [r4, #44]
 846              	.LVL86:
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 847              		.loc 1 1352 0 discriminator 4
 848 0012 FFF7FEFF 		bl	vPortExitCritical
 849              	.LVL87:
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 850              		.loc 1 1355 0 discriminator 4
 851 0016 2046     		mov	r0, r4
 852 0018 10BD     		pop	{r4, pc}
 853              	.LVL88:
 854              	.L76:
 855 001a 00BF     		.align	2
 856              	.L75:
 857 001c 00000000 		.word	.LANCHOR0
 858              		.cfi_endproc
 859              	.LFE533:
 860              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 861              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 862              		.align	2
 863              		.global	uxTaskPriorityGetFromISR
 864              		.thumb
 865              		.thumb_func
 866              		.type	uxTaskPriorityGetFromISR, %function
 867              	uxTaskPriorityGetFromISR:
 868              	.LFB534:
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 869              		.loc 1 1363 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL89:
 874 0000 10B5     		push	{r4, lr}
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 4, -8
 877              		.cfi_offset 14, -4
 878 0002 0446     		mov	r4, r0
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 879              		.loc 1 1383 0
 880 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 881              	.LVL90:
 882              	.LBB19:
 883              	.LBB20:
 884              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     All rights reserved
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 102


   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 103


  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** */
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  */
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR        char
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT       float
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE      double
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG        long
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT       short
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE  uint32_t
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE   long
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint16_t TickType_t;
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffff
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #else
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint32_t TickType_t;
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     not need to be guarded with a critical section. */
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC 1
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH              ( -1 )
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS            ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT            8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 104


 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD()                                                            \
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {                                                                              \
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Set a PendSV to request a context switch. */                            \
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;                            \
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****                                                                                \
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Barriers are normally not required but do ensure the code is completely \
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     within the specified behaviour for the architecture. */                    \
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "dsb" );                                                   \
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "isb" );                                                   \
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }                                                                              \
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG         ( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT        ( 1UL << 28UL )
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )       portEND_SWITCHING_ISR( x )
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()       ulPortRaiseBASEPRI()
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)    vPortSetBASEPRI(x)
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                __asm volatile   ( " cpsid i " )
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                 __asm volatile   ( " cpsie i " )
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()                    vPortEnterCritical()
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()                     vPortExitCritical()
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site. */
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()     vPortValidateInterruptPriority()
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE    __inline
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portFORCE_INLINE inline __attribute__(( always_inline))
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 105


 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdFALSE;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     else
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdTRUE;
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 191:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return xReturn;
 192:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 193:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 195:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 197:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 198:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 199:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 200:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 201:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %0, %1                                                 \n" \
 202:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %0                                            \n" \
 203:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 204:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 205:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 206:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 207:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 208:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 209:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 211:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 213:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 885              		.loc 2 215 0
 886              		.syntax unified
 887              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 888 0008 EFF31183 		    mrs r3, basepri                                            
 889 000c 4FF02F02 	    mov r2, #47                                                 
 890 0010 82F31188 	    msr basepri, r2                                            
 891 0014 BFF36F8F 	    isb                                                        
 892 0018 BFF34F8F 	    dsb                                                        
 893              	
 894              	@ 0 "" 2
 895              		.thumb
 896              		.syntax unified
 897              	.LBE20:
 898              	.LBE19:
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 899              		.loc 1 1389 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 106


 900 001c 14B9     		cbnz	r4, .L78
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 901              		.loc 1 1389 0 is_stmt 0 discriminator 1
 902 001e 034A     		ldr	r2, .L80
 903 0020 D2F80442 		ldr	r4, [r2, #516]
 904              	.LVL91:
 905              	.L78:
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 906              		.loc 1 1390 0 is_stmt 1 discriminator 4
 907 0024 E06A     		ldr	r0, [r4, #44]
 908              	.LVL92:
 909              	.LBB21:
 910              	.LBB22:
 216:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 217:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mrs %0, basepri                                            \n" \
 218:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %1, %2                                                 \n" \
 219:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %1                                            \n" \
 220:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 221:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 222:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY
 223:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 224:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 225:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* This return will not be reached but is necessary to prevent compiler
 226:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     warnings. */
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return ulOriginalBASEPRI;
 228:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 229:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 231:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 233:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 911              		.loc 2 233 0 discriminator 4
 912              		.syntax unified
 913              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 914 0026 83F31188 		    msr basepri, r3  
 915              	@ 0 "" 2
 916              	.LVL93:
 917              		.thumb
 918              		.syntax unified
 919              	.LBE22:
 920              	.LBE21:
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 921              		.loc 1 1395 0 discriminator 4
 922 002a 10BD     		pop	{r4, pc}
 923              	.LVL94:
 924              	.L81:
 925              		.align	2
 926              	.L80:
 927 002c 00000000 		.word	.LANCHOR0
 928              		.cfi_endproc
 929              	.LFE534:
 930              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 931              		.section	.text.vTaskPrioritySet,"ax",%progbits
 932              		.align	2
 933              		.global	vTaskPrioritySet
 934              		.thumb
 935              		.thumb_func
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 107


 936              		.type	vTaskPrioritySet, %function
 937              	vTaskPrioritySet:
 938              	.LFB535:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 939              		.loc 1 1403 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL95:
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 944              		.loc 1 1408 0
 945 0000 1329     		cmp	r1, #19
 946 0002 01D9     		bls	.L83
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 947              		.loc 1 1408 0 is_stmt 0 discriminator 1
 948              		.syntax unified
 949              	@ 1408 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 950 0004 72B6     		 cpsid i 
 951              	@ 0 "" 2
 952              		.thumb
 953              		.syntax unified
 954              	.L84:
 955 0006 FEE7     		b	.L84
 956              	.L83:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 957              		.loc 1 1403 0 is_stmt 1
 958 0008 70B5     		push	{r4, r5, r6, lr}
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 000a 0446     		mov	r4, r0
 965 000c 0D46     		mov	r5, r1
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 966              		.loc 1 1411 0
 967 000e 1329     		cmp	r1, #19
 968 0010 00D9     		bls	.L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 969              		.loc 1 1413 0
 970 0012 1325     		movs	r5, #19
 971              	.L85:
 972              	.LVL96:
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 973              		.loc 1 1420 0
 974 0014 FFF7FEFF 		bl	vPortEnterCritical
 975              	.LVL97:
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976              		.loc 1 1424 0
 977 0018 14B9     		cbnz	r4, .L86
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 978              		.loc 1 1424 0 is_stmt 0 discriminator 1
 979 001a 2A4B     		ldr	r3, .L100
 980 001c D3F80442 		ldr	r4, [r3, #516]
 981              	.LVL98:
 982              	.L86:
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 108


 983              		.loc 1 1434 0 is_stmt 1 discriminator 4
 984 0020 E36A     		ldr	r3, [r4, #44]
 985              	.LVL99:
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 986              		.loc 1 1438 0 discriminator 4
 987 0022 9D42     		cmp	r5, r3
 988 0024 4AD0     		beq	.L87
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 989              		.loc 1 1442 0
 990 0026 0CD9     		bls	.L88
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 991              		.loc 1 1444 0
 992 0028 264A     		ldr	r2, .L100
 993 002a D2F80422 		ldr	r2, [r2, #516]
 994 002e 9442     		cmp	r4, r2
 995 0030 0ED0     		beq	.L95
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 996              		.loc 1 1449 0
 997 0032 244A     		ldr	r2, .L100
 998 0034 D2F80422 		ldr	r2, [r2, #516]
 999 0038 D26A     		ldr	r2, [r2, #44]
 1000 003a 9542     		cmp	r5, r2
 1001 003c 0AD2     		bcs	.L96
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1002              		.loc 1 1406 0
 1003 003e 0026     		movs	r6, #0
 1004 0040 0BE0     		b	.L89
 1005              	.L88:
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1006              		.loc 1 1465 0
 1007 0042 204A     		ldr	r2, .L100
 1008 0044 D2F80422 		ldr	r2, [r2, #516]
 1009 0048 9442     		cmp	r4, r2
 1010 004a 05D0     		beq	.L97
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1011              		.loc 1 1406 0
 1012 004c 0026     		movs	r6, #0
 1013 004e 04E0     		b	.L89
 1014              	.L95:
 1015 0050 0026     		movs	r6, #0
 1016 0052 02E0     		b	.L89
 1017              	.L96:
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1018              		.loc 1 1451 0
 1019 0054 0126     		movs	r6, #1
 1020 0056 00E0     		b	.L89
 1021              	.L97:
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1022              		.loc 1 1470 0
 1023 0058 0126     		movs	r6, #1
 1024              	.L89:
 1025              	.LVL100:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1026              		.loc 1 1502 0
 1027 005a E562     		str	r5, [r4, #44]
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1028              		.loc 1 1508 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 109


 1029 005c A269     		ldr	r2, [r4, #24]
 1030 005e 002A     		cmp	r2, #0
 1031 0060 02DB     		blt	.L90
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1032              		.loc 1 1510 0
 1033 0062 C5F11405 		rsb	r5, r5, #20
 1034              	.LVL101:
 1035 0066 A561     		str	r5, [r4, #24]
 1036              	.L90:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1037              		.loc 1 1521 0
 1038 0068 6169     		ldr	r1, [r4, #20]
 1039 006a 03EB8303 		add	r3, r3, r3, lsl #2
 1040              	.LVL102:
 1041 006e 9A00     		lsls	r2, r3, #2
 1042 0070 154B     		ldr	r3, .L100+4
 1043 0072 1A44     		add	r2, r2, r3
 1044 0074 9142     		cmp	r1, r2
 1045 0076 01D1     		bne	.L98
 1046 0078 0123     		movs	r3, #1
 1047 007a 00E0     		b	.L91
 1048              	.L98:
 1049 007c 0023     		movs	r3, #0
 1050              	.L91:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1051              		.loc 1 1521 0 is_stmt 0 discriminator 4
 1052 007e A3B1     		cbz	r3, .L92
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1053              		.loc 1 1526 0 is_stmt 1
 1054 0080 251D     		adds	r5, r4, #4
 1055 0082 2846     		mov	r0, r5
 1056 0084 FFF7FEFF 		bl	uxListRemove
 1057              	.LVL103:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1058              		.loc 1 1537 0
 1059 0088 E36A     		ldr	r3, [r4, #44]
 1060 008a 0E4A     		ldr	r2, .L100
 1061 008c D2F81022 		ldr	r2, [r2, #528]
 1062 0090 9342     		cmp	r3, r2
 1063 0092 02D9     		bls	.L93
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1064              		.loc 1 1537 0 is_stmt 0 discriminator 1
 1065 0094 0B4A     		ldr	r2, .L100
 1066 0096 C2F81032 		str	r3, [r2, #528]
 1067              	.L93:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1068              		.loc 1 1537 0 discriminator 3
 1069 009a 03EB8303 		add	r3, r3, r3, lsl #2
 1070 009e 9A00     		lsls	r2, r3, #2
 1071 00a0 2946     		mov	r1, r5
 1072 00a2 0948     		ldr	r0, .L100+4
 1073 00a4 1044     		add	r0, r0, r2
 1074 00a6 FFF7FEFF 		bl	vListInsertEnd
 1075              	.LVL104:
 1076              	.L92:
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1077              		.loc 1 1544 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 110


 1078 00aa 3EB1     		cbz	r6, .L87
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1079              		.loc 1 1546 0
 1080 00ac 4FF08052 		mov	r2, #268435456
 1081 00b0 064B     		ldr	r3, .L100+8
 1082 00b2 1A60     		str	r2, [r3]
 1083              		.syntax unified
 1084              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1085 00b4 BFF34F8F 		dsb
 1086              	@ 0 "" 2
 1087              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1088 00b8 BFF36F8F 		isb
 1089              	@ 0 "" 2
 1090              	.LVL105:
 1091              		.thumb
 1092              		.syntax unified
 1093              	.L87:
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1094              		.loc 1 1558 0
 1095 00bc FFF7FEFF 		bl	vPortExitCritical
 1096              	.LVL106:
 1097 00c0 70BD     		pop	{r4, r5, r6, pc}
 1098              	.LVL107:
 1099              	.L101:
 1100 00c2 00BF     		.align	2
 1101              	.L100:
 1102 00c4 00000000 		.word	.LANCHOR0
 1103 00c8 30000000 		.word	.LANCHOR0+48
 1104 00cc 04ED00E0 		.word	-536810236
 1105              		.cfi_endproc
 1106              	.LFE535:
 1107              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1108              		.section	.text.vTaskResume,"ax",%progbits
 1109              		.align	2
 1110              		.global	vTaskResume
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	vTaskResume, %function
 1114              	vTaskResume:
 1115              	.LFB538:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1116              		.loc 1 1703 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              	.LVL108:
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1121              		.loc 1 1707 0
 1122 0000 08B9     		cbnz	r0, .L103
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1123              		.loc 1 1707 0 is_stmt 0 discriminator 1
 1124              		.syntax unified
 1125              	@ 1707 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1126 0002 72B6     		 cpsid i 
 1127              	@ 0 "" 2
 1128              		.thumb
 1129              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 111


 1130              	.L104:
 1131 0004 FEE7     		b	.L104
 1132              	.L103:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1133              		.loc 1 1703 0 is_stmt 1
 1134 0006 70B5     		push	{r4, r5, r6, lr}
 1135              		.cfi_def_cfa_offset 16
 1136              		.cfi_offset 4, -16
 1137              		.cfi_offset 5, -12
 1138              		.cfi_offset 6, -8
 1139              		.cfi_offset 14, -4
 1140 0008 0446     		mov	r4, r0
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1141              		.loc 1 1711 0
 1142 000a 88B3     		cbz	r0, .L102
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1143              		.loc 1 1711 0 is_stmt 0 discriminator 1
 1144 000c 194B     		ldr	r3, .L109
 1145 000e D3F80432 		ldr	r3, [r3, #516]
 1146 0012 9842     		cmp	r0, r3
 1147 0014 2CD0     		beq	.L102
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1148              		.loc 1 1713 0 is_stmt 1
 1149 0016 FFF7FEFF 		bl	vPortEnterCritical
 1150              	.LVL109:
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1151              		.loc 1 1715 0
 1152 001a 2046     		mov	r0, r4
 1153 001c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1154              	.LVL110:
 1155 0020 20B3     		cbz	r0, .L106
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1156              		.loc 1 1721 0
 1157 0022 261D     		adds	r6, r4, #4
 1158 0024 3046     		mov	r0, r6
 1159 0026 FFF7FEFF 		bl	uxListRemove
 1160              	.LVL111:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1161              		.loc 1 1722 0
 1162 002a E36A     		ldr	r3, [r4, #44]
 1163 002c 114A     		ldr	r2, .L109
 1164 002e D2F81022 		ldr	r2, [r2, #528]
 1165 0032 9342     		cmp	r3, r2
 1166 0034 02D9     		bls	.L107
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1167              		.loc 1 1722 0 is_stmt 0 discriminator 1
 1168 0036 0F4A     		ldr	r2, .L109
 1169 0038 C2F81032 		str	r3, [r2, #528]
 1170              	.L107:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1171              		.loc 1 1722 0 discriminator 3
 1172 003c 0D4D     		ldr	r5, .L109
 1173 003e 05F13000 		add	r0, r5, #48
 1174 0042 03EB8303 		add	r3, r3, r3, lsl #2
 1175 0046 9A00     		lsls	r2, r3, #2
 1176 0048 3146     		mov	r1, r6
 1177 004a 1044     		add	r0, r0, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 112


 1178 004c FFF7FEFF 		bl	vListInsertEnd
 1179              	.LVL112:
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1180              		.loc 1 1725 0 is_stmt 1 discriminator 3
 1181 0050 E26A     		ldr	r2, [r4, #44]
 1182 0052 D5F80432 		ldr	r3, [r5, #516]
 1183 0056 DB6A     		ldr	r3, [r3, #44]
 1184 0058 9A42     		cmp	r2, r3
 1185 005a 07D3     		bcc	.L106
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1186              		.loc 1 1730 0
 1187 005c 4FF08052 		mov	r2, #268435456
 1188 0060 054B     		ldr	r3, .L109+4
 1189 0062 1A60     		str	r2, [r3]
 1190              		.syntax unified
 1191              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1192 0064 BFF34F8F 		dsb
 1193              	@ 0 "" 2
 1194              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1195 0068 BFF36F8F 		isb
 1196              	@ 0 "" 2
 1197              		.thumb
 1198              		.syntax unified
 1199              	.L106:
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1200              		.loc 1 1742 0
 1201 006c FFF7FEFF 		bl	vPortExitCritical
 1202              	.LVL113:
 1203              	.L102:
 1204 0070 70BD     		pop	{r4, r5, r6, pc}
 1205              	.LVL114:
 1206              	.L110:
 1207 0072 00BF     		.align	2
 1208              	.L109:
 1209 0074 00000000 		.word	.LANCHOR0
 1210 0078 04ED00E0 		.word	-536810236
 1211              		.cfi_endproc
 1212              	.LFE538:
 1213              		.size	vTaskResume, .-vTaskResume
 1214              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1215              		.align	2
 1216              		.global	xTaskResumeFromISR
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	xTaskResumeFromISR, %function
 1220              	xTaskResumeFromISR:
 1221              	.LFB539:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1222              		.loc 1 1757 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL115:
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1227              		.loc 1 1762 0
 1228 0000 08B9     		cbnz	r0, .L112
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 113


 1229              		.loc 1 1762 0 is_stmt 0 discriminator 1
 1230              		.syntax unified
 1231              	@ 1762 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1232 0002 72B6     		 cpsid i 
 1233              	@ 0 "" 2
 1234              		.thumb
 1235              		.syntax unified
 1236              	.L113:
 1237 0004 FEE7     		b	.L113
 1238              	.L112:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1239              		.loc 1 1757 0 is_stmt 1
 1240 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1241              		.cfi_def_cfa_offset 24
 1242              		.cfi_offset 3, -24
 1243              		.cfi_offset 4, -20
 1244              		.cfi_offset 5, -16
 1245              		.cfi_offset 6, -12
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0008 0446     		mov	r4, r0
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1249              		.loc 1 1780 0
 1250 000a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1251              	.LVL116:
 1252              	.LBB23:
 1253              	.LBB24:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 1254              		.loc 2 215 0
 1255              		.syntax unified
 1256              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1257 000e EFF31187 		    mrs r7, basepri                                            
 1258 0012 4FF02F03 	    mov r3, #47                                                 
 1259 0016 83F31188 	    msr basepri, r3                                            
 1260 001a BFF36F8F 	    isb                                                        
 1261 001e BFF34F8F 	    dsb                                                        
 1262              	
 1263              	@ 0 "" 2
 1264              		.thumb
 1265              		.syntax unified
 1266              	.LBE24:
 1267              	.LBE23:
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1268              		.loc 1 1784 0
 1269 0022 2046     		mov	r0, r4
 1270 0024 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1271              	.LVL117:
 1272 0028 50B3     		cbz	r0, .L118
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1273              		.loc 1 1789 0
 1274 002a 184B     		ldr	r3, .L121
 1275 002c D3F81C32 		ldr	r3, [r3, #540]
 1276 0030 FBB9     		cbnz	r3, .L115
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1277              		.loc 1 1793 0
 1278 0032 E26A     		ldr	r2, [r4, #44]
 1279 0034 154B     		ldr	r3, .L121
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 114


 1280 0036 D3F80432 		ldr	r3, [r3, #516]
 1281 003a DB6A     		ldr	r3, [r3, #44]
 1282 003c 9A42     		cmp	r2, r3
 1283 003e 01D2     		bcs	.L119
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1284              		.loc 1 1758 0
 1285 0040 0025     		movs	r5, #0
 1286 0042 00E0     		b	.L116
 1287              	.L119:
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1288              		.loc 1 1795 0
 1289 0044 0125     		movs	r5, #1
 1290              	.L116:
 1291              	.LVL118:
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1292              		.loc 1 1802 0
 1293 0046 261D     		adds	r6, r4, #4
 1294 0048 3046     		mov	r0, r6
 1295 004a FFF7FEFF 		bl	uxListRemove
 1296              	.LVL119:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1297              		.loc 1 1803 0
 1298 004e E36A     		ldr	r3, [r4, #44]
 1299 0050 0E4A     		ldr	r2, .L121
 1300 0052 D2F81022 		ldr	r2, [r2, #528]
 1301 0056 9342     		cmp	r3, r2
 1302 0058 02D9     		bls	.L117
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1303              		.loc 1 1803 0 is_stmt 0 discriminator 1
 1304 005a 0C4A     		ldr	r2, .L121
 1305 005c C2F81032 		str	r3, [r2, #528]
 1306              	.L117:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1307              		.loc 1 1803 0 discriminator 3
 1308 0060 03EB8303 		add	r3, r3, r3, lsl #2
 1309 0064 9A00     		lsls	r2, r3, #2
 1310 0066 3146     		mov	r1, r6
 1311 0068 0948     		ldr	r0, .L121+4
 1312 006a 1044     		add	r0, r0, r2
 1313 006c FFF7FEFF 		bl	vListInsertEnd
 1314              	.LVL120:
 1315 0070 07E0     		b	.L114
 1316              	.LVL121:
 1317              	.L115:
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1318              		.loc 1 1810 0 is_stmt 1
 1319 0072 04F11801 		add	r1, r4, #24
 1320 0076 0748     		ldr	r0, .L121+8
 1321 0078 FFF7FEFF 		bl	vListInsertEnd
 1322              	.LVL122:
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1323              		.loc 1 1758 0
 1324 007c 0025     		movs	r5, #0
 1325 007e 00E0     		b	.L114
 1326              	.L118:
 1327 0080 0025     		movs	r5, #0
 1328              	.LVL123:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 115


 1329              	.L114:
 1330              	.LBB25:
 1331              	.LBB26:
 1332              		.loc 2 233 0
 1333              		.syntax unified
 1334              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1335 0082 87F31188 		    msr basepri, r7  
 1336              	@ 0 "" 2
 1337              	.LVL124:
 1338              		.thumb
 1339              		.syntax unified
 1340              	.LBE26:
 1341              	.LBE25:
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1342              		.loc 1 1821 0
 1343 0086 2846     		mov	r0, r5
 1344 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1345              	.LVL125:
 1346              	.L122:
 1347 008a 00BF     		.align	2
 1348              	.L121:
 1349 008c 00000000 		.word	.LANCHOR0
 1350 0090 30000000 		.word	.LANCHOR0+48
 1351 0094 14000000 		.word	.LANCHOR0+20
 1352              		.cfi_endproc
 1353              	.LFE539:
 1354              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1355              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1356              		.align	2
 1357              		.global	vTaskStartScheduler
 1358              		.thumb
 1359              		.thumb_func
 1360              		.type	vTaskStartScheduler, %function
 1361              	vTaskStartScheduler:
 1362              	.LFB540:
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 1363              		.loc 1 1827 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367 0000 00B5     		push	{lr}
 1368              		.cfi_def_cfa_offset 4
 1369              		.cfi_offset 14, -4
 1370 0002 83B0     		sub	sp, sp, #12
 1371              		.cfi_def_cfa_offset 16
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1372              		.loc 1 1860 0
 1373 0004 124B     		ldr	r3, .L129
 1374 0006 0193     		str	r3, [sp, #4]
 1375 0008 0023     		movs	r3, #0
 1376 000a 0093     		str	r3, [sp]
 1377 000c 8022     		movs	r2, #128
 1378 000e 1149     		ldr	r1, .L129+4
 1379 0010 1148     		ldr	r0, .L129+8
 1380 0012 FFF7FEFF 		bl	xTaskCreate
 1381              	.LVL126:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 116


 1382              		.loc 1 1870 0
 1383 0016 0128     		cmp	r0, #1
 1384 0018 01D1     		bne	.L124
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1385              		.loc 1 1872 0
 1386 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1387              	.LVL127:
 1388              	.L124:
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1389              		.loc 1 1881 0
 1390 001e 0128     		cmp	r0, #1
 1391 0020 0DD1     		bne	.L125
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1392              		.loc 1 1888 0
 1393              		.syntax unified
 1394              	@ 1888 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1395 0022 72B6     		 cpsid i 
 1396              	@ 0 "" 2
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1397              		.loc 1 1898 0
 1398              		.thumb
 1399              		.syntax unified
 1400 0024 0D4B     		ldr	r3, .L129+12
 1401 0026 4FF0FF32 		mov	r2, #-1
 1402 002a DA62     		str	r2, [r3, #44]
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1403              		.loc 1 1899 0
 1404 002c 0122     		movs	r2, #1
 1405 002e C3F80822 		str	r2, [r3, #520]
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1406              		.loc 1 1900 0
 1407 0032 0022     		movs	r2, #0
 1408 0034 C3F81422 		str	r2, [r3, #532]
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1409              		.loc 1 1909 0
 1410 0038 FFF7FEFF 		bl	xPortStartScheduler
 1411              	.LVL128:
 1412 003c 04E0     		b	.L123
 1413              	.LVL129:
 1414              	.L125:
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1415              		.loc 1 1924 0
 1416 003e B0F1FF3F 		cmp	r0, #-1
 1417 0042 01D1     		bne	.L123
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1418              		.loc 1 1924 0 is_stmt 0 discriminator 1
 1419              		.syntax unified
 1420              	@ 1924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1421 0044 72B6     		 cpsid i 
 1422              	@ 0 "" 2
 1423              		.thumb
 1424              		.syntax unified
 1425              	.L127:
 1426 0046 FEE7     		b	.L127
 1427              	.LVL130:
 1428              	.L123:
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 117


 1429              		.loc 1 1930 0 is_stmt 1
 1430 0048 03B0     		add	sp, sp, #12
 1431              		.cfi_def_cfa_offset 4
 1432              		@ sp needed
 1433 004a 5DF804FB 		ldr	pc, [sp], #4
 1434              	.L130:
 1435 004e 00BF     		.align	2
 1436              	.L129:
 1437 0050 20020000 		.word	.LANCHOR0+544
 1438 0054 00000000 		.word	.LC0
 1439 0058 00000000 		.word	prvIdleTask
 1440 005c 00000000 		.word	.LANCHOR0
 1441              		.cfi_endproc
 1442              	.LFE540:
 1443              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1444              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1445              		.align	2
 1446              		.global	vTaskEndScheduler
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	vTaskEndScheduler, %function
 1450              	vTaskEndScheduler:
 1451              	.LFB541:
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1452              		.loc 1 1934 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 08B5     		push	{r3, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1460              		.loc 1 1938 0
 1461              		.syntax unified
 1462              	@ 1938 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1463 0002 72B6     		 cpsid i 
 1464              	@ 0 "" 2
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
 1465              		.loc 1 1939 0
 1466              		.thumb
 1467              		.syntax unified
 1468 0004 0022     		movs	r2, #0
 1469 0006 034B     		ldr	r3, .L133
 1470 0008 C3F80822 		str	r2, [r3, #520]
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1471              		.loc 1 1940 0
 1472 000c FFF7FEFF 		bl	vPortEndScheduler
 1473              	.LVL131:
 1474 0010 08BD     		pop	{r3, pc}
 1475              	.L134:
 1476 0012 00BF     		.align	2
 1477              	.L133:
 1478 0014 00000000 		.word	.LANCHOR0
 1479              		.cfi_endproc
 1480              	.LFE541:
 1481              		.size	vTaskEndScheduler, .-vTaskEndScheduler
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 118


 1482              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1483              		.align	2
 1484              		.global	vTaskSuspendAll
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	vTaskSuspendAll, %function
 1488              	vTaskSuspendAll:
 1489              	.LFB542:
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1490              		.loc 1 1945 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1495              		.loc 1 1950 0
 1496 0000 034A     		ldr	r2, .L136
 1497 0002 D2F81C32 		ldr	r3, [r2, #540]
 1498 0006 0133     		adds	r3, r3, #1
 1499 0008 C2F81C32 		str	r3, [r2, #540]
 1500 000c 7047     		bx	lr
 1501              	.L137:
 1502 000e 00BF     		.align	2
 1503              	.L136:
 1504 0010 00000000 		.word	.LANCHOR0
 1505              		.cfi_endproc
 1506              	.LFE542:
 1507              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1508              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1509              		.align	2
 1510              		.global	xTaskGetTickCount
 1511              		.thumb
 1512              		.thumb_func
 1513              		.type	xTaskGetTickCount, %function
 1514              	xTaskGetTickCount:
 1515              	.LFB544:
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
 1516              		.loc 1 2128 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1521              		.loc 1 2134 0
 1522 0000 014B     		ldr	r3, .L139
 1523 0002 D3F81402 		ldr	r0, [r3, #532]
 1524              	.LVL132:
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1525              		.loc 1 2139 0
 1526 0006 7047     		bx	lr
 1527              	.L140:
 1528              		.align	2
 1529              	.L139:
 1530 0008 00000000 		.word	.LANCHOR0
 1531              		.cfi_endproc
 1532              	.LFE544:
 1533              		.size	xTaskGetTickCount, .-xTaskGetTickCount
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 119


 1534              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1535              		.align	2
 1536              		.global	xTaskGetTickCountFromISR
 1537              		.thumb
 1538              		.thumb_func
 1539              		.type	xTaskGetTickCountFromISR, %function
 1540              	xTaskGetTickCountFromISR:
 1541              	.LFB545:
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
 1542              		.loc 1 2143 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546 0000 08B5     		push	{r3, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 3, -8
 1549              		.cfi_offset 14, -4
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1550              		.loc 1 2161 0
 1551 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1552              	.LVL133:
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1553              		.loc 1 2165 0
 1554 0006 024B     		ldr	r3, .L143
 1555 0008 D3F81402 		ldr	r0, [r3, #532]
 1556              	.LVL134:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1557              		.loc 1 2170 0
 1558 000c 08BD     		pop	{r3, pc}
 1559              	.L144:
 1560 000e 00BF     		.align	2
 1561              	.L143:
 1562 0010 00000000 		.word	.LANCHOR0
 1563              		.cfi_endproc
 1564              	.LFE545:
 1565              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1566              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1567              		.align	2
 1568              		.global	uxTaskGetNumberOfTasks
 1569              		.thumb
 1570              		.thumb_func
 1571              		.type	uxTaskGetNumberOfTasks, %function
 1572              	uxTaskGetNumberOfTasks:
 1573              	.LFB546:
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1574              		.loc 1 2174 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1579              		.loc 1 2177 0
 1580 0000 014B     		ldr	r3, .L146
 1581 0002 D3F80002 		ldr	r0, [r3, #512]
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1582              		.loc 1 2178 0
 1583 0006 7047     		bx	lr
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 120


 1584              	.L147:
 1585              		.align	2
 1586              	.L146:
 1587 0008 00000000 		.word	.LANCHOR0
 1588              		.cfi_endproc
 1589              	.LFE546:
 1590              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1591              		.section	.text.pcTaskGetName,"ax",%progbits
 1592              		.align	2
 1593              		.global	pcTaskGetName
 1594              		.thumb
 1595              		.thumb_func
 1596              		.type	pcTaskGetName, %function
 1597              	pcTaskGetName:
 1598              	.LFB547:
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
 1599              		.loc 1 2182 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604              	.LVL135:
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1605              		.loc 1 2187 0
 1606 0000 0346     		mov	r3, r0
 1607 0002 10B9     		cbnz	r0, .L149
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1608              		.loc 1 2187 0 is_stmt 0 discriminator 1
 1609 0004 044B     		ldr	r3, .L152
 1610 0006 D3F80432 		ldr	r3, [r3, #516]
 1611              	.LVL136:
 1612              	.L149:
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1613              		.loc 1 2188 0 is_stmt 1 discriminator 4
 1614 000a 0BB9     		cbnz	r3, .L150
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1615              		.loc 1 2188 0 is_stmt 0 discriminator 1
 1616              		.syntax unified
 1617              	@ 2188 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1618 000c 72B6     		 cpsid i 
 1619              	@ 0 "" 2
 1620              		.thumb
 1621              		.syntax unified
 1622              	.L151:
 1623 000e FEE7     		b	.L151
 1624              	.L150:
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1625              		.loc 1 2190 0 is_stmt 1
 1626 0010 03F13400 		add	r0, r3, #52
 1627 0014 7047     		bx	lr
 1628              	.L153:
 1629 0016 00BF     		.align	2
 1630              	.L152:
 1631 0018 00000000 		.word	.LANCHOR0
 1632              		.cfi_endproc
 1633              	.LFE547:
 1634              		.size	pcTaskGetName, .-pcTaskGetName
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 121


 1635              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1636              		.align	2
 1637              		.global	xTaskIncrementTick
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	xTaskIncrementTick, %function
 1641              	xTaskIncrementTick:
 1642              	.LFB548:
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
 1643              		.loc 1 2500 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1648              		.cfi_def_cfa_offset 24
 1649              		.cfi_offset 4, -24
 1650              		.cfi_offset 5, -20
 1651              		.cfi_offset 6, -16
 1652              		.cfi_offset 7, -12
 1653              		.cfi_offset 8, -8
 1654              		.cfi_offset 14, -4
 1655              	.LVL137:
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1656              		.loc 1 2509 0
 1657 0004 394B     		ldr	r3, .L174
 1658 0006 D3F81C32 		ldr	r3, [r3, #540]
 1659 000a 002B     		cmp	r3, #0
 1660 000c 5ED1     		bne	.L155
 1661              	.LBB27:
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1662              		.loc 1 2513 0
 1663 000e 374B     		ldr	r3, .L174
 1664 0010 D3F81442 		ldr	r4, [r3, #532]
 1665 0014 0134     		adds	r4, r4, #1
 1666              	.LVL138:
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1667              		.loc 1 2517 0
 1668 0016 C3F81442 		str	r4, [r3, #532]
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1669              		.loc 1 2519 0
 1670 001a 94B9     		cbnz	r4, .L156
 1671              	.LBB28:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1672              		.loc 1 2521 0
 1673 001c 9B6A     		ldr	r3, [r3, #40]
 1674 001e 1B68     		ldr	r3, [r3]
 1675 0020 0BB1     		cbz	r3, .L157
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1676              		.loc 1 2521 0 is_stmt 0 discriminator 1
 1677              		.syntax unified
 1678              	@ 2521 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1679 0022 72B6     		 cpsid i 
 1680              	@ 0 "" 2
 1681              		.thumb
 1682              		.syntax unified
 1683              	.L158:
 1684 0024 FEE7     		b	.L158
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 122


 1685              	.L157:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1686              		.loc 1 2521 0 discriminator 2
 1687 0026 314B     		ldr	r3, .L174
 1688 0028 9A6A     		ldr	r2, [r3, #40]
 1689              	.LVL139:
 1690 002a D3F8FC11 		ldr	r1, [r3, #508]
 1691 002e 9962     		str	r1, [r3, #40]
 1692 0030 C3F8FC21 		str	r2, [r3, #508]
 1693 0034 D3F82422 		ldr	r2, [r3, #548]
 1694              	.LVL140:
 1695 0038 0132     		adds	r2, r2, #1
 1696 003a C3F82422 		str	r2, [r3, #548]
 1697              	.LVL141:
 1698 003e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1699              	.LVL142:
 1700              	.L156:
 1701              	.LBE28:
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1702              		.loc 1 2532 0 is_stmt 1
 1703 0042 2A4B     		ldr	r3, .L174
 1704 0044 DB6A     		ldr	r3, [r3, #44]
 1705 0046 9C42     		cmp	r4, r3
 1706 0048 03D2     		bcs	.L169
 1707              	.LBE27:
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1708              		.loc 1 2503 0
 1709 004a 0026     		movs	r6, #0
 1710 004c 45E0     		b	.L160
 1711              	.LVL143:
 1712              	.L171:
 1713              	.LBB29:
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1714              		.loc 1 2598 0
 1715 004e 0126     		movs	r6, #1
 1716              	.LVL144:
 1717 0050 00E0     		b	.L159
 1718              	.LVL145:
 1719              	.L169:
 1720 0052 0026     		movs	r6, #0
 1721              	.LVL146:
 1722              	.L159:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1723              		.loc 1 2536 0
 1724 0054 254B     		ldr	r3, .L174
 1725 0056 9B6A     		ldr	r3, [r3, #40]
 1726 0058 1B68     		ldr	r3, [r3]
 1727 005a 0BB9     		cbnz	r3, .L170
 1728 005c 0123     		movs	r3, #1
 1729 005e 00E0     		b	.L161
 1730              	.L170:
 1731 0060 0023     		movs	r3, #0
 1732              	.L161:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1733              		.loc 1 2536 0 is_stmt 0 discriminator 4
 1734 0062 23B1     		cbz	r3, .L162
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 123


 1735              		.loc 1 2543 0 is_stmt 1
 1736 0064 4FF0FF32 		mov	r2, #-1
 1737 0068 204B     		ldr	r3, .L174
 1738 006a DA62     		str	r2, [r3, #44]
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1739              		.loc 1 2544 0
 1740 006c 35E0     		b	.L160
 1741              	.L162:
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1742              		.loc 1 2552 0
 1743 006e 1F4B     		ldr	r3, .L174
 1744 0070 9B6A     		ldr	r3, [r3, #40]
 1745 0072 DB68     		ldr	r3, [r3, #12]
 1746 0074 DD68     		ldr	r5, [r3, #12]
 1747              	.LVL147:
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1748              		.loc 1 2553 0
 1749 0076 6B68     		ldr	r3, [r5, #4]
 1750              	.LVL148:
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1751              		.loc 1 2555 0
 1752 0078 9C42     		cmp	r4, r3
 1753 007a 02D2     		bcs	.L163
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
 1754              		.loc 1 2562 0
 1755 007c 1B4A     		ldr	r2, .L174
 1756 007e D362     		str	r3, [r2, #44]
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1757              		.loc 1 2563 0
 1758 0080 2BE0     		b	.L160
 1759              	.L163:
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1760              		.loc 1 2571 0
 1761 0082 05F10408 		add	r8, r5, #4
 1762 0086 4046     		mov	r0, r8
 1763 0088 FFF7FEFF 		bl	uxListRemove
 1764              	.LVL149:
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1765              		.loc 1 2575 0
 1766 008c AB6A     		ldr	r3, [r5, #40]
 1767 008e 1BB1     		cbz	r3, .L164
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1768              		.loc 1 2577 0
 1769 0090 05F11800 		add	r0, r5, #24
 1770 0094 FFF7FEFF 		bl	uxListRemove
 1771              	.LVL150:
 1772              	.L164:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1773              		.loc 1 2586 0
 1774 0098 EB6A     		ldr	r3, [r5, #44]
 1775 009a 144A     		ldr	r2, .L174
 1776 009c D2F81022 		ldr	r2, [r2, #528]
 1777 00a0 9342     		cmp	r3, r2
 1778 00a2 02D9     		bls	.L165
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1779              		.loc 1 2586 0 is_stmt 0 discriminator 1
 1780 00a4 114A     		ldr	r2, .L174
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 124


 1781 00a6 C2F81032 		str	r3, [r2, #528]
 1782              	.L165:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1783              		.loc 1 2586 0 discriminator 3
 1784 00aa 104F     		ldr	r7, .L174
 1785 00ac 07F13000 		add	r0, r7, #48
 1786 00b0 03EB8303 		add	r3, r3, r3, lsl #2
 1787 00b4 9A00     		lsls	r2, r3, #2
 1788 00b6 4146     		mov	r1, r8
 1789 00b8 1044     		add	r0, r0, r2
 1790 00ba FFF7FEFF 		bl	vListInsertEnd
 1791              	.LVL151:
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 1792              		.loc 1 2596 0 is_stmt 1 discriminator 3
 1793 00be EA6A     		ldr	r2, [r5, #44]
 1794 00c0 D7F80432 		ldr	r3, [r7, #516]
 1795 00c4 DB6A     		ldr	r3, [r3, #44]
 1796 00c6 9A42     		cmp	r2, r3
 1797 00c8 C1D2     		bcs	.L171
 1798 00ca C3E7     		b	.L159
 1799              	.LVL152:
 1800              	.L155:
 1801              	.LBE29:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1802              		.loc 1 2643 0
 1803 00cc 074A     		ldr	r2, .L174
 1804 00ce D2F82832 		ldr	r3, [r2, #552]
 1805 00d2 0133     		adds	r3, r3, #1
 1806 00d4 C2F82832 		str	r3, [r2, #552]
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1807              		.loc 1 2503 0
 1808 00d8 0026     		movs	r6, #0
 1809              	.LVL153:
 1810              	.L160:
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1811              		.loc 1 2656 0
 1812 00da 044B     		ldr	r3, .L174
 1813 00dc D3F82C32 		ldr	r3, [r3, #556]
 1814 00e0 03B1     		cbz	r3, .L168
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1815              		.loc 1 2658 0
 1816 00e2 0126     		movs	r6, #1
 1817              	.LVL154:
 1818              	.L168:
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1819              		.loc 1 2668 0
 1820 00e4 3046     		mov	r0, r6
 1821 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1822              	.LVL155:
 1823              	.L175:
 1824 00ea 00BF     		.align	2
 1825              	.L174:
 1826 00ec 00000000 		.word	.LANCHOR0
 1827              		.cfi_endproc
 1828              	.LFE548:
 1829              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 1830              		.section	.text.xTaskResumeAll,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 125


 1831              		.align	2
 1832              		.global	xTaskResumeAll
 1833              		.thumb
 1834              		.thumb_func
 1835              		.type	xTaskResumeAll, %function
 1836              	xTaskResumeAll:
 1837              	.LFB543:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1838              		.loc 1 2018 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842              	.LVL156:
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1843              		.loc 1 2024 0
 1844 0000 364B     		ldr	r3, .L192
 1845 0002 D3F81C32 		ldr	r3, [r3, #540]
 1846 0006 0BB9     		cbnz	r3, .L177
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1847              		.loc 1 2024 0 is_stmt 0 discriminator 1
 1848              		.syntax unified
 1849              	@ 2024 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1850 0008 72B6     		 cpsid i 
 1851              	@ 0 "" 2
 1852              		.thumb
 1853              		.syntax unified
 1854              	.L178:
 1855 000a FEE7     		b	.L178
 1856              	.L177:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1857              		.loc 1 2018 0 is_stmt 1
 1858 000c 70B5     		push	{r4, r5, r6, lr}
 1859              		.cfi_def_cfa_offset 16
 1860              		.cfi_offset 4, -16
 1861              		.cfi_offset 5, -12
 1862              		.cfi_offset 6, -8
 1863              		.cfi_offset 14, -4
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1864              		.loc 1 2031 0
 1865 000e FFF7FEFF 		bl	vPortEnterCritical
 1866              	.LVL157:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1867              		.loc 1 2033 0
 1868 0012 324B     		ldr	r3, .L192
 1869 0014 D3F81C22 		ldr	r2, [r3, #540]
 1870 0018 013A     		subs	r2, r2, #1
 1871 001a C3F81C22 		str	r2, [r3, #540]
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1872              		.loc 1 2035 0
 1873 001e D3F81C32 		ldr	r3, [r3, #540]
 1874 0022 002B     		cmp	r3, #0
 1875 0024 52D1     		bne	.L188
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1876              		.loc 1 2037 0
 1877 0026 2D4B     		ldr	r3, .L192
 1878 0028 D3F80032 		ldr	r3, [r3, #512]
 1879 002c 3BBB     		cbnz	r3, .L189
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 126


2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1880              		.loc 1 2020 0
 1881 002e 0024     		movs	r4, #0
 1882 0030 4FE0     		b	.L179
 1883              	.LVL158:
 1884              	.L183:
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1885              		.loc 1 2043 0
 1886 0032 2A4D     		ldr	r5, .L192
 1887 0034 2B6A     		ldr	r3, [r5, #32]
 1888 0036 DC68     		ldr	r4, [r3, #12]
 1889              	.LVL159:
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1890              		.loc 1 2044 0
 1891 0038 04F11800 		add	r0, r4, #24
 1892 003c FFF7FEFF 		bl	uxListRemove
 1893              	.LVL160:
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1894              		.loc 1 2045 0
 1895 0040 261D     		adds	r6, r4, #4
 1896 0042 3046     		mov	r0, r6
 1897 0044 FFF7FEFF 		bl	uxListRemove
 1898              	.LVL161:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1899              		.loc 1 2046 0
 1900 0048 E36A     		ldr	r3, [r4, #44]
 1901 004a D5F81022 		ldr	r2, [r5, #528]
 1902 004e 9342     		cmp	r3, r2
 1903 0050 01D9     		bls	.L181
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1904              		.loc 1 2046 0 is_stmt 0 discriminator 1
 1905 0052 C5F81032 		str	r3, [r5, #528]
 1906              	.L181:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1907              		.loc 1 2046 0 discriminator 3
 1908 0056 214D     		ldr	r5, .L192
 1909 0058 05F13000 		add	r0, r5, #48
 1910 005c 03EB8303 		add	r3, r3, r3, lsl #2
 1911 0060 9A00     		lsls	r2, r3, #2
 1912 0062 3146     		mov	r1, r6
 1913 0064 1044     		add	r0, r0, r2
 1914 0066 FFF7FEFF 		bl	vListInsertEnd
 1915              	.LVL162:
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1916              		.loc 1 2050 0 is_stmt 1 discriminator 3
 1917 006a E26A     		ldr	r2, [r4, #44]
 1918 006c D5F80432 		ldr	r3, [r5, #516]
 1919 0070 DB6A     		ldr	r3, [r3, #44]
 1920 0072 9A42     		cmp	r2, r3
 1921 0074 04D3     		bcc	.L180
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1922              		.loc 1 2052 0
 1923 0076 0122     		movs	r2, #1
 1924 0078 C5F82C22 		str	r2, [r5, #556]
 1925 007c 00E0     		b	.L180
 1926              	.LVL163:
 1927              	.L189:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 127


 1928 007e 0024     		movs	r4, #0
 1929              	.LVL164:
 1930              	.L180:
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1931              		.loc 1 2041 0
 1932 0080 164B     		ldr	r3, .L192
 1933 0082 5B69     		ldr	r3, [r3, #20]
 1934 0084 002B     		cmp	r3, #0
 1935 0086 D4D1     		bne	.L183
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1936              		.loc 1 2060 0
 1937 0088 0CB1     		cbz	r4, .L184
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1938              		.loc 1 2068 0
 1939 008a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1940              	.LVL165:
 1941              	.L184:
 1942              	.LBB30:
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1943              		.loc 1 2076 0
 1944 008e 134B     		ldr	r3, .L192
 1945 0090 D3F82842 		ldr	r4, [r3, #552]
 1946              	.LVL166:
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1947              		.loc 1 2078 0
 1948 0094 64B1     		cbz	r4, .L185
 1949              	.L187:
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
 1950              		.loc 1 2082 0
 1951 0096 FFF7FEFF 		bl	xTaskIncrementTick
 1952              	.LVL167:
 1953 009a 18B1     		cbz	r0, .L186
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
 1954              		.loc 1 2084 0
 1955 009c 0122     		movs	r2, #1
 1956 009e 0F4B     		ldr	r3, .L192
 1957 00a0 C3F82C22 		str	r2, [r3, #556]
 1958              	.L186:
 1959              	.LVL168:
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1960              		.loc 1 2091 0
 1961 00a4 013C     		subs	r4, r4, #1
 1962              	.LVL169:
 1963 00a6 F6D1     		bne	.L187
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1964              		.loc 1 2093 0
 1965 00a8 0022     		movs	r2, #0
 1966 00aa 0C4B     		ldr	r3, .L192
 1967 00ac C3F82822 		str	r2, [r3, #552]
 1968              	.L185:
 1969              	.LBE30:
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1970              		.loc 1 2101 0
 1971 00b0 0A4B     		ldr	r3, .L192
 1972 00b2 D3F82C32 		ldr	r3, [r3, #556]
 1973 00b6 5BB1     		cbz	r3, .L190
 1974              	.LVL170:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 128


2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1975              		.loc 1 2108 0
 1976 00b8 4FF08052 		mov	r2, #268435456
 1977 00bc 084B     		ldr	r3, .L192+4
 1978 00be 1A60     		str	r2, [r3]
 1979              		.syntax unified
 1980              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1981 00c0 BFF34F8F 		dsb
 1982              	@ 0 "" 2
 1983              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1984 00c4 BFF36F8F 		isb
 1985              	@ 0 "" 2
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1986              		.loc 1 2105 0
 1987              		.thumb
 1988              		.syntax unified
 1989 00c8 0124     		movs	r4, #1
 1990              	.LVL171:
 1991 00ca 02E0     		b	.L179
 1992              	.LVL172:
 1993              	.L188:
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1994              		.loc 1 2020 0
 1995 00cc 0024     		movs	r4, #0
 1996 00ce 00E0     		b	.L179
 1997              	.LVL173:
 1998              	.L190:
 1999 00d0 0024     		movs	r4, #0
 2000              	.LVL174:
 2001              	.L179:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2002              		.loc 1 2121 0
 2003 00d2 FFF7FEFF 		bl	vPortExitCritical
 2004              	.LVL175:
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2005              		.loc 1 2124 0
 2006 00d6 2046     		mov	r0, r4
 2007 00d8 70BD     		pop	{r4, r5, r6, pc}
 2008              	.LVL176:
 2009              	.L193:
 2010 00da 00BF     		.align	2
 2011              	.L192:
 2012 00dc 00000000 		.word	.LANCHOR0
 2013 00e0 04ED00E0 		.word	-536810236
 2014              		.cfi_endproc
 2015              	.LFE543:
 2016              		.size	xTaskResumeAll, .-xTaskResumeAll
 2017              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2018              		.align	2
 2019              		.global	vTaskDelayUntil
 2020              		.thumb
 2021              		.thumb_func
 2022              		.type	vTaskDelayUntil, %function
 2023              	vTaskDelayUntil:
 2024              	.LFB531:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2025              		.loc 1 1141 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 129


 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              	.LVL177:
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2030              		.loc 1 1145 0
 2031 0000 08B9     		cbnz	r0, .L195
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2032              		.loc 1 1145 0 is_stmt 0 discriminator 1
 2033              		.syntax unified
 2034              	@ 1145 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2035 0002 72B6     		 cpsid i 
 2036              	@ 0 "" 2
 2037              		.thumb
 2038              		.syntax unified
 2039              	.L196:
 2040 0004 FEE7     		b	.L196
 2041              	.L195:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2042              		.loc 1 1141 0 is_stmt 1
 2043 0006 38B5     		push	{r3, r4, r5, lr}
 2044              		.cfi_def_cfa_offset 16
 2045              		.cfi_offset 3, -16
 2046              		.cfi_offset 4, -12
 2047              		.cfi_offset 5, -8
 2048              		.cfi_offset 14, -4
 2049 0008 0546     		mov	r5, r0
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2050              		.loc 1 1146 0
 2051 000a 09B9     		cbnz	r1, .L197
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2052              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2053              		.syntax unified
 2054              	@ 1146 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2055 000c 72B6     		 cpsid i 
 2056              	@ 0 "" 2
 2057              		.thumb
 2058              		.syntax unified
 2059              	.L198:
 2060 000e FEE7     		b	.L198
 2061              	.L197:
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2062              		.loc 1 1147 0 is_stmt 1
 2063 0010 1A4B     		ldr	r3, .L210
 2064 0012 D3F81C32 		ldr	r3, [r3, #540]
 2065 0016 0BB1     		cbz	r3, .L199
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2066              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2067              		.syntax unified
 2068              	@ 1147 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2069 0018 72B6     		 cpsid i 
 2070              	@ 0 "" 2
 2071              		.thumb
 2072              		.syntax unified
 2073              	.L200:
 2074 001a FEE7     		b	.L200
 2075              	.L199:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 130


 2076 001c 0C46     		mov	r4, r1
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2077              		.loc 1 1149 0 is_stmt 1
 2078 001e FFF7FEFF 		bl	vTaskSuspendAll
 2079              	.LVL178:
 2080              	.LBB31:
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2081              		.loc 1 1153 0
 2082 0022 164B     		ldr	r3, .L210
 2083 0024 D3F81402 		ldr	r0, [r3, #532]
 2084              	.LVL179:
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2085              		.loc 1 1156 0
 2086 0028 2A68     		ldr	r2, [r5]
 2087 002a A318     		adds	r3, r4, r2
 2088              	.LVL180:
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2089              		.loc 1 1158 0
 2090 002c 9042     		cmp	r0, r2
 2091 002e 05D2     		bcs	.L201
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2092              		.loc 1 1165 0
 2093 0030 9A42     		cmp	r2, r3
 2094 0032 09D9     		bls	.L205
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2095              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2096 0034 9842     		cmp	r0, r3
 2097 0036 09D3     		bcc	.L206
 2098              	.LBE31:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2099              		.loc 1 1143 0 is_stmt 1
 2100 0038 0022     		movs	r2, #0
 2101 003a 0CE0     		b	.L202
 2102              	.L201:
 2103              	.LBB32:
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2104              		.loc 1 1179 0
 2105 003c 9A42     		cmp	r2, r3
 2106 003e 07D8     		bhi	.L207
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2107              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2108 0040 9842     		cmp	r0, r3
 2109 0042 07D3     		bcc	.L208
 2110              	.LBE32:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2111              		.loc 1 1143 0 is_stmt 1
 2112 0044 0022     		movs	r2, #0
 2113 0046 06E0     		b	.L202
 2114              	.L205:
 2115 0048 0022     		movs	r2, #0
 2116 004a 04E0     		b	.L202
 2117              	.L206:
 2118              	.LBB33:
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2119              		.loc 1 1167 0
 2120 004c 0122     		movs	r2, #1
 2121 004e 02E0     		b	.L202
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 131


 2122              	.L207:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2123              		.loc 1 1181 0
 2124 0050 0122     		movs	r2, #1
 2125 0052 00E0     		b	.L202
 2126              	.L208:
 2127 0054 0122     		movs	r2, #1
 2128              	.L202:
 2129              	.LVL181:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2130              		.loc 1 1190 0
 2131 0056 2B60     		str	r3, [r5]
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2132              		.loc 1 1192 0
 2133 0058 1AB1     		cbz	r2, .L203
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2134              		.loc 1 1198 0
 2135 005a 0021     		movs	r1, #0
 2136 005c 181A     		subs	r0, r3, r0
 2137              	.LVL182:
 2138 005e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2139              	.LVL183:
 2140              	.L203:
 2141              	.LBE33:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2142              		.loc 1 1205 0
 2143 0062 FFF7FEFF 		bl	xTaskResumeAll
 2144              	.LVL184:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2145              		.loc 1 1209 0
 2146 0066 38B9     		cbnz	r0, .L194
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2147              		.loc 1 1211 0
 2148 0068 4FF08052 		mov	r2, #268435456
 2149 006c 044B     		ldr	r3, .L210+4
 2150 006e 1A60     		str	r2, [r3]
 2151              		.syntax unified
 2152              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2153 0070 BFF34F8F 		dsb
 2154              	@ 0 "" 2
 2155              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2156 0074 BFF36F8F 		isb
 2157              	@ 0 "" 2
 2158              		.thumb
 2159              		.syntax unified
 2160              	.L194:
 2161 0078 38BD     		pop	{r3, r4, r5, pc}
 2162              	.LVL185:
 2163              	.L211:
 2164 007a 00BF     		.align	2
 2165              	.L210:
 2166 007c 00000000 		.word	.LANCHOR0
 2167 0080 04ED00E0 		.word	-536810236
 2168              		.cfi_endproc
 2169              	.LFE531:
 2170              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2171              		.section	.text.vTaskDelay,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 132


 2172              		.align	2
 2173              		.global	vTaskDelay
 2174              		.thumb
 2175              		.thumb_func
 2176              		.type	vTaskDelay, %function
 2177              	vTaskDelay:
 2178              	.LFB532:
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2179              		.loc 1 1225 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              	.LVL186:
 2184 0000 10B5     		push	{r4, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 4, -8
 2187              		.cfi_offset 14, -4
 2188              	.LVL187:
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2189              		.loc 1 1229 0
 2190 0002 78B1     		cbz	r0, .L217
 2191 0004 0446     		mov	r4, r0
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2192              		.loc 1 1231 0
 2193 0006 0D4B     		ldr	r3, .L219
 2194 0008 D3F81C32 		ldr	r3, [r3, #540]
 2195 000c 0BB1     		cbz	r3, .L214
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2196              		.loc 1 1231 0 is_stmt 0 discriminator 1
 2197              		.syntax unified
 2198              	@ 1231 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2199 000e 72B6     		 cpsid i 
 2200              	@ 0 "" 2
 2201              		.thumb
 2202              		.syntax unified
 2203              	.L215:
 2204 0010 FEE7     		b	.L215
 2205              	.L214:
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2206              		.loc 1 1232 0 is_stmt 1
 2207 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2208              	.LVL188:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2209              		.loc 1 1243 0
 2210 0016 0021     		movs	r1, #0
 2211 0018 2046     		mov	r0, r4
 2212 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2213              	.LVL189:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2214              		.loc 1 1245 0
 2215 001e FFF7FEFF 		bl	xTaskResumeAll
 2216              	.LVL190:
 2217 0022 00E0     		b	.L213
 2218              	.LVL191:
 2219              	.L217:
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2220              		.loc 1 1226 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 133


 2221 0024 0020     		movs	r0, #0
 2222              	.LVL192:
 2223              	.L213:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2224              		.loc 1 1254 0
 2225 0026 38B9     		cbnz	r0, .L212
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2226              		.loc 1 1256 0
 2227 0028 4FF08052 		mov	r2, #268435456
 2228 002c 044B     		ldr	r3, .L219+4
 2229 002e 1A60     		str	r2, [r3]
 2230              		.syntax unified
 2231              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2232 0030 BFF34F8F 		dsb
 2233              	@ 0 "" 2
 2234              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2235 0034 BFF36F8F 		isb
 2236              	@ 0 "" 2
 2237              		.thumb
 2238              		.syntax unified
 2239              	.L212:
 2240 0038 10BD     		pop	{r4, pc}
 2241              	.L220:
 2242 003a 00BF     		.align	2
 2243              	.L219:
 2244 003c 00000000 		.word	.LANCHOR0
 2245 0040 04ED00E0 		.word	-536810236
 2246              		.cfi_endproc
 2247              	.LFE532:
 2248              		.size	vTaskDelay, .-vTaskDelay
 2249              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2250              		.align	2
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	prvCheckTasksWaitingTermination, %function
 2254              	prvCheckTasksWaitingTermination:
 2255              	.LFB562:
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2256              		.loc 1 3377 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260 0000 38B5     		push	{r3, r4, r5, lr}
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 3, -16
 2263              		.cfi_offset 4, -12
 2264              		.cfi_offset 5, -8
 2265              		.cfi_offset 14, -4
 2266              	.LBB34:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2267              		.loc 1 3387 0
 2268 0002 1FE0     		b	.L223
 2269              	.L224:
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2270              		.loc 1 3389 0
 2271 0004 FFF7FEFF 		bl	vTaskSuspendAll
 2272              	.LVL193:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 134


3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2273              		.loc 1 3391 0
 2274 0008 114B     		ldr	r3, .L226
 2275 000a D3F8E841 		ldr	r4, [r3, #488]
 2276              	.LVL194:
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2277              		.loc 1 3393 0
 2278 000e FFF7FEFF 		bl	xTaskResumeAll
 2279              	.LVL195:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2280              		.loc 1 3395 0
 2281 0012 BCB1     		cbz	r4, .L223
 2282              	.LBB35:
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2283              		.loc 1 3399 0
 2284 0014 FFF7FEFF 		bl	vPortEnterCritical
 2285              	.LVL196:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2286              		.loc 1 3401 0
 2287 0018 0D4C     		ldr	r4, .L226
 2288              	.LVL197:
 2289 001a D4F8F431 		ldr	r3, [r4, #500]
 2290 001e DD68     		ldr	r5, [r3, #12]
 2291              	.LVL198:
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2292              		.loc 1 3402 0
 2293 0020 281D     		adds	r0, r5, #4
 2294 0022 FFF7FEFF 		bl	uxListRemove
 2295              	.LVL199:
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2296              		.loc 1 3403 0
 2297 0026 D4F80032 		ldr	r3, [r4, #512]
 2298 002a 013B     		subs	r3, r3, #1
 2299 002c C4F80032 		str	r3, [r4, #512]
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2300              		.loc 1 3404 0
 2301 0030 D4F81832 		ldr	r3, [r4, #536]
 2302 0034 013B     		subs	r3, r3, #1
 2303 0036 C4F81832 		str	r3, [r4, #536]
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2304              		.loc 1 3406 0
 2305 003a FFF7FEFF 		bl	vPortExitCritical
 2306              	.LVL200:
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2307              		.loc 1 3408 0
 2308 003e 2846     		mov	r0, r5
 2309 0040 FFF7FEFF 		bl	prvDeleteTCB
 2310              	.LVL201:
 2311              	.L223:
 2312              	.LBE35:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2313              		.loc 1 3387 0
 2314 0044 024B     		ldr	r3, .L226
 2315 0046 D3F81832 		ldr	r3, [r3, #536]
 2316 004a 002B     		cmp	r3, #0
 2317 004c DAD1     		bne	.L224
 2318              	.LBE34:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 135


3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2319              		.loc 1 3417 0
 2320 004e 38BD     		pop	{r3, r4, r5, pc}
 2321              	.L227:
 2322              		.align	2
 2323              	.L226:
 2324 0050 00000000 		.word	.LANCHOR0
 2325              		.cfi_endproc
 2326              	.LFE562:
 2327              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 2328              		.section	.text.prvIdleTask,"ax",%progbits
 2329              		.align	2
 2330              		.thumb
 2331              		.thumb_func
 2332              		.type	prvIdleTask, %function
 2333              	prvIdleTask:
 2334              	.LFB558:
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
 2335              		.loc 1 3143 0
 2336              		.cfi_startproc
 2337              		@ Volatile: function does not return.
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              	.LVL202:
 2341 0000 08B5     		push	{r3, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 3, -8
 2344              		.cfi_offset 14, -4
 2345              	.LVL203:
 2346              	.L230:
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2347              		.loc 1 3154 0
 2348 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 2349              	.LVL204:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2350              		.loc 1 3177 0
 2351 0006 074B     		ldr	r3, .L232
 2352 0008 1B6B     		ldr	r3, [r3, #48]
 2353 000a 012B     		cmp	r3, #1
 2354 000c 07D9     		bls	.L229
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2355              		.loc 1 3179 0
 2356 000e 4FF08052 		mov	r2, #268435456
 2357 0012 054B     		ldr	r3, .L232+4
 2358 0014 1A60     		str	r2, [r3]
 2359              		.syntax unified
 2360              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2361 0016 BFF34F8F 		dsb
 2362              	@ 0 "" 2
 2363              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2364 001a BFF36F8F 		isb
 2365              	@ 0 "" 2
 2366              		.thumb
 2367              		.syntax unified
 2368              	.L229:
 2369              	.LBB36:
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 136


 2370              		.loc 1 3197 0
 2371 001e FFF7FEFF 		bl	vApplicationIdleHook
 2372              	.LVL205:
 2373              	.LBE36:
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2374              		.loc 1 3245 0
 2375 0022 EEE7     		b	.L230
 2376              	.L233:
 2377              		.align	2
 2378              	.L232:
 2379 0024 00000000 		.word	.LANCHOR0
 2380 0028 04ED00E0 		.word	-536810236
 2381              		.cfi_endproc
 2382              	.LFE558:
 2383              		.size	prvIdleTask, .-prvIdleTask
 2384              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2385              		.align	2
 2386              		.global	vTaskSwitchContext
 2387              		.thumb
 2388              		.thumb_func
 2389              		.type	vTaskSwitchContext, %function
 2390              	vTaskSwitchContext:
 2391              	.LFB549:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2392              		.loc 1 2762 0
 2393              		.cfi_startproc
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 0, uses_anonymous_args = 0
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2396              		.loc 1 2763 0
 2397 0000 2D4B     		ldr	r3, .L245
 2398 0002 D3F81C32 		ldr	r3, [r3, #540]
 2399 0006 23B1     		cbz	r3, .L235
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2400              		.loc 1 2767 0
 2401 0008 0122     		movs	r2, #1
 2402 000a 2B4B     		ldr	r3, .L245
 2403 000c C3F82C22 		str	r2, [r3, #556]
 2404 0010 7047     		bx	lr
 2405              	.L235:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2406              		.loc 1 2762 0
 2407 0012 10B5     		push	{r4, lr}
 2408              		.cfi_def_cfa_offset 8
 2409              		.cfi_offset 4, -8
 2410              		.cfi_offset 14, -4
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2411              		.loc 1 2771 0
 2412 0014 284B     		ldr	r3, .L245
 2413 0016 0022     		movs	r2, #0
 2414 0018 C3F82C22 		str	r2, [r3, #556]
 2415              	.LBB37:
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2416              		.loc 1 2803 0
 2417 001c D3F80432 		ldr	r3, [r3, #516]
 2418 0020 1B6B     		ldr	r3, [r3, #48]
 2419              	.LVL206:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 137


2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2420              		.loc 1 2806 0
 2421 0022 1A68     		ldr	r2, [r3]
 2422 0024 B2F1A53F 		cmp	r2, #-1515870811
 2423 0028 0BD1     		bne	.L237
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2424              		.loc 1 2807 0 discriminator 1
 2425 002a 5A68     		ldr	r2, [r3, #4]
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2426              		.loc 1 2806 0 discriminator 1
 2427 002c B2F1A53F 		cmp	r2, #-1515870811
 2428 0030 07D1     		bne	.L237
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2429              		.loc 1 2808 0
 2430 0032 9A68     		ldr	r2, [r3, #8]
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2431              		.loc 1 2807 0
 2432 0034 B2F1A53F 		cmp	r2, #-1515870811
 2433 0038 03D1     		bne	.L237
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 2434              		.loc 1 2809 0
 2435 003a DB68     		ldr	r3, [r3, #12]
 2436              	.LVL207:
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2437              		.loc 1 2808 0
 2438 003c B3F1A53F 		cmp	r3, #-1515870811
 2439 0040 07D0     		beq	.L238
 2440              	.L237:
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 2441              		.loc 1 2811 0
 2442 0042 1D4B     		ldr	r3, .L245
 2443 0044 D3F80402 		ldr	r0, [r3, #516]
 2444 0048 D3F80412 		ldr	r1, [r3, #516]
 2445 004c 3431     		adds	r1, r1, #52
 2446 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2447              	.LVL208:
 2448              	.L238:
 2449              	.LBE37:
 2450              	.LBB38:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2451              		.loc 1 2817 0
 2452 0052 194B     		ldr	r3, .L245
 2453 0054 D3F81032 		ldr	r3, [r3, #528]
 2454              	.LVL209:
 2455 0058 03E0     		b	.L239
 2456              	.L242:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2457              		.loc 1 2817 0 is_stmt 0 discriminator 5
 2458 005a 0BB9     		cbnz	r3, .L240
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2459              		.loc 1 2817 0 discriminator 2
 2460              		.syntax unified
 2461              	@ 2817 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2462 005c 72B6     		 cpsid i 
 2463              	@ 0 "" 2
 2464              		.thumb
 2465              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 138


 2466              	.L241:
 2467 005e FEE7     		b	.L241
 2468              	.L240:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2469              		.loc 1 2817 0 discriminator 3
 2470 0060 013B     		subs	r3, r3, #1
 2471              	.LVL210:
 2472              	.L239:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2473              		.loc 1 2817 0 discriminator 4
 2474 0062 03EB8301 		add	r1, r3, r3, lsl #2
 2475 0066 8A00     		lsls	r2, r1, #2
 2476 0068 1349     		ldr	r1, .L245
 2477 006a 0A44     		add	r2, r2, r1
 2478 006c 126B     		ldr	r2, [r2, #48]
 2479 006e 002A     		cmp	r2, #0
 2480 0070 F3D0     		beq	.L242
 2481              	.LVL211:
 2482              	.LBB39:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2483              		.loc 1 2817 0 discriminator 6
 2484 0072 0846     		mov	r0, r1
 2485 0074 9900     		lsls	r1, r3, #2
 2486 0076 CC18     		adds	r4, r1, r3
 2487 0078 A200     		lsls	r2, r4, #2
 2488 007a 0244     		add	r2, r2, r0
 2489 007c 546B     		ldr	r4, [r2, #52]
 2490 007e 6468     		ldr	r4, [r4, #4]
 2491 0080 5463     		str	r4, [r2, #52]
 2492 0082 3030     		adds	r0, r0, #48
 2493 0084 1944     		add	r1, r1, r3
 2494 0086 8A00     		lsls	r2, r1, #2
 2495 0088 0832     		adds	r2, r2, #8
 2496 008a 0244     		add	r2, r2, r0
 2497 008c 9442     		cmp	r4, r2
 2498 008e 06D1     		bne	.L243
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2499              		.loc 1 2817 0 discriminator 7
 2500 0090 6068     		ldr	r0, [r4, #4]
 2501 0092 03EB8301 		add	r1, r3, r3, lsl #2
 2502 0096 8A00     		lsls	r2, r1, #2
 2503 0098 0749     		ldr	r1, .L245
 2504 009a 0A44     		add	r2, r2, r1
 2505 009c 5063     		str	r0, [r2, #52]
 2506              	.L243:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2507              		.loc 1 2817 0 discriminator 9
 2508 009e 0649     		ldr	r1, .L245
 2509 00a0 03EB8300 		add	r0, r3, r3, lsl #2
 2510 00a4 8200     		lsls	r2, r0, #2
 2511 00a6 0A44     		add	r2, r2, r1
 2512 00a8 526B     		ldr	r2, [r2, #52]
 2513 00aa D268     		ldr	r2, [r2, #12]
 2514 00ac C1F80422 		str	r2, [r1, #516]
 2515              	.LBE39:
 2516 00b0 C1F81032 		str	r3, [r1, #528]
 2517 00b4 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 139


 2518              	.L246:
 2519 00b6 00BF     		.align	2
 2520              	.L245:
 2521 00b8 00000000 		.word	.LANCHOR0
 2522              	.LBE38:
 2523              		.cfi_endproc
 2524              	.LFE549:
 2525              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2526              		.section	.text.vTaskSuspend,"ax",%progbits
 2527              		.align	2
 2528              		.global	vTaskSuspend
 2529              		.thumb
 2530              		.thumb_func
 2531              		.type	vTaskSuspend, %function
 2532              	vTaskSuspend:
 2533              	.LFB536:
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 2534              		.loc 1 1567 0 is_stmt 1
 2535              		.cfi_startproc
 2536              		@ args = 0, pretend = 0, frame = 0
 2537              		@ frame_needed = 0, uses_anonymous_args = 0
 2538              	.LVL212:
 2539 0000 70B5     		push	{r4, r5, r6, lr}
 2540              		.cfi_def_cfa_offset 16
 2541              		.cfi_offset 4, -16
 2542              		.cfi_offset 5, -12
 2543              		.cfi_offset 6, -8
 2544              		.cfi_offset 14, -4
 2545 0002 0446     		mov	r4, r0
1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2546              		.loc 1 1570 0
 2547 0004 FFF7FEFF 		bl	vPortEnterCritical
 2548              	.LVL213:
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2549              		.loc 1 1574 0
 2550 0008 14B9     		cbnz	r4, .L248
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2551              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2552 000a 214B     		ldr	r3, .L257
 2553 000c D3F80442 		ldr	r4, [r3, #516]
 2554              	.LVL214:
 2555              	.L248:
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2556              		.loc 1 1580 0 is_stmt 1 discriminator 4
 2557 0010 261D     		adds	r6, r4, #4
 2558 0012 3046     		mov	r0, r6
 2559 0014 FFF7FEFF 		bl	uxListRemove
 2560              	.LVL215:
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2561              		.loc 1 1590 0 discriminator 4
 2562 0018 A36A     		ldr	r3, [r4, #40]
 2563 001a 1BB1     		cbz	r3, .L249
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2564              		.loc 1 1592 0
 2565 001c 04F11800 		add	r0, r4, #24
 2566 0020 FFF7FEFF 		bl	uxListRemove
 2567              	.LVL216:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 140


 2568              	.L249:
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2569              		.loc 1 1599 0
 2570 0024 1A4D     		ldr	r5, .L257
 2571 0026 3146     		mov	r1, r6
 2572 0028 2846     		mov	r0, r5
 2573 002a FFF7FEFF 		bl	vListInsertEnd
 2574              	.LVL217:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2575              		.loc 1 1601 0
 2576 002e FFF7FEFF 		bl	vPortExitCritical
 2577              	.LVL218:
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2578              		.loc 1 1603 0
 2579 0032 D5F80832 		ldr	r3, [r5, #520]
 2580 0036 2BB1     		cbz	r3, .L250
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2581              		.loc 1 1607 0
 2582 0038 FFF7FEFF 		bl	vPortEnterCritical
 2583              	.LVL219:
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2584              		.loc 1 1609 0
 2585 003c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2586              	.LVL220:
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2587              		.loc 1 1611 0
 2588 0040 FFF7FEFF 		bl	vPortExitCritical
 2589              	.LVL221:
 2590              	.L250:
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2591              		.loc 1 1618 0
 2592 0044 124B     		ldr	r3, .L257
 2593 0046 D3F80432 		ldr	r3, [r3, #516]
 2594 004a 9C42     		cmp	r4, r3
 2595 004c 1FD1     		bne	.L247
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2596              		.loc 1 1620 0
 2597 004e 104B     		ldr	r3, .L257
 2598 0050 D3F80832 		ldr	r3, [r3, #520]
 2599 0054 73B1     		cbz	r3, .L252
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2600              		.loc 1 1623 0
 2601 0056 0E4B     		ldr	r3, .L257
 2602 0058 D3F81C32 		ldr	r3, [r3, #540]
 2603 005c 0BB1     		cbz	r3, .L253
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2604              		.loc 1 1623 0 is_stmt 0 discriminator 1
 2605              		.syntax unified
 2606              	@ 1623 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2607 005e 72B6     		 cpsid i 
 2608              	@ 0 "" 2
 2609              		.thumb
 2610              		.syntax unified
 2611              	.L254:
 2612 0060 FEE7     		b	.L254
 2613              	.L253:
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 141


 2614              		.loc 1 1624 0 is_stmt 1
 2615 0062 4FF08052 		mov	r2, #268435456
 2616 0066 0B4B     		ldr	r3, .L257+4
 2617 0068 1A60     		str	r2, [r3]
 2618              		.syntax unified
 2619              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2620 006a BFF34F8F 		dsb
 2621              	@ 0 "" 2
 2622              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2623 006e BFF36F8F 		isb
 2624              	@ 0 "" 2
 2625              		.thumb
 2626              		.syntax unified
 2627 0072 70BD     		pop	{r4, r5, r6, pc}
 2628              	.LVL222:
 2629              	.L252:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2630              		.loc 1 1631 0
 2631 0074 064B     		ldr	r3, .L257
 2632 0076 1A68     		ldr	r2, [r3]
 2633 0078 D3F80032 		ldr	r3, [r3, #512]
 2634 007c 9A42     		cmp	r2, r3
 2635 007e 04D1     		bne	.L255
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2636              		.loc 1 1637 0
 2637 0080 0022     		movs	r2, #0
 2638 0082 034B     		ldr	r3, .L257
 2639 0084 C3F80422 		str	r2, [r3, #516]
 2640 0088 70BD     		pop	{r4, r5, r6, pc}
 2641              	.LVL223:
 2642              	.L255:
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2643              		.loc 1 1641 0
 2644 008a FFF7FEFF 		bl	vTaskSwitchContext
 2645              	.LVL224:
 2646              	.L247:
 2647 008e 70BD     		pop	{r4, r5, r6, pc}
 2648              	.LVL225:
 2649              	.L258:
 2650              		.align	2
 2651              	.L257:
 2652 0090 00000000 		.word	.LANCHOR0
 2653 0094 04ED00E0 		.word	-536810236
 2654              		.cfi_endproc
 2655              	.LFE536:
 2656              		.size	vTaskSuspend, .-vTaskSuspend
 2657              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2658              		.align	2
 2659              		.global	vTaskPlaceOnEventList
 2660              		.thumb
 2661              		.thumb_func
 2662              		.type	vTaskPlaceOnEventList, %function
 2663              	vTaskPlaceOnEventList:
 2664              	.LFB550:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2665              		.loc 1 2832 0
 2666              		.cfi_startproc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 142


 2667              		@ args = 0, pretend = 0, frame = 0
 2668              		@ frame_needed = 0, uses_anonymous_args = 0
 2669              	.LVL226:
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2670              		.loc 1 2833 0
 2671 0000 08B9     		cbnz	r0, .L260
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2672              		.loc 1 2833 0 is_stmt 0 discriminator 1
 2673              		.syntax unified
 2674              	@ 2833 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2675 0002 72B6     		 cpsid i 
 2676              	@ 0 "" 2
 2677              		.thumb
 2678              		.syntax unified
 2679              	.L261:
 2680 0004 FEE7     		b	.L261
 2681              	.L260:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2682              		.loc 1 2832 0 is_stmt 1
 2683 0006 10B5     		push	{r4, lr}
 2684              		.cfi_def_cfa_offset 8
 2685              		.cfi_offset 4, -8
 2686              		.cfi_offset 14, -4
 2687 0008 0C46     		mov	r4, r1
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2688              		.loc 1 2842 0
 2689 000a 054B     		ldr	r3, .L263
 2690 000c D3F80412 		ldr	r1, [r3, #516]
 2691              	.LVL227:
 2692 0010 1831     		adds	r1, r1, #24
 2693 0012 FFF7FEFF 		bl	vListInsert
 2694              	.LVL228:
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2695              		.loc 1 2844 0
 2696 0016 0121     		movs	r1, #1
 2697 0018 2046     		mov	r0, r4
 2698 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2699              	.LVL229:
 2700 001e 10BD     		pop	{r4, pc}
 2701              	.LVL230:
 2702              	.L264:
 2703              		.align	2
 2704              	.L263:
 2705 0020 00000000 		.word	.LANCHOR0
 2706              		.cfi_endproc
 2707              	.LFE550:
 2708              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2709              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2710              		.align	2
 2711              		.global	vTaskPlaceOnUnorderedEventList
 2712              		.thumb
 2713              		.thumb_func
 2714              		.type	vTaskPlaceOnUnorderedEventList, %function
 2715              	vTaskPlaceOnUnorderedEventList:
 2716              	.LFB551:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2717              		.loc 1 2849 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 143


 2718              		.cfi_startproc
 2719              		@ args = 0, pretend = 0, frame = 0
 2720              		@ frame_needed = 0, uses_anonymous_args = 0
 2721              	.LVL231:
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2722              		.loc 1 2850 0
 2723 0000 08B9     		cbnz	r0, .L266
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2724              		.loc 1 2850 0 is_stmt 0 discriminator 1
 2725              		.syntax unified
 2726              	@ 2850 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2727 0002 72B6     		 cpsid i 
 2728              	@ 0 "" 2
 2729              		.thumb
 2730              		.syntax unified
 2731              	.L267:
 2732 0004 FEE7     		b	.L267
 2733              	.L266:
 2734 0006 0346     		mov	r3, r0
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2735              		.loc 1 2854 0 is_stmt 1
 2736 0008 0C48     		ldr	r0, .L271
 2737              	.LVL232:
 2738 000a D0F81C02 		ldr	r0, [r0, #540]
 2739 000e 08B9     		cbnz	r0, .L268
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2740              		.loc 1 2854 0 is_stmt 0 discriminator 1
 2741              		.syntax unified
 2742              	@ 2854 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2743 0010 72B6     		 cpsid i 
 2744              	@ 0 "" 2
 2745              		.thumb
 2746              		.syntax unified
 2747              	.L269:
 2748 0012 FEE7     		b	.L269
 2749              	.L268:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2750              		.loc 1 2849 0 is_stmt 1
 2751 0014 10B5     		push	{r4, lr}
 2752              		.cfi_def_cfa_offset 8
 2753              		.cfi_offset 4, -8
 2754              		.cfi_offset 14, -4
 2755 0016 1846     		mov	r0, r3
 2756 0018 1446     		mov	r4, r2
 2757 001a 0B46     		mov	r3, r1
 2758              	.LVL233:
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2759              		.loc 1 2859 0
 2760 001c 074A     		ldr	r2, .L271
 2761              	.LVL234:
 2762 001e D2F80412 		ldr	r1, [r2, #516]
 2763              	.LVL235:
 2764 0022 43F00043 		orr	r3, r3, #-2147483648
 2765              	.LVL236:
 2766 0026 8B61     		str	r3, [r1, #24]
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2767              		.loc 1 2866 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 144


 2768 0028 D2F80412 		ldr	r1, [r2, #516]
 2769 002c 1831     		adds	r1, r1, #24
 2770 002e FFF7FEFF 		bl	vListInsertEnd
 2771              	.LVL237:
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2772              		.loc 1 2868 0
 2773 0032 0121     		movs	r1, #1
 2774 0034 2046     		mov	r0, r4
 2775 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2776              	.LVL238:
 2777 003a 10BD     		pop	{r4, pc}
 2778              	.LVL239:
 2779              	.L272:
 2780              		.align	2
 2781              	.L271:
 2782 003c 00000000 		.word	.LANCHOR0
 2783              		.cfi_endproc
 2784              	.LFE551:
 2785              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2786              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2787              		.align	2
 2788              		.global	vTaskPlaceOnEventListRestricted
 2789              		.thumb
 2790              		.thumb_func
 2791              		.type	vTaskPlaceOnEventListRestricted, %function
 2792              	vTaskPlaceOnEventListRestricted:
 2793              	.LFB552:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2794              		.loc 1 2875 0
 2795              		.cfi_startproc
 2796              		@ args = 0, pretend = 0, frame = 0
 2797              		@ frame_needed = 0, uses_anonymous_args = 0
 2798              	.LVL240:
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2799              		.loc 1 2876 0
 2800 0000 08B9     		cbnz	r0, .L274
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2801              		.loc 1 2876 0 is_stmt 0 discriminator 1
 2802              		.syntax unified
 2803              	@ 2876 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2804 0002 72B6     		 cpsid i 
 2805              	@ 0 "" 2
 2806              		.thumb
 2807              		.syntax unified
 2808              	.L275:
 2809 0004 FEE7     		b	.L275
 2810              	.L274:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2811              		.loc 1 2875 0 is_stmt 1
 2812 0006 38B5     		push	{r3, r4, r5, lr}
 2813              		.cfi_def_cfa_offset 16
 2814              		.cfi_offset 3, -16
 2815              		.cfi_offset 4, -12
 2816              		.cfi_offset 5, -8
 2817              		.cfi_offset 14, -4
 2818 0008 0C46     		mov	r4, r1
 2819 000a 1546     		mov	r5, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 145


2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2820              		.loc 1 2888 0
 2821 000c 064A     		ldr	r2, .L279
 2822              	.LVL241:
 2823 000e D2F80412 		ldr	r1, [r2, #516]
 2824              	.LVL242:
 2825 0012 1831     		adds	r1, r1, #24
 2826 0014 FFF7FEFF 		bl	vListInsertEnd
 2827              	.LVL243:
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2828              		.loc 1 2893 0
 2829 0018 0DB1     		cbz	r5, .L276
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2830              		.loc 1 2895 0
 2831 001a 4FF0FF34 		mov	r4, #-1
 2832              	.LVL244:
 2833              	.L276:
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2834              		.loc 1 2899 0
 2835 001e 2946     		mov	r1, r5
 2836 0020 2046     		mov	r0, r4
 2837 0022 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2838              	.LVL245:
 2839 0026 38BD     		pop	{r3, r4, r5, pc}
 2840              	.LVL246:
 2841              	.L280:
 2842              		.align	2
 2843              	.L279:
 2844 0028 00000000 		.word	.LANCHOR0
 2845              		.cfi_endproc
 2846              	.LFE552:
 2847              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 2848              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2849              		.align	2
 2850              		.global	xTaskRemoveFromEventList
 2851              		.thumb
 2852              		.thumb_func
 2853              		.type	xTaskRemoveFromEventList, %function
 2854              	xTaskRemoveFromEventList:
 2855              	.LFB553:
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2856              		.loc 1 2906 0
 2857              		.cfi_startproc
 2858              		@ args = 0, pretend = 0, frame = 0
 2859              		@ frame_needed = 0, uses_anonymous_args = 0
 2860              	.LVL247:
 2861 0000 38B5     		push	{r3, r4, r5, lr}
 2862              		.cfi_def_cfa_offset 16
 2863              		.cfi_offset 3, -16
 2864              		.cfi_offset 4, -12
 2865              		.cfi_offset 5, -8
 2866              		.cfi_offset 14, -4
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2867              		.loc 1 2923 0
 2868 0002 C368     		ldr	r3, [r0, #12]
 2869 0004 DC68     		ldr	r4, [r3, #12]
 2870              	.LVL248:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 146


2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2871              		.loc 1 2924 0
 2872 0006 0CB9     		cbnz	r4, .L282
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2873              		.loc 1 2924 0 is_stmt 0 discriminator 1
 2874              		.syntax unified
 2875              	@ 2924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2876 0008 72B6     		 cpsid i 
 2877              	@ 0 "" 2
 2878              		.thumb
 2879              		.syntax unified
 2880              	.L283:
 2881 000a FEE7     		b	.L283
 2882              	.L282:
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2883              		.loc 1 2925 0 is_stmt 1
 2884 000c 04F11805 		add	r5, r4, #24
 2885 0010 2846     		mov	r0, r5
 2886              	.LVL249:
 2887 0012 FFF7FEFF 		bl	uxListRemove
 2888              	.LVL250:
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2889              		.loc 1 2927 0
 2890 0016 164B     		ldr	r3, .L290
 2891 0018 D3F81C32 		ldr	r3, [r3, #540]
 2892 001c ABB9     		cbnz	r3, .L284
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2893              		.loc 1 2929 0
 2894 001e 251D     		adds	r5, r4, #4
 2895 0020 2846     		mov	r0, r5
 2896 0022 FFF7FEFF 		bl	uxListRemove
 2897              	.LVL251:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2898              		.loc 1 2930 0
 2899 0026 E36A     		ldr	r3, [r4, #44]
 2900 0028 114A     		ldr	r2, .L290
 2901 002a D2F81022 		ldr	r2, [r2, #528]
 2902 002e 9342     		cmp	r3, r2
 2903 0030 02D9     		bls	.L285
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2904              		.loc 1 2930 0 is_stmt 0 discriminator 1
 2905 0032 0F4A     		ldr	r2, .L290
 2906 0034 C2F81032 		str	r3, [r2, #528]
 2907              	.L285:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2908              		.loc 1 2930 0 discriminator 3
 2909 0038 03EB8303 		add	r3, r3, r3, lsl #2
 2910 003c 9A00     		lsls	r2, r3, #2
 2911 003e 2946     		mov	r1, r5
 2912 0040 0C48     		ldr	r0, .L290+4
 2913 0042 1044     		add	r0, r0, r2
 2914 0044 FFF7FEFF 		bl	vListInsertEnd
 2915              	.LVL252:
 2916 0048 03E0     		b	.L286
 2917              	.L284:
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2918              		.loc 1 2936 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 147


 2919 004a 2946     		mov	r1, r5
 2920 004c 0A48     		ldr	r0, .L290+8
 2921 004e FFF7FEFF 		bl	vListInsertEnd
 2922              	.LVL253:
 2923              	.L286:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2924              		.loc 1 2939 0
 2925 0052 E26A     		ldr	r2, [r4, #44]
 2926 0054 064B     		ldr	r3, .L290
 2927 0056 D3F80432 		ldr	r3, [r3, #516]
 2928 005a DB6A     		ldr	r3, [r3, #44]
 2929 005c 9A42     		cmp	r2, r3
 2930 005e 04D9     		bls	.L288
 2931              	.LVL254:
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2932              		.loc 1 2948 0
 2933 0060 0120     		movs	r0, #1
 2934 0062 034B     		ldr	r3, .L290
 2935 0064 C3F82C02 		str	r0, [r3, #556]
 2936 0068 38BD     		pop	{r3, r4, r5, pc}
 2937              	.LVL255:
 2938              	.L288:
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2939              		.loc 1 2952 0
 2940 006a 0020     		movs	r0, #0
 2941              	.LVL256:
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2942              		.loc 1 2970 0
 2943 006c 38BD     		pop	{r3, r4, r5, pc}
 2944              	.LVL257:
 2945              	.L291:
 2946 006e 00BF     		.align	2
 2947              	.L290:
 2948 0070 00000000 		.word	.LANCHOR0
 2949 0074 30000000 		.word	.LANCHOR0+48
 2950 0078 14000000 		.word	.LANCHOR0+20
 2951              		.cfi_endproc
 2952              	.LFE553:
 2953              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 2954              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 2955              		.align	2
 2956              		.global	xTaskRemoveFromUnorderedEventList
 2957              		.thumb
 2958              		.thumb_func
 2959              		.type	xTaskRemoveFromUnorderedEventList, %function
 2960              	xTaskRemoveFromUnorderedEventList:
 2961              	.LFB554:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2962              		.loc 1 2974 0
 2963              		.cfi_startproc
 2964              		@ args = 0, pretend = 0, frame = 0
 2965              		@ frame_needed = 0, uses_anonymous_args = 0
 2966              	.LVL258:
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2967              		.loc 1 2980 0
 2968 0000 194B     		ldr	r3, .L301
 2969 0002 D3F81C32 		ldr	r3, [r3, #540]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 148


 2970 0006 0BB9     		cbnz	r3, .L293
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2971              		.loc 1 2980 0 is_stmt 0 discriminator 1
 2972              		.syntax unified
 2973              	@ 2980 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2974 0008 72B6     		 cpsid i 
 2975              	@ 0 "" 2
 2976              		.thumb
 2977              		.syntax unified
 2978              	.L294:
 2979 000a FEE7     		b	.L294
 2980              	.L293:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2981              		.loc 1 2974 0 is_stmt 1
 2982 000c 70B5     		push	{r4, r5, r6, lr}
 2983              		.cfi_def_cfa_offset 16
 2984              		.cfi_offset 4, -16
 2985              		.cfi_offset 5, -12
 2986              		.cfi_offset 6, -8
 2987              		.cfi_offset 14, -4
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2988              		.loc 1 2983 0
 2989 000e 41F00043 		orr	r3, r1, #-2147483648
 2990 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2991              		.loc 1 2987 0
 2992 0014 C468     		ldr	r4, [r0, #12]
 2993              	.LVL259:
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2994              		.loc 1 2988 0
 2995 0016 0CB9     		cbnz	r4, .L295
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2996              		.loc 1 2988 0 is_stmt 0 discriminator 1
 2997              		.syntax unified
 2998              	@ 2988 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2999 0018 72B6     		 cpsid i 
 3000              	@ 0 "" 2
 3001              		.thumb
 3002              		.syntax unified
 3003              	.L296:
 3004 001a FEE7     		b	.L296
 3005              	.L295:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3006              		.loc 1 2989 0 is_stmt 1
 3007 001c FFF7FEFF 		bl	uxListRemove
 3008              	.LVL260:
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3009              		.loc 1 2994 0
 3010 0020 261D     		adds	r6, r4, #4
 3011 0022 3046     		mov	r0, r6
 3012 0024 FFF7FEFF 		bl	uxListRemove
 3013              	.LVL261:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3014              		.loc 1 2995 0
 3015 0028 E36A     		ldr	r3, [r4, #44]
 3016 002a 0F4A     		ldr	r2, .L301
 3017 002c D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 149


 3018 0030 9342     		cmp	r3, r2
 3019 0032 02D9     		bls	.L297
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3020              		.loc 1 2995 0 is_stmt 0 discriminator 1
 3021 0034 0C4A     		ldr	r2, .L301
 3022 0036 C2F81032 		str	r3, [r2, #528]
 3023              	.L297:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3024              		.loc 1 2995 0 discriminator 3
 3025 003a 0B4D     		ldr	r5, .L301
 3026 003c 05F13000 		add	r0, r5, #48
 3027 0040 03EB8303 		add	r3, r3, r3, lsl #2
 3028 0044 9A00     		lsls	r2, r3, #2
 3029 0046 3146     		mov	r1, r6
 3030 0048 1044     		add	r0, r0, r2
 3031 004a FFF7FEFF 		bl	vListInsertEnd
 3032              	.LVL262:
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3033              		.loc 1 2997 0 is_stmt 1 discriminator 3
 3034 004e E26A     		ldr	r2, [r4, #44]
 3035 0050 D5F80432 		ldr	r3, [r5, #516]
 3036 0054 DB6A     		ldr	r3, [r3, #44]
 3037 0056 9A42     		cmp	r2, r3
 3038 0058 03D9     		bls	.L299
 3039              	.LVL263:
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3040              		.loc 1 3007 0
 3041 005a 0120     		movs	r0, #1
 3042 005c C5F82C02 		str	r0, [r5, #556]
 3043 0060 70BD     		pop	{r4, r5, r6, pc}
 3044              	.LVL264:
 3045              	.L299:
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3046              		.loc 1 3011 0
 3047 0062 0020     		movs	r0, #0
 3048              	.LVL265:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3049              		.loc 1 3015 0
 3050 0064 70BD     		pop	{r4, r5, r6, pc}
 3051              	.LVL266:
 3052              	.L302:
 3053 0066 00BF     		.align	2
 3054              	.L301:
 3055 0068 00000000 		.word	.LANCHOR0
 3056              		.cfi_endproc
 3057              	.LFE554:
 3058              		.size	xTaskRemoveFromUnorderedEventList, .-xTaskRemoveFromUnorderedEventList
 3059              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3060              		.align	2
 3061              		.global	vTaskSetTimeOutState
 3062              		.thumb
 3063              		.thumb_func
 3064              		.type	vTaskSetTimeOutState, %function
 3065              	vTaskSetTimeOutState:
 3066              	.LFB555:
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3067              		.loc 1 3019 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 150


 3068              		.cfi_startproc
 3069              		@ args = 0, pretend = 0, frame = 0
 3070              		@ frame_needed = 0, uses_anonymous_args = 0
 3071              		@ link register save eliminated.
 3072              	.LVL267:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3073              		.loc 1 3020 0
 3074 0000 08B9     		cbnz	r0, .L304
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3075              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3076              		.syntax unified
 3077              	@ 3020 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3078 0002 72B6     		 cpsid i 
 3079              	@ 0 "" 2
 3080              		.thumb
 3081              		.syntax unified
 3082              	.L305:
 3083 0004 FEE7     		b	.L305
 3084              	.L304:
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3085              		.loc 1 3021 0 is_stmt 1
 3086 0006 044A     		ldr	r2, .L306
 3087 0008 D2F82412 		ldr	r1, [r2, #548]
 3088 000c 0160     		str	r1, [r0]
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3089              		.loc 1 3022 0
 3090 000e D2F81422 		ldr	r2, [r2, #532]
 3091 0012 4260     		str	r2, [r0, #4]
 3092 0014 7047     		bx	lr
 3093              	.L307:
 3094 0016 00BF     		.align	2
 3095              	.L306:
 3096 0018 00000000 		.word	.LANCHOR0
 3097              		.cfi_endproc
 3098              	.LFE555:
 3099              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3100              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3101              		.align	2
 3102              		.global	xTaskCheckForTimeOut
 3103              		.thumb
 3104              		.thumb_func
 3105              		.type	xTaskCheckForTimeOut, %function
 3106              	xTaskCheckForTimeOut:
 3107              	.LFB556:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3108              		.loc 1 3027 0
 3109              		.cfi_startproc
 3110              		@ args = 0, pretend = 0, frame = 0
 3111              		@ frame_needed = 0, uses_anonymous_args = 0
 3112              	.LVL268:
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3113              		.loc 1 3030 0
 3114 0000 08B9     		cbnz	r0, .L309
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3115              		.loc 1 3030 0 is_stmt 0 discriminator 1
 3116              		.syntax unified
 3117              	@ 3030 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 151


 3118 0002 72B6     		 cpsid i 
 3119              	@ 0 "" 2
 3120              		.thumb
 3121              		.syntax unified
 3122              	.L310:
 3123 0004 FEE7     		b	.L310
 3124              	.L309:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3125              		.loc 1 3027 0 is_stmt 1
 3126 0006 38B5     		push	{r3, r4, r5, lr}
 3127              		.cfi_def_cfa_offset 16
 3128              		.cfi_offset 3, -16
 3129              		.cfi_offset 4, -12
 3130              		.cfi_offset 5, -8
 3131              		.cfi_offset 14, -4
 3132 0008 0446     		mov	r4, r0
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3133              		.loc 1 3031 0
 3134 000a 09B9     		cbnz	r1, .L311
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3135              		.loc 1 3031 0 is_stmt 0 discriminator 1
 3136              		.syntax unified
 3137              	@ 3031 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3138 000c 72B6     		 cpsid i 
 3139              	@ 0 "" 2
 3140              		.thumb
 3141              		.syntax unified
 3142              	.L312:
 3143 000e FEE7     		b	.L312
 3144              	.L311:
 3145 0010 0D46     		mov	r5, r1
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3146              		.loc 1 3033 0 is_stmt 1
 3147 0012 FFF7FEFF 		bl	vPortEnterCritical
 3148              	.LVL269:
 3149              	.LBB40:
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3150              		.loc 1 3036 0
 3151 0016 124B     		ldr	r3, .L319
 3152 0018 D3F81412 		ldr	r1, [r3, #532]
 3153              	.LVL270:
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3154              		.loc 1 3050 0
 3155 001c 2A68     		ldr	r2, [r5]
 3156 001e B2F1FF3F 		cmp	r2, #-1
 3157 0022 13D0     		beq	.L315
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3158              		.loc 1 3060 0
 3159 0024 2068     		ldr	r0, [r4]
 3160 0026 D3F82432 		ldr	r3, [r3, #548]
 3161 002a 9842     		cmp	r0, r3
 3162 002c 02D0     		beq	.L314
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3163              		.loc 1 3060 0 is_stmt 0 discriminator 1
 3164 002e 6368     		ldr	r3, [r4, #4]
 3165 0030 9942     		cmp	r1, r3
 3166 0032 0DD2     		bcs	.L316
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 152


 3167              	.L314:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3168              		.loc 1 3069 0 is_stmt 1
 3169 0034 6368     		ldr	r3, [r4, #4]
 3170 0036 C81A     		subs	r0, r1, r3
 3171 0038 8242     		cmp	r2, r0
 3172 003a 0BD9     		bls	.L317
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3173              		.loc 1 3072 0
 3174 003c 5B1A     		subs	r3, r3, r1
 3175 003e 1344     		add	r3, r3, r2
 3176 0040 2B60     		str	r3, [r5]
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
 3177              		.loc 1 3073 0
 3178 0042 2046     		mov	r0, r4
 3179 0044 FFF7FEFF 		bl	vTaskSetTimeOutState
 3180              	.LVL271:
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3181              		.loc 1 3074 0
 3182 0048 0024     		movs	r4, #0
 3183              	.LVL272:
 3184 004a 04E0     		b	.L313
 3185              	.LVL273:
 3186              	.L315:
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3187              		.loc 1 3055 0
 3188 004c 0024     		movs	r4, #0
 3189              	.LVL274:
 3190 004e 02E0     		b	.L313
 3191              	.LVL275:
 3192              	.L316:
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3193              		.loc 1 3067 0
 3194 0050 0124     		movs	r4, #1
 3195              	.LVL276:
 3196 0052 00E0     		b	.L313
 3197              	.LVL277:
 3198              	.L317:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3199              		.loc 1 3078 0
 3200 0054 0124     		movs	r4, #1
 3201              	.LVL278:
 3202              	.L313:
 3203              	.LBE40:
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3204              		.loc 1 3081 0
 3205 0056 FFF7FEFF 		bl	vPortExitCritical
 3206              	.LVL279:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3207              		.loc 1 3084 0
 3208 005a 2046     		mov	r0, r4
 3209 005c 38BD     		pop	{r3, r4, r5, pc}
 3210              	.LVL280:
 3211              	.L320:
 3212 005e 00BF     		.align	2
 3213              	.L319:
 3214 0060 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 153


 3215              		.cfi_endproc
 3216              	.LFE556:
 3217              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3218              		.section	.text.vTaskMissedYield,"ax",%progbits
 3219              		.align	2
 3220              		.global	vTaskMissedYield
 3221              		.thumb
 3222              		.thumb_func
 3223              		.type	vTaskMissedYield, %function
 3224              	vTaskMissedYield:
 3225              	.LFB557:
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3226              		.loc 1 3088 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              		@ link register save eliminated.
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3231              		.loc 1 3089 0
 3232 0000 0122     		movs	r2, #1
 3233 0002 024B     		ldr	r3, .L322
 3234 0004 C3F82C22 		str	r2, [r3, #556]
 3235 0008 7047     		bx	lr
 3236              	.L323:
 3237 000a 00BF     		.align	2
 3238              	.L322:
 3239 000c 00000000 		.word	.LANCHOR0
 3240              		.cfi_endproc
 3241              	.LFE557:
 3242              		.size	vTaskMissedYield, .-vTaskMissedYield
 3243              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3244              		.align	2
 3245              		.global	vTaskSetThreadLocalStoragePointer
 3246              		.thumb
 3247              		.thumb_func
 3248              		.type	vTaskSetThreadLocalStoragePointer, %function
 3249              	vTaskSetThreadLocalStoragePointer:
 3250              	.LFB559:
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 3251              		.loc 1 3292 0
 3252              		.cfi_startproc
 3253              		@ args = 0, pretend = 0, frame = 0
 3254              		@ frame_needed = 0, uses_anonymous_args = 0
 3255              		@ link register save eliminated.
 3256              	.LVL281:
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3257              		.loc 1 3295 0
 3258 0000 0429     		cmp	r1, #4
 3259 0002 07DC     		bgt	.L324
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3260              		.loc 1 3297 0
 3261 0004 10B9     		cbnz	r0, .L326
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3262              		.loc 1 3297 0 is_stmt 0 discriminator 1
 3263 0006 044B     		ldr	r3, .L327
 3264 0008 D3F80402 		ldr	r0, [r3, #516]
 3265              	.LVL282:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 154


 3266              	.L326:
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3267              		.loc 1 3298 0 is_stmt 1 discriminator 4
 3268 000c 1031     		adds	r1, r1, #16
 3269              	.LVL283:
 3270 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3271              	.LVL284:
 3272 0012 4A60     		str	r2, [r1, #4]
 3273              	.LVL285:
 3274              	.L324:
 3275 0014 7047     		bx	lr
 3276              	.L328:
 3277 0016 00BF     		.align	2
 3278              	.L327:
 3279 0018 00000000 		.word	.LANCHOR0
 3280              		.cfi_endproc
 3281              	.LFE559:
 3282              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3283              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3284              		.align	2
 3285              		.global	pvTaskGetThreadLocalStoragePointer
 3286              		.thumb
 3287              		.thumb_func
 3288              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3289              	pvTaskGetThreadLocalStoragePointer:
 3290              	.LFB560:
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
 3291              		.loc 1 3308 0
 3292              		.cfi_startproc
 3293              		@ args = 0, pretend = 0, frame = 0
 3294              		@ frame_needed = 0, uses_anonymous_args = 0
 3295              		@ link register save eliminated.
 3296              	.LVL286:
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3297              		.loc 1 3312 0
 3298 0000 0429     		cmp	r1, #4
 3299 0002 08DC     		bgt	.L332
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3300              		.loc 1 3314 0
 3301 0004 10B9     		cbnz	r0, .L331
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3302              		.loc 1 3314 0 is_stmt 0 discriminator 1
 3303 0006 054B     		ldr	r3, .L333
 3304 0008 D3F80402 		ldr	r0, [r3, #516]
 3305              	.LVL287:
 3306              	.L331:
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3307              		.loc 1 3315 0 is_stmt 1 discriminator 4
 3308 000c 1031     		adds	r1, r1, #16
 3309              	.LVL288:
 3310 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3311              	.LVL289:
 3312 0012 4068     		ldr	r0, [r0, #4]
 3313              	.LVL290:
 3314 0014 7047     		bx	lr
 3315              	.LVL291:
 3316              	.L332:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 155


3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3317              		.loc 1 3319 0
 3318 0016 0020     		movs	r0, #0
 3319              	.LVL292:
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3320              		.loc 1 3323 0
 3321 0018 7047     		bx	lr
 3322              	.L334:
 3323 001a 00BF     		.align	2
 3324              	.L333:
 3325 001c 00000000 		.word	.LANCHOR0
 3326              		.cfi_endproc
 3327              	.LFE560:
 3328              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3329              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3330              		.align	2
 3331              		.global	xTaskGetCurrentTaskHandle
 3332              		.thumb
 3333              		.thumb_func
 3334              		.type	xTaskGetCurrentTaskHandle, %function
 3335              	xTaskGetCurrentTaskHandle:
 3336              	.LFB565:
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 3337              		.loc 1 3673 0
 3338              		.cfi_startproc
 3339              		@ args = 0, pretend = 0, frame = 0
 3340              		@ frame_needed = 0, uses_anonymous_args = 0
 3341              		@ link register save eliminated.
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3342              		.loc 1 3679 0
 3343 0000 014B     		ldr	r3, .L336
 3344 0002 D3F80402 		ldr	r0, [r3, #516]
 3345              	.LVL293:
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3346              		.loc 1 3682 0
 3347 0006 7047     		bx	lr
 3348              	.L337:
 3349              		.align	2
 3350              	.L336:
 3351 0008 00000000 		.word	.LANCHOR0
 3352              		.cfi_endproc
 3353              	.LFE565:
 3354              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3355              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3356              		.align	2
 3357              		.global	xTaskGetSchedulerState
 3358              		.thumb
 3359              		.thumb_func
 3360              		.type	xTaskGetSchedulerState, %function
 3361              	xTaskGetSchedulerState:
 3362              	.LFB566:
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3363              		.loc 1 3690 0
 3364              		.cfi_startproc
 3365              		@ args = 0, pretend = 0, frame = 0
 3366              		@ frame_needed = 0, uses_anonymous_args = 0
 3367              		@ link register save eliminated.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 156


3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3368              		.loc 1 3693 0
 3369 0000 064B     		ldr	r3, .L342
 3370 0002 D3F80832 		ldr	r3, [r3, #520]
 3371 0006 2BB1     		cbz	r3, .L340
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3372              		.loc 1 3699 0
 3373 0008 044B     		ldr	r3, .L342
 3374 000a D3F81C32 		ldr	r3, [r3, #540]
 3375 000e 1BB9     		cbnz	r3, .L341
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3376              		.loc 1 3701 0
 3377 0010 0220     		movs	r0, #2
 3378 0012 7047     		bx	lr
 3379              	.L340:
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3380              		.loc 1 3695 0
 3381 0014 0120     		movs	r0, #1
 3382 0016 7047     		bx	lr
 3383              	.L341:
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3384              		.loc 1 3705 0
 3385 0018 0020     		movs	r0, #0
 3386              	.LVL294:
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3387              		.loc 1 3710 0
 3388 001a 7047     		bx	lr
 3389              	.L343:
 3390              		.align	2
 3391              	.L342:
 3392 001c 00000000 		.word	.LANCHOR0
 3393              		.cfi_endproc
 3394              	.LFE566:
 3395              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3396              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3397              		.align	2
 3398              		.global	uxTaskResetEventItemValue
 3399              		.thumb
 3400              		.thumb_func
 3401              		.type	uxTaskResetEventItemValue, %function
 3402              	uxTaskResetEventItemValue:
 3403              	.LFB567:
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
 3404              		.loc 1 4174 0
 3405              		.cfi_startproc
 3406              		@ args = 0, pretend = 0, frame = 0
 3407              		@ frame_needed = 0, uses_anonymous_args = 0
 3408              		@ link register save eliminated.
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3409              		.loc 1 4177 0
 3410 0000 064B     		ldr	r3, .L345
 3411 0002 D3F80422 		ldr	r2, [r3, #516]
 3412 0006 9069     		ldr	r0, [r2, #24]
 3413              	.LVL295:
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3414              		.loc 1 4181 0
 3415 0008 D3F80422 		ldr	r2, [r3, #516]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 157


 3416 000c D3F80432 		ldr	r3, [r3, #516]
 3417 0010 DB6A     		ldr	r3, [r3, #44]
 3418 0012 C3F11403 		rsb	r3, r3, #20
 3419 0016 9361     		str	r3, [r2, #24]
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3420              		.loc 1 4184 0
 3421 0018 7047     		bx	lr
 3422              	.L346:
 3423 001a 00BF     		.align	2
 3424              	.L345:
 3425 001c 00000000 		.word	.LANCHOR0
 3426              		.cfi_endproc
 3427              	.LFE567:
 3428              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3429              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3430              		.align	2
 3431              		.global	ulTaskNotifyTake
 3432              		.thumb
 3433              		.thumb_func
 3434              		.type	ulTaskNotifyTake, %function
 3435              	ulTaskNotifyTake:
 3436              	.LFB568:
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
 3437              		.loc 1 4207 0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 0
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 3441              	.LVL296:
 3442 0000 38B5     		push	{r3, r4, r5, lr}
 3443              		.cfi_def_cfa_offset 16
 3444              		.cfi_offset 3, -16
 3445              		.cfi_offset 4, -12
 3446              		.cfi_offset 5, -8
 3447              		.cfi_offset 14, -4
 3448 0002 0546     		mov	r5, r0
 3449 0004 0C46     		mov	r4, r1
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3450              		.loc 1 4210 0
 3451 0006 FFF7FEFF 		bl	vPortEnterCritical
 3452              	.LVL297:
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3453              		.loc 1 4213 0
 3454 000a 1B4B     		ldr	r3, .L352
 3455 000c D3F80432 		ldr	r3, [r3, #516]
 3456 0010 9B6D     		ldr	r3, [r3, #88]
 3457 0012 93B9     		cbnz	r3, .L348
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3458              		.loc 1 4216 0
 3459 0014 184B     		ldr	r3, .L352
 3460 0016 D3F80432 		ldr	r3, [r3, #516]
 3461 001a 0122     		movs	r2, #1
 3462 001c 83F85C20 		strb	r2, [r3, #92]
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3463              		.loc 1 4218 0
 3464 0020 5CB1     		cbz	r4, .L348
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3465              		.loc 1 4220 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 158


 3466 0022 1146     		mov	r1, r2
 3467 0024 2046     		mov	r0, r4
 3468 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3469              	.LVL298:
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3470              		.loc 1 4227 0
 3471 002a 4FF08052 		mov	r2, #268435456
 3472 002e 134B     		ldr	r3, .L352+4
 3473 0030 1A60     		str	r2, [r3]
 3474              		.syntax unified
 3475              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3476 0032 BFF34F8F 		dsb
 3477              	@ 0 "" 2
 3478              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3479 0036 BFF36F8F 		isb
 3480              	@ 0 "" 2
 3481              		.thumb
 3482              		.syntax unified
 3483              	.L348:
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3484              		.loc 1 4239 0
 3485 003a FFF7FEFF 		bl	vPortExitCritical
 3486              	.LVL299:
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3487              		.loc 1 4241 0
 3488 003e FFF7FEFF 		bl	vPortEnterCritical
 3489              	.LVL300:
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3490              		.loc 1 4244 0
 3491 0042 0D4B     		ldr	r3, .L352
 3492 0044 D3F80432 		ldr	r3, [r3, #516]
 3493 0048 9C6D     		ldr	r4, [r3, #88]
 3494              	.LVL301:
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3495              		.loc 1 4246 0
 3496 004a 5CB1     		cbz	r4, .L349
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3497              		.loc 1 4248 0
 3498 004c 2DB1     		cbz	r5, .L350
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3499              		.loc 1 4250 0
 3500 004e 0A4B     		ldr	r3, .L352
 3501 0050 D3F80432 		ldr	r3, [r3, #516]
 3502 0054 0022     		movs	r2, #0
 3503 0056 9A65     		str	r2, [r3, #88]
 3504 0058 04E0     		b	.L349
 3505              	.L350:
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3506              		.loc 1 4254 0
 3507 005a 074B     		ldr	r3, .L352
 3508 005c D3F80432 		ldr	r3, [r3, #516]
 3509 0060 621E     		subs	r2, r4, #1
 3510 0062 9A65     		str	r2, [r3, #88]
 3511              	.L349:
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3512              		.loc 1 4262 0
 3513 0064 044B     		ldr	r3, .L352
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 159


 3514 0066 D3F80432 		ldr	r3, [r3, #516]
 3515 006a 0022     		movs	r2, #0
 3516 006c 83F85C20 		strb	r2, [r3, #92]
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3517              		.loc 1 4264 0
 3518 0070 FFF7FEFF 		bl	vPortExitCritical
 3519              	.LVL302:
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3520              		.loc 1 4267 0
 3521 0074 2046     		mov	r0, r4
 3522 0076 38BD     		pop	{r3, r4, r5, pc}
 3523              	.LVL303:
 3524              	.L353:
 3525              		.align	2
 3526              	.L352:
 3527 0078 00000000 		.word	.LANCHOR0
 3528 007c 04ED00E0 		.word	-536810236
 3529              		.cfi_endproc
 3530              	.LFE568:
 3531              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3532              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3533              		.align	2
 3534              		.global	xTaskNotifyWait
 3535              		.thumb
 3536              		.thumb_func
 3537              		.type	xTaskNotifyWait, %function
 3538              	xTaskNotifyWait:
 3539              	.LFB569:
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3540              		.loc 1 4275 0
 3541              		.cfi_startproc
 3542              		@ args = 0, pretend = 0, frame = 0
 3543              		@ frame_needed = 0, uses_anonymous_args = 0
 3544              	.LVL304:
 3545 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3546              		.cfi_def_cfa_offset 24
 3547              		.cfi_offset 3, -24
 3548              		.cfi_offset 4, -20
 3549              		.cfi_offset 5, -16
 3550              		.cfi_offset 6, -12
 3551              		.cfi_offset 7, -8
 3552              		.cfi_offset 14, -4
 3553 0002 0746     		mov	r7, r0
 3554 0004 0C46     		mov	r4, r1
 3555 0006 1546     		mov	r5, r2
 3556 0008 1E46     		mov	r6, r3
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3557              		.loc 1 4278 0
 3558 000a FFF7FEFF 		bl	vPortEnterCritical
 3559              	.LVL305:
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3560              		.loc 1 4281 0
 3561 000e 234B     		ldr	r3, .L360
 3562 0010 D3F80432 		ldr	r3, [r3, #516]
 3563 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3564 0018 DBB2     		uxtb	r3, r3
 3565 001a 022B     		cmp	r3, #2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 160


 3566 001c 18D0     		beq	.L355
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3567              		.loc 1 4286 0
 3568 001e 1F4B     		ldr	r3, .L360
 3569 0020 D3F80422 		ldr	r2, [r3, #516]
 3570 0024 906D     		ldr	r0, [r2, #88]
 3571 0026 20EA0700 		bic	r0, r0, r7
 3572 002a 9065     		str	r0, [r2, #88]
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3573              		.loc 1 4289 0
 3574 002c D3F80432 		ldr	r3, [r3, #516]
 3575 0030 0122     		movs	r2, #1
 3576 0032 83F85C20 		strb	r2, [r3, #92]
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3577              		.loc 1 4291 0
 3578 0036 5EB1     		cbz	r6, .L355
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3579              		.loc 1 4293 0
 3580 0038 1146     		mov	r1, r2
 3581 003a 3046     		mov	r0, r6
 3582 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3583              	.LVL306:
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3584              		.loc 1 4300 0
 3585 0040 4FF08052 		mov	r2, #268435456
 3586 0044 164B     		ldr	r3, .L360+4
 3587 0046 1A60     		str	r2, [r3]
 3588              		.syntax unified
 3589              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3590 0048 BFF34F8F 		dsb
 3591              	@ 0 "" 2
 3592              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3593 004c BFF36F8F 		isb
 3594              	@ 0 "" 2
 3595              		.thumb
 3596              		.syntax unified
 3597              	.L355:
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3598              		.loc 1 4312 0
 3599 0050 FFF7FEFF 		bl	vPortExitCritical
 3600              	.LVL307:
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3601              		.loc 1 4314 0
 3602 0054 FFF7FEFF 		bl	vPortEnterCritical
 3603              	.LVL308:
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3604              		.loc 1 4318 0
 3605 0058 25B1     		cbz	r5, .L356
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3606              		.loc 1 4322 0
 3607 005a 104B     		ldr	r3, .L360
 3608 005c D3F80432 		ldr	r3, [r3, #516]
 3609 0060 9B6D     		ldr	r3, [r3, #88]
 3610 0062 2B60     		str	r3, [r5]
 3611              	.L356:
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3612              		.loc 1 4329 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 161


 3613 0064 0D4B     		ldr	r3, .L360
 3614 0066 D3F80432 		ldr	r3, [r3, #516]
 3615 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3616 006e DBB2     		uxtb	r3, r3
 3617 0070 012B     		cmp	r3, #1
 3618 0072 08D0     		beq	.L358
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
 3619              		.loc 1 4338 0
 3620 0074 094B     		ldr	r3, .L360
 3621 0076 D3F80432 		ldr	r3, [r3, #516]
 3622 007a 996D     		ldr	r1, [r3, #88]
 3623 007c 21EA0401 		bic	r1, r1, r4
 3624 0080 9965     		str	r1, [r3, #88]
 3625              	.LVL309:
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3626              		.loc 1 4339 0
 3627 0082 0124     		movs	r4, #1
 3628              	.LVL310:
 3629 0084 00E0     		b	.L357
 3630              	.LVL311:
 3631              	.L358:
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3632              		.loc 1 4332 0
 3633 0086 0024     		movs	r4, #0
 3634              	.LVL312:
 3635              	.L357:
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3636              		.loc 1 4342 0
 3637 0088 044B     		ldr	r3, .L360
 3638 008a D3F80432 		ldr	r3, [r3, #516]
 3639 008e 0022     		movs	r2, #0
 3640 0090 83F85C20 		strb	r2, [r3, #92]
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3641              		.loc 1 4344 0
 3642 0094 FFF7FEFF 		bl	vPortExitCritical
 3643              	.LVL313:
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3644              		.loc 1 4347 0
 3645 0098 2046     		mov	r0, r4
 3646 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3647              	.LVL314:
 3648              	.L361:
 3649              		.align	2
 3650              	.L360:
 3651 009c 00000000 		.word	.LANCHOR0
 3652 00a0 04ED00E0 		.word	-536810236
 3653              		.cfi_endproc
 3654              	.LFE569:
 3655              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3656              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3657              		.align	2
 3658              		.global	xTaskGenericNotify
 3659              		.thumb
 3660              		.thumb_func
 3661              		.type	xTaskGenericNotify, %function
 3662              	xTaskGenericNotify:
 3663              	.LFB570:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 162


4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3664              		.loc 1 4355 0
 3665              		.cfi_startproc
 3666              		@ args = 0, pretend = 0, frame = 0
 3667              		@ frame_needed = 0, uses_anonymous_args = 0
 3668              	.LVL315:
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3669              		.loc 1 4360 0
 3670 0000 08B9     		cbnz	r0, .L363
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3671              		.loc 1 4360 0 is_stmt 0 discriminator 1
 3672              		.syntax unified
 3673              	@ 4360 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3674 0002 72B6     		 cpsid i 
 3675              	@ 0 "" 2
 3676              		.thumb
 3677              		.syntax unified
 3678              	.L364:
 3679 0004 FEE7     		b	.L364
 3680              	.L363:
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3681              		.loc 1 4355 0 is_stmt 1
 3682 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3683              		.cfi_def_cfa_offset 24
 3684              		.cfi_offset 3, -24
 3685              		.cfi_offset 4, -20
 3686              		.cfi_offset 5, -16
 3687              		.cfi_offset 6, -12
 3688              		.cfi_offset 7, -8
 3689              		.cfi_offset 14, -4
 3690 0008 0446     		mov	r4, r0
 3691 000a 1F46     		mov	r7, r3
 3692 000c 1546     		mov	r5, r2
 3693 000e 0E46     		mov	r6, r1
 3694              	.LVL316:
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3695              		.loc 1 4363 0
 3696 0010 FFF7FEFF 		bl	vPortEnterCritical
 3697              	.LVL317:
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3698              		.loc 1 4365 0
 3699 0014 0FB1     		cbz	r7, .L365
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3700              		.loc 1 4367 0
 3701 0016 A36D     		ldr	r3, [r4, #88]
 3702 0018 3B60     		str	r3, [r7]
 3703              	.L365:
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3704              		.loc 1 4370 0
 3705 001a 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3706 001e DBB2     		uxtb	r3, r3
 3707              	.LVL318:
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3708              		.loc 1 4372 0
 3709 0020 0222     		movs	r2, #2
 3710 0022 84F85C20 		strb	r2, [r4, #92]
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 163


 3711              		.loc 1 4374 0
 3712 0026 6A1E     		subs	r2, r5, #1
 3713 0028 032A     		cmp	r2, #3
 3714 002a 15D8     		bhi	.L376
 3715 002c DFE802F0 		tbb	[pc, r2]
 3716              	.L368:
 3717 0030 02       		.byte	(.L367-.L368)/2
 3718 0031 07       		.byte	(.L369-.L368)/2
 3719 0032 0C       		.byte	(.L370-.L368)/2
 3720 0033 0F       		.byte	(.L371-.L368)/2
 3721              		.p2align 1
 3722              	.L367:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3723              		.loc 1 4377 0
 3724 0034 A26D     		ldr	r2, [r4, #88]
 3725 0036 1643     		orrs	r6, r6, r2
 3726              	.LVL319:
 3727 0038 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3728              		.loc 1 4357 0
 3729 003a 0125     		movs	r5, #1
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3730              		.loc 1 4378 0
 3731 003c 0FE0     		b	.L366
 3732              	.LVL320:
 3733              	.L369:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3734              		.loc 1 4381 0
 3735 003e A26D     		ldr	r2, [r4, #88]
 3736 0040 0132     		adds	r2, r2, #1
 3737 0042 A265     		str	r2, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3738              		.loc 1 4357 0
 3739 0044 0125     		movs	r5, #1
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3740              		.loc 1 4382 0
 3741 0046 0AE0     		b	.L366
 3742              	.L370:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3743              		.loc 1 4385 0
 3744 0048 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3745              		.loc 1 4357 0
 3746 004a 0125     		movs	r5, #1
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3747              		.loc 1 4386 0
 3748 004c 07E0     		b	.L366
 3749              	.L371:
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3750              		.loc 1 4389 0
 3751 004e 022B     		cmp	r3, #2
 3752 0050 04D0     		beq	.L377
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3753              		.loc 1 4391 0
 3754 0052 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3755              		.loc 1 4357 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 164


 3756 0054 0125     		movs	r5, #1
 3757 0056 02E0     		b	.L366
 3758              	.L376:
 3759 0058 0125     		movs	r5, #1
 3760 005a 00E0     		b	.L366
 3761              	.L377:
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3762              		.loc 1 4396 0
 3763 005c 0025     		movs	r5, #0
 3764              	.LVL321:
 3765              	.L366:
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3766              		.loc 1 4410 0
 3767 005e 012B     		cmp	r3, #1
 3768 0060 27D1     		bne	.L372
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 3769              		.loc 1 4412 0
 3770 0062 261D     		adds	r6, r4, #4
 3771 0064 3046     		mov	r0, r6
 3772 0066 FFF7FEFF 		bl	uxListRemove
 3773              	.LVL322:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3774              		.loc 1 4413 0
 3775 006a E36A     		ldr	r3, [r4, #44]
 3776 006c 134A     		ldr	r2, .L379
 3777 006e D2F81022 		ldr	r2, [r2, #528]
 3778 0072 9342     		cmp	r3, r2
 3779 0074 02D9     		bls	.L373
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3780              		.loc 1 4413 0 is_stmt 0 discriminator 1
 3781 0076 114A     		ldr	r2, .L379
 3782 0078 C2F81032 		str	r3, [r2, #528]
 3783              	.L373:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3784              		.loc 1 4413 0 discriminator 3
 3785 007c 03EB8303 		add	r3, r3, r3, lsl #2
 3786 0080 9A00     		lsls	r2, r3, #2
 3787 0082 3146     		mov	r1, r6
 3788 0084 0E48     		ldr	r0, .L379+4
 3789 0086 1044     		add	r0, r0, r2
 3790 0088 FFF7FEFF 		bl	vListInsertEnd
 3791              	.LVL323:
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3792              		.loc 1 4416 0 is_stmt 1 discriminator 3
 3793 008c A36A     		ldr	r3, [r4, #40]
 3794 008e 0BB1     		cbz	r3, .L374
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3795              		.loc 1 4416 0 is_stmt 0 discriminator 1
 3796              		.syntax unified
 3797              	@ 4416 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3798 0090 72B6     		 cpsid i 
 3799              	@ 0 "" 2
 3800              		.thumb
 3801              		.syntax unified
 3802              	.L375:
 3803 0092 FEE7     		b	.L375
 3804              	.L374:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 165


4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3805              		.loc 1 4434 0 is_stmt 1
 3806 0094 E26A     		ldr	r2, [r4, #44]
 3807 0096 094B     		ldr	r3, .L379
 3808 0098 D3F80432 		ldr	r3, [r3, #516]
 3809 009c DB6A     		ldr	r3, [r3, #44]
 3810 009e 9A42     		cmp	r2, r3
 3811 00a0 07D9     		bls	.L372
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3812              		.loc 1 4438 0
 3813 00a2 4FF08052 		mov	r2, #268435456
 3814 00a6 074B     		ldr	r3, .L379+8
 3815 00a8 1A60     		str	r2, [r3]
 3816              		.syntax unified
 3817              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3818 00aa BFF34F8F 		dsb
 3819              	@ 0 "" 2
 3820              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3821 00ae BFF36F8F 		isb
 3822              	@ 0 "" 2
 3823              		.thumb
 3824              		.syntax unified
 3825              	.L372:
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3826              		.loc 1 4450 0
 3827 00b2 FFF7FEFF 		bl	vPortExitCritical
 3828              	.LVL324:
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3829              		.loc 1 4453 0
 3830 00b6 2846     		mov	r0, r5
 3831 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3832              	.LVL325:
 3833              	.L380:
 3834 00ba 00BF     		.align	2
 3835              	.L379:
 3836 00bc 00000000 		.word	.LANCHOR0
 3837 00c0 30000000 		.word	.LANCHOR0+48
 3838 00c4 04ED00E0 		.word	-536810236
 3839              		.cfi_endproc
 3840              	.LFE570:
 3841              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 3842              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 3843              		.align	2
 3844              		.global	xTaskGenericNotifyFromISR
 3845              		.thumb
 3846              		.thumb_func
 3847              		.type	xTaskGenericNotifyFromISR, %function
 3848              	xTaskGenericNotifyFromISR:
 3849              	.LFB571:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3850              		.loc 1 4461 0
 3851              		.cfi_startproc
 3852              		@ args = 4, pretend = 0, frame = 0
 3853              		@ frame_needed = 0, uses_anonymous_args = 0
 3854              	.LVL326:
 3855 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3856              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 166


 3857              		.cfi_offset 3, -32
 3858              		.cfi_offset 4, -28
 3859              		.cfi_offset 5, -24
 3860              		.cfi_offset 6, -20
 3861              		.cfi_offset 7, -16
 3862              		.cfi_offset 8, -12
 3863              		.cfi_offset 9, -8
 3864              		.cfi_offset 14, -4
 3865 0004 089E     		ldr	r6, [sp, #32]
 3866              	.LVL327:
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3867              		.loc 1 4467 0
 3868 0006 08B9     		cbnz	r0, .L382
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3869              		.loc 1 4467 0 is_stmt 0 discriminator 1
 3870              		.syntax unified
 3871              	@ 4467 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3872 0008 72B6     		 cpsid i 
 3873              	@ 0 "" 2
 3874              		.thumb
 3875              		.syntax unified
 3876              	.L383:
 3877 000a FEE7     		b	.L383
 3878              	.L382:
 3879 000c 0446     		mov	r4, r0
 3880 000e 9946     		mov	r9, r3
 3881 0010 1546     		mov	r5, r2
 3882 0012 8846     		mov	r8, r1
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3883              		.loc 1 4485 0 is_stmt 1
 3884 0014 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3885              	.LVL328:
 3886              	.LBB41:
 3887              	.LBB42:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 3888              		.loc 2 215 0
 3889              		.syntax unified
 3890              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 3891 0018 EFF31187 		    mrs r7, basepri                                            
 3892 001c 4FF02F03 	    mov r3, #47                                                 
 3893 0020 83F31188 	    msr basepri, r3                                            
 3894 0024 BFF36F8F 	    isb                                                        
 3895 0028 BFF34F8F 	    dsb                                                        
 3896              	
 3897              	@ 0 "" 2
 3898              		.thumb
 3899              		.syntax unified
 3900              	.LBE42:
 3901              	.LBE41:
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3902              		.loc 1 4491 0
 3903 002c B9F1000F 		cmp	r9, #0
 3904 0030 02D0     		beq	.L384
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3905              		.loc 1 4493 0
 3906 0032 A36D     		ldr	r3, [r4, #88]
 3907 0034 C9F80030 		str	r3, [r9]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 167


 3908              	.L384:
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 3909              		.loc 1 4496 0
 3910 0038 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3911 003c DBB2     		uxtb	r3, r3
 3912              	.LVL329:
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3913              		.loc 1 4497 0
 3914 003e 0222     		movs	r2, #2
 3915 0040 84F85C20 		strb	r2, [r4, #92]
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3916              		.loc 1 4499 0
 3917 0044 6A1E     		subs	r2, r5, #1
 3918 0046 032A     		cmp	r2, #3
 3919 0048 18D8     		bhi	.L398
 3920 004a DFE802F0 		tbb	[pc, r2]
 3921              	.L387:
 3922 004e 02       		.byte	(.L386-.L387)/2
 3923 004f 08       		.byte	(.L388-.L387)/2
 3924 0050 0D       		.byte	(.L389-.L387)/2
 3925 0051 11       		.byte	(.L390-.L387)/2
 3926              		.p2align 1
 3927              	.L386:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3928              		.loc 1 4502 0
 3929 0052 A26D     		ldr	r2, [r4, #88]
 3930 0054 42EA0802 		orr	r2, r2, r8
 3931 0058 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3932              		.loc 1 4464 0
 3933 005a 0125     		movs	r5, #1
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3934              		.loc 1 4503 0
 3935 005c 11E0     		b	.L385
 3936              	.L388:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3937              		.loc 1 4506 0
 3938 005e A26D     		ldr	r2, [r4, #88]
 3939 0060 0132     		adds	r2, r2, #1
 3940 0062 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3941              		.loc 1 4464 0
 3942 0064 0125     		movs	r5, #1
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3943              		.loc 1 4507 0
 3944 0066 0CE0     		b	.L385
 3945              	.L389:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3946              		.loc 1 4510 0
 3947 0068 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3948              		.loc 1 4464 0
 3949 006c 0125     		movs	r5, #1
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3950              		.loc 1 4511 0
 3951 006e 08E0     		b	.L385
 3952              	.L390:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 168


4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3953              		.loc 1 4514 0
 3954 0070 022B     		cmp	r3, #2
 3955 0072 05D0     		beq	.L399
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3956              		.loc 1 4516 0
 3957 0074 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3958              		.loc 1 4464 0
 3959 0078 0125     		movs	r5, #1
 3960 007a 02E0     		b	.L385
 3961              	.L398:
 3962 007c 0125     		movs	r5, #1
 3963 007e 00E0     		b	.L385
 3964              	.L399:
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3965              		.loc 1 4521 0
 3966 0080 0025     		movs	r5, #0
 3967              	.L385:
 3968              	.LVL330:
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3969              		.loc 1 4535 0
 3970 0082 012B     		cmp	r3, #1
 3971 0084 32D1     		bne	.L391
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3972              		.loc 1 4538 0
 3973 0086 A36A     		ldr	r3, [r4, #40]
 3974              	.LVL331:
 3975 0088 0BB1     		cbz	r3, .L392
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3976              		.loc 1 4538 0 is_stmt 0 discriminator 1
 3977              		.syntax unified
 3978              	@ 4538 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3979 008a 72B6     		 cpsid i 
 3980              	@ 0 "" 2
 3981              		.thumb
 3982              		.syntax unified
 3983              	.L393:
 3984 008c FEE7     		b	.L393
 3985              	.L392:
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3986              		.loc 1 4540 0 is_stmt 1
 3987 008e 1A4B     		ldr	r3, .L401
 3988 0090 D3F81C32 		ldr	r3, [r3, #540]
 3989 0094 B3B9     		cbnz	r3, .L394
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3990              		.loc 1 4542 0
 3991 0096 04F10408 		add	r8, r4, #4
 3992              	.LVL332:
 3993 009a 4046     		mov	r0, r8
 3994 009c FFF7FEFF 		bl	uxListRemove
 3995              	.LVL333:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3996              		.loc 1 4543 0
 3997 00a0 E36A     		ldr	r3, [r4, #44]
 3998 00a2 154A     		ldr	r2, .L401
 3999 00a4 D2F81022 		ldr	r2, [r2, #528]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 169


 4000 00a8 9342     		cmp	r3, r2
 4001 00aa 02D9     		bls	.L395
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4002              		.loc 1 4543 0 is_stmt 0 discriminator 1
 4003 00ac 124A     		ldr	r2, .L401
 4004 00ae C2F81032 		str	r3, [r2, #528]
 4005              	.L395:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4006              		.loc 1 4543 0 discriminator 3
 4007 00b2 03EB8303 		add	r3, r3, r3, lsl #2
 4008 00b6 9A00     		lsls	r2, r3, #2
 4009 00b8 4146     		mov	r1, r8
 4010 00ba 1048     		ldr	r0, .L401+4
 4011 00bc 1044     		add	r0, r0, r2
 4012 00be FFF7FEFF 		bl	vListInsertEnd
 4013              	.LVL334:
 4014 00c2 04E0     		b	.L396
 4015              	.LVL335:
 4016              	.L394:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4017              		.loc 1 4549 0 is_stmt 1
 4018 00c4 04F11801 		add	r1, r4, #24
 4019 00c8 0D48     		ldr	r0, .L401+8
 4020 00ca FFF7FEFF 		bl	vListInsertEnd
 4021              	.LVL336:
 4022              	.L396:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4023              		.loc 1 4552 0
 4024 00ce E26A     		ldr	r2, [r4, #44]
 4025 00d0 094B     		ldr	r3, .L401
 4026 00d2 D3F80432 		ldr	r3, [r3, #516]
 4027 00d6 DB6A     		ldr	r3, [r3, #44]
 4028 00d8 9A42     		cmp	r2, r3
 4029 00da 07D9     		bls	.L391
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4030              		.loc 1 4556 0
 4031 00dc 16B1     		cbz	r6, .L397
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4032              		.loc 1 4558 0
 4033 00de 0123     		movs	r3, #1
 4034 00e0 3360     		str	r3, [r6]
 4035 00e2 03E0     		b	.L391
 4036              	.L397:
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4037              		.loc 1 4565 0
 4038 00e4 0122     		movs	r2, #1
 4039 00e6 044B     		ldr	r3, .L401
 4040 00e8 C3F82C22 		str	r2, [r3, #556]
 4041              	.L391:
 4042              	.LVL337:
 4043              	.LBB43:
 4044              	.LBB44:
 4045              		.loc 2 233 0
 4046              		.syntax unified
 4047              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4048 00ec 87F31188 		    msr basepri, r7  
 4049              	@ 0 "" 2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 170


 4050              	.LVL338:
 4051              		.thumb
 4052              		.syntax unified
 4053              	.LBE44:
 4054              	.LBE43:
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4055              		.loc 1 4577 0
 4056 00f0 2846     		mov	r0, r5
 4057 00f2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 4058              	.LVL339:
 4059              	.L402:
 4060 00f6 00BF     		.align	2
 4061              	.L401:
 4062 00f8 00000000 		.word	.LANCHOR0
 4063 00fc 30000000 		.word	.LANCHOR0+48
 4064 0100 14000000 		.word	.LANCHOR0+20
 4065              		.cfi_endproc
 4066              	.LFE571:
 4067              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4068              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4069              		.align	2
 4070              		.global	vTaskNotifyGiveFromISR
 4071              		.thumb
 4072              		.thumb_func
 4073              		.type	vTaskNotifyGiveFromISR, %function
 4074              	vTaskNotifyGiveFromISR:
 4075              	.LFB572:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4076              		.loc 1 4585 0
 4077              		.cfi_startproc
 4078              		@ args = 0, pretend = 0, frame = 0
 4079              		@ frame_needed = 0, uses_anonymous_args = 0
 4080              	.LVL340:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4081              		.loc 1 4590 0
 4082 0000 08B9     		cbnz	r0, .L404
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4083              		.loc 1 4590 0 is_stmt 0 discriminator 1
 4084              		.syntax unified
 4085              	@ 4590 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4086 0002 72B6     		 cpsid i 
 4087              	@ 0 "" 2
 4088              		.thumb
 4089              		.syntax unified
 4090              	.L405:
 4091 0004 FEE7     		b	.L405
 4092              	.L404:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4093              		.loc 1 4585 0 is_stmt 1
 4094 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4095              		.cfi_def_cfa_offset 24
 4096              		.cfi_offset 3, -24
 4097              		.cfi_offset 4, -20
 4098              		.cfi_offset 5, -16
 4099              		.cfi_offset 6, -12
 4100              		.cfi_offset 7, -8
 4101              		.cfi_offset 14, -4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 171


 4102 0008 0446     		mov	r4, r0
 4103 000a 0D46     		mov	r5, r1
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4104              		.loc 1 4608 0
 4105 000c FFF7FEFF 		bl	vPortValidateInterruptPriority
 4106              	.LVL341:
 4107              	.LBB45:
 4108              	.LBB46:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 4109              		.loc 2 215 0
 4110              		.syntax unified
 4111              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4112 0010 EFF31186 		    mrs r6, basepri                                            
 4113 0014 4FF02F03 	    mov r3, #47                                                 
 4114 0018 83F31188 	    msr basepri, r3                                            
 4115 001c BFF36F8F 	    isb                                                        
 4116 0020 BFF34F8F 	    dsb                                                        
 4117              	
 4118              	@ 0 "" 2
 4119              		.thumb
 4120              		.syntax unified
 4121              	.LBE46:
 4122              	.LBE45:
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4123              		.loc 1 4614 0
 4124 0024 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4125 0028 DBB2     		uxtb	r3, r3
 4126              	.LVL342:
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4127              		.loc 1 4615 0
 4128 002a 0222     		movs	r2, #2
 4129 002c 84F85C20 		strb	r2, [r4, #92]
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4130              		.loc 1 4619 0
 4131 0030 A26D     		ldr	r2, [r4, #88]
 4132 0032 0132     		adds	r2, r2, #1
 4133 0034 A265     		str	r2, [r4, #88]
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4134              		.loc 1 4625 0
 4135 0036 012B     		cmp	r3, #1
 4136 0038 31D1     		bne	.L406
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4137              		.loc 1 4628 0
 4138 003a A36A     		ldr	r3, [r4, #40]
 4139              	.LVL343:
 4140 003c 0BB1     		cbz	r3, .L407
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4141              		.loc 1 4628 0 is_stmt 0 discriminator 1
 4142              		.syntax unified
 4143              	@ 4628 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4144 003e 72B6     		 cpsid i 
 4145              	@ 0 "" 2
 4146              		.thumb
 4147              		.syntax unified
 4148              	.L408:
 4149 0040 FEE7     		b	.L408
 4150              	.L407:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 172


4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4151              		.loc 1 4630 0 is_stmt 1
 4152 0042 184B     		ldr	r3, .L414
 4153 0044 D3F81C32 		ldr	r3, [r3, #540]
 4154 0048 ABB9     		cbnz	r3, .L409
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4155              		.loc 1 4632 0
 4156 004a 271D     		adds	r7, r4, #4
 4157 004c 3846     		mov	r0, r7
 4158 004e FFF7FEFF 		bl	uxListRemove
 4159              	.LVL344:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4160              		.loc 1 4633 0
 4161 0052 E36A     		ldr	r3, [r4, #44]
 4162 0054 134A     		ldr	r2, .L414
 4163 0056 D2F81022 		ldr	r2, [r2, #528]
 4164 005a 9342     		cmp	r3, r2
 4165 005c 02D9     		bls	.L410
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4166              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4167 005e 114A     		ldr	r2, .L414
 4168 0060 C2F81032 		str	r3, [r2, #528]
 4169              	.L410:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4170              		.loc 1 4633 0 discriminator 3
 4171 0064 03EB8303 		add	r3, r3, r3, lsl #2
 4172 0068 9A00     		lsls	r2, r3, #2
 4173 006a 3946     		mov	r1, r7
 4174 006c 0E48     		ldr	r0, .L414+4
 4175 006e 1044     		add	r0, r0, r2
 4176 0070 FFF7FEFF 		bl	vListInsertEnd
 4177              	.LVL345:
 4178 0074 04E0     		b	.L411
 4179              	.L409:
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4180              		.loc 1 4639 0 is_stmt 1
 4181 0076 04F11801 		add	r1, r4, #24
 4182 007a 0C48     		ldr	r0, .L414+8
 4183 007c FFF7FEFF 		bl	vListInsertEnd
 4184              	.LVL346:
 4185              	.L411:
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4186              		.loc 1 4642 0
 4187 0080 E26A     		ldr	r2, [r4, #44]
 4188 0082 084B     		ldr	r3, .L414
 4189 0084 D3F80432 		ldr	r3, [r3, #516]
 4190 0088 DB6A     		ldr	r3, [r3, #44]
 4191 008a 9A42     		cmp	r2, r3
 4192 008c 07D9     		bls	.L406
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4193              		.loc 1 4646 0
 4194 008e 15B1     		cbz	r5, .L412
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4195              		.loc 1 4648 0
 4196 0090 0123     		movs	r3, #1
 4197 0092 2B60     		str	r3, [r5]
 4198 0094 03E0     		b	.L406
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 173


 4199              	.L412:
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4200              		.loc 1 4655 0
 4201 0096 0122     		movs	r2, #1
 4202 0098 024B     		ldr	r3, .L414
 4203 009a C3F82C22 		str	r2, [r3, #556]
 4204              	.L406:
 4205              	.LVL347:
 4206              	.LBB47:
 4207              	.LBB48:
 4208              		.loc 2 233 0
 4209              		.syntax unified
 4210              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4211 009e 86F31188 		    msr basepri, r6  
 4212              	@ 0 "" 2
 4213              	.LVL348:
 4214              		.thumb
 4215              		.syntax unified
 4216 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4217              	.LVL349:
 4218              	.L415:
 4219              		.align	2
 4220              	.L414:
 4221 00a4 00000000 		.word	.LANCHOR0
 4222 00a8 30000000 		.word	.LANCHOR0+48
 4223 00ac 14000000 		.word	.LANCHOR0+20
 4224              	.LBE48:
 4225              	.LBE47:
 4226              		.cfi_endproc
 4227              	.LFE572:
 4228              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4229              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4230              		.align	2
 4231              		.global	xTaskNotifyStateClear
 4232              		.thumb
 4233              		.thumb_func
 4234              		.type	xTaskNotifyStateClear, %function
 4235              	xTaskNotifyStateClear:
 4236              	.LFB573:
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 4237              		.loc 1 4674 0
 4238              		.cfi_startproc
 4239              		@ args = 0, pretend = 0, frame = 0
 4240              		@ frame_needed = 0, uses_anonymous_args = 0
 4241              	.LVL350:
 4242 0000 10B5     		push	{r4, lr}
 4243              		.cfi_def_cfa_offset 8
 4244              		.cfi_offset 4, -8
 4245              		.cfi_offset 14, -4
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4246              		.loc 1 4680 0
 4247 0002 0446     		mov	r4, r0
 4248 0004 10B9     		cbnz	r0, .L417
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4249              		.loc 1 4680 0 is_stmt 0 discriminator 1
 4250 0006 0A4B     		ldr	r3, .L421
 4251 0008 D3F80442 		ldr	r4, [r3, #516]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 174


 4252              	.LVL351:
 4253              	.L417:
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 4254              		.loc 1 4682 0 is_stmt 1 discriminator 4
 4255 000c FFF7FEFF 		bl	vPortEnterCritical
 4256              	.LVL352:
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4257              		.loc 1 4684 0 discriminator 4
 4258 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4259 0014 DBB2     		uxtb	r3, r3
 4260 0016 022B     		cmp	r3, #2
 4261 0018 04D1     		bne	.L419
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 4262              		.loc 1 4686 0
 4263 001a 0023     		movs	r3, #0
 4264 001c 84F85C30 		strb	r3, [r4, #92]
 4265              	.LVL353:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4266              		.loc 1 4687 0
 4267 0020 0124     		movs	r4, #1
 4268              	.LVL354:
 4269 0022 00E0     		b	.L418
 4270              	.LVL355:
 4271              	.L419:
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4272              		.loc 1 4691 0
 4273 0024 0024     		movs	r4, #0
 4274              	.LVL356:
 4275              	.L418:
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4276              		.loc 1 4694 0
 4277 0026 FFF7FEFF 		bl	vPortExitCritical
 4278              	.LVL357:
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4279              		.loc 1 4697 0
 4280 002a 2046     		mov	r0, r4
 4281 002c 10BD     		pop	{r4, pc}
 4282              	.LVL358:
 4283              	.L422:
 4284 002e 00BF     		.align	2
 4285              	.L421:
 4286 0030 00000000 		.word	.LANCHOR0
 4287              		.cfi_endproc
 4288              	.LFE573:
 4289              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4290              		.global	pxCurrentTCB
 4291              		.section	.rodata.str1.4,"aMS",%progbits,1
 4292              		.align	2
 4293              	.LC0:
 4294 0000 49444C45 		.ascii	"IDLE\000"
 4294      00
 4295              		.bss
 4296              		.align	2
 4297              		.set	.LANCHOR0,. + 0
 4298              		.type	xSuspendedTaskList, %object
 4299              		.size	xSuspendedTaskList, 20
 4300              	xSuspendedTaskList:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 175


 4301 0000 00000000 		.space	20
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4301      00000000 
 4302              		.type	xPendingReadyList, %object
 4303              		.size	xPendingReadyList, 20
 4304              	xPendingReadyList:
 4305 0014 00000000 		.space	20
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4305      00000000 
 4306              		.type	pxDelayedTaskList, %object
 4307              		.size	pxDelayedTaskList, 4
 4308              	pxDelayedTaskList:
 4309 0028 00000000 		.space	4
 4310              		.type	xNextTaskUnblockTime, %object
 4311              		.size	xNextTaskUnblockTime, 4
 4312              	xNextTaskUnblockTime:
 4313 002c 00000000 		.space	4
 4314              		.type	pxReadyTasksLists, %object
 4315              		.size	pxReadyTasksLists, 400
 4316              	pxReadyTasksLists:
 4317 0030 00000000 		.space	400
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4317      00000000 
 4318              		.type	xDelayedTaskList1, %object
 4319              		.size	xDelayedTaskList1, 20
 4320              	xDelayedTaskList1:
 4321 01c0 00000000 		.space	20
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4321      00000000 
 4322              		.type	xDelayedTaskList2, %object
 4323              		.size	xDelayedTaskList2, 20
 4324              	xDelayedTaskList2:
 4325 01d4 00000000 		.space	20
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4325      00000000 
 4326              		.type	xTasksWaitingTermination, %object
 4327              		.size	xTasksWaitingTermination, 20
 4328              	xTasksWaitingTermination:
 4329 01e8 00000000 		.space	20
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4329      00000000 
 4330              		.type	pxOverflowDelayedTaskList, %object
 4331              		.size	pxOverflowDelayedTaskList, 4
 4332              	pxOverflowDelayedTaskList:
 4333 01fc 00000000 		.space	4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 176


 4334              		.type	uxCurrentNumberOfTasks, %object
 4335              		.size	uxCurrentNumberOfTasks, 4
 4336              	uxCurrentNumberOfTasks:
 4337 0200 00000000 		.space	4
 4338              		.type	pxCurrentTCB, %object
 4339              		.size	pxCurrentTCB, 4
 4340              	pxCurrentTCB:
 4341 0204 00000000 		.space	4
 4342              		.type	xSchedulerRunning, %object
 4343              		.size	xSchedulerRunning, 4
 4344              	xSchedulerRunning:
 4345 0208 00000000 		.space	4
 4346              		.type	uxTaskNumber, %object
 4347              		.size	uxTaskNumber, 4
 4348              	uxTaskNumber:
 4349 020c 00000000 		.space	4
 4350              		.type	uxTopReadyPriority, %object
 4351              		.size	uxTopReadyPriority, 4
 4352              	uxTopReadyPriority:
 4353 0210 00000000 		.space	4
 4354              		.type	xTickCount, %object
 4355              		.size	xTickCount, 4
 4356              	xTickCount:
 4357 0214 00000000 		.space	4
 4358              		.type	uxDeletedTasksWaitingCleanUp, %object
 4359              		.size	uxDeletedTasksWaitingCleanUp, 4
 4360              	uxDeletedTasksWaitingCleanUp:
 4361 0218 00000000 		.space	4
 4362              		.type	uxSchedulerSuspended, %object
 4363              		.size	uxSchedulerSuspended, 4
 4364              	uxSchedulerSuspended:
 4365 021c 00000000 		.space	4
 4366              		.type	xIdleTaskHandle, %object
 4367              		.size	xIdleTaskHandle, 4
 4368              	xIdleTaskHandle:
 4369 0220 00000000 		.space	4
 4370              		.type	xNumOfOverflows, %object
 4371              		.size	xNumOfOverflows, 4
 4372              	xNumOfOverflows:
 4373 0224 00000000 		.space	4
 4374              		.type	uxPendedTicks, %object
 4375              		.size	uxPendedTicks, 4
 4376              	uxPendedTicks:
 4377 0228 00000000 		.space	4
 4378              		.type	xYieldPending, %object
 4379              		.size	xYieldPending, 4
 4380              	xYieldPending:
 4381 022c 00000000 		.space	4
 4382              		.text
 4383              	.Letext0:
 4384              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4385              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4386              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4387              		.file 6 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/syslib/cy_syslib.h"
 4388              		.file 7 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/scb/cy_scb_spi.h"
 4389              		.file 8 "Generated_Source\\PSoC6\\pdl\\drivers/peripheral/sar/cy_sar.h"
 4390              		.file 9 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack.h"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 177


 4391              		.file 10 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_stack_host_main.h"
 4392              		.file 11 "Generated_Source\\PSoC6\\pdl\\middleware/ble/cy_ble_gap.h"
 4393              		.file 12 "Generated_Source\\PSoC6/ADC.h"
 4394              		.file 13 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/projdefs.h"
 4395              		.file 14 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/list.h"
 4396              		.file 15 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 4397              		.file 16 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4398              		.file 17 "Generated_Source\\PSoC6/CY_EINK_SPIM.h"
 4399              		.file 18 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/portable.h"
 4400              		.file 19 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 4401              		.file 20 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 4402              		.section	.debug_info,"",%progbits
 4403              	.Ldebug_info0:
 4404 0000 AB240000 		.4byte	0x24ab
 4405 0004 0400     		.2byte	0x4
 4406 0006 00000000 		.4byte	.Ldebug_abbrev0
 4407 000a 04       		.byte	0x4
 4408 000b 01       		.uleb128 0x1
 4409 000c AF050000 		.4byte	.LASF398
 4410 0010 0C       		.byte	0xc
 4411 0011 DA100000 		.4byte	.LASF399
 4412 0015 04200000 		.4byte	.LASF400
 4413 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4414 001d 00000000 		.4byte	0
 4415 0021 00000000 		.4byte	.Ldebug_line0
 4416 0025 02       		.uleb128 0x2
 4417 0026 120C0000 		.4byte	.LASF4
 4418 002a 03       		.byte	0x3
 4419 002b D8       		.byte	0xd8
 4420 002c 30000000 		.4byte	0x30
 4421 0030 03       		.uleb128 0x3
 4422 0031 04       		.byte	0x4
 4423 0032 07       		.byte	0x7
 4424 0033 B9020000 		.4byte	.LASF0
 4425 0037 04       		.uleb128 0x4
 4426 0038 04       		.byte	0x4
 4427 0039 05       		.byte	0x5
 4428 003a 696E7400 		.ascii	"int\000"
 4429 003e 03       		.uleb128 0x3
 4430 003f 08       		.byte	0x8
 4431 0040 05       		.byte	0x5
 4432 0041 D4120000 		.4byte	.LASF1
 4433 0045 03       		.uleb128 0x3
 4434 0046 08       		.byte	0x8
 4435 0047 04       		.byte	0x4
 4436 0048 DD160000 		.4byte	.LASF2
 4437 004c 03       		.uleb128 0x3
 4438 004d 01       		.byte	0x1
 4439 004e 06       		.byte	0x6
 4440 004f 8D200000 		.4byte	.LASF3
 4441 0053 02       		.uleb128 0x2
 4442 0054 5A1B0000 		.4byte	.LASF5
 4443 0058 04       		.byte	0x4
 4444 0059 1D       		.byte	0x1d
 4445 005a 5E000000 		.4byte	0x5e
 4446 005e 03       		.uleb128 0x3
 4447 005f 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 178


 4448 0060 08       		.byte	0x8
 4449 0061 D4170000 		.4byte	.LASF6
 4450 0065 03       		.uleb128 0x3
 4451 0066 02       		.byte	0x2
 4452 0067 05       		.byte	0x5
 4453 0068 02190000 		.4byte	.LASF7
 4454 006c 02       		.uleb128 0x2
 4455 006d 5C0A0000 		.4byte	.LASF8
 4456 0071 04       		.byte	0x4
 4457 0072 2B       		.byte	0x2b
 4458 0073 77000000 		.4byte	0x77
 4459 0077 03       		.uleb128 0x3
 4460 0078 02       		.byte	0x2
 4461 0079 07       		.byte	0x7
 4462 007a 99200000 		.4byte	.LASF9
 4463 007e 02       		.uleb128 0x2
 4464 007f 83030000 		.4byte	.LASF10
 4465 0083 04       		.byte	0x4
 4466 0084 3F       		.byte	0x3f
 4467 0085 89000000 		.4byte	0x89
 4468 0089 03       		.uleb128 0x3
 4469 008a 04       		.byte	0x4
 4470 008b 05       		.byte	0x5
 4471 008c 7F190000 		.4byte	.LASF11
 4472 0090 02       		.uleb128 0x2
 4473 0091 9F1D0000 		.4byte	.LASF12
 4474 0095 04       		.byte	0x4
 4475 0096 41       		.byte	0x41
 4476 0097 9B000000 		.4byte	0x9b
 4477 009b 03       		.uleb128 0x3
 4478 009c 04       		.byte	0x4
 4479 009d 07       		.byte	0x7
 4480 009e 9A1C0000 		.4byte	.LASF13
 4481 00a2 03       		.uleb128 0x3
 4482 00a3 08       		.byte	0x8
 4483 00a4 07       		.byte	0x7
 4484 00a5 F1080000 		.4byte	.LASF14
 4485 00a9 03       		.uleb128 0x3
 4486 00aa 04       		.byte	0x4
 4487 00ab 07       		.byte	0x7
 4488 00ac 721C0000 		.4byte	.LASF15
 4489 00b0 05       		.uleb128 0x5
 4490 00b1 04       		.byte	0x4
 4491 00b2 06       		.uleb128 0x6
 4492 00b3 04       		.byte	0x4
 4493 00b4 B8000000 		.4byte	0xb8
 4494 00b8 03       		.uleb128 0x3
 4495 00b9 01       		.byte	0x1
 4496 00ba 08       		.byte	0x8
 4497 00bb 860F0000 		.4byte	.LASF16
 4498 00bf 06       		.uleb128 0x6
 4499 00c0 04       		.byte	0x4
 4500 00c1 C5000000 		.4byte	0xc5
 4501 00c5 07       		.uleb128 0x7
 4502 00c6 B8000000 		.4byte	0xb8
 4503 00ca 02       		.uleb128 0x2
 4504 00cb 64110000 		.4byte	.LASF17
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 179


 4505 00cf 05       		.byte	0x5
 4506 00d0 18       		.byte	0x18
 4507 00d1 53000000 		.4byte	0x53
 4508 00d5 02       		.uleb128 0x2
 4509 00d6 21170000 		.4byte	.LASF18
 4510 00da 05       		.byte	0x5
 4511 00db 24       		.byte	0x24
 4512 00dc 6C000000 		.4byte	0x6c
 4513 00e0 02       		.uleb128 0x2
 4514 00e1 CD1C0000 		.4byte	.LASF19
 4515 00e5 05       		.byte	0x5
 4516 00e6 2C       		.byte	0x2c
 4517 00e7 7E000000 		.4byte	0x7e
 4518 00eb 02       		.uleb128 0x2
 4519 00ec FE020000 		.4byte	.LASF20
 4520 00f0 05       		.byte	0x5
 4521 00f1 30       		.byte	0x30
 4522 00f2 90000000 		.4byte	0x90
 4523 00f6 08       		.uleb128 0x8
 4524 00f7 EB000000 		.4byte	0xeb
 4525 00fb 08       		.uleb128 0x8
 4526 00fc CA000000 		.4byte	0xca
 4527 0100 03       		.uleb128 0x3
 4528 0101 04       		.byte	0x4
 4529 0102 04       		.byte	0x4
 4530 0103 B91C0000 		.4byte	.LASF21
 4531 0107 03       		.uleb128 0x3
 4532 0108 08       		.byte	0x8
 4533 0109 04       		.byte	0x4
 4534 010a 2D0C0000 		.4byte	.LASF22
 4535 010e 09       		.uleb128 0x9
 4536 010f 48210000 		.4byte	.LASF23
 4537 0113 06       		.byte	0x6
 4538 0114 8503     		.2byte	0x385
 4539 0116 CA000000 		.4byte	0xca
 4540 011a 06       		.uleb128 0x6
 4541 011b 04       		.byte	0x4
 4542 011c EB000000 		.4byte	0xeb
 4543 0120 03       		.uleb128 0x3
 4544 0121 01       		.byte	0x1
 4545 0122 02       		.byte	0x2
 4546 0123 830E0000 		.4byte	.LASF24
 4547 0127 06       		.uleb128 0x6
 4548 0128 04       		.byte	0x4
 4549 0129 2D010000 		.4byte	0x12d
 4550 012d 0A       		.uleb128 0xa
 4551 012e 38010000 		.4byte	0x138
 4552 0132 0B       		.uleb128 0xb
 4553 0133 EB000000 		.4byte	0xeb
 4554 0137 00       		.byte	0
 4555 0138 09       		.uleb128 0x9
 4556 0139 4D000000 		.4byte	.LASF25
 4557 013d 07       		.byte	0x7
 4558 013e BF01     		.2byte	0x1bf
 4559 0140 27010000 		.4byte	0x127
 4560 0144 0C       		.uleb128 0xc
 4561 0145 1E1C0000 		.4byte	.LASF200
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 180


 4562 0149 24       		.byte	0x24
 4563 014a 07       		.byte	0x7
 4564 014b 4102     		.2byte	0x241
 4565 014d C7010000 		.4byte	0x1c7
 4566 0151 0D       		.uleb128 0xd
 4567 0152 6C110000 		.4byte	.LASF26
 4568 0156 07       		.byte	0x7
 4569 0157 4402     		.2byte	0x244
 4570 0159 F6000000 		.4byte	0xf6
 4571 015d 00       		.byte	0
 4572 015e 0D       		.uleb128 0xd
 4573 015f 9F0B0000 		.4byte	.LASF27
 4574 0163 07       		.byte	0x7
 4575 0164 4602     		.2byte	0x246
 4576 0166 B0000000 		.4byte	0xb0
 4577 016a 04       		.byte	0x4
 4578 016b 0D       		.uleb128 0xd
 4579 016c C8220000 		.4byte	.LASF28
 4580 0170 07       		.byte	0x7
 4581 0171 4702     		.2byte	0x247
 4582 0173 EB000000 		.4byte	0xeb
 4583 0177 08       		.byte	0x8
 4584 0178 0D       		.uleb128 0xd
 4585 0179 C2100000 		.4byte	.LASF29
 4586 017d 07       		.byte	0x7
 4587 017e 4802     		.2byte	0x248
 4588 0180 F6000000 		.4byte	0xf6
 4589 0184 0C       		.byte	0xc
 4590 0185 0D       		.uleb128 0xd
 4591 0186 AD160000 		.4byte	.LASF30
 4592 018a 07       		.byte	0x7
 4593 018b 4A02     		.2byte	0x24a
 4594 018d B0000000 		.4byte	0xb0
 4595 0191 10       		.byte	0x10
 4596 0192 0D       		.uleb128 0xd
 4597 0193 1C150000 		.4byte	.LASF31
 4598 0197 07       		.byte	0x7
 4599 0198 4B02     		.2byte	0x24b
 4600 019a EB000000 		.4byte	0xeb
 4601 019e 14       		.byte	0x14
 4602 019f 0D       		.uleb128 0xd
 4603 01a0 44030000 		.4byte	.LASF32
 4604 01a4 07       		.byte	0x7
 4605 01a5 4C02     		.2byte	0x24c
 4606 01a7 F6000000 		.4byte	0xf6
 4607 01ab 18       		.byte	0x18
 4608 01ac 0D       		.uleb128 0xd
 4609 01ad 190C0000 		.4byte	.LASF33
 4610 01b1 07       		.byte	0x7
 4611 01b2 5202     		.2byte	0x252
 4612 01b4 38010000 		.4byte	0x138
 4613 01b8 1C       		.byte	0x1c
 4614 01b9 0D       		.uleb128 0xd
 4615 01ba 43110000 		.4byte	.LASF34
 4616 01be 07       		.byte	0x7
 4617 01bf 5502     		.2byte	0x255
 4618 01c1 EB000000 		.4byte	0xeb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 181


 4619 01c5 20       		.byte	0x20
 4620 01c6 00       		.byte	0
 4621 01c7 09       		.uleb128 0x9
 4622 01c8 6C140000 		.4byte	.LASF35
 4623 01cc 07       		.byte	0x7
 4624 01cd 5802     		.2byte	0x258
 4625 01cf 44010000 		.4byte	0x144
 4626 01d3 0E       		.uleb128 0xe
 4627 01d4 01       		.byte	0x1
 4628 01d5 5E000000 		.4byte	0x5e
 4629 01d9 08       		.byte	0x8
 4630 01da 0504     		.2byte	0x405
 4631 01dc F9010000 		.4byte	0x1f9
 4632 01e0 0F       		.uleb128 0xf
 4633 01e1 89060000 		.4byte	.LASF36
 4634 01e5 00       		.byte	0
 4635 01e6 0F       		.uleb128 0xf
 4636 01e7 860B0000 		.4byte	.LASF37
 4637 01eb 01       		.byte	0x1
 4638 01ec 0F       		.uleb128 0xf
 4639 01ed 550F0000 		.4byte	.LASF38
 4640 01f1 02       		.byte	0x2
 4641 01f2 0F       		.uleb128 0xf
 4642 01f3 13030000 		.4byte	.LASF39
 4643 01f7 03       		.byte	0x3
 4644 01f8 00       		.byte	0
 4645 01f9 09       		.uleb128 0x9
 4646 01fa 9E210000 		.4byte	.LASF40
 4647 01fe 08       		.byte	0x8
 4648 01ff 0A04     		.2byte	0x40a
 4649 0201 D3010000 		.4byte	0x1d3
 4650 0205 10       		.uleb128 0x10
 4651 0206 78       		.byte	0x78
 4652 0207 08       		.byte	0x8
 4653 0208 F404     		.2byte	0x4f4
 4654 020a D2020000 		.4byte	0x2d2
 4655 020e 0D       		.uleb128 0xd
 4656 020f F60A0000 		.4byte	.LASF41
 4657 0213 08       		.byte	0x8
 4658 0214 F604     		.2byte	0x4f6
 4659 0216 EB000000 		.4byte	0xeb
 4660 021a 00       		.byte	0
 4661 021b 0D       		.uleb128 0xd
 4662 021c 2C1D0000 		.4byte	.LASF42
 4663 0220 08       		.byte	0x8
 4664 0221 F704     		.2byte	0x4f7
 4665 0223 EB000000 		.4byte	0xeb
 4666 0227 04       		.byte	0x4
 4667 0228 0D       		.uleb128 0xd
 4668 0229 36020000 		.4byte	.LASF43
 4669 022d 08       		.byte	0x8
 4670 022e F804     		.2byte	0x4f8
 4671 0230 EB000000 		.4byte	0xeb
 4672 0234 08       		.byte	0x8
 4673 0235 0D       		.uleb128 0xd
 4674 0236 4A1C0000 		.4byte	.LASF44
 4675 023a 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 182


 4676 023b F904     		.2byte	0x4f9
 4677 023d EB000000 		.4byte	0xeb
 4678 0241 0C       		.byte	0xc
 4679 0242 0D       		.uleb128 0xd
 4680 0243 320A0000 		.4byte	.LASF45
 4681 0247 08       		.byte	0x8
 4682 0248 FA04     		.2byte	0x4fa
 4683 024a EB000000 		.4byte	0xeb
 4684 024e 10       		.byte	0x10
 4685 024f 0D       		.uleb128 0xd
 4686 0250 6F120000 		.4byte	.LASF46
 4687 0254 08       		.byte	0x8
 4688 0255 FB04     		.2byte	0x4fb
 4689 0257 F9010000 		.4byte	0x1f9
 4690 025b 14       		.byte	0x14
 4691 025c 0D       		.uleb128 0xd
 4692 025d BA0F0000 		.4byte	.LASF47
 4693 0261 08       		.byte	0x8
 4694 0262 FC04     		.2byte	0x4fc
 4695 0264 EB000000 		.4byte	0xeb
 4696 0268 18       		.byte	0x18
 4697 0269 0D       		.uleb128 0xd
 4698 026a BF140000 		.4byte	.LASF48
 4699 026e 08       		.byte	0x8
 4700 026f FD04     		.2byte	0x4fd
 4701 0271 D2020000 		.4byte	0x2d2
 4702 0275 1C       		.byte	0x1c
 4703 0276 0D       		.uleb128 0xd
 4704 0277 BF220000 		.4byte	.LASF49
 4705 027b 08       		.byte	0x8
 4706 027c FE04     		.2byte	0x4fe
 4707 027e EB000000 		.4byte	0xeb
 4708 0282 5C       		.byte	0x5c
 4709 0283 0D       		.uleb128 0xd
 4710 0284 07050000 		.4byte	.LASF50
 4711 0288 08       		.byte	0x8
 4712 0289 FF04     		.2byte	0x4ff
 4713 028b EB000000 		.4byte	0xeb
 4714 028f 60       		.byte	0x60
 4715 0290 0D       		.uleb128 0xd
 4716 0291 90210000 		.4byte	.LASF51
 4717 0295 08       		.byte	0x8
 4718 0296 0005     		.2byte	0x500
 4719 0298 EB000000 		.4byte	0xeb
 4720 029c 64       		.byte	0x64
 4721 029d 0D       		.uleb128 0xd
 4722 029e BD170000 		.4byte	.LASF52
 4723 02a2 08       		.byte	0x8
 4724 02a3 0105     		.2byte	0x501
 4725 02a5 EB000000 		.4byte	0xeb
 4726 02a9 68       		.byte	0x68
 4727 02aa 0D       		.uleb128 0xd
 4728 02ab 18120000 		.4byte	.LASF53
 4729 02af 08       		.byte	0x8
 4730 02b0 0205     		.2byte	0x502
 4731 02b2 EB000000 		.4byte	0xeb
 4732 02b6 6C       		.byte	0x6c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 183


 4733 02b7 0D       		.uleb128 0xd
 4734 02b8 4E210000 		.4byte	.LASF54
 4735 02bc 08       		.byte	0x8
 4736 02bd 0305     		.2byte	0x503
 4737 02bf 20010000 		.4byte	0x120
 4738 02c3 70       		.byte	0x70
 4739 02c4 0D       		.uleb128 0xd
 4740 02c5 B00E0000 		.4byte	.LASF55
 4741 02c9 08       		.byte	0x8
 4742 02ca 0405     		.2byte	0x504
 4743 02cc EB000000 		.4byte	0xeb
 4744 02d0 74       		.byte	0x74
 4745 02d1 00       		.byte	0
 4746 02d2 11       		.uleb128 0x11
 4747 02d3 EB000000 		.4byte	0xeb
 4748 02d7 E2020000 		.4byte	0x2e2
 4749 02db 12       		.uleb128 0x12
 4750 02dc A9000000 		.4byte	0xa9
 4751 02e0 0F       		.byte	0xf
 4752 02e1 00       		.byte	0
 4753 02e2 09       		.uleb128 0x9
 4754 02e3 DC0A0000 		.4byte	.LASF56
 4755 02e7 08       		.byte	0x8
 4756 02e8 0505     		.2byte	0x505
 4757 02ea 05020000 		.4byte	0x205
 4758 02ee 0E       		.uleb128 0xe
 4759 02ef 02       		.byte	0x2
 4760 02f0 77000000 		.4byte	0x77
 4761 02f4 09       		.byte	0x9
 4762 02f5 3F01     		.2byte	0x13f
 4763 02f7 20060000 		.4byte	0x620
 4764 02fb 0F       		.uleb128 0xf
 4765 02fc A2080000 		.4byte	.LASF57
 4766 0300 00       		.byte	0
 4767 0301 13       		.uleb128 0x13
 4768 0302 ED070000 		.4byte	.LASF58
 4769 0306 0010     		.2byte	0x1000
 4770 0308 13       		.uleb128 0x13
 4771 0309 5F1C0000 		.4byte	.LASF59
 4772 030d 0110     		.2byte	0x1001
 4773 030f 13       		.uleb128 0x13
 4774 0310 D4080000 		.4byte	.LASF60
 4775 0314 0210     		.2byte	0x1002
 4776 0316 13       		.uleb128 0x13
 4777 0317 960E0000 		.4byte	.LASF61
 4778 031b 0310     		.2byte	0x1003
 4779 031d 13       		.uleb128 0x13
 4780 031e E9000000 		.4byte	.LASF62
 4781 0322 0410     		.2byte	0x1004
 4782 0324 13       		.uleb128 0x13
 4783 0325 6A030000 		.4byte	.LASF63
 4784 0329 0510     		.2byte	0x1005
 4785 032b 13       		.uleb128 0x13
 4786 032c 78170000 		.4byte	.LASF64
 4787 0330 0020     		.2byte	0x2000
 4788 0332 13       		.uleb128 0x13
 4789 0333 EB1A0000 		.4byte	.LASF65
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 184


 4790 0337 0120     		.2byte	0x2001
 4791 0339 13       		.uleb128 0x13
 4792 033a E9160000 		.4byte	.LASF66
 4793 033e 0220     		.2byte	0x2002
 4794 0340 13       		.uleb128 0x13
 4795 0341 5F0E0000 		.4byte	.LASF67
 4796 0345 0320     		.2byte	0x2003
 4797 0347 13       		.uleb128 0x13
 4798 0348 9C100000 		.4byte	.LASF68
 4799 034c 0420     		.2byte	0x2004
 4800 034e 13       		.uleb128 0x13
 4801 034f 69130000 		.4byte	.LASF69
 4802 0353 0520     		.2byte	0x2005
 4803 0355 13       		.uleb128 0x13
 4804 0356 920D0000 		.4byte	.LASF70
 4805 035a 0620     		.2byte	0x2006
 4806 035c 13       		.uleb128 0x13
 4807 035d 8D1B0000 		.4byte	.LASF71
 4808 0361 0720     		.2byte	0x2007
 4809 0363 13       		.uleb128 0x13
 4810 0364 72090000 		.4byte	.LASF72
 4811 0368 0820     		.2byte	0x2008
 4812 036a 13       		.uleb128 0x13
 4813 036b A1140000 		.4byte	.LASF73
 4814 036f 0920     		.2byte	0x2009
 4815 0371 13       		.uleb128 0x13
 4816 0372 72080000 		.4byte	.LASF74
 4817 0376 0A20     		.2byte	0x200a
 4818 0378 13       		.uleb128 0x13
 4819 0379 08090000 		.4byte	.LASF75
 4820 037d 0B20     		.2byte	0x200b
 4821 037f 13       		.uleb128 0x13
 4822 0380 36170000 		.4byte	.LASF76
 4823 0384 0C20     		.2byte	0x200c
 4824 0386 13       		.uleb128 0x13
 4825 0387 BB070000 		.4byte	.LASF77
 4826 038b 0D20     		.2byte	0x200d
 4827 038d 13       		.uleb128 0x13
 4828 038e 77100000 		.4byte	.LASF78
 4829 0392 0E20     		.2byte	0x200e
 4830 0394 13       		.uleb128 0x13
 4831 0395 25180000 		.4byte	.LASF79
 4832 0399 0F20     		.2byte	0x200f
 4833 039b 13       		.uleb128 0x13
 4834 039c 2C130000 		.4byte	.LASF80
 4835 03a0 1020     		.2byte	0x2010
 4836 03a2 13       		.uleb128 0x13
 4837 03a3 EF140000 		.4byte	.LASF81
 4838 03a7 1120     		.2byte	0x2011
 4839 03a9 13       		.uleb128 0x13
 4840 03aa 0B1E0000 		.4byte	.LASF82
 4841 03ae 1220     		.2byte	0x2012
 4842 03b0 13       		.uleb128 0x13
 4843 03b1 B9150000 		.4byte	.LASF83
 4844 03b5 1320     		.2byte	0x2013
 4845 03b7 13       		.uleb128 0x13
 4846 03b8 F4110000 		.4byte	.LASF84
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 185


 4847 03bc 1420     		.2byte	0x2014
 4848 03be 13       		.uleb128 0x13
 4849 03bf 54050000 		.4byte	.LASF85
 4850 03c3 1520     		.2byte	0x2015
 4851 03c5 13       		.uleb128 0x13
 4852 03c6 31220000 		.4byte	.LASF86
 4853 03ca 1620     		.2byte	0x2016
 4854 03cc 13       		.uleb128 0x13
 4855 03cd 04040000 		.4byte	.LASF87
 4856 03d1 1720     		.2byte	0x2017
 4857 03d3 13       		.uleb128 0x13
 4858 03d4 01080000 		.4byte	.LASF88
 4859 03d8 0030     		.2byte	0x3000
 4860 03da 13       		.uleb128 0x13
 4861 03db C50B0000 		.4byte	.LASF89
 4862 03df 0130     		.2byte	0x3001
 4863 03e1 13       		.uleb128 0x13
 4864 03e2 B80A0000 		.4byte	.LASF90
 4865 03e6 0230     		.2byte	0x3002
 4866 03e8 13       		.uleb128 0x13
 4867 03e9 BB1B0000 		.4byte	.LASF91
 4868 03ed 0330     		.2byte	0x3003
 4869 03ef 13       		.uleb128 0x13
 4870 03f0 F0090000 		.4byte	.LASF92
 4871 03f4 0430     		.2byte	0x3004
 4872 03f6 13       		.uleb128 0x13
 4873 03f7 FF1B0000 		.4byte	.LASF93
 4874 03fb 0530     		.2byte	0x3005
 4875 03fd 13       		.uleb128 0x13
 4876 03fe A2010000 		.4byte	.LASF94
 4877 0402 0630     		.2byte	0x3006
 4878 0404 13       		.uleb128 0x13
 4879 0405 ED200000 		.4byte	.LASF95
 4880 0409 0730     		.2byte	0x3007
 4881 040b 13       		.uleb128 0x13
 4882 040c EB130000 		.4byte	.LASF96
 4883 0410 0830     		.2byte	0x3008
 4884 0412 13       		.uleb128 0x13
 4885 0413 080D0000 		.4byte	.LASF97
 4886 0417 0930     		.2byte	0x3009
 4887 0419 13       		.uleb128 0x13
 4888 041a DF1B0000 		.4byte	.LASF98
 4889 041e 0A30     		.2byte	0x300a
 4890 0420 13       		.uleb128 0x13
 4891 0421 8B0F0000 		.4byte	.LASF99
 4892 0425 0B30     		.2byte	0x300b
 4893 0427 13       		.uleb128 0x13
 4894 0428 08010000 		.4byte	.LASF100
 4895 042c 0C30     		.2byte	0x300c
 4896 042e 13       		.uleb128 0x13
 4897 042f 73110000 		.4byte	.LASF101
 4898 0433 1130     		.2byte	0x3011
 4899 0435 13       		.uleb128 0x13
 4900 0436 7A180000 		.4byte	.LASF102
 4901 043a 1230     		.2byte	0x3012
 4902 043c 13       		.uleb128 0x13
 4903 043d D51C0000 		.4byte	.LASF103
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 186


 4904 0441 1330     		.2byte	0x3013
 4905 0443 13       		.uleb128 0x13
 4906 0444 281B0000 		.4byte	.LASF104
 4907 0448 1430     		.2byte	0x3014
 4908 044a 13       		.uleb128 0x13
 4909 044b 95190000 		.4byte	.LASF105
 4910 044f 1530     		.2byte	0x3015
 4911 0451 13       		.uleb128 0x13
 4912 0452 B1120000 		.4byte	.LASF106
 4913 0456 1630     		.2byte	0x3016
 4914 0458 13       		.uleb128 0x13
 4915 0459 8F120000 		.4byte	.LASF107
 4916 045d 1730     		.2byte	0x3017
 4917 045f 13       		.uleb128 0x13
 4918 0460 CC0E0000 		.4byte	.LASF108
 4919 0464 1830     		.2byte	0x3018
 4920 0466 13       		.uleb128 0x13
 4921 0467 D5150000 		.4byte	.LASF109
 4922 046b 0040     		.2byte	0x4000
 4923 046d 13       		.uleb128 0x13
 4924 046e AA030000 		.4byte	.LASF110
 4925 0472 0140     		.2byte	0x4001
 4926 0474 13       		.uleb128 0x13
 4927 0475 D61F0000 		.4byte	.LASF111
 4928 0479 0240     		.2byte	0x4002
 4929 047b 13       		.uleb128 0x13
 4930 047c 35040000 		.4byte	.LASF112
 4931 0480 0340     		.2byte	0x4003
 4932 0482 13       		.uleb128 0x13
 4933 0483 D7110000 		.4byte	.LASF113
 4934 0487 0440     		.2byte	0x4004
 4935 0489 13       		.uleb128 0x13
 4936 048a FE210000 		.4byte	.LASF114
 4937 048e 0540     		.2byte	0x4005
 4938 0490 13       		.uleb128 0x13
 4939 0491 8A000000 		.4byte	.LASF115
 4940 0495 0640     		.2byte	0x4006
 4941 0497 13       		.uleb128 0x13
 4942 0498 A50B0000 		.4byte	.LASF116
 4943 049c 0740     		.2byte	0x4007
 4944 049e 13       		.uleb128 0x13
 4945 049f 44190000 		.4byte	.LASF117
 4946 04a3 0840     		.2byte	0x4008
 4947 04a5 13       		.uleb128 0x13
 4948 04a6 9A0A0000 		.4byte	.LASF118
 4949 04aa 0940     		.2byte	0x4009
 4950 04ac 13       		.uleb128 0x13
 4951 04ad D2220000 		.4byte	.LASF119
 4952 04b1 0A40     		.2byte	0x400a
 4953 04b3 13       		.uleb128 0x13
 4954 04b4 13100000 		.4byte	.LASF120
 4955 04b8 0B40     		.2byte	0x400b
 4956 04ba 13       		.uleb128 0x13
 4957 04bb CA140000 		.4byte	.LASF121
 4958 04bf 0C40     		.2byte	0x400c
 4959 04c1 13       		.uleb128 0x13
 4960 04c2 560C0000 		.4byte	.LASF122
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 187


 4961 04c6 0D40     		.2byte	0x400d
 4962 04c8 13       		.uleb128 0x13
 4963 04c9 3A160000 		.4byte	.LASF123
 4964 04cd 0E40     		.2byte	0x400e
 4965 04cf 13       		.uleb128 0x13
 4966 04d0 350B0000 		.4byte	.LASF124
 4967 04d4 0F40     		.2byte	0x400f
 4968 04d6 13       		.uleb128 0x13
 4969 04d7 A7110000 		.4byte	.LASF125
 4970 04db 1040     		.2byte	0x4010
 4971 04dd 13       		.uleb128 0x13
 4972 04de 4D1E0000 		.4byte	.LASF126
 4973 04e2 1140     		.2byte	0x4011
 4974 04e4 13       		.uleb128 0x13
 4975 04e5 570D0000 		.4byte	.LASF127
 4976 04e9 1240     		.2byte	0x4012
 4977 04eb 13       		.uleb128 0x13
 4978 04ec 121A0000 		.4byte	.LASF128
 4979 04f0 1340     		.2byte	0x4013
 4980 04f2 13       		.uleb128 0x13
 4981 04f3 19160000 		.4byte	.LASF129
 4982 04f7 1440     		.2byte	0x4014
 4983 04f9 13       		.uleb128 0x13
 4984 04fa 62060000 		.4byte	.LASF130
 4985 04fe 1540     		.2byte	0x4015
 4986 0500 13       		.uleb128 0x13
 4987 0501 F2010000 		.4byte	.LASF131
 4988 0505 1640     		.2byte	0x4016
 4989 0507 13       		.uleb128 0x13
 4990 0508 92170000 		.4byte	.LASF132
 4991 050c 1740     		.2byte	0x4017
 4992 050e 13       		.uleb128 0x13
 4993 050f 13130000 		.4byte	.LASF133
 4994 0513 1840     		.2byte	0x4018
 4995 0515 13       		.uleb128 0x13
 4996 0516 D4180000 		.4byte	.LASF134
 4997 051a 1940     		.2byte	0x4019
 4998 051c 13       		.uleb128 0x13
 4999 051d E2170000 		.4byte	.LASF135
 5000 0521 0050     		.2byte	0x5000
 5001 0523 13       		.uleb128 0x13
 5002 0524 C0040000 		.4byte	.LASF136
 5003 0528 0150     		.2byte	0x5001
 5004 052a 13       		.uleb128 0x13
 5005 052b 241F0000 		.4byte	.LASF137
 5006 052f 0250     		.2byte	0x5002
 5007 0531 13       		.uleb128 0x13
 5008 0532 941F0000 		.4byte	.LASF138
 5009 0536 0350     		.2byte	0x5003
 5010 0538 13       		.uleb128 0x13
 5011 0539 EE060000 		.4byte	.LASF139
 5012 053d 0450     		.2byte	0x5004
 5013 053f 13       		.uleb128 0x13
 5014 0540 FD170000 		.4byte	.LASF140
 5015 0544 0550     		.2byte	0x5005
 5016 0546 13       		.uleb128 0x13
 5017 0547 3F100000 		.4byte	.LASF141
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 188


 5018 054b 0650     		.2byte	0x5006
 5019 054d 13       		.uleb128 0x13
 5020 054e E5030000 		.4byte	.LASF142
 5021 0552 0750     		.2byte	0x5007
 5022 0554 13       		.uleb128 0x13
 5023 0555 9A0C0000 		.4byte	.LASF143
 5024 0559 0850     		.2byte	0x5008
 5025 055b 13       		.uleb128 0x13
 5026 055c 55070000 		.4byte	.LASF144
 5027 0560 0950     		.2byte	0x5009
 5028 0562 13       		.uleb128 0x13
 5029 0563 6B000000 		.4byte	.LASF145
 5030 0567 0A50     		.2byte	0x500a
 5031 0569 13       		.uleb128 0x13
 5032 056a A0040000 		.4byte	.LASF146
 5033 056e 0B50     		.2byte	0x500b
 5034 0570 13       		.uleb128 0x13
 5035 0571 5F180000 		.4byte	.LASF147
 5036 0575 0C50     		.2byte	0x500c
 5037 0577 13       		.uleb128 0x13
 5038 0578 BD0D0000 		.4byte	.LASF148
 5039 057c 0D50     		.2byte	0x500d
 5040 057e 13       		.uleb128 0x13
 5041 057f CE200000 		.4byte	.LASF149
 5042 0583 0E50     		.2byte	0x500e
 5043 0585 13       		.uleb128 0x13
 5044 0586 F20B0000 		.4byte	.LASF150
 5045 058a 0F50     		.2byte	0x500f
 5046 058c 13       		.uleb128 0x13
 5047 058d CB1A0000 		.4byte	.LASF151
 5048 0591 1050     		.2byte	0x5010
 5049 0593 13       		.uleb128 0x13
 5050 0594 551F0000 		.4byte	.LASF152
 5051 0598 1150     		.2byte	0x5011
 5052 059a 13       		.uleb128 0x13
 5053 059b 2C010000 		.4byte	.LASF153
 5054 059f 1250     		.2byte	0x5012
 5055 05a1 13       		.uleb128 0x13
 5056 05a2 50080000 		.4byte	.LASF154
 5057 05a6 1350     		.2byte	0x5013
 5058 05a8 13       		.uleb128 0x13
 5059 05a9 0D070000 		.4byte	.LASF155
 5060 05ad 1450     		.2byte	0x5014
 5061 05af 13       		.uleb128 0x13
 5062 05b0 4D090000 		.4byte	.LASF156
 5063 05b4 1550     		.2byte	0x5015
 5064 05b6 13       		.uleb128 0x13
 5065 05b7 B31F0000 		.4byte	.LASF157
 5066 05bb 1650     		.2byte	0x5016
 5067 05bd 13       		.uleb128 0x13
 5068 05be 70050000 		.4byte	.LASF158
 5069 05c2 1750     		.2byte	0x5017
 5070 05c4 13       		.uleb128 0x13
 5071 05c5 D91D0000 		.4byte	.LASF159
 5072 05c9 1850     		.2byte	0x5018
 5073 05cb 13       		.uleb128 0x13
 5074 05cc 21210000 		.4byte	.LASF160
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 189


 5075 05d0 0060     		.2byte	0x6000
 5076 05d2 13       		.uleb128 0x13
 5077 05d3 7E1E0000 		.4byte	.LASF161
 5078 05d7 0160     		.2byte	0x6001
 5079 05d9 13       		.uleb128 0x13
 5080 05da 420E0000 		.4byte	.LASF162
 5081 05de 0260     		.2byte	0x6002
 5082 05e0 13       		.uleb128 0x13
 5083 05e1 FA150000 		.4byte	.LASF163
 5084 05e5 0360     		.2byte	0x6003
 5085 05e7 13       		.uleb128 0x13
 5086 05e8 E2120000 		.4byte	.LASF164
 5087 05ec 0460     		.2byte	0x6004
 5088 05ee 13       		.uleb128 0x13
 5089 05ef 781A0000 		.4byte	.LASF165
 5090 05f3 0560     		.2byte	0x6005
 5091 05f5 13       		.uleb128 0x13
 5092 05f6 C20C0000 		.4byte	.LASF166
 5093 05fa 0660     		.2byte	0x6006
 5094 05fc 13       		.uleb128 0x13
 5095 05fd 2D000000 		.4byte	.LASF167
 5096 0601 0760     		.2byte	0x6007
 5097 0603 13       		.uleb128 0x13
 5098 0604 95020000 		.4byte	.LASF168
 5099 0608 0860     		.2byte	0x6008
 5100 060a 13       		.uleb128 0x13
 5101 060b C5000000 		.4byte	.LASF169
 5102 060f 0960     		.2byte	0x6009
 5103 0611 13       		.uleb128 0x13
 5104 0612 33150000 		.4byte	.LASF170
 5105 0616 0A60     		.2byte	0x600a
 5106 0618 13       		.uleb128 0x13
 5107 0619 800C0000 		.4byte	.LASF171
 5108 061d FFFF     		.2byte	0xffff
 5109 061f 00       		.byte	0
 5110 0620 10       		.uleb128 0x10
 5111 0621 02       		.byte	0x2
 5112 0622 0A       		.byte	0xa
 5113 0623 5B01     		.2byte	0x15b
 5114 0625 44060000 		.4byte	0x644
 5115 0629 0D       		.uleb128 0xd
 5116 062a FB1F0000 		.4byte	.LASF172
 5117 062e 0A       		.byte	0xa
 5118 062f 6501     		.2byte	0x165
 5119 0631 CA000000 		.4byte	0xca
 5120 0635 00       		.byte	0
 5121 0636 0D       		.uleb128 0xd
 5122 0637 F00A0000 		.4byte	.LASF173
 5123 063b 0A       		.byte	0xa
 5124 063c 6901     		.2byte	0x169
 5125 063e CA000000 		.4byte	0xca
 5126 0642 01       		.byte	0x1
 5127 0643 00       		.byte	0
 5128 0644 09       		.uleb128 0x9
 5129 0645 9D180000 		.4byte	.LASF174
 5130 0649 0A       		.byte	0xa
 5131 064a 6B01     		.2byte	0x16b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 190


 5132 064c 20060000 		.4byte	0x620
 5133 0650 14       		.uleb128 0x14
 5134 0651 01       		.byte	0x1
 5135 0652 5E000000 		.4byte	0x5e
 5136 0656 0B       		.byte	0xb
 5137 0657 7E       		.byte	0x7e
 5138 0658 75060000 		.4byte	0x675
 5139 065c 0F       		.uleb128 0xf
 5140 065d DC040000 		.4byte	.LASF175
 5141 0661 00       		.byte	0
 5142 0662 0F       		.uleb128 0xf
 5143 0663 3D0A0000 		.4byte	.LASF176
 5144 0667 01       		.byte	0x1
 5145 0668 0F       		.uleb128 0xf
 5146 0669 2B0D0000 		.4byte	.LASF177
 5147 066d 02       		.byte	0x2
 5148 066e 0F       		.uleb128 0xf
 5149 066f F20E0000 		.4byte	.LASF178
 5150 0673 03       		.byte	0x3
 5151 0674 00       		.byte	0
 5152 0675 02       		.uleb128 0x2
 5153 0676 DA090000 		.4byte	.LASF179
 5154 067a 0B       		.byte	0xb
 5155 067b 83       		.byte	0x83
 5156 067c 50060000 		.4byte	0x650
 5157 0680 14       		.uleb128 0x14
 5158 0681 01       		.byte	0x1
 5159 0682 5E000000 		.4byte	0x5e
 5160 0686 0B       		.byte	0xb
 5161 0687 87       		.byte	0x87
 5162 0688 BD060000 		.4byte	0x6bd
 5163 068c 0F       		.uleb128 0xf
 5164 068d 9C070000 		.4byte	.LASF180
 5165 0691 00       		.byte	0
 5166 0692 0F       		.uleb128 0xf
 5167 0693 A1060000 		.4byte	.LASF181
 5168 0697 01       		.byte	0x1
 5169 0698 0F       		.uleb128 0xf
 5170 0699 91160000 		.4byte	.LASF182
 5171 069d 02       		.byte	0x2
 5172 069e 0F       		.uleb128 0xf
 5173 069f 95220000 		.4byte	.LASF183
 5174 06a3 03       		.byte	0x3
 5175 06a4 0F       		.uleb128 0xf
 5176 06a5 0B0B0000 		.4byte	.LASF184
 5177 06a9 04       		.byte	0x4
 5178 06aa 0F       		.uleb128 0xf
 5179 06ab 2B0F0000 		.4byte	.LASF185
 5180 06af 05       		.byte	0x5
 5181 06b0 0F       		.uleb128 0xf
 5182 06b1 66160000 		.4byte	.LASF186
 5183 06b5 06       		.byte	0x6
 5184 06b6 0F       		.uleb128 0xf
 5185 06b7 FD0D0000 		.4byte	.LASF187
 5186 06bb 07       		.byte	0x7
 5187 06bc 00       		.byte	0
 5188 06bd 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 191


 5189 06be CE030000 		.4byte	.LASF188
 5190 06c2 0B       		.byte	0xb
 5191 06c3 90       		.byte	0x90
 5192 06c4 80060000 		.4byte	0x680
 5193 06c8 15       		.uleb128 0x15
 5194 06c9 14       		.byte	0x14
 5195 06ca 0C       		.byte	0xc
 5196 06cb 3B       		.byte	0x3b
 5197 06cc 0D070000 		.4byte	0x70d
 5198 06d0 16       		.uleb128 0x16
 5199 06d1 C2030000 		.4byte	.LASF189
 5200 06d5 0C       		.byte	0xc
 5201 06d6 3D       		.byte	0x3d
 5202 06d7 EB000000 		.4byte	0xeb
 5203 06db 00       		.byte	0
 5204 06dc 16       		.uleb128 0x16
 5205 06dd 2A090000 		.4byte	.LASF190
 5206 06e1 0C       		.byte	0xc
 5207 06e2 3E       		.byte	0x3e
 5208 06e3 EB000000 		.4byte	0xeb
 5209 06e7 04       		.byte	0x4
 5210 06e8 16       		.uleb128 0x16
 5211 06e9 29040000 		.4byte	.LASF191
 5212 06ed 0C       		.byte	0xc
 5213 06ee 3F       		.byte	0x3f
 5214 06ef 0D070000 		.4byte	0x70d
 5215 06f3 08       		.byte	0x8
 5216 06f4 16       		.uleb128 0x16
 5217 06f5 16210000 		.4byte	.LASF192
 5218 06f9 0C       		.byte	0xc
 5219 06fa 40       		.byte	0x40
 5220 06fb EB000000 		.4byte	0xeb
 5221 06ff 0C       		.byte	0xc
 5222 0700 16       		.uleb128 0x16
 5223 0701 D61E0000 		.4byte	.LASF193
 5224 0705 0C       		.byte	0xc
 5225 0706 45       		.byte	0x45
 5226 0707 EB000000 		.4byte	0xeb
 5227 070b 10       		.byte	0x10
 5228 070c 00       		.byte	0
 5229 070d 06       		.uleb128 0x6
 5230 070e 04       		.byte	0x4
 5231 070f 13070000 		.4byte	0x713
 5232 0713 07       		.uleb128 0x7
 5233 0714 E2020000 		.4byte	0x2e2
 5234 0718 02       		.uleb128 0x2
 5235 0719 7C150000 		.4byte	.LASF194
 5236 071d 0C       		.byte	0xc
 5237 071e 48       		.byte	0x48
 5238 071f C8060000 		.4byte	0x6c8
 5239 0723 02       		.uleb128 0x2
 5240 0724 0E140000 		.4byte	.LASF195
 5241 0728 0D       		.byte	0xd
 5242 0729 4D       		.byte	0x4d
 5243 072a 2E070000 		.4byte	0x72e
 5244 072e 06       		.uleb128 0x6
 5245 072f 04       		.byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 192


 5246 0730 34070000 		.4byte	0x734
 5247 0734 0A       		.uleb128 0xa
 5248 0735 3F070000 		.4byte	0x73f
 5249 0739 0B       		.uleb128 0xb
 5250 073a B0000000 		.4byte	0xb0
 5251 073e 00       		.byte	0
 5252 073f 02       		.uleb128 0x2
 5253 0740 07030000 		.4byte	.LASF196
 5254 0744 02       		.byte	0x2
 5255 0745 61       		.byte	0x61
 5256 0746 EB000000 		.4byte	0xeb
 5257 074a 02       		.uleb128 0x2
 5258 074b 99130000 		.4byte	.LASF197
 5259 074f 02       		.byte	0x2
 5260 0750 62       		.byte	0x62
 5261 0751 89000000 		.4byte	0x89
 5262 0755 02       		.uleb128 0x2
 5263 0756 90070000 		.4byte	.LASF198
 5264 075a 02       		.byte	0x2
 5265 075b 63       		.byte	0x63
 5266 075c 9B000000 		.4byte	0x9b
 5267 0760 02       		.uleb128 0x2
 5268 0761 38110000 		.4byte	.LASF199
 5269 0765 02       		.byte	0x2
 5270 0766 69       		.byte	0x69
 5271 0767 EB000000 		.4byte	0xeb
 5272 076b 11       		.uleb128 0x11
 5273 076c B0000000 		.4byte	0xb0
 5274 0770 7B070000 		.4byte	0x77b
 5275 0774 12       		.uleb128 0x12
 5276 0775 A9000000 		.4byte	0xa9
 5277 0779 04       		.byte	0x4
 5278 077a 00       		.byte	0
 5279 077b 17       		.uleb128 0x17
 5280 077c 8D030000 		.4byte	.LASF201
 5281 0780 14       		.byte	0x14
 5282 0781 0E       		.byte	0xe
 5283 0782 B5       		.byte	0xb5
 5284 0783 C4070000 		.4byte	0x7c4
 5285 0787 16       		.uleb128 0x16
 5286 0788 74190000 		.4byte	.LASF202
 5287 078c 0E       		.byte	0xe
 5288 078d B8       		.byte	0xb8
 5289 078e 60070000 		.4byte	0x760
 5290 0792 00       		.byte	0
 5291 0793 16       		.uleb128 0x16
 5292 0794 1D140000 		.4byte	.LASF203
 5293 0798 0E       		.byte	0xe
 5294 0799 B9       		.byte	0xb9
 5295 079a C4070000 		.4byte	0x7c4
 5296 079e 04       		.byte	0x4
 5297 079f 16       		.uleb128 0x16
 5298 07a0 48140000 		.4byte	.LASF204
 5299 07a4 0E       		.byte	0xe
 5300 07a5 BA       		.byte	0xba
 5301 07a6 C4070000 		.4byte	0x7c4
 5302 07aa 08       		.byte	0x8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 193


 5303 07ab 16       		.uleb128 0x16
 5304 07ac CE1E0000 		.4byte	.LASF205
 5305 07b0 0E       		.byte	0xe
 5306 07b1 BB       		.byte	0xbb
 5307 07b2 B0000000 		.4byte	0xb0
 5308 07b6 0C       		.byte	0xc
 5309 07b7 16       		.uleb128 0x16
 5310 07b8 DF190000 		.4byte	.LASF206
 5311 07bc 0E       		.byte	0xe
 5312 07bd BC       		.byte	0xbc
 5313 07be B0000000 		.4byte	0xb0
 5314 07c2 10       		.byte	0x10
 5315 07c3 00       		.byte	0
 5316 07c4 06       		.uleb128 0x6
 5317 07c5 04       		.byte	0x4
 5318 07c6 7B070000 		.4byte	0x77b
 5319 07ca 02       		.uleb128 0x2
 5320 07cb AF0F0000 		.4byte	.LASF207
 5321 07cf 0E       		.byte	0xe
 5322 07d0 BF       		.byte	0xbf
 5323 07d1 7B070000 		.4byte	0x77b
 5324 07d5 17       		.uleb128 0x17
 5325 07d6 340C0000 		.4byte	.LASF208
 5326 07da 0C       		.byte	0xc
 5327 07db 0E       		.byte	0xe
 5328 07dc C1       		.byte	0xc1
 5329 07dd 06080000 		.4byte	0x806
 5330 07e1 16       		.uleb128 0x16
 5331 07e2 74190000 		.4byte	.LASF202
 5332 07e6 0E       		.byte	0xe
 5333 07e7 C4       		.byte	0xc4
 5334 07e8 60070000 		.4byte	0x760
 5335 07ec 00       		.byte	0
 5336 07ed 16       		.uleb128 0x16
 5337 07ee 1D140000 		.4byte	.LASF203
 5338 07f2 0E       		.byte	0xe
 5339 07f3 C5       		.byte	0xc5
 5340 07f4 C4070000 		.4byte	0x7c4
 5341 07f8 04       		.byte	0x4
 5342 07f9 16       		.uleb128 0x16
 5343 07fa 48140000 		.4byte	.LASF204
 5344 07fe 0E       		.byte	0xe
 5345 07ff C6       		.byte	0xc6
 5346 0800 C4070000 		.4byte	0x7c4
 5347 0804 08       		.byte	0x8
 5348 0805 00       		.byte	0
 5349 0806 02       		.uleb128 0x2
 5350 0807 CB100000 		.4byte	.LASF209
 5351 080b 0E       		.byte	0xe
 5352 080c C8       		.byte	0xc8
 5353 080d D5070000 		.4byte	0x7d5
 5354 0811 17       		.uleb128 0x17
 5355 0812 5C040000 		.4byte	.LASF210
 5356 0816 14       		.byte	0x14
 5357 0817 0E       		.byte	0xe
 5358 0818 CD       		.byte	0xcd
 5359 0819 42080000 		.4byte	0x842
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 194


 5360 081d 16       		.uleb128 0x16
 5361 081e 1D000000 		.4byte	.LASF211
 5362 0822 0E       		.byte	0xe
 5363 0823 D0       		.byte	0xd0
 5364 0824 55070000 		.4byte	0x755
 5365 0828 00       		.byte	0
 5366 0829 16       		.uleb128 0x16
 5367 082a F6020000 		.4byte	.LASF212
 5368 082e 0E       		.byte	0xe
 5369 082f D1       		.byte	0xd1
 5370 0830 42080000 		.4byte	0x842
 5371 0834 04       		.byte	0x4
 5372 0835 16       		.uleb128 0x16
 5373 0836 61100000 		.4byte	.LASF213
 5374 083a 0E       		.byte	0xe
 5375 083b D2       		.byte	0xd2
 5376 083c 06080000 		.4byte	0x806
 5377 0840 08       		.byte	0x8
 5378 0841 00       		.byte	0
 5379 0842 06       		.uleb128 0x6
 5380 0843 04       		.byte	0x4
 5381 0844 CA070000 		.4byte	0x7ca
 5382 0848 02       		.uleb128 0x2
 5383 0849 5F160000 		.4byte	.LASF214
 5384 084d 0E       		.byte	0xe
 5385 084e D4       		.byte	0xd4
 5386 084f 11080000 		.4byte	0x811
 5387 0853 02       		.uleb128 0x2
 5388 0854 58150000 		.4byte	.LASF215
 5389 0858 0F       		.byte	0xf
 5390 0859 67       		.byte	0x67
 5391 085a B0000000 		.4byte	0xb0
 5392 085e 14       		.uleb128 0x14
 5393 085f 01       		.byte	0x1
 5394 0860 5E000000 		.4byte	0x5e
 5395 0864 0F       		.byte	0xf
 5396 0865 7C       		.byte	0x7c
 5397 0866 89080000 		.4byte	0x889
 5398 086a 0F       		.uleb128 0xf
 5399 086b 8B020000 		.4byte	.LASF216
 5400 086f 00       		.byte	0
 5401 0870 0F       		.uleb128 0xf
 5402 0871 D4160000 		.4byte	.LASF217
 5403 0875 01       		.byte	0x1
 5404 0876 0F       		.uleb128 0xf
 5405 0877 220C0000 		.4byte	.LASF218
 5406 087b 02       		.byte	0x2
 5407 087c 0F       		.uleb128 0xf
 5408 087d 36090000 		.4byte	.LASF219
 5409 0881 03       		.byte	0x3
 5410 0882 0F       		.uleb128 0xf
 5411 0883 C10F0000 		.4byte	.LASF220
 5412 0887 04       		.byte	0x4
 5413 0888 00       		.byte	0
 5414 0889 02       		.uleb128 0x2
 5415 088a E40B0000 		.4byte	.LASF221
 5416 088e 0F       		.byte	0xf
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 195


 5417 088f 82       		.byte	0x82
 5418 0890 5E080000 		.4byte	0x85e
 5419 0894 17       		.uleb128 0x17
 5420 0895 2D030000 		.4byte	.LASF222
 5421 0899 08       		.byte	0x8
 5422 089a 0F       		.byte	0xf
 5423 089b 87       		.byte	0x87
 5424 089c B9080000 		.4byte	0x8b9
 5425 08a0 16       		.uleb128 0x16
 5426 08a1 13050000 		.4byte	.LASF223
 5427 08a5 0F       		.byte	0xf
 5428 08a6 89       		.byte	0x89
 5429 08a7 4A070000 		.4byte	0x74a
 5430 08ab 00       		.byte	0
 5431 08ac 16       		.uleb128 0x16
 5432 08ad CD130000 		.4byte	.LASF224
 5433 08b1 0F       		.byte	0xf
 5434 08b2 8A       		.byte	0x8a
 5435 08b3 60070000 		.4byte	0x760
 5436 08b7 04       		.byte	0x4
 5437 08b8 00       		.byte	0
 5438 08b9 02       		.uleb128 0x2
 5439 08ba 7C0B0000 		.4byte	.LASF225
 5440 08be 0F       		.byte	0xf
 5441 08bf 8B       		.byte	0x8b
 5442 08c0 94080000 		.4byte	0x894
 5443 08c4 17       		.uleb128 0x17
 5444 08c5 12170000 		.4byte	.LASF226
 5445 08c9 0C       		.byte	0xc
 5446 08ca 0F       		.byte	0xf
 5447 08cb 90       		.byte	0x90
 5448 08cc F5080000 		.4byte	0x8f5
 5449 08d0 16       		.uleb128 0x16
 5450 08d1 371D0000 		.4byte	.LASF227
 5451 08d5 0F       		.byte	0xf
 5452 08d6 92       		.byte	0x92
 5453 08d7 B0000000 		.4byte	0xb0
 5454 08db 00       		.byte	0
 5455 08dc 16       		.uleb128 0x16
 5456 08dd 89130000 		.4byte	.LASF228
 5457 08e1 0F       		.byte	0xf
 5458 08e2 93       		.byte	0x93
 5459 08e3 EB000000 		.4byte	0xeb
 5460 08e7 04       		.byte	0x4
 5461 08e8 16       		.uleb128 0x16
 5462 08e9 37030000 		.4byte	.LASF229
 5463 08ed 0F       		.byte	0xf
 5464 08ee 94       		.byte	0x94
 5465 08ef EB000000 		.4byte	0xeb
 5466 08f3 08       		.byte	0x8
 5467 08f4 00       		.byte	0
 5468 08f5 02       		.uleb128 0x2
 5469 08f6 38120000 		.4byte	.LASF230
 5470 08fa 0F       		.byte	0xf
 5471 08fb 95       		.byte	0x95
 5472 08fc C4080000 		.4byte	0x8c4
 5473 0900 07       		.uleb128 0x7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 196


 5474 0901 BF000000 		.4byte	0xbf
 5475 0905 06       		.uleb128 0x6
 5476 0906 04       		.byte	0x4
 5477 0907 3F070000 		.4byte	0x73f
 5478 090b 0C       		.uleb128 0xc
 5479 090c 8E010000 		.4byte	.LASF231
 5480 0910 60       		.byte	0x60
 5481 0911 01       		.byte	0x1
 5482 0912 2501     		.2byte	0x125
 5483 0914 8E090000 		.4byte	0x98e
 5484 0918 0D       		.uleb128 0xd
 5485 0919 C1210000 		.4byte	.LASF232
 5486 091d 01       		.byte	0x1
 5487 091e 2701     		.2byte	0x127
 5488 0920 8E090000 		.4byte	0x98e
 5489 0924 00       		.byte	0
 5490 0925 0D       		.uleb128 0xd
 5491 0926 45050000 		.4byte	.LASF233
 5492 092a 01       		.byte	0x1
 5493 092b 2D01     		.2byte	0x12d
 5494 092d CA070000 		.4byte	0x7ca
 5495 0931 04       		.byte	0x4
 5496 0932 0D       		.uleb128 0xd
 5497 0933 6F1E0000 		.4byte	.LASF234
 5498 0937 01       		.byte	0x1
 5499 0938 2E01     		.2byte	0x12e
 5500 093a CA070000 		.4byte	0x7ca
 5501 093e 18       		.byte	0x18
 5502 093f 0D       		.uleb128 0xd
 5503 0940 77010000 		.4byte	.LASF235
 5504 0944 01       		.byte	0x1
 5505 0945 2F01     		.2byte	0x12f
 5506 0947 55070000 		.4byte	0x755
 5507 094b 2C       		.byte	0x2c
 5508 094c 0D       		.uleb128 0xd
 5509 094d 3A1A0000 		.4byte	.LASF236
 5510 0951 01       		.byte	0x1
 5511 0952 3001     		.2byte	0x130
 5512 0954 05090000 		.4byte	0x905
 5513 0958 30       		.byte	0x30
 5514 0959 0D       		.uleb128 0xd
 5515 095a 531D0000 		.4byte	.LASF237
 5516 095e 01       		.byte	0x1
 5517 095f 3101     		.2byte	0x131
 5518 0961 99090000 		.4byte	0x999
 5519 0965 34       		.byte	0x34
 5520 0966 0D       		.uleb128 0xd
 5521 0967 5F0B0000 		.4byte	.LASF238
 5522 096b 01       		.byte	0x1
 5523 096c 4A01     		.2byte	0x14a
 5524 096e 6B070000 		.4byte	0x76b
 5525 0972 44       		.byte	0x44
 5526 0973 0D       		.uleb128 0xd
 5527 0974 BC0E0000 		.4byte	.LASF239
 5528 0978 01       		.byte	0x1
 5529 0979 5D01     		.2byte	0x15d
 5530 097b F6000000 		.4byte	0xf6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 197


 5531 097f 58       		.byte	0x58
 5532 0980 0D       		.uleb128 0xd
 5533 0981 EB0F0000 		.4byte	.LASF240
 5534 0985 01       		.byte	0x1
 5535 0986 5E01     		.2byte	0x15e
 5536 0988 FB000000 		.4byte	0xfb
 5537 098c 5C       		.byte	0x5c
 5538 098d 00       		.byte	0
 5539 098e 06       		.uleb128 0x6
 5540 098f 04       		.byte	0x4
 5541 0990 94090000 		.4byte	0x994
 5542 0994 08       		.uleb128 0x8
 5543 0995 3F070000 		.4byte	0x73f
 5544 0999 11       		.uleb128 0x11
 5545 099a B8000000 		.4byte	0xb8
 5546 099e A9090000 		.4byte	0x9a9
 5547 09a2 12       		.uleb128 0x12
 5548 09a3 A9000000 		.4byte	0xa9
 5549 09a7 0F       		.byte	0xf
 5550 09a8 00       		.byte	0
 5551 09a9 09       		.uleb128 0x9
 5552 09aa 6F070000 		.4byte	.LASF241
 5553 09ae 01       		.byte	0x1
 5554 09af 6B01     		.2byte	0x16b
 5555 09b1 0B090000 		.4byte	0x90b
 5556 09b5 09       		.uleb128 0x9
 5557 09b6 BB1E0000 		.4byte	.LASF242
 5558 09ba 01       		.byte	0x1
 5559 09bb 6F01     		.2byte	0x16f
 5560 09bd A9090000 		.4byte	0x9a9
 5561 09c1 18       		.uleb128 0x18
 5562 09c2 5C120000 		.4byte	.LASF401
 5563 09c6 02       		.byte	0x2
 5564 09c7 D3       		.byte	0xd3
 5565 09c8 EB000000 		.4byte	0xeb
 5566 09cc 03       		.byte	0x3
 5567 09cd E8090000 		.4byte	0x9e8
 5568 09d1 19       		.uleb128 0x19
 5569 09d2 2B080000 		.4byte	.LASF243
 5570 09d6 02       		.byte	0x2
 5571 09d7 D5       		.byte	0xd5
 5572 09d8 EB000000 		.4byte	0xeb
 5573 09dc 19       		.uleb128 0x19
 5574 09dd 5C130000 		.4byte	.LASF244
 5575 09e1 02       		.byte	0x2
 5576 09e2 D5       		.byte	0xd5
 5577 09e3 EB000000 		.4byte	0xeb
 5578 09e7 00       		.byte	0
 5579 09e8 1A       		.uleb128 0x1a
 5580 09e9 22050000 		.4byte	.LASF402
 5581 09ed 02       		.byte	0x2
 5582 09ee E7       		.byte	0xe7
 5583 09ef 03       		.byte	0x3
 5584 09f0 000A0000 		.4byte	0xa00
 5585 09f4 1B       		.uleb128 0x1b
 5586 09f5 6D150000 		.4byte	.LASF403
 5587 09f9 02       		.byte	0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 198


 5588 09fa E7       		.byte	0xe7
 5589 09fb EB000000 		.4byte	0xeb
 5590 09ff 00       		.byte	0
 5591 0a00 1C       		.uleb128 0x1c
 5592 0a01 EB190000 		.4byte	.LASF303
 5593 0a05 01       		.byte	0x1
 5594 0a06 7806     		.2byte	0x678
 5595 0a08 4A070000 		.4byte	0x74a
 5596 0a0c 00000000 		.4byte	.LFB537
 5597 0a10 40000000 		.4byte	.LFE537-.LFB537
 5598 0a14 01       		.uleb128 0x1
 5599 0a15 9C       		.byte	0x9c
 5600 0a16 4B0A0000 		.4byte	0xa4b
 5601 0a1a 1D       		.uleb128 0x1d
 5602 0a1b CE160000 		.4byte	.LASF249
 5603 0a1f 01       		.byte	0x1
 5604 0a20 7806     		.2byte	0x678
 5605 0a22 4B0A0000 		.4byte	0xa4b
 5606 0a26 00000000 		.4byte	.LLST0
 5607 0a2a 1E       		.uleb128 0x1e
 5608 0a2b 571C0000 		.4byte	.LASF245
 5609 0a2f 01       		.byte	0x1
 5610 0a30 7A06     		.2byte	0x67a
 5611 0a32 4A070000 		.4byte	0x74a
 5612 0a36 69000000 		.4byte	.LLST1
 5613 0a3a 1E       		.uleb128 0x1e
 5614 0a3b 10210000 		.4byte	.LASF246
 5615 0a3f 01       		.byte	0x1
 5616 0a40 7B06     		.2byte	0x67b
 5617 0a42 5B0A0000 		.4byte	0xa5b
 5618 0a46 88000000 		.4byte	.LLST2
 5619 0a4a 00       		.byte	0
 5620 0a4b 07       		.uleb128 0x7
 5621 0a4c 53080000 		.4byte	0x853
 5622 0a50 06       		.uleb128 0x6
 5623 0a51 04       		.byte	0x4
 5624 0a52 560A0000 		.4byte	0xa56
 5625 0a56 07       		.uleb128 0x7
 5626 0a57 B5090000 		.4byte	0x9b5
 5627 0a5b 07       		.uleb128 0x7
 5628 0a5c 500A0000 		.4byte	0xa50
 5629 0a60 1F       		.uleb128 0x1f
 5630 0a61 B1130000 		.4byte	.LASF247
 5631 0a65 01       		.byte	0x1
 5632 0a66 3E0E     		.2byte	0xe3e
 5633 0a68 00000000 		.4byte	.LFB564
 5634 0a6c 2C000000 		.4byte	.LFE564-.LFB564
 5635 0a70 01       		.uleb128 0x1
 5636 0a71 9C       		.byte	0x9c
 5637 0a72 870A0000 		.4byte	0xa87
 5638 0a76 1E       		.uleb128 0x1e
 5639 0a77 10210000 		.4byte	.LASF246
 5640 0a7b 01       		.byte	0x1
 5641 0a7c 400E     		.2byte	0xe40
 5642 0a7e 870A0000 		.4byte	0xa87
 5643 0a82 F1000000 		.4byte	.LLST3
 5644 0a86 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 199


 5645 0a87 06       		.uleb128 0x6
 5646 0a88 04       		.byte	0x4
 5647 0a89 B5090000 		.4byte	0x9b5
 5648 0a8d 1F       		.uleb128 0x1f
 5649 0a8e 890E0000 		.4byte	.LASF248
 5650 0a92 01       		.byte	0x1
 5651 0a93 080E     		.2byte	0xe08
 5652 0a95 00000000 		.4byte	.LFB563
 5653 0a99 12000000 		.4byte	.LFE563-.LFB563
 5654 0a9d 01       		.uleb128 0x1
 5655 0a9e 9C       		.byte	0x9c
 5656 0a9f CD0A0000 		.4byte	0xacd
 5657 0aa3 1D       		.uleb128 0x1d
 5658 0aa4 10210000 		.4byte	.LASF246
 5659 0aa8 01       		.byte	0x1
 5660 0aa9 080E     		.2byte	0xe08
 5661 0aab 870A0000 		.4byte	0xa87
 5662 0aaf 04010000 		.4byte	.LLST4
 5663 0ab3 20       		.uleb128 0x20
 5664 0ab4 0A000000 		.4byte	.LVL12
 5665 0ab8 EB230000 		.4byte	0x23eb
 5666 0abc 21       		.uleb128 0x21
 5667 0abd 10000000 		.4byte	.LVL13
 5668 0ac1 EB230000 		.4byte	0x23eb
 5669 0ac5 22       		.uleb128 0x22
 5670 0ac6 01       		.uleb128 0x1
 5671 0ac7 50       		.byte	0x50
 5672 0ac8 02       		.uleb128 0x2
 5673 0ac9 74       		.byte	0x74
 5674 0aca 00       		.sleb128 0
 5675 0acb 00       		.byte	0
 5676 0acc 00       		.byte	0
 5677 0acd 1F       		.uleb128 0x1f
 5678 0ace 2F190000 		.4byte	.LASF250
 5679 0ad2 01       		.byte	0x1
 5680 0ad3 FF02     		.2byte	0x2ff
 5681 0ad5 00000000 		.4byte	.LFB528
 5682 0ad9 9E000000 		.4byte	.LFE528-.LFB528
 5683 0add 01       		.uleb128 0x1
 5684 0ade 9C       		.byte	0x9c
 5685 0adf DD0B0000 		.4byte	0xbdd
 5686 0ae3 1D       		.uleb128 0x1d
 5687 0ae4 CC110000 		.4byte	.LASF251
 5688 0ae8 01       		.byte	0x1
 5689 0ae9 FF02     		.2byte	0x2ff
 5690 0aeb 23070000 		.4byte	0x723
 5691 0aef 22010000 		.4byte	.LLST5
 5692 0af3 1D       		.uleb128 0x1d
 5693 0af4 B60D0000 		.4byte	.LASF252
 5694 0af8 01       		.byte	0x1
 5695 0af9 0003     		.2byte	0x300
 5696 0afb 00090000 		.4byte	0x900
 5697 0aff 40010000 		.4byte	.LLST6
 5698 0b03 1D       		.uleb128 0x1d
 5699 0b04 F90F0000 		.4byte	.LASF253
 5700 0b08 01       		.byte	0x1
 5701 0b09 0103     		.2byte	0x301
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 200


 5702 0b0b DD0B0000 		.4byte	0xbdd
 5703 0b0f 5E010000 		.4byte	.LLST7
 5704 0b13 1D       		.uleb128 0x1d
 5705 0b14 67190000 		.4byte	.LASF254
 5706 0b18 01       		.byte	0x1
 5707 0b19 0203     		.2byte	0x302
 5708 0b1b E20B0000 		.4byte	0xbe2
 5709 0b1f 9B010000 		.4byte	.LLST8
 5710 0b23 1D       		.uleb128 0x1d
 5711 0b24 77010000 		.4byte	.LASF235
 5712 0b28 01       		.byte	0x1
 5713 0b29 0303     		.2byte	0x303
 5714 0b2b 55070000 		.4byte	0x755
 5715 0b2f B9010000 		.4byte	.LLST9
 5716 0b33 23       		.uleb128 0x23
 5717 0b34 50220000 		.4byte	.LASF255
 5718 0b38 01       		.byte	0x1
 5719 0b39 0403     		.2byte	0x304
 5720 0b3b ED0B0000 		.4byte	0xbed
 5721 0b3f 02       		.uleb128 0x2
 5722 0b40 91       		.byte	0x91
 5723 0b41 04       		.sleb128 4
 5724 0b42 23       		.uleb128 0x23
 5725 0b43 9E110000 		.4byte	.LASF256
 5726 0b47 01       		.byte	0x1
 5727 0b48 0503     		.2byte	0x305
 5728 0b4a 870A0000 		.4byte	0xa87
 5729 0b4e 02       		.uleb128 0x2
 5730 0b4f 91       		.byte	0x91
 5731 0b50 08       		.sleb128 8
 5732 0b51 23       		.uleb128 0x23
 5733 0b52 8B1F0000 		.4byte	.LASF257
 5734 0b56 01       		.byte	0x1
 5735 0b57 0603     		.2byte	0x306
 5736 0b59 FD0B0000 		.4byte	0xbfd
 5737 0b5d 02       		.uleb128 0x2
 5738 0b5e 91       		.byte	0x91
 5739 0b5f 0C       		.sleb128 12
 5740 0b60 24       		.uleb128 0x24
 5741 0b61 C1210000 		.4byte	.LASF232
 5742 0b65 01       		.byte	0x1
 5743 0b66 0803     		.2byte	0x308
 5744 0b68 05090000 		.4byte	0x905
 5745 0b6c 01       		.uleb128 0x1
 5746 0b6d 55       		.byte	0x55
 5747 0b6e 25       		.uleb128 0x25
 5748 0b6f 7800     		.ascii	"x\000"
 5749 0b71 01       		.byte	0x1
 5750 0b72 0903     		.2byte	0x309
 5751 0b74 55070000 		.4byte	0x755
 5752 0b78 D8010000 		.4byte	.LLST10
 5753 0b7c 26       		.uleb128 0x26
 5754 0b7d 1C000000 		.4byte	.LVL18
 5755 0b81 F6230000 		.4byte	0x23f6
 5756 0b85 980B0000 		.4byte	0xb98
 5757 0b89 22       		.uleb128 0x22
 5758 0b8a 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 201


 5759 0b8b 51       		.byte	0x51
 5760 0b8c 02       		.uleb128 0x2
 5761 0b8d 08       		.byte	0x8
 5762 0b8e A5       		.byte	0xa5
 5763 0b8f 22       		.uleb128 0x22
 5764 0b90 01       		.uleb128 0x1
 5765 0b91 52       		.byte	0x52
 5766 0b92 04       		.uleb128 0x4
 5767 0b93 75       		.byte	0x75
 5768 0b94 00       		.sleb128 0
 5769 0b95 32       		.byte	0x32
 5770 0b96 24       		.byte	0x24
 5771 0b97 00       		.byte	0
 5772 0b98 26       		.uleb128 0x26
 5773 0b99 5A000000 		.4byte	.LVL25
 5774 0b9d 01240000 		.4byte	0x2401
 5775 0ba1 AC0B0000 		.4byte	0xbac
 5776 0ba5 22       		.uleb128 0x22
 5777 0ba6 01       		.uleb128 0x1
 5778 0ba7 50       		.byte	0x50
 5779 0ba8 02       		.uleb128 0x2
 5780 0ba9 74       		.byte	0x74
 5781 0baa 04       		.sleb128 4
 5782 0bab 00       		.byte	0
 5783 0bac 26       		.uleb128 0x26
 5784 0bad 62000000 		.4byte	.LVL26
 5785 0bb1 01240000 		.4byte	0x2401
 5786 0bb5 C00B0000 		.4byte	0xbc0
 5787 0bb9 22       		.uleb128 0x22
 5788 0bba 01       		.uleb128 0x1
 5789 0bbb 50       		.byte	0x50
 5790 0bbc 02       		.uleb128 0x2
 5791 0bbd 74       		.byte	0x74
 5792 0bbe 18       		.sleb128 24
 5793 0bbf 00       		.byte	0
 5794 0bc0 21       		.uleb128 0x21
 5795 0bc1 94000000 		.4byte	.LVL31
 5796 0bc5 0D240000 		.4byte	0x240d
 5797 0bc9 22       		.uleb128 0x22
 5798 0bca 01       		.uleb128 0x1
 5799 0bcb 50       		.byte	0x50
 5800 0bcc 02       		.uleb128 0x2
 5801 0bcd 75       		.byte	0x75
 5802 0bce 00       		.sleb128 0
 5803 0bcf 22       		.uleb128 0x22
 5804 0bd0 01       		.uleb128 0x1
 5805 0bd1 51       		.byte	0x51
 5806 0bd2 02       		.uleb128 0x2
 5807 0bd3 7A       		.byte	0x7a
 5808 0bd4 00       		.sleb128 0
 5809 0bd5 22       		.uleb128 0x22
 5810 0bd6 01       		.uleb128 0x1
 5811 0bd7 52       		.byte	0x52
 5812 0bd8 02       		.uleb128 0x2
 5813 0bd9 78       		.byte	0x78
 5814 0bda 00       		.sleb128 0
 5815 0bdb 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 202


 5816 0bdc 00       		.byte	0
 5817 0bdd 07       		.uleb128 0x7
 5818 0bde EB000000 		.4byte	0xeb
 5819 0be2 07       		.uleb128 0x7
 5820 0be3 B0000000 		.4byte	0xb0
 5821 0be7 06       		.uleb128 0x6
 5822 0be8 04       		.byte	0x4
 5823 0be9 53080000 		.4byte	0x853
 5824 0bed 07       		.uleb128 0x7
 5825 0bee E70B0000 		.4byte	0xbe7
 5826 0bf2 06       		.uleb128 0x6
 5827 0bf3 04       		.byte	0x4
 5828 0bf4 F80B0000 		.4byte	0xbf8
 5829 0bf8 07       		.uleb128 0x7
 5830 0bf9 F5080000 		.4byte	0x8f5
 5831 0bfd 07       		.uleb128 0x7
 5832 0bfe F20B0000 		.4byte	0xbf2
 5833 0c02 1F       		.uleb128 0x1f
 5834 0c03 E7210000 		.4byte	.LASF258
 5835 0c07 01       		.byte	0x1
 5836 0c08 100D     		.2byte	0xd10
 5837 0c0a 00000000 		.4byte	.LFB561
 5838 0c0e 58000000 		.4byte	.LFE561-.LFB561
 5839 0c12 01       		.uleb128 0x1
 5840 0c13 9C       		.byte	0x9c
 5841 0c14 AB0C0000 		.4byte	0xcab
 5842 0c18 1E       		.uleb128 0x1e
 5843 0c19 77010000 		.4byte	.LASF235
 5844 0c1d 01       		.byte	0x1
 5845 0c1e 120D     		.2byte	0xd12
 5846 0c20 55070000 		.4byte	0x755
 5847 0c24 02020000 		.4byte	.LLST11
 5848 0c28 26       		.uleb128 0x26
 5849 0c29 14000000 		.4byte	.LVL34
 5850 0c2d 18240000 		.4byte	0x2418
 5851 0c31 490C0000 		.4byte	0xc49
 5852 0c35 22       		.uleb128 0x22
 5853 0c36 01       		.uleb128 0x1
 5854 0c37 50       		.byte	0x50
 5855 0c38 0F       		.uleb128 0xf
 5856 0c39 74       		.byte	0x74
 5857 0c3a 00       		.sleb128 0
 5858 0c3b 32       		.byte	0x32
 5859 0c3c 24       		.byte	0x24
 5860 0c3d 74       		.byte	0x74
 5861 0c3e 00       		.sleb128 0
 5862 0c3f 22       		.byte	0x22
 5863 0c40 32       		.byte	0x32
 5864 0c41 24       		.byte	0x24
 5865 0c42 03       		.byte	0x3
 5866 0c43 30000000 		.4byte	.LANCHOR0+48
 5867 0c47 22       		.byte	0x22
 5868 0c48 00       		.byte	0
 5869 0c49 26       		.uleb128 0x26
 5870 0c4a 26000000 		.4byte	.LVL37
 5871 0c4e 18240000 		.4byte	0x2418
 5872 0c52 5D0C0000 		.4byte	0xc5d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 203


 5873 0c56 22       		.uleb128 0x22
 5874 0c57 01       		.uleb128 0x1
 5875 0c58 50       		.byte	0x50
 5876 0c59 02       		.uleb128 0x2
 5877 0c5a 76       		.byte	0x76
 5878 0c5b 00       		.sleb128 0
 5879 0c5c 00       		.byte	0
 5880 0c5d 26       		.uleb128 0x26
 5881 0c5e 30000000 		.4byte	.LVL38
 5882 0c62 18240000 		.4byte	0x2418
 5883 0c66 710C0000 		.4byte	0xc71
 5884 0c6a 22       		.uleb128 0x22
 5885 0c6b 01       		.uleb128 0x1
 5886 0c6c 50       		.byte	0x50
 5887 0c6d 02       		.uleb128 0x2
 5888 0c6e 75       		.byte	0x75
 5889 0c6f 00       		.sleb128 0
 5890 0c70 00       		.byte	0
 5891 0c71 26       		.uleb128 0x26
 5892 0c72 38000000 		.4byte	.LVL39
 5893 0c76 18240000 		.4byte	0x2418
 5894 0c7a 850C0000 		.4byte	0xc85
 5895 0c7e 22       		.uleb128 0x22
 5896 0c7f 01       		.uleb128 0x1
 5897 0c80 50       		.byte	0x50
 5898 0c81 02       		.uleb128 0x2
 5899 0c82 74       		.byte	0x74
 5900 0c83 14       		.sleb128 20
 5901 0c84 00       		.byte	0
 5902 0c85 26       		.uleb128 0x26
 5903 0c86 40000000 		.4byte	.LVL40
 5904 0c8a 18240000 		.4byte	0x2418
 5905 0c8e 9A0C0000 		.4byte	0xc9a
 5906 0c92 22       		.uleb128 0x22
 5907 0c93 01       		.uleb128 0x1
 5908 0c94 50       		.byte	0x50
 5909 0c95 03       		.uleb128 0x3
 5910 0c96 74       		.byte	0x74
 5911 0c97 E803     		.sleb128 488
 5912 0c99 00       		.byte	0
 5913 0c9a 21       		.uleb128 0x21
 5914 0c9b 46000000 		.4byte	.LVL41
 5915 0c9f 18240000 		.4byte	0x2418
 5916 0ca3 22       		.uleb128 0x22
 5917 0ca4 01       		.uleb128 0x1
 5918 0ca5 50       		.byte	0x50
 5919 0ca6 02       		.uleb128 0x2
 5920 0ca7 74       		.byte	0x74
 5921 0ca8 00       		.sleb128 0
 5922 0ca9 00       		.byte	0
 5923 0caa 00       		.byte	0
 5924 0cab 1F       		.uleb128 0x1f
 5925 0cac 4B110000 		.4byte	.LASF259
 5926 0cb0 01       		.byte	0x1
 5927 0cb1 C303     		.2byte	0x3c3
 5928 0cb3 00000000 		.4byte	.LFB529
 5929 0cb7 AC000000 		.4byte	.LFE529-.LFB529
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 204


 5930 0cbb 01       		.uleb128 0x1
 5931 0cbc 9C       		.byte	0x9c
 5932 0cbd 010D0000 		.4byte	0xd01
 5933 0cc1 1D       		.uleb128 0x1d
 5934 0cc2 9E110000 		.4byte	.LASF256
 5935 0cc6 01       		.byte	0x1
 5936 0cc7 C303     		.2byte	0x3c3
 5937 0cc9 870A0000 		.4byte	0xa87
 5938 0ccd 21020000 		.4byte	.LLST12
 5939 0cd1 20       		.uleb128 0x20
 5940 0cd2 08000000 		.4byte	.LVL43
 5941 0cd6 24240000 		.4byte	0x2424
 5942 0cda 20       		.uleb128 0x20
 5943 0cdb 2C000000 		.4byte	.LVL44
 5944 0cdf 020C0000 		.4byte	0xc02
 5945 0ce3 26       		.uleb128 0x26
 5946 0ce4 7A000000 		.4byte	.LVL45
 5947 0ce8 2F240000 		.4byte	0x242f
 5948 0cec F70C0000 		.4byte	0xcf7
 5949 0cf0 22       		.uleb128 0x22
 5950 0cf1 01       		.uleb128 0x1
 5951 0cf2 51       		.byte	0x51
 5952 0cf3 02       		.uleb128 0x2
 5953 0cf4 74       		.byte	0x74
 5954 0cf5 04       		.sleb128 4
 5955 0cf6 00       		.byte	0
 5956 0cf7 20       		.uleb128 0x20
 5957 0cf8 7E000000 		.4byte	.LVL46
 5958 0cfc 3B240000 		.4byte	0x243b
 5959 0d00 00       		.byte	0
 5960 0d01 1F       		.uleb128 0x1f
 5961 0d02 71210000 		.4byte	.LASF260
 5962 0d06 01       		.byte	0x1
 5963 0d07 5F12     		.2byte	0x125f
 5964 0d09 00000000 		.4byte	.LFB574
 5965 0d0d 68000000 		.4byte	.LFE574-.LFB574
 5966 0d11 01       		.uleb128 0x1
 5967 0d12 9C       		.byte	0x9c
 5968 0d13 8A0D0000 		.4byte	0xd8a
 5969 0d17 1D       		.uleb128 0x1d
 5970 0d18 C11E0000 		.4byte	.LASF261
 5971 0d1c 01       		.byte	0x1
 5972 0d1d 5F12     		.2byte	0x125f
 5973 0d1f 60070000 		.4byte	0x760
 5974 0d23 4D020000 		.4byte	.LLST13
 5975 0d27 1D       		.uleb128 0x1d
 5976 0d28 0D1D0000 		.4byte	.LASF262
 5977 0d2c 01       		.byte	0x1
 5978 0d2d 5F12     		.2byte	0x125f
 5979 0d2f 8A0D0000 		.4byte	0xd8a
 5980 0d33 79020000 		.4byte	.LLST14
 5981 0d37 1E       		.uleb128 0x1e
 5982 0d38 AC200000 		.4byte	.LASF263
 5983 0d3c 01       		.byte	0x1
 5984 0d3d 6112     		.2byte	0x1261
 5985 0d3f 60070000 		.4byte	0x760
 5986 0d43 A5020000 		.4byte	.LLST15
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 205


 5987 0d47 1E       		.uleb128 0x1e
 5988 0d48 2F070000 		.4byte	.LASF264
 5989 0d4c 01       		.byte	0x1
 5990 0d4d 6212     		.2byte	0x1262
 5991 0d4f 8F0D0000 		.4byte	0xd8f
 5992 0d53 B8020000 		.4byte	.LLST16
 5993 0d57 20       		.uleb128 0x20
 5994 0d58 16000000 		.4byte	.LVL51
 5995 0d5c 46240000 		.4byte	0x2446
 5996 0d60 26       		.uleb128 0x26
 5997 0d61 2A000000 		.4byte	.LVL52
 5998 0d65 2F240000 		.4byte	0x242f
 5999 0d69 770D0000 		.4byte	0xd77
 6000 0d6d 22       		.uleb128 0x22
 6001 0d6e 01       		.uleb128 0x1
 6002 0d6f 50       		.byte	0x50
 6003 0d70 05       		.uleb128 0x5
 6004 0d71 03       		.byte	0x3
 6005 0d72 00000000 		.4byte	.LANCHOR0
 6006 0d76 00       		.byte	0
 6007 0d77 20       		.uleb128 0x20
 6008 0d78 4A000000 		.4byte	.LVL55
 6009 0d7c 52240000 		.4byte	0x2452
 6010 0d80 20       		.uleb128 0x20
 6011 0d81 5A000000 		.4byte	.LVL58
 6012 0d85 52240000 		.4byte	0x2452
 6013 0d89 00       		.byte	0
 6014 0d8a 07       		.uleb128 0x7
 6015 0d8b 4A070000 		.4byte	0x74a
 6016 0d8f 07       		.uleb128 0x7
 6017 0d90 60070000 		.4byte	0x760
 6018 0d94 27       		.uleb128 0x27
 6019 0d95 181F0000 		.4byte	.LASF267
 6020 0d99 01       		.byte	0x1
 6021 0d9a A402     		.2byte	0x2a4
 6022 0d9c 4A070000 		.4byte	0x74a
 6023 0da0 00000000 		.4byte	.LFB527
 6024 0da4 62000000 		.4byte	.LFE527-.LFB527
 6025 0da8 01       		.uleb128 0x1
 6026 0da9 9C       		.byte	0x9c
 6027 0daa D80E0000 		.4byte	0xed8
 6028 0dae 1D       		.uleb128 0x1d
 6029 0daf CC110000 		.4byte	.LASF251
 6030 0db3 01       		.byte	0x1
 6031 0db4 A402     		.2byte	0x2a4
 6032 0db6 23070000 		.4byte	0x723
 6033 0dba CB020000 		.4byte	.LLST17
 6034 0dbe 1D       		.uleb128 0x1d
 6035 0dbf B60D0000 		.4byte	.LASF252
 6036 0dc3 01       		.byte	0x1
 6037 0dc4 A502     		.2byte	0x2a5
 6038 0dc6 00090000 		.4byte	0x900
 6039 0dca E9020000 		.4byte	.LLST18
 6040 0dce 1D       		.uleb128 0x1d
 6041 0dcf B5080000 		.4byte	.LASF265
 6042 0dd3 01       		.byte	0x1
 6043 0dd4 A602     		.2byte	0x2a6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 206


 6044 0dd6 D80E0000 		.4byte	0xed8
 6045 0dda 07030000 		.4byte	.LLST19
 6046 0dde 1D       		.uleb128 0x1d
 6047 0ddf 67190000 		.4byte	.LASF254
 6048 0de3 01       		.byte	0x1
 6049 0de4 A702     		.2byte	0x2a7
 6050 0de6 E20B0000 		.4byte	0xbe2
 6051 0dea 28030000 		.4byte	.LLST20
 6052 0dee 23       		.uleb128 0x23
 6053 0def 77010000 		.4byte	.LASF235
 6054 0df3 01       		.byte	0x1
 6055 0df4 A802     		.2byte	0x2a8
 6056 0df6 55070000 		.4byte	0x755
 6057 0dfa 02       		.uleb128 0x2
 6058 0dfb 91       		.byte	0x91
 6059 0dfc 00       		.sleb128 0
 6060 0dfd 23       		.uleb128 0x23
 6061 0dfe 50220000 		.4byte	.LASF255
 6062 0e02 01       		.byte	0x1
 6063 0e03 A902     		.2byte	0x2a9
 6064 0e05 ED0B0000 		.4byte	0xbed
 6065 0e09 02       		.uleb128 0x2
 6066 0e0a 91       		.byte	0x91
 6067 0e0b 04       		.sleb128 4
 6068 0e0c 1E       		.uleb128 0x1e
 6069 0e0d 9E110000 		.4byte	.LASF256
 6070 0e11 01       		.byte	0x1
 6071 0e12 AB02     		.2byte	0x2ab
 6072 0e14 870A0000 		.4byte	0xa87
 6073 0e18 46030000 		.4byte	.LLST21
 6074 0e1c 1E       		.uleb128 0x1e
 6075 0e1d 571C0000 		.4byte	.LASF245
 6076 0e21 01       		.byte	0x1
 6077 0e22 AC02     		.2byte	0x2ac
 6078 0e24 4A070000 		.4byte	0x74a
 6079 0e28 6F030000 		.4byte	.LLST22
 6080 0e2c 28       		.uleb128 0x28
 6081 0e2d 0E000000 		.4byte	.LBB18
 6082 0e31 24000000 		.4byte	.LBE18-.LBB18
 6083 0e35 840E0000 		.4byte	0xe84
 6084 0e39 1E       		.uleb128 0x1e
 6085 0e3a 3A1A0000 		.4byte	.LASF236
 6086 0e3e 01       		.byte	0x1
 6087 0e3f C902     		.2byte	0x2c9
 6088 0e41 05090000 		.4byte	0x905
 6089 0e45 8E030000 		.4byte	.LLST23
 6090 0e49 26       		.uleb128 0x26
 6091 0e4a 14000000 		.4byte	.LVL62
 6092 0e4e 5E240000 		.4byte	0x245e
 6093 0e52 5F0E0000 		.4byte	0xe5f
 6094 0e56 22       		.uleb128 0x22
 6095 0e57 01       		.uleb128 0x1
 6096 0e58 50       		.byte	0x50
 6097 0e59 04       		.uleb128 0x4
 6098 0e5a 75       		.byte	0x75
 6099 0e5b 00       		.sleb128 0
 6100 0e5c 32       		.byte	0x32
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 207


 6101 0e5d 24       		.byte	0x24
 6102 0e5e 00       		.byte	0
 6103 0e5f 26       		.uleb128 0x26
 6104 0e60 1E000000 		.4byte	.LVL64
 6105 0e64 5E240000 		.4byte	0x245e
 6106 0e68 730E0000 		.4byte	0xe73
 6107 0e6c 22       		.uleb128 0x22
 6108 0e6d 01       		.uleb128 0x1
 6109 0e6e 50       		.byte	0x50
 6110 0e6f 02       		.uleb128 0x2
 6111 0e70 08       		.byte	0x8
 6112 0e71 60       		.byte	0x60
 6113 0e72 00       		.byte	0
 6114 0e73 21       		.uleb128 0x21
 6115 0e74 2E000000 		.4byte	.LVL66
 6116 0e78 EB230000 		.4byte	0x23eb
 6117 0e7c 22       		.uleb128 0x22
 6118 0e7d 01       		.uleb128 0x1
 6119 0e7e 50       		.byte	0x50
 6120 0e7f 02       		.uleb128 0x2
 6121 0e80 79       		.byte	0x79
 6122 0e81 00       		.sleb128 0
 6123 0e82 00       		.byte	0
 6124 0e83 00       		.byte	0
 6125 0e84 26       		.uleb128 0x26
 6126 0e85 4E000000 		.4byte	.LVL69
 6127 0e89 CD0A0000 		.4byte	0xacd
 6128 0e8d C70E0000 		.4byte	0xec7
 6129 0e91 22       		.uleb128 0x22
 6130 0e92 01       		.uleb128 0x1
 6131 0e93 50       		.byte	0x50
 6132 0e94 02       		.uleb128 0x2
 6133 0e95 76       		.byte	0x76
 6134 0e96 00       		.sleb128 0
 6135 0e97 22       		.uleb128 0x22
 6136 0e98 01       		.uleb128 0x1
 6137 0e99 51       		.byte	0x51
 6138 0e9a 02       		.uleb128 0x2
 6139 0e9b 77       		.byte	0x77
 6140 0e9c 00       		.sleb128 0
 6141 0e9d 22       		.uleb128 0x22
 6142 0e9e 01       		.uleb128 0x1
 6143 0e9f 52       		.byte	0x52
 6144 0ea0 02       		.uleb128 0x2
 6145 0ea1 75       		.byte	0x75
 6146 0ea2 00       		.sleb128 0
 6147 0ea3 22       		.uleb128 0x22
 6148 0ea4 01       		.uleb128 0x1
 6149 0ea5 53       		.byte	0x53
 6150 0ea6 02       		.uleb128 0x2
 6151 0ea7 78       		.byte	0x78
 6152 0ea8 00       		.sleb128 0
 6153 0ea9 22       		.uleb128 0x22
 6154 0eaa 02       		.uleb128 0x2
 6155 0eab 7D       		.byte	0x7d
 6156 0eac 00       		.sleb128 0
 6157 0ead 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 208


 6158 0eae 91       		.byte	0x91
 6159 0eaf 00       		.sleb128 0
 6160 0eb0 06       		.byte	0x6
 6161 0eb1 22       		.uleb128 0x22
 6162 0eb2 02       		.uleb128 0x2
 6163 0eb3 7D       		.byte	0x7d
 6164 0eb4 04       		.sleb128 4
 6165 0eb5 03       		.uleb128 0x3
 6166 0eb6 91       		.byte	0x91
 6167 0eb7 04       		.sleb128 4
 6168 0eb8 06       		.byte	0x6
 6169 0eb9 22       		.uleb128 0x22
 6170 0eba 02       		.uleb128 0x2
 6171 0ebb 7D       		.byte	0x7d
 6172 0ebc 08       		.sleb128 8
 6173 0ebd 02       		.uleb128 0x2
 6174 0ebe 74       		.byte	0x74
 6175 0ebf 00       		.sleb128 0
 6176 0ec0 22       		.uleb128 0x22
 6177 0ec1 02       		.uleb128 0x2
 6178 0ec2 7D       		.byte	0x7d
 6179 0ec3 0C       		.sleb128 12
 6180 0ec4 01       		.uleb128 0x1
 6181 0ec5 30       		.byte	0x30
 6182 0ec6 00       		.byte	0
 6183 0ec7 21       		.uleb128 0x21
 6184 0ec8 54000000 		.4byte	.LVL70
 6185 0ecc AB0C0000 		.4byte	0xcab
 6186 0ed0 22       		.uleb128 0x22
 6187 0ed1 01       		.uleb128 0x1
 6188 0ed2 50       		.byte	0x50
 6189 0ed3 02       		.uleb128 0x2
 6190 0ed4 74       		.byte	0x74
 6191 0ed5 00       		.sleb128 0
 6192 0ed6 00       		.byte	0
 6193 0ed7 00       		.byte	0
 6194 0ed8 07       		.uleb128 0x7
 6195 0ed9 D5000000 		.4byte	0xd5
 6196 0edd 29       		.uleb128 0x29
 6197 0ede 2A170000 		.4byte	.LASF272
 6198 0ee2 01       		.byte	0x1
 6199 0ee3 1804     		.2byte	0x418
 6200 0ee5 00000000 		.4byte	.LFB530
 6201 0ee9 A4000000 		.4byte	.LFE530-.LFB530
 6202 0eed 01       		.uleb128 0x1
 6203 0eee 9C       		.byte	0x9c
 6204 0eef 860F0000 		.4byte	0xf86
 6205 0ef3 1D       		.uleb128 0x1d
 6206 0ef4 421A0000 		.4byte	.LASF266
 6207 0ef8 01       		.byte	0x1
 6208 0ef9 1804     		.2byte	0x418
 6209 0efb 53080000 		.4byte	0x853
 6210 0eff B7030000 		.4byte	.LLST24
 6211 0f03 1E       		.uleb128 0x1e
 6212 0f04 10210000 		.4byte	.LASF246
 6213 0f08 01       		.byte	0x1
 6214 0f09 1A04     		.2byte	0x41a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 209


 6215 0f0b 870A0000 		.4byte	0xa87
 6216 0f0f D5030000 		.4byte	.LLST25
 6217 0f13 20       		.uleb128 0x20
 6218 0f14 08000000 		.4byte	.LVL74
 6219 0f18 24240000 		.4byte	0x2424
 6220 0f1c 26       		.uleb128 0x26
 6221 0f1d 18000000 		.4byte	.LVL76
 6222 0f21 46240000 		.4byte	0x2446
 6223 0f25 300F0000 		.4byte	0xf30
 6224 0f29 22       		.uleb128 0x22
 6225 0f2a 01       		.uleb128 0x1
 6226 0f2b 50       		.byte	0x50
 6227 0f2c 02       		.uleb128 0x2
 6228 0f2d 76       		.byte	0x76
 6229 0f2e 00       		.sleb128 0
 6230 0f2f 00       		.byte	0
 6231 0f30 26       		.uleb128 0x26
 6232 0f31 24000000 		.4byte	.LVL77
 6233 0f35 46240000 		.4byte	0x2446
 6234 0f39 440F0000 		.4byte	0xf44
 6235 0f3d 22       		.uleb128 0x22
 6236 0f3e 01       		.uleb128 0x1
 6237 0f3f 50       		.byte	0x50
 6238 0f40 02       		.uleb128 0x2
 6239 0f41 74       		.byte	0x74
 6240 0f42 18       		.sleb128 24
 6241 0f43 00       		.byte	0
 6242 0f44 26       		.uleb128 0x26
 6243 0f45 44000000 		.4byte	.LVL78
 6244 0f49 2F240000 		.4byte	0x242f
 6245 0f4d 5F0F0000 		.4byte	0xf5f
 6246 0f51 22       		.uleb128 0x22
 6247 0f52 01       		.uleb128 0x1
 6248 0f53 50       		.byte	0x50
 6249 0f54 03       		.uleb128 0x3
 6250 0f55 75       		.byte	0x75
 6251 0f56 E803     		.sleb128 488
 6252 0f58 22       		.uleb128 0x22
 6253 0f59 01       		.uleb128 0x1
 6254 0f5a 51       		.byte	0x51
 6255 0f5b 02       		.uleb128 0x2
 6256 0f5c 76       		.byte	0x76
 6257 0f5d 00       		.sleb128 0
 6258 0f5e 00       		.byte	0
 6259 0f5f 26       		.uleb128 0x26
 6260 0f60 62000000 		.4byte	.LVL79
 6261 0f64 8D0A0000 		.4byte	0xa8d
 6262 0f68 730F0000 		.4byte	0xf73
 6263 0f6c 22       		.uleb128 0x22
 6264 0f6d 01       		.uleb128 0x1
 6265 0f6e 50       		.byte	0x50
 6266 0f6f 02       		.uleb128 0x2
 6267 0f70 74       		.byte	0x74
 6268 0f71 00       		.sleb128 0
 6269 0f72 00       		.byte	0
 6270 0f73 20       		.uleb128 0x20
 6271 0f74 66000000 		.4byte	.LVL80
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 210


 6272 0f78 600A0000 		.4byte	0xa60
 6273 0f7c 20       		.uleb128 0x20
 6274 0f7d 6A000000 		.4byte	.LVL81
 6275 0f81 3B240000 		.4byte	0x243b
 6276 0f85 00       		.byte	0
 6277 0f86 27       		.uleb128 0x27
 6278 0f87 F60C0000 		.4byte	.LASF268
 6279 0f8b 01       		.byte	0x1
 6280 0f8c 3C05     		.2byte	0x53c
 6281 0f8e 55070000 		.4byte	0x755
 6282 0f92 00000000 		.4byte	.LFB533
 6283 0f96 20000000 		.4byte	.LFE533-.LFB533
 6284 0f9a 01       		.uleb128 0x1
 6285 0f9b 9C       		.byte	0x9c
 6286 0f9c E30F0000 		.4byte	0xfe3
 6287 0fa0 1D       		.uleb128 0x1d
 6288 0fa1 CE160000 		.4byte	.LASF249
 6289 0fa5 01       		.byte	0x1
 6290 0fa6 3C05     		.2byte	0x53c
 6291 0fa8 53080000 		.4byte	0x853
 6292 0fac E8030000 		.4byte	.LLST26
 6293 0fb0 1E       		.uleb128 0x1e
 6294 0fb1 10210000 		.4byte	.LASF246
 6295 0fb5 01       		.byte	0x1
 6296 0fb6 3E05     		.2byte	0x53e
 6297 0fb8 870A0000 		.4byte	0xa87
 6298 0fbc 06040000 		.4byte	.LLST27
 6299 0fc0 1E       		.uleb128 0x1e
 6300 0fc1 01130000 		.4byte	.LASF269
 6301 0fc5 01       		.byte	0x1
 6302 0fc6 3F05     		.2byte	0x53f
 6303 0fc8 55070000 		.4byte	0x755
 6304 0fcc 19040000 		.4byte	.LLST28
 6305 0fd0 20       		.uleb128 0x20
 6306 0fd1 08000000 		.4byte	.LVL84
 6307 0fd5 24240000 		.4byte	0x2424
 6308 0fd9 20       		.uleb128 0x20
 6309 0fda 16000000 		.4byte	.LVL87
 6310 0fde 3B240000 		.4byte	0x243b
 6311 0fe2 00       		.byte	0
 6312 0fe3 27       		.uleb128 0x27
 6313 0fe4 53140000 		.4byte	.LASF270
 6314 0fe8 01       		.byte	0x1
 6315 0fe9 5205     		.2byte	0x552
 6316 0feb 55070000 		.4byte	0x755
 6317 0fef 00000000 		.4byte	.LFB534
 6318 0ff3 30000000 		.4byte	.LFE534-.LFB534
 6319 0ff7 01       		.uleb128 0x1
 6320 0ff8 9C       		.byte	0x9c
 6321 0ff9 88100000 		.4byte	0x1088
 6322 0ffd 1D       		.uleb128 0x1d
 6323 0ffe CE160000 		.4byte	.LASF249
 6324 1002 01       		.byte	0x1
 6325 1003 5205     		.2byte	0x552
 6326 1005 53080000 		.4byte	0x853
 6327 1009 37040000 		.4byte	.LLST29
 6328 100d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 211


 6329 100e 10210000 		.4byte	.LASF246
 6330 1012 01       		.byte	0x1
 6331 1013 5405     		.2byte	0x554
 6332 1015 870A0000 		.4byte	0xa87
 6333 1019 55040000 		.4byte	.LLST30
 6334 101d 24       		.uleb128 0x24
 6335 101e 01130000 		.4byte	.LASF269
 6336 1022 01       		.byte	0x1
 6337 1023 5505     		.2byte	0x555
 6338 1025 55070000 		.4byte	0x755
 6339 1029 01       		.uleb128 0x1
 6340 102a 50       		.byte	0x50
 6341 102b 2A       		.uleb128 0x2a
 6342 102c AF090000 		.4byte	.LASF271
 6343 1030 01       		.byte	0x1
 6344 1031 5505     		.2byte	0x555
 6345 1033 55070000 		.4byte	0x755
 6346 1037 2B       		.uleb128 0x2b
 6347 1038 C1090000 		.4byte	0x9c1
 6348 103c 08000000 		.4byte	.LBB19
 6349 1040 14000000 		.4byte	.LBE19-.LBB19
 6350 1044 01       		.byte	0x1
 6351 1045 6905     		.2byte	0x569
 6352 1047 60100000 		.4byte	0x1060
 6353 104b 2C       		.uleb128 0x2c
 6354 104c 08000000 		.4byte	.LBB20
 6355 1050 14000000 		.4byte	.LBE20-.LBB20
 6356 1054 2D       		.uleb128 0x2d
 6357 1055 D1090000 		.4byte	0x9d1
 6358 1059 2D       		.uleb128 0x2d
 6359 105a DC090000 		.4byte	0x9dc
 6360 105e 00       		.byte	0
 6361 105f 00       		.byte	0
 6362 1060 2B       		.uleb128 0x2b
 6363 1061 E8090000 		.4byte	0x9e8
 6364 1065 26000000 		.4byte	.LBB21
 6365 1069 04000000 		.4byte	.LBE21-.LBB21
 6366 106d 01       		.byte	0x1
 6367 106e 7005     		.2byte	0x570
 6368 1070 7E100000 		.4byte	0x107e
 6369 1074 2E       		.uleb128 0x2e
 6370 1075 F4090000 		.4byte	0x9f4
 6371 1079 68040000 		.4byte	.LLST31
 6372 107d 00       		.byte	0
 6373 107e 20       		.uleb128 0x20
 6374 107f 08000000 		.4byte	.LVL90
 6375 1083 69240000 		.4byte	0x2469
 6376 1087 00       		.byte	0
 6377 1088 29       		.uleb128 0x29
 6378 1089 A8150000 		.4byte	.LASF273
 6379 108d 01       		.byte	0x1
 6380 108e 7A05     		.2byte	0x57a
 6381 1090 00000000 		.4byte	.LFB535
 6382 1094 D0000000 		.4byte	.LFE535-.LFB535
 6383 1098 01       		.uleb128 0x1
 6384 1099 9C       		.byte	0x9c
 6385 109a 39110000 		.4byte	0x1139
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 212


 6386 109e 1D       		.uleb128 0x1d
 6387 109f CE160000 		.4byte	.LASF249
 6388 10a3 01       		.byte	0x1
 6389 10a4 7A05     		.2byte	0x57a
 6390 10a6 53080000 		.4byte	0x853
 6391 10aa 7B040000 		.4byte	.LLST32
 6392 10ae 1D       		.uleb128 0x1d
 6393 10af DD130000 		.4byte	.LASF274
 6394 10b3 01       		.byte	0x1
 6395 10b4 7A05     		.2byte	0x57a
 6396 10b6 55070000 		.4byte	0x755
 6397 10ba 99040000 		.4byte	.LLST33
 6398 10be 1E       		.uleb128 0x1e
 6399 10bf 10210000 		.4byte	.LASF246
 6400 10c3 01       		.byte	0x1
 6401 10c4 7C05     		.2byte	0x57c
 6402 10c6 870A0000 		.4byte	0xa87
 6403 10ca C3040000 		.4byte	.LLST34
 6404 10ce 1E       		.uleb128 0x1e
 6405 10cf 751F0000 		.4byte	.LASF275
 6406 10d3 01       		.byte	0x1
 6407 10d4 7D05     		.2byte	0x57d
 6408 10d6 55070000 		.4byte	0x755
 6409 10da D6040000 		.4byte	.LLST35
 6410 10de 1E       		.uleb128 0x1e
 6411 10df A51E0000 		.4byte	.LASF276
 6412 10e3 01       		.byte	0x1
 6413 10e4 7D05     		.2byte	0x57d
 6414 10e6 55070000 		.4byte	0x755
 6415 10ea E9040000 		.4byte	.LLST36
 6416 10ee 1E       		.uleb128 0x1e
 6417 10ef DE070000 		.4byte	.LASF277
 6418 10f3 01       		.byte	0x1
 6419 10f4 7E05     		.2byte	0x57e
 6420 10f6 4A070000 		.4byte	0x74a
 6421 10fa FC040000 		.4byte	.LLST37
 6422 10fe 20       		.uleb128 0x20
 6423 10ff 18000000 		.4byte	.LVL97
 6424 1103 24240000 		.4byte	0x2424
 6425 1107 26       		.uleb128 0x26
 6426 1108 88000000 		.4byte	.LVL103
 6427 110c 46240000 		.4byte	0x2446
 6428 1110 1B110000 		.4byte	0x111b
 6429 1114 22       		.uleb128 0x22
 6430 1115 01       		.uleb128 0x1
 6431 1116 50       		.byte	0x50
 6432 1117 02       		.uleb128 0x2
 6433 1118 75       		.byte	0x75
 6434 1119 00       		.sleb128 0
 6435 111a 00       		.byte	0
 6436 111b 26       		.uleb128 0x26
 6437 111c AA000000 		.4byte	.LVL104
 6438 1120 2F240000 		.4byte	0x242f
 6439 1124 2F110000 		.4byte	0x112f
 6440 1128 22       		.uleb128 0x22
 6441 1129 01       		.uleb128 0x1
 6442 112a 51       		.byte	0x51
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 213


 6443 112b 02       		.uleb128 0x2
 6444 112c 75       		.byte	0x75
 6445 112d 00       		.sleb128 0
 6446 112e 00       		.byte	0
 6447 112f 20       		.uleb128 0x20
 6448 1130 C0000000 		.4byte	.LVL106
 6449 1134 3B240000 		.4byte	0x243b
 6450 1138 00       		.byte	0
 6451 1139 29       		.uleb128 0x29
 6452 113a CE210000 		.4byte	.LASF278
 6453 113e 01       		.byte	0x1
 6454 113f A606     		.2byte	0x6a6
 6455 1141 00000000 		.4byte	.LFB538
 6456 1145 7C000000 		.4byte	.LFE538-.LFB538
 6457 1149 01       		.uleb128 0x1
 6458 114a 9C       		.byte	0x9c
 6459 114b BE110000 		.4byte	0x11be
 6460 114f 1D       		.uleb128 0x1d
 6461 1150 D2060000 		.4byte	.LASF279
 6462 1154 01       		.byte	0x1
 6463 1155 A606     		.2byte	0x6a6
 6464 1157 53080000 		.4byte	0x853
 6465 115b 1B050000 		.4byte	.LLST38
 6466 115f 1E       		.uleb128 0x1e
 6467 1160 10210000 		.4byte	.LASF246
 6468 1164 01       		.byte	0x1
 6469 1165 A806     		.2byte	0x6a8
 6470 1167 BE110000 		.4byte	0x11be
 6471 116b 47050000 		.4byte	.LLST39
 6472 116f 20       		.uleb128 0x20
 6473 1170 1A000000 		.4byte	.LVL109
 6474 1174 24240000 		.4byte	0x2424
 6475 1178 26       		.uleb128 0x26
 6476 1179 20000000 		.4byte	.LVL110
 6477 117d 000A0000 		.4byte	0xa00
 6478 1181 8C110000 		.4byte	0x118c
 6479 1185 22       		.uleb128 0x22
 6480 1186 01       		.uleb128 0x1
 6481 1187 50       		.byte	0x50
 6482 1188 02       		.uleb128 0x2
 6483 1189 74       		.byte	0x74
 6484 118a 00       		.sleb128 0
 6485 118b 00       		.byte	0
 6486 118c 26       		.uleb128 0x26
 6487 118d 2A000000 		.4byte	.LVL111
 6488 1191 46240000 		.4byte	0x2446
 6489 1195 A0110000 		.4byte	0x11a0
 6490 1199 22       		.uleb128 0x22
 6491 119a 01       		.uleb128 0x1
 6492 119b 50       		.byte	0x50
 6493 119c 02       		.uleb128 0x2
 6494 119d 76       		.byte	0x76
 6495 119e 00       		.sleb128 0
 6496 119f 00       		.byte	0
 6497 11a0 26       		.uleb128 0x26
 6498 11a1 50000000 		.4byte	.LVL112
 6499 11a5 2F240000 		.4byte	0x242f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 214


 6500 11a9 B4110000 		.4byte	0x11b4
 6501 11ad 22       		.uleb128 0x22
 6502 11ae 01       		.uleb128 0x1
 6503 11af 51       		.byte	0x51
 6504 11b0 02       		.uleb128 0x2
 6505 11b1 76       		.byte	0x76
 6506 11b2 00       		.sleb128 0
 6507 11b3 00       		.byte	0
 6508 11b4 20       		.uleb128 0x20
 6509 11b5 70000000 		.4byte	.LVL113
 6510 11b9 3B240000 		.4byte	0x243b
 6511 11bd 00       		.byte	0
 6512 11be 07       		.uleb128 0x7
 6513 11bf 870A0000 		.4byte	0xa87
 6514 11c3 27       		.uleb128 0x27
 6515 11c4 1F0A0000 		.4byte	.LASF280
 6516 11c8 01       		.byte	0x1
 6517 11c9 DC06     		.2byte	0x6dc
 6518 11cb 4A070000 		.4byte	0x74a
 6519 11cf 00000000 		.4byte	.LFB539
 6520 11d3 98000000 		.4byte	.LFE539-.LFB539
 6521 11d7 01       		.uleb128 0x1
 6522 11d8 9C       		.byte	0x9c
 6523 11d9 BF120000 		.4byte	0x12bf
 6524 11dd 1D       		.uleb128 0x1d
 6525 11de D2060000 		.4byte	.LASF279
 6526 11e2 01       		.byte	0x1
 6527 11e3 DC06     		.2byte	0x6dc
 6528 11e5 53080000 		.4byte	0x853
 6529 11e9 73050000 		.4byte	.LLST40
 6530 11ed 1E       		.uleb128 0x1e
 6531 11ee DE070000 		.4byte	.LASF277
 6532 11f2 01       		.byte	0x1
 6533 11f3 DE06     		.2byte	0x6de
 6534 11f5 4A070000 		.4byte	0x74a
 6535 11f9 9F050000 		.4byte	.LLST41
 6536 11fd 1E       		.uleb128 0x1e
 6537 11fe 10210000 		.4byte	.LASF246
 6538 1202 01       		.byte	0x1
 6539 1203 DF06     		.2byte	0x6df
 6540 1205 BE110000 		.4byte	0x11be
 6541 1209 E0050000 		.4byte	.LLST42
 6542 120d 2A       		.uleb128 0x2a
 6543 120e 7E220000 		.4byte	.LASF281
 6544 1212 01       		.byte	0x1
 6545 1213 E006     		.2byte	0x6e0
 6546 1215 55070000 		.4byte	0x755
 6547 1219 2B       		.uleb128 0x2b
 6548 121a C1090000 		.4byte	0x9c1
 6549 121e 0E000000 		.4byte	.LBB23
 6550 1222 14000000 		.4byte	.LBE23-.LBB23
 6551 1226 01       		.byte	0x1
 6552 1227 F606     		.2byte	0x6f6
 6553 1229 42120000 		.4byte	0x1242
 6554 122d 2C       		.uleb128 0x2c
 6555 122e 0E000000 		.4byte	.LBB24
 6556 1232 14000000 		.4byte	.LBE24-.LBB24
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 215


 6557 1236 2D       		.uleb128 0x2d
 6558 1237 D1090000 		.4byte	0x9d1
 6559 123b 2D       		.uleb128 0x2d
 6560 123c DC090000 		.4byte	0x9dc
 6561 1240 00       		.byte	0
 6562 1241 00       		.byte	0
 6563 1242 2B       		.uleb128 0x2b
 6564 1243 E8090000 		.4byte	0x9e8
 6565 1247 82000000 		.4byte	.LBB25
 6566 124b 04000000 		.4byte	.LBE25-.LBB25
 6567 124f 01       		.byte	0x1
 6568 1250 1A07     		.2byte	0x71a
 6569 1252 60120000 		.4byte	0x1260
 6570 1256 2E       		.uleb128 0x2e
 6571 1257 F4090000 		.4byte	0x9f4
 6572 125b 0C060000 		.4byte	.LLST43
 6573 125f 00       		.byte	0
 6574 1260 20       		.uleb128 0x20
 6575 1261 0E000000 		.4byte	.LVL116
 6576 1265 69240000 		.4byte	0x2469
 6577 1269 26       		.uleb128 0x26
 6578 126a 28000000 		.4byte	.LVL117
 6579 126e 000A0000 		.4byte	0xa00
 6580 1272 7D120000 		.4byte	0x127d
 6581 1276 22       		.uleb128 0x22
 6582 1277 01       		.uleb128 0x1
 6583 1278 50       		.byte	0x50
 6584 1279 02       		.uleb128 0x2
 6585 127a 74       		.byte	0x74
 6586 127b 00       		.sleb128 0
 6587 127c 00       		.byte	0
 6588 127d 26       		.uleb128 0x26
 6589 127e 4E000000 		.4byte	.LVL119
 6590 1282 46240000 		.4byte	0x2446
 6591 1286 91120000 		.4byte	0x1291
 6592 128a 22       		.uleb128 0x22
 6593 128b 01       		.uleb128 0x1
 6594 128c 50       		.byte	0x50
 6595 128d 02       		.uleb128 0x2
 6596 128e 76       		.byte	0x76
 6597 128f 00       		.sleb128 0
 6598 1290 00       		.byte	0
 6599 1291 26       		.uleb128 0x26
 6600 1292 70000000 		.4byte	.LVL120
 6601 1296 2F240000 		.4byte	0x242f
 6602 129a A5120000 		.4byte	0x12a5
 6603 129e 22       		.uleb128 0x22
 6604 129f 01       		.uleb128 0x1
 6605 12a0 51       		.byte	0x51
 6606 12a1 02       		.uleb128 0x2
 6607 12a2 76       		.byte	0x76
 6608 12a3 00       		.sleb128 0
 6609 12a4 00       		.byte	0
 6610 12a5 21       		.uleb128 0x21
 6611 12a6 7C000000 		.4byte	.LVL122
 6612 12aa 2F240000 		.4byte	0x242f
 6613 12ae 22       		.uleb128 0x22
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 216


 6614 12af 01       		.uleb128 0x1
 6615 12b0 50       		.byte	0x50
 6616 12b1 05       		.uleb128 0x5
 6617 12b2 03       		.byte	0x3
 6618 12b3 14000000 		.4byte	.LANCHOR0+20
 6619 12b7 22       		.uleb128 0x22
 6620 12b8 01       		.uleb128 0x1
 6621 12b9 51       		.byte	0x51
 6622 12ba 02       		.uleb128 0x2
 6623 12bb 74       		.byte	0x74
 6624 12bc 18       		.sleb128 24
 6625 12bd 00       		.byte	0
 6626 12be 00       		.byte	0
 6627 12bf 29       		.uleb128 0x29
 6628 12c0 F91C0000 		.4byte	.LASF282
 6629 12c4 01       		.byte	0x1
 6630 12c5 2207     		.2byte	0x722
 6631 12c7 00000000 		.4byte	.LFB540
 6632 12cb 60000000 		.4byte	.LFE540-.LFB540
 6633 12cf 01       		.uleb128 0x1
 6634 12d0 9C       		.byte	0x9c
 6635 12d1 33130000 		.4byte	0x1333
 6636 12d5 1E       		.uleb128 0x1e
 6637 12d6 571C0000 		.4byte	.LASF245
 6638 12da 01       		.byte	0x1
 6639 12db 2407     		.2byte	0x724
 6640 12dd 4A070000 		.4byte	0x74a
 6641 12e1 1F060000 		.4byte	.LLST44
 6642 12e5 26       		.uleb128 0x26
 6643 12e6 16000000 		.4byte	.LVL126
 6644 12ea 940D0000 		.4byte	0xd94
 6645 12ee 20130000 		.4byte	0x1320
 6646 12f2 22       		.uleb128 0x22
 6647 12f3 01       		.uleb128 0x1
 6648 12f4 50       		.byte	0x50
 6649 12f5 05       		.uleb128 0x5
 6650 12f6 03       		.byte	0x3
 6651 12f7 00000000 		.4byte	prvIdleTask
 6652 12fb 22       		.uleb128 0x22
 6653 12fc 01       		.uleb128 0x1
 6654 12fd 51       		.byte	0x51
 6655 12fe 05       		.uleb128 0x5
 6656 12ff 03       		.byte	0x3
 6657 1300 00000000 		.4byte	.LC0
 6658 1304 22       		.uleb128 0x22
 6659 1305 01       		.uleb128 0x1
 6660 1306 52       		.byte	0x52
 6661 1307 02       		.uleb128 0x2
 6662 1308 08       		.byte	0x8
 6663 1309 80       		.byte	0x80
 6664 130a 22       		.uleb128 0x22
 6665 130b 01       		.uleb128 0x1
 6666 130c 53       		.byte	0x53
 6667 130d 01       		.uleb128 0x1
 6668 130e 30       		.byte	0x30
 6669 130f 22       		.uleb128 0x22
 6670 1310 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 217


 6671 1311 7D       		.byte	0x7d
 6672 1312 00       		.sleb128 0
 6673 1313 01       		.uleb128 0x1
 6674 1314 30       		.byte	0x30
 6675 1315 22       		.uleb128 0x22
 6676 1316 02       		.uleb128 0x2
 6677 1317 7D       		.byte	0x7d
 6678 1318 04       		.sleb128 4
 6679 1319 05       		.uleb128 0x5
 6680 131a 03       		.byte	0x3
 6681 131b 20020000 		.4byte	.LANCHOR0+544
 6682 131f 00       		.byte	0
 6683 1320 20       		.uleb128 0x20
 6684 1321 1E000000 		.4byte	.LVL127
 6685 1325 74240000 		.4byte	0x2474
 6686 1329 20       		.uleb128 0x20
 6687 132a 3C000000 		.4byte	.LVL128
 6688 132e 80240000 		.4byte	0x2480
 6689 1332 00       		.byte	0
 6690 1333 29       		.uleb128 0x29
 6691 1334 E40C0000 		.4byte	.LASF283
 6692 1338 01       		.byte	0x1
 6693 1339 8D07     		.2byte	0x78d
 6694 133b 00000000 		.4byte	.LFB541
 6695 133f 18000000 		.4byte	.LFE541-.LFB541
 6696 1343 01       		.uleb128 0x1
 6697 1344 9C       		.byte	0x9c
 6698 1345 53130000 		.4byte	0x1353
 6699 1349 20       		.uleb128 0x20
 6700 134a 10000000 		.4byte	.LVL131
 6701 134e 8B240000 		.4byte	0x248b
 6702 1352 00       		.byte	0
 6703 1353 2F       		.uleb128 0x2f
 6704 1354 FB0A0000 		.4byte	.LASF325
 6705 1358 01       		.byte	0x1
 6706 1359 9807     		.2byte	0x798
 6707 135b 00000000 		.4byte	.LFB542
 6708 135f 14000000 		.4byte	.LFE542-.LFB542
 6709 1363 01       		.uleb128 0x1
 6710 1364 9C       		.byte	0x9c
 6711 1365 27       		.uleb128 0x27
 6712 1366 8F140000 		.4byte	.LASF284
 6713 136a 01       		.byte	0x1
 6714 136b 4F08     		.2byte	0x84f
 6715 136d 60070000 		.4byte	0x760
 6716 1371 00000000 		.4byte	.LFB544
 6717 1375 0C000000 		.4byte	.LFE544-.LFB544
 6718 1379 01       		.uleb128 0x1
 6719 137a 9C       		.byte	0x9c
 6720 137b 8E130000 		.4byte	0x138e
 6721 137f 24       		.uleb128 0x24
 6722 1380 F21C0000 		.4byte	.LASF285
 6723 1384 01       		.byte	0x1
 6724 1385 5108     		.2byte	0x851
 6725 1387 60070000 		.4byte	0x760
 6726 138b 01       		.uleb128 0x1
 6727 138c 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 218


 6728 138d 00       		.byte	0
 6729 138e 27       		.uleb128 0x27
 6730 138f 96090000 		.4byte	.LASF286
 6731 1393 01       		.byte	0x1
 6732 1394 5E08     		.2byte	0x85e
 6733 1396 60070000 		.4byte	0x760
 6734 139a 00000000 		.4byte	.LFB545
 6735 139e 14000000 		.4byte	.LFE545-.LFB545
 6736 13a2 01       		.uleb128 0x1
 6737 13a3 9C       		.byte	0x9c
 6738 13a4 CD130000 		.4byte	0x13cd
 6739 13a8 24       		.uleb128 0x24
 6740 13a9 571C0000 		.4byte	.LASF245
 6741 13ad 01       		.byte	0x1
 6742 13ae 6008     		.2byte	0x860
 6743 13b0 60070000 		.4byte	0x760
 6744 13b4 01       		.uleb128 0x1
 6745 13b5 50       		.byte	0x50
 6746 13b6 30       		.uleb128 0x30
 6747 13b7 7E220000 		.4byte	.LASF281
 6748 13bb 01       		.byte	0x1
 6749 13bc 6108     		.2byte	0x861
 6750 13be 55070000 		.4byte	0x755
 6751 13c2 00       		.byte	0
 6752 13c3 20       		.uleb128 0x20
 6753 13c4 06000000 		.4byte	.LVL133
 6754 13c8 69240000 		.4byte	0x2469
 6755 13cc 00       		.byte	0
 6756 13cd 31       		.uleb128 0x31
 6757 13ce 43020000 		.4byte	.LASF404
 6758 13d2 01       		.byte	0x1
 6759 13d3 7D08     		.2byte	0x87d
 6760 13d5 55070000 		.4byte	0x755
 6761 13d9 00000000 		.4byte	.LFB546
 6762 13dd 0C000000 		.4byte	.LFE546-.LFB546
 6763 13e1 01       		.uleb128 0x1
 6764 13e2 9C       		.byte	0x9c
 6765 13e3 27       		.uleb128 0x27
 6766 13e4 BF1C0000 		.4byte	.LASF287
 6767 13e8 01       		.byte	0x1
 6768 13e9 8508     		.2byte	0x885
 6769 13eb B2000000 		.4byte	0xb2
 6770 13ef 00000000 		.4byte	.LFB547
 6771 13f3 1C000000 		.4byte	.LFE547-.LFB547
 6772 13f7 01       		.uleb128 0x1
 6773 13f8 9C       		.byte	0x9c
 6774 13f9 1C140000 		.4byte	0x141c
 6775 13fd 1D       		.uleb128 0x1d
 6776 13fe B3160000 		.4byte	.LASF288
 6777 1402 01       		.byte	0x1
 6778 1403 8508     		.2byte	0x885
 6779 1405 53080000 		.4byte	0x853
 6780 1409 48060000 		.4byte	.LLST45
 6781 140d 24       		.uleb128 0x24
 6782 140e 10210000 		.4byte	.LASF246
 6783 1412 01       		.byte	0x1
 6784 1413 8708     		.2byte	0x887
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 219


 6785 1415 870A0000 		.4byte	0xa87
 6786 1419 01       		.uleb128 0x1
 6787 141a 53       		.byte	0x53
 6788 141b 00       		.byte	0
 6789 141c 27       		.uleb128 0x27
 6790 141d 8D040000 		.4byte	.LASF289
 6791 1421 01       		.byte	0x1
 6792 1422 C309     		.2byte	0x9c3
 6793 1424 4A070000 		.4byte	0x74a
 6794 1428 00000000 		.4byte	.LFB548
 6795 142c F0000000 		.4byte	.LFE548-.LFB548
 6796 1430 01       		.uleb128 0x1
 6797 1431 9C       		.byte	0x9c
 6798 1432 DC140000 		.4byte	0x14dc
 6799 1436 1E       		.uleb128 0x1e
 6800 1437 10210000 		.4byte	.LASF246
 6801 143b 01       		.byte	0x1
 6802 143c C509     		.2byte	0x9c5
 6803 143e 870A0000 		.4byte	0xa87
 6804 1442 5B060000 		.4byte	.LLST46
 6805 1446 1E       		.uleb128 0x1e
 6806 1447 74190000 		.4byte	.LASF202
 6807 144b 01       		.byte	0x1
 6808 144c C609     		.2byte	0x9c6
 6809 144e 60070000 		.4byte	0x760
 6810 1452 79060000 		.4byte	.LLST47
 6811 1456 1E       		.uleb128 0x1e
 6812 1457 021A0000 		.4byte	.LASF290
 6813 145b 01       		.byte	0x1
 6814 145c C709     		.2byte	0x9c7
 6815 145e 4A070000 		.4byte	0x74a
 6816 1462 8C060000 		.4byte	.LLST48
 6817 1466 32       		.uleb128 0x32
 6818 1467 00000000 		.4byte	.Ldebug_ranges0+0
 6819 146b 1E       		.uleb128 0x1e
 6820 146c 2F070000 		.4byte	.LASF264
 6821 1470 01       		.byte	0x1
 6822 1471 D109     		.2byte	0x9d1
 6823 1473 8F0D0000 		.4byte	0xd8f
 6824 1477 E4060000 		.4byte	.LLST49
 6825 147b 28       		.uleb128 0x28
 6826 147c 1C000000 		.4byte	.LBB28
 6827 1480 26000000 		.4byte	.LBE28-.LBB28
 6828 1484 A2140000 		.4byte	0x14a2
 6829 1488 1E       		.uleb128 0x1e
 6830 1489 930A0000 		.4byte	.LASF291
 6831 148d 01       		.byte	0x1
 6832 148e D909     		.2byte	0x9d9
 6833 1490 DC140000 		.4byte	0x14dc
 6834 1494 F7060000 		.4byte	.LLST50
 6835 1498 20       		.uleb128 0x20
 6836 1499 42000000 		.4byte	.LVL142
 6837 149d 600A0000 		.4byte	0xa60
 6838 14a1 00       		.byte	0
 6839 14a2 26       		.uleb128 0x26
 6840 14a3 8C000000 		.4byte	.LVL149
 6841 14a7 46240000 		.4byte	0x2446
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 220


 6842 14ab B6140000 		.4byte	0x14b6
 6843 14af 22       		.uleb128 0x22
 6844 14b0 01       		.uleb128 0x1
 6845 14b1 50       		.byte	0x50
 6846 14b2 02       		.uleb128 0x2
 6847 14b3 78       		.byte	0x78
 6848 14b4 00       		.sleb128 0
 6849 14b5 00       		.byte	0
 6850 14b6 26       		.uleb128 0x26
 6851 14b7 98000000 		.4byte	.LVL150
 6852 14bb 46240000 		.4byte	0x2446
 6853 14bf CA140000 		.4byte	0x14ca
 6854 14c3 22       		.uleb128 0x22
 6855 14c4 01       		.uleb128 0x1
 6856 14c5 50       		.byte	0x50
 6857 14c6 02       		.uleb128 0x2
 6858 14c7 75       		.byte	0x75
 6859 14c8 18       		.sleb128 24
 6860 14c9 00       		.byte	0
 6861 14ca 21       		.uleb128 0x21
 6862 14cb BE000000 		.4byte	.LVL151
 6863 14cf 2F240000 		.4byte	0x242f
 6864 14d3 22       		.uleb128 0x22
 6865 14d4 01       		.uleb128 0x1
 6866 14d5 51       		.byte	0x51
 6867 14d6 02       		.uleb128 0x2
 6868 14d7 78       		.byte	0x78
 6869 14d8 00       		.sleb128 0
 6870 14d9 00       		.byte	0
 6871 14da 00       		.byte	0
 6872 14db 00       		.byte	0
 6873 14dc 06       		.uleb128 0x6
 6874 14dd 04       		.byte	0x4
 6875 14de 48080000 		.4byte	0x848
 6876 14e2 27       		.uleb128 0x27
 6877 14e3 50180000 		.4byte	.LASF292
 6878 14e7 01       		.byte	0x1
 6879 14e8 E107     		.2byte	0x7e1
 6880 14ea 4A070000 		.4byte	0x74a
 6881 14ee 00000000 		.4byte	.LFB543
 6882 14f2 E4000000 		.4byte	.LFE543-.LFB543
 6883 14f6 01       		.uleb128 0x1
 6884 14f7 9C       		.byte	0x9c
 6885 14f8 9B150000 		.4byte	0x159b
 6886 14fc 1E       		.uleb128 0x1e
 6887 14fd 10210000 		.4byte	.LASF246
 6888 1501 01       		.byte	0x1
 6889 1502 E307     		.2byte	0x7e3
 6890 1504 870A0000 		.4byte	0xa87
 6891 1508 19070000 		.4byte	.LLST51
 6892 150c 1E       		.uleb128 0x1e
 6893 150d EE1E0000 		.4byte	.LASF293
 6894 1511 01       		.byte	0x1
 6895 1512 E407     		.2byte	0x7e4
 6896 1514 4A070000 		.4byte	0x74a
 6897 1518 5B070000 		.4byte	.LLST52
 6898 151c 28       		.uleb128 0x28
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 221


 6899 151d 8E000000 		.4byte	.LBB30
 6900 1521 22000000 		.4byte	.LBE30-.LBB30
 6901 1525 43150000 		.4byte	0x1543
 6902 1529 1E       		.uleb128 0x1e
 6903 152a C1010000 		.4byte	.LASF294
 6904 152e 01       		.byte	0x1
 6905 152f 1C08     		.2byte	0x81c
 6906 1531 55070000 		.4byte	0x755
 6907 1535 9D070000 		.4byte	.LLST53
 6908 1539 20       		.uleb128 0x20
 6909 153a 9A000000 		.4byte	.LVL167
 6910 153e 1C140000 		.4byte	0x141c
 6911 1542 00       		.byte	0
 6912 1543 20       		.uleb128 0x20
 6913 1544 12000000 		.4byte	.LVL157
 6914 1548 24240000 		.4byte	0x2424
 6915 154c 26       		.uleb128 0x26
 6916 154d 40000000 		.4byte	.LVL160
 6917 1551 46240000 		.4byte	0x2446
 6918 1555 60150000 		.4byte	0x1560
 6919 1559 22       		.uleb128 0x22
 6920 155a 01       		.uleb128 0x1
 6921 155b 50       		.byte	0x50
 6922 155c 02       		.uleb128 0x2
 6923 155d 74       		.byte	0x74
 6924 155e 18       		.sleb128 24
 6925 155f 00       		.byte	0
 6926 1560 26       		.uleb128 0x26
 6927 1561 48000000 		.4byte	.LVL161
 6928 1565 46240000 		.4byte	0x2446
 6929 1569 74150000 		.4byte	0x1574
 6930 156d 22       		.uleb128 0x22
 6931 156e 01       		.uleb128 0x1
 6932 156f 50       		.byte	0x50
 6933 1570 02       		.uleb128 0x2
 6934 1571 76       		.byte	0x76
 6935 1572 00       		.sleb128 0
 6936 1573 00       		.byte	0
 6937 1574 26       		.uleb128 0x26
 6938 1575 6A000000 		.4byte	.LVL162
 6939 1579 2F240000 		.4byte	0x242f
 6940 157d 88150000 		.4byte	0x1588
 6941 1581 22       		.uleb128 0x22
 6942 1582 01       		.uleb128 0x1
 6943 1583 51       		.byte	0x51
 6944 1584 02       		.uleb128 0x2
 6945 1585 76       		.byte	0x76
 6946 1586 00       		.sleb128 0
 6947 1587 00       		.byte	0
 6948 1588 20       		.uleb128 0x20
 6949 1589 8E000000 		.4byte	.LVL165
 6950 158d 600A0000 		.4byte	0xa60
 6951 1591 20       		.uleb128 0x20
 6952 1592 D6000000 		.4byte	.LVL175
 6953 1596 3B240000 		.4byte	0x243b
 6954 159a 00       		.byte	0
 6955 159b 29       		.uleb128 0x29
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 222


 6956 159c 3D1E0000 		.4byte	.LASF295
 6957 15a0 01       		.byte	0x1
 6958 15a1 7404     		.2byte	0x474
 6959 15a3 00000000 		.4byte	.LFB531
 6960 15a7 84000000 		.4byte	.LFE531-.LFB531
 6961 15ab 01       		.uleb128 0x1
 6962 15ac 9C       		.byte	0x9c
 6963 15ad 3B160000 		.4byte	0x163b
 6964 15b1 1D       		.uleb128 0x1d
 6965 15b2 471B0000 		.4byte	.LASF296
 6966 15b6 01       		.byte	0x1
 6967 15b7 7404     		.2byte	0x474
 6968 15b9 41160000 		.4byte	0x1641
 6969 15bd D3070000 		.4byte	.LLST54
 6970 15c1 1D       		.uleb128 0x1d
 6971 15c2 7E200000 		.4byte	.LASF297
 6972 15c6 01       		.byte	0x1
 6973 15c7 7404     		.2byte	0x474
 6974 15c9 8F0D0000 		.4byte	0xd8f
 6975 15cd FF070000 		.4byte	.LLST55
 6976 15d1 1E       		.uleb128 0x1e
 6977 15d2 AC200000 		.4byte	.LASF263
 6978 15d6 01       		.byte	0x1
 6979 15d7 7604     		.2byte	0x476
 6980 15d9 60070000 		.4byte	0x760
 6981 15dd 2B080000 		.4byte	.LLST56
 6982 15e1 24       		.uleb128 0x24
 6983 15e2 EE1E0000 		.4byte	.LASF293
 6984 15e6 01       		.byte	0x1
 6985 15e7 7704     		.2byte	0x477
 6986 15e9 4A070000 		.4byte	0x74a
 6987 15ed 01       		.uleb128 0x1
 6988 15ee 50       		.byte	0x50
 6989 15ef 1E       		.uleb128 0x1e
 6990 15f0 06100000 		.4byte	.LASF298
 6991 15f4 01       		.byte	0x1
 6992 15f5 7704     		.2byte	0x477
 6993 15f7 4A070000 		.4byte	0x74a
 6994 15fb 3E080000 		.4byte	.LLST57
 6995 15ff 33       		.uleb128 0x33
 6996 1600 18000000 		.4byte	.Ldebug_ranges0+0x18
 6997 1604 28160000 		.4byte	0x1628
 6998 1608 1E       		.uleb128 0x1e
 6999 1609 2F070000 		.4byte	.LASF264
 7000 160d 01       		.byte	0x1
 7001 160e 8104     		.2byte	0x481
 7002 1610 8F0D0000 		.4byte	0xd8f
 7003 1614 5D080000 		.4byte	.LLST58
 7004 1618 21       		.uleb128 0x21
 7005 1619 62000000 		.4byte	.LVL183
 7006 161d 010D0000 		.4byte	0xd01
 7007 1621 22       		.uleb128 0x22
 7008 1622 01       		.uleb128 0x1
 7009 1623 51       		.byte	0x51
 7010 1624 01       		.uleb128 0x1
 7011 1625 30       		.byte	0x30
 7012 1626 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 223


 7013 1627 00       		.byte	0
 7014 1628 20       		.uleb128 0x20
 7015 1629 22000000 		.4byte	.LVL178
 7016 162d 53130000 		.4byte	0x1353
 7017 1631 20       		.uleb128 0x20
 7018 1632 66000000 		.4byte	.LVL184
 7019 1636 E2140000 		.4byte	0x14e2
 7020 163a 00       		.byte	0
 7021 163b 06       		.uleb128 0x6
 7022 163c 04       		.byte	0x4
 7023 163d 60070000 		.4byte	0x760
 7024 1641 07       		.uleb128 0x7
 7025 1642 3B160000 		.4byte	0x163b
 7026 1646 29       		.uleb128 0x29
 7027 1647 370E0000 		.4byte	.LASF299
 7028 164b 01       		.byte	0x1
 7029 164c C804     		.2byte	0x4c8
 7030 164e 00000000 		.4byte	.LFB532
 7031 1652 44000000 		.4byte	.LFE532-.LFB532
 7032 1656 01       		.uleb128 0x1
 7033 1657 9C       		.byte	0x9c
 7034 1658 A8160000 		.4byte	0x16a8
 7035 165c 1D       		.uleb128 0x1d
 7036 165d 451D0000 		.4byte	.LASF300
 7037 1661 01       		.byte	0x1
 7038 1662 C804     		.2byte	0x4c8
 7039 1664 8F0D0000 		.4byte	0xd8f
 7040 1668 70080000 		.4byte	.LLST59
 7041 166c 1E       		.uleb128 0x1e
 7042 166d EE1E0000 		.4byte	.LASF293
 7043 1671 01       		.byte	0x1
 7044 1672 CA04     		.2byte	0x4ca
 7045 1674 4A070000 		.4byte	0x74a
 7046 1678 A7080000 		.4byte	.LLST60
 7047 167c 20       		.uleb128 0x20
 7048 167d 16000000 		.4byte	.LVL188
 7049 1681 53130000 		.4byte	0x1353
 7050 1685 26       		.uleb128 0x26
 7051 1686 1E000000 		.4byte	.LVL189
 7052 168a 010D0000 		.4byte	0xd01
 7053 168e 9E160000 		.4byte	0x169e
 7054 1692 22       		.uleb128 0x22
 7055 1693 01       		.uleb128 0x1
 7056 1694 50       		.byte	0x50
 7057 1695 02       		.uleb128 0x2
 7058 1696 74       		.byte	0x74
 7059 1697 00       		.sleb128 0
 7060 1698 22       		.uleb128 0x22
 7061 1699 01       		.uleb128 0x1
 7062 169a 51       		.byte	0x51
 7063 169b 01       		.uleb128 0x1
 7064 169c 30       		.byte	0x30
 7065 169d 00       		.byte	0
 7066 169e 20       		.uleb128 0x20
 7067 169f 22000000 		.4byte	.LVL190
 7068 16a3 E2140000 		.4byte	0x14e2
 7069 16a7 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 224


 7070 16a8 1F       		.uleb128 0x1f
 7071 16a9 5E220000 		.4byte	.LASF301
 7072 16ad 01       		.byte	0x1
 7073 16ae 300D     		.2byte	0xd30
 7074 16b0 00000000 		.4byte	.LFB562
 7075 16b4 54000000 		.4byte	.LFE562-.LFB562
 7076 16b8 01       		.uleb128 0x1
 7077 16b9 9C       		.byte	0x9c
 7078 16ba 3F170000 		.4byte	0x173f
 7079 16be 2C       		.uleb128 0x2c
 7080 16bf 02000000 		.4byte	.LBB34
 7081 16c3 4C000000 		.4byte	.LBE34-.LBB34
 7082 16c7 1E       		.uleb128 0x1e
 7083 16c8 6A100000 		.4byte	.LASF302
 7084 16cc 01       		.byte	0x1
 7085 16cd 370D     		.2byte	0xd37
 7086 16cf 4A070000 		.4byte	0x74a
 7087 16d3 DD080000 		.4byte	.LLST61
 7088 16d7 28       		.uleb128 0x28
 7089 16d8 14000000 		.4byte	.LBB35
 7090 16dc 30000000 		.4byte	.LBE35-.LBB35
 7091 16e0 2B170000 		.4byte	0x172b
 7092 16e4 1E       		.uleb128 0x1e
 7093 16e5 10210000 		.4byte	.LASF246
 7094 16e9 01       		.byte	0x1
 7095 16ea 450D     		.2byte	0xd45
 7096 16ec 870A0000 		.4byte	0xa87
 7097 16f0 F7080000 		.4byte	.LLST62
 7098 16f4 20       		.uleb128 0x20
 7099 16f5 18000000 		.4byte	.LVL196
 7100 16f9 24240000 		.4byte	0x2424
 7101 16fd 26       		.uleb128 0x26
 7102 16fe 26000000 		.4byte	.LVL199
 7103 1702 46240000 		.4byte	0x2446
 7104 1706 11170000 		.4byte	0x1711
 7105 170a 22       		.uleb128 0x22
 7106 170b 01       		.uleb128 0x1
 7107 170c 50       		.byte	0x50
 7108 170d 02       		.uleb128 0x2
 7109 170e 75       		.byte	0x75
 7110 170f 04       		.sleb128 4
 7111 1710 00       		.byte	0
 7112 1711 20       		.uleb128 0x20
 7113 1712 3E000000 		.4byte	.LVL200
 7114 1716 3B240000 		.4byte	0x243b
 7115 171a 21       		.uleb128 0x21
 7116 171b 44000000 		.4byte	.LVL201
 7117 171f 8D0A0000 		.4byte	0xa8d
 7118 1723 22       		.uleb128 0x22
 7119 1724 01       		.uleb128 0x1
 7120 1725 50       		.byte	0x50
 7121 1726 02       		.uleb128 0x2
 7122 1727 75       		.byte	0x75
 7123 1728 00       		.sleb128 0
 7124 1729 00       		.byte	0
 7125 172a 00       		.byte	0
 7126 172b 20       		.uleb128 0x20
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 225


 7127 172c 08000000 		.4byte	.LVL193
 7128 1730 53130000 		.4byte	0x1353
 7129 1734 20       		.uleb128 0x20
 7130 1735 12000000 		.4byte	.LVL195
 7131 1739 E2140000 		.4byte	0x14e2
 7132 173d 00       		.byte	0
 7133 173e 00       		.byte	0
 7134 173f 34       		.uleb128 0x34
 7135 1740 33100000 		.4byte	.LASF304
 7136 1744 01       		.byte	0x1
 7137 1745 460C     		.2byte	0xc46
 7138 1747 00000000 		.4byte	.LFB558
 7139 174b 2C000000 		.4byte	.LFE558-.LFB558
 7140 174f 01       		.uleb128 0x1
 7141 1750 9C       		.byte	0x9c
 7142 1751 8E170000 		.4byte	0x178e
 7143 1755 1D       		.uleb128 0x1d
 7144 1756 67190000 		.4byte	.LASF254
 7145 175a 01       		.byte	0x1
 7146 175b 460C     		.2byte	0xc46
 7147 175d B0000000 		.4byte	0xb0
 7148 1761 0A090000 		.4byte	.LLST63
 7149 1765 28       		.uleb128 0x28
 7150 1766 1E000000 		.4byte	.LBB36
 7151 176a 04000000 		.4byte	.LBE36-.LBB36
 7152 176e 84170000 		.4byte	0x1784
 7153 1772 35       		.uleb128 0x35
 7154 1773 9A050000 		.4byte	.LASF396
 7155 1777 01       		.byte	0x1
 7156 1778 760C     		.2byte	0xc76
 7157 177a 20       		.uleb128 0x20
 7158 177b 22000000 		.4byte	.LVL205
 7159 177f 96240000 		.4byte	0x2496
 7160 1783 00       		.byte	0
 7161 1784 20       		.uleb128 0x20
 7162 1785 06000000 		.4byte	.LVL204
 7163 1789 A8160000 		.4byte	0x16a8
 7164 178d 00       		.byte	0
 7165 178e 29       		.uleb128 0x29
 7166 178f 55170000 		.4byte	.LASF305
 7167 1793 01       		.byte	0x1
 7168 1794 C90A     		.2byte	0xac9
 7169 1796 00000000 		.4byte	.LFB549
 7170 179a BC000000 		.4byte	.LFE549-.LFB549
 7171 179e 01       		.uleb128 0x1
 7172 179f 9C       		.byte	0x9c
 7173 17a0 17180000 		.4byte	0x1817
 7174 17a4 28       		.uleb128 0x28
 7175 17a5 1C000000 		.4byte	.LBB37
 7176 17a9 36000000 		.4byte	.LBE37-.LBB37
 7177 17ad DC170000 		.4byte	0x17dc
 7178 17b1 1E       		.uleb128 0x1e
 7179 17b2 231D0000 		.4byte	.LASF306
 7180 17b6 01       		.byte	0x1
 7181 17b7 F30A     		.2byte	0xaf3
 7182 17b9 1D180000 		.4byte	0x181d
 7183 17bd 2B090000 		.4byte	.LLST64
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 226


 7184 17c1 36       		.uleb128 0x36
 7185 17c2 A4130000 		.4byte	.LASF307
 7186 17c6 01       		.byte	0x1
 7187 17c7 F40A     		.2byte	0xaf4
 7188 17c9 DD0B0000 		.4byte	0xbdd
 7189 17cd A5CB96AD 		.sleb128 -1515870811
 7189      7A
 7190 17d2 20       		.uleb128 0x20
 7191 17d3 52000000 		.4byte	.LVL208
 7192 17d7 A2240000 		.4byte	0x24a2
 7193 17db 00       		.byte	0
 7194 17dc 2C       		.uleb128 0x2c
 7195 17dd 52000000 		.4byte	.LBB38
 7196 17e1 6A000000 		.4byte	.LBE38-.LBB38
 7197 17e5 24       		.uleb128 0x24
 7198 17e6 FD1D0000 		.4byte	.LASF308
 7199 17ea 01       		.byte	0x1
 7200 17eb 010B     		.2byte	0xb01
 7201 17ed 55070000 		.4byte	0x755
 7202 17f1 01       		.uleb128 0x1
 7203 17f2 53       		.byte	0x53
 7204 17f3 2C       		.uleb128 0x2c
 7205 17f4 72000000 		.4byte	.LBB39
 7206 17f8 3E000000 		.4byte	.LBE39-.LBB39
 7207 17fc 24       		.uleb128 0x24
 7208 17fd 82010000 		.4byte	.LASF309
 7209 1801 01       		.byte	0x1
 7210 1802 010B     		.2byte	0xb01
 7211 1804 22180000 		.4byte	0x1822
 7212 1808 0B       		.uleb128 0xb
 7213 1809 73       		.byte	0x73
 7214 180a 00       		.sleb128 0
 7215 180b 44       		.byte	0x44
 7216 180c 1E       		.byte	0x1e
 7217 180d 03       		.byte	0x3
 7218 180e 30000000 		.4byte	pxReadyTasksLists
 7219 1812 22       		.byte	0x22
 7220 1813 9F       		.byte	0x9f
 7221 1814 00       		.byte	0
 7222 1815 00       		.byte	0
 7223 1816 00       		.byte	0
 7224 1817 06       		.uleb128 0x6
 7225 1818 04       		.byte	0x4
 7226 1819 DD0B0000 		.4byte	0xbdd
 7227 181d 07       		.uleb128 0x7
 7228 181e 17180000 		.4byte	0x1817
 7229 1822 07       		.uleb128 0x7
 7230 1823 DC140000 		.4byte	0x14dc
 7231 1827 29       		.uleb128 0x29
 7232 1828 E11E0000 		.4byte	.LASF310
 7233 182c 01       		.byte	0x1
 7234 182d 1E06     		.2byte	0x61e
 7235 182f 00000000 		.4byte	.LFB536
 7236 1833 98000000 		.4byte	.LFE536-.LFB536
 7237 1837 01       		.uleb128 0x1
 7238 1838 9C       		.byte	0x9c
 7239 1839 D6180000 		.4byte	0x18d6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 227


 7240 183d 1D       		.uleb128 0x1d
 7241 183e 691A0000 		.4byte	.LASF311
 7242 1842 01       		.byte	0x1
 7243 1843 1E06     		.2byte	0x61e
 7244 1845 53080000 		.4byte	0x853
 7245 1849 3E090000 		.4byte	.LLST65
 7246 184d 1E       		.uleb128 0x1e
 7247 184e 10210000 		.4byte	.LASF246
 7248 1852 01       		.byte	0x1
 7249 1853 2006     		.2byte	0x620
 7250 1855 870A0000 		.4byte	0xa87
 7251 1859 5C090000 		.4byte	.LLST66
 7252 185d 20       		.uleb128 0x20
 7253 185e 08000000 		.4byte	.LVL213
 7254 1862 24240000 		.4byte	0x2424
 7255 1866 26       		.uleb128 0x26
 7256 1867 18000000 		.4byte	.LVL215
 7257 186b 46240000 		.4byte	0x2446
 7258 186f 7A180000 		.4byte	0x187a
 7259 1873 22       		.uleb128 0x22
 7260 1874 01       		.uleb128 0x1
 7261 1875 50       		.byte	0x50
 7262 1876 02       		.uleb128 0x2
 7263 1877 76       		.byte	0x76
 7264 1878 00       		.sleb128 0
 7265 1879 00       		.byte	0
 7266 187a 26       		.uleb128 0x26
 7267 187b 24000000 		.4byte	.LVL216
 7268 187f 46240000 		.4byte	0x2446
 7269 1883 8E180000 		.4byte	0x188e
 7270 1887 22       		.uleb128 0x22
 7271 1888 01       		.uleb128 0x1
 7272 1889 50       		.byte	0x50
 7273 188a 02       		.uleb128 0x2
 7274 188b 74       		.byte	0x74
 7275 188c 18       		.sleb128 24
 7276 188d 00       		.byte	0
 7277 188e 26       		.uleb128 0x26
 7278 188f 2E000000 		.4byte	.LVL217
 7279 1893 2F240000 		.4byte	0x242f
 7280 1897 A8180000 		.4byte	0x18a8
 7281 189b 22       		.uleb128 0x22
 7282 189c 01       		.uleb128 0x1
 7283 189d 50       		.byte	0x50
 7284 189e 02       		.uleb128 0x2
 7285 189f 75       		.byte	0x75
 7286 18a0 00       		.sleb128 0
 7287 18a1 22       		.uleb128 0x22
 7288 18a2 01       		.uleb128 0x1
 7289 18a3 51       		.byte	0x51
 7290 18a4 02       		.uleb128 0x2
 7291 18a5 76       		.byte	0x76
 7292 18a6 00       		.sleb128 0
 7293 18a7 00       		.byte	0
 7294 18a8 20       		.uleb128 0x20
 7295 18a9 32000000 		.4byte	.LVL218
 7296 18ad 3B240000 		.4byte	0x243b
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 228


 7297 18b1 20       		.uleb128 0x20
 7298 18b2 3C000000 		.4byte	.LVL219
 7299 18b6 24240000 		.4byte	0x2424
 7300 18ba 20       		.uleb128 0x20
 7301 18bb 40000000 		.4byte	.LVL220
 7302 18bf 600A0000 		.4byte	0xa60
 7303 18c3 20       		.uleb128 0x20
 7304 18c4 44000000 		.4byte	.LVL221
 7305 18c8 3B240000 		.4byte	0x243b
 7306 18cc 20       		.uleb128 0x20
 7307 18cd 8E000000 		.4byte	.LVL224
 7308 18d1 8E170000 		.4byte	0x178e
 7309 18d5 00       		.byte	0
 7310 18d6 29       		.uleb128 0x29
 7311 18d7 210E0000 		.4byte	.LASF312
 7312 18db 01       		.byte	0x1
 7313 18dc 0F0B     		.2byte	0xb0f
 7314 18de 00000000 		.4byte	.LFB550
 7315 18e2 24000000 		.4byte	.LFE550-.LFB550
 7316 18e6 01       		.uleb128 0x1
 7317 18e7 9C       		.byte	0x9c
 7318 18e8 2B190000 		.4byte	0x192b
 7319 18ec 1D       		.uleb128 0x1d
 7320 18ed C6020000 		.4byte	.LASF313
 7321 18f1 01       		.byte	0x1
 7322 18f2 0F0B     		.2byte	0xb0f
 7323 18f4 22180000 		.4byte	0x1822
 7324 18f8 6F090000 		.4byte	.LLST67
 7325 18fc 1D       		.uleb128 0x1d
 7326 18fd C11E0000 		.4byte	.LASF261
 7327 1901 01       		.byte	0x1
 7328 1902 0F0B     		.2byte	0xb0f
 7329 1904 8F0D0000 		.4byte	0xd8f
 7330 1908 90090000 		.4byte	.LLST68
 7331 190c 20       		.uleb128 0x20
 7332 190d 16000000 		.4byte	.LVL228
 7333 1911 52240000 		.4byte	0x2452
 7334 1915 21       		.uleb128 0x21
 7335 1916 1E000000 		.4byte	.LVL229
 7336 191a 010D0000 		.4byte	0xd01
 7337 191e 22       		.uleb128 0x22
 7338 191f 01       		.uleb128 0x1
 7339 1920 50       		.byte	0x50
 7340 1921 02       		.uleb128 0x2
 7341 1922 74       		.byte	0x74
 7342 1923 00       		.sleb128 0
 7343 1924 22       		.uleb128 0x22
 7344 1925 01       		.uleb128 0x1
 7345 1926 51       		.byte	0x51
 7346 1927 01       		.uleb128 0x1
 7347 1928 31       		.byte	0x31
 7348 1929 00       		.byte	0
 7349 192a 00       		.byte	0
 7350 192b 29       		.uleb128 0x29
 7351 192c 5E1D0000 		.4byte	.LASF314
 7352 1930 01       		.byte	0x1
 7353 1931 200B     		.2byte	0xb20
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 229


 7354 1933 00000000 		.4byte	.LFB551
 7355 1937 40000000 		.4byte	.LFE551-.LFB551
 7356 193b 01       		.uleb128 0x1
 7357 193c 9C       		.byte	0x9c
 7358 193d 9C190000 		.4byte	0x199c
 7359 1941 1D       		.uleb128 0x1d
 7360 1942 C6020000 		.4byte	.LASF313
 7361 1946 01       		.byte	0x1
 7362 1947 200B     		.2byte	0xb20
 7363 1949 DC140000 		.4byte	0x14dc
 7364 194d BC090000 		.4byte	.LLST69
 7365 1951 1D       		.uleb128 0x1d
 7366 1952 74190000 		.4byte	.LASF202
 7367 1956 01       		.byte	0x1
 7368 1957 200B     		.2byte	0xb20
 7369 1959 8F0D0000 		.4byte	0xd8f
 7370 195d F3090000 		.4byte	.LLST70
 7371 1961 1D       		.uleb128 0x1d
 7372 1962 C11E0000 		.4byte	.LASF261
 7373 1966 01       		.byte	0x1
 7374 1967 200B     		.2byte	0xb20
 7375 1969 8F0D0000 		.4byte	0xd8f
 7376 196d 1F0A0000 		.4byte	.LLST71
 7377 1971 26       		.uleb128 0x26
 7378 1972 32000000 		.4byte	.LVL237
 7379 1976 2F240000 		.4byte	0x242f
 7380 197a 86190000 		.4byte	0x1986
 7381 197e 22       		.uleb128 0x22
 7382 197f 01       		.uleb128 0x1
 7383 1980 50       		.byte	0x50
 7384 1981 03       		.uleb128 0x3
 7385 1982 F3       		.byte	0xf3
 7386 1983 01       		.uleb128 0x1
 7387 1984 50       		.byte	0x50
 7388 1985 00       		.byte	0
 7389 1986 21       		.uleb128 0x21
 7390 1987 3A000000 		.4byte	.LVL238
 7391 198b 010D0000 		.4byte	0xd01
 7392 198f 22       		.uleb128 0x22
 7393 1990 01       		.uleb128 0x1
 7394 1991 50       		.byte	0x50
 7395 1992 02       		.uleb128 0x2
 7396 1993 74       		.byte	0x74
 7397 1994 00       		.sleb128 0
 7398 1995 22       		.uleb128 0x22
 7399 1996 01       		.uleb128 0x1
 7400 1997 51       		.byte	0x51
 7401 1998 01       		.uleb128 0x1
 7402 1999 31       		.byte	0x31
 7403 199a 00       		.byte	0
 7404 199b 00       		.byte	0
 7405 199c 29       		.uleb128 0x29
 7406 199d 18110000 		.4byte	.LASF315
 7407 19a1 01       		.byte	0x1
 7408 19a2 3A0B     		.2byte	0xb3a
 7409 19a4 00000000 		.4byte	.LFB552
 7410 19a8 2C000000 		.4byte	.LFE552-.LFB552
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 230


 7411 19ac 01       		.uleb128 0x1
 7412 19ad 9C       		.byte	0x9c
 7413 19ae 021A0000 		.4byte	0x1a02
 7414 19b2 1D       		.uleb128 0x1d
 7415 19b3 C6020000 		.4byte	.LASF313
 7416 19b7 01       		.byte	0x1
 7417 19b8 3A0B     		.2byte	0xb3a
 7418 19ba 22180000 		.4byte	0x1822
 7419 19be 4B0A0000 		.4byte	.LLST72
 7420 19c2 1D       		.uleb128 0x1d
 7421 19c3 C11E0000 		.4byte	.LASF261
 7422 19c7 01       		.byte	0x1
 7423 19c8 3A0B     		.2byte	0xb3a
 7424 19ca 60070000 		.4byte	0x760
 7425 19ce 6C0A0000 		.4byte	.LLST73
 7426 19d2 1D       		.uleb128 0x1d
 7427 19d3 440C0000 		.4byte	.LASF316
 7428 19d7 01       		.byte	0x1
 7429 19d8 3A0B     		.2byte	0xb3a
 7430 19da 8A0D0000 		.4byte	0xd8a
 7431 19de 8A0A0000 		.4byte	.LLST74
 7432 19e2 20       		.uleb128 0x20
 7433 19e3 18000000 		.4byte	.LVL243
 7434 19e7 2F240000 		.4byte	0x242f
 7435 19eb 21       		.uleb128 0x21
 7436 19ec 26000000 		.4byte	.LVL245
 7437 19f0 010D0000 		.4byte	0xd01
 7438 19f4 22       		.uleb128 0x22
 7439 19f5 01       		.uleb128 0x1
 7440 19f6 50       		.byte	0x50
 7441 19f7 02       		.uleb128 0x2
 7442 19f8 74       		.byte	0x74
 7443 19f9 00       		.sleb128 0
 7444 19fa 22       		.uleb128 0x22
 7445 19fb 01       		.uleb128 0x1
 7446 19fc 51       		.byte	0x51
 7447 19fd 02       		.uleb128 0x2
 7448 19fe 75       		.byte	0x75
 7449 19ff 00       		.sleb128 0
 7450 1a00 00       		.byte	0
 7451 1a01 00       		.byte	0
 7452 1a02 27       		.uleb128 0x27
 7453 1a03 6D0F0000 		.4byte	.LASF317
 7454 1a07 01       		.byte	0x1
 7455 1a08 590B     		.2byte	0xb59
 7456 1a0a 4A070000 		.4byte	0x74a
 7457 1a0e 00000000 		.4byte	.LFB553
 7458 1a12 7C000000 		.4byte	.LFE553-.LFB553
 7459 1a16 01       		.uleb128 0x1
 7460 1a17 9C       		.byte	0x9c
 7461 1a18 A21A0000 		.4byte	0x1aa2
 7462 1a1c 1D       		.uleb128 0x1d
 7463 1a1d C6020000 		.4byte	.LASF313
 7464 1a21 01       		.byte	0x1
 7465 1a22 590B     		.2byte	0xb59
 7466 1a24 AD1A0000 		.4byte	0x1aad
 7467 1a28 B60A0000 		.4byte	.LLST75
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 231


 7468 1a2c 1E       		.uleb128 0x1e
 7469 1a2d 93080000 		.4byte	.LASF318
 7470 1a31 01       		.byte	0x1
 7471 1a32 5B0B     		.2byte	0xb5b
 7472 1a34 870A0000 		.4byte	0xa87
 7473 1a38 D70A0000 		.4byte	.LLST76
 7474 1a3c 1E       		.uleb128 0x1e
 7475 1a3d 571C0000 		.4byte	.LASF245
 7476 1a41 01       		.byte	0x1
 7477 1a42 5C0B     		.2byte	0xb5c
 7478 1a44 4A070000 		.4byte	0x74a
 7479 1a48 EA0A0000 		.4byte	.LLST77
 7480 1a4c 26       		.uleb128 0x26
 7481 1a4d 16000000 		.4byte	.LVL250
 7482 1a51 46240000 		.4byte	0x2446
 7483 1a55 601A0000 		.4byte	0x1a60
 7484 1a59 22       		.uleb128 0x22
 7485 1a5a 01       		.uleb128 0x1
 7486 1a5b 50       		.byte	0x50
 7487 1a5c 02       		.uleb128 0x2
 7488 1a5d 75       		.byte	0x75
 7489 1a5e 00       		.sleb128 0
 7490 1a5f 00       		.byte	0
 7491 1a60 26       		.uleb128 0x26
 7492 1a61 26000000 		.4byte	.LVL251
 7493 1a65 46240000 		.4byte	0x2446
 7494 1a69 741A0000 		.4byte	0x1a74
 7495 1a6d 22       		.uleb128 0x22
 7496 1a6e 01       		.uleb128 0x1
 7497 1a6f 50       		.byte	0x50
 7498 1a70 02       		.uleb128 0x2
 7499 1a71 75       		.byte	0x75
 7500 1a72 00       		.sleb128 0
 7501 1a73 00       		.byte	0
 7502 1a74 26       		.uleb128 0x26
 7503 1a75 48000000 		.4byte	.LVL252
 7504 1a79 2F240000 		.4byte	0x242f
 7505 1a7d 881A0000 		.4byte	0x1a88
 7506 1a81 22       		.uleb128 0x22
 7507 1a82 01       		.uleb128 0x1
 7508 1a83 51       		.byte	0x51
 7509 1a84 02       		.uleb128 0x2
 7510 1a85 75       		.byte	0x75
 7511 1a86 00       		.sleb128 0
 7512 1a87 00       		.byte	0
 7513 1a88 21       		.uleb128 0x21
 7514 1a89 52000000 		.4byte	.LVL253
 7515 1a8d 2F240000 		.4byte	0x242f
 7516 1a91 22       		.uleb128 0x22
 7517 1a92 01       		.uleb128 0x1
 7518 1a93 50       		.byte	0x50
 7519 1a94 05       		.uleb128 0x5
 7520 1a95 03       		.byte	0x3
 7521 1a96 14000000 		.4byte	.LANCHOR0+20
 7522 1a9a 22       		.uleb128 0x22
 7523 1a9b 01       		.uleb128 0x1
 7524 1a9c 51       		.byte	0x51
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 232


 7525 1a9d 02       		.uleb128 0x2
 7526 1a9e 75       		.byte	0x75
 7527 1a9f 00       		.sleb128 0
 7528 1aa0 00       		.byte	0
 7529 1aa1 00       		.byte	0
 7530 1aa2 06       		.uleb128 0x6
 7531 1aa3 04       		.byte	0x4
 7532 1aa4 A81A0000 		.4byte	0x1aa8
 7533 1aa8 07       		.uleb128 0x7
 7534 1aa9 48080000 		.4byte	0x848
 7535 1aad 07       		.uleb128 0x7
 7536 1aae A21A0000 		.4byte	0x1aa2
 7537 1ab2 27       		.uleb128 0x27
 7538 1ab3 7D1D0000 		.4byte	.LASF319
 7539 1ab7 01       		.byte	0x1
 7540 1ab8 9D0B     		.2byte	0xb9d
 7541 1aba 4A070000 		.4byte	0x74a
 7542 1abe 00000000 		.4byte	.LFB554
 7543 1ac2 6C000000 		.4byte	.LFE554-.LFB554
 7544 1ac6 01       		.uleb128 0x1
 7545 1ac7 9C       		.byte	0x9c
 7546 1ac8 3A1B0000 		.4byte	0x1b3a
 7547 1acc 1D       		.uleb128 0x1d
 7548 1acd 19220000 		.4byte	.LASF320
 7549 1ad1 01       		.byte	0x1
 7550 1ad2 9D0B     		.2byte	0xb9d
 7551 1ad4 42080000 		.4byte	0x842
 7552 1ad8 090B0000 		.4byte	.LLST78
 7553 1adc 1D       		.uleb128 0x1d
 7554 1add 74190000 		.4byte	.LASF202
 7555 1ae1 01       		.byte	0x1
 7556 1ae2 9D0B     		.2byte	0xb9d
 7557 1ae4 8F0D0000 		.4byte	0xd8f
 7558 1ae8 2A0B0000 		.4byte	.LLST79
 7559 1aec 1E       		.uleb128 0x1e
 7560 1aed 93080000 		.4byte	.LASF318
 7561 1af1 01       		.byte	0x1
 7562 1af2 9F0B     		.2byte	0xb9f
 7563 1af4 870A0000 		.4byte	0xa87
 7564 1af8 4B0B0000 		.4byte	.LLST80
 7565 1afc 1E       		.uleb128 0x1e
 7566 1afd 571C0000 		.4byte	.LASF245
 7567 1b01 01       		.byte	0x1
 7568 1b02 A00B     		.2byte	0xba0
 7569 1b04 4A070000 		.4byte	0x74a
 7570 1b08 5E0B0000 		.4byte	.LLST81
 7571 1b0c 20       		.uleb128 0x20
 7572 1b0d 20000000 		.4byte	.LVL260
 7573 1b11 46240000 		.4byte	0x2446
 7574 1b15 26       		.uleb128 0x26
 7575 1b16 28000000 		.4byte	.LVL261
 7576 1b1a 46240000 		.4byte	0x2446
 7577 1b1e 291B0000 		.4byte	0x1b29
 7578 1b22 22       		.uleb128 0x22
 7579 1b23 01       		.uleb128 0x1
 7580 1b24 50       		.byte	0x50
 7581 1b25 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 233


 7582 1b26 76       		.byte	0x76
 7583 1b27 00       		.sleb128 0
 7584 1b28 00       		.byte	0
 7585 1b29 21       		.uleb128 0x21
 7586 1b2a 4E000000 		.4byte	.LVL262
 7587 1b2e 2F240000 		.4byte	0x242f
 7588 1b32 22       		.uleb128 0x22
 7589 1b33 01       		.uleb128 0x1
 7590 1b34 51       		.byte	0x51
 7591 1b35 02       		.uleb128 0x2
 7592 1b36 76       		.byte	0x76
 7593 1b37 00       		.sleb128 0
 7594 1b38 00       		.byte	0
 7595 1b39 00       		.byte	0
 7596 1b3a 29       		.uleb128 0x29
 7597 1b3b 78040000 		.4byte	.LASF321
 7598 1b3f 01       		.byte	0x1
 7599 1b40 CA0B     		.2byte	0xbca
 7600 1b42 00000000 		.4byte	.LFB555
 7601 1b46 1C000000 		.4byte	.LFE555-.LFB555
 7602 1b4a 01       		.uleb128 0x1
 7603 1b4b 9C       		.byte	0x9c
 7604 1b4c 5F1B0000 		.4byte	0x1b5f
 7605 1b50 23       		.uleb128 0x23
 7606 1b51 85140000 		.4byte	.LASF322
 7607 1b55 01       		.byte	0x1
 7608 1b56 CA0B     		.2byte	0xbca
 7609 1b58 651B0000 		.4byte	0x1b65
 7610 1b5c 01       		.uleb128 0x1
 7611 1b5d 50       		.byte	0x50
 7612 1b5e 00       		.byte	0
 7613 1b5f 06       		.uleb128 0x6
 7614 1b60 04       		.byte	0x4
 7615 1b61 B9080000 		.4byte	0x8b9
 7616 1b65 07       		.uleb128 0x7
 7617 1b66 5F1B0000 		.4byte	0x1b5f
 7618 1b6a 27       		.uleb128 0x27
 7619 1b6b 9A1A0000 		.4byte	.LASF323
 7620 1b6f 01       		.byte	0x1
 7621 1b70 D20B     		.2byte	0xbd2
 7622 1b72 4A070000 		.4byte	0x74a
 7623 1b76 00000000 		.4byte	.LFB556
 7624 1b7a 64000000 		.4byte	.LFE556-.LFB556
 7625 1b7e 01       		.uleb128 0x1
 7626 1b7f 9C       		.byte	0x9c
 7627 1b80 F51B0000 		.4byte	0x1bf5
 7628 1b84 1D       		.uleb128 0x1d
 7629 1b85 85140000 		.4byte	.LASF322
 7630 1b89 01       		.byte	0x1
 7631 1b8a D20B     		.2byte	0xbd2
 7632 1b8c 651B0000 		.4byte	0x1b65
 7633 1b90 7D0B0000 		.4byte	.LLST82
 7634 1b94 1D       		.uleb128 0x1d
 7635 1b95 E0060000 		.4byte	.LASF324
 7636 1b99 01       		.byte	0x1
 7637 1b9a D20B     		.2byte	0xbd2
 7638 1b9c 41160000 		.4byte	0x1641
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 234


 7639 1ba0 F40B0000 		.4byte	.LLST83
 7640 1ba4 1E       		.uleb128 0x1e
 7641 1ba5 571C0000 		.4byte	.LASF245
 7642 1ba9 01       		.byte	0x1
 7643 1baa D40B     		.2byte	0xbd4
 7644 1bac 4A070000 		.4byte	0x74a
 7645 1bb0 200C0000 		.4byte	.LLST84
 7646 1bb4 28       		.uleb128 0x28
 7647 1bb5 16000000 		.4byte	.LBB40
 7648 1bb9 40000000 		.4byte	.LBE40-.LBB40
 7649 1bbd E21B0000 		.4byte	0x1be2
 7650 1bc1 1E       		.uleb128 0x1e
 7651 1bc2 2F070000 		.4byte	.LASF264
 7652 1bc6 01       		.byte	0x1
 7653 1bc7 DC0B     		.2byte	0xbdc
 7654 1bc9 8F0D0000 		.4byte	0xd8f
 7655 1bcd 4A0C0000 		.4byte	.LLST85
 7656 1bd1 21       		.uleb128 0x21
 7657 1bd2 48000000 		.4byte	.LVL271
 7658 1bd6 3A1B0000 		.4byte	0x1b3a
 7659 1bda 22       		.uleb128 0x22
 7660 1bdb 01       		.uleb128 0x1
 7661 1bdc 50       		.byte	0x50
 7662 1bdd 02       		.uleb128 0x2
 7663 1bde 74       		.byte	0x74
 7664 1bdf 00       		.sleb128 0
 7665 1be0 00       		.byte	0
 7666 1be1 00       		.byte	0
 7667 1be2 20       		.uleb128 0x20
 7668 1be3 16000000 		.4byte	.LVL269
 7669 1be7 24240000 		.4byte	0x2424
 7670 1beb 20       		.uleb128 0x20
 7671 1bec 5A000000 		.4byte	.LVL279
 7672 1bf0 3B240000 		.4byte	0x243b
 7673 1bf4 00       		.byte	0
 7674 1bf5 2F       		.uleb128 0x2f
 7675 1bf6 7B1C0000 		.4byte	.LASF326
 7676 1bfa 01       		.byte	0x1
 7677 1bfb 0F0C     		.2byte	0xc0f
 7678 1bfd 00000000 		.4byte	.LFB557
 7679 1c01 10000000 		.4byte	.LFE557-.LFB557
 7680 1c05 01       		.uleb128 0x1
 7681 1c06 9C       		.byte	0x9c
 7682 1c07 29       		.uleb128 0x29
 7683 1c08 D0010000 		.4byte	.LASF327
 7684 1c0c 01       		.byte	0x1
 7685 1c0d DB0C     		.2byte	0xcdb
 7686 1c0f 00000000 		.4byte	.LFB559
 7687 1c13 1C000000 		.4byte	.LFE559-.LFB559
 7688 1c17 01       		.uleb128 0x1
 7689 1c18 9C       		.byte	0x9c
 7690 1c19 5C1C0000 		.4byte	0x1c5c
 7691 1c1d 1D       		.uleb128 0x1d
 7692 1c1e D80D0000 		.4byte	.LASF328
 7693 1c22 01       		.byte	0x1
 7694 1c23 DB0C     		.2byte	0xcdb
 7695 1c25 53080000 		.4byte	0x853
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 235


 7696 1c29 680C0000 		.4byte	.LLST86
 7697 1c2d 1D       		.uleb128 0x1d
 7698 1c2e 641B0000 		.4byte	.LASF329
 7699 1c32 01       		.byte	0x1
 7700 1c33 DB0C     		.2byte	0xcdb
 7701 1c35 4A070000 		.4byte	0x74a
 7702 1c39 7B0C0000 		.4byte	.LLST87
 7703 1c3d 23       		.uleb128 0x23
 7704 1c3e 29220000 		.4byte	.LASF330
 7705 1c42 01       		.byte	0x1
 7706 1c43 DB0C     		.2byte	0xcdb
 7707 1c45 B0000000 		.4byte	0xb0
 7708 1c49 01       		.uleb128 0x1
 7709 1c4a 52       		.byte	0x52
 7710 1c4b 1E       		.uleb128 0x1e
 7711 1c4c 10210000 		.4byte	.LASF246
 7712 1c50 01       		.byte	0x1
 7713 1c51 DD0C     		.2byte	0xcdd
 7714 1c53 870A0000 		.4byte	0xa87
 7715 1c57 A90C0000 		.4byte	.LLST88
 7716 1c5b 00       		.byte	0
 7717 1c5c 27       		.uleb128 0x27
 7718 1c5d 670A0000 		.4byte	.LASF331
 7719 1c61 01       		.byte	0x1
 7720 1c62 EB0C     		.2byte	0xceb
 7721 1c64 B0000000 		.4byte	0xb0
 7722 1c68 00000000 		.4byte	.LFB560
 7723 1c6c 20000000 		.4byte	.LFE560-.LFB560
 7724 1c70 01       		.uleb128 0x1
 7725 1c71 9C       		.byte	0x9c
 7726 1c72 B71C0000 		.4byte	0x1cb7
 7727 1c76 1D       		.uleb128 0x1d
 7728 1c77 B3160000 		.4byte	.LASF288
 7729 1c7b 01       		.byte	0x1
 7730 1c7c EB0C     		.2byte	0xceb
 7731 1c7e 53080000 		.4byte	0x853
 7732 1c82 BC0C0000 		.4byte	.LLST89
 7733 1c86 1D       		.uleb128 0x1d
 7734 1c87 641B0000 		.4byte	.LASF329
 7735 1c8b 01       		.byte	0x1
 7736 1c8c EB0C     		.2byte	0xceb
 7737 1c8e 4A070000 		.4byte	0x74a
 7738 1c92 E80C0000 		.4byte	.LLST90
 7739 1c96 1E       		.uleb128 0x1e
 7740 1c97 8A0A0000 		.4byte	.LASF332
 7741 1c9b 01       		.byte	0x1
 7742 1c9c ED0C     		.2byte	0xced
 7743 1c9e B0000000 		.4byte	0xb0
 7744 1ca2 130D0000 		.4byte	.LLST91
 7745 1ca6 1E       		.uleb128 0x1e
 7746 1ca7 10210000 		.4byte	.LASF246
 7747 1cab 01       		.byte	0x1
 7748 1cac EE0C     		.2byte	0xcee
 7749 1cae 870A0000 		.4byte	0xa87
 7750 1cb2 490D0000 		.4byte	.LLST92
 7751 1cb6 00       		.byte	0
 7752 1cb7 27       		.uleb128 0x27
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 236


 7753 1cb8 FE1E0000 		.4byte	.LASF333
 7754 1cbc 01       		.byte	0x1
 7755 1cbd 580E     		.2byte	0xe58
 7756 1cbf 53080000 		.4byte	0x853
 7757 1cc3 00000000 		.4byte	.LFB565
 7758 1cc7 0C000000 		.4byte	.LFE565-.LFB565
 7759 1ccb 01       		.uleb128 0x1
 7760 1ccc 9C       		.byte	0x9c
 7761 1ccd E01C0000 		.4byte	0x1ce0
 7762 1cd1 24       		.uleb128 0x24
 7763 1cd2 571C0000 		.4byte	.LASF245
 7764 1cd6 01       		.byte	0x1
 7765 1cd7 5A0E     		.2byte	0xe5a
 7766 1cd9 53080000 		.4byte	0x853
 7767 1cdd 01       		.uleb128 0x1
 7768 1cde 50       		.byte	0x50
 7769 1cdf 00       		.byte	0
 7770 1ce0 27       		.uleb128 0x27
 7771 1ce1 5A020000 		.4byte	.LASF334
 7772 1ce5 01       		.byte	0x1
 7773 1ce6 690E     		.2byte	0xe69
 7774 1ce8 4A070000 		.4byte	0x74a
 7775 1cec 00000000 		.4byte	.LFB566
 7776 1cf0 20000000 		.4byte	.LFE566-.LFB566
 7777 1cf4 01       		.uleb128 0x1
 7778 1cf5 9C       		.byte	0x9c
 7779 1cf6 091D0000 		.4byte	0x1d09
 7780 1cfa 24       		.uleb128 0x24
 7781 1cfb 571C0000 		.4byte	.LASF245
 7782 1cff 01       		.byte	0x1
 7783 1d00 6B0E     		.2byte	0xe6b
 7784 1d02 4A070000 		.4byte	0x74a
 7785 1d06 01       		.uleb128 0x1
 7786 1d07 50       		.byte	0x50
 7787 1d08 00       		.byte	0
 7788 1d09 27       		.uleb128 0x27
 7789 1d0a 8E150000 		.4byte	.LASF335
 7790 1d0e 01       		.byte	0x1
 7791 1d0f 4D10     		.2byte	0x104d
 7792 1d11 60070000 		.4byte	0x760
 7793 1d15 00000000 		.4byte	.LFB567
 7794 1d19 20000000 		.4byte	.LFE567-.LFB567
 7795 1d1d 01       		.uleb128 0x1
 7796 1d1e 9C       		.byte	0x9c
 7797 1d1f 321D0000 		.4byte	0x1d32
 7798 1d23 24       		.uleb128 0x24
 7799 1d24 01130000 		.4byte	.LASF269
 7800 1d28 01       		.byte	0x1
 7801 1d29 4F10     		.2byte	0x104f
 7802 1d2b 60070000 		.4byte	0x760
 7803 1d2f 01       		.uleb128 0x1
 7804 1d30 50       		.byte	0x50
 7805 1d31 00       		.byte	0
 7806 1d32 27       		.uleb128 0x27
 7807 1d33 501A0000 		.4byte	.LASF336
 7808 1d37 01       		.byte	0x1
 7809 1d38 6E10     		.2byte	0x106e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 237


 7810 1d3a EB000000 		.4byte	0xeb
 7811 1d3e 00000000 		.4byte	.LFB568
 7812 1d42 80000000 		.4byte	.LFE568-.LFB568
 7813 1d46 01       		.uleb128 0x1
 7814 1d47 9C       		.byte	0x9c
 7815 1d48 BA1D0000 		.4byte	0x1dba
 7816 1d4c 1D       		.uleb128 0x1d
 7817 1d4d C2080000 		.4byte	.LASF337
 7818 1d51 01       		.byte	0x1
 7819 1d52 6E10     		.2byte	0x106e
 7820 1d54 4A070000 		.4byte	0x74a
 7821 1d58 5C0D0000 		.4byte	.LLST93
 7822 1d5c 1D       		.uleb128 0x1d
 7823 1d5d C11E0000 		.4byte	.LASF261
 7824 1d61 01       		.byte	0x1
 7825 1d62 6E10     		.2byte	0x106e
 7826 1d64 60070000 		.4byte	0x760
 7827 1d68 880D0000 		.4byte	.LLST94
 7828 1d6c 1E       		.uleb128 0x1e
 7829 1d6d 0A130000 		.4byte	.LASF338
 7830 1d71 01       		.byte	0x1
 7831 1d72 7010     		.2byte	0x1070
 7832 1d74 EB000000 		.4byte	0xeb
 7833 1d78 B40D0000 		.4byte	.LLST95
 7834 1d7c 20       		.uleb128 0x20
 7835 1d7d 0A000000 		.4byte	.LVL297
 7836 1d81 24240000 		.4byte	0x2424
 7837 1d85 26       		.uleb128 0x26
 7838 1d86 2A000000 		.4byte	.LVL298
 7839 1d8a 010D0000 		.4byte	0xd01
 7840 1d8e 9E1D0000 		.4byte	0x1d9e
 7841 1d92 22       		.uleb128 0x22
 7842 1d93 01       		.uleb128 0x1
 7843 1d94 50       		.byte	0x50
 7844 1d95 02       		.uleb128 0x2
 7845 1d96 74       		.byte	0x74
 7846 1d97 00       		.sleb128 0
 7847 1d98 22       		.uleb128 0x22
 7848 1d99 01       		.uleb128 0x1
 7849 1d9a 51       		.byte	0x51
 7850 1d9b 01       		.uleb128 0x1
 7851 1d9c 31       		.byte	0x31
 7852 1d9d 00       		.byte	0
 7853 1d9e 20       		.uleb128 0x20
 7854 1d9f 3E000000 		.4byte	.LVL299
 7855 1da3 3B240000 		.4byte	0x243b
 7856 1da7 20       		.uleb128 0x20
 7857 1da8 42000000 		.4byte	.LVL300
 7858 1dac 24240000 		.4byte	0x2424
 7859 1db0 20       		.uleb128 0x20
 7860 1db1 74000000 		.4byte	.LVL302
 7861 1db5 3B240000 		.4byte	0x243b
 7862 1db9 00       		.byte	0
 7863 1dba 27       		.uleb128 0x27
 7864 1dbb DB0F0000 		.4byte	.LASF339
 7865 1dbf 01       		.byte	0x1
 7866 1dc0 B210     		.2byte	0x10b2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 238


 7867 1dc2 4A070000 		.4byte	0x74a
 7868 1dc6 00000000 		.4byte	.LFB569
 7869 1dca A4000000 		.4byte	.LFE569-.LFB569
 7870 1dce 01       		.uleb128 0x1
 7871 1dcf 9C       		.byte	0x9c
 7872 1dd0 621E0000 		.4byte	0x1e62
 7873 1dd4 1D       		.uleb128 0x1d
 7874 1dd5 C5090000 		.4byte	.LASF340
 7875 1dd9 01       		.byte	0x1
 7876 1dda B210     		.2byte	0x10b2
 7877 1ddc EB000000 		.4byte	0xeb
 7878 1de0 D20D0000 		.4byte	.LLST96
 7879 1de4 1D       		.uleb128 0x1d
 7880 1de5 22020000 		.4byte	.LASF341
 7881 1de9 01       		.byte	0x1
 7882 1dea B210     		.2byte	0x10b2
 7883 1dec EB000000 		.4byte	0xeb
 7884 1df0 FE0D0000 		.4byte	.LLST97
 7885 1df4 1D       		.uleb128 0x1d
 7886 1df5 351C0000 		.4byte	.LASF342
 7887 1df9 01       		.byte	0x1
 7888 1dfa B210     		.2byte	0x10b2
 7889 1dfc 1A010000 		.4byte	0x11a
 7890 1e00 430E0000 		.4byte	.LLST98
 7891 1e04 1D       		.uleb128 0x1d
 7892 1e05 C11E0000 		.4byte	.LASF261
 7893 1e09 01       		.byte	0x1
 7894 1e0a B210     		.2byte	0x10b2
 7895 1e0c 60070000 		.4byte	0x760
 7896 1e10 6F0E0000 		.4byte	.LLST99
 7897 1e14 1E       		.uleb128 0x1e
 7898 1e15 571C0000 		.4byte	.LASF245
 7899 1e19 01       		.byte	0x1
 7900 1e1a B410     		.2byte	0x10b4
 7901 1e1c 4A070000 		.4byte	0x74a
 7902 1e20 9B0E0000 		.4byte	.LLST100
 7903 1e24 20       		.uleb128 0x20
 7904 1e25 0E000000 		.4byte	.LVL305
 7905 1e29 24240000 		.4byte	0x2424
 7906 1e2d 26       		.uleb128 0x26
 7907 1e2e 40000000 		.4byte	.LVL306
 7908 1e32 010D0000 		.4byte	0xd01
 7909 1e36 461E0000 		.4byte	0x1e46
 7910 1e3a 22       		.uleb128 0x22
 7911 1e3b 01       		.uleb128 0x1
 7912 1e3c 50       		.byte	0x50
 7913 1e3d 02       		.uleb128 0x2
 7914 1e3e 76       		.byte	0x76
 7915 1e3f 00       		.sleb128 0
 7916 1e40 22       		.uleb128 0x22
 7917 1e41 01       		.uleb128 0x1
 7918 1e42 51       		.byte	0x51
 7919 1e43 01       		.uleb128 0x1
 7920 1e44 31       		.byte	0x31
 7921 1e45 00       		.byte	0
 7922 1e46 20       		.uleb128 0x20
 7923 1e47 54000000 		.4byte	.LVL307
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 239


 7924 1e4b 3B240000 		.4byte	0x243b
 7925 1e4f 20       		.uleb128 0x20
 7926 1e50 58000000 		.4byte	.LVL308
 7927 1e54 24240000 		.4byte	0x2424
 7928 1e58 20       		.uleb128 0x20
 7929 1e59 98000000 		.4byte	.LVL313
 7930 1e5d 3B240000 		.4byte	0x243b
 7931 1e61 00       		.byte	0
 7932 1e62 27       		.uleb128 0x27
 7933 1e63 3D080000 		.4byte	.LASF343
 7934 1e67 01       		.byte	0x1
 7935 1e68 0211     		.2byte	0x1102
 7936 1e6a 4A070000 		.4byte	0x74a
 7937 1e6e 00000000 		.4byte	.LFB570
 7938 1e72 C8000000 		.4byte	.LFE570-.LFB570
 7939 1e76 01       		.uleb128 0x1
 7940 1e77 9C       		.byte	0x9c
 7941 1e78 271F0000 		.4byte	0x1f27
 7942 1e7c 1D       		.uleb128 0x1d
 7943 1e7d C0160000 		.4byte	.LASF344
 7944 1e81 01       		.byte	0x1
 7945 1e82 0211     		.2byte	0x1102
 7946 1e84 53080000 		.4byte	0x853
 7947 1e88 C50E0000 		.4byte	.LLST101
 7948 1e8c 1D       		.uleb128 0x1d
 7949 1e8d 611A0000 		.4byte	.LASF345
 7950 1e91 01       		.byte	0x1
 7951 1e92 0211     		.2byte	0x1102
 7952 1e94 EB000000 		.4byte	0xeb
 7953 1e98 F10E0000 		.4byte	.LLST102
 7954 1e9c 1D       		.uleb128 0x1d
 7955 1e9d 65150000 		.4byte	.LASF346
 7956 1ea1 01       		.byte	0x1
 7957 1ea2 0211     		.2byte	0x1102
 7958 1ea4 89080000 		.4byte	0x889
 7959 1ea8 360F0000 		.4byte	.LLST103
 7960 1eac 1D       		.uleb128 0x1d
 7961 1ead 24140000 		.4byte	.LASF347
 7962 1eb1 01       		.byte	0x1
 7963 1eb2 0211     		.2byte	0x1102
 7964 1eb4 1A010000 		.4byte	0x11a
 7965 1eb8 570F0000 		.4byte	.LLST104
 7966 1ebc 1E       		.uleb128 0x1e
 7967 1ebd 10210000 		.4byte	.LASF246
 7968 1ec1 01       		.byte	0x1
 7969 1ec2 0411     		.2byte	0x1104
 7970 1ec4 870A0000 		.4byte	0xa87
 7971 1ec8 830F0000 		.4byte	.LLST105
 7972 1ecc 1E       		.uleb128 0x1e
 7973 1ecd 571C0000 		.4byte	.LASF245
 7974 1ed1 01       		.byte	0x1
 7975 1ed2 0511     		.2byte	0x1105
 7976 1ed4 4A070000 		.4byte	0x74a
 7977 1ed8 A40F0000 		.4byte	.LLST106
 7978 1edc 1E       		.uleb128 0x1e
 7979 1edd 62040000 		.4byte	.LASF348
 7980 1ee1 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 240


 7981 1ee2 0611     		.2byte	0x1106
 7982 1ee4 CA000000 		.4byte	0xca
 7983 1ee8 CE0F0000 		.4byte	.LLST107
 7984 1eec 20       		.uleb128 0x20
 7985 1eed 14000000 		.4byte	.LVL317
 7986 1ef1 24240000 		.4byte	0x2424
 7987 1ef5 26       		.uleb128 0x26
 7988 1ef6 6A000000 		.4byte	.LVL322
 7989 1efa 46240000 		.4byte	0x2446
 7990 1efe 091F0000 		.4byte	0x1f09
 7991 1f02 22       		.uleb128 0x22
 7992 1f03 01       		.uleb128 0x1
 7993 1f04 50       		.byte	0x50
 7994 1f05 02       		.uleb128 0x2
 7995 1f06 76       		.byte	0x76
 7996 1f07 00       		.sleb128 0
 7997 1f08 00       		.byte	0
 7998 1f09 26       		.uleb128 0x26
 7999 1f0a 8C000000 		.4byte	.LVL323
 8000 1f0e 2F240000 		.4byte	0x242f
 8001 1f12 1D1F0000 		.4byte	0x1f1d
 8002 1f16 22       		.uleb128 0x22
 8003 1f17 01       		.uleb128 0x1
 8004 1f18 51       		.byte	0x51
 8005 1f19 02       		.uleb128 0x2
 8006 1f1a 76       		.byte	0x76
 8007 1f1b 00       		.sleb128 0
 8008 1f1c 00       		.byte	0
 8009 1f1d 20       		.uleb128 0x20
 8010 1f1e B6000000 		.4byte	.LVL324
 8011 1f22 3B240000 		.4byte	0x243b
 8012 1f26 00       		.byte	0
 8013 1f27 27       		.uleb128 0x27
 8014 1f28 76070000 		.4byte	.LASF349
 8015 1f2c 01       		.byte	0x1
 8016 1f2d 6C11     		.2byte	0x116c
 8017 1f2f 4A070000 		.4byte	0x74a
 8018 1f33 00000000 		.4byte	.LFB571
 8019 1f37 04010000 		.4byte	.LFE571-.LFB571
 8020 1f3b 01       		.uleb128 0x1
 8021 1f3c 9C       		.byte	0x9c
 8022 1f3d 5F200000 		.4byte	0x205f
 8023 1f41 1D       		.uleb128 0x1d
 8024 1f42 C0160000 		.4byte	.LASF344
 8025 1f46 01       		.byte	0x1
 8026 1f47 6C11     		.2byte	0x116c
 8027 1f49 53080000 		.4byte	0x853
 8028 1f4d E10F0000 		.4byte	.LLST108
 8029 1f51 1D       		.uleb128 0x1d
 8030 1f52 611A0000 		.4byte	.LASF345
 8031 1f56 01       		.byte	0x1
 8032 1f57 6C11     		.2byte	0x116c
 8033 1f59 EB000000 		.4byte	0xeb
 8034 1f5d 0D100000 		.4byte	.LLST109
 8035 1f61 1D       		.uleb128 0x1d
 8036 1f62 65150000 		.4byte	.LASF346
 8037 1f66 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 241


 8038 1f67 6C11     		.2byte	0x116c
 8039 1f69 89080000 		.4byte	0x889
 8040 1f6d 52100000 		.4byte	.LLST110
 8041 1f71 1D       		.uleb128 0x1d
 8042 1f72 24140000 		.4byte	.LASF347
 8043 1f76 01       		.byte	0x1
 8044 1f77 6C11     		.2byte	0x116c
 8045 1f79 1A010000 		.4byte	0x11a
 8046 1f7d 73100000 		.4byte	.LLST111
 8047 1f81 1D       		.uleb128 0x1d
 8048 1f82 71020000 		.4byte	.LASF350
 8049 1f86 01       		.byte	0x1
 8050 1f87 6C11     		.2byte	0x116c
 8051 1f89 5F200000 		.4byte	0x205f
 8052 1f8d 9F100000 		.4byte	.LLST112
 8053 1f91 1E       		.uleb128 0x1e
 8054 1f92 10210000 		.4byte	.LASF246
 8055 1f96 01       		.byte	0x1
 8056 1f97 6E11     		.2byte	0x116e
 8057 1f99 870A0000 		.4byte	0xa87
 8058 1f9d BF100000 		.4byte	.LLST113
 8059 1fa1 1E       		.uleb128 0x1e
 8060 1fa2 62040000 		.4byte	.LASF348
 8061 1fa6 01       		.byte	0x1
 8062 1fa7 6F11     		.2byte	0x116f
 8063 1fa9 CA000000 		.4byte	0xca
 8064 1fad E0100000 		.4byte	.LLST114
 8065 1fb1 1E       		.uleb128 0x1e
 8066 1fb2 571C0000 		.4byte	.LASF245
 8067 1fb6 01       		.byte	0x1
 8068 1fb7 7011     		.2byte	0x1170
 8069 1fb9 4A070000 		.4byte	0x74a
 8070 1fbd F3100000 		.4byte	.LLST115
 8071 1fc1 2A       		.uleb128 0x2a
 8072 1fc2 7E220000 		.4byte	.LASF281
 8073 1fc6 01       		.byte	0x1
 8074 1fc7 7111     		.2byte	0x1171
 8075 1fc9 55070000 		.4byte	0x755
 8076 1fcd 2B       		.uleb128 0x2b
 8077 1fce C1090000 		.4byte	0x9c1
 8078 1fd2 18000000 		.4byte	.LBB41
 8079 1fd6 14000000 		.4byte	.LBE41-.LBB41
 8080 1fda 01       		.byte	0x1
 8081 1fdb 8911     		.2byte	0x1189
 8082 1fdd F61F0000 		.4byte	0x1ff6
 8083 1fe1 2C       		.uleb128 0x2c
 8084 1fe2 18000000 		.4byte	.LBB42
 8085 1fe6 14000000 		.4byte	.LBE42-.LBB42
 8086 1fea 2D       		.uleb128 0x2d
 8087 1feb D1090000 		.4byte	0x9d1
 8088 1fef 2D       		.uleb128 0x2d
 8089 1ff0 DC090000 		.4byte	0x9dc
 8090 1ff4 00       		.byte	0
 8091 1ff5 00       		.byte	0
 8092 1ff6 2B       		.uleb128 0x2b
 8093 1ff7 E8090000 		.4byte	0x9e8
 8094 1ffb EC000000 		.4byte	.LBB43
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 242


 8095 1fff 04000000 		.4byte	.LBE43-.LBB43
 8096 2003 01       		.byte	0x1
 8097 2004 DE11     		.2byte	0x11de
 8098 2006 14200000 		.4byte	0x2014
 8099 200a 2E       		.uleb128 0x2e
 8100 200b F4090000 		.4byte	0x9f4
 8101 200f 1D110000 		.4byte	.LLST116
 8102 2013 00       		.byte	0
 8103 2014 20       		.uleb128 0x20
 8104 2015 18000000 		.4byte	.LVL328
 8105 2019 69240000 		.4byte	0x2469
 8106 201d 26       		.uleb128 0x26
 8107 201e A0000000 		.4byte	.LVL333
 8108 2022 46240000 		.4byte	0x2446
 8109 2026 31200000 		.4byte	0x2031
 8110 202a 22       		.uleb128 0x22
 8111 202b 01       		.uleb128 0x1
 8112 202c 50       		.byte	0x50
 8113 202d 02       		.uleb128 0x2
 8114 202e 78       		.byte	0x78
 8115 202f 00       		.sleb128 0
 8116 2030 00       		.byte	0
 8117 2031 26       		.uleb128 0x26
 8118 2032 C2000000 		.4byte	.LVL334
 8119 2036 2F240000 		.4byte	0x242f
 8120 203a 45200000 		.4byte	0x2045
 8121 203e 22       		.uleb128 0x22
 8122 203f 01       		.uleb128 0x1
 8123 2040 51       		.byte	0x51
 8124 2041 02       		.uleb128 0x2
 8125 2042 78       		.byte	0x78
 8126 2043 00       		.sleb128 0
 8127 2044 00       		.byte	0
 8128 2045 21       		.uleb128 0x21
 8129 2046 CE000000 		.4byte	.LVL336
 8130 204a 2F240000 		.4byte	0x242f
 8131 204e 22       		.uleb128 0x22
 8132 204f 01       		.uleb128 0x1
 8133 2050 50       		.byte	0x50
 8134 2051 05       		.uleb128 0x5
 8135 2052 03       		.byte	0x3
 8136 2053 14000000 		.4byte	.LANCHOR0+20
 8137 2057 22       		.uleb128 0x22
 8138 2058 01       		.uleb128 0x1
 8139 2059 51       		.byte	0x51
 8140 205a 02       		.uleb128 0x2
 8141 205b 74       		.byte	0x74
 8142 205c 18       		.sleb128 24
 8143 205d 00       		.byte	0
 8144 205e 00       		.byte	0
 8145 205f 06       		.uleb128 0x6
 8146 2060 04       		.byte	0x4
 8147 2061 4A070000 		.4byte	0x74a
 8148 2065 29       		.uleb128 0x29
 8149 2066 B6190000 		.4byte	.LASF351
 8150 206a 01       		.byte	0x1
 8151 206b E811     		.2byte	0x11e8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 243


 8152 206d 00000000 		.4byte	.LFB572
 8153 2071 B0000000 		.4byte	.LFE572-.LFB572
 8154 2075 01       		.uleb128 0x1
 8155 2076 9C       		.byte	0x9c
 8156 2077 59210000 		.4byte	0x2159
 8157 207b 1D       		.uleb128 0x1d
 8158 207c C0160000 		.4byte	.LASF344
 8159 2080 01       		.byte	0x1
 8160 2081 E811     		.2byte	0x11e8
 8161 2083 53080000 		.4byte	0x853
 8162 2087 30110000 		.4byte	.LLST117
 8163 208b 1D       		.uleb128 0x1d
 8164 208c 71020000 		.4byte	.LASF350
 8165 2090 01       		.byte	0x1
 8166 2091 E811     		.2byte	0x11e8
 8167 2093 5F200000 		.4byte	0x205f
 8168 2097 5C110000 		.4byte	.LLST118
 8169 209b 1E       		.uleb128 0x1e
 8170 209c 10210000 		.4byte	.LASF246
 8171 20a0 01       		.byte	0x1
 8172 20a1 EA11     		.2byte	0x11ea
 8173 20a3 870A0000 		.4byte	0xa87
 8174 20a7 88110000 		.4byte	.LLST119
 8175 20ab 1E       		.uleb128 0x1e
 8176 20ac 62040000 		.4byte	.LASF348
 8177 20b0 01       		.byte	0x1
 8178 20b1 EB11     		.2byte	0x11eb
 8179 20b3 CA000000 		.4byte	0xca
 8180 20b7 A9110000 		.4byte	.LLST120
 8181 20bb 2A       		.uleb128 0x2a
 8182 20bc 7E220000 		.4byte	.LASF281
 8183 20c0 01       		.byte	0x1
 8184 20c1 EC11     		.2byte	0x11ec
 8185 20c3 55070000 		.4byte	0x755
 8186 20c7 2B       		.uleb128 0x2b
 8187 20c8 C1090000 		.4byte	0x9c1
 8188 20cc 10000000 		.4byte	.LBB45
 8189 20d0 14000000 		.4byte	.LBE45-.LBB45
 8190 20d4 01       		.byte	0x1
 8191 20d5 0412     		.2byte	0x1204
 8192 20d7 F0200000 		.4byte	0x20f0
 8193 20db 2C       		.uleb128 0x2c
 8194 20dc 10000000 		.4byte	.LBB46
 8195 20e0 14000000 		.4byte	.LBE46-.LBB46
 8196 20e4 2D       		.uleb128 0x2d
 8197 20e5 D1090000 		.4byte	0x9d1
 8198 20e9 2D       		.uleb128 0x2d
 8199 20ea DC090000 		.4byte	0x9dc
 8200 20ee 00       		.byte	0
 8201 20ef 00       		.byte	0
 8202 20f0 2B       		.uleb128 0x2b
 8203 20f1 E8090000 		.4byte	0x9e8
 8204 20f5 9E000000 		.4byte	.LBB47
 8205 20f9 12000000 		.4byte	.LBE47-.LBB47
 8206 20fd 01       		.byte	0x1
 8207 20fe 3812     		.2byte	0x1238
 8208 2100 0E210000 		.4byte	0x210e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 244


 8209 2104 2E       		.uleb128 0x2e
 8210 2105 F4090000 		.4byte	0x9f4
 8211 2109 BC110000 		.4byte	.LLST121
 8212 210d 00       		.byte	0
 8213 210e 20       		.uleb128 0x20
 8214 210f 10000000 		.4byte	.LVL341
 8215 2113 69240000 		.4byte	0x2469
 8216 2117 26       		.uleb128 0x26
 8217 2118 52000000 		.4byte	.LVL344
 8218 211c 46240000 		.4byte	0x2446
 8219 2120 2B210000 		.4byte	0x212b
 8220 2124 22       		.uleb128 0x22
 8221 2125 01       		.uleb128 0x1
 8222 2126 50       		.byte	0x50
 8223 2127 02       		.uleb128 0x2
 8224 2128 77       		.byte	0x77
 8225 2129 00       		.sleb128 0
 8226 212a 00       		.byte	0
 8227 212b 26       		.uleb128 0x26
 8228 212c 74000000 		.4byte	.LVL345
 8229 2130 2F240000 		.4byte	0x242f
 8230 2134 3F210000 		.4byte	0x213f
 8231 2138 22       		.uleb128 0x22
 8232 2139 01       		.uleb128 0x1
 8233 213a 51       		.byte	0x51
 8234 213b 02       		.uleb128 0x2
 8235 213c 77       		.byte	0x77
 8236 213d 00       		.sleb128 0
 8237 213e 00       		.byte	0
 8238 213f 21       		.uleb128 0x21
 8239 2140 80000000 		.4byte	.LVL346
 8240 2144 2F240000 		.4byte	0x242f
 8241 2148 22       		.uleb128 0x22
 8242 2149 01       		.uleb128 0x1
 8243 214a 50       		.byte	0x50
 8244 214b 05       		.uleb128 0x5
 8245 214c 03       		.byte	0x3
 8246 214d 14000000 		.4byte	.LANCHOR0+20
 8247 2151 22       		.uleb128 0x22
 8248 2152 01       		.uleb128 0x1
 8249 2153 51       		.byte	0x51
 8250 2154 02       		.uleb128 0x2
 8251 2155 74       		.byte	0x74
 8252 2156 18       		.sleb128 24
 8253 2157 00       		.byte	0
 8254 2158 00       		.byte	0
 8255 2159 27       		.uleb128 0x27
 8256 215a B8200000 		.4byte	.LASF352
 8257 215e 01       		.byte	0x1
 8258 215f 4112     		.2byte	0x1241
 8259 2161 4A070000 		.4byte	0x74a
 8260 2165 00000000 		.4byte	.LFB573
 8261 2169 34000000 		.4byte	.LFE573-.LFB573
 8262 216d 01       		.uleb128 0x1
 8263 216e 9C       		.byte	0x9c
 8264 216f B6210000 		.4byte	0x21b6
 8265 2173 1D       		.uleb128 0x1d
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 245


 8266 2174 CE160000 		.4byte	.LASF249
 8267 2178 01       		.byte	0x1
 8268 2179 4112     		.2byte	0x1241
 8269 217b 53080000 		.4byte	0x853
 8270 217f CF110000 		.4byte	.LLST122
 8271 2183 1E       		.uleb128 0x1e
 8272 2184 10210000 		.4byte	.LASF246
 8273 2188 01       		.byte	0x1
 8274 2189 4312     		.2byte	0x1243
 8275 218b 870A0000 		.4byte	0xa87
 8276 218f E2110000 		.4byte	.LLST123
 8277 2193 1E       		.uleb128 0x1e
 8278 2194 571C0000 		.4byte	.LASF245
 8279 2198 01       		.byte	0x1
 8280 2199 4412     		.2byte	0x1244
 8281 219b 4A070000 		.4byte	0x74a
 8282 219f 00120000 		.4byte	.LLST124
 8283 21a3 20       		.uleb128 0x20
 8284 21a4 10000000 		.4byte	.LVL352
 8285 21a8 24240000 		.4byte	0x2424
 8286 21ac 20       		.uleb128 0x20
 8287 21ad 2A000000 		.4byte	.LVL357
 8288 21b1 3B240000 		.4byte	0x243b
 8289 21b5 00       		.byte	0
 8290 21b6 11       		.uleb128 0x11
 8291 21b7 48080000 		.4byte	0x848
 8292 21bb C6210000 		.4byte	0x21c6
 8293 21bf 12       		.uleb128 0x12
 8294 21c0 A9000000 		.4byte	0xa9
 8295 21c4 13       		.byte	0x13
 8296 21c5 00       		.byte	0
 8297 21c6 24       		.uleb128 0x24
 8298 21c7 98030000 		.4byte	.LASF353
 8299 21cb 01       		.byte	0x1
 8300 21cc 7701     		.2byte	0x177
 8301 21ce B6210000 		.4byte	0x21b6
 8302 21d2 05       		.uleb128 0x5
 8303 21d3 03       		.byte	0x3
 8304 21d4 30000000 		.4byte	pxReadyTasksLists
 8305 21d8 24       		.uleb128 0x24
 8306 21d9 7B1B0000 		.4byte	.LASF354
 8307 21dd 01       		.byte	0x1
 8308 21de 7801     		.2byte	0x178
 8309 21e0 48080000 		.4byte	0x848
 8310 21e4 05       		.uleb128 0x5
 8311 21e5 03       		.byte	0x3
 8312 21e6 C0010000 		.4byte	xDelayedTaskList1
 8313 21ea 24       		.uleb128 0x24
 8314 21eb F5040000 		.4byte	.LASF355
 8315 21ef 01       		.byte	0x1
 8316 21f0 7901     		.2byte	0x179
 8317 21f2 48080000 		.4byte	0x848
 8318 21f6 05       		.uleb128 0x5
 8319 21f7 03       		.byte	0x3
 8320 21f8 D4010000 		.4byte	xDelayedTaskList2
 8321 21fc 24       		.uleb128 0x24
 8322 21fd CD190000 		.4byte	.LASF356
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 246


 8323 2201 01       		.byte	0x1
 8324 2202 7A01     		.2byte	0x17a
 8325 2204 0E220000 		.4byte	0x220e
 8326 2208 05       		.uleb128 0x5
 8327 2209 03       		.byte	0x3
 8328 220a 28000000 		.4byte	pxDelayedTaskList
 8329 220e 08       		.uleb128 0x8
 8330 220f DC140000 		.4byte	0x14dc
 8331 2213 24       		.uleb128 0x24
 8332 2214 E30D0000 		.4byte	.LASF357
 8333 2218 01       		.byte	0x1
 8334 2219 7B01     		.2byte	0x17b
 8335 221b 0E220000 		.4byte	0x220e
 8336 221f 05       		.uleb128 0x5
 8337 2220 03       		.byte	0x3
 8338 2221 FC010000 		.4byte	pxOverflowDelayedTaskList
 8339 2225 24       		.uleb128 0x24
 8340 2226 0D0A0000 		.4byte	.LASF358
 8341 222a 01       		.byte	0x1
 8342 222b 7C01     		.2byte	0x17c
 8343 222d 48080000 		.4byte	0x848
 8344 2231 05       		.uleb128 0x5
 8345 2232 03       		.byte	0x3
 8346 2233 14000000 		.4byte	xPendingReadyList
 8347 2237 24       		.uleb128 0x24
 8348 2238 120F0000 		.4byte	.LASF359
 8349 223c 01       		.byte	0x1
 8350 223d 8001     		.2byte	0x180
 8351 223f 48080000 		.4byte	0x848
 8352 2243 05       		.uleb128 0x5
 8353 2244 03       		.byte	0x3
 8354 2245 E8010000 		.4byte	xTasksWaitingTermination
 8355 2249 24       		.uleb128 0x24
 8356 224a 4D030000 		.4byte	.LASF360
 8357 224e 01       		.byte	0x1
 8358 224f 8101     		.2byte	0x181
 8359 2251 5B220000 		.4byte	0x225b
 8360 2255 05       		.uleb128 0x5
 8361 2256 03       		.byte	0x3
 8362 2257 18020000 		.4byte	uxDeletedTasksWaitingCleanUp
 8363 225b 08       		.uleb128 0x8
 8364 225c 55070000 		.4byte	0x755
 8365 2260 24       		.uleb128 0x24
 8366 2261 7F0D0000 		.4byte	.LASF361
 8367 2265 01       		.byte	0x1
 8368 2266 8701     		.2byte	0x187
 8369 2268 48080000 		.4byte	0x848
 8370 226c 05       		.uleb128 0x5
 8371 226d 03       		.byte	0x3
 8372 226e 00000000 		.4byte	xSuspendedTaskList
 8373 2272 24       		.uleb128 0x24
 8374 2273 67200000 		.4byte	.LASF362
 8375 2277 01       		.byte	0x1
 8376 2278 8C01     		.2byte	0x18c
 8377 227a 5B220000 		.4byte	0x225b
 8378 227e 05       		.uleb128 0x5
 8379 227f 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 247


 8380 2280 00020000 		.4byte	uxCurrentNumberOfTasks
 8381 2284 24       		.uleb128 0x24
 8382 2285 8F0C0000 		.4byte	.LASF363
 8383 2289 01       		.byte	0x1
 8384 228a 8D01     		.2byte	0x18d
 8385 228c 96220000 		.4byte	0x2296
 8386 2290 05       		.uleb128 0x5
 8387 2291 03       		.byte	0x3
 8388 2292 14020000 		.4byte	xTickCount
 8389 2296 08       		.uleb128 0x8
 8390 2297 60070000 		.4byte	0x760
 8391 229b 24       		.uleb128 0x24
 8392 229c 151B0000 		.4byte	.LASF364
 8393 22a0 01       		.byte	0x1
 8394 22a1 8E01     		.2byte	0x18e
 8395 22a3 5B220000 		.4byte	0x225b
 8396 22a7 05       		.uleb128 0x5
 8397 22a8 03       		.byte	0x3
 8398 22a9 10020000 		.4byte	uxTopReadyPriority
 8399 22ad 24       		.uleb128 0x24
 8400 22ae D2020000 		.4byte	.LASF365
 8401 22b2 01       		.byte	0x1
 8402 22b3 8F01     		.2byte	0x18f
 8403 22b5 BF220000 		.4byte	0x22bf
 8404 22b9 05       		.uleb128 0x5
 8405 22ba 03       		.byte	0x3
 8406 22bb 08020000 		.4byte	xSchedulerRunning
 8407 22bf 08       		.uleb128 0x8
 8408 22c0 4A070000 		.4byte	0x74a
 8409 22c4 24       		.uleb128 0x24
 8410 22c5 8C1C0000 		.4byte	.LASF366
 8411 22c9 01       		.byte	0x1
 8412 22ca 9001     		.2byte	0x190
 8413 22cc 5B220000 		.4byte	0x225b
 8414 22d0 05       		.uleb128 0x5
 8415 22d1 03       		.byte	0x3
 8416 22d2 28020000 		.4byte	uxPendedTicks
 8417 22d6 24       		.uleb128 0x24
 8418 22d7 FC220000 		.4byte	.LASF367
 8419 22db 01       		.byte	0x1
 8420 22dc 9101     		.2byte	0x191
 8421 22de BF220000 		.4byte	0x22bf
 8422 22e2 05       		.uleb128 0x5
 8423 22e3 03       		.byte	0x3
 8424 22e4 2C020000 		.4byte	xYieldPending
 8425 22e8 24       		.uleb128 0x24
 8426 22e9 68170000 		.4byte	.LASF368
 8427 22ed 01       		.byte	0x1
 8428 22ee 9201     		.2byte	0x192
 8429 22f0 BF220000 		.4byte	0x22bf
 8430 22f4 05       		.uleb128 0x5
 8431 22f5 03       		.byte	0x3
 8432 22f6 24020000 		.4byte	xNumOfOverflows
 8433 22fa 24       		.uleb128 0x24
 8434 22fb 26150000 		.4byte	.LASF369
 8435 22ff 01       		.byte	0x1
 8436 2300 9301     		.2byte	0x193
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 248


 8437 2302 55070000 		.4byte	0x755
 8438 2306 05       		.uleb128 0x5
 8439 2307 03       		.byte	0x3
 8440 2308 0C020000 		.4byte	uxTaskNumber
 8441 230c 24       		.uleb128 0x24
 8442 230d 47120000 		.4byte	.LASF370
 8443 2311 01       		.byte	0x1
 8444 2312 9401     		.2byte	0x194
 8445 2314 96220000 		.4byte	0x2296
 8446 2318 05       		.uleb128 0x5
 8447 2319 03       		.byte	0x3
 8448 231a 2C000000 		.4byte	xNextTaskUnblockTime
 8449 231e 24       		.uleb128 0x24
 8450 231f 6B1B0000 		.4byte	.LASF371
 8451 2323 01       		.byte	0x1
 8452 2324 9501     		.2byte	0x195
 8453 2326 53080000 		.4byte	0x853
 8454 232a 05       		.uleb128 0x5
 8455 232b 03       		.byte	0x3
 8456 232c 20020000 		.4byte	xIdleTaskHandle
 8457 2330 24       		.uleb128 0x24
 8458 2331 5C210000 		.4byte	.LASF372
 8459 2335 01       		.byte	0x1
 8460 2336 9F01     		.2byte	0x19f
 8461 2338 5B220000 		.4byte	0x225b
 8462 233c 05       		.uleb128 0x5
 8463 233d 03       		.byte	0x3
 8464 233e 1C020000 		.4byte	uxSchedulerSuspended
 8465 2342 37       		.uleb128 0x37
 8466 2343 88190000 		.4byte	.LASF373
 8467 2347 10       		.byte	0x10
 8468 2348 EA07     		.2byte	0x7ea
 8469 234a 4E230000 		.4byte	0x234e
 8470 234e 08       		.uleb128 0x8
 8471 234f E0000000 		.4byte	0xe0
 8472 2353 37       		.uleb128 0x37
 8473 2354 28120000 		.4byte	.LASF374
 8474 2358 0B       		.byte	0xb
 8475 2359 2202     		.2byte	0x222
 8476 235b 75060000 		.4byte	0x675
 8477 235f 11       		.uleb128 0x11
 8478 2360 44060000 		.4byte	0x644
 8479 2364 6F230000 		.4byte	0x236f
 8480 2368 12       		.uleb128 0x12
 8481 2369 A9000000 		.4byte	0xa9
 8482 236d 00       		.byte	0
 8483 236e 00       		.byte	0
 8484 236f 37       		.uleb128 0x37
 8485 2370 E4020000 		.4byte	.LASF375
 8486 2374 0B       		.byte	0xb
 8487 2375 2C02     		.2byte	0x22c
 8488 2377 5F230000 		.4byte	0x235f
 8489 237b 11       		.uleb128 0x11
 8490 237c BD060000 		.4byte	0x6bd
 8491 2380 8B230000 		.4byte	0x238b
 8492 2384 12       		.uleb128 0x12
 8493 2385 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 249


 8494 2389 00       		.byte	0
 8495 238a 00       		.byte	0
 8496 238b 37       		.uleb128 0x37
 8497 238c 0C000000 		.4byte	.LASF376
 8498 2390 0B       		.byte	0xb
 8499 2391 2D02     		.2byte	0x22d
 8500 2393 7B230000 		.4byte	0x237b
 8501 2397 38       		.uleb128 0x38
 8502 2398 4E010000 		.4byte	.LASF377
 8503 239c 11       		.byte	0x11
 8504 239d 5E       		.byte	0x5e
 8505 239e C7010000 		.4byte	0x1c7
 8506 23a2 37       		.uleb128 0x37
 8507 23a3 431F0000 		.4byte	.LASF378
 8508 23a7 0C       		.byte	0xc
 8509 23a8 6001     		.2byte	0x160
 8510 23aa EB000000 		.4byte	0xeb
 8511 23ae 11       		.uleb128 0x11
 8512 23af BE230000 		.4byte	0x23be
 8513 23b3 BE230000 		.4byte	0x23be
 8514 23b7 12       		.uleb128 0x12
 8515 23b8 A9000000 		.4byte	0xa9
 8516 23bc 00       		.byte	0
 8517 23bd 00       		.byte	0
 8518 23be 07       		.uleb128 0x7
 8519 23bf 18070000 		.4byte	0x718
 8520 23c3 37       		.uleb128 0x37
 8521 23c4 0C190000 		.4byte	.LASF379
 8522 23c8 0C       		.byte	0xc
 8523 23c9 6401     		.2byte	0x164
 8524 23cb CF230000 		.4byte	0x23cf
 8525 23cf 07       		.uleb128 0x7
 8526 23d0 AE230000 		.4byte	0x23ae
 8527 23d4 39       		.uleb128 0x39
 8528 23d5 C7170000 		.4byte	.LASF380
 8529 23d9 01       		.byte	0x1
 8530 23da 7401     		.2byte	0x174
 8531 23dc E6230000 		.4byte	0x23e6
 8532 23e0 05       		.uleb128 0x5
 8533 23e1 03       		.byte	0x3
 8534 23e2 00000000 		.4byte	pxCurrentTCB
 8535 23e6 08       		.uleb128 0x8
 8536 23e7 870A0000 		.4byte	0xa87
 8537 23eb 3A       		.uleb128 0x3a
 8538 23ec C11A0000 		.4byte	.LASF381
 8539 23f0 C11A0000 		.4byte	.LASF381
 8540 23f4 12       		.byte	0x12
 8541 23f5 AC       		.byte	0xac
 8542 23f6 3A       		.uleb128 0x3a
 8543 23f7 41140000 		.4byte	.LASF382
 8544 23fb 41140000 		.4byte	.LASF382
 8545 23ff 13       		.byte	0x13
 8546 2400 19       		.byte	0x19
 8547 2401 3B       		.uleb128 0x3b
 8548 2402 1B190000 		.4byte	.LASF383
 8549 2406 1B190000 		.4byte	.LASF383
 8550 240a 0E       		.byte	0xe
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 250


 8551 240b 8D01     		.2byte	0x18d
 8552 240d 3A       		.uleb128 0x3a
 8553 240e 79120000 		.4byte	.LASF384
 8554 2412 79120000 		.4byte	.LASF384
 8555 2416 12       		.byte	0x12
 8556 2417 90       		.byte	0x90
 8557 2418 3B       		.uleb128 0x3b
 8558 2419 AA1D0000 		.4byte	.LASF385
 8559 241d AA1D0000 		.4byte	.LASF385
 8560 2421 0E       		.byte	0xe
 8561 2422 8201     		.2byte	0x182
 8562 2424 3A       		.uleb128 0x3a
 8563 2425 32050000 		.4byte	.LASF386
 8564 2429 32050000 		.4byte	.LASF386
 8565 242d 02       		.byte	0x2
 8566 242e 8D       		.byte	0x8d
 8567 242f 3B       		.uleb128 0x3b
 8568 2430 480D0000 		.4byte	.LASF387
 8569 2434 480D0000 		.4byte	.LASF387
 8570 2438 0E       		.byte	0xe
 8571 2439 AF01     		.2byte	0x1af
 8572 243b 3A       		.uleb128 0x3a
 8573 243c B3000000 		.4byte	.LASF388
 8574 2440 B3000000 		.4byte	.LASF388
 8575 2444 02       		.byte	0x2
 8576 2445 8E       		.byte	0x8e
 8577 2446 3B       		.uleb128 0x3b
 8578 2447 AC1C0000 		.4byte	.LASF389
 8579 244b AC1C0000 		.4byte	.LASF389
 8580 244f 0E       		.byte	0xe
 8581 2450 BE01     		.2byte	0x1be
 8582 2452 3B       		.uleb128 0x3b
 8583 2453 00000000 		.4byte	.LASF390
 8584 2457 00000000 		.4byte	.LASF390
 8585 245b 0E       		.byte	0xe
 8586 245c 9A01     		.2byte	0x19a
 8587 245e 3A       		.uleb128 0x3a
 8588 245f DA210000 		.4byte	.LASF391
 8589 2463 DA210000 		.4byte	.LASF391
 8590 2467 12       		.byte	0x12
 8591 2468 AB       		.byte	0xab
 8592 2469 3A       		.uleb128 0x3a
 8593 246a BA1D0000 		.4byte	.LASF392
 8594 246e BA1D0000 		.4byte	.LASF392
 8595 2472 02       		.byte	0x2
 8596 2473 9F       		.byte	0x9f
 8597 2474 3B       		.uleb128 0x3b
 8598 2475 3F070000 		.4byte	.LASF393
 8599 2479 3F070000 		.4byte	.LASF393
 8600 247d 14       		.byte	0x14
 8601 247e 1905     		.2byte	0x519
 8602 2480 3A       		.uleb128 0x3a
 8603 2481 63010000 		.4byte	.LASF394
 8604 2485 63010000 		.4byte	.LASF394
 8605 2489 12       		.byte	0x12
 8606 248a B5       		.byte	0xb5
 8607 248b 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 251


 8608 248c AF1A0000 		.4byte	.LASF395
 8609 2490 AF1A0000 		.4byte	.LASF395
 8610 2494 12       		.byte	0x12
 8611 2495 BC       		.byte	0xbc
 8612 2496 3B       		.uleb128 0x3b
 8613 2497 9A050000 		.4byte	.LASF396
 8614 249b 9A050000 		.4byte	.LASF396
 8615 249f 01       		.byte	0x1
 8616 24a0 760C     		.2byte	0xc76
 8617 24a2 3B       		.uleb128 0x3b
 8618 24a3 B6180000 		.4byte	.LASF397
 8619 24a7 B6180000 		.4byte	.LASF397
 8620 24ab 01       		.byte	0x1
 8621 24ac AE01     		.2byte	0x1ae
 8622 24ae 00       		.byte	0
 8623              		.section	.debug_abbrev,"",%progbits
 8624              	.Ldebug_abbrev0:
 8625 0000 01       		.uleb128 0x1
 8626 0001 11       		.uleb128 0x11
 8627 0002 01       		.byte	0x1
 8628 0003 25       		.uleb128 0x25
 8629 0004 0E       		.uleb128 0xe
 8630 0005 13       		.uleb128 0x13
 8631 0006 0B       		.uleb128 0xb
 8632 0007 03       		.uleb128 0x3
 8633 0008 0E       		.uleb128 0xe
 8634 0009 1B       		.uleb128 0x1b
 8635 000a 0E       		.uleb128 0xe
 8636 000b 55       		.uleb128 0x55
 8637 000c 17       		.uleb128 0x17
 8638 000d 11       		.uleb128 0x11
 8639 000e 01       		.uleb128 0x1
 8640 000f 10       		.uleb128 0x10
 8641 0010 17       		.uleb128 0x17
 8642 0011 00       		.byte	0
 8643 0012 00       		.byte	0
 8644 0013 02       		.uleb128 0x2
 8645 0014 16       		.uleb128 0x16
 8646 0015 00       		.byte	0
 8647 0016 03       		.uleb128 0x3
 8648 0017 0E       		.uleb128 0xe
 8649 0018 3A       		.uleb128 0x3a
 8650 0019 0B       		.uleb128 0xb
 8651 001a 3B       		.uleb128 0x3b
 8652 001b 0B       		.uleb128 0xb
 8653 001c 49       		.uleb128 0x49
 8654 001d 13       		.uleb128 0x13
 8655 001e 00       		.byte	0
 8656 001f 00       		.byte	0
 8657 0020 03       		.uleb128 0x3
 8658 0021 24       		.uleb128 0x24
 8659 0022 00       		.byte	0
 8660 0023 0B       		.uleb128 0xb
 8661 0024 0B       		.uleb128 0xb
 8662 0025 3E       		.uleb128 0x3e
 8663 0026 0B       		.uleb128 0xb
 8664 0027 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 252


 8665 0028 0E       		.uleb128 0xe
 8666 0029 00       		.byte	0
 8667 002a 00       		.byte	0
 8668 002b 04       		.uleb128 0x4
 8669 002c 24       		.uleb128 0x24
 8670 002d 00       		.byte	0
 8671 002e 0B       		.uleb128 0xb
 8672 002f 0B       		.uleb128 0xb
 8673 0030 3E       		.uleb128 0x3e
 8674 0031 0B       		.uleb128 0xb
 8675 0032 03       		.uleb128 0x3
 8676 0033 08       		.uleb128 0x8
 8677 0034 00       		.byte	0
 8678 0035 00       		.byte	0
 8679 0036 05       		.uleb128 0x5
 8680 0037 0F       		.uleb128 0xf
 8681 0038 00       		.byte	0
 8682 0039 0B       		.uleb128 0xb
 8683 003a 0B       		.uleb128 0xb
 8684 003b 00       		.byte	0
 8685 003c 00       		.byte	0
 8686 003d 06       		.uleb128 0x6
 8687 003e 0F       		.uleb128 0xf
 8688 003f 00       		.byte	0
 8689 0040 0B       		.uleb128 0xb
 8690 0041 0B       		.uleb128 0xb
 8691 0042 49       		.uleb128 0x49
 8692 0043 13       		.uleb128 0x13
 8693 0044 00       		.byte	0
 8694 0045 00       		.byte	0
 8695 0046 07       		.uleb128 0x7
 8696 0047 26       		.uleb128 0x26
 8697 0048 00       		.byte	0
 8698 0049 49       		.uleb128 0x49
 8699 004a 13       		.uleb128 0x13
 8700 004b 00       		.byte	0
 8701 004c 00       		.byte	0
 8702 004d 08       		.uleb128 0x8
 8703 004e 35       		.uleb128 0x35
 8704 004f 00       		.byte	0
 8705 0050 49       		.uleb128 0x49
 8706 0051 13       		.uleb128 0x13
 8707 0052 00       		.byte	0
 8708 0053 00       		.byte	0
 8709 0054 09       		.uleb128 0x9
 8710 0055 16       		.uleb128 0x16
 8711 0056 00       		.byte	0
 8712 0057 03       		.uleb128 0x3
 8713 0058 0E       		.uleb128 0xe
 8714 0059 3A       		.uleb128 0x3a
 8715 005a 0B       		.uleb128 0xb
 8716 005b 3B       		.uleb128 0x3b
 8717 005c 05       		.uleb128 0x5
 8718 005d 49       		.uleb128 0x49
 8719 005e 13       		.uleb128 0x13
 8720 005f 00       		.byte	0
 8721 0060 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 253


 8722 0061 0A       		.uleb128 0xa
 8723 0062 15       		.uleb128 0x15
 8724 0063 01       		.byte	0x1
 8725 0064 27       		.uleb128 0x27
 8726 0065 19       		.uleb128 0x19
 8727 0066 01       		.uleb128 0x1
 8728 0067 13       		.uleb128 0x13
 8729 0068 00       		.byte	0
 8730 0069 00       		.byte	0
 8731 006a 0B       		.uleb128 0xb
 8732 006b 05       		.uleb128 0x5
 8733 006c 00       		.byte	0
 8734 006d 49       		.uleb128 0x49
 8735 006e 13       		.uleb128 0x13
 8736 006f 00       		.byte	0
 8737 0070 00       		.byte	0
 8738 0071 0C       		.uleb128 0xc
 8739 0072 13       		.uleb128 0x13
 8740 0073 01       		.byte	0x1
 8741 0074 03       		.uleb128 0x3
 8742 0075 0E       		.uleb128 0xe
 8743 0076 0B       		.uleb128 0xb
 8744 0077 0B       		.uleb128 0xb
 8745 0078 3A       		.uleb128 0x3a
 8746 0079 0B       		.uleb128 0xb
 8747 007a 3B       		.uleb128 0x3b
 8748 007b 05       		.uleb128 0x5
 8749 007c 01       		.uleb128 0x1
 8750 007d 13       		.uleb128 0x13
 8751 007e 00       		.byte	0
 8752 007f 00       		.byte	0
 8753 0080 0D       		.uleb128 0xd
 8754 0081 0D       		.uleb128 0xd
 8755 0082 00       		.byte	0
 8756 0083 03       		.uleb128 0x3
 8757 0084 0E       		.uleb128 0xe
 8758 0085 3A       		.uleb128 0x3a
 8759 0086 0B       		.uleb128 0xb
 8760 0087 3B       		.uleb128 0x3b
 8761 0088 05       		.uleb128 0x5
 8762 0089 49       		.uleb128 0x49
 8763 008a 13       		.uleb128 0x13
 8764 008b 38       		.uleb128 0x38
 8765 008c 0B       		.uleb128 0xb
 8766 008d 00       		.byte	0
 8767 008e 00       		.byte	0
 8768 008f 0E       		.uleb128 0xe
 8769 0090 04       		.uleb128 0x4
 8770 0091 01       		.byte	0x1
 8771 0092 0B       		.uleb128 0xb
 8772 0093 0B       		.uleb128 0xb
 8773 0094 49       		.uleb128 0x49
 8774 0095 13       		.uleb128 0x13
 8775 0096 3A       		.uleb128 0x3a
 8776 0097 0B       		.uleb128 0xb
 8777 0098 3B       		.uleb128 0x3b
 8778 0099 05       		.uleb128 0x5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 254


 8779 009a 01       		.uleb128 0x1
 8780 009b 13       		.uleb128 0x13
 8781 009c 00       		.byte	0
 8782 009d 00       		.byte	0
 8783 009e 0F       		.uleb128 0xf
 8784 009f 28       		.uleb128 0x28
 8785 00a0 00       		.byte	0
 8786 00a1 03       		.uleb128 0x3
 8787 00a2 0E       		.uleb128 0xe
 8788 00a3 1C       		.uleb128 0x1c
 8789 00a4 0B       		.uleb128 0xb
 8790 00a5 00       		.byte	0
 8791 00a6 00       		.byte	0
 8792 00a7 10       		.uleb128 0x10
 8793 00a8 13       		.uleb128 0x13
 8794 00a9 01       		.byte	0x1
 8795 00aa 0B       		.uleb128 0xb
 8796 00ab 0B       		.uleb128 0xb
 8797 00ac 3A       		.uleb128 0x3a
 8798 00ad 0B       		.uleb128 0xb
 8799 00ae 3B       		.uleb128 0x3b
 8800 00af 05       		.uleb128 0x5
 8801 00b0 01       		.uleb128 0x1
 8802 00b1 13       		.uleb128 0x13
 8803 00b2 00       		.byte	0
 8804 00b3 00       		.byte	0
 8805 00b4 11       		.uleb128 0x11
 8806 00b5 01       		.uleb128 0x1
 8807 00b6 01       		.byte	0x1
 8808 00b7 49       		.uleb128 0x49
 8809 00b8 13       		.uleb128 0x13
 8810 00b9 01       		.uleb128 0x1
 8811 00ba 13       		.uleb128 0x13
 8812 00bb 00       		.byte	0
 8813 00bc 00       		.byte	0
 8814 00bd 12       		.uleb128 0x12
 8815 00be 21       		.uleb128 0x21
 8816 00bf 00       		.byte	0
 8817 00c0 49       		.uleb128 0x49
 8818 00c1 13       		.uleb128 0x13
 8819 00c2 2F       		.uleb128 0x2f
 8820 00c3 0B       		.uleb128 0xb
 8821 00c4 00       		.byte	0
 8822 00c5 00       		.byte	0
 8823 00c6 13       		.uleb128 0x13
 8824 00c7 28       		.uleb128 0x28
 8825 00c8 00       		.byte	0
 8826 00c9 03       		.uleb128 0x3
 8827 00ca 0E       		.uleb128 0xe
 8828 00cb 1C       		.uleb128 0x1c
 8829 00cc 05       		.uleb128 0x5
 8830 00cd 00       		.byte	0
 8831 00ce 00       		.byte	0
 8832 00cf 14       		.uleb128 0x14
 8833 00d0 04       		.uleb128 0x4
 8834 00d1 01       		.byte	0x1
 8835 00d2 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 255


 8836 00d3 0B       		.uleb128 0xb
 8837 00d4 49       		.uleb128 0x49
 8838 00d5 13       		.uleb128 0x13
 8839 00d6 3A       		.uleb128 0x3a
 8840 00d7 0B       		.uleb128 0xb
 8841 00d8 3B       		.uleb128 0x3b
 8842 00d9 0B       		.uleb128 0xb
 8843 00da 01       		.uleb128 0x1
 8844 00db 13       		.uleb128 0x13
 8845 00dc 00       		.byte	0
 8846 00dd 00       		.byte	0
 8847 00de 15       		.uleb128 0x15
 8848 00df 13       		.uleb128 0x13
 8849 00e0 01       		.byte	0x1
 8850 00e1 0B       		.uleb128 0xb
 8851 00e2 0B       		.uleb128 0xb
 8852 00e3 3A       		.uleb128 0x3a
 8853 00e4 0B       		.uleb128 0xb
 8854 00e5 3B       		.uleb128 0x3b
 8855 00e6 0B       		.uleb128 0xb
 8856 00e7 01       		.uleb128 0x1
 8857 00e8 13       		.uleb128 0x13
 8858 00e9 00       		.byte	0
 8859 00ea 00       		.byte	0
 8860 00eb 16       		.uleb128 0x16
 8861 00ec 0D       		.uleb128 0xd
 8862 00ed 00       		.byte	0
 8863 00ee 03       		.uleb128 0x3
 8864 00ef 0E       		.uleb128 0xe
 8865 00f0 3A       		.uleb128 0x3a
 8866 00f1 0B       		.uleb128 0xb
 8867 00f2 3B       		.uleb128 0x3b
 8868 00f3 0B       		.uleb128 0xb
 8869 00f4 49       		.uleb128 0x49
 8870 00f5 13       		.uleb128 0x13
 8871 00f6 38       		.uleb128 0x38
 8872 00f7 0B       		.uleb128 0xb
 8873 00f8 00       		.byte	0
 8874 00f9 00       		.byte	0
 8875 00fa 17       		.uleb128 0x17
 8876 00fb 13       		.uleb128 0x13
 8877 00fc 01       		.byte	0x1
 8878 00fd 03       		.uleb128 0x3
 8879 00fe 0E       		.uleb128 0xe
 8880 00ff 0B       		.uleb128 0xb
 8881 0100 0B       		.uleb128 0xb
 8882 0101 3A       		.uleb128 0x3a
 8883 0102 0B       		.uleb128 0xb
 8884 0103 3B       		.uleb128 0x3b
 8885 0104 0B       		.uleb128 0xb
 8886 0105 01       		.uleb128 0x1
 8887 0106 13       		.uleb128 0x13
 8888 0107 00       		.byte	0
 8889 0108 00       		.byte	0
 8890 0109 18       		.uleb128 0x18
 8891 010a 2E       		.uleb128 0x2e
 8892 010b 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 256


 8893 010c 03       		.uleb128 0x3
 8894 010d 0E       		.uleb128 0xe
 8895 010e 3A       		.uleb128 0x3a
 8896 010f 0B       		.uleb128 0xb
 8897 0110 3B       		.uleb128 0x3b
 8898 0111 0B       		.uleb128 0xb
 8899 0112 27       		.uleb128 0x27
 8900 0113 19       		.uleb128 0x19
 8901 0114 49       		.uleb128 0x49
 8902 0115 13       		.uleb128 0x13
 8903 0116 20       		.uleb128 0x20
 8904 0117 0B       		.uleb128 0xb
 8905 0118 01       		.uleb128 0x1
 8906 0119 13       		.uleb128 0x13
 8907 011a 00       		.byte	0
 8908 011b 00       		.byte	0
 8909 011c 19       		.uleb128 0x19
 8910 011d 34       		.uleb128 0x34
 8911 011e 00       		.byte	0
 8912 011f 03       		.uleb128 0x3
 8913 0120 0E       		.uleb128 0xe
 8914 0121 3A       		.uleb128 0x3a
 8915 0122 0B       		.uleb128 0xb
 8916 0123 3B       		.uleb128 0x3b
 8917 0124 0B       		.uleb128 0xb
 8918 0125 49       		.uleb128 0x49
 8919 0126 13       		.uleb128 0x13
 8920 0127 00       		.byte	0
 8921 0128 00       		.byte	0
 8922 0129 1A       		.uleb128 0x1a
 8923 012a 2E       		.uleb128 0x2e
 8924 012b 01       		.byte	0x1
 8925 012c 03       		.uleb128 0x3
 8926 012d 0E       		.uleb128 0xe
 8927 012e 3A       		.uleb128 0x3a
 8928 012f 0B       		.uleb128 0xb
 8929 0130 3B       		.uleb128 0x3b
 8930 0131 0B       		.uleb128 0xb
 8931 0132 27       		.uleb128 0x27
 8932 0133 19       		.uleb128 0x19
 8933 0134 20       		.uleb128 0x20
 8934 0135 0B       		.uleb128 0xb
 8935 0136 01       		.uleb128 0x1
 8936 0137 13       		.uleb128 0x13
 8937 0138 00       		.byte	0
 8938 0139 00       		.byte	0
 8939 013a 1B       		.uleb128 0x1b
 8940 013b 05       		.uleb128 0x5
 8941 013c 00       		.byte	0
 8942 013d 03       		.uleb128 0x3
 8943 013e 0E       		.uleb128 0xe
 8944 013f 3A       		.uleb128 0x3a
 8945 0140 0B       		.uleb128 0xb
 8946 0141 3B       		.uleb128 0x3b
 8947 0142 0B       		.uleb128 0xb
 8948 0143 49       		.uleb128 0x49
 8949 0144 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 257


 8950 0145 00       		.byte	0
 8951 0146 00       		.byte	0
 8952 0147 1C       		.uleb128 0x1c
 8953 0148 2E       		.uleb128 0x2e
 8954 0149 01       		.byte	0x1
 8955 014a 03       		.uleb128 0x3
 8956 014b 0E       		.uleb128 0xe
 8957 014c 3A       		.uleb128 0x3a
 8958 014d 0B       		.uleb128 0xb
 8959 014e 3B       		.uleb128 0x3b
 8960 014f 05       		.uleb128 0x5
 8961 0150 27       		.uleb128 0x27
 8962 0151 19       		.uleb128 0x19
 8963 0152 49       		.uleb128 0x49
 8964 0153 13       		.uleb128 0x13
 8965 0154 11       		.uleb128 0x11
 8966 0155 01       		.uleb128 0x1
 8967 0156 12       		.uleb128 0x12
 8968 0157 06       		.uleb128 0x6
 8969 0158 40       		.uleb128 0x40
 8970 0159 18       		.uleb128 0x18
 8971 015a 9742     		.uleb128 0x2117
 8972 015c 19       		.uleb128 0x19
 8973 015d 01       		.uleb128 0x1
 8974 015e 13       		.uleb128 0x13
 8975 015f 00       		.byte	0
 8976 0160 00       		.byte	0
 8977 0161 1D       		.uleb128 0x1d
 8978 0162 05       		.uleb128 0x5
 8979 0163 00       		.byte	0
 8980 0164 03       		.uleb128 0x3
 8981 0165 0E       		.uleb128 0xe
 8982 0166 3A       		.uleb128 0x3a
 8983 0167 0B       		.uleb128 0xb
 8984 0168 3B       		.uleb128 0x3b
 8985 0169 05       		.uleb128 0x5
 8986 016a 49       		.uleb128 0x49
 8987 016b 13       		.uleb128 0x13
 8988 016c 02       		.uleb128 0x2
 8989 016d 17       		.uleb128 0x17
 8990 016e 00       		.byte	0
 8991 016f 00       		.byte	0
 8992 0170 1E       		.uleb128 0x1e
 8993 0171 34       		.uleb128 0x34
 8994 0172 00       		.byte	0
 8995 0173 03       		.uleb128 0x3
 8996 0174 0E       		.uleb128 0xe
 8997 0175 3A       		.uleb128 0x3a
 8998 0176 0B       		.uleb128 0xb
 8999 0177 3B       		.uleb128 0x3b
 9000 0178 05       		.uleb128 0x5
 9001 0179 49       		.uleb128 0x49
 9002 017a 13       		.uleb128 0x13
 9003 017b 02       		.uleb128 0x2
 9004 017c 17       		.uleb128 0x17
 9005 017d 00       		.byte	0
 9006 017e 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 258


 9007 017f 1F       		.uleb128 0x1f
 9008 0180 2E       		.uleb128 0x2e
 9009 0181 01       		.byte	0x1
 9010 0182 03       		.uleb128 0x3
 9011 0183 0E       		.uleb128 0xe
 9012 0184 3A       		.uleb128 0x3a
 9013 0185 0B       		.uleb128 0xb
 9014 0186 3B       		.uleb128 0x3b
 9015 0187 05       		.uleb128 0x5
 9016 0188 27       		.uleb128 0x27
 9017 0189 19       		.uleb128 0x19
 9018 018a 11       		.uleb128 0x11
 9019 018b 01       		.uleb128 0x1
 9020 018c 12       		.uleb128 0x12
 9021 018d 06       		.uleb128 0x6
 9022 018e 40       		.uleb128 0x40
 9023 018f 18       		.uleb128 0x18
 9024 0190 9742     		.uleb128 0x2117
 9025 0192 19       		.uleb128 0x19
 9026 0193 01       		.uleb128 0x1
 9027 0194 13       		.uleb128 0x13
 9028 0195 00       		.byte	0
 9029 0196 00       		.byte	0
 9030 0197 20       		.uleb128 0x20
 9031 0198 898201   		.uleb128 0x4109
 9032 019b 00       		.byte	0
 9033 019c 11       		.uleb128 0x11
 9034 019d 01       		.uleb128 0x1
 9035 019e 31       		.uleb128 0x31
 9036 019f 13       		.uleb128 0x13
 9037 01a0 00       		.byte	0
 9038 01a1 00       		.byte	0
 9039 01a2 21       		.uleb128 0x21
 9040 01a3 898201   		.uleb128 0x4109
 9041 01a6 01       		.byte	0x1
 9042 01a7 11       		.uleb128 0x11
 9043 01a8 01       		.uleb128 0x1
 9044 01a9 31       		.uleb128 0x31
 9045 01aa 13       		.uleb128 0x13
 9046 01ab 00       		.byte	0
 9047 01ac 00       		.byte	0
 9048 01ad 22       		.uleb128 0x22
 9049 01ae 8A8201   		.uleb128 0x410a
 9050 01b1 00       		.byte	0
 9051 01b2 02       		.uleb128 0x2
 9052 01b3 18       		.uleb128 0x18
 9053 01b4 9142     		.uleb128 0x2111
 9054 01b6 18       		.uleb128 0x18
 9055 01b7 00       		.byte	0
 9056 01b8 00       		.byte	0
 9057 01b9 23       		.uleb128 0x23
 9058 01ba 05       		.uleb128 0x5
 9059 01bb 00       		.byte	0
 9060 01bc 03       		.uleb128 0x3
 9061 01bd 0E       		.uleb128 0xe
 9062 01be 3A       		.uleb128 0x3a
 9063 01bf 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 259


 9064 01c0 3B       		.uleb128 0x3b
 9065 01c1 05       		.uleb128 0x5
 9066 01c2 49       		.uleb128 0x49
 9067 01c3 13       		.uleb128 0x13
 9068 01c4 02       		.uleb128 0x2
 9069 01c5 18       		.uleb128 0x18
 9070 01c6 00       		.byte	0
 9071 01c7 00       		.byte	0
 9072 01c8 24       		.uleb128 0x24
 9073 01c9 34       		.uleb128 0x34
 9074 01ca 00       		.byte	0
 9075 01cb 03       		.uleb128 0x3
 9076 01cc 0E       		.uleb128 0xe
 9077 01cd 3A       		.uleb128 0x3a
 9078 01ce 0B       		.uleb128 0xb
 9079 01cf 3B       		.uleb128 0x3b
 9080 01d0 05       		.uleb128 0x5
 9081 01d1 49       		.uleb128 0x49
 9082 01d2 13       		.uleb128 0x13
 9083 01d3 02       		.uleb128 0x2
 9084 01d4 18       		.uleb128 0x18
 9085 01d5 00       		.byte	0
 9086 01d6 00       		.byte	0
 9087 01d7 25       		.uleb128 0x25
 9088 01d8 34       		.uleb128 0x34
 9089 01d9 00       		.byte	0
 9090 01da 03       		.uleb128 0x3
 9091 01db 08       		.uleb128 0x8
 9092 01dc 3A       		.uleb128 0x3a
 9093 01dd 0B       		.uleb128 0xb
 9094 01de 3B       		.uleb128 0x3b
 9095 01df 05       		.uleb128 0x5
 9096 01e0 49       		.uleb128 0x49
 9097 01e1 13       		.uleb128 0x13
 9098 01e2 02       		.uleb128 0x2
 9099 01e3 17       		.uleb128 0x17
 9100 01e4 00       		.byte	0
 9101 01e5 00       		.byte	0
 9102 01e6 26       		.uleb128 0x26
 9103 01e7 898201   		.uleb128 0x4109
 9104 01ea 01       		.byte	0x1
 9105 01eb 11       		.uleb128 0x11
 9106 01ec 01       		.uleb128 0x1
 9107 01ed 31       		.uleb128 0x31
 9108 01ee 13       		.uleb128 0x13
 9109 01ef 01       		.uleb128 0x1
 9110 01f0 13       		.uleb128 0x13
 9111 01f1 00       		.byte	0
 9112 01f2 00       		.byte	0
 9113 01f3 27       		.uleb128 0x27
 9114 01f4 2E       		.uleb128 0x2e
 9115 01f5 01       		.byte	0x1
 9116 01f6 3F       		.uleb128 0x3f
 9117 01f7 19       		.uleb128 0x19
 9118 01f8 03       		.uleb128 0x3
 9119 01f9 0E       		.uleb128 0xe
 9120 01fa 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 260


 9121 01fb 0B       		.uleb128 0xb
 9122 01fc 3B       		.uleb128 0x3b
 9123 01fd 05       		.uleb128 0x5
 9124 01fe 27       		.uleb128 0x27
 9125 01ff 19       		.uleb128 0x19
 9126 0200 49       		.uleb128 0x49
 9127 0201 13       		.uleb128 0x13
 9128 0202 11       		.uleb128 0x11
 9129 0203 01       		.uleb128 0x1
 9130 0204 12       		.uleb128 0x12
 9131 0205 06       		.uleb128 0x6
 9132 0206 40       		.uleb128 0x40
 9133 0207 18       		.uleb128 0x18
 9134 0208 9742     		.uleb128 0x2117
 9135 020a 19       		.uleb128 0x19
 9136 020b 01       		.uleb128 0x1
 9137 020c 13       		.uleb128 0x13
 9138 020d 00       		.byte	0
 9139 020e 00       		.byte	0
 9140 020f 28       		.uleb128 0x28
 9141 0210 0B       		.uleb128 0xb
 9142 0211 01       		.byte	0x1
 9143 0212 11       		.uleb128 0x11
 9144 0213 01       		.uleb128 0x1
 9145 0214 12       		.uleb128 0x12
 9146 0215 06       		.uleb128 0x6
 9147 0216 01       		.uleb128 0x1
 9148 0217 13       		.uleb128 0x13
 9149 0218 00       		.byte	0
 9150 0219 00       		.byte	0
 9151 021a 29       		.uleb128 0x29
 9152 021b 2E       		.uleb128 0x2e
 9153 021c 01       		.byte	0x1
 9154 021d 3F       		.uleb128 0x3f
 9155 021e 19       		.uleb128 0x19
 9156 021f 03       		.uleb128 0x3
 9157 0220 0E       		.uleb128 0xe
 9158 0221 3A       		.uleb128 0x3a
 9159 0222 0B       		.uleb128 0xb
 9160 0223 3B       		.uleb128 0x3b
 9161 0224 05       		.uleb128 0x5
 9162 0225 27       		.uleb128 0x27
 9163 0226 19       		.uleb128 0x19
 9164 0227 11       		.uleb128 0x11
 9165 0228 01       		.uleb128 0x1
 9166 0229 12       		.uleb128 0x12
 9167 022a 06       		.uleb128 0x6
 9168 022b 40       		.uleb128 0x40
 9169 022c 18       		.uleb128 0x18
 9170 022d 9742     		.uleb128 0x2117
 9171 022f 19       		.uleb128 0x19
 9172 0230 01       		.uleb128 0x1
 9173 0231 13       		.uleb128 0x13
 9174 0232 00       		.byte	0
 9175 0233 00       		.byte	0
 9176 0234 2A       		.uleb128 0x2a
 9177 0235 34       		.uleb128 0x34
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 261


 9178 0236 00       		.byte	0
 9179 0237 03       		.uleb128 0x3
 9180 0238 0E       		.uleb128 0xe
 9181 0239 3A       		.uleb128 0x3a
 9182 023a 0B       		.uleb128 0xb
 9183 023b 3B       		.uleb128 0x3b
 9184 023c 05       		.uleb128 0x5
 9185 023d 49       		.uleb128 0x49
 9186 023e 13       		.uleb128 0x13
 9187 023f 00       		.byte	0
 9188 0240 00       		.byte	0
 9189 0241 2B       		.uleb128 0x2b
 9190 0242 1D       		.uleb128 0x1d
 9191 0243 01       		.byte	0x1
 9192 0244 31       		.uleb128 0x31
 9193 0245 13       		.uleb128 0x13
 9194 0246 11       		.uleb128 0x11
 9195 0247 01       		.uleb128 0x1
 9196 0248 12       		.uleb128 0x12
 9197 0249 06       		.uleb128 0x6
 9198 024a 58       		.uleb128 0x58
 9199 024b 0B       		.uleb128 0xb
 9200 024c 59       		.uleb128 0x59
 9201 024d 05       		.uleb128 0x5
 9202 024e 01       		.uleb128 0x1
 9203 024f 13       		.uleb128 0x13
 9204 0250 00       		.byte	0
 9205 0251 00       		.byte	0
 9206 0252 2C       		.uleb128 0x2c
 9207 0253 0B       		.uleb128 0xb
 9208 0254 01       		.byte	0x1
 9209 0255 11       		.uleb128 0x11
 9210 0256 01       		.uleb128 0x1
 9211 0257 12       		.uleb128 0x12
 9212 0258 06       		.uleb128 0x6
 9213 0259 00       		.byte	0
 9214 025a 00       		.byte	0
 9215 025b 2D       		.uleb128 0x2d
 9216 025c 34       		.uleb128 0x34
 9217 025d 00       		.byte	0
 9218 025e 31       		.uleb128 0x31
 9219 025f 13       		.uleb128 0x13
 9220 0260 00       		.byte	0
 9221 0261 00       		.byte	0
 9222 0262 2E       		.uleb128 0x2e
 9223 0263 05       		.uleb128 0x5
 9224 0264 00       		.byte	0
 9225 0265 31       		.uleb128 0x31
 9226 0266 13       		.uleb128 0x13
 9227 0267 02       		.uleb128 0x2
 9228 0268 17       		.uleb128 0x17
 9229 0269 00       		.byte	0
 9230 026a 00       		.byte	0
 9231 026b 2F       		.uleb128 0x2f
 9232 026c 2E       		.uleb128 0x2e
 9233 026d 00       		.byte	0
 9234 026e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 262


 9235 026f 19       		.uleb128 0x19
 9236 0270 03       		.uleb128 0x3
 9237 0271 0E       		.uleb128 0xe
 9238 0272 3A       		.uleb128 0x3a
 9239 0273 0B       		.uleb128 0xb
 9240 0274 3B       		.uleb128 0x3b
 9241 0275 05       		.uleb128 0x5
 9242 0276 27       		.uleb128 0x27
 9243 0277 19       		.uleb128 0x19
 9244 0278 11       		.uleb128 0x11
 9245 0279 01       		.uleb128 0x1
 9246 027a 12       		.uleb128 0x12
 9247 027b 06       		.uleb128 0x6
 9248 027c 40       		.uleb128 0x40
 9249 027d 18       		.uleb128 0x18
 9250 027e 9742     		.uleb128 0x2117
 9251 0280 19       		.uleb128 0x19
 9252 0281 00       		.byte	0
 9253 0282 00       		.byte	0
 9254 0283 30       		.uleb128 0x30
 9255 0284 34       		.uleb128 0x34
 9256 0285 00       		.byte	0
 9257 0286 03       		.uleb128 0x3
 9258 0287 0E       		.uleb128 0xe
 9259 0288 3A       		.uleb128 0x3a
 9260 0289 0B       		.uleb128 0xb
 9261 028a 3B       		.uleb128 0x3b
 9262 028b 05       		.uleb128 0x5
 9263 028c 49       		.uleb128 0x49
 9264 028d 13       		.uleb128 0x13
 9265 028e 1C       		.uleb128 0x1c
 9266 028f 0B       		.uleb128 0xb
 9267 0290 00       		.byte	0
 9268 0291 00       		.byte	0
 9269 0292 31       		.uleb128 0x31
 9270 0293 2E       		.uleb128 0x2e
 9271 0294 00       		.byte	0
 9272 0295 3F       		.uleb128 0x3f
 9273 0296 19       		.uleb128 0x19
 9274 0297 03       		.uleb128 0x3
 9275 0298 0E       		.uleb128 0xe
 9276 0299 3A       		.uleb128 0x3a
 9277 029a 0B       		.uleb128 0xb
 9278 029b 3B       		.uleb128 0x3b
 9279 029c 05       		.uleb128 0x5
 9280 029d 27       		.uleb128 0x27
 9281 029e 19       		.uleb128 0x19
 9282 029f 49       		.uleb128 0x49
 9283 02a0 13       		.uleb128 0x13
 9284 02a1 11       		.uleb128 0x11
 9285 02a2 01       		.uleb128 0x1
 9286 02a3 12       		.uleb128 0x12
 9287 02a4 06       		.uleb128 0x6
 9288 02a5 40       		.uleb128 0x40
 9289 02a6 18       		.uleb128 0x18
 9290 02a7 9742     		.uleb128 0x2117
 9291 02a9 19       		.uleb128 0x19
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 263


 9292 02aa 00       		.byte	0
 9293 02ab 00       		.byte	0
 9294 02ac 32       		.uleb128 0x32
 9295 02ad 0B       		.uleb128 0xb
 9296 02ae 01       		.byte	0x1
 9297 02af 55       		.uleb128 0x55
 9298 02b0 17       		.uleb128 0x17
 9299 02b1 00       		.byte	0
 9300 02b2 00       		.byte	0
 9301 02b3 33       		.uleb128 0x33
 9302 02b4 0B       		.uleb128 0xb
 9303 02b5 01       		.byte	0x1
 9304 02b6 55       		.uleb128 0x55
 9305 02b7 17       		.uleb128 0x17
 9306 02b8 01       		.uleb128 0x1
 9307 02b9 13       		.uleb128 0x13
 9308 02ba 00       		.byte	0
 9309 02bb 00       		.byte	0
 9310 02bc 34       		.uleb128 0x34
 9311 02bd 2E       		.uleb128 0x2e
 9312 02be 01       		.byte	0x1
 9313 02bf 03       		.uleb128 0x3
 9314 02c0 0E       		.uleb128 0xe
 9315 02c1 3A       		.uleb128 0x3a
 9316 02c2 0B       		.uleb128 0xb
 9317 02c3 3B       		.uleb128 0x3b
 9318 02c4 05       		.uleb128 0x5
 9319 02c5 27       		.uleb128 0x27
 9320 02c6 19       		.uleb128 0x19
 9321 02c7 8701     		.uleb128 0x87
 9322 02c9 19       		.uleb128 0x19
 9323 02ca 11       		.uleb128 0x11
 9324 02cb 01       		.uleb128 0x1
 9325 02cc 12       		.uleb128 0x12
 9326 02cd 06       		.uleb128 0x6
 9327 02ce 40       		.uleb128 0x40
 9328 02cf 18       		.uleb128 0x18
 9329 02d0 9742     		.uleb128 0x2117
 9330 02d2 19       		.uleb128 0x19
 9331 02d3 01       		.uleb128 0x1
 9332 02d4 13       		.uleb128 0x13
 9333 02d5 00       		.byte	0
 9334 02d6 00       		.byte	0
 9335 02d7 35       		.uleb128 0x35
 9336 02d8 2E       		.uleb128 0x2e
 9337 02d9 00       		.byte	0
 9338 02da 3F       		.uleb128 0x3f
 9339 02db 19       		.uleb128 0x19
 9340 02dc 03       		.uleb128 0x3
 9341 02dd 0E       		.uleb128 0xe
 9342 02de 3A       		.uleb128 0x3a
 9343 02df 0B       		.uleb128 0xb
 9344 02e0 3B       		.uleb128 0x3b
 9345 02e1 05       		.uleb128 0x5
 9346 02e2 27       		.uleb128 0x27
 9347 02e3 19       		.uleb128 0x19
 9348 02e4 3C       		.uleb128 0x3c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 264


 9349 02e5 19       		.uleb128 0x19
 9350 02e6 00       		.byte	0
 9351 02e7 00       		.byte	0
 9352 02e8 36       		.uleb128 0x36
 9353 02e9 34       		.uleb128 0x34
 9354 02ea 00       		.byte	0
 9355 02eb 03       		.uleb128 0x3
 9356 02ec 0E       		.uleb128 0xe
 9357 02ed 3A       		.uleb128 0x3a
 9358 02ee 0B       		.uleb128 0xb
 9359 02ef 3B       		.uleb128 0x3b
 9360 02f0 05       		.uleb128 0x5
 9361 02f1 49       		.uleb128 0x49
 9362 02f2 13       		.uleb128 0x13
 9363 02f3 1C       		.uleb128 0x1c
 9364 02f4 0D       		.uleb128 0xd
 9365 02f5 00       		.byte	0
 9366 02f6 00       		.byte	0
 9367 02f7 37       		.uleb128 0x37
 9368 02f8 34       		.uleb128 0x34
 9369 02f9 00       		.byte	0
 9370 02fa 03       		.uleb128 0x3
 9371 02fb 0E       		.uleb128 0xe
 9372 02fc 3A       		.uleb128 0x3a
 9373 02fd 0B       		.uleb128 0xb
 9374 02fe 3B       		.uleb128 0x3b
 9375 02ff 05       		.uleb128 0x5
 9376 0300 49       		.uleb128 0x49
 9377 0301 13       		.uleb128 0x13
 9378 0302 3F       		.uleb128 0x3f
 9379 0303 19       		.uleb128 0x19
 9380 0304 3C       		.uleb128 0x3c
 9381 0305 19       		.uleb128 0x19
 9382 0306 00       		.byte	0
 9383 0307 00       		.byte	0
 9384 0308 38       		.uleb128 0x38
 9385 0309 34       		.uleb128 0x34
 9386 030a 00       		.byte	0
 9387 030b 03       		.uleb128 0x3
 9388 030c 0E       		.uleb128 0xe
 9389 030d 3A       		.uleb128 0x3a
 9390 030e 0B       		.uleb128 0xb
 9391 030f 3B       		.uleb128 0x3b
 9392 0310 0B       		.uleb128 0xb
 9393 0311 49       		.uleb128 0x49
 9394 0312 13       		.uleb128 0x13
 9395 0313 3F       		.uleb128 0x3f
 9396 0314 19       		.uleb128 0x19
 9397 0315 3C       		.uleb128 0x3c
 9398 0316 19       		.uleb128 0x19
 9399 0317 00       		.byte	0
 9400 0318 00       		.byte	0
 9401 0319 39       		.uleb128 0x39
 9402 031a 34       		.uleb128 0x34
 9403 031b 00       		.byte	0
 9404 031c 03       		.uleb128 0x3
 9405 031d 0E       		.uleb128 0xe
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 265


 9406 031e 3A       		.uleb128 0x3a
 9407 031f 0B       		.uleb128 0xb
 9408 0320 3B       		.uleb128 0x3b
 9409 0321 05       		.uleb128 0x5
 9410 0322 49       		.uleb128 0x49
 9411 0323 13       		.uleb128 0x13
 9412 0324 3F       		.uleb128 0x3f
 9413 0325 19       		.uleb128 0x19
 9414 0326 02       		.uleb128 0x2
 9415 0327 18       		.uleb128 0x18
 9416 0328 00       		.byte	0
 9417 0329 00       		.byte	0
 9418 032a 3A       		.uleb128 0x3a
 9419 032b 2E       		.uleb128 0x2e
 9420 032c 00       		.byte	0
 9421 032d 3F       		.uleb128 0x3f
 9422 032e 19       		.uleb128 0x19
 9423 032f 3C       		.uleb128 0x3c
 9424 0330 19       		.uleb128 0x19
 9425 0331 6E       		.uleb128 0x6e
 9426 0332 0E       		.uleb128 0xe
 9427 0333 03       		.uleb128 0x3
 9428 0334 0E       		.uleb128 0xe
 9429 0335 3A       		.uleb128 0x3a
 9430 0336 0B       		.uleb128 0xb
 9431 0337 3B       		.uleb128 0x3b
 9432 0338 0B       		.uleb128 0xb
 9433 0339 00       		.byte	0
 9434 033a 00       		.byte	0
 9435 033b 3B       		.uleb128 0x3b
 9436 033c 2E       		.uleb128 0x2e
 9437 033d 00       		.byte	0
 9438 033e 3F       		.uleb128 0x3f
 9439 033f 19       		.uleb128 0x19
 9440 0340 3C       		.uleb128 0x3c
 9441 0341 19       		.uleb128 0x19
 9442 0342 6E       		.uleb128 0x6e
 9443 0343 0E       		.uleb128 0xe
 9444 0344 03       		.uleb128 0x3
 9445 0345 0E       		.uleb128 0xe
 9446 0346 3A       		.uleb128 0x3a
 9447 0347 0B       		.uleb128 0xb
 9448 0348 3B       		.uleb128 0x3b
 9449 0349 05       		.uleb128 0x5
 9450 034a 00       		.byte	0
 9451 034b 00       		.byte	0
 9452 034c 00       		.byte	0
 9453              		.section	.debug_loc,"",%progbits
 9454              	.Ldebug_loc0:
 9455              	.LLST0:
 9456 0000 00000000 		.4byte	.LVL0
 9457 0004 28000000 		.4byte	.LVL1
 9458 0008 0100     		.2byte	0x1
 9459 000a 50       		.byte	0x50
 9460 000b 28000000 		.4byte	.LVL1
 9461 000f 2A000000 		.4byte	.LVL2
 9462 0013 0400     		.2byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 266


 9463 0015 F3       		.byte	0xf3
 9464 0016 01       		.uleb128 0x1
 9465 0017 50       		.byte	0x50
 9466 0018 9F       		.byte	0x9f
 9467 0019 2A000000 		.4byte	.LVL2
 9468 001d 2C000000 		.4byte	.LVL3
 9469 0021 0100     		.2byte	0x1
 9470 0023 50       		.byte	0x50
 9471 0024 2C000000 		.4byte	.LVL3
 9472 0028 2E000000 		.4byte	.LVL4
 9473 002c 0100     		.2byte	0x1
 9474 002e 52       		.byte	0x52
 9475 002f 2E000000 		.4byte	.LVL4
 9476 0033 30000000 		.4byte	.LVL5
 9477 0037 0100     		.2byte	0x1
 9478 0039 50       		.byte	0x50
 9479 003a 30000000 		.4byte	.LVL5
 9480 003e 32000000 		.4byte	.LVL6
 9481 0042 0400     		.2byte	0x4
 9482 0044 F3       		.byte	0xf3
 9483 0045 01       		.uleb128 0x1
 9484 0046 50       		.byte	0x50
 9485 0047 9F       		.byte	0x9f
 9486 0048 32000000 		.4byte	.LVL6
 9487 004c 34000000 		.4byte	.LVL7
 9488 0050 0100     		.2byte	0x1
 9489 0052 50       		.byte	0x50
 9490 0053 34000000 		.4byte	.LVL7
 9491 0057 40000000 		.4byte	.LFE537
 9492 005b 0400     		.2byte	0x4
 9493 005d F3       		.byte	0xf3
 9494 005e 01       		.uleb128 0x1
 9495 005f 50       		.byte	0x50
 9496 0060 9F       		.byte	0x9f
 9497 0061 00000000 		.4byte	0
 9498 0065 00000000 		.4byte	0
 9499              	.LLST1:
 9500 0069 00000000 		.4byte	.LVL0
 9501 006d 34000000 		.4byte	.LVL7
 9502 0071 0200     		.2byte	0x2
 9503 0073 30       		.byte	0x30
 9504 0074 9F       		.byte	0x9f
 9505 0075 34000000 		.4byte	.LVL7
 9506 0079 40000000 		.4byte	.LFE537
 9507 007d 0100     		.2byte	0x1
 9508 007f 50       		.byte	0x50
 9509 0080 00000000 		.4byte	0
 9510 0084 00000000 		.4byte	0
 9511              	.LLST2:
 9512 0088 00000000 		.4byte	.LVL0
 9513 008c 28000000 		.4byte	.LVL1
 9514 0090 0100     		.2byte	0x1
 9515 0092 50       		.byte	0x50
 9516 0093 28000000 		.4byte	.LVL1
 9517 0097 2A000000 		.4byte	.LVL2
 9518 009b 0400     		.2byte	0x4
 9519 009d F3       		.byte	0xf3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 267


 9520 009e 01       		.uleb128 0x1
 9521 009f 50       		.byte	0x50
 9522 00a0 9F       		.byte	0x9f
 9523 00a1 2A000000 		.4byte	.LVL2
 9524 00a5 2C000000 		.4byte	.LVL3
 9525 00a9 0100     		.2byte	0x1
 9526 00ab 50       		.byte	0x50
 9527 00ac 2C000000 		.4byte	.LVL3
 9528 00b0 2E000000 		.4byte	.LVL4
 9529 00b4 0100     		.2byte	0x1
 9530 00b6 52       		.byte	0x52
 9531 00b7 2E000000 		.4byte	.LVL4
 9532 00bb 30000000 		.4byte	.LVL5
 9533 00bf 0100     		.2byte	0x1
 9534 00c1 50       		.byte	0x50
 9535 00c2 30000000 		.4byte	.LVL5
 9536 00c6 32000000 		.4byte	.LVL6
 9537 00ca 0400     		.2byte	0x4
 9538 00cc F3       		.byte	0xf3
 9539 00cd 01       		.uleb128 0x1
 9540 00ce 50       		.byte	0x50
 9541 00cf 9F       		.byte	0x9f
 9542 00d0 32000000 		.4byte	.LVL6
 9543 00d4 34000000 		.4byte	.LVL7
 9544 00d8 0100     		.2byte	0x1
 9545 00da 50       		.byte	0x50
 9546 00db 34000000 		.4byte	.LVL7
 9547 00df 40000000 		.4byte	.LFE537
 9548 00e3 0400     		.2byte	0x4
 9549 00e5 F3       		.byte	0xf3
 9550 00e6 01       		.uleb128 0x1
 9551 00e7 50       		.byte	0x50
 9552 00e8 9F       		.byte	0x9f
 9553 00e9 00000000 		.4byte	0
 9554 00ed 00000000 		.4byte	0
 9555              	.LLST3:
 9556 00f1 22000000 		.4byte	.LVL8
 9557 00f5 24000000 		.4byte	.LVL9
 9558 00f9 0100     		.2byte	0x1
 9559 00fb 52       		.byte	0x52
 9560 00fc 00000000 		.4byte	0
 9561 0100 00000000 		.4byte	0
 9562              	.LLST4:
 9563 0104 00000000 		.4byte	.LVL10
 9564 0108 06000000 		.4byte	.LVL11
 9565 010c 0100     		.2byte	0x1
 9566 010e 50       		.byte	0x50
 9567 010f 06000000 		.4byte	.LVL11
 9568 0113 12000000 		.4byte	.LFE563
 9569 0117 0100     		.2byte	0x1
 9570 0119 54       		.byte	0x54
 9571 011a 00000000 		.4byte	0
 9572 011e 00000000 		.4byte	0
 9573              	.LLST5:
 9574 0122 00000000 		.4byte	.LVL14
 9575 0126 18000000 		.4byte	.LVL17
 9576 012a 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 268


 9577 012c 50       		.byte	0x50
 9578 012d 18000000 		.4byte	.LVL17
 9579 0131 9E000000 		.4byte	.LFE528
 9580 0135 0100     		.2byte	0x1
 9581 0137 5A       		.byte	0x5a
 9582 0138 00000000 		.4byte	0
 9583 013c 00000000 		.4byte	0
 9584              	.LLST6:
 9585 0140 00000000 		.4byte	.LVL14
 9586 0144 16000000 		.4byte	.LVL16
 9587 0148 0100     		.2byte	0x1
 9588 014a 51       		.byte	0x51
 9589 014b 16000000 		.4byte	.LVL16
 9590 014f 9E000000 		.4byte	.LFE528
 9591 0153 0100     		.2byte	0x1
 9592 0155 59       		.byte	0x59
 9593 0156 00000000 		.4byte	0
 9594 015a 00000000 		.4byte	0
 9595              	.LLST7:
 9596 015e 00000000 		.4byte	.LVL14
 9597 0162 14000000 		.4byte	.LVL15
 9598 0166 0100     		.2byte	0x1
 9599 0168 52       		.byte	0x52
 9600 0169 14000000 		.4byte	.LVL15
 9601 016d 28000000 		.4byte	.LVL19
 9602 0171 0100     		.2byte	0x1
 9603 0173 55       		.byte	0x55
 9604 0174 28000000 		.4byte	.LVL19
 9605 0178 30000000 		.4byte	.LVL21
 9606 017c 0700     		.2byte	0x7
 9607 017e 72       		.byte	0x72
 9608 017f 81808080 		.sleb128 -1073741823
 9608      7C
 9609 0184 9F       		.byte	0x9f
 9610 0185 30000000 		.4byte	.LVL21
 9611 0189 9E000000 		.4byte	.LFE528
 9612 018d 0400     		.2byte	0x4
 9613 018f F3       		.byte	0xf3
 9614 0190 01       		.uleb128 0x1
 9615 0191 52       		.byte	0x52
 9616 0192 9F       		.byte	0x9f
 9617 0193 00000000 		.4byte	0
 9618 0197 00000000 		.4byte	0
 9619              	.LLST8:
 9620 019b 00000000 		.4byte	.LVL14
 9621 019f 1B000000 		.4byte	.LVL18-1
 9622 01a3 0100     		.2byte	0x1
 9623 01a5 53       		.byte	0x53
 9624 01a6 1B000000 		.4byte	.LVL18-1
 9625 01aa 9E000000 		.4byte	.LFE528
 9626 01ae 0100     		.2byte	0x1
 9627 01b0 58       		.byte	0x58
 9628 01b1 00000000 		.4byte	0
 9629 01b5 00000000 		.4byte	0
 9630              	.LLST9:
 9631 01b9 00000000 		.4byte	.LVL14
 9632 01bd 52000000 		.4byte	.LVL24
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 269


 9633 01c1 0200     		.2byte	0x2
 9634 01c3 91       		.byte	0x91
 9635 01c4 00       		.sleb128 0
 9636 01c5 52000000 		.4byte	.LVL24
 9637 01c9 9E000000 		.4byte	.LFE528
 9638 01cd 0100     		.2byte	0x1
 9639 01cf 57       		.byte	0x57
 9640 01d0 00000000 		.4byte	0
 9641 01d4 00000000 		.4byte	0
 9642              	.LLST10:
 9643 01d8 30000000 		.4byte	.LVL21
 9644 01dc 48000000 		.4byte	.LVL23
 9645 01e0 0100     		.2byte	0x1
 9646 01e2 53       		.byte	0x53
 9647 01e3 6C000000 		.4byte	.LVL27
 9648 01e7 70000000 		.4byte	.LVL28
 9649 01eb 0200     		.2byte	0x2
 9650 01ed 30       		.byte	0x30
 9651 01ee 9F       		.byte	0x9f
 9652 01ef 70000000 		.4byte	.LVL28
 9653 01f3 84000000 		.4byte	.LVL30
 9654 01f7 0100     		.2byte	0x1
 9655 01f9 53       		.byte	0x53
 9656 01fa 00000000 		.4byte	0
 9657 01fe 00000000 		.4byte	0
 9658              	.LLST11:
 9659 0202 02000000 		.4byte	.LVL32
 9660 0206 06000000 		.4byte	.LVL33
 9661 020a 0200     		.2byte	0x2
 9662 020c 30       		.byte	0x30
 9663 020d 9F       		.byte	0x9f
 9664 020e 06000000 		.4byte	.LVL33
 9665 0212 1C000000 		.4byte	.LVL36
 9666 0216 0100     		.2byte	0x1
 9667 0218 54       		.byte	0x54
 9668 0219 00000000 		.4byte	0
 9669 021d 00000000 		.4byte	0
 9670              	.LLST12:
 9671 0221 00000000 		.4byte	.LVL42
 9672 0225 07000000 		.4byte	.LVL43-1
 9673 0229 0100     		.2byte	0x1
 9674 022b 50       		.byte	0x50
 9675 022c 07000000 		.4byte	.LVL43-1
 9676 0230 A2000000 		.4byte	.LVL47
 9677 0234 0100     		.2byte	0x1
 9678 0236 54       		.byte	0x54
 9679 0237 A2000000 		.4byte	.LVL47
 9680 023b AC000000 		.4byte	.LFE529
 9681 023f 0400     		.2byte	0x4
 9682 0241 F3       		.byte	0xf3
 9683 0242 01       		.uleb128 0x1
 9684 0243 50       		.byte	0x50
 9685 0244 9F       		.byte	0x9f
 9686 0245 00000000 		.4byte	0
 9687 0249 00000000 		.4byte	0
 9688              	.LLST13:
 9689 024d 00000000 		.4byte	.LVL48
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 270


 9690 0251 10000000 		.4byte	.LVL50
 9691 0255 0100     		.2byte	0x1
 9692 0257 50       		.byte	0x50
 9693 0258 10000000 		.4byte	.LVL50
 9694 025c 2E000000 		.4byte	.LVL54
 9695 0260 0100     		.2byte	0x1
 9696 0262 54       		.byte	0x54
 9697 0263 2E000000 		.4byte	.LVL54
 9698 0267 68000000 		.4byte	.LFE574
 9699 026b 0400     		.2byte	0x4
 9700 026d F3       		.byte	0xf3
 9701 026e 01       		.uleb128 0x1
 9702 026f 50       		.byte	0x50
 9703 0270 9F       		.byte	0x9f
 9704 0271 00000000 		.4byte	0
 9705 0275 00000000 		.4byte	0
 9706              	.LLST14:
 9707 0279 00000000 		.4byte	.LVL48
 9708 027d 15000000 		.4byte	.LVL51-1
 9709 0281 0100     		.2byte	0x1
 9710 0283 51       		.byte	0x51
 9711 0284 15000000 		.4byte	.LVL51-1
 9712 0288 64000000 		.4byte	.LVL59
 9713 028c 0100     		.2byte	0x1
 9714 028e 56       		.byte	0x56
 9715 028f 64000000 		.4byte	.LVL59
 9716 0293 68000000 		.4byte	.LFE574
 9717 0297 0400     		.2byte	0x4
 9718 0299 F3       		.byte	0xf3
 9719 029a 01       		.uleb128 0x1
 9720 029b 51       		.byte	0x51
 9721 029c 9F       		.byte	0x9f
 9722 029d 00000000 		.4byte	0
 9723 02a1 00000000 		.4byte	0
 9724              	.LLST15:
 9725 02a5 2E000000 		.4byte	.LVL54
 9726 02a9 64000000 		.4byte	.LVL59
 9727 02ad 0100     		.2byte	0x1
 9728 02af 54       		.byte	0x54
 9729 02b0 00000000 		.4byte	0
 9730 02b4 00000000 		.4byte	0
 9731              	.LLST16:
 9732 02b8 0C000000 		.4byte	.LVL49
 9733 02bc 4E000000 		.4byte	.LVL57
 9734 02c0 0100     		.2byte	0x1
 9735 02c2 55       		.byte	0x55
 9736 02c3 00000000 		.4byte	0
 9737 02c7 00000000 		.4byte	0
 9738              	.LLST17:
 9739 02cb 00000000 		.4byte	.LVL60
 9740 02cf 10000000 		.4byte	.LVL61
 9741 02d3 0100     		.2byte	0x1
 9742 02d5 50       		.byte	0x50
 9743 02d6 10000000 		.4byte	.LVL61
 9744 02da 62000000 		.4byte	.LFE527
 9745 02de 0100     		.2byte	0x1
 9746 02e0 56       		.byte	0x56
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 271


 9747 02e1 00000000 		.4byte	0
 9748 02e5 00000000 		.4byte	0
 9749              	.LLST18:
 9750 02e9 00000000 		.4byte	.LVL60
 9751 02ed 13000000 		.4byte	.LVL62-1
 9752 02f1 0100     		.2byte	0x1
 9753 02f3 51       		.byte	0x51
 9754 02f4 13000000 		.4byte	.LVL62-1
 9755 02f8 62000000 		.4byte	.LFE527
 9756 02fc 0100     		.2byte	0x1
 9757 02fe 57       		.byte	0x57
 9758 02ff 00000000 		.4byte	0
 9759 0303 00000000 		.4byte	0
 9760              	.LLST19:
 9761 0307 00000000 		.4byte	.LVL60
 9762 030b 13000000 		.4byte	.LVL62-1
 9763 030f 0100     		.2byte	0x1
 9764 0311 52       		.byte	0x52
 9765 0312 13000000 		.4byte	.LVL62-1
 9766 0316 62000000 		.4byte	.LFE527
 9767 031a 0400     		.2byte	0x4
 9768 031c F3       		.byte	0xf3
 9769 031d 01       		.uleb128 0x1
 9770 031e 52       		.byte	0x52
 9771 031f 9F       		.byte	0x9f
 9772 0320 00000000 		.4byte	0
 9773 0324 00000000 		.4byte	0
 9774              	.LLST20:
 9775 0328 00000000 		.4byte	.LVL60
 9776 032c 13000000 		.4byte	.LVL62-1
 9777 0330 0100     		.2byte	0x1
 9778 0332 53       		.byte	0x53
 9779 0333 13000000 		.4byte	.LVL62-1
 9780 0337 62000000 		.4byte	.LFE527
 9781 033b 0100     		.2byte	0x1
 9782 033d 58       		.byte	0x58
 9783 033e 00000000 		.4byte	0
 9784 0342 00000000 		.4byte	0
 9785              	.LLST21:
 9786 0346 1E000000 		.4byte	.LVL64
 9787 034a 2A000000 		.4byte	.LVL65
 9788 034e 0100     		.2byte	0x1
 9789 0350 50       		.byte	0x50
 9790 0351 2A000000 		.4byte	.LVL65
 9791 0355 30000000 		.4byte	.LVL67
 9792 0359 0100     		.2byte	0x1
 9793 035b 54       		.byte	0x54
 9794 035c 32000000 		.4byte	.LVL68
 9795 0360 62000000 		.4byte	.LFE527
 9796 0364 0100     		.2byte	0x1
 9797 0366 54       		.byte	0x54
 9798 0367 00000000 		.4byte	0
 9799 036b 00000000 		.4byte	0
 9800              	.LLST22:
 9801 036f 54000000 		.4byte	.LVL70
 9802 0373 58000000 		.4byte	.LVL71
 9803 0377 0200     		.2byte	0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 272


 9804 0379 31       		.byte	0x31
 9805 037a 9F       		.byte	0x9f
 9806 037b 5C000000 		.4byte	.LVL72
 9807 037f 62000000 		.4byte	.LFE527
 9808 0383 0100     		.2byte	0x1
 9809 0385 50       		.byte	0x50
 9810 0386 00000000 		.4byte	0
 9811 038a 00000000 		.4byte	0
 9812              	.LLST23:
 9813 038e 14000000 		.4byte	.LVL62
 9814 0392 1A000000 		.4byte	.LVL63
 9815 0396 0100     		.2byte	0x1
 9816 0398 50       		.byte	0x50
 9817 0399 1A000000 		.4byte	.LVL63
 9818 039d 30000000 		.4byte	.LVL67
 9819 03a1 0100     		.2byte	0x1
 9820 03a3 59       		.byte	0x59
 9821 03a4 30000000 		.4byte	.LVL67
 9822 03a8 32000000 		.4byte	.LVL68
 9823 03ac 0100     		.2byte	0x1
 9824 03ae 50       		.byte	0x50
 9825 03af 00000000 		.4byte	0
 9826 03b3 00000000 		.4byte	0
 9827              	.LLST24:
 9828 03b7 00000000 		.4byte	.LVL73
 9829 03bb 07000000 		.4byte	.LVL74-1
 9830 03bf 0100     		.2byte	0x1
 9831 03c1 50       		.byte	0x50
 9832 03c2 07000000 		.4byte	.LVL74-1
 9833 03c6 10000000 		.4byte	.LVL75
 9834 03ca 0100     		.2byte	0x1
 9835 03cc 54       		.byte	0x54
 9836 03cd 00000000 		.4byte	0
 9837 03d1 00000000 		.4byte	0
 9838              	.LLST25:
 9839 03d5 10000000 		.4byte	.LVL75
 9840 03d9 9A000000 		.4byte	.LVL82
 9841 03dd 0100     		.2byte	0x1
 9842 03df 54       		.byte	0x54
 9843 03e0 00000000 		.4byte	0
 9844 03e4 00000000 		.4byte	0
 9845              	.LLST26:
 9846 03e8 00000000 		.4byte	.LVL83
 9847 03ec 07000000 		.4byte	.LVL84-1
 9848 03f0 0100     		.2byte	0x1
 9849 03f2 50       		.byte	0x50
 9850 03f3 07000000 		.4byte	.LVL84-1
 9851 03f7 10000000 		.4byte	.LVL85
 9852 03fb 0100     		.2byte	0x1
 9853 03fd 54       		.byte	0x54
 9854 03fe 00000000 		.4byte	0
 9855 0402 00000000 		.4byte	0
 9856              	.LLST27:
 9857 0406 10000000 		.4byte	.LVL85
 9858 040a 12000000 		.4byte	.LVL86
 9859 040e 0100     		.2byte	0x1
 9860 0410 54       		.byte	0x54
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 273


 9861 0411 00000000 		.4byte	0
 9862 0415 00000000 		.4byte	0
 9863              	.LLST28:
 9864 0419 12000000 		.4byte	.LVL86
 9865 041d 1A000000 		.4byte	.LVL88
 9866 0421 0100     		.2byte	0x1
 9867 0423 54       		.byte	0x54
 9868 0424 1A000000 		.4byte	.LVL88
 9869 0428 20000000 		.4byte	.LFE533
 9870 042c 0100     		.2byte	0x1
 9871 042e 50       		.byte	0x50
 9872 042f 00000000 		.4byte	0
 9873 0433 00000000 		.4byte	0
 9874              	.LLST29:
 9875 0437 00000000 		.4byte	.LVL89
 9876 043b 07000000 		.4byte	.LVL90-1
 9877 043f 0100     		.2byte	0x1
 9878 0441 50       		.byte	0x50
 9879 0442 07000000 		.4byte	.LVL90-1
 9880 0446 24000000 		.4byte	.LVL91
 9881 044a 0100     		.2byte	0x1
 9882 044c 54       		.byte	0x54
 9883 044d 00000000 		.4byte	0
 9884 0451 00000000 		.4byte	0
 9885              	.LLST30:
 9886 0455 24000000 		.4byte	.LVL91
 9887 0459 2C000000 		.4byte	.LVL94
 9888 045d 0100     		.2byte	0x1
 9889 045f 54       		.byte	0x54
 9890 0460 00000000 		.4byte	0
 9891 0464 00000000 		.4byte	0
 9892              	.LLST31:
 9893 0468 26000000 		.4byte	.LVL92
 9894 046c 2A000000 		.4byte	.LVL93
 9895 0470 0100     		.2byte	0x1
 9896 0472 53       		.byte	0x53
 9897 0473 00000000 		.4byte	0
 9898 0477 00000000 		.4byte	0
 9899              	.LLST32:
 9900 047b 00000000 		.4byte	.LVL95
 9901 047f 17000000 		.4byte	.LVL97-1
 9902 0483 0100     		.2byte	0x1
 9903 0485 50       		.byte	0x50
 9904 0486 17000000 		.4byte	.LVL97-1
 9905 048a 20000000 		.4byte	.LVL98
 9906 048e 0100     		.2byte	0x1
 9907 0490 54       		.byte	0x54
 9908 0491 00000000 		.4byte	0
 9909 0495 00000000 		.4byte	0
 9910              	.LLST33:
 9911 0499 00000000 		.4byte	.LVL95
 9912 049d 14000000 		.4byte	.LVL96
 9913 04a1 0100     		.2byte	0x1
 9914 04a3 51       		.byte	0x51
 9915 04a4 14000000 		.4byte	.LVL96
 9916 04a8 66000000 		.4byte	.LVL101
 9917 04ac 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 274


 9918 04ae 55       		.byte	0x55
 9919 04af 66000000 		.4byte	.LVL101
 9920 04b3 87000000 		.4byte	.LVL103-1
 9921 04b7 0200     		.2byte	0x2
 9922 04b9 74       		.byte	0x74
 9923 04ba 2C       		.sleb128 44
 9924 04bb 00000000 		.4byte	0
 9925 04bf 00000000 		.4byte	0
 9926              	.LLST34:
 9927 04c3 20000000 		.4byte	.LVL98
 9928 04c7 C2000000 		.4byte	.LVL107
 9929 04cb 0100     		.2byte	0x1
 9930 04cd 54       		.byte	0x54
 9931 04ce 00000000 		.4byte	0
 9932 04d2 00000000 		.4byte	0
 9933              	.LLST35:
 9934 04d6 22000000 		.4byte	.LVL99
 9935 04da 6E000000 		.4byte	.LVL102
 9936 04de 0100     		.2byte	0x1
 9937 04e0 53       		.byte	0x53
 9938 04e1 00000000 		.4byte	0
 9939 04e5 00000000 		.4byte	0
 9940              	.LLST36:
 9941 04e9 5A000000 		.4byte	.LVL100
 9942 04ed 6E000000 		.4byte	.LVL102
 9943 04f1 0100     		.2byte	0x1
 9944 04f3 53       		.byte	0x53
 9945 04f4 00000000 		.4byte	0
 9946 04f8 00000000 		.4byte	0
 9947              	.LLST37:
 9948 04fc 00000000 		.4byte	.LVL95
 9949 0500 5A000000 		.4byte	.LVL100
 9950 0504 0200     		.2byte	0x2
 9951 0506 30       		.byte	0x30
 9952 0507 9F       		.byte	0x9f
 9953 0508 5A000000 		.4byte	.LVL100
 9954 050c BC000000 		.4byte	.LVL105
 9955 0510 0100     		.2byte	0x1
 9956 0512 56       		.byte	0x56
 9957 0513 00000000 		.4byte	0
 9958 0517 00000000 		.4byte	0
 9959              	.LLST38:
 9960 051b 00000000 		.4byte	.LVL108
 9961 051f 19000000 		.4byte	.LVL109-1
 9962 0523 0100     		.2byte	0x1
 9963 0525 50       		.byte	0x50
 9964 0526 19000000 		.4byte	.LVL109-1
 9965 052a 72000000 		.4byte	.LVL114
 9966 052e 0100     		.2byte	0x1
 9967 0530 54       		.byte	0x54
 9968 0531 72000000 		.4byte	.LVL114
 9969 0535 7C000000 		.4byte	.LFE538
 9970 0539 0400     		.2byte	0x4
 9971 053b F3       		.byte	0xf3
 9972 053c 01       		.uleb128 0x1
 9973 053d 50       		.byte	0x50
 9974 053e 9F       		.byte	0x9f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 275


 9975 053f 00000000 		.4byte	0
 9976 0543 00000000 		.4byte	0
 9977              	.LLST39:
 9978 0547 00000000 		.4byte	.LVL108
 9979 054b 19000000 		.4byte	.LVL109-1
 9980 054f 0100     		.2byte	0x1
 9981 0551 50       		.byte	0x50
 9982 0552 19000000 		.4byte	.LVL109-1
 9983 0556 72000000 		.4byte	.LVL114
 9984 055a 0100     		.2byte	0x1
 9985 055c 54       		.byte	0x54
 9986 055d 72000000 		.4byte	.LVL114
 9987 0561 7C000000 		.4byte	.LFE538
 9988 0565 0400     		.2byte	0x4
 9989 0567 F3       		.byte	0xf3
 9990 0568 01       		.uleb128 0x1
 9991 0569 50       		.byte	0x50
 9992 056a 9F       		.byte	0x9f
 9993 056b 00000000 		.4byte	0
 9994 056f 00000000 		.4byte	0
 9995              	.LLST40:
 9996 0573 00000000 		.4byte	.LVL115
 9997 0577 0D000000 		.4byte	.LVL116-1
 9998 057b 0100     		.2byte	0x1
 9999 057d 50       		.byte	0x50
 10000 057e 0D000000 		.4byte	.LVL116-1
 10001 0582 8A000000 		.4byte	.LVL125
 10002 0586 0100     		.2byte	0x1
 10003 0588 54       		.byte	0x54
 10004 0589 8A000000 		.4byte	.LVL125
 10005 058d 98000000 		.4byte	.LFE539
 10006 0591 0400     		.2byte	0x4
 10007 0593 F3       		.byte	0xf3
 10008 0594 01       		.uleb128 0x1
 10009 0595 50       		.byte	0x50
 10010 0596 9F       		.byte	0x9f
 10011 0597 00000000 		.4byte	0
 10012 059b 00000000 		.4byte	0
 10013              	.LLST41:
 10014 059f 00000000 		.4byte	.LVL115
 10015 05a3 46000000 		.4byte	.LVL118
 10016 05a7 0200     		.2byte	0x2
 10017 05a9 30       		.byte	0x30
 10018 05aa 9F       		.byte	0x9f
 10019 05ab 46000000 		.4byte	.LVL118
 10020 05af 72000000 		.4byte	.LVL121
 10021 05b3 0100     		.2byte	0x1
 10022 05b5 55       		.byte	0x55
 10023 05b6 72000000 		.4byte	.LVL121
 10024 05ba 82000000 		.4byte	.LVL123
 10025 05be 0200     		.2byte	0x2
 10026 05c0 30       		.byte	0x30
 10027 05c1 9F       		.byte	0x9f
 10028 05c2 82000000 		.4byte	.LVL123
 10029 05c6 8A000000 		.4byte	.LVL125
 10030 05ca 0100     		.2byte	0x1
 10031 05cc 55       		.byte	0x55
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 276


 10032 05cd 8A000000 		.4byte	.LVL125
 10033 05d1 98000000 		.4byte	.LFE539
 10034 05d5 0100     		.2byte	0x1
 10035 05d7 50       		.byte	0x50
 10036 05d8 00000000 		.4byte	0
 10037 05dc 00000000 		.4byte	0
 10038              	.LLST42:
 10039 05e0 00000000 		.4byte	.LVL115
 10040 05e4 0D000000 		.4byte	.LVL116-1
 10041 05e8 0100     		.2byte	0x1
 10042 05ea 50       		.byte	0x50
 10043 05eb 0D000000 		.4byte	.LVL116-1
 10044 05ef 8A000000 		.4byte	.LVL125
 10045 05f3 0100     		.2byte	0x1
 10046 05f5 54       		.byte	0x54
 10047 05f6 8A000000 		.4byte	.LVL125
 10048 05fa 98000000 		.4byte	.LFE539
 10049 05fe 0400     		.2byte	0x4
 10050 0600 F3       		.byte	0xf3
 10051 0601 01       		.uleb128 0x1
 10052 0602 50       		.byte	0x50
 10053 0603 9F       		.byte	0x9f
 10054 0604 00000000 		.4byte	0
 10055 0608 00000000 		.4byte	0
 10056              	.LLST43:
 10057 060c 82000000 		.4byte	.LVL123
 10058 0610 86000000 		.4byte	.LVL124
 10059 0614 0100     		.2byte	0x1
 10060 0616 57       		.byte	0x57
 10061 0617 00000000 		.4byte	0
 10062 061b 00000000 		.4byte	0
 10063              	.LLST44:
 10064 061f 16000000 		.4byte	.LVL126
 10065 0623 1D000000 		.4byte	.LVL127-1
 10066 0627 0100     		.2byte	0x1
 10067 0629 50       		.byte	0x50
 10068 062a 1E000000 		.4byte	.LVL127
 10069 062e 3B000000 		.4byte	.LVL128-1
 10070 0632 0100     		.2byte	0x1
 10071 0634 50       		.byte	0x50
 10072 0635 3E000000 		.4byte	.LVL129
 10073 0639 48000000 		.4byte	.LVL130
 10074 063d 0100     		.2byte	0x1
 10075 063f 50       		.byte	0x50
 10076 0640 00000000 		.4byte	0
 10077 0644 00000000 		.4byte	0
 10078              	.LLST45:
 10079 0648 00000000 		.4byte	.LVL135
 10080 064c 0A000000 		.4byte	.LVL136
 10081 0650 0100     		.2byte	0x1
 10082 0652 50       		.byte	0x50
 10083 0653 00000000 		.4byte	0
 10084 0657 00000000 		.4byte	0
 10085              	.LLST46:
 10086 065b 4E000000 		.4byte	.LVL143
 10087 065f 52000000 		.4byte	.LVL145
 10088 0663 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 277


 10089 0665 55       		.byte	0x55
 10090 0666 76000000 		.4byte	.LVL147
 10091 066a CC000000 		.4byte	.LVL152
 10092 066e 0100     		.2byte	0x1
 10093 0670 55       		.byte	0x55
 10094 0671 00000000 		.4byte	0
 10095 0675 00000000 		.4byte	0
 10096              	.LLST47:
 10097 0679 78000000 		.4byte	.LVL148
 10098 067d 8B000000 		.4byte	.LVL149-1
 10099 0681 0100     		.2byte	0x1
 10100 0683 53       		.byte	0x53
 10101 0684 00000000 		.4byte	0
 10102 0688 00000000 		.4byte	0
 10103              	.LLST48:
 10104 068c 04000000 		.4byte	.LVL137
 10105 0690 4E000000 		.4byte	.LVL143
 10106 0694 0200     		.2byte	0x2
 10107 0696 30       		.byte	0x30
 10108 0697 9F       		.byte	0x9f
 10109 0698 4E000000 		.4byte	.LVL143
 10110 069c 50000000 		.4byte	.LVL144
 10111 06a0 0100     		.2byte	0x1
 10112 06a2 56       		.byte	0x56
 10113 06a3 52000000 		.4byte	.LVL145
 10114 06a7 54000000 		.4byte	.LVL146
 10115 06ab 0200     		.2byte	0x2
 10116 06ad 30       		.byte	0x30
 10117 06ae 9F       		.byte	0x9f
 10118 06af 54000000 		.4byte	.LVL146
 10119 06b3 CC000000 		.4byte	.LVL152
 10120 06b7 0100     		.2byte	0x1
 10121 06b9 56       		.byte	0x56
 10122 06ba CC000000 		.4byte	.LVL152
 10123 06be DA000000 		.4byte	.LVL153
 10124 06c2 0200     		.2byte	0x2
 10125 06c4 30       		.byte	0x30
 10126 06c5 9F       		.byte	0x9f
 10127 06c6 DA000000 		.4byte	.LVL153
 10128 06ca EA000000 		.4byte	.LVL155
 10129 06ce 0100     		.2byte	0x1
 10130 06d0 56       		.byte	0x56
 10131 06d1 EA000000 		.4byte	.LVL155
 10132 06d5 F0000000 		.4byte	.LFE548
 10133 06d9 0100     		.2byte	0x1
 10134 06db 50       		.byte	0x50
 10135 06dc 00000000 		.4byte	0
 10136 06e0 00000000 		.4byte	0
 10137              	.LLST49:
 10138 06e4 16000000 		.4byte	.LVL138
 10139 06e8 CC000000 		.4byte	.LVL152
 10140 06ec 0100     		.2byte	0x1
 10141 06ee 54       		.byte	0x54
 10142 06ef 00000000 		.4byte	0
 10143 06f3 00000000 		.4byte	0
 10144              	.LLST50:
 10145 06f7 2A000000 		.4byte	.LVL139
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 278


 10146 06fb 38000000 		.4byte	.LVL140
 10147 06ff 0100     		.2byte	0x1
 10148 0701 52       		.byte	0x52
 10149 0702 38000000 		.4byte	.LVL140
 10150 0706 3E000000 		.4byte	.LVL141
 10151 070a 0500     		.2byte	0x5
 10152 070c 03       		.byte	0x3
 10153 070d FC010000 		.4byte	pxOverflowDelayedTaskList
 10154 0711 00000000 		.4byte	0
 10155 0715 00000000 		.4byte	0
 10156              	.LLST51:
 10157 0719 00000000 		.4byte	.LVL156
 10158 071d 32000000 		.4byte	.LVL158
 10159 0721 0200     		.2byte	0x2
 10160 0723 30       		.byte	0x30
 10161 0724 9F       		.byte	0x9f
 10162 0725 32000000 		.4byte	.LVL158
 10163 0729 7E000000 		.4byte	.LVL163
 10164 072d 0100     		.2byte	0x1
 10165 072f 54       		.byte	0x54
 10166 0730 7E000000 		.4byte	.LVL163
 10167 0734 80000000 		.4byte	.LVL164
 10168 0738 0200     		.2byte	0x2
 10169 073a 30       		.byte	0x30
 10170 073b 9F       		.byte	0x9f
 10171 073c 80000000 		.4byte	.LVL164
 10172 0740 94000000 		.4byte	.LVL166
 10173 0744 0100     		.2byte	0x1
 10174 0746 54       		.byte	0x54
 10175 0747 CC000000 		.4byte	.LVL172
 10176 074b D0000000 		.4byte	.LVL173
 10177 074f 0200     		.2byte	0x2
 10178 0751 30       		.byte	0x30
 10179 0752 9F       		.byte	0x9f
 10180 0753 00000000 		.4byte	0
 10181 0757 00000000 		.4byte	0
 10182              	.LLST52:
 10183 075b 00000000 		.4byte	.LVL156
 10184 075f B8000000 		.4byte	.LVL170
 10185 0763 0200     		.2byte	0x2
 10186 0765 30       		.byte	0x30
 10187 0766 9F       		.byte	0x9f
 10188 0767 B8000000 		.4byte	.LVL170
 10189 076b CC000000 		.4byte	.LVL172
 10190 076f 0200     		.2byte	0x2
 10191 0771 31       		.byte	0x31
 10192 0772 9F       		.byte	0x9f
 10193 0773 CC000000 		.4byte	.LVL172
 10194 0777 D2000000 		.4byte	.LVL174
 10195 077b 0200     		.2byte	0x2
 10196 077d 30       		.byte	0x30
 10197 077e 9F       		.byte	0x9f
 10198 077f D2000000 		.4byte	.LVL174
 10199 0783 DA000000 		.4byte	.LVL176
 10200 0787 0100     		.2byte	0x1
 10201 0789 54       		.byte	0x54
 10202 078a DA000000 		.4byte	.LVL176
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 279


 10203 078e E4000000 		.4byte	.LFE543
 10204 0792 0100     		.2byte	0x1
 10205 0794 50       		.byte	0x50
 10206 0795 00000000 		.4byte	0
 10207 0799 00000000 		.4byte	0
 10208              	.LLST53:
 10209 079d 94000000 		.4byte	.LVL166
 10210 07a1 A4000000 		.4byte	.LVL168
 10211 07a5 0100     		.2byte	0x1
 10212 07a7 54       		.byte	0x54
 10213 07a8 A4000000 		.4byte	.LVL168
 10214 07ac A6000000 		.4byte	.LVL169
 10215 07b0 0300     		.2byte	0x3
 10216 07b2 74       		.byte	0x74
 10217 07b3 7F       		.sleb128 -1
 10218 07b4 9F       		.byte	0x9f
 10219 07b5 A6000000 		.4byte	.LVL169
 10220 07b9 CA000000 		.4byte	.LVL171
 10221 07bd 0100     		.2byte	0x1
 10222 07bf 54       		.byte	0x54
 10223 07c0 D0000000 		.4byte	.LVL173
 10224 07c4 D2000000 		.4byte	.LVL174
 10225 07c8 0100     		.2byte	0x1
 10226 07ca 54       		.byte	0x54
 10227 07cb 00000000 		.4byte	0
 10228 07cf 00000000 		.4byte	0
 10229              	.LLST54:
 10230 07d3 00000000 		.4byte	.LVL177
 10231 07d7 21000000 		.4byte	.LVL178-1
 10232 07db 0100     		.2byte	0x1
 10233 07dd 50       		.byte	0x50
 10234 07de 21000000 		.4byte	.LVL178-1
 10235 07e2 7A000000 		.4byte	.LVL185
 10236 07e6 0100     		.2byte	0x1
 10237 07e8 55       		.byte	0x55
 10238 07e9 7A000000 		.4byte	.LVL185
 10239 07ed 84000000 		.4byte	.LFE531
 10240 07f1 0400     		.2byte	0x4
 10241 07f3 F3       		.byte	0xf3
 10242 07f4 01       		.uleb128 0x1
 10243 07f5 50       		.byte	0x50
 10244 07f6 9F       		.byte	0x9f
 10245 07f7 00000000 		.4byte	0
 10246 07fb 00000000 		.4byte	0
 10247              	.LLST55:
 10248 07ff 00000000 		.4byte	.LVL177
 10249 0803 21000000 		.4byte	.LVL178-1
 10250 0807 0100     		.2byte	0x1
 10251 0809 51       		.byte	0x51
 10252 080a 21000000 		.4byte	.LVL178-1
 10253 080e 7A000000 		.4byte	.LVL185
 10254 0812 0100     		.2byte	0x1
 10255 0814 54       		.byte	0x54
 10256 0815 7A000000 		.4byte	.LVL185
 10257 0819 84000000 		.4byte	.LFE531
 10258 081d 0400     		.2byte	0x4
 10259 081f F3       		.byte	0xf3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 280


 10260 0820 01       		.uleb128 0x1
 10261 0821 51       		.byte	0x51
 10262 0822 9F       		.byte	0x9f
 10263 0823 00000000 		.4byte	0
 10264 0827 00000000 		.4byte	0
 10265              	.LLST56:
 10266 082b 2C000000 		.4byte	.LVL180
 10267 082f 61000000 		.4byte	.LVL183-1
 10268 0833 0100     		.2byte	0x1
 10269 0835 53       		.byte	0x53
 10270 0836 00000000 		.4byte	0
 10271 083a 00000000 		.4byte	0
 10272              	.LLST57:
 10273 083e 00000000 		.4byte	.LVL177
 10274 0842 56000000 		.4byte	.LVL181
 10275 0846 0200     		.2byte	0x2
 10276 0848 30       		.byte	0x30
 10277 0849 9F       		.byte	0x9f
 10278 084a 56000000 		.4byte	.LVL181
 10279 084e 61000000 		.4byte	.LVL183-1
 10280 0852 0100     		.2byte	0x1
 10281 0854 52       		.byte	0x52
 10282 0855 00000000 		.4byte	0
 10283 0859 00000000 		.4byte	0
 10284              	.LLST58:
 10285 085d 28000000 		.4byte	.LVL179
 10286 0861 5E000000 		.4byte	.LVL182
 10287 0865 0100     		.2byte	0x1
 10288 0867 50       		.byte	0x50
 10289 0868 00000000 		.4byte	0
 10290 086c 00000000 		.4byte	0
 10291              	.LLST59:
 10292 0870 00000000 		.4byte	.LVL186
 10293 0874 15000000 		.4byte	.LVL188-1
 10294 0878 0100     		.2byte	0x1
 10295 087a 50       		.byte	0x50
 10296 087b 15000000 		.4byte	.LVL188-1
 10297 087f 24000000 		.4byte	.LVL191
 10298 0883 0100     		.2byte	0x1
 10299 0885 54       		.byte	0x54
 10300 0886 24000000 		.4byte	.LVL191
 10301 088a 26000000 		.4byte	.LVL192
 10302 088e 0100     		.2byte	0x1
 10303 0890 50       		.byte	0x50
 10304 0891 26000000 		.4byte	.LVL192
 10305 0895 44000000 		.4byte	.LFE532
 10306 0899 0400     		.2byte	0x4
 10307 089b F3       		.byte	0xf3
 10308 089c 01       		.uleb128 0x1
 10309 089d 50       		.byte	0x50
 10310 089e 9F       		.byte	0x9f
 10311 089f 00000000 		.4byte	0
 10312 08a3 00000000 		.4byte	0
 10313              	.LLST60:
 10314 08a7 02000000 		.4byte	.LVL187
 10315 08ab 22000000 		.4byte	.LVL190
 10316 08af 0200     		.2byte	0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 281


 10317 08b1 30       		.byte	0x30
 10318 08b2 9F       		.byte	0x9f
 10319 08b3 22000000 		.4byte	.LVL190
 10320 08b7 24000000 		.4byte	.LVL191
 10321 08bb 0100     		.2byte	0x1
 10322 08bd 50       		.byte	0x50
 10323 08be 24000000 		.4byte	.LVL191
 10324 08c2 26000000 		.4byte	.LVL192
 10325 08c6 0200     		.2byte	0x2
 10326 08c8 30       		.byte	0x30
 10327 08c9 9F       		.byte	0x9f
 10328 08ca 26000000 		.4byte	.LVL192
 10329 08ce 44000000 		.4byte	.LFE532
 10330 08d2 0100     		.2byte	0x1
 10331 08d4 50       		.byte	0x50
 10332 08d5 00000000 		.4byte	0
 10333 08d9 00000000 		.4byte	0
 10334              	.LLST61:
 10335 08dd 0E000000 		.4byte	.LVL194
 10336 08e1 1A000000 		.4byte	.LVL197
 10337 08e5 0800     		.2byte	0x8
 10338 08e7 74       		.byte	0x74
 10339 08e8 00       		.sleb128 0
 10340 08e9 30       		.byte	0x30
 10341 08ea 29       		.byte	0x29
 10342 08eb 08       		.byte	0x8
 10343 08ec FF       		.byte	0xff
 10344 08ed 1A       		.byte	0x1a
 10345 08ee 9F       		.byte	0x9f
 10346 08ef 00000000 		.4byte	0
 10347 08f3 00000000 		.4byte	0
 10348              	.LLST62:
 10349 08f7 20000000 		.4byte	.LVL198
 10350 08fb 44000000 		.4byte	.LVL201
 10351 08ff 0100     		.2byte	0x1
 10352 0901 55       		.byte	0x55
 10353 0902 00000000 		.4byte	0
 10354 0906 00000000 		.4byte	0
 10355              	.LLST63:
 10356 090a 00000000 		.4byte	.LVL202
 10357 090e 02000000 		.4byte	.LVL203
 10358 0912 0100     		.2byte	0x1
 10359 0914 50       		.byte	0x50
 10360 0915 02000000 		.4byte	.LVL203
 10361 0919 2C000000 		.4byte	.LFE558
 10362 091d 0400     		.2byte	0x4
 10363 091f F3       		.byte	0xf3
 10364 0920 01       		.uleb128 0x1
 10365 0921 50       		.byte	0x50
 10366 0922 9F       		.byte	0x9f
 10367 0923 00000000 		.4byte	0
 10368 0927 00000000 		.4byte	0
 10369              	.LLST64:
 10370 092b 22000000 		.4byte	.LVL206
 10371 092f 3C000000 		.4byte	.LVL207
 10372 0933 0100     		.2byte	0x1
 10373 0935 53       		.byte	0x53
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 282


 10374 0936 00000000 		.4byte	0
 10375 093a 00000000 		.4byte	0
 10376              	.LLST65:
 10377 093e 00000000 		.4byte	.LVL212
 10378 0942 07000000 		.4byte	.LVL213-1
 10379 0946 0100     		.2byte	0x1
 10380 0948 50       		.byte	0x50
 10381 0949 07000000 		.4byte	.LVL213-1
 10382 094d 10000000 		.4byte	.LVL214
 10383 0951 0100     		.2byte	0x1
 10384 0953 54       		.byte	0x54
 10385 0954 00000000 		.4byte	0
 10386 0958 00000000 		.4byte	0
 10387              	.LLST66:
 10388 095c 10000000 		.4byte	.LVL214
 10389 0960 90000000 		.4byte	.LVL225
 10390 0964 0100     		.2byte	0x1
 10391 0966 54       		.byte	0x54
 10392 0967 00000000 		.4byte	0
 10393 096b 00000000 		.4byte	0
 10394              	.LLST67:
 10395 096f 00000000 		.4byte	.LVL226
 10396 0973 15000000 		.4byte	.LVL228-1
 10397 0977 0100     		.2byte	0x1
 10398 0979 50       		.byte	0x50
 10399 097a 15000000 		.4byte	.LVL228-1
 10400 097e 24000000 		.4byte	.LFE550
 10401 0982 0400     		.2byte	0x4
 10402 0984 F3       		.byte	0xf3
 10403 0985 01       		.uleb128 0x1
 10404 0986 50       		.byte	0x50
 10405 0987 9F       		.byte	0x9f
 10406 0988 00000000 		.4byte	0
 10407 098c 00000000 		.4byte	0
 10408              	.LLST68:
 10409 0990 00000000 		.4byte	.LVL226
 10410 0994 10000000 		.4byte	.LVL227
 10411 0998 0100     		.2byte	0x1
 10412 099a 51       		.byte	0x51
 10413 099b 10000000 		.4byte	.LVL227
 10414 099f 20000000 		.4byte	.LVL230
 10415 09a3 0100     		.2byte	0x1
 10416 09a5 54       		.byte	0x54
 10417 09a6 20000000 		.4byte	.LVL230
 10418 09aa 24000000 		.4byte	.LFE550
 10419 09ae 0400     		.2byte	0x4
 10420 09b0 F3       		.byte	0xf3
 10421 09b1 01       		.uleb128 0x1
 10422 09b2 51       		.byte	0x51
 10423 09b3 9F       		.byte	0x9f
 10424 09b4 00000000 		.4byte	0
 10425 09b8 00000000 		.4byte	0
 10426              	.LLST69:
 10427 09bc 00000000 		.4byte	.LVL231
 10428 09c0 0A000000 		.4byte	.LVL232
 10429 09c4 0100     		.2byte	0x1
 10430 09c6 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 283


 10431 09c7 0A000000 		.4byte	.LVL232
 10432 09cb 1C000000 		.4byte	.LVL233
 10433 09cf 0100     		.2byte	0x1
 10434 09d1 53       		.byte	0x53
 10435 09d2 1C000000 		.4byte	.LVL233
 10436 09d6 31000000 		.4byte	.LVL237-1
 10437 09da 0100     		.2byte	0x1
 10438 09dc 50       		.byte	0x50
 10439 09dd 31000000 		.4byte	.LVL237-1
 10440 09e1 40000000 		.4byte	.LFE551
 10441 09e5 0400     		.2byte	0x4
 10442 09e7 F3       		.byte	0xf3
 10443 09e8 01       		.uleb128 0x1
 10444 09e9 50       		.byte	0x50
 10445 09ea 9F       		.byte	0x9f
 10446 09eb 00000000 		.4byte	0
 10447 09ef 00000000 		.4byte	0
 10448              	.LLST70:
 10449 09f3 00000000 		.4byte	.LVL231
 10450 09f7 22000000 		.4byte	.LVL235
 10451 09fb 0100     		.2byte	0x1
 10452 09fd 51       		.byte	0x51
 10453 09fe 22000000 		.4byte	.LVL235
 10454 0a02 26000000 		.4byte	.LVL236
 10455 0a06 0100     		.2byte	0x1
 10456 0a08 53       		.byte	0x53
 10457 0a09 26000000 		.4byte	.LVL236
 10458 0a0d 40000000 		.4byte	.LFE551
 10459 0a11 0400     		.2byte	0x4
 10460 0a13 F3       		.byte	0xf3
 10461 0a14 01       		.uleb128 0x1
 10462 0a15 51       		.byte	0x51
 10463 0a16 9F       		.byte	0x9f
 10464 0a17 00000000 		.4byte	0
 10465 0a1b 00000000 		.4byte	0
 10466              	.LLST71:
 10467 0a1f 00000000 		.4byte	.LVL231
 10468 0a23 1E000000 		.4byte	.LVL234
 10469 0a27 0100     		.2byte	0x1
 10470 0a29 52       		.byte	0x52
 10471 0a2a 1E000000 		.4byte	.LVL234
 10472 0a2e 3C000000 		.4byte	.LVL239
 10473 0a32 0100     		.2byte	0x1
 10474 0a34 54       		.byte	0x54
 10475 0a35 3C000000 		.4byte	.LVL239
 10476 0a39 40000000 		.4byte	.LFE551
 10477 0a3d 0400     		.2byte	0x4
 10478 0a3f F3       		.byte	0xf3
 10479 0a40 01       		.uleb128 0x1
 10480 0a41 52       		.byte	0x52
 10481 0a42 9F       		.byte	0x9f
 10482 0a43 00000000 		.4byte	0
 10483 0a47 00000000 		.4byte	0
 10484              	.LLST72:
 10485 0a4b 00000000 		.4byte	.LVL240
 10486 0a4f 17000000 		.4byte	.LVL243-1
 10487 0a53 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 284


 10488 0a55 50       		.byte	0x50
 10489 0a56 17000000 		.4byte	.LVL243-1
 10490 0a5a 2C000000 		.4byte	.LFE552
 10491 0a5e 0400     		.2byte	0x4
 10492 0a60 F3       		.byte	0xf3
 10493 0a61 01       		.uleb128 0x1
 10494 0a62 50       		.byte	0x50
 10495 0a63 9F       		.byte	0x9f
 10496 0a64 00000000 		.4byte	0
 10497 0a68 00000000 		.4byte	0
 10498              	.LLST73:
 10499 0a6c 00000000 		.4byte	.LVL240
 10500 0a70 12000000 		.4byte	.LVL242
 10501 0a74 0100     		.2byte	0x1
 10502 0a76 51       		.byte	0x51
 10503 0a77 12000000 		.4byte	.LVL242
 10504 0a7b 28000000 		.4byte	.LVL246
 10505 0a7f 0100     		.2byte	0x1
 10506 0a81 54       		.byte	0x54
 10507 0a82 00000000 		.4byte	0
 10508 0a86 00000000 		.4byte	0
 10509              	.LLST74:
 10510 0a8a 00000000 		.4byte	.LVL240
 10511 0a8e 0E000000 		.4byte	.LVL241
 10512 0a92 0100     		.2byte	0x1
 10513 0a94 52       		.byte	0x52
 10514 0a95 0E000000 		.4byte	.LVL241
 10515 0a99 28000000 		.4byte	.LVL246
 10516 0a9d 0100     		.2byte	0x1
 10517 0a9f 55       		.byte	0x55
 10518 0aa0 28000000 		.4byte	.LVL246
 10519 0aa4 2C000000 		.4byte	.LFE552
 10520 0aa8 0400     		.2byte	0x4
 10521 0aaa F3       		.byte	0xf3
 10522 0aab 01       		.uleb128 0x1
 10523 0aac 52       		.byte	0x52
 10524 0aad 9F       		.byte	0x9f
 10525 0aae 00000000 		.4byte	0
 10526 0ab2 00000000 		.4byte	0
 10527              	.LLST75:
 10528 0ab6 00000000 		.4byte	.LVL247
 10529 0aba 12000000 		.4byte	.LVL249
 10530 0abe 0100     		.2byte	0x1
 10531 0ac0 50       		.byte	0x50
 10532 0ac1 12000000 		.4byte	.LVL249
 10533 0ac5 7C000000 		.4byte	.LFE553
 10534 0ac9 0400     		.2byte	0x4
 10535 0acb F3       		.byte	0xf3
 10536 0acc 01       		.uleb128 0x1
 10537 0acd 50       		.byte	0x50
 10538 0ace 9F       		.byte	0x9f
 10539 0acf 00000000 		.4byte	0
 10540 0ad3 00000000 		.4byte	0
 10541              	.LLST76:
 10542 0ad7 06000000 		.4byte	.LVL248
 10543 0adb 6E000000 		.4byte	.LVL257
 10544 0adf 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 285


 10545 0ae1 54       		.byte	0x54
 10546 0ae2 00000000 		.4byte	0
 10547 0ae6 00000000 		.4byte	0
 10548              	.LLST77:
 10549 0aea 60000000 		.4byte	.LVL254
 10550 0aee 6A000000 		.4byte	.LVL255
 10551 0af2 0200     		.2byte	0x2
 10552 0af4 31       		.byte	0x31
 10553 0af5 9F       		.byte	0x9f
 10554 0af6 6C000000 		.4byte	.LVL256
 10555 0afa 7C000000 		.4byte	.LFE553
 10556 0afe 0100     		.2byte	0x1
 10557 0b00 50       		.byte	0x50
 10558 0b01 00000000 		.4byte	0
 10559 0b05 00000000 		.4byte	0
 10560              	.LLST78:
 10561 0b09 00000000 		.4byte	.LVL258
 10562 0b0d 1F000000 		.4byte	.LVL260-1
 10563 0b11 0100     		.2byte	0x1
 10564 0b13 50       		.byte	0x50
 10565 0b14 1F000000 		.4byte	.LVL260-1
 10566 0b18 6C000000 		.4byte	.LFE554
 10567 0b1c 0400     		.2byte	0x4
 10568 0b1e F3       		.byte	0xf3
 10569 0b1f 01       		.uleb128 0x1
 10570 0b20 50       		.byte	0x50
 10571 0b21 9F       		.byte	0x9f
 10572 0b22 00000000 		.4byte	0
 10573 0b26 00000000 		.4byte	0
 10574              	.LLST79:
 10575 0b2a 00000000 		.4byte	.LVL258
 10576 0b2e 1F000000 		.4byte	.LVL260-1
 10577 0b32 0100     		.2byte	0x1
 10578 0b34 51       		.byte	0x51
 10579 0b35 1F000000 		.4byte	.LVL260-1
 10580 0b39 6C000000 		.4byte	.LFE554
 10581 0b3d 0400     		.2byte	0x4
 10582 0b3f F3       		.byte	0xf3
 10583 0b40 01       		.uleb128 0x1
 10584 0b41 51       		.byte	0x51
 10585 0b42 9F       		.byte	0x9f
 10586 0b43 00000000 		.4byte	0
 10587 0b47 00000000 		.4byte	0
 10588              	.LLST80:
 10589 0b4b 16000000 		.4byte	.LVL259
 10590 0b4f 66000000 		.4byte	.LVL266
 10591 0b53 0100     		.2byte	0x1
 10592 0b55 54       		.byte	0x54
 10593 0b56 00000000 		.4byte	0
 10594 0b5a 00000000 		.4byte	0
 10595              	.LLST81:
 10596 0b5e 5A000000 		.4byte	.LVL263
 10597 0b62 62000000 		.4byte	.LVL264
 10598 0b66 0200     		.2byte	0x2
 10599 0b68 31       		.byte	0x31
 10600 0b69 9F       		.byte	0x9f
 10601 0b6a 64000000 		.4byte	.LVL265
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 286


 10602 0b6e 6C000000 		.4byte	.LFE554
 10603 0b72 0100     		.2byte	0x1
 10604 0b74 50       		.byte	0x50
 10605 0b75 00000000 		.4byte	0
 10606 0b79 00000000 		.4byte	0
 10607              	.LLST82:
 10608 0b7d 00000000 		.4byte	.LVL268
 10609 0b81 15000000 		.4byte	.LVL269-1
 10610 0b85 0100     		.2byte	0x1
 10611 0b87 50       		.byte	0x50
 10612 0b88 15000000 		.4byte	.LVL269-1
 10613 0b8c 4A000000 		.4byte	.LVL272
 10614 0b90 0100     		.2byte	0x1
 10615 0b92 54       		.byte	0x54
 10616 0b93 4A000000 		.4byte	.LVL272
 10617 0b97 4C000000 		.4byte	.LVL273
 10618 0b9b 0400     		.2byte	0x4
 10619 0b9d F3       		.byte	0xf3
 10620 0b9e 01       		.uleb128 0x1
 10621 0b9f 50       		.byte	0x50
 10622 0ba0 9F       		.byte	0x9f
 10623 0ba1 4C000000 		.4byte	.LVL273
 10624 0ba5 4E000000 		.4byte	.LVL274
 10625 0ba9 0100     		.2byte	0x1
 10626 0bab 54       		.byte	0x54
 10627 0bac 4E000000 		.4byte	.LVL274
 10628 0bb0 50000000 		.4byte	.LVL275
 10629 0bb4 0400     		.2byte	0x4
 10630 0bb6 F3       		.byte	0xf3
 10631 0bb7 01       		.uleb128 0x1
 10632 0bb8 50       		.byte	0x50
 10633 0bb9 9F       		.byte	0x9f
 10634 0bba 50000000 		.4byte	.LVL275
 10635 0bbe 52000000 		.4byte	.LVL276
 10636 0bc2 0100     		.2byte	0x1
 10637 0bc4 54       		.byte	0x54
 10638 0bc5 52000000 		.4byte	.LVL276
 10639 0bc9 54000000 		.4byte	.LVL277
 10640 0bcd 0400     		.2byte	0x4
 10641 0bcf F3       		.byte	0xf3
 10642 0bd0 01       		.uleb128 0x1
 10643 0bd1 50       		.byte	0x50
 10644 0bd2 9F       		.byte	0x9f
 10645 0bd3 54000000 		.4byte	.LVL277
 10646 0bd7 56000000 		.4byte	.LVL278
 10647 0bdb 0100     		.2byte	0x1
 10648 0bdd 54       		.byte	0x54
 10649 0bde 56000000 		.4byte	.LVL278
 10650 0be2 64000000 		.4byte	.LFE556
 10651 0be6 0400     		.2byte	0x4
 10652 0be8 F3       		.byte	0xf3
 10653 0be9 01       		.uleb128 0x1
 10654 0bea 50       		.byte	0x50
 10655 0beb 9F       		.byte	0x9f
 10656 0bec 00000000 		.4byte	0
 10657 0bf0 00000000 		.4byte	0
 10658              	.LLST83:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 287


 10659 0bf4 00000000 		.4byte	.LVL268
 10660 0bf8 15000000 		.4byte	.LVL269-1
 10661 0bfc 0100     		.2byte	0x1
 10662 0bfe 51       		.byte	0x51
 10663 0bff 15000000 		.4byte	.LVL269-1
 10664 0c03 5E000000 		.4byte	.LVL280
 10665 0c07 0100     		.2byte	0x1
 10666 0c09 55       		.byte	0x55
 10667 0c0a 5E000000 		.4byte	.LVL280
 10668 0c0e 64000000 		.4byte	.LFE556
 10669 0c12 0400     		.2byte	0x4
 10670 0c14 F3       		.byte	0xf3
 10671 0c15 01       		.uleb128 0x1
 10672 0c16 51       		.byte	0x51
 10673 0c17 9F       		.byte	0x9f
 10674 0c18 00000000 		.4byte	0
 10675 0c1c 00000000 		.4byte	0
 10676              	.LLST84:
 10677 0c20 48000000 		.4byte	.LVL271
 10678 0c24 4C000000 		.4byte	.LVL273
 10679 0c28 0200     		.2byte	0x2
 10680 0c2a 30       		.byte	0x30
 10681 0c2b 9F       		.byte	0x9f
 10682 0c2c 56000000 		.4byte	.LVL278
 10683 0c30 5E000000 		.4byte	.LVL280
 10684 0c34 0100     		.2byte	0x1
 10685 0c36 54       		.byte	0x54
 10686 0c37 5E000000 		.4byte	.LVL280
 10687 0c3b 64000000 		.4byte	.LFE556
 10688 0c3f 0100     		.2byte	0x1
 10689 0c41 50       		.byte	0x50
 10690 0c42 00000000 		.4byte	0
 10691 0c46 00000000 		.4byte	0
 10692              	.LLST85:
 10693 0c4a 1C000000 		.4byte	.LVL270
 10694 0c4e 47000000 		.4byte	.LVL271-1
 10695 0c52 0100     		.2byte	0x1
 10696 0c54 51       		.byte	0x51
 10697 0c55 4C000000 		.4byte	.LVL273
 10698 0c59 56000000 		.4byte	.LVL278
 10699 0c5d 0100     		.2byte	0x1
 10700 0c5f 51       		.byte	0x51
 10701 0c60 00000000 		.4byte	0
 10702 0c64 00000000 		.4byte	0
 10703              	.LLST86:
 10704 0c68 00000000 		.4byte	.LVL281
 10705 0c6c 0C000000 		.4byte	.LVL282
 10706 0c70 0100     		.2byte	0x1
 10707 0c72 50       		.byte	0x50
 10708 0c73 00000000 		.4byte	0
 10709 0c77 00000000 		.4byte	0
 10710              	.LLST87:
 10711 0c7b 00000000 		.4byte	.LVL281
 10712 0c7f 0E000000 		.4byte	.LVL283
 10713 0c83 0100     		.2byte	0x1
 10714 0c85 51       		.byte	0x51
 10715 0c86 0E000000 		.4byte	.LVL283
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 288


 10716 0c8a 12000000 		.4byte	.LVL284
 10717 0c8e 0300     		.2byte	0x3
 10718 0c90 71       		.byte	0x71
 10719 0c91 70       		.sleb128 -16
 10720 0c92 9F       		.byte	0x9f
 10721 0c93 12000000 		.4byte	.LVL284
 10722 0c97 1C000000 		.4byte	.LFE559
 10723 0c9b 0400     		.2byte	0x4
 10724 0c9d F3       		.byte	0xf3
 10725 0c9e 01       		.uleb128 0x1
 10726 0c9f 51       		.byte	0x51
 10727 0ca0 9F       		.byte	0x9f
 10728 0ca1 00000000 		.4byte	0
 10729 0ca5 00000000 		.4byte	0
 10730              	.LLST88:
 10731 0ca9 0C000000 		.4byte	.LVL282
 10732 0cad 14000000 		.4byte	.LVL285
 10733 0cb1 0100     		.2byte	0x1
 10734 0cb3 50       		.byte	0x50
 10735 0cb4 00000000 		.4byte	0
 10736 0cb8 00000000 		.4byte	0
 10737              	.LLST89:
 10738 0cbc 00000000 		.4byte	.LVL286
 10739 0cc0 0C000000 		.4byte	.LVL287
 10740 0cc4 0100     		.2byte	0x1
 10741 0cc6 50       		.byte	0x50
 10742 0cc7 16000000 		.4byte	.LVL291
 10743 0ccb 18000000 		.4byte	.LVL292
 10744 0ccf 0100     		.2byte	0x1
 10745 0cd1 50       		.byte	0x50
 10746 0cd2 18000000 		.4byte	.LVL292
 10747 0cd6 20000000 		.4byte	.LFE560
 10748 0cda 0400     		.2byte	0x4
 10749 0cdc F3       		.byte	0xf3
 10750 0cdd 01       		.uleb128 0x1
 10751 0cde 50       		.byte	0x50
 10752 0cdf 9F       		.byte	0x9f
 10753 0ce0 00000000 		.4byte	0
 10754 0ce4 00000000 		.4byte	0
 10755              	.LLST90:
 10756 0ce8 00000000 		.4byte	.LVL286
 10757 0cec 0E000000 		.4byte	.LVL288
 10758 0cf0 0100     		.2byte	0x1
 10759 0cf2 51       		.byte	0x51
 10760 0cf3 0E000000 		.4byte	.LVL288
 10761 0cf7 16000000 		.4byte	.LVL291
 10762 0cfb 0300     		.2byte	0x3
 10763 0cfd 71       		.byte	0x71
 10764 0cfe 70       		.sleb128 -16
 10765 0cff 9F       		.byte	0x9f
 10766 0d00 16000000 		.4byte	.LVL291
 10767 0d04 20000000 		.4byte	.LFE560
 10768 0d08 0100     		.2byte	0x1
 10769 0d0a 51       		.byte	0x51
 10770 0d0b 00000000 		.4byte	0
 10771 0d0f 00000000 		.4byte	0
 10772              	.LLST91:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 289


 10773 0d13 00000000 		.4byte	.LVL286
 10774 0d17 14000000 		.4byte	.LVL290
 10775 0d1b 0200     		.2byte	0x2
 10776 0d1d 30       		.byte	0x30
 10777 0d1e 9F       		.byte	0x9f
 10778 0d1f 14000000 		.4byte	.LVL290
 10779 0d23 16000000 		.4byte	.LVL291
 10780 0d27 0100     		.2byte	0x1
 10781 0d29 50       		.byte	0x50
 10782 0d2a 16000000 		.4byte	.LVL291
 10783 0d2e 18000000 		.4byte	.LVL292
 10784 0d32 0200     		.2byte	0x2
 10785 0d34 30       		.byte	0x30
 10786 0d35 9F       		.byte	0x9f
 10787 0d36 18000000 		.4byte	.LVL292
 10788 0d3a 20000000 		.4byte	.LFE560
 10789 0d3e 0100     		.2byte	0x1
 10790 0d40 50       		.byte	0x50
 10791 0d41 00000000 		.4byte	0
 10792 0d45 00000000 		.4byte	0
 10793              	.LLST92:
 10794 0d49 0C000000 		.4byte	.LVL287
 10795 0d4d 12000000 		.4byte	.LVL289
 10796 0d51 0100     		.2byte	0x1
 10797 0d53 50       		.byte	0x50
 10798 0d54 00000000 		.4byte	0
 10799 0d58 00000000 		.4byte	0
 10800              	.LLST93:
 10801 0d5c 00000000 		.4byte	.LVL296
 10802 0d60 09000000 		.4byte	.LVL297-1
 10803 0d64 0100     		.2byte	0x1
 10804 0d66 50       		.byte	0x50
 10805 0d67 09000000 		.4byte	.LVL297-1
 10806 0d6b 78000000 		.4byte	.LVL303
 10807 0d6f 0100     		.2byte	0x1
 10808 0d71 55       		.byte	0x55
 10809 0d72 78000000 		.4byte	.LVL303
 10810 0d76 80000000 		.4byte	.LFE568
 10811 0d7a 0400     		.2byte	0x4
 10812 0d7c F3       		.byte	0xf3
 10813 0d7d 01       		.uleb128 0x1
 10814 0d7e 50       		.byte	0x50
 10815 0d7f 9F       		.byte	0x9f
 10816 0d80 00000000 		.4byte	0
 10817 0d84 00000000 		.4byte	0
 10818              	.LLST94:
 10819 0d88 00000000 		.4byte	.LVL296
 10820 0d8c 09000000 		.4byte	.LVL297-1
 10821 0d90 0100     		.2byte	0x1
 10822 0d92 51       		.byte	0x51
 10823 0d93 09000000 		.4byte	.LVL297-1
 10824 0d97 4A000000 		.4byte	.LVL301
 10825 0d9b 0100     		.2byte	0x1
 10826 0d9d 54       		.byte	0x54
 10827 0d9e 4A000000 		.4byte	.LVL301
 10828 0da2 80000000 		.4byte	.LFE568
 10829 0da6 0400     		.2byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 290


 10830 0da8 F3       		.byte	0xf3
 10831 0da9 01       		.uleb128 0x1
 10832 0daa 51       		.byte	0x51
 10833 0dab 9F       		.byte	0x9f
 10834 0dac 00000000 		.4byte	0
 10835 0db0 00000000 		.4byte	0
 10836              	.LLST95:
 10837 0db4 4A000000 		.4byte	.LVL301
 10838 0db8 78000000 		.4byte	.LVL303
 10839 0dbc 0100     		.2byte	0x1
 10840 0dbe 54       		.byte	0x54
 10841 0dbf 78000000 		.4byte	.LVL303
 10842 0dc3 80000000 		.4byte	.LFE568
 10843 0dc7 0100     		.2byte	0x1
 10844 0dc9 50       		.byte	0x50
 10845 0dca 00000000 		.4byte	0
 10846 0dce 00000000 		.4byte	0
 10847              	.LLST96:
 10848 0dd2 00000000 		.4byte	.LVL304
 10849 0dd6 0D000000 		.4byte	.LVL305-1
 10850 0dda 0100     		.2byte	0x1
 10851 0ddc 50       		.byte	0x50
 10852 0ddd 0D000000 		.4byte	.LVL305-1
 10853 0de1 9C000000 		.4byte	.LVL314
 10854 0de5 0100     		.2byte	0x1
 10855 0de7 57       		.byte	0x57
 10856 0de8 9C000000 		.4byte	.LVL314
 10857 0dec A4000000 		.4byte	.LFE569
 10858 0df0 0400     		.2byte	0x4
 10859 0df2 F3       		.byte	0xf3
 10860 0df3 01       		.uleb128 0x1
 10861 0df4 50       		.byte	0x50
 10862 0df5 9F       		.byte	0x9f
 10863 0df6 00000000 		.4byte	0
 10864 0dfa 00000000 		.4byte	0
 10865              	.LLST97:
 10866 0dfe 00000000 		.4byte	.LVL304
 10867 0e02 0D000000 		.4byte	.LVL305-1
 10868 0e06 0100     		.2byte	0x1
 10869 0e08 51       		.byte	0x51
 10870 0e09 0D000000 		.4byte	.LVL305-1
 10871 0e0d 84000000 		.4byte	.LVL310
 10872 0e11 0100     		.2byte	0x1
 10873 0e13 54       		.byte	0x54
 10874 0e14 84000000 		.4byte	.LVL310
 10875 0e18 86000000 		.4byte	.LVL311
 10876 0e1c 0400     		.2byte	0x4
 10877 0e1e F3       		.byte	0xf3
 10878 0e1f 01       		.uleb128 0x1
 10879 0e20 51       		.byte	0x51
 10880 0e21 9F       		.byte	0x9f
 10881 0e22 86000000 		.4byte	.LVL311
 10882 0e26 88000000 		.4byte	.LVL312
 10883 0e2a 0100     		.2byte	0x1
 10884 0e2c 54       		.byte	0x54
 10885 0e2d 88000000 		.4byte	.LVL312
 10886 0e31 A4000000 		.4byte	.LFE569
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 291


 10887 0e35 0400     		.2byte	0x4
 10888 0e37 F3       		.byte	0xf3
 10889 0e38 01       		.uleb128 0x1
 10890 0e39 51       		.byte	0x51
 10891 0e3a 9F       		.byte	0x9f
 10892 0e3b 00000000 		.4byte	0
 10893 0e3f 00000000 		.4byte	0
 10894              	.LLST98:
 10895 0e43 00000000 		.4byte	.LVL304
 10896 0e47 0D000000 		.4byte	.LVL305-1
 10897 0e4b 0100     		.2byte	0x1
 10898 0e4d 52       		.byte	0x52
 10899 0e4e 0D000000 		.4byte	.LVL305-1
 10900 0e52 9C000000 		.4byte	.LVL314
 10901 0e56 0100     		.2byte	0x1
 10902 0e58 55       		.byte	0x55
 10903 0e59 9C000000 		.4byte	.LVL314
 10904 0e5d A4000000 		.4byte	.LFE569
 10905 0e61 0400     		.2byte	0x4
 10906 0e63 F3       		.byte	0xf3
 10907 0e64 01       		.uleb128 0x1
 10908 0e65 52       		.byte	0x52
 10909 0e66 9F       		.byte	0x9f
 10910 0e67 00000000 		.4byte	0
 10911 0e6b 00000000 		.4byte	0
 10912              	.LLST99:
 10913 0e6f 00000000 		.4byte	.LVL304
 10914 0e73 0D000000 		.4byte	.LVL305-1
 10915 0e77 0100     		.2byte	0x1
 10916 0e79 53       		.byte	0x53
 10917 0e7a 0D000000 		.4byte	.LVL305-1
 10918 0e7e 9C000000 		.4byte	.LVL314
 10919 0e82 0100     		.2byte	0x1
 10920 0e84 56       		.byte	0x56
 10921 0e85 9C000000 		.4byte	.LVL314
 10922 0e89 A4000000 		.4byte	.LFE569
 10923 0e8d 0400     		.2byte	0x4
 10924 0e8f F3       		.byte	0xf3
 10925 0e90 01       		.uleb128 0x1
 10926 0e91 53       		.byte	0x53
 10927 0e92 9F       		.byte	0x9f
 10928 0e93 00000000 		.4byte	0
 10929 0e97 00000000 		.4byte	0
 10930              	.LLST100:
 10931 0e9b 82000000 		.4byte	.LVL309
 10932 0e9f 86000000 		.4byte	.LVL311
 10933 0ea3 0200     		.2byte	0x2
 10934 0ea5 31       		.byte	0x31
 10935 0ea6 9F       		.byte	0x9f
 10936 0ea7 88000000 		.4byte	.LVL312
 10937 0eab 9C000000 		.4byte	.LVL314
 10938 0eaf 0100     		.2byte	0x1
 10939 0eb1 54       		.byte	0x54
 10940 0eb2 9C000000 		.4byte	.LVL314
 10941 0eb6 A4000000 		.4byte	.LFE569
 10942 0eba 0100     		.2byte	0x1
 10943 0ebc 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 292


 10944 0ebd 00000000 		.4byte	0
 10945 0ec1 00000000 		.4byte	0
 10946              	.LLST101:
 10947 0ec5 00000000 		.4byte	.LVL315
 10948 0ec9 13000000 		.4byte	.LVL317-1
 10949 0ecd 0100     		.2byte	0x1
 10950 0ecf 50       		.byte	0x50
 10951 0ed0 13000000 		.4byte	.LVL317-1
 10952 0ed4 BA000000 		.4byte	.LVL325
 10953 0ed8 0100     		.2byte	0x1
 10954 0eda 54       		.byte	0x54
 10955 0edb BA000000 		.4byte	.LVL325
 10956 0edf C8000000 		.4byte	.LFE570
 10957 0ee3 0400     		.2byte	0x4
 10958 0ee5 F3       		.byte	0xf3
 10959 0ee6 01       		.uleb128 0x1
 10960 0ee7 50       		.byte	0x50
 10961 0ee8 9F       		.byte	0x9f
 10962 0ee9 00000000 		.4byte	0
 10963 0eed 00000000 		.4byte	0
 10964              	.LLST102:
 10965 0ef1 00000000 		.4byte	.LVL315
 10966 0ef5 13000000 		.4byte	.LVL317-1
 10967 0ef9 0100     		.2byte	0x1
 10968 0efb 51       		.byte	0x51
 10969 0efc 13000000 		.4byte	.LVL317-1
 10970 0f00 38000000 		.4byte	.LVL319
 10971 0f04 0100     		.2byte	0x1
 10972 0f06 56       		.byte	0x56
 10973 0f07 38000000 		.4byte	.LVL319
 10974 0f0b 3E000000 		.4byte	.LVL320
 10975 0f0f 0400     		.2byte	0x4
 10976 0f11 F3       		.byte	0xf3
 10977 0f12 01       		.uleb128 0x1
 10978 0f13 51       		.byte	0x51
 10979 0f14 9F       		.byte	0x9f
 10980 0f15 3E000000 		.4byte	.LVL320
 10981 0f19 5E000000 		.4byte	.LVL321
 10982 0f1d 0100     		.2byte	0x1
 10983 0f1f 56       		.byte	0x56
 10984 0f20 5E000000 		.4byte	.LVL321
 10985 0f24 C8000000 		.4byte	.LFE570
 10986 0f28 0400     		.2byte	0x4
 10987 0f2a F3       		.byte	0xf3
 10988 0f2b 01       		.uleb128 0x1
 10989 0f2c 51       		.byte	0x51
 10990 0f2d 9F       		.byte	0x9f
 10991 0f2e 00000000 		.4byte	0
 10992 0f32 00000000 		.4byte	0
 10993              	.LLST103:
 10994 0f36 00000000 		.4byte	.LVL315
 10995 0f3a 13000000 		.4byte	.LVL317-1
 10996 0f3e 0100     		.2byte	0x1
 10997 0f40 52       		.byte	0x52
 10998 0f41 13000000 		.4byte	.LVL317-1
 10999 0f45 C8000000 		.4byte	.LFE570
 11000 0f49 0400     		.2byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 293


 11001 0f4b F3       		.byte	0xf3
 11002 0f4c 01       		.uleb128 0x1
 11003 0f4d 52       		.byte	0x52
 11004 0f4e 9F       		.byte	0x9f
 11005 0f4f 00000000 		.4byte	0
 11006 0f53 00000000 		.4byte	0
 11007              	.LLST104:
 11008 0f57 00000000 		.4byte	.LVL315
 11009 0f5b 13000000 		.4byte	.LVL317-1
 11010 0f5f 0100     		.2byte	0x1
 11011 0f61 53       		.byte	0x53
 11012 0f62 13000000 		.4byte	.LVL317-1
 11013 0f66 BA000000 		.4byte	.LVL325
 11014 0f6a 0100     		.2byte	0x1
 11015 0f6c 57       		.byte	0x57
 11016 0f6d BA000000 		.4byte	.LVL325
 11017 0f71 C8000000 		.4byte	.LFE570
 11018 0f75 0400     		.2byte	0x4
 11019 0f77 F3       		.byte	0xf3
 11020 0f78 01       		.uleb128 0x1
 11021 0f79 53       		.byte	0x53
 11022 0f7a 9F       		.byte	0x9f
 11023 0f7b 00000000 		.4byte	0
 11024 0f7f 00000000 		.4byte	0
 11025              	.LLST105:
 11026 0f83 10000000 		.4byte	.LVL316
 11027 0f87 BA000000 		.4byte	.LVL325
 11028 0f8b 0100     		.2byte	0x1
 11029 0f8d 54       		.byte	0x54
 11030 0f8e BA000000 		.4byte	.LVL325
 11031 0f92 C8000000 		.4byte	.LFE570
 11032 0f96 0400     		.2byte	0x4
 11033 0f98 F3       		.byte	0xf3
 11034 0f99 01       		.uleb128 0x1
 11035 0f9a 50       		.byte	0x50
 11036 0f9b 9F       		.byte	0x9f
 11037 0f9c 00000000 		.4byte	0
 11038 0fa0 00000000 		.4byte	0
 11039              	.LLST106:
 11040 0fa4 00000000 		.4byte	.LVL315
 11041 0fa8 5E000000 		.4byte	.LVL321
 11042 0fac 0200     		.2byte	0x2
 11043 0fae 31       		.byte	0x31
 11044 0faf 9F       		.byte	0x9f
 11045 0fb0 5E000000 		.4byte	.LVL321
 11046 0fb4 BA000000 		.4byte	.LVL325
 11047 0fb8 0100     		.2byte	0x1
 11048 0fba 55       		.byte	0x55
 11049 0fbb BA000000 		.4byte	.LVL325
 11050 0fbf C8000000 		.4byte	.LFE570
 11051 0fc3 0100     		.2byte	0x1
 11052 0fc5 50       		.byte	0x50
 11053 0fc6 00000000 		.4byte	0
 11054 0fca 00000000 		.4byte	0
 11055              	.LLST107:
 11056 0fce 20000000 		.4byte	.LVL318
 11057 0fd2 69000000 		.4byte	.LVL322-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 294


 11058 0fd6 0100     		.2byte	0x1
 11059 0fd8 53       		.byte	0x53
 11060 0fd9 00000000 		.4byte	0
 11061 0fdd 00000000 		.4byte	0
 11062              	.LLST108:
 11063 0fe1 00000000 		.4byte	.LVL326
 11064 0fe5 17000000 		.4byte	.LVL328-1
 11065 0fe9 0100     		.2byte	0x1
 11066 0feb 50       		.byte	0x50
 11067 0fec 17000000 		.4byte	.LVL328-1
 11068 0ff0 F6000000 		.4byte	.LVL339
 11069 0ff4 0100     		.2byte	0x1
 11070 0ff6 54       		.byte	0x54
 11071 0ff7 F6000000 		.4byte	.LVL339
 11072 0ffb 04010000 		.4byte	.LFE571
 11073 0fff 0400     		.2byte	0x4
 11074 1001 F3       		.byte	0xf3
 11075 1002 01       		.uleb128 0x1
 11076 1003 50       		.byte	0x50
 11077 1004 9F       		.byte	0x9f
 11078 1005 00000000 		.4byte	0
 11079 1009 00000000 		.4byte	0
 11080              	.LLST109:
 11081 100d 00000000 		.4byte	.LVL326
 11082 1011 17000000 		.4byte	.LVL328-1
 11083 1015 0100     		.2byte	0x1
 11084 1017 51       		.byte	0x51
 11085 1018 17000000 		.4byte	.LVL328-1
 11086 101c 9A000000 		.4byte	.LVL332
 11087 1020 0100     		.2byte	0x1
 11088 1022 58       		.byte	0x58
 11089 1023 9A000000 		.4byte	.LVL332
 11090 1027 C4000000 		.4byte	.LVL335
 11091 102b 0400     		.2byte	0x4
 11092 102d F3       		.byte	0xf3
 11093 102e 01       		.uleb128 0x1
 11094 102f 51       		.byte	0x51
 11095 1030 9F       		.byte	0x9f
 11096 1031 C4000000 		.4byte	.LVL335
 11097 1035 CE000000 		.4byte	.LVL336
 11098 1039 0100     		.2byte	0x1
 11099 103b 58       		.byte	0x58
 11100 103c CE000000 		.4byte	.LVL336
 11101 1040 04010000 		.4byte	.LFE571
 11102 1044 0400     		.2byte	0x4
 11103 1046 F3       		.byte	0xf3
 11104 1047 01       		.uleb128 0x1
 11105 1048 51       		.byte	0x51
 11106 1049 9F       		.byte	0x9f
 11107 104a 00000000 		.4byte	0
 11108 104e 00000000 		.4byte	0
 11109              	.LLST110:
 11110 1052 00000000 		.4byte	.LVL326
 11111 1056 17000000 		.4byte	.LVL328-1
 11112 105a 0100     		.2byte	0x1
 11113 105c 52       		.byte	0x52
 11114 105d 17000000 		.4byte	.LVL328-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 295


 11115 1061 04010000 		.4byte	.LFE571
 11116 1065 0400     		.2byte	0x4
 11117 1067 F3       		.byte	0xf3
 11118 1068 01       		.uleb128 0x1
 11119 1069 52       		.byte	0x52
 11120 106a 9F       		.byte	0x9f
 11121 106b 00000000 		.4byte	0
 11122 106f 00000000 		.4byte	0
 11123              	.LLST111:
 11124 1073 00000000 		.4byte	.LVL326
 11125 1077 17000000 		.4byte	.LVL328-1
 11126 107b 0100     		.2byte	0x1
 11127 107d 53       		.byte	0x53
 11128 107e 17000000 		.4byte	.LVL328-1
 11129 1082 F6000000 		.4byte	.LVL339
 11130 1086 0100     		.2byte	0x1
 11131 1088 59       		.byte	0x59
 11132 1089 F6000000 		.4byte	.LVL339
 11133 108d 04010000 		.4byte	.LFE571
 11134 1091 0400     		.2byte	0x4
 11135 1093 F3       		.byte	0xf3
 11136 1094 01       		.uleb128 0x1
 11137 1095 53       		.byte	0x53
 11138 1096 9F       		.byte	0x9f
 11139 1097 00000000 		.4byte	0
 11140 109b 00000000 		.4byte	0
 11141              	.LLST112:
 11142 109f 00000000 		.4byte	.LVL326
 11143 10a3 F6000000 		.4byte	.LVL339
 11144 10a7 0200     		.2byte	0x2
 11145 10a9 91       		.byte	0x91
 11146 10aa 00       		.sleb128 0
 11147 10ab F6000000 		.4byte	.LVL339
 11148 10af 04010000 		.4byte	.LFE571
 11149 10b3 0200     		.2byte	0x2
 11150 10b5 7D       		.byte	0x7d
 11151 10b6 00       		.sleb128 0
 11152 10b7 00000000 		.4byte	0
 11153 10bb 00000000 		.4byte	0
 11154              	.LLST113:
 11155 10bf 18000000 		.4byte	.LVL328
 11156 10c3 F6000000 		.4byte	.LVL339
 11157 10c7 0100     		.2byte	0x1
 11158 10c9 54       		.byte	0x54
 11159 10ca F6000000 		.4byte	.LVL339
 11160 10ce 04010000 		.4byte	.LFE571
 11161 10d2 0400     		.2byte	0x4
 11162 10d4 F3       		.byte	0xf3
 11163 10d5 01       		.uleb128 0x1
 11164 10d6 50       		.byte	0x50
 11165 10d7 9F       		.byte	0x9f
 11166 10d8 00000000 		.4byte	0
 11167 10dc 00000000 		.4byte	0
 11168              	.LLST114:
 11169 10e0 3E000000 		.4byte	.LVL329
 11170 10e4 88000000 		.4byte	.LVL331
 11171 10e8 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 296


 11172 10ea 53       		.byte	0x53
 11173 10eb 00000000 		.4byte	0
 11174 10ef 00000000 		.4byte	0
 11175              	.LLST115:
 11176 10f3 06000000 		.4byte	.LVL327
 11177 10f7 82000000 		.4byte	.LVL330
 11178 10fb 0200     		.2byte	0x2
 11179 10fd 31       		.byte	0x31
 11180 10fe 9F       		.byte	0x9f
 11181 10ff 82000000 		.4byte	.LVL330
 11182 1103 F6000000 		.4byte	.LVL339
 11183 1107 0100     		.2byte	0x1
 11184 1109 55       		.byte	0x55
 11185 110a F6000000 		.4byte	.LVL339
 11186 110e 04010000 		.4byte	.LFE571
 11187 1112 0100     		.2byte	0x1
 11188 1114 50       		.byte	0x50
 11189 1115 00000000 		.4byte	0
 11190 1119 00000000 		.4byte	0
 11191              	.LLST116:
 11192 111d EC000000 		.4byte	.LVL337
 11193 1121 F0000000 		.4byte	.LVL338
 11194 1125 0100     		.2byte	0x1
 11195 1127 57       		.byte	0x57
 11196 1128 00000000 		.4byte	0
 11197 112c 00000000 		.4byte	0
 11198              	.LLST117:
 11199 1130 00000000 		.4byte	.LVL340
 11200 1134 0F000000 		.4byte	.LVL341-1
 11201 1138 0100     		.2byte	0x1
 11202 113a 50       		.byte	0x50
 11203 113b 0F000000 		.4byte	.LVL341-1
 11204 113f A4000000 		.4byte	.LVL349
 11205 1143 0100     		.2byte	0x1
 11206 1145 54       		.byte	0x54
 11207 1146 A4000000 		.4byte	.LVL349
 11208 114a B0000000 		.4byte	.LFE572
 11209 114e 0400     		.2byte	0x4
 11210 1150 F3       		.byte	0xf3
 11211 1151 01       		.uleb128 0x1
 11212 1152 50       		.byte	0x50
 11213 1153 9F       		.byte	0x9f
 11214 1154 00000000 		.4byte	0
 11215 1158 00000000 		.4byte	0
 11216              	.LLST118:
 11217 115c 00000000 		.4byte	.LVL340
 11218 1160 0F000000 		.4byte	.LVL341-1
 11219 1164 0100     		.2byte	0x1
 11220 1166 51       		.byte	0x51
 11221 1167 0F000000 		.4byte	.LVL341-1
 11222 116b A4000000 		.4byte	.LVL349
 11223 116f 0100     		.2byte	0x1
 11224 1171 55       		.byte	0x55
 11225 1172 A4000000 		.4byte	.LVL349
 11226 1176 B0000000 		.4byte	.LFE572
 11227 117a 0400     		.2byte	0x4
 11228 117c F3       		.byte	0xf3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 297


 11229 117d 01       		.uleb128 0x1
 11230 117e 51       		.byte	0x51
 11231 117f 9F       		.byte	0x9f
 11232 1180 00000000 		.4byte	0
 11233 1184 00000000 		.4byte	0
 11234              	.LLST119:
 11235 1188 10000000 		.4byte	.LVL341
 11236 118c A4000000 		.4byte	.LVL349
 11237 1190 0100     		.2byte	0x1
 11238 1192 54       		.byte	0x54
 11239 1193 A4000000 		.4byte	.LVL349
 11240 1197 B0000000 		.4byte	.LFE572
 11241 119b 0400     		.2byte	0x4
 11242 119d F3       		.byte	0xf3
 11243 119e 01       		.uleb128 0x1
 11244 119f 50       		.byte	0x50
 11245 11a0 9F       		.byte	0x9f
 11246 11a1 00000000 		.4byte	0
 11247 11a5 00000000 		.4byte	0
 11248              	.LLST120:
 11249 11a9 2A000000 		.4byte	.LVL342
 11250 11ad 3C000000 		.4byte	.LVL343
 11251 11b1 0100     		.2byte	0x1
 11252 11b3 53       		.byte	0x53
 11253 11b4 00000000 		.4byte	0
 11254 11b8 00000000 		.4byte	0
 11255              	.LLST121:
 11256 11bc 9E000000 		.4byte	.LVL347
 11257 11c0 A2000000 		.4byte	.LVL348
 11258 11c4 0100     		.2byte	0x1
 11259 11c6 56       		.byte	0x56
 11260 11c7 00000000 		.4byte	0
 11261 11cb 00000000 		.4byte	0
 11262              	.LLST122:
 11263 11cf 00000000 		.4byte	.LVL350
 11264 11d3 0C000000 		.4byte	.LVL351
 11265 11d7 0100     		.2byte	0x1
 11266 11d9 50       		.byte	0x50
 11267 11da 00000000 		.4byte	0
 11268 11de 00000000 		.4byte	0
 11269              	.LLST123:
 11270 11e2 0C000000 		.4byte	.LVL351
 11271 11e6 22000000 		.4byte	.LVL354
 11272 11ea 0100     		.2byte	0x1
 11273 11ec 54       		.byte	0x54
 11274 11ed 24000000 		.4byte	.LVL355
 11275 11f1 26000000 		.4byte	.LVL356
 11276 11f5 0100     		.2byte	0x1
 11277 11f7 54       		.byte	0x54
 11278 11f8 00000000 		.4byte	0
 11279 11fc 00000000 		.4byte	0
 11280              	.LLST124:
 11281 1200 20000000 		.4byte	.LVL353
 11282 1204 24000000 		.4byte	.LVL355
 11283 1208 0200     		.2byte	0x2
 11284 120a 31       		.byte	0x31
 11285 120b 9F       		.byte	0x9f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 298


 11286 120c 26000000 		.4byte	.LVL356
 11287 1210 2E000000 		.4byte	.LVL358
 11288 1214 0100     		.2byte	0x1
 11289 1216 54       		.byte	0x54
 11290 1217 2E000000 		.4byte	.LVL358
 11291 121b 34000000 		.4byte	.LFE573
 11292 121f 0100     		.2byte	0x1
 11293 1221 50       		.byte	0x50
 11294 1222 00000000 		.4byte	0
 11295 1226 00000000 		.4byte	0
 11296              		.section	.debug_aranges,"",%progbits
 11297 0000 94010000 		.4byte	0x194
 11298 0004 0200     		.2byte	0x2
 11299 0006 00000000 		.4byte	.Ldebug_info0
 11300 000a 04       		.byte	0x4
 11301 000b 00       		.byte	0
 11302 000c 0000     		.2byte	0
 11303 000e 0000     		.2byte	0
 11304 0010 00000000 		.4byte	.LFB537
 11305 0014 40000000 		.4byte	.LFE537-.LFB537
 11306 0018 00000000 		.4byte	.LFB564
 11307 001c 2C000000 		.4byte	.LFE564-.LFB564
 11308 0020 00000000 		.4byte	.LFB563
 11309 0024 12000000 		.4byte	.LFE563-.LFB563
 11310 0028 00000000 		.4byte	.LFB528
 11311 002c 9E000000 		.4byte	.LFE528-.LFB528
 11312 0030 00000000 		.4byte	.LFB561
 11313 0034 58000000 		.4byte	.LFE561-.LFB561
 11314 0038 00000000 		.4byte	.LFB529
 11315 003c AC000000 		.4byte	.LFE529-.LFB529
 11316 0040 00000000 		.4byte	.LFB574
 11317 0044 68000000 		.4byte	.LFE574-.LFB574
 11318 0048 00000000 		.4byte	.LFB527
 11319 004c 62000000 		.4byte	.LFE527-.LFB527
 11320 0050 00000000 		.4byte	.LFB530
 11321 0054 A4000000 		.4byte	.LFE530-.LFB530
 11322 0058 00000000 		.4byte	.LFB533
 11323 005c 20000000 		.4byte	.LFE533-.LFB533
 11324 0060 00000000 		.4byte	.LFB534
 11325 0064 30000000 		.4byte	.LFE534-.LFB534
 11326 0068 00000000 		.4byte	.LFB535
 11327 006c D0000000 		.4byte	.LFE535-.LFB535
 11328 0070 00000000 		.4byte	.LFB538
 11329 0074 7C000000 		.4byte	.LFE538-.LFB538
 11330 0078 00000000 		.4byte	.LFB539
 11331 007c 98000000 		.4byte	.LFE539-.LFB539
 11332 0080 00000000 		.4byte	.LFB540
 11333 0084 60000000 		.4byte	.LFE540-.LFB540
 11334 0088 00000000 		.4byte	.LFB541
 11335 008c 18000000 		.4byte	.LFE541-.LFB541
 11336 0090 00000000 		.4byte	.LFB542
 11337 0094 14000000 		.4byte	.LFE542-.LFB542
 11338 0098 00000000 		.4byte	.LFB544
 11339 009c 0C000000 		.4byte	.LFE544-.LFB544
 11340 00a0 00000000 		.4byte	.LFB545
 11341 00a4 14000000 		.4byte	.LFE545-.LFB545
 11342 00a8 00000000 		.4byte	.LFB546
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 299


 11343 00ac 0C000000 		.4byte	.LFE546-.LFB546
 11344 00b0 00000000 		.4byte	.LFB547
 11345 00b4 1C000000 		.4byte	.LFE547-.LFB547
 11346 00b8 00000000 		.4byte	.LFB548
 11347 00bc F0000000 		.4byte	.LFE548-.LFB548
 11348 00c0 00000000 		.4byte	.LFB543
 11349 00c4 E4000000 		.4byte	.LFE543-.LFB543
 11350 00c8 00000000 		.4byte	.LFB531
 11351 00cc 84000000 		.4byte	.LFE531-.LFB531
 11352 00d0 00000000 		.4byte	.LFB532
 11353 00d4 44000000 		.4byte	.LFE532-.LFB532
 11354 00d8 00000000 		.4byte	.LFB562
 11355 00dc 54000000 		.4byte	.LFE562-.LFB562
 11356 00e0 00000000 		.4byte	.LFB558
 11357 00e4 2C000000 		.4byte	.LFE558-.LFB558
 11358 00e8 00000000 		.4byte	.LFB549
 11359 00ec BC000000 		.4byte	.LFE549-.LFB549
 11360 00f0 00000000 		.4byte	.LFB536
 11361 00f4 98000000 		.4byte	.LFE536-.LFB536
 11362 00f8 00000000 		.4byte	.LFB550
 11363 00fc 24000000 		.4byte	.LFE550-.LFB550
 11364 0100 00000000 		.4byte	.LFB551
 11365 0104 40000000 		.4byte	.LFE551-.LFB551
 11366 0108 00000000 		.4byte	.LFB552
 11367 010c 2C000000 		.4byte	.LFE552-.LFB552
 11368 0110 00000000 		.4byte	.LFB553
 11369 0114 7C000000 		.4byte	.LFE553-.LFB553
 11370 0118 00000000 		.4byte	.LFB554
 11371 011c 6C000000 		.4byte	.LFE554-.LFB554
 11372 0120 00000000 		.4byte	.LFB555
 11373 0124 1C000000 		.4byte	.LFE555-.LFB555
 11374 0128 00000000 		.4byte	.LFB556
 11375 012c 64000000 		.4byte	.LFE556-.LFB556
 11376 0130 00000000 		.4byte	.LFB557
 11377 0134 10000000 		.4byte	.LFE557-.LFB557
 11378 0138 00000000 		.4byte	.LFB559
 11379 013c 1C000000 		.4byte	.LFE559-.LFB559
 11380 0140 00000000 		.4byte	.LFB560
 11381 0144 20000000 		.4byte	.LFE560-.LFB560
 11382 0148 00000000 		.4byte	.LFB565
 11383 014c 0C000000 		.4byte	.LFE565-.LFB565
 11384 0150 00000000 		.4byte	.LFB566
 11385 0154 20000000 		.4byte	.LFE566-.LFB566
 11386 0158 00000000 		.4byte	.LFB567
 11387 015c 20000000 		.4byte	.LFE567-.LFB567
 11388 0160 00000000 		.4byte	.LFB568
 11389 0164 80000000 		.4byte	.LFE568-.LFB568
 11390 0168 00000000 		.4byte	.LFB569
 11391 016c A4000000 		.4byte	.LFE569-.LFB569
 11392 0170 00000000 		.4byte	.LFB570
 11393 0174 C8000000 		.4byte	.LFE570-.LFB570
 11394 0178 00000000 		.4byte	.LFB571
 11395 017c 04010000 		.4byte	.LFE571-.LFB571
 11396 0180 00000000 		.4byte	.LFB572
 11397 0184 B0000000 		.4byte	.LFE572-.LFB572
 11398 0188 00000000 		.4byte	.LFB573
 11399 018c 34000000 		.4byte	.LFE573-.LFB573
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 300


 11400 0190 00000000 		.4byte	0
 11401 0194 00000000 		.4byte	0
 11402              		.section	.debug_ranges,"",%progbits
 11403              	.Ldebug_ranges0:
 11404 0000 0E000000 		.4byte	.LBB27
 11405 0004 4A000000 		.4byte	.LBE27
 11406 0008 4E000000 		.4byte	.LBB29
 11407 000c CC000000 		.4byte	.LBE29
 11408 0010 00000000 		.4byte	0
 11409 0014 00000000 		.4byte	0
 11410 0018 22000000 		.4byte	.LBB31
 11411 001c 38000000 		.4byte	.LBE31
 11412 0020 3C000000 		.4byte	.LBB32
 11413 0024 44000000 		.4byte	.LBE32
 11414 0028 4C000000 		.4byte	.LBB33
 11415 002c 62000000 		.4byte	.LBE33
 11416 0030 00000000 		.4byte	0
 11417 0034 00000000 		.4byte	0
 11418 0038 00000000 		.4byte	.LFB537
 11419 003c 40000000 		.4byte	.LFE537
 11420 0040 00000000 		.4byte	.LFB564
 11421 0044 2C000000 		.4byte	.LFE564
 11422 0048 00000000 		.4byte	.LFB563
 11423 004c 12000000 		.4byte	.LFE563
 11424 0050 00000000 		.4byte	.LFB528
 11425 0054 9E000000 		.4byte	.LFE528
 11426 0058 00000000 		.4byte	.LFB561
 11427 005c 58000000 		.4byte	.LFE561
 11428 0060 00000000 		.4byte	.LFB529
 11429 0064 AC000000 		.4byte	.LFE529
 11430 0068 00000000 		.4byte	.LFB574
 11431 006c 68000000 		.4byte	.LFE574
 11432 0070 00000000 		.4byte	.LFB527
 11433 0074 62000000 		.4byte	.LFE527
 11434 0078 00000000 		.4byte	.LFB530
 11435 007c A4000000 		.4byte	.LFE530
 11436 0080 00000000 		.4byte	.LFB533
 11437 0084 20000000 		.4byte	.LFE533
 11438 0088 00000000 		.4byte	.LFB534
 11439 008c 30000000 		.4byte	.LFE534
 11440 0090 00000000 		.4byte	.LFB535
 11441 0094 D0000000 		.4byte	.LFE535
 11442 0098 00000000 		.4byte	.LFB538
 11443 009c 7C000000 		.4byte	.LFE538
 11444 00a0 00000000 		.4byte	.LFB539
 11445 00a4 98000000 		.4byte	.LFE539
 11446 00a8 00000000 		.4byte	.LFB540
 11447 00ac 60000000 		.4byte	.LFE540
 11448 00b0 00000000 		.4byte	.LFB541
 11449 00b4 18000000 		.4byte	.LFE541
 11450 00b8 00000000 		.4byte	.LFB542
 11451 00bc 14000000 		.4byte	.LFE542
 11452 00c0 00000000 		.4byte	.LFB544
 11453 00c4 0C000000 		.4byte	.LFE544
 11454 00c8 00000000 		.4byte	.LFB545
 11455 00cc 14000000 		.4byte	.LFE545
 11456 00d0 00000000 		.4byte	.LFB546
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 301


 11457 00d4 0C000000 		.4byte	.LFE546
 11458 00d8 00000000 		.4byte	.LFB547
 11459 00dc 1C000000 		.4byte	.LFE547
 11460 00e0 00000000 		.4byte	.LFB548
 11461 00e4 F0000000 		.4byte	.LFE548
 11462 00e8 00000000 		.4byte	.LFB543
 11463 00ec E4000000 		.4byte	.LFE543
 11464 00f0 00000000 		.4byte	.LFB531
 11465 00f4 84000000 		.4byte	.LFE531
 11466 00f8 00000000 		.4byte	.LFB532
 11467 00fc 44000000 		.4byte	.LFE532
 11468 0100 00000000 		.4byte	.LFB562
 11469 0104 54000000 		.4byte	.LFE562
 11470 0108 00000000 		.4byte	.LFB558
 11471 010c 2C000000 		.4byte	.LFE558
 11472 0110 00000000 		.4byte	.LFB549
 11473 0114 BC000000 		.4byte	.LFE549
 11474 0118 00000000 		.4byte	.LFB536
 11475 011c 98000000 		.4byte	.LFE536
 11476 0120 00000000 		.4byte	.LFB550
 11477 0124 24000000 		.4byte	.LFE550
 11478 0128 00000000 		.4byte	.LFB551
 11479 012c 40000000 		.4byte	.LFE551
 11480 0130 00000000 		.4byte	.LFB552
 11481 0134 2C000000 		.4byte	.LFE552
 11482 0138 00000000 		.4byte	.LFB553
 11483 013c 7C000000 		.4byte	.LFE553
 11484 0140 00000000 		.4byte	.LFB554
 11485 0144 6C000000 		.4byte	.LFE554
 11486 0148 00000000 		.4byte	.LFB555
 11487 014c 1C000000 		.4byte	.LFE555
 11488 0150 00000000 		.4byte	.LFB556
 11489 0154 64000000 		.4byte	.LFE556
 11490 0158 00000000 		.4byte	.LFB557
 11491 015c 10000000 		.4byte	.LFE557
 11492 0160 00000000 		.4byte	.LFB559
 11493 0164 1C000000 		.4byte	.LFE559
 11494 0168 00000000 		.4byte	.LFB560
 11495 016c 20000000 		.4byte	.LFE560
 11496 0170 00000000 		.4byte	.LFB565
 11497 0174 0C000000 		.4byte	.LFE565
 11498 0178 00000000 		.4byte	.LFB566
 11499 017c 20000000 		.4byte	.LFE566
 11500 0180 00000000 		.4byte	.LFB567
 11501 0184 20000000 		.4byte	.LFE567
 11502 0188 00000000 		.4byte	.LFB568
 11503 018c 80000000 		.4byte	.LFE568
 11504 0190 00000000 		.4byte	.LFB569
 11505 0194 A4000000 		.4byte	.LFE569
 11506 0198 00000000 		.4byte	.LFB570
 11507 019c C8000000 		.4byte	.LFE570
 11508 01a0 00000000 		.4byte	.LFB571
 11509 01a4 04010000 		.4byte	.LFE571
 11510 01a8 00000000 		.4byte	.LFB572
 11511 01ac B0000000 		.4byte	.LFE572
 11512 01b0 00000000 		.4byte	.LFB573
 11513 01b4 34000000 		.4byte	.LFE573
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 302


 11514 01b8 00000000 		.4byte	0
 11515 01bc 00000000 		.4byte	0
 11516              		.section	.debug_line,"",%progbits
 11517              	.Ldebug_line0:
 11518 0000 A00D0000 		.section	.debug_str,"MS",%progbits,1
 11518      0200AD04 
 11518      00000201 
 11518      FB0E0D00 
 11518      01010101 
 11519              	.LASF390:
 11520 0000 764C6973 		.ascii	"vListInsert\000"
 11520      74496E73 
 11520      65727400 
 11521              	.LASF376:
 11522 000c 63795F62 		.ascii	"cy_ble_connState\000"
 11522      6C655F63 
 11522      6F6E6E53 
 11522      74617465 
 11522      00
 11523              	.LASF211:
 11524 001d 75784E75 		.ascii	"uxNumberOfItems\000"
 11524      6D626572 
 11524      4F664974 
 11524      656D7300 
 11525              	.LASF167:
 11526 002d 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_READ\000"
 11526      4C455F45 
 11526      56545F4C 
 11526      32434150 
 11526      5F434246 
 11527              	.LASF25:
 11528 004d 63795F63 		.ascii	"cy_cb_scb_spi_handle_events_t\000"
 11528      625F7363 
 11528      625F7370 
 11528      695F6861 
 11528      6E646C65 
 11529              	.LASF145:
 11530 006b 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BLOB_RSP\000"
 11530      4C455F45 
 11530      56545F47 
 11530      41545443 
 11530      5F524541 
 11531              	.LASF115:
 11532 008a 43595F42 		.ascii	"CY_BLE_EVT_GAPP_ADVERTISEMENT_START_STOP\000"
 11532      4C455F45 
 11532      56545F47 
 11532      4150505F 
 11532      41445645 
 11533              	.LASF388:
 11534 00b3 76506F72 		.ascii	"vPortExitCritical\000"
 11534      74457869 
 11534      74437269 
 11534      74696361 
 11534      6C00
 11535              	.LASF169:
 11536 00c5 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_TX_CREDIT_IND\000"
 11536      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 303


 11536      56545F4C 
 11536      32434150 
 11536      5F434246 
 11537              	.LASF62:
 11538 00e9 43595F42 		.ascii	"CY_BLE_EVT_PENDING_FLASH_WRITE\000"
 11538      4C455F45 
 11538      56545F50 
 11538      454E4449 
 11538      4E475F46 
 11539              	.LASF100:
 11540 0108 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_DECRYPT_COMPLETE\000"
 11540      4C455F45 
 11540      56545F41 
 11540      45535F43 
 11540      434D5F44 
 11541              	.LASF153:
 11542 012c 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_NTF\000"
 11542      4C455F45 
 11542      56545F47 
 11542      41545443 
 11542      5F48414E 
 11543              	.LASF377:
 11544 014e 43595F45 		.ascii	"CY_EINK_SPIM_context\000"
 11544      494E4B5F 
 11544      5350494D 
 11544      5F636F6E 
 11544      74657874 
 11545              	.LASF394:
 11546 0163 78506F72 		.ascii	"xPortStartScheduler\000"
 11546      74537461 
 11546      72745363 
 11546      68656475 
 11546      6C657200 
 11547              	.LASF235:
 11548 0177 75785072 		.ascii	"uxPriority\000"
 11548      696F7269 
 11548      747900
 11549              	.LASF309:
 11550 0182 7078436F 		.ascii	"pxConstList\000"
 11550      6E73744C 
 11550      69737400 
 11551              	.LASF231:
 11552 018e 74736B54 		.ascii	"tskTaskControlBlock\000"
 11552      61736B43 
 11552      6F6E7472 
 11552      6F6C426C 
 11552      6F636B00 
 11553              	.LASF94:
 11554 01a2 43595F42 		.ascii	"CY_BLE_EVT_SET_TX_PWR_COMPLETE\000"
 11554      4C455F45 
 11554      56545F53 
 11554      45545F54 
 11554      585F5057 
 11555              	.LASF294:
 11556 01c1 75785065 		.ascii	"uxPendedCounts\000"
 11556      6E646564 
 11556      436F756E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 304


 11556      747300
 11557              	.LASF327:
 11558 01d0 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 11558      6B536574 
 11558      54687265 
 11558      61644C6F 
 11558      63616C53 
 11559              	.LASF131:
 11560 01f2 43595F42 		.ascii	"CY_BLE_EVT_GAP_GEN_SET_LOCAL_P256_KEYS_COMPLETE\000"
 11560      4C455F45 
 11560      56545F47 
 11560      41505F47 
 11560      454E5F53 
 11561              	.LASF341:
 11562 0222 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 11562      7473546F 
 11562      436C6561 
 11562      724F6E45 
 11562      78697400 
 11563              	.LASF43:
 11564 0236 73616D70 		.ascii	"sampleTime01\000"
 11564      6C655469 
 11564      6D653031 
 11564      00
 11565              	.LASF404:
 11566 0243 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 11566      736B4765 
 11566      744E756D 
 11566      6265724F 
 11566      66546173 
 11567              	.LASF334:
 11568 025a 78546173 		.ascii	"xTaskGetSchedulerState\000"
 11568      6B476574 
 11568      53636865 
 11568      64756C65 
 11568      72537461 
 11569              	.LASF350:
 11570 0271 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 11570      67686572 
 11570      5072696F 
 11570      72697479 
 11570      5461736B 
 11571              	.LASF216:
 11572 028b 654E6F41 		.ascii	"eNoAction\000"
 11572      6374696F 
 11572      6E00
 11573              	.LASF168:
 11574 0295 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_RX_CREDIT_IND\000"
 11574      4C455F45 
 11574      56545F4C 
 11574      32434150 
 11574      5F434246 
 11575              	.LASF0:
 11576 02b9 756E7369 		.ascii	"unsigned int\000"
 11576      676E6564 
 11576      20696E74 
 11576      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 305


 11577              	.LASF313:
 11578 02c6 70784576 		.ascii	"pxEventList\000"
 11578      656E744C 
 11578      69737400 
 11579              	.LASF365:
 11580 02d2 78536368 		.ascii	"xSchedulerRunning\000"
 11580      6564756C 
 11580      65725275 
 11580      6E6E696E 
 11580      6700
 11581              	.LASF375:
 11582 02e4 63795F62 		.ascii	"cy_ble_connHandle\000"
 11582      6C655F63 
 11582      6F6E6E48 
 11582      616E646C 
 11582      6500
 11583              	.LASF212:
 11584 02f6 7078496E 		.ascii	"pxIndex\000"
 11584      64657800 
 11585              	.LASF20:
 11586 02fe 75696E74 		.ascii	"uint32_t\000"
 11586      33325F74 
 11586      00
 11587              	.LASF196:
 11588 0307 53746163 		.ascii	"StackType_t\000"
 11588      6B547970 
 11588      655F7400 
 11589              	.LASF39:
 11590 0313 43595F53 		.ascii	"CY_SAR_RANGE_COND_OUTSIDE\000"
 11590      41525F52 
 11590      414E4745 
 11590      5F434F4E 
 11590      445F4F55 
 11591              	.LASF222:
 11592 032d 7854494D 		.ascii	"xTIME_OUT\000"
 11592      455F4F55 
 11592      5400
 11593              	.LASF229:
 11594 0337 756C5061 		.ascii	"ulParameters\000"
 11594      72616D65 
 11594      74657273 
 11594      00
 11595              	.LASF32:
 11596 0344 74784275 		.ascii	"txBufIdx\000"
 11596      66496478 
 11596      00
 11597              	.LASF360:
 11598 034d 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 11598      6C657465 
 11598      64546173 
 11598      6B735761 
 11598      6974696E 
 11599              	.LASF63:
 11600 036a 43595F42 		.ascii	"CY_BLE_EVT_FLASH_CORRUPT\000"
 11600      4C455F45 
 11600      56545F46 
 11600      4C415348 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 306


 11600      5F434F52 
 11601              	.LASF10:
 11602 0383 5F5F696E 		.ascii	"__int32_t\000"
 11602      7433325F 
 11602      7400
 11603              	.LASF201:
 11604 038d 784C4953 		.ascii	"xLIST_ITEM\000"
 11604      545F4954 
 11604      454D00
 11605              	.LASF353:
 11606 0398 70785265 		.ascii	"pxReadyTasksLists\000"
 11606      61647954 
 11606      61736B73 
 11606      4C697374 
 11606      7300
 11607              	.LASF110:
 11608 03aa 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_REQ\000"
 11608      4C455F45 
 11608      56545F47 
 11608      41505F41 
 11608      5554485F 
 11609              	.LASF189:
 11610 03c2 6368616E 		.ascii	"channelBase\000"
 11610      6E656C42 
 11610      61736500 
 11611              	.LASF188:
 11612 03ce 63795F65 		.ascii	"cy_en_ble_conn_state_t\000"
 11612      6E5F626C 
 11612      655F636F 
 11612      6E6E5F73 
 11612      74617465 
 11613              	.LASF142:
 11614 03e5 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_INFO_RSP\000"
 11614      4C455F45 
 11614      56545F47 
 11614      41545443 
 11614      5F46494E 
 11615              	.LASF87:
 11616 0404 43595F42 		.ascii	"CY_BLE_EVT_SET_PRIVACY_MODE_COMPLETE\000"
 11616      4C455F45 
 11616      56545F53 
 11616      45545F50 
 11616      52495641 
 11617              	.LASF191:
 11618 0429 6877436F 		.ascii	"hwConfigStc\000"
 11618      6E666967 
 11618      53746300 
 11619              	.LASF112:
 11620 0435 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_DISPLAY_REQUEST\000"
 11620      4C455F45 
 11620      56545F47 
 11620      41505F50 
 11620      4153534B 
 11621              	.LASF210:
 11622 045c 784C4953 		.ascii	"xLIST\000"
 11622      5400
 11623              	.LASF348:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 307


 11624 0462 75634F72 		.ascii	"ucOriginalNotifyState\000"
 11624      6967696E 
 11624      616C4E6F 
 11624      74696679 
 11624      53746174 
 11625              	.LASF321:
 11626 0478 76546173 		.ascii	"vTaskSetTimeOutState\000"
 11626      6B536574 
 11626      54696D65 
 11626      4F757453 
 11626      74617465 
 11627              	.LASF289:
 11628 048d 78546173 		.ascii	"xTaskIncrementTick\000"
 11628      6B496E63 
 11628      72656D65 
 11628      6E745469 
 11628      636B00
 11629              	.LASF146:
 11630 04a0 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_MULTI_RSP\000"
 11630      4C455F45 
 11630      56545F47 
 11630      41545443 
 11630      5F524541 
 11631              	.LASF136:
 11632 04c0 43595F42 		.ascii	"CY_BLE_EVT_GATT_CONNECT_IND\000"
 11632      4C455F45 
 11632      56545F47 
 11632      4154545F 
 11632      434F4E4E 
 11633              	.LASF175:
 11634 04dc 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOPPED\000"
 11634      4C455F41 
 11634      44565F53 
 11634      54415445 
 11634      5F53544F 
 11635              	.LASF355:
 11636 04f5 7844656C 		.ascii	"xDelayedTaskList2\000"
 11636      61796564 
 11636      5461736B 
 11636      4C697374 
 11636      3200
 11637              	.LASF50:
 11638 0507 73617449 		.ascii	"satIntrMask\000"
 11638      6E74724D 
 11638      61736B00 
 11639              	.LASF223:
 11640 0513 784F7665 		.ascii	"xOverflowCount\000"
 11640      72666C6F 
 11640      77436F75 
 11640      6E7400
 11641              	.LASF402:
 11642 0522 76506F72 		.ascii	"vPortSetBASEPRI\000"
 11642      74536574 
 11642      42415345 
 11642      50524900 
 11643              	.LASF386:
 11644 0532 76506F72 		.ascii	"vPortEnterCritical\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 308


 11644      74456E74 
 11644      65724372 
 11644      69746963 
 11644      616C00
 11645              	.LASF233:
 11646 0545 78537461 		.ascii	"xStateListItem\000"
 11646      74654C69 
 11646      73744974 
 11646      656D00
 11647              	.LASF85:
 11648 0554 43595F42 		.ascii	"CY_BLE_EVT_SET_PHY_COMPLETE\000"
 11648      4C455F45 
 11648      56545F53 
 11648      45545F50 
 11648      48595F43 
 11649              	.LASF158:
 11650 0570 43595F42 		.ascii	"CY_BLE_EVT_GATTS_READ_CHAR_VAL_ACCESS_REQ\000"
 11650      4C455F45 
 11650      56545F47 
 11650      41545453 
 11650      5F524541 
 11651              	.LASF396:
 11652 059a 76417070 		.ascii	"vApplicationIdleHook\000"
 11652      6C696361 
 11652      74696F6E 
 11652      49646C65 
 11652      486F6F6B 
 11653              	.LASF398:
 11654 05af 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 11654      43313120 
 11654      352E342E 
 11654      31203230 
 11654      31363036 
 11655 05e2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 11655      20726576 
 11655      6973696F 
 11655      6E203233 
 11655      37373135 
 11656 0615 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 11656      70202D6D 
 11656      6670753D 
 11656      66707634 
 11656      2D73702D 
 11657 0648 65637469 		.ascii	"ections -ffat-lto-objects\000"
 11657      6F6E7320 
 11657      2D666661 
 11657      742D6C74 
 11657      6F2D6F62 
 11658              	.LASF130:
 11659 0662 43595F42 		.ascii	"CY_BLE_EVT_GAP_RESOLVE_DEVICE_COMPLETE\000"
 11659      4C455F45 
 11659      56545F47 
 11659      41505F52 
 11659      45534F4C 
 11660              	.LASF36:
 11661 0689 43595F53 		.ascii	"CY_SAR_RANGE_COND_BELOW\000"
 11661      41525F52 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 309


 11661      414E4745 
 11661      5F434F4E 
 11661      445F4245 
 11662              	.LASF181:
 11663 06a1 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCONNECTED_DISCOVERED\000"
 11663      4C455F43 
 11663      4F4E4E5F 
 11663      53544154 
 11663      455F434C 
 11664              	.LASF279:
 11665 06d2 78546173 		.ascii	"xTaskToResume\000"
 11665      6B546F52 
 11665      6573756D 
 11665      6500
 11666              	.LASF324:
 11667 06e0 70785469 		.ascii	"pxTicksToWait\000"
 11667      636B7354 
 11667      6F576169 
 11667      7400
 11668              	.LASF139:
 11669 06ee 43595F42 		.ascii	"CY_BLE_EVT_GATTC_XCHNG_MTU_RSP\000"
 11669      4C455F45 
 11669      56545F47 
 11669      41545443 
 11669      5F584348 
 11670              	.LASF155:
 11671 070d 43595F42 		.ascii	"CY_BLE_EVT_GATTS_HANDLE_VALUE_CNF\000"
 11671      4C455F45 
 11671      56545F47 
 11671      41545453 
 11671      5F48414E 
 11672              	.LASF264:
 11673 072f 78436F6E 		.ascii	"xConstTickCount\000"
 11673      73745469 
 11673      636B436F 
 11673      756E7400 
 11674              	.LASF393:
 11675 073f 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 11675      65724372 
 11675      65617465 
 11675      54696D65 
 11675      72546173 
 11676              	.LASF144:
 11677 0755 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_RSP\000"
 11677      4C455F45 
 11677      56545F47 
 11677      41545443 
 11677      5F524541 
 11678              	.LASF241:
 11679 076f 74736B54 		.ascii	"tskTCB\000"
 11679      434200
 11680              	.LASF349:
 11681 0776 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 11681      6B47656E 
 11681      65726963 
 11681      4E6F7469 
 11681      66794672 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 310


 11682              	.LASF198:
 11683 0790 55426173 		.ascii	"UBaseType_t\000"
 11683      65547970 
 11683      655F7400 
 11684              	.LASF180:
 11685 079c 43595F42 		.ascii	"CY_BLE_CONN_STATE_DISCONNECTED\000"
 11685      4C455F43 
 11685      4F4E4E5F 
 11685      53544154 
 11685      455F4449 
 11686              	.LASF77:
 11687 07bb 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_ENABLE_COMPLETE\000"
 11687      4C455F45 
 11687      56545F53 
 11687      45545F52 
 11687      50415F45 
 11688              	.LASF277:
 11689 07de 78596965 		.ascii	"xYieldRequired\000"
 11689      6C645265 
 11689      71756972 
 11689      656400
 11690              	.LASF58:
 11691 07ed 43595F42 		.ascii	"CY_BLE_EVT_STACK_ON\000"
 11691      4C455F45 
 11691      56545F53 
 11691      5441434B 
 11691      5F4F4E00 
 11692              	.LASF88:
 11693 0801 43595F42 		.ascii	"CY_BLE_EVT_LL_CNTRL_PROC_PENDING_COMPLETE\000"
 11693      4C455F45 
 11693      56545F4C 
 11693      4C5F434E 
 11693      54524C5F 
 11694              	.LASF243:
 11695 082b 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 11695      6967696E 
 11695      616C4241 
 11695      53455052 
 11695      4900
 11696              	.LASF343:
 11697 083d 78546173 		.ascii	"xTaskGenericNotify\000"
 11697      6B47656E 
 11697      65726963 
 11697      4E6F7469 
 11697      667900
 11698              	.LASF154:
 11699 0850 43595F42 		.ascii	"CY_BLE_EVT_GATTC_HANDLE_VALUE_IND\000"
 11699      4C455F45 
 11699      56545F47 
 11699      41545443 
 11699      5F48414E 
 11700              	.LASF74:
 11701 0872 43595F42 		.ascii	"CY_BLE_EVT_GET_PEER_RPA_COMPLETE\000"
 11701      4C455F45 
 11701      56545F47 
 11701      45545F50 
 11701      4545525F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 311


 11702              	.LASF318:
 11703 0893 7078556E 		.ascii	"pxUnblockedTCB\000"
 11703      626C6F63 
 11703      6B656454 
 11703      434200
 11704              	.LASF57:
 11705 08a2 43595F42 		.ascii	"CY_BLE_EVT_INVALID\000"
 11705      4C455F45 
 11705      56545F49 
 11705      4E56414C 
 11705      494400
 11706              	.LASF265:
 11707 08b5 75735374 		.ascii	"usStackDepth\000"
 11707      61636B44 
 11707      65707468 
 11707      00
 11708              	.LASF337:
 11709 08c2 78436C65 		.ascii	"xClearCountOnExit\000"
 11709      6172436F 
 11709      756E744F 
 11709      6E457869 
 11709      7400
 11710              	.LASF60:
 11711 08d4 43595F42 		.ascii	"CY_BLE_EVT_STACK_BUSY_STATUS\000"
 11711      4C455F45 
 11711      56545F53 
 11711      5441434B 
 11711      5F425553 
 11712              	.LASF14:
 11713 08f1 6C6F6E67 		.ascii	"long long unsigned int\000"
 11713      206C6F6E 
 11713      6720756E 
 11713      7369676E 
 11713      65642069 
 11714              	.LASF75:
 11715 0908 43595F42 		.ascii	"CY_BLE_EVT_GET_LOCAL_RPA_COMPLETE\000"
 11715      4C455F45 
 11715      56545F47 
 11715      45545F4C 
 11715      4F43414C 
 11716              	.LASF190:
 11717 092a 6E756D43 		.ascii	"numChannels\000"
 11717      68616E6E 
 11717      656C7300 
 11718              	.LASF219:
 11719 0936 65536574 		.ascii	"eSetValueWithOverwrite\000"
 11719      56616C75 
 11719      65576974 
 11719      684F7665 
 11719      72777269 
 11720              	.LASF156:
 11721 094d 43595F42 		.ascii	"CY_BLE_EVT_GATTS_DATA_SIGNED_CMD_REQ\000"
 11721      4C455F45 
 11721      56545F47 
 11721      41545453 
 11721      5F444154 
 11722              	.LASF72:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 312


 11723 0972 43595F42 		.ascii	"CY_BLE_EVT_GET_DATA_LENGTH_COMPLETE\000"
 11723      4C455F45 
 11723      56545F47 
 11723      45545F44 
 11723      4154415F 
 11724              	.LASF286:
 11725 0996 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 11725      6B476574 
 11725      5469636B 
 11725      436F756E 
 11725      7446726F 
 11726              	.LASF271:
 11727 09af 75785361 		.ascii	"uxSavedInterruptState\000"
 11727      76656449 
 11727      6E746572 
 11727      72757074 
 11727      53746174 
 11728              	.LASF340:
 11729 09c5 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 11729      7473546F 
 11729      436C6561 
 11729      724F6E45 
 11729      6E747279 
 11730              	.LASF179:
 11731 09da 63795F65 		.ascii	"cy_en_ble_adv_state_t\000"
 11731      6E5F626C 
 11731      655F6164 
 11731      765F7374 
 11731      6174655F 
 11732              	.LASF92:
 11733 09f0 43595F42 		.ascii	"CY_BLE_EVT_GET_RSSI_COMPLETE\000"
 11733      4C455F45 
 11733      56545F47 
 11733      45545F52 
 11733      5353495F 
 11734              	.LASF358:
 11735 0a0d 7850656E 		.ascii	"xPendingReadyList\000"
 11735      64696E67 
 11735      52656164 
 11735      794C6973 
 11735      7400
 11736              	.LASF280:
 11737 0a1f 78546173 		.ascii	"xTaskResumeFromISR\000"
 11737      6B526573 
 11737      756D6546 
 11737      726F6D49 
 11737      535200
 11738              	.LASF45:
 11739 0a32 72616E67 		.ascii	"rangeThres\000"
 11739      65546872 
 11739      657300
 11740              	.LASF176:
 11741 0a3d 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADV_INITIATED\000"
 11741      4C455F41 
 11741      44565F53 
 11741      54415445 
 11741      5F414456 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 313


 11742              	.LASF8:
 11743 0a5c 5F5F7569 		.ascii	"__uint16_t\000"
 11743      6E743136 
 11743      5F7400
 11744              	.LASF331:
 11745 0a67 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 11745      736B4765 
 11745      74546872 
 11745      6561644C 
 11745      6F63616C 
 11746              	.LASF332:
 11747 0a8a 70765265 		.ascii	"pvReturn\000"
 11747      7475726E 
 11747      00
 11748              	.LASF291:
 11749 0a93 70785465 		.ascii	"pxTemp\000"
 11749      6D7000
 11750              	.LASF118:
 11751 0a9a 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENCRYPT_CHANGE\000"
 11751      4C455F45 
 11751      56545F47 
 11751      41505F45 
 11751      4E435259 
 11752              	.LASF90:
 11753 0ab8 43595F42 		.ascii	"CY_BLE_EVT_SET_DEVICE_ADDR_COMPLETE\000"
 11753      4C455F45 
 11753      56545F53 
 11753      45545F44 
 11753      45564943 
 11754              	.LASF56:
 11755 0adc 63795F73 		.ascii	"cy_stc_sar_config_t\000"
 11755      74635F73 
 11755      61725F63 
 11755      6F6E6669 
 11755      675F7400 
 11756              	.LASF173:
 11757 0af0 61747449 		.ascii	"attId\000"
 11757      6400
 11758              	.LASF41:
 11759 0af6 6374726C 		.ascii	"ctrl\000"
 11759      00
 11760              	.LASF325:
 11761 0afb 76546173 		.ascii	"vTaskSuspendAll\000"
 11761      6B537573 
 11761      70656E64 
 11761      416C6C00 
 11762              	.LASF184:
 11763 0b0b 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_INCL_DISCOVERING\000"
 11763      4C455F43 
 11763      4F4E4E5F 
 11763      53544154 
 11763      455F434C 
 11764              	.LASF124:
 11765 0b35 43595F42 		.ascii	"CY_BLE_EVT_GAP_OOB_GENERATED_NOTIFICATION\000"
 11765      4C455F45 
 11765      56545F47 
 11765      41505F4F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 314


 11765      4F425F47 
 11766              	.LASF238:
 11767 0b5f 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 11767      72656164 
 11767      4C6F6361 
 11767      6C53746F 
 11767      72616765 
 11768              	.LASF225:
 11769 0b7c 54696D65 		.ascii	"TimeOut_t\000"
 11769      4F75745F 
 11769      7400
 11770              	.LASF37:
 11771 0b86 43595F53 		.ascii	"CY_SAR_RANGE_COND_INSIDE\000"
 11771      41525F52 
 11771      414E4745 
 11771      5F434F4E 
 11771      445F494E 
 11772              	.LASF27:
 11773 0b9f 72784275 		.ascii	"rxBuf\000"
 11773      6600
 11774              	.LASF116:
 11775 0ba5 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_CONNECTED\000"
 11775      4C455F45 
 11775      56545F47 
 11775      41505F44 
 11775      45564943 
 11776              	.LASF89:
 11777 0bc5 43595F42 		.ascii	"CY_BLE_EVT_SOFT_RESET_COMPLETE\000"
 11777      4C455F45 
 11777      56545F53 
 11777      4F46545F 
 11777      52455345 
 11778              	.LASF221:
 11779 0be4 654E6F74 		.ascii	"eNotifyAction\000"
 11779      69667941 
 11779      6374696F 
 11779      6E00
 11780              	.LASF150:
 11781 0bf2 43595F42 		.ascii	"CY_BLE_EVT_GATTS_PREP_WRITE_REQ\000"
 11781      4C455F45 
 11781      56545F47 
 11781      41545453 
 11781      5F505245 
 11782              	.LASF4:
 11783 0c12 73697A65 		.ascii	"size_t\000"
 11783      5F7400
 11784              	.LASF33:
 11785 0c19 63624576 		.ascii	"cbEvents\000"
 11785      656E7473 
 11785      00
 11786              	.LASF218:
 11787 0c22 65496E63 		.ascii	"eIncrement\000"
 11787      72656D65 
 11787      6E7400
 11788              	.LASF22:
 11789 0c2d 646F7562 		.ascii	"double\000"
 11789      6C6500
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 315


 11790              	.LASF208:
 11791 0c34 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 11791      495F4C49 
 11791      53545F49 
 11791      54454D00 
 11792              	.LASF316:
 11793 0c44 78576169 		.ascii	"xWaitIndefinitely\000"
 11793      74496E64 
 11793      6566696E 
 11793      6974656C 
 11793      7900
 11794              	.LASF122:
 11795 0c56 43595F42 		.ascii	"CY_BLE_EVT_GAP_NUMERIC_COMPARISON_REQUEST\000"
 11795      4C455F45 
 11795      56545F47 
 11795      41505F4E 
 11795      554D4552 
 11796              	.LASF171:
 11797 0c80 43595F42 		.ascii	"CY_BLE_EVT_MAX\000"
 11797      4C455F45 
 11797      56545F4D 
 11797      415800
 11798              	.LASF363:
 11799 0c8f 78546963 		.ascii	"xTickCount\000"
 11799      6B436F75 
 11799      6E7400
 11800              	.LASF143:
 11801 0c9a 43595F42 		.ascii	"CY_BLE_EVT_GATTC_FIND_BY_TYPE_VALUE_RSP\000"
 11801      4C455F45 
 11801      56545F47 
 11801      41545443 
 11801      5F46494E 
 11802              	.LASF166:
 11803 0cc2 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_CNF\000"
 11803      4C455F45 
 11803      56545F4C 
 11803      32434150 
 11803      5F434246 
 11804              	.LASF283:
 11805 0ce4 76546173 		.ascii	"vTaskEndScheduler\000"
 11805      6B456E64 
 11805      53636865 
 11805      64756C65 
 11805      7200
 11806              	.LASF268:
 11807 0cf6 75785461 		.ascii	"uxTaskPriorityGet\000"
 11807      736B5072 
 11807      696F7269 
 11807      74794765 
 11807      7400
 11808              	.LASF97:
 11809 0d08 43595F42 		.ascii	"CY_BLE_EVT_RANDOM_NUM_GEN_COMPLETE\000"
 11809      4C455F45 
 11809      56545F52 
 11809      414E444F 
 11809      4D5F4E55 
 11810              	.LASF177:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 316


 11811 0d2b 43595F42 		.ascii	"CY_BLE_ADV_STATE_ADVERTISING\000"
 11811      4C455F41 
 11811      44565F53 
 11811      54415445 
 11811      5F414456 
 11812              	.LASF387:
 11813 0d48 764C6973 		.ascii	"vListInsertEnd\000"
 11813      74496E73 
 11813      65727445 
 11813      6E6400
 11814              	.LASF127:
 11815 0d57 43595F42 		.ascii	"CY_BLE_EVT_GAP_SMP_NEGOTIATED_AUTH_INFO\000"
 11815      4C455F45 
 11815      56545F47 
 11815      41505F53 
 11815      4D505F4E 
 11816              	.LASF361:
 11817 0d7f 78537573 		.ascii	"xSuspendedTaskList\000"
 11817      70656E64 
 11817      65645461 
 11817      736B4C69 
 11817      737400
 11818              	.LASF70:
 11819 0d92 43595F42 		.ascii	"CY_BLE_EVT_SET_DATA_LENGTH_COMPLETE\000"
 11819      4C455F45 
 11819      56545F53 
 11819      45545F44 
 11819      4154415F 
 11820              	.LASF252:
 11821 0db6 70634E61 		.ascii	"pcName\000"
 11821      6D6500
 11822              	.LASF148:
 11823 0dbd 43595F42 		.ascii	"CY_BLE_EVT_GATTC_WRITE_RSP\000"
 11823      4C455F45 
 11823      56545F47 
 11823      41545443 
 11823      5F575249 
 11824              	.LASF328:
 11825 0dd8 78546173 		.ascii	"xTaskToSet\000"
 11825      6B546F53 
 11825      657400
 11826              	.LASF357:
 11827 0de3 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 11827      6572666C 
 11827      6F774465 
 11827      6C617965 
 11827      64546173 
 11828              	.LASF187:
 11829 0dfd 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DISCOVERED\000"
 11829      4C455F43 
 11829      4F4E4E5F 
 11829      53544154 
 11829      455F434C 
 11830              	.LASF312:
 11831 0e21 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 11831      6B506C61 
 11831      63654F6E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 317


 11831      4576656E 
 11831      744C6973 
 11832              	.LASF299:
 11833 0e37 76546173 		.ascii	"vTaskDelay\000"
 11833      6B44656C 
 11833      617900
 11834              	.LASF162:
 11835 0e42 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_COMMAND_REJ\000"
 11835      4C455F45 
 11835      56545F4C 
 11835      32434150 
 11835      5F434F4D 
 11836              	.LASF67:
 11837 0e5f 43595F42 		.ascii	"CY_BLE_EVT_GET_CHANNEL_MAP_COMPLETE\000"
 11837      4C455F45 
 11837      56545F47 
 11837      45545F43 
 11837      48414E4E 
 11838              	.LASF24:
 11839 0e83 5F426F6F 		.ascii	"_Bool\000"
 11839      6C00
 11840              	.LASF248:
 11841 0e89 70727644 		.ascii	"prvDeleteTCB\000"
 11841      656C6574 
 11841      65544342 
 11841      00
 11842              	.LASF61:
 11843 0e96 43595F42 		.ascii	"CY_BLE_EVT_MEMORY_REQUEST\000"
 11843      4C455F45 
 11843      56545F4D 
 11843      454D4F52 
 11843      595F5245 
 11844              	.LASF55:
 11845 0eb0 76726566 		.ascii	"vrefMvValue\000"
 11845      4D765661 
 11845      6C756500 
 11846              	.LASF239:
 11847 0ebc 756C4E6F 		.ascii	"ulNotifiedValue\000"
 11847      74696669 
 11847      65645661 
 11847      6C756500 
 11848              	.LASF108:
 11849 0ecc 43595F42 		.ascii	"CY_BLE_EVT_SET_CONN_PRIORITY_COMPLETE\000"
 11849      4C455F45 
 11849      56545F53 
 11849      45545F43 
 11849      4F4E4E5F 
 11850              	.LASF178:
 11851 0ef2 43595F42 		.ascii	"CY_BLE_ADV_STATE_STOP_INITIATED\000"
 11851      4C455F41 
 11851      44565F53 
 11851      54415445 
 11851      5F53544F 
 11852              	.LASF359:
 11853 0f12 78546173 		.ascii	"xTasksWaitingTermination\000"
 11853      6B735761 
 11853      6974696E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 318


 11853      67546572 
 11853      6D696E61 
 11854              	.LASF185:
 11855 0f2b 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_CHAR_DISCOVERING\000"
 11855      4C455F43 
 11855      4F4E4E5F 
 11855      53544154 
 11855      455F434C 
 11856              	.LASF38:
 11857 0f55 43595F53 		.ascii	"CY_SAR_RANGE_COND_ABOVE\000"
 11857      41525F52 
 11857      414E4745 
 11857      5F434F4E 
 11857      445F4142 
 11858              	.LASF317:
 11859 0f6d 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 11859      6B52656D 
 11859      6F766546 
 11859      726F6D45 
 11859      76656E74 
 11860              	.LASF16:
 11861 0f86 63686172 		.ascii	"char\000"
 11861      00
 11862              	.LASF99:
 11863 0f8b 43595F42 		.ascii	"CY_BLE_EVT_AES_CCM_ENCRYPT_COMPLETE\000"
 11863      4C455F45 
 11863      56545F41 
 11863      45535F43 
 11863      434D5F45 
 11864              	.LASF207:
 11865 0faf 4C697374 		.ascii	"ListItem_t\000"
 11865      4974656D 
 11865      5F7400
 11866              	.LASF47:
 11867 0fba 6368616E 		.ascii	"chanEn\000"
 11867      456E00
 11868              	.LASF220:
 11869 0fc1 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 11869      56616C75 
 11869      65576974 
 11869      686F7574 
 11869      4F766572 
 11870              	.LASF339:
 11871 0fdb 78546173 		.ascii	"xTaskNotifyWait\000"
 11871      6B4E6F74 
 11871      69667957 
 11871      61697400 
 11872              	.LASF240:
 11873 0feb 75634E6F 		.ascii	"ucNotifyState\000"
 11873      74696679 
 11873      53746174 
 11873      6500
 11874              	.LASF253:
 11875 0ff9 756C5374 		.ascii	"ulStackDepth\000"
 11875      61636B44 
 11875      65707468 
 11875      00
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 319


 11876              	.LASF298:
 11877 1006 7853686F 		.ascii	"xShouldDelay\000"
 11877      756C6444 
 11877      656C6179 
 11877      00
 11878              	.LASF120:
 11879 1013 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_START_STOP\000"
 11879      4C455F45 
 11879      56545F47 
 11879      4150435F 
 11879      5343414E 
 11880              	.LASF304:
 11881 1033 70727649 		.ascii	"prvIdleTask\000"
 11881      646C6554 
 11881      61736B00 
 11882              	.LASF141:
 11883 103f 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_TYPE_RSP\000"
 11883      4C455F45 
 11883      56545F47 
 11883      41545443 
 11883      5F524541 
 11884              	.LASF213:
 11885 1061 784C6973 		.ascii	"xListEnd\000"
 11885      74456E64 
 11885      00
 11886              	.LASF302:
 11887 106a 784C6973 		.ascii	"xListIsEmpty\000"
 11887      74497345 
 11887      6D707479 
 11887      00
 11888              	.LASF78:
 11889 1077 43595F42 		.ascii	"CY_BLE_EVT_SET_HOST_CHANNEL_COMPLETE\000"
 11889      4C455F45 
 11889      56545F53 
 11889      45545F48 
 11889      4F53545F 
 11890              	.LASF68:
 11891 109c 43595F42 		.ascii	"CY_BLE_EVT_LE_SET_EVENT_MASK_COMPLETE\000"
 11891      4C455F45 
 11891      56545F4C 
 11891      455F5345 
 11891      545F4556 
 11892              	.LASF29:
 11893 10c2 72784275 		.ascii	"rxBufIdx\000"
 11893      66496478 
 11893      00
 11894              	.LASF209:
 11895 10cb 4D696E69 		.ascii	"MiniListItem_t\000"
 11895      4C697374 
 11895      4974656D 
 11895      5F7400
 11896              	.LASF399:
 11897 10da 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0"
 11897      72617465 
 11897      645F536F 
 11897      75726365 
 11897      5C50536F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 320


 11898 1108 5C536F75 		.ascii	"\\Source\\tasks.c\000"
 11898      7263655C 
 11898      7461736B 
 11898      732E6300 
 11899              	.LASF315:
 11900 1118 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 11900      6B506C61 
 11900      63654F6E 
 11900      4576656E 
 11900      744C6973 
 11901              	.LASF199:
 11902 1138 5469636B 		.ascii	"TickType_t\000"
 11902      54797065 
 11902      5F7400
 11903              	.LASF34:
 11904 1143 696E6974 		.ascii	"initKey\000"
 11904      4B657900 
 11905              	.LASF259:
 11906 114b 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 11906      64644E65 
 11906      77546173 
 11906      6B546F52 
 11906      65616479 
 11907              	.LASF17:
 11908 1164 75696E74 		.ascii	"uint8_t\000"
 11908      385F7400 
 11909              	.LASF26:
 11910 116c 73746174 		.ascii	"status\000"
 11910      757300
 11911              	.LASF101:
 11912 1173 43595F42 		.ascii	"CY_BLE_EVT_SET_SLAVE_LATENCY_MODE_COMPLETE\000"
 11912      4C455F45 
 11912      56545F53 
 11912      45545F53 
 11912      4C415645 
 11913              	.LASF256:
 11914 119e 70784E65 		.ascii	"pxNewTCB\000"
 11914      77544342 
 11914      00
 11915              	.LASF125:
 11916 11a7 43595F42 		.ascii	"CY_BLE_EVT_GAP_ENHANCE_CONN_COMPLETE\000"
 11916      4C455F45 
 11916      56545F47 
 11916      41505F45 
 11916      4E48414E 
 11917              	.LASF251:
 11918 11cc 70785461 		.ascii	"pxTaskCode\000"
 11918      736B436F 
 11918      646500
 11919              	.LASF113:
 11920 11d7 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_COMPLETE\000"
 11920      4C455F45 
 11920      56545F47 
 11920      41505F41 
 11920      5554485F 
 11921              	.LASF84:
 11922 11f4 43595F42 		.ascii	"CY_BLE_EVT_SET_DEFAULT_PHY_COMPLETE\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 321


 11922      4C455F45 
 11922      56545F53 
 11922      45545F44 
 11922      45464155 
 11923              	.LASF53:
 11924 1218 6D757853 		.ascii	"muxSwitchSqCtrl\000"
 11924      77697463 
 11924      68537143 
 11924      74726C00 
 11925              	.LASF374:
 11926 1228 63795F62 		.ascii	"cy_ble_advState\000"
 11926      6C655F61 
 11926      64765374 
 11926      61746500 
 11927              	.LASF230:
 11928 1238 4D656D6F 		.ascii	"MemoryRegion_t\000"
 11928      72795265 
 11928      67696F6E 
 11928      5F7400
 11929              	.LASF370:
 11930 1247 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 11930      74546173 
 11930      6B556E62 
 11930      6C6F636B 
 11930      54696D65 
 11931              	.LASF401:
 11932 125c 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 11932      72745261 
 11932      69736542 
 11932      41534550 
 11932      524900
 11933              	.LASF46:
 11934 126f 72616E67 		.ascii	"rangeCond\000"
 11934      65436F6E 
 11934      6400
 11935              	.LASF384:
 11936 1279 7078506F 		.ascii	"pxPortInitialiseStack\000"
 11936      7274496E 
 11936      69746961 
 11936      6C697365 
 11936      53746163 
 11937              	.LASF107:
 11938 128f 43595F42 		.ascii	"CY_BLE_EVT_SET_CE_LENGTH_COMPLETE\000"
 11938      4C455F45 
 11938      56545F53 
 11938      45545F43 
 11938      455F4C45 
 11939              	.LASF106:
 11940 12b1 43595F42 		.ascii	"CY_BLE_EVT_SET_EVENT_MASK_COMPLETE\000"
 11940      4C455F45 
 11940      56545F53 
 11940      45545F45 
 11940      56454E54 
 11941              	.LASF1:
 11942 12d4 6C6F6E67 		.ascii	"long long int\000"
 11942      206C6F6E 
 11942      6720696E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 322


 11942      7400
 11943              	.LASF164:
 11944 12e2 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_CNF\000"
 11944      4C455F45 
 11944      56545F4C 
 11944      32434150 
 11944      5F434246 
 11945              	.LASF269:
 11946 1301 75785265 		.ascii	"uxReturn\000"
 11946      7475726E 
 11946      00
 11947              	.LASF338:
 11948 130a 756C5265 		.ascii	"ulReturn\000"
 11948      7475726E 
 11948      00
 11949              	.LASF133:
 11950 1313 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONN_ESTB\000"
 11950      4C455F45 
 11950      56545F47 
 11950      41505F43 
 11950      4F4E4E5F 
 11951              	.LASF80:
 11952 132c 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_RPA_LIST_COMPLETE\000"
 11952      4C455F45 
 11952      56545F52 
 11952      454D4F56 
 11952      455F4445 
 11953              	.LASF244:
 11954 135c 756C4E65 		.ascii	"ulNewBASEPRI\000"
 11954      77424153 
 11954      45505249 
 11954      00
 11955              	.LASF69:
 11956 1369 43595F42 		.ascii	"CY_BLE_EVT_LE_PING_AUTH_TIMEOUT\000"
 11956      4C455F45 
 11956      56545F4C 
 11956      455F5049 
 11956      4E475F41 
 11957              	.LASF228:
 11958 1389 756C4C65 		.ascii	"ulLengthInBytes\000"
 11958      6E677468 
 11958      496E4279 
 11958      74657300 
 11959              	.LASF197:
 11960 1399 42617365 		.ascii	"BaseType_t\000"
 11960      54797065 
 11960      5F7400
 11961              	.LASF307:
 11962 13a4 756C4368 		.ascii	"ulCheckValue\000"
 11962      65636B56 
 11962      616C7565 
 11962      00
 11963              	.LASF247:
 11964 13b1 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 11964      65736574 
 11964      4E657874 
 11964      5461736B 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 323


 11964      556E626C 
 11965              	.LASF224:
 11966 13cd 7854696D 		.ascii	"xTimeOnEntering\000"
 11966      654F6E45 
 11966      6E746572 
 11966      696E6700 
 11967              	.LASF274:
 11968 13dd 75784E65 		.ascii	"uxNewPriority\000"
 11968      77507269 
 11968      6F726974 
 11968      7900
 11969              	.LASF96:
 11970 13eb 43595F42 		.ascii	"CY_BLE_EVT_SET_CLK_CONFIG_COMPLETE\000"
 11970      4C455F45 
 11970      56545F53 
 11970      45545F43 
 11970      4C4B5F43 
 11971              	.LASF195:
 11972 140e 5461736B 		.ascii	"TaskFunction_t\000"
 11972      46756E63 
 11972      74696F6E 
 11972      5F7400
 11973              	.LASF203:
 11974 141d 70784E65 		.ascii	"pxNext\000"
 11974      787400
 11975              	.LASF347:
 11976 1424 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 11976      72657669 
 11976      6F75734E 
 11976      6F746966 
 11976      69636174 
 11977              	.LASF382:
 11978 1441 6D656D73 		.ascii	"memset\000"
 11978      657400
 11979              	.LASF204:
 11980 1448 70785072 		.ascii	"pxPrevious\000"
 11980      6576696F 
 11980      757300
 11981              	.LASF270:
 11982 1453 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 11982      736B5072 
 11982      696F7269 
 11982      74794765 
 11982      7446726F 
 11983              	.LASF35:
 11984 146c 63795F73 		.ascii	"cy_stc_scb_spi_context_t\000"
 11984      74635F73 
 11984      63625F73 
 11984      70695F63 
 11984      6F6E7465 
 11985              	.LASF322:
 11986 1485 70785469 		.ascii	"pxTimeOut\000"
 11986      6D654F75 
 11986      7400
 11987              	.LASF284:
 11988 148f 78546173 		.ascii	"xTaskGetTickCount\000"
 11988      6B476574 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 324


 11988      5469636B 
 11988      436F756E 
 11988      7400
 11989              	.LASF73:
 11990 14a1 43595F42 		.ascii	"CY_BLE_EVT_DATA_LENGTH_CHANGE\000"
 11990      4C455F45 
 11990      56545F44 
 11990      4154415F 
 11990      4C454E47 
 11991              	.LASF48:
 11992 14bf 6368616E 		.ascii	"chanConfig\000"
 11992      436F6E66 
 11992      696700
 11993              	.LASF121:
 11994 14ca 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYINFO_EXCHNGE_CMPLT\000"
 11994      4C455F45 
 11994      56545F47 
 11994      41505F4B 
 11994      4559494E 
 11995              	.LASF81:
 11996 14ef 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_WHITE_LIST_COMPLETE\000"
 11996      4C455F45 
 11996      56545F41 
 11996      44445F44 
 11996      45564943 
 11997              	.LASF31:
 11998 151c 74784275 		.ascii	"txBufSize\000"
 11998      6653697A 
 11998      6500
 11999              	.LASF369:
 12000 1526 75785461 		.ascii	"uxTaskNumber\000"
 12000      736B4E75 
 12000      6D626572 
 12000      00
 12001              	.LASF170:
 12002 1533 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DATA_WRITE_IND\000"
 12002      4C455F45 
 12002      56545F4C 
 12002      32434150 
 12002      5F434246 
 12003              	.LASF215:
 12004 1558 5461736B 		.ascii	"TaskHandle_t\000"
 12004      48616E64 
 12004      6C655F74 
 12004      00
 12005              	.LASF346:
 12006 1565 65416374 		.ascii	"eAction\000"
 12006      696F6E00 
 12007              	.LASF403:
 12008 156d 756C4E65 		.ascii	"ulNewMaskValue\000"
 12008      774D6173 
 12008      6B56616C 
 12008      756500
 12009              	.LASF194:
 12010 157c 4144435F 		.ascii	"ADC_CONFIG_STRUCT\000"
 12010      434F4E46 
 12010      49475F53 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 325


 12010      54525543 
 12010      5400
 12011              	.LASF335:
 12012 158e 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 12012      736B5265 
 12012      73657445 
 12012      76656E74 
 12012      4974656D 
 12013              	.LASF273:
 12014 15a8 76546173 		.ascii	"vTaskPrioritySet\000"
 12014      6B507269 
 12014      6F726974 
 12014      79536574 
 12014      00
 12015              	.LASF83:
 12016 15b9 43595F42 		.ascii	"CY_BLE_EVT_GET_PHY_COMPLETE\000"
 12016      4C455F45 
 12016      56545F47 
 12016      45545F50 
 12016      48595F43 
 12017              	.LASF109:
 12018 15d5 43595F42 		.ascii	"CY_BLE_EVT_GAPC_SCAN_PROGRESS_RESULT\000"
 12018      4C455F45 
 12018      56545F47 
 12018      4150435F 
 12018      5343414E 
 12019              	.LASF163:
 12020 15fa 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_CONN_IND\000"
 12020      4C455F45 
 12020      56545F4C 
 12020      32434150 
 12020      5F434246 
 12021              	.LASF129:
 12022 1619 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYS_GEN_COMPLETE\000"
 12022      4C455F45 
 12022      56545F47 
 12022      41505F4B 
 12022      4559535F 
 12023              	.LASF123:
 12024 163a 43595F42 		.ascii	"CY_BLE_EVT_GAP_KEYPRESS_NOTIFICATION\000"
 12024      4C455F45 
 12024      56545F47 
 12024      41505F4B 
 12024      45595052 
 12025              	.LASF214:
 12026 165f 4C697374 		.ascii	"List_t\000"
 12026      5F7400
 12027              	.LASF186:
 12028 1666 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_DESCR_DISCOVERING\000"
 12028      4C455F43 
 12028      4F4E4E5F 
 12028      53544154 
 12028      455F434C 
 12029              	.LASF182:
 12030 1691 43595F42 		.ascii	"CY_BLE_CONN_STATE_CONNECTED\000"
 12030      4C455F43 
 12030      4F4E4E5F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 326


 12030      53544154 
 12030      455F434F 
 12031              	.LASF30:
 12032 16ad 74784275 		.ascii	"txBuf\000"
 12032      6600
 12033              	.LASF288:
 12034 16b3 78546173 		.ascii	"xTaskToQuery\000"
 12034      6B546F51 
 12034      75657279 
 12034      00
 12035              	.LASF344:
 12036 16c0 78546173 		.ascii	"xTaskToNotify\000"
 12036      6B546F4E 
 12036      6F746966 
 12036      7900
 12037              	.LASF249:
 12038 16ce 78546173 		.ascii	"xTask\000"
 12038      6B00
 12039              	.LASF217:
 12040 16d4 65536574 		.ascii	"eSetBits\000"
 12040      42697473 
 12040      00
 12041              	.LASF2:
 12042 16dd 6C6F6E67 		.ascii	"long double\000"
 12042      20646F75 
 12042      626C6500 
 12043              	.LASF66:
 12044 16e9 43595F42 		.ascii	"CY_BLE_EVT_READ_AUTH_PAYLOAD_TO_COMPLETE\000"
 12044      4C455F45 
 12044      56545F52 
 12044      4541445F 
 12044      41555448 
 12045              	.LASF226:
 12046 1712 784D454D 		.ascii	"xMEMORY_REGION\000"
 12046      4F52595F 
 12046      52454749 
 12046      4F4E00
 12047              	.LASF18:
 12048 1721 75696E74 		.ascii	"uint16_t\000"
 12048      31365F74 
 12048      00
 12049              	.LASF272:
 12050 172a 76546173 		.ascii	"vTaskDelete\000"
 12050      6B44656C 
 12050      65746500 
 12051              	.LASF76:
 12052 1736 43595F42 		.ascii	"CY_BLE_EVT_SET_RPA_TO_COMPLETE\000"
 12052      4C455F45 
 12052      56545F53 
 12052      45545F52 
 12052      50415F54 
 12053              	.LASF305:
 12054 1755 76546173 		.ascii	"vTaskSwitchContext\000"
 12054      6B537769 
 12054      74636843 
 12054      6F6E7465 
 12054      787400
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 327


 12055              	.LASF368:
 12056 1768 784E756D 		.ascii	"xNumOfOverflows\000"
 12056      4F664F76 
 12056      6572666C 
 12056      6F777300 
 12057              	.LASF64:
 12058 1778 43595F42 		.ascii	"CY_BLE_EVT_HARDWARE_ERROR\000"
 12058      4C455F45 
 12058      56545F48 
 12058      41524457 
 12058      4152455F 
 12059              	.LASF132:
 12060 1792 43595F42 		.ascii	"CY_BLE_EVT_GAP_CREATE_CONN_CANCEL_COMPLETE\000"
 12060      4C455F45 
 12060      56545F47 
 12060      41505F43 
 12060      52454154 
 12061              	.LASF52:
 12062 17bd 6D757853 		.ascii	"muxSwitch\000"
 12062      77697463 
 12062      6800
 12063              	.LASF380:
 12064 17c7 70784375 		.ascii	"pxCurrentTCB\000"
 12064      7272656E 
 12064      74544342 
 12064      00
 12065              	.LASF6:
 12066 17d4 756E7369 		.ascii	"unsigned char\000"
 12066      676E6564 
 12066      20636861 
 12066      7200
 12067              	.LASF135:
 12068 17e2 43595F42 		.ascii	"CY_BLE_EVT_GATTC_ERROR_RSP\000"
 12068      4C455F45 
 12068      56545F47 
 12068      41545443 
 12068      5F455252 
 12069              	.LASF140:
 12070 17fd 43595F42 		.ascii	"CY_BLE_EVT_GATTC_READ_BY_GROUP_TYPE_RSP\000"
 12070      4C455F45 
 12070      56545F47 
 12070      41545443 
 12070      5F524541 
 12071              	.LASF79:
 12072 1825 43595F42 		.ascii	"CY_BLE_EVT_ADD_DEVICE_TO_RPA_LIST_COMPLETE\000"
 12072      4C455F45 
 12072      56545F41 
 12072      44445F44 
 12072      45564943 
 12073              	.LASF292:
 12074 1850 78546173 		.ascii	"xTaskResumeAll\000"
 12074      6B526573 
 12074      756D6541 
 12074      6C6C00
 12075              	.LASF147:
 12076 185f 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_REQ\000"
 12076      4C455F45 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 328


 12076      56545F47 
 12076      41545453 
 12076      5F575249 
 12077              	.LASF102:
 12078 187a 43595F42 		.ascii	"CY_BLE_EVT_STACK_SHUTDOWN_COMPLETE\000"
 12078      4C455F45 
 12078      56545F53 
 12078      5441434B 
 12078      5F534855 
 12079              	.LASF174:
 12080 189d 63795F73 		.ascii	"cy_stc_ble_conn_handle_t\000"
 12080      74635F62 
 12080      6C655F63 
 12080      6F6E6E5F 
 12080      68616E64 
 12081              	.LASF397:
 12082 18b6 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 12082      6C696361 
 12082      74696F6E 
 12082      53746163 
 12082      6B4F7665 
 12083              	.LASF134:
 12084 18d4 43595F42 		.ascii	"CY_BLE_EVT_GAPP_UPDATE_ADV_SCAN_DATA_COMPLETE\000"
 12084      4C455F45 
 12084      56545F47 
 12084      4150505F 
 12084      55504441 
 12085              	.LASF7:
 12086 1902 73686F72 		.ascii	"short int\000"
 12086      7420696E 
 12086      7400
 12087              	.LASF379:
 12088 190c 4144435F 		.ascii	"ADC_allConfigs\000"
 12088      616C6C43 
 12088      6F6E6669 
 12088      677300
 12089              	.LASF383:
 12090 191b 764C6973 		.ascii	"vListInitialiseItem\000"
 12090      74496E69 
 12090      7469616C 
 12090      69736549 
 12090      74656D00 
 12091              	.LASF250:
 12092 192f 70727649 		.ascii	"prvInitialiseNewTask\000"
 12092      6E697469 
 12092      616C6973 
 12092      654E6577 
 12092      5461736B 
 12093              	.LASF117:
 12094 1944 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_DISCONNECTED\000"
 12094      4C455F45 
 12094      56545F47 
 12094      41505F44 
 12094      45564943 
 12095              	.LASF254:
 12096 1967 70765061 		.ascii	"pvParameters\000"
 12096      72616D65 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 329


 12096      74657273 
 12096      00
 12097              	.LASF202:
 12098 1974 78497465 		.ascii	"xItemValue\000"
 12098      6D56616C 
 12098      756500
 12099              	.LASF11:
 12100 197f 6C6F6E67 		.ascii	"long int\000"
 12100      20696E74 
 12100      00
 12101              	.LASF373:
 12102 1988 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12102      52784275 
 12102      66666572 
 12102      00
 12103              	.LASF105:
 12104 1995 43595F42 		.ascii	"CY_BLE_EVT_AES_CMAC_GEN_COMPLETE\000"
 12104      4C455F45 
 12104      56545F41 
 12104      45535F43 
 12104      4D41435F 
 12105              	.LASF351:
 12106 19b6 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 12106      6B4E6F74 
 12106      69667947 
 12106      69766546 
 12106      726F6D49 
 12107              	.LASF356:
 12108 19cd 70784465 		.ascii	"pxDelayedTaskList\000"
 12108      6C617965 
 12108      64546173 
 12108      6B4C6973 
 12108      7400
 12109              	.LASF206:
 12110 19df 7076436F 		.ascii	"pvContainer\000"
 12110      6E746169 
 12110      6E657200 
 12111              	.LASF303:
 12112 19eb 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 12112      61736B49 
 12112      73546173 
 12112      6B537573 
 12112      70656E64 
 12113              	.LASF290:
 12114 1a02 78537769 		.ascii	"xSwitchRequired\000"
 12114      74636852 
 12114      65717569 
 12114      72656400 
 12115              	.LASF128:
 12116 1a12 43595F42 		.ascii	"CY_BLE_EVT_GAP_DEVICE_ADDR_GEN_COMPLETE\000"
 12116      4C455F45 
 12116      56545F47 
 12116      41505F44 
 12116      45564943 
 12117              	.LASF236:
 12118 1a3a 70785374 		.ascii	"pxStack\000"
 12118      61636B00 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 330


 12119              	.LASF266:
 12120 1a42 78546173 		.ascii	"xTaskToDelete\000"
 12120      6B546F44 
 12120      656C6574 
 12120      6500
 12121              	.LASF336:
 12122 1a50 756C5461 		.ascii	"ulTaskNotifyTake\000"
 12122      736B4E6F 
 12122      74696679 
 12122      54616B65 
 12122      00
 12123              	.LASF345:
 12124 1a61 756C5661 		.ascii	"ulValue\000"
 12124      6C756500 
 12125              	.LASF311:
 12126 1a69 78546173 		.ascii	"xTaskToSuspend\000"
 12126      6B546F53 
 12126      75737065 
 12126      6E6400
 12127              	.LASF165:
 12128 1a78 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CBFC_DISCONN_IND\000"
 12128      4C455F45 
 12128      56545F4C 
 12128      32434150 
 12128      5F434246 
 12129              	.LASF323:
 12130 1a9a 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 12130      6B436865 
 12130      636B466F 
 12130      7254696D 
 12130      654F7574 
 12131              	.LASF395:
 12132 1aaf 76506F72 		.ascii	"vPortEndScheduler\000"
 12132      74456E64 
 12132      53636865 
 12132      64756C65 
 12132      7200
 12133              	.LASF381:
 12134 1ac1 76506F72 		.ascii	"vPortFree\000"
 12134      74467265 
 12134      6500
 12135              	.LASF151:
 12136 1acb 43595F42 		.ascii	"CY_BLE_EVT_GATTS_EXEC_WRITE_REQ\000"
 12136      4C455F45 
 12136      56545F47 
 12136      41545453 
 12136      5F455845 
 12137              	.LASF65:
 12138 1aeb 43595F42 		.ascii	"CY_BLE_EVT_WRITE_AUTH_PAYLOAD_TO_COMPLETE\000"
 12138      4C455F45 
 12138      56545F57 
 12138      52495445 
 12138      5F415554 
 12139              	.LASF364:
 12140 1b15 7578546F 		.ascii	"uxTopReadyPriority\000"
 12140      70526561 
 12140      64795072 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 331


 12140      696F7269 
 12140      747900
 12141              	.LASF104:
 12142 1b28 43595F42 		.ascii	"CY_BLE_EVT_RADIO_VOLTAGE_LEVEL\000"
 12142      4C455F45 
 12142      56545F52 
 12142      4144494F 
 12142      5F564F4C 
 12143              	.LASF296:
 12144 1b47 70785072 		.ascii	"pxPreviousWakeTime\000"
 12144      6576696F 
 12144      75735761 
 12144      6B655469 
 12144      6D6500
 12145              	.LASF5:
 12146 1b5a 5F5F7569 		.ascii	"__uint8_t\000"
 12146      6E74385F 
 12146      7400
 12147              	.LASF329:
 12148 1b64 78496E64 		.ascii	"xIndex\000"
 12148      657800
 12149              	.LASF371:
 12150 1b6b 7849646C 		.ascii	"xIdleTaskHandle\000"
 12150      65546173 
 12150      6B48616E 
 12150      646C6500 
 12151              	.LASF354:
 12152 1b7b 7844656C 		.ascii	"xDelayedTaskList1\000"
 12152      61796564 
 12152      5461736B 
 12152      4C697374 
 12152      3100
 12153              	.LASF71:
 12154 1b8d 43595F42 		.ascii	"CY_BLE_EVT_SET_SUGGESTED_DATA_LENGTH_COMPLETE\000"
 12154      4C455F45 
 12154      56545F53 
 12154      45545F53 
 12154      55474745 
 12155              	.LASF91:
 12156 1bbb 43595F42 		.ascii	"CY_BLE_EVT_GET_DEVICE_ADDR_COMPLETE\000"
 12156      4C455F45 
 12156      56545F47 
 12156      45545F44 
 12156      45564943 
 12157              	.LASF98:
 12158 1bdf 43595F42 		.ascii	"CY_BLE_EVT_AES_ENCRYPT_COMPLETE\000"
 12158      4C455F45 
 12158      56545F41 
 12158      45535F45 
 12158      4E435259 
 12159              	.LASF93:
 12160 1bff 43595F42 		.ascii	"CY_BLE_EVT_GET_TX_PWR_COMPLETE\000"
 12160      4C455F45 
 12160      56545F47 
 12160      45545F54 
 12160      585F5057 
 12161              	.LASF200:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 332


 12162 1c1e 63795F73 		.ascii	"cy_stc_scb_spi_context\000"
 12162      74635F73 
 12162      63625F73 
 12162      70695F63 
 12162      6F6E7465 
 12163              	.LASF342:
 12164 1c35 70756C4E 		.ascii	"pulNotificationValue\000"
 12164      6F746966 
 12164      69636174 
 12164      696F6E56 
 12164      616C7565 
 12165              	.LASF44:
 12166 1c4a 73616D70 		.ascii	"sampleTime23\000"
 12166      6C655469 
 12166      6D653233 
 12166      00
 12167              	.LASF245:
 12168 1c57 78526574 		.ascii	"xReturn\000"
 12168      75726E00 
 12169              	.LASF59:
 12170 1c5f 43595F42 		.ascii	"CY_BLE_EVT_TIMEOUT\000"
 12170      4C455F45 
 12170      56545F54 
 12170      494D454F 
 12170      555400
 12171              	.LASF15:
 12172 1c72 73697A65 		.ascii	"sizetype\000"
 12172      74797065 
 12172      00
 12173              	.LASF326:
 12174 1c7b 76546173 		.ascii	"vTaskMissedYield\000"
 12174      6B4D6973 
 12174      73656459 
 12174      69656C64 
 12174      00
 12175              	.LASF366:
 12176 1c8c 75785065 		.ascii	"uxPendedTicks\000"
 12176      6E646564 
 12176      5469636B 
 12176      7300
 12177              	.LASF13:
 12178 1c9a 6C6F6E67 		.ascii	"long unsigned int\000"
 12178      20756E73 
 12178      69676E65 
 12178      6420696E 
 12178      7400
 12179              	.LASF389:
 12180 1cac 75784C69 		.ascii	"uxListRemove\000"
 12180      73745265 
 12180      6D6F7665 
 12180      00
 12181              	.LASF21:
 12182 1cb9 666C6F61 		.ascii	"float\000"
 12182      7400
 12183              	.LASF287:
 12184 1cbf 70635461 		.ascii	"pcTaskGetName\000"
 12184      736B4765 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 333


 12184      744E616D 
 12184      6500
 12185              	.LASF19:
 12186 1ccd 696E7433 		.ascii	"int32_t\000"
 12186      325F7400 
 12187              	.LASF103:
 12188 1cd5 43595F42 		.ascii	"CY_BLE_EVT_RADIO_TEMPERATURE\000"
 12188      4C455F45 
 12188      56545F52 
 12188      4144494F 
 12188      5F54454D 
 12189              	.LASF285:
 12190 1cf2 78546963 		.ascii	"xTicks\000"
 12190      6B7300
 12191              	.LASF282:
 12192 1cf9 76546173 		.ascii	"vTaskStartScheduler\000"
 12192      6B537461 
 12192      72745363 
 12192      68656475 
 12192      6C657200 
 12193              	.LASF262:
 12194 1d0d 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 12194      426C6F63 
 12194      6B496E64 
 12194      6566696E 
 12194      6974656C 
 12195              	.LASF306:
 12196 1d23 70756C53 		.ascii	"pulStack\000"
 12196      7461636B 
 12196      00
 12197              	.LASF42:
 12198 1d2c 73616D70 		.ascii	"sampleCtrl\000"
 12198      6C654374 
 12198      726C00
 12199              	.LASF227:
 12200 1d37 70764261 		.ascii	"pvBaseAddress\000"
 12200      73654164 
 12200      64726573 
 12200      7300
 12201              	.LASF300:
 12202 1d45 78546963 		.ascii	"xTicksToDelay\000"
 12202      6B73546F 
 12202      44656C61 
 12202      7900
 12203              	.LASF237:
 12204 1d53 70635461 		.ascii	"pcTaskName\000"
 12204      736B4E61 
 12204      6D6500
 12205              	.LASF314:
 12206 1d5e 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 12206      6B506C61 
 12206      63654F6E 
 12206      556E6F72 
 12206      64657265 
 12207              	.LASF319:
 12208 1d7d 78546173 		.ascii	"xTaskRemoveFromUnorderedEventList\000"
 12208      6B52656D 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 334


 12208      6F766546 
 12208      726F6D55 
 12208      6E6F7264 
 12209              	.LASF12:
 12210 1d9f 5F5F7569 		.ascii	"__uint32_t\000"
 12210      6E743332 
 12210      5F7400
 12211              	.LASF385:
 12212 1daa 764C6973 		.ascii	"vListInitialise\000"
 12212      74496E69 
 12212      7469616C 
 12212      69736500 
 12213              	.LASF392:
 12214 1dba 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 12214      7456616C 
 12214      69646174 
 12214      65496E74 
 12214      65727275 
 12215              	.LASF159:
 12216 1dd9 43595F42 		.ascii	"CY_BLE_EVT_GATTC_LONG_PROCEDURE_END\000"
 12216      4C455F45 
 12216      56545F47 
 12216      41545443 
 12216      5F4C4F4E 
 12217              	.LASF308:
 12218 1dfd 7578546F 		.ascii	"uxTopPriority\000"
 12218      70507269 
 12218      6F726974 
 12218      7900
 12219              	.LASF82:
 12220 1e0b 43595F42 		.ascii	"CY_BLE_EVT_REMOVE_DEVICE_FROM_WHITE_LIST_COMPLETE\000"
 12220      4C455F45 
 12220      56545F52 
 12220      454D4F56 
 12220      455F4445 
 12221              	.LASF295:
 12222 1e3d 76546173 		.ascii	"vTaskDelayUntil\000"
 12222      6B44656C 
 12222      6179556E 
 12222      74696C00 
 12223              	.LASF126:
 12224 1e4d 43595F42 		.ascii	"CY_BLE_EVT_GAPC_DIRECT_ADV_REPORT\000"
 12224      4C455F45 
 12224      56545F47 
 12224      4150435F 
 12224      44495245 
 12225              	.LASF234:
 12226 1e6f 78457665 		.ascii	"xEventListItem\000"
 12226      6E744C69 
 12226      73744974 
 12226      656D00
 12227              	.LASF161:
 12228 1e7e 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_RSP\000"
 12228      4C455F45 
 12228      56545F4C 
 12228      32434150 
 12228      5F434F4E 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 335


 12229              	.LASF276:
 12230 1ea5 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 12230      696F7269 
 12230      74795573 
 12230      65644F6E 
 12230      456E7472 
 12231              	.LASF242:
 12232 1ebb 5443425F 		.ascii	"TCB_t\000"
 12232      7400
 12233              	.LASF261:
 12234 1ec1 78546963 		.ascii	"xTicksToWait\000"
 12234      6B73546F 
 12234      57616974 
 12234      00
 12235              	.LASF205:
 12236 1ece 70764F77 		.ascii	"pvOwner\000"
 12236      6E657200 
 12237              	.LASF193:
 12238 1ed6 636C6B44 		.ascii	"clkDivider\000"
 12238      69766964 
 12238      657200
 12239              	.LASF310:
 12240 1ee1 76546173 		.ascii	"vTaskSuspend\000"
 12240      6B537573 
 12240      70656E64 
 12240      00
 12241              	.LASF293:
 12242 1eee 78416C72 		.ascii	"xAlreadyYielded\000"
 12242      65616479 
 12242      5969656C 
 12242      64656400 
 12243              	.LASF333:
 12244 1efe 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 12244      6B476574 
 12244      43757272 
 12244      656E7454 
 12244      61736B48 
 12245              	.LASF267:
 12246 1f18 78546173 		.ascii	"xTaskCreate\000"
 12246      6B437265 
 12246      61746500 
 12247              	.LASF137:
 12248 1f24 43595F42 		.ascii	"CY_BLE_EVT_GATT_DISCONNECT_IND\000"
 12248      4C455F45 
 12248      56545F47 
 12248      4154545F 
 12248      44495343 
 12249              	.LASF378:
 12250 1f43 4144435F 		.ascii	"ADC_currentConfig\000"
 12250      63757272 
 12250      656E7443 
 12250      6F6E6669 
 12250      6700
 12251              	.LASF152:
 12252 1f55 43595F42 		.ascii	"CY_BLE_EVT_GATTC_EXEC_WRITE_RSP\000"
 12252      4C455F45 
 12252      56545F47 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 336


 12252      41545443 
 12252      5F455845 
 12253              	.LASF275:
 12254 1f75 75784375 		.ascii	"uxCurrentBasePriority\000"
 12254      7272656E 
 12254      74426173 
 12254      65507269 
 12254      6F726974 
 12255              	.LASF257:
 12256 1f8b 78526567 		.ascii	"xRegions\000"
 12256      696F6E73 
 12256      00
 12257              	.LASF138:
 12258 1f94 43595F42 		.ascii	"CY_BLE_EVT_GATTS_XCNHG_MTU_REQ\000"
 12258      4C455F45 
 12258      56545F47 
 12258      41545453 
 12258      5F58434E 
 12259              	.LASF157:
 12260 1fb3 43595F42 		.ascii	"CY_BLE_EVT_GATTC_STOP_CMD_COMPLETE\000"
 12260      4C455F45 
 12260      56545F47 
 12260      41545443 
 12260      5F53544F 
 12261              	.LASF111:
 12262 1fd6 43595F42 		.ascii	"CY_BLE_EVT_GAP_PASSKEY_ENTRY_REQUEST\000"
 12262      4C455F45 
 12262      56545F47 
 12262      41505F50 
 12262      4153534B 
 12263              	.LASF172:
 12264 1ffb 62644861 		.ascii	"bdHandle\000"
 12264      6E646C65 
 12264      00
 12265              	.LASF400:
 12266 2004 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 12266      73657273 
 12266      5C636F64 
 12266      79675C67 
 12266      69745C70 
 12267 2032 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\\CE218137_BLE_Proximity_RTOS01.cyd"
 12267      54435F49 
 12267      4D552E63 
 12267      7964736E 
 12267      5C434532 
 12268 2064 736E00   		.ascii	"sn\000"
 12269              	.LASF362:
 12270 2067 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 12270      7272656E 
 12270      744E756D 
 12270      6265724F 
 12270      66546173 
 12271              	.LASF297:
 12272 207e 7854696D 		.ascii	"xTimeIncrement\000"
 12272      65496E63 
 12272      72656D65 
 12272      6E7400
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 337


 12273              	.LASF3:
 12274 208d 7369676E 		.ascii	"signed char\000"
 12274      65642063 
 12274      68617200 
 12275              	.LASF9:
 12276 2099 73686F72 		.ascii	"short unsigned int\000"
 12276      7420756E 
 12276      7369676E 
 12276      65642069 
 12276      6E7400
 12277              	.LASF263:
 12278 20ac 7854696D 		.ascii	"xTimeToWake\000"
 12278      65546F57 
 12278      616B6500 
 12279              	.LASF352:
 12280 20b8 78546173 		.ascii	"xTaskNotifyStateClear\000"
 12280      6B4E6F74 
 12280      69667953 
 12280      74617465 
 12280      436C6561 
 12281              	.LASF149:
 12282 20ce 43595F42 		.ascii	"CY_BLE_EVT_GATTS_WRITE_CMD_REQ\000"
 12282      4C455F45 
 12282      56545F47 
 12282      41545453 
 12282      5F575249 
 12283              	.LASF95:
 12284 20ed 43595F42 		.ascii	"CY_BLE_EVT_GET_CLK_CONFIG_COMPLETE\000"
 12284      4C455F45 
 12284      56545F47 
 12284      45545F43 
 12284      4C4B5F43 
 12285              	.LASF246:
 12286 2110 70785443 		.ascii	"pxTCB\000"
 12286      4200
 12287              	.LASF192:
 12288 2116 6D697363 		.ascii	"miscConfig\000"
 12288      436F6E66 
 12288      696700
 12289              	.LASF160:
 12290 2121 43595F42 		.ascii	"CY_BLE_EVT_L2CAP_CONN_PARAM_UPDATE_REQ\000"
 12290      4C455F45 
 12290      56545F4C 
 12290      32434150 
 12290      5F434F4E 
 12291              	.LASF23:
 12292 2148 75696E74 		.ascii	"uint8\000"
 12292      3800
 12293              	.LASF54:
 12294 214e 636F6E66 		.ascii	"configRouting\000"
 12294      6967526F 
 12294      7574696E 
 12294      6700
 12295              	.LASF372:
 12296 215c 75785363 		.ascii	"uxSchedulerSuspended\000"
 12296      68656475 
 12296      6C657253 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 338


 12296      75737065 
 12296      6E646564 
 12297              	.LASF260:
 12298 2171 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 12298      64644375 
 12298      7272656E 
 12298      74546173 
 12298      6B546F44 
 12299              	.LASF51:
 12300 2190 72616E67 		.ascii	"rangeIntrMask\000"
 12300      65496E74 
 12300      724D6173 
 12300      6B00
 12301              	.LASF40:
 12302 219e 63795F65 		.ascii	"cy_en_sar_range_detect_condition_t\000"
 12302      6E5F7361 
 12302      725F7261 
 12302      6E67655F 
 12302      64657465 
 12303              	.LASF232:
 12304 21c1 7078546F 		.ascii	"pxTopOfStack\000"
 12304      704F6653 
 12304      7461636B 
 12304      00
 12305              	.LASF278:
 12306 21ce 76546173 		.ascii	"vTaskResume\000"
 12306      6B526573 
 12306      756D6500 
 12307              	.LASF391:
 12308 21da 7076506F 		.ascii	"pvPortMalloc\000"
 12308      72744D61 
 12308      6C6C6F63 
 12308      00
 12309              	.LASF258:
 12310 21e7 70727649 		.ascii	"prvInitialiseTaskLists\000"
 12310      6E697469 
 12310      616C6973 
 12310      65546173 
 12310      6B4C6973 
 12311              	.LASF114:
 12312 21fe 43595F42 		.ascii	"CY_BLE_EVT_GAP_AUTH_FAILED\000"
 12312      4C455F45 
 12312      56545F47 
 12312      41505F41 
 12312      5554485F 
 12313              	.LASF320:
 12314 2219 70784576 		.ascii	"pxEventListItem\000"
 12314      656E744C 
 12314      69737449 
 12314      74656D00 
 12315              	.LASF330:
 12316 2229 70765661 		.ascii	"pvValue\000"
 12316      6C756500 
 12317              	.LASF86:
 12318 2231 43595F42 		.ascii	"CY_BLE_EVT_PHY_UPDATE_COMPLETE\000"
 12318      4C455F45 
 12318      56545F50 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccXvKjbl.s 			page 339


 12318      48595F55 
 12318      50444154 
 12319              	.LASF255:
 12320 2250 70784372 		.ascii	"pxCreatedTask\000"
 12320      65617465 
 12320      64546173 
 12320      6B00
 12321              	.LASF301:
 12322 225e 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 12322      6865636B 
 12322      5461736B 
 12322      73576169 
 12322      74696E67 
 12323              	.LASF281:
 12324 227e 75785361 		.ascii	"uxSavedInterruptStatus\000"
 12324      76656449 
 12324      6E746572 
 12324      72757074 
 12324      53746174 
 12325              	.LASF183:
 12326 2295 43595F42 		.ascii	"CY_BLE_CONN_STATE_CLIENT_SRVC_DISCOVERING\000"
 12326      4C455F43 
 12326      4F4E4E5F 
 12326      53544154 
 12326      455F434C 
 12327              	.LASF49:
 12328 22bf 696E7472 		.ascii	"intrMask\000"
 12328      4D61736B 
 12328      00
 12329              	.LASF28:
 12330 22c8 72784275 		.ascii	"rxBufSize\000"
 12330      6653697A 
 12330      6500
 12331              	.LASF119:
 12332 22d2 43595F42 		.ascii	"CY_BLE_EVT_GAP_CONNECTION_UPDATE_COMPLETE\000"
 12332      4C455F45 
 12332      56545F47 
 12332      41505F43 
 12332      4F4E4E45 
 12333              	.LASF367:
 12334 22fc 78596965 		.ascii	"xYieldPending\000"
 12334      6C645065 
 12334      6E64696E 
 12334      6700
 12335              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
