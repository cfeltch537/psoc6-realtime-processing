ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.syntax unified
  16              		.file	"tasks.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  24              		.type	prvTaskIsTaskSuspended, %function
  25              	prvTaskIsTaskSuspended:
  26              	.LFB139:
  27              		.file 1 "Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0\\Source\\tasks.c"
   1:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
   2:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     All rights reserved
   4:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   5:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   7:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
   9:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  13:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  20:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  25:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    is the industry's de facto standard.                               *
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 2


  31:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  39:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  43:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  47:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  52:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  56:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  59:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
  61:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  63:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  67:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** */
  69:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  70:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Standard includes. */
  71:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <stdlib.h>
  72:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include <string.h>
  73:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  74:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  75:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  76:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task.h is included from an application file. */
  77:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  78:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  79:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* FreeRTOS includes. */
  80:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "FreeRTOS.h"
  81:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "task.h"
  82:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "timers.h"
  83:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #include "StackMacros.h"
  84:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  85:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lint e961 and e750 are suppressed as a MISRA exception justified because the
  86:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined for the
  87:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** header files above, but not in this file, in order to generate the correct
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 3


  88:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** privileged Vs unprivileged linkage and placement. */
  89:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750. */
  90:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
  91:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  92:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** functions but without including stdio.h here. */
  93:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  94:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  95:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  96:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  97:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  98:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#include <stdio.h>
  99:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
 100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
 102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
 103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed just because a higher priority task has been woken. */
 104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
 105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
 107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
 110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
 111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
 112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
 113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
 116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
 117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
 119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
 121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
 122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
 123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
 124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
 125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
 126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** settings allow a task to be created using either statically or dynamically
 127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
 128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
 129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
 130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** made to free the RAM that was allocated statically.
 131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
 132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
 133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
 134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB. */
 135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE ( ( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && (
 136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
 137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
 138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
 139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 4


 145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * global, rather than file scope.
 151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define static
 154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	microcontroller architecture. */
 161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	state task. */
 164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			--uxTopPriority;																			\
 183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
 185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	being used. */
 196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 5


 202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	architecture being used. */
 204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																								\
 212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*-----------------------------------------------------------*/
 221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
 227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** count overflows. */
 239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {																									\
 241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxTemp;																					\
 242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																									\
 246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xNumOfOverflows++;																				\
 250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 6


 259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? ( TCB_t * ) pxCurrentTCB : ( T
 273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** to its original value when it is released. */
 282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #else
 285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * (the task's run time environment, including register values)
 292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef struct tskTaskControlBlock
 294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portSTACK_GROWTH > 0 )
 308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the end of the stack on architectures where the stack 
 309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 7


 316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		void *pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		struct	_reent xNewLib_reent;
 346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* See the comments above the definition of
 354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint8_t ucDelayAborted;
 361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** } tskTCB;
 364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** typedef tskTCB TCB_t;
 368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint -e956 A manual analysis and inspection has been used to determine which
 370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static variables must be declared volatile. */
 371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 8


 373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------*/
 375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Other file private variables. --------------------------------*/
 396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) 0U;
 398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** accessed from a critical section. */
 415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*lint +e956 */
 425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 9


 430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationTickHook( void );
 435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* File private functions. --------------------------------*/
 442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /**
 444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * is in any other state.
 447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * automatically upon the creation of the first task.
 455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * creation of the first user task.
 462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * including the stack pointed to by the TCB.
 474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 10


 487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * and its TCB deleted.
 488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * either the current or the overflow delayed task list.
 494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * a suspended list, etc.).
 501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * NORMAL APPLICATION CODE.
 504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGED_FUNCTION;
 529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
 536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * set to a value other than 1.
 540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 11


 544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * will exit the Blocked state.
 550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/*
 556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 * human readable tables of task information.
 558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	 */
 559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif
 562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * dynamically to fill in the structure's members.
 566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION; /*lint !e971 Unqualified char
 575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
 577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * under the control of the scheduler.
 579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
 580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
 591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer ) /*lint !e971 Unqualified char types are allowed for st
 593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 12


 601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function - use them. */
 604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 Unusual cast is ok as the structures are desig
 605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = NULL;
 621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( portUSING_MPU_WRAPPERS == 1 )
 630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not static allocation is being used. */
 643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Store the stack location in the TCB. */
 648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note
 651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				this task had a statically allocated stack in case it is
 652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				later deleted.  The TCB was allocated dynamically. */
 653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pcName,
 657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 13


 658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										pxTaskDefinition->xRegions );
 662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const char * const pcName,
 678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							const uint16_t usStackDepth,
 679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							void * const pvParameters,
 680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							UBaseType_t uxPriority,
 681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask ) /*lint !e971 Unqualified char types are allowed for str
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the TCB then the stack. */
 689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allocation is being used. */
 694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxNewTCB != NULL )
 697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				be deleted later if required. */
 701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxNewTCB );
 707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB = NULL;
 708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxStack;
 714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 14


 715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) 
 717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxStack != NULL )
 719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Allocate space for the TCB. */
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e961 MISRA exception as the cas
 722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxNewTCB != NULL )
 724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Store the stack location in the TCB. */
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
 729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it again. */
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vPortFree( pxStack );
 733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB = NULL;
 738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxNewTCB != NULL )
 743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const char * const pcName,
 769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const uint32_t ulStackDepth,
 770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									void * const pvParameters,
 771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									UBaseType_t uxPriority,
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 15


 772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									TCB_t *pxNewTCB,
 774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) /*lint !e971 Unqualified char types are allowed fo
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t x;
 778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xRunPrivileged;
 782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTa
 795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* ( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( ( configUSE_TRACE_FACILITY == 1 ) || ( INC
 800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	by the port. */
 805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		performed. */
 822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the task name in the TCB. */
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 16


 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pcName[ x ] == 0x00 )
 835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			break;
 837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	remove the privilege bit if one is present. */
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Event lists are always in priority order. */
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 17


 886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
 901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xRegions;
 904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
 926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
 933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
 935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
 937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
 938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
 939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the	top of stack variable is updated. */
 940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 18


 943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
 945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
 949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( ( void * ) pxCreatedTask != NULL )
 951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
 953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
 957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	updated. */
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
 968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
 973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the suspended state - make this the current task. */
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
 979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				initialisation required.  We will not recover if this call
 980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				fails, but we will report the failure. */
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvInitialiseTaskLists();
 982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
 984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
 986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
 989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
 991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			current task if it is the highest priority task to be created
 992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			so far. */
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 19


1000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxTaskNumber++;
1011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
1016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
1021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
1025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
1027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then it should run now. */
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
1031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
1033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being deleted. */
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 20


1057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready list. */
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			not return. */
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxTaskNumber++;
1083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task itself, as a context switch to another task is required.
1088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the termination list and free up any memory allocated by
1090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
1092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
1097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				after which it is not possible to yield away from this task -
1101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				required. */
1103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				--uxCurrentNumberOfTasks;
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
1109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task that has just been deleted. */
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 21


1114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been deleted. */
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
1124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
1144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
1148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
1150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			block. */
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
1154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
1157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
1159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick count has overflowed since this function was
1161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
1166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 22


1171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				tick time is less than the wake time. */
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
1180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xShouldDelay = pdTRUE;
1182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
1191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
1193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
1199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
1206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
1227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 23


1228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
1230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
1233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_DELAY();
1235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task that is removed from the event list while the
1237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is resumed.
1240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				executing task. */
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
1244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
1246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		have put ourselves to sleep. */
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
1255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			portYIELD_WITHIN_API();
1257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eTaskState eReturn;
1272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	List_t *pxStateList;
1273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
1276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eRunning;
1281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 24


1285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxStateList = ( List_t * ) listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
1287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ( pxStateList == pxDelayedTaskList ) || ( pxStateList == pxOverflowDelayedTaskList ) )
1291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				lists. */
1294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eBlocked;
1295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
1299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list.  Is it genuinely suspended or is it block
1302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					indefinitely? */
1303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
1304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eSuspended;
1306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						eReturn = eBlocked;
1310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
1316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					all. */
1320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					eReturn = eDeleted;
1321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				Ready (including pending ready) state. */
1328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eReady;
1329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
1333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
1334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( TaskHandle_t xTask )
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 25


1342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
1344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the that
1348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			called uxTaskPriorityGet() that is being queried. */
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( TaskHandle_t xTask )
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
1386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being queried. */
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
1391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 26


1399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
1409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Ensure the new priority is valid. */
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
1412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
1414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is being changed. */
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
1425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
1431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
1433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
1437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
1439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The priority change may have readied a task of higher
1441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority than the calling task. */
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
1443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
1445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of a task other than the currently
1447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						running task is being raised.  Is the priority being
1448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						raised above that of the running task? */
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
1450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xYieldRequired = pdTRUE;
1452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
1454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
1455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 27


1456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
1457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The priority of the running task is being raised,
1461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but the running task must already be the highest
1462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority task able to run so no yield is required. */
1463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
1466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of the running task down means
1468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					there may now be another task of higher priority that
1469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is ready to execute. */
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xYieldRequired = pdTRUE;
1471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Setting the priority of any other task down does not
1475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					require a yield as the running task must be above the
1476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new priority of the task being modified. */
1477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				before its uxPriority member is changed so the
1481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
1483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Only change the priority being used if the task is not
1487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					currently using an inherited priority. */
1488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
1489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
1491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The base priority gets set whatever. */
1498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
1499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
1501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
1505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				being used for anything else. */
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
1509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
1511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 28


1513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing more than change it's priority variable. However, if
1519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				in the list appropriate to its new priority. */
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
1522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is currently in its ready list - remove before adding
1524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it to it's new ready list.  As we are in a critical section we
1525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					can do this even if the scheduler is suspended. */
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is known that the task is in its ready list so
1529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						there is no need to check again and the port level
1530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						reset macro can be called directly. */
1531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
1532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
1545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
1547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				optimised task selection is not being used. */
1555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
1569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 29


1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
1571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being suspended. */
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
1575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			suspended list. */
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
1581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
1583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is the task waiting on an event also? */
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
1591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
1593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
1600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
1602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
1604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task that is now in the Suspended state. */
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvResetNextTaskUnblockTime();
1610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
1619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
1621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The current task has just been suspended. */
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
1625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 30


1627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be adjusted to point to a different task. */
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks )
1632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be set to point to it no matter what its relative priority
1636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is. */
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB = NULL;
1638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vTaskSwitchContext();
1642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
  28              		.loc 1 1657 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
1659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
1660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		section. */
1663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTask );
  34              		.loc 1 1665 0
  35 0000 0246     		mov	r2, r0
  36 0002 08B9     		cbnz	r0, .L2
  37              		.loc 1 1665 0 is_stmt 0 discriminator 1
  38              		.syntax unified
  39              	@ 1665 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
  40 0004 72B6     		 cpsid i 
  41              	@ 0 "" 2
  42              		.thumb
  43              		.syntax unified
  44              	.L3:
  45 0006 FEE7     		b	.L3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 31


  46              	.L2:
1666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
  47              		.loc 1 1668 0 is_stmt 1
  48 0008 4169     		ldr	r1, [r0, #20]
  49 000a 0B4B     		ldr	r3, .L12
  50 000c 9942     		cmp	r1, r3
  51 000e 01D1     		bne	.L7
  52 0010 0123     		movs	r3, #1
  53 0012 00E0     		b	.L4
  54              	.L7:
  55 0014 0023     		movs	r3, #0
  56              	.L4:
  57              		.loc 1 1668 0 is_stmt 0 discriminator 4
  58 0016 43B1     		cbz	r3, .L8
1669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
  59              		.loc 1 1671 0 is_stmt 1
  60 0018 926A     		ldr	r2, [r2, #40]
  61 001a 0849     		ldr	r1, .L12+4
  62 001c 8A42     		cmp	r2, r1
  63 001e 06D0     		beq	.L9
1672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE )
  64              		.loc 1 1675 0
  65 0020 02B1     		cbz	r2, .L6
  66 0022 0023     		movs	r3, #0
  67              	.L6:
  68              		.loc 1 1675 0 is_stmt 0 discriminator 4
  69 0024 2BB9     		cbnz	r3, .L11
1658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const TCB_t * const pxTCB = ( TCB_t * ) xTask;
  70              		.loc 1 1658 0 is_stmt 1
  71 0026 0020     		movs	r0, #0
  72              	.LVL1:
  73 0028 7047     		bx	lr
  74              	.LVL2:
  75              	.L8:
  76 002a 0020     		movs	r0, #0
  77              	.LVL3:
  78 002c 7047     		bx	lr
  79              	.LVL4:
  80              	.L9:
  81 002e 0020     		movs	r0, #0
  82              	.LVL5:
  83 0030 7047     		bx	lr
  84              	.LVL6:
  85              	.L11:
1676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
  86              		.loc 1 1677 0
  87 0032 0120     		movs	r0, #1
  88              	.LVL7:
1678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 32


1679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
1695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
  89              		.loc 1 1695 0
  90 0034 7047     		bx	lr
  91              	.L13:
  92 0036 00BF     		.align	2
  93              	.L12:
  94 0038 00000000 		.word	.LANCHOR0
  95 003c 14000000 		.word	.LANCHOR0+20
  96              		.cfi_endproc
  97              	.LFE139:
  98              		.size	prvTaskIsTaskSuspended, .-prvTaskIsTaskSuspended
  99              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 100              		.align	2
 101              		.thumb
 102              		.thumb_func
 103              		.type	prvResetNextTaskUnblockTime, %function
 104              	prvResetNextTaskUnblockTime:
 105              	.LFB166:
1696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		currently executing task. */
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pxTCB != NULL ) && ( pxTCB != pxCurrentTCB ) )
1712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskENTER_CRITICAL();
1714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 33


1719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* As we are in a critical section we can access the ready
1720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					lists even if the scheduler is suspended. */
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* We may have just resumed a higher priority task. */
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						but will leave the lists in the correct state for the
1729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						next yield. */
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
1731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskEXIT_CRITICAL();
1743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
1759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
1760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToResume );
1763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 34


1776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
1779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
1781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
1783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
1785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
1790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					suspended list to the ready list directly. */
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
1794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldRequired = pdTRUE;
1796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
1798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
1799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
1801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
1804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
1806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
1807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unsuspended. */
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
1811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
1812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
1814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xYieldRequired;
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskStartScheduler( void )
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
1829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 35


1833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		address of the RAM then create the idle task. */
1839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												"IDLE",
1842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												ulIdleTaskStackSize,
1843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( void * ) NULL,
1844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskStackBuffer,
1846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
1851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
1855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#else
1858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
1861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
1862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( void * ) NULL,
1863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								( tskIDLE_PRIORITY | portPRIVILEGE_BIT ),
1864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xReturn == pdPASS )
1871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
1873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( xReturn == pdPASS )
1882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
1884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
1885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
1886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
1887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		starts to run. */
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
1889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 36


1890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
1891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
1893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to the task that will run first. */
1894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
1895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
1897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
1901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
1903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
1904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the run time counter time base. */
1905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
1906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
1908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portable interface. */
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
1910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
1912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function will not return. */
1913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
1915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
1917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
1920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
1922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
1923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		or the timer task. */
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
1925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
1926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
1928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
1929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) xIdleTaskHandle;
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
1932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskEndScheduler( void )
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
1936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
1937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portDISABLE_INTERRUPTS();
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
1941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSuspendAll( void )
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
1946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 37


1947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
1948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
1949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	http://goo.gl/wu4acr */
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	++uxSchedulerSuspended;
1951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
1952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
1953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
1955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
1957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
1958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xReturn;
1959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
1960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
1962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
1963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
1964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		running. */
1965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
1966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
1968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
1973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
1975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
1977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
1978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
1979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
1980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
1981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
1982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
1983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
1984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
1985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
1987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
1988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
1989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
1993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
1994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
1995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
1996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			processed. */
1997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
1998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
1999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			idle priority.  This path can only be reached if
2003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 38


2004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = 0;
2005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
2021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
2025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
2032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		--uxSchedulerSuspended;
2034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
2038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				appropriate ready list. */
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
2042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					task then a yield must be performed. */
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 39


2061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					which may have prevented the next unblock time from being
2064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					important for low power tickless implementations, where
2066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					state. */
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
2069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				time. */
2075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
2077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
2079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						do
2081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
2083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								xYieldPending = pdTRUE;
2085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							else
2087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
2088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
2090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							--uxPendedCounts;
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
2092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						uxPendedTicks = 0;
2094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xYieldPending != pdFALSE )
2102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
2106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif
2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
2109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 40


2118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
2122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xAlreadyYielded;
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
2130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTicks = xTickCount;
2135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xTicks;
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
2145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	link: http://www.freertos.org/RTOS-Cortex-M3-M4.html */
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
2162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
2164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = xTickCount;
2166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 41


2175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t. */
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxCurrentNumberOfTasks;
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
2184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queried. */
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
2189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t x;
2199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cNextChar;
2200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
2206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
2210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Check each character in the name looking for a match or
2212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mismatch. */
2213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Characters didn't match. */
2220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else if( cNextChar == 0x00 )
2223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Both strings terminated, a match must have been
2225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						found. */
2226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxReturn = pxNextTCB;
2227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 42


2232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxReturn != NULL )
2236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The handle has been found. */
2238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxReturn;
2249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t* pxTCB;
2260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the ready lists. */
2267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
2268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxQueue--;
2270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB != NULL )
2273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Found the handle. */
2275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Search the delayed lists. */
2281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB == NULL )
2287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 43


2289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the suspended list. */
2296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB == NULL )
2304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Search the deleted list. */
2306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
2310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( TaskHandle_t ) pxTCB;
2314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
2324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
2329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Ready state. */
2332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				do
2333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxQueue--;
2335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
2336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
2338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				task in the Blocked state. */
2341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
2342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
2343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 44


2346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
2349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					each task in the Suspended state. */
2356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
2357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
2367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
2369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pulTotalRunTime = 0;
2376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) xTaskResumeAll();
2386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
2388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xIdleTaskHandle;
2401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 45


2403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 1. */
2410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		each stepped tick. */
2417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount += xTicksToJump;
2419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB = ( TCB_t * ) xTask;
2430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
2431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxTCB );
2433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vTaskSuspendAll();
2435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			it is actually in the Blocked state. */
2438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				scheduler is suspended. */
2443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
2449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
2450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 46


2460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
2462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch if preemption is turned off. */
2468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					performed if the unblocked task has a priority that is
2472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					equal to or higher than the currently executing task. */
2473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						is unsuspended. */
2477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
2478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTaskResumeAll();
2492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
2498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
2502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xItemValue;
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
2504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	tasks to be unblocked. */
2508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		block. */
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + 1;
2514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		delayed lists if it wraps to 0. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 47


2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = xConstTickCount;
2518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U )
2520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
2522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		look any further down the list. */
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
2533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( ;; )
2535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
2537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					to the maximum possible value so it is extremely
2540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					unlikely that the
2541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					next time through. */
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
2545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					at which the task at the head of the delayed list must
2551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be removed from the Blocked state. */
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
2554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xConstTickCount < xItemValue )
2556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						item value is the time at which the task at the head
2559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						state -	so record the item value in
2561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime. */
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
2564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 48


2574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					it from the event list. */
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
2580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					list. */
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
2587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					context switch if preemption is turned off. */
2590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
2592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Preemption is on, but a context switch should
2593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						only be performed if the unblocked task has a
2594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						priority that is equal to or higher than the
2595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						currently executing task. */
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
2597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							xSwitchRequired = pdTRUE;
2599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						else
2601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
2602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
2604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
2605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
2616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xSwitchRequired = pdTRUE;
2618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 49


2631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vApplicationTickHook();
2633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
2635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
2636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
2638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		++uxPendedTicks;
2644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		scheduler is locked. */
2647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationTickHook();
2650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
2652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xYieldPending != pdFALSE )
2657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xSwitchRequired = pdTRUE;
2659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xSwitchRequired;
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		getting set. */
2679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 50


2688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHookFunction_t xReturn;
2704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the value can be accessed from an interrupt. */
2717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
2718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
2722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *xTCB;
2734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
2735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask == NULL )
2738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTCB = ( TCB_t * ) xTask;
2744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 51


2745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
2751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFAIL;
2753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
2756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSwitchContext( void )
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
2764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch. */
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdFALSE;
2772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#else
2779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
2781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				protection here so count values are only valid until the timer
2786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				against suspect run time stat counter implementations - which
2788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				are provided by the application, not the kernel. */
2789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
2794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
2795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
2797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Check for stack overflow, if configured. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 52


2802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{																									\
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t * const pulStack = ( uint32_t * ) pxCurrentTCB->pxStack;							\
2804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
2805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 																										\
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( pulStack[ 0 ] != ulCheckValue ) ||												\
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
2810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationStackOverflowHook( ( TaskHandle_t ) pxCurrentTCB, pxCurrentTCB->pcTaskName );	\
2812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
2813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		optimised asm code. */
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK();
2818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			structure specific to this task. */
2824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
2851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event groups implementation. */
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
2855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
2858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	task that is not in the Blocked state. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 53


2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
2860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
2862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
2863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
2864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
2865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the task level). */
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
2869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TIMERS == 1 )
2873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
2877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This function should not be called by application code hence the
2879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
2880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
2881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should be called with the scheduler suspended. */
2882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
2885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
2886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
2887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		can be used in place of vListInsert. */
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
2889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
2891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
2892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
2894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
2896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
2897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
2900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TIMERS */
2903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
2911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	called from a critical section within an ISR. */
2912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
2914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
2915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the delayed list, and add it to the ready list.
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 54


2916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
2918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
2919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
2920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
2922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxEventList is not empty. */
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
2926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
2928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
2931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
2935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pending until the scheduler is resumed. */
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
2937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
2942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
2943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		it should force a context switch now. */
2944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
2945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
2947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
2949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
2951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
2953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
2956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
2958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
2959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
2960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
2961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
2962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
2963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
2964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
2965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvResetNextTaskUnblockTime();
2966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
2967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
2968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
2971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
2972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 55


2973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemV
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
2975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
2976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
2977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	the event flags implementation. */
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
2981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Store the new item value in the event list. */
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
2984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
2986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	event flags. */
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxUnblockedTCB = ( TCB_t * ) listGET_LIST_ITEM_OWNER( pxEventListItem );
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
2990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
2992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
2993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	lists. */
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
2996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
2998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
2999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return true if the task removed from the event list has
3000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		a higher priority than the calling task.  This allows
3001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task to know if it should force a context
3002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		switch now. */
3003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdTRUE;
3004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xYieldPending = pdTRUE;
3008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pdFALSE;
3012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
3023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
3029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 56


3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
3032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskENTER_CRITICAL();
3034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
3037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != pdFALSE )
3040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				but has the same result. */
3043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
3045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
3051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				specified is the maximum block time then the task should block
3054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				indefinitely, and therefore never time out. */
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
3056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
3061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The tick count is greater than the time at which
3063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			was called. */
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( ( ( TickType_t ) ( xConstTickCount - pxTimeOut->xTimeOnEntering ) ) < *pxTicksToWait ) /
3070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			*pxTicksToWait -= ( xConstTickCount - pxTimeOut->xTimeOnEntering );
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
3075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdTRUE;
3079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	taskEXIT_CRITICAL();
3082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return xReturn;
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 57


3087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** void vTaskMissedYield( void )
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
3090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
3104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = 0U;
3108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTask != NULL )
3123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = ( TCB_t * ) xTask;
3125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
3126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*
3132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * -----------------------------------------------------------
3133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The Idle task.
3134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * ----------------------------------------------------------
3135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  *
3141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c ****  */
3142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 58


3144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
3145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) pvParameters;
3146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( ;; )
3151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvCheckTasksWaitingTermination();
3155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			see if any other task has become available.  If we are using
3160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			will automatically get the processor anyway. */
3162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			taskYIELD();
3163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			to run then the idle task should yield before the end of the
3171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			timeslice.
3172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			A critical region is not required here as we are just reading from
3174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
3178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskYIELD();
3180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			allows the application designer to add background functionality
3194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			without the overhead of a separate task.
3195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vApplicationIdleHook();
3198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 59


3201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		user defined low power mode	implementations require
3204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			test of the expected idle time is performed without the
3212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			valid. */
3214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					time can be sampled again, and this time its value can
3222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					be used. */
3223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) xTaskResumeAll();
3238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 60


3258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			eReturn = eAbortSleep;
3266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupts. */
3273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return eReturn;
3284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
3310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 61


3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = NULL;
3320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pvReturn;
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the calling task. */
3336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvInitialiseTaskLists( void )
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
3347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
3349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
3351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
3356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
3360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
3366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	using list2. */
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 62


3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
3373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
3378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		BaseType_t xListIsEmpty;
3384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* ucTasksDeleted is used to prevent vTaskSuspendAll() being called
3386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		too often in the idle task. */
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
3388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
3390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xListIsEmpty = listLIST_IS_EMPTY( &xTasksWaitingTermination );
3392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( void ) xTaskResumeAll();
3394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xListIsEmpty == pdFALSE )
3396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				TCB_t *pxTCB;
3398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskENTER_CRITICAL();
3400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) );
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
3405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				taskEXIT_CRITICAL();
3407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
3409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 63


3429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
3430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
3431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
3432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
3433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
3434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the suspended list then there is a chance it is
3438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			actually just blocked indefinitely - so really it should be reported as
3439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			being in the Blocked state. */
3440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTaskStatus->eCurrentState == eSuspended )
3441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskSuspendAll();
3443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
3445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTaskStatus->eCurrentState = eBlocked;
3447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xTaskResumeAll();
3450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* INCLUDE_vTaskSuspend */
3453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
3457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
3471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the value
3475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		of eState passed into this function is eInvalid - otherwise the state is
3476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		just set to whatever is passed in. */
3477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( eState != eInvalid )
3478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eState;
3480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( xTask );
3484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 64


3486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
3489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#else
3495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
3497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#endif
3499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile TCB_t *pxNextTCB, *pxFirstTCB;
3514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTask = 0;
3515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
3517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );
3519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			do
3525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList );
3527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
3528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				uxTask++;
3529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
3530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxTask;
3537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 65


3543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static uint16_t prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulCount = 0U;
3547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
3549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
3551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulCount++;
3552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
3555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ( uint16_t ) ulCount;
3557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
3567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t *pucEndOfStack;
3568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxReturn;
3569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#else
3577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
3581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return uxReturn;
3585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		want to allocate and clean RAM statically. */
3597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 66


3600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the stack and TCB. */
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
3613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE == 1 )
3615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			check what was statically allocated before trying to free the
3618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			memory. */
3619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				must be freed. */
3623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				only memory that must be freed. */
3630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vPortFree( pxTCB );
3631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				nothing needs to be freed. */
3636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	)
3637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 106              		.loc 1 3647 0
 107              		.cfi_startproc
 108              		@ args = 0, pretend = 0, frame = 0
 109              		@ frame_needed = 0, uses_anonymous_args = 0
 110              		@ link register save eliminated.
3648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
3649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 111              		.loc 1 3650 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 67


 112 0000 094B     		ldr	r3, .L19
 113 0002 9B6A     		ldr	r3, [r3, #40]
 114 0004 1B68     		ldr	r3, [r3]
 115 0006 0BB9     		cbnz	r3, .L18
 116 0008 0123     		movs	r3, #1
 117 000a 00E0     		b	.L15
 118              	.L18:
 119 000c 0023     		movs	r3, #0
 120              	.L15:
 121              		.loc 1 3650 0 is_stmt 0 discriminator 4
 122 000e 23B1     		cbz	r3, .L16
3651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		there is an item in the delayed list. */
3656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 123              		.loc 1 3656 0 is_stmt 1
 124 0010 4FF0FF32 		mov	r2, #-1
 125 0014 044B     		ldr	r3, .L19
 126 0016 DA62     		str	r2, [r3, #44]
 127 0018 7047     		bx	lr
 128              	.L16:
3657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
3659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from the Blocked state. */
3664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		( pxTCB ) = ( TCB_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
 129              		.loc 1 3664 0
 130 001a 034B     		ldr	r3, .L19
 131 001c 9A6A     		ldr	r2, [r3, #40]
 132 001e D268     		ldr	r2, [r2, #12]
 133 0020 D268     		ldr	r2, [r2, #12]
 134              	.LVL8:
3665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 135              		.loc 1 3665 0
 136 0022 5268     		ldr	r2, [r2, #4]
 137              	.LVL9:
 138 0024 DA62     		str	r2, [r3, #44]
 139 0026 7047     		bx	lr
 140              	.L20:
 141              		.align	2
 142              	.L19:
 143 0028 00000000 		.word	.LANCHOR0
 144              		.cfi_endproc
 145              	.LFE166:
 146              		.size	prvResetNextTaskUnblockTime, .-prvResetNextTaskUnblockTime
 147              		.section	.text.prvDeleteTCB,"ax",%progbits
 148              		.align	2
 149              		.thumb
 150              		.thumb_func
 151              		.type	prvDeleteTCB, %function
 152              	prvDeleteTCB:
 153              	.LFB165:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 68


3593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
 154              		.loc 1 3593 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              	.LVL10:
 159 0000 10B5     		push	{r4, lr}
 160              		.cfi_def_cfa_offset 8
 161              		.cfi_offset 4, -8
 162              		.cfi_offset 14, -4
 163 0002 0446     		mov	r4, r0
3611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTCB );
 164              		.loc 1 3611 0
 165 0004 006B     		ldr	r0, [r0, #48]
 166              	.LVL11:
 167 0006 FFF7FEFF 		bl	vPortFree
 168              	.LVL12:
3612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 169              		.loc 1 3612 0
 170 000a 2046     		mov	r0, r4
 171 000c FFF7FEFF 		bl	vPortFree
 172              	.LVL13:
 173 0010 10BD     		pop	{r4, pc}
 174              		.cfi_endproc
 175              	.LFE165:
 176              		.size	prvDeleteTCB, .-prvDeleteTCB
 177 0012 00BF     		.section	.text.prvInitialiseNewTask,"ax",%progbits
 178              		.align	2
 179              		.thumb
 180              		.thumb_func
 181              		.type	prvInitialiseNewTask, %function
 182              	prvInitialiseNewTask:
 183              	.LFB130:
 775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** StackType_t *pxTopOfStack;
 184              		.loc 1 775 0
 185              		.cfi_startproc
 186              		@ args = 16, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188              	.LVL14:
 189 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 190              		.cfi_def_cfa_offset 32
 191              		.cfi_offset 4, -32
 192              		.cfi_offset 5, -28
 193              		.cfi_offset 6, -24
 194              		.cfi_offset 7, -20
 195              		.cfi_offset 8, -16
 196              		.cfi_offset 9, -12
 197              		.cfi_offset 10, -8
 198              		.cfi_offset 14, -4
 199 0004 8246     		mov	r10, r0
 200 0006 8946     		mov	r9, r1
 201 0008 1546     		mov	r5, r2
 202 000a 9846     		mov	r8, r3
 203 000c 089F     		ldr	r7, [sp, #32]
 204 000e 099E     		ldr	r6, [sp, #36]
 205 0010 0A9C     		ldr	r4, [sp, #40]
 797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 69


 206              		.loc 1 797 0
 207 0012 9200     		lsls	r2, r2, #2
 208              	.LVL15:
 209 0014 A521     		movs	r1, #165
 210              	.LVL16:
 211 0016 206B     		ldr	r0, [r4, #48]
 212              	.LVL17:
 213 0018 FFF7FEFF 		bl	memset
 214              	.LVL18:
 807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 215              		.loc 1 807 0
 216 001c 236B     		ldr	r3, [r4, #48]
 217 001e 05F18042 		add	r2, r5, #1073741824
 218 0022 013A     		subs	r2, r2, #1
 219 0024 03EB8205 		add	r5, r3, r2, lsl #2
 220              	.LVL19:
 808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 221              		.loc 1 808 0
 222 0028 25F00705 		bic	r5, r5, #7
 223              	.LVL20:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 224              		.loc 1 827 0
 225 002c 0023     		movs	r3, #0
 226 002e 08E0     		b	.L24
 227              	.LVL21:
 228              	.L26:
 829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 229              		.loc 1 829 0
 230 0030 19F80310 		ldrb	r1, [r9, r3]	@ zero_extendqisi2
 231 0034 E218     		adds	r2, r4, r3
 232 0036 82F83410 		strb	r1, [r2, #52]
 834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 233              		.loc 1 834 0
 234 003a 19F80320 		ldrb	r2, [r9, r3]	@ zero_extendqisi2
 235 003e 12B1     		cbz	r2, .L25
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 236              		.loc 1 827 0 discriminator 2
 237 0040 0133     		adds	r3, r3, #1
 238              	.LVL22:
 239              	.L24:
 827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 240              		.loc 1 827 0 is_stmt 0 discriminator 1
 241 0042 0F2B     		cmp	r3, #15
 242 0044 F4D9     		bls	.L26
 243              	.L25:
 846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 244              		.loc 1 846 0 is_stmt 1
 245 0046 0023     		movs	r3, #0
 246              	.LVL23:
 247 0048 84F84330 		strb	r3, [r4, #67]
 850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 248              		.loc 1 850 0
 249 004c 062F     		cmp	r7, #6
 250 004e 00D9     		bls	.L27
 852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 251              		.loc 1 852 0
 252 0050 0627     		movs	r7, #6
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 70


 253              	.L27:
 254              	.LVL24:
 859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 255              		.loc 1 859 0
 256 0052 E762     		str	r7, [r4, #44]
 867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 257              		.loc 1 867 0
 258 0054 201D     		adds	r0, r4, #4
 259 0056 FFF7FEFF 		bl	vListInitialiseItem
 260              	.LVL25:
 868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 261              		.loc 1 868 0
 262 005a 04F11800 		add	r0, r4, #24
 263 005e FFF7FEFF 		bl	vListInitialiseItem
 264              	.LVL26:
 872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 265              		.loc 1 872 0
 266 0062 2461     		str	r4, [r4, #16]
 875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 267              		.loc 1 875 0
 268 0064 C7F10703 		rsb	r3, r7, #7
 269 0068 A361     		str	r3, [r4, #24]
 876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 270              		.loc 1 876 0
 271 006a 6462     		str	r4, [r4, #36]
 272              	.LVL27:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 273              		.loc 1 909 0
 274 006c 0023     		movs	r3, #0
 275 006e 06E0     		b	.L28
 276              	.LVL28:
 277              	.L29:
 911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 278              		.loc 1 911 0 discriminator 3
 279 0070 03F11002 		add	r2, r3, #16
 280 0074 04EB8202 		add	r2, r4, r2, lsl #2
 281 0078 0021     		movs	r1, #0
 282 007a 5160     		str	r1, [r2, #4]
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 283              		.loc 1 909 0 discriminator 3
 284 007c 0133     		adds	r3, r3, #1
 285              	.LVL29:
 286              	.L28:
 909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 287              		.loc 1 909 0 is_stmt 0 discriminator 1
 288 007e 042B     		cmp	r3, #4
 289 0080 F6D9     		bls	.L29
 918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 290              		.loc 1 918 0 is_stmt 1
 291 0082 0023     		movs	r3, #0
 292              	.LVL30:
 293 0084 A365     		str	r3, [r4, #88]
 919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 294              		.loc 1 919 0
 295 0086 84F85C30 		strb	r3, [r4, #92]
 946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 296              		.loc 1 946 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 71


 297 008a 4246     		mov	r2, r8
 298 008c 5146     		mov	r1, r10
 299 008e 2846     		mov	r0, r5
 300 0090 FFF7FEFF 		bl	pxPortInitialiseStack
 301              	.LVL31:
 302 0094 2060     		str	r0, [r4]
 950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 303              		.loc 1 950 0
 304 0096 06B1     		cbz	r6, .L23
 954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 305              		.loc 1 954 0
 306 0098 3460     		str	r4, [r6]
 307              	.L23:
 308 009a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 309              		.cfi_endproc
 310              	.LFE130:
 311              		.size	prvInitialiseNewTask, .-prvInitialiseNewTask
 312 009e 00BF     		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 313              		.align	2
 314              		.thumb
 315              		.thumb_func
 316              		.type	prvInitialiseTaskLists, %function
 317              	prvInitialiseTaskLists:
 318              	.LFB163:
3345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** UBaseType_t uxPriority;
 319              		.loc 1 3345 0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 70B5     		push	{r4, r5, r6, lr}
 324              		.cfi_def_cfa_offset 16
 325              		.cfi_offset 4, -16
 326              		.cfi_offset 5, -12
 327              		.cfi_offset 6, -8
 328              		.cfi_offset 14, -4
 329              	.LVL32:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 330              		.loc 1 3348 0
 331 0002 0024     		movs	r4, #0
 332 0004 07E0     		b	.L34
 333              	.LVL33:
 334              	.L35:
3350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 335              		.loc 1 3350 0 discriminator 3
 336 0006 04EB8402 		add	r2, r4, r4, lsl #2
 337 000a 9300     		lsls	r3, r2, #2
 338 000c 1048     		ldr	r0, .L37
 339 000e 1844     		add	r0, r0, r3
 340 0010 FFF7FEFF 		bl	vListInitialise
 341              	.LVL34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 342              		.loc 1 3348 0 discriminator 3
 343 0014 0134     		adds	r4, r4, #1
 344              	.LVL35:
 345              	.L34:
3348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 346              		.loc 1 3348 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 72


 347 0016 062C     		cmp	r4, #6
 348 0018 F5D9     		bls	.L35
3353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 349              		.loc 1 3353 0 is_stmt 1
 350 001a 0E4C     		ldr	r4, .L37+4
 351              	.LVL36:
 352 001c 04F1BC06 		add	r6, r4, #188
 353 0020 3046     		mov	r0, r6
 354 0022 FFF7FEFF 		bl	vListInitialise
 355              	.LVL37:
3354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 356              		.loc 1 3354 0
 357 0026 04F1D005 		add	r5, r4, #208
 358 002a 2846     		mov	r0, r5
 359 002c FFF7FEFF 		bl	vListInitialise
 360              	.LVL38:
3355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 361              		.loc 1 3355 0
 362 0030 04F11400 		add	r0, r4, #20
 363 0034 FFF7FEFF 		bl	vListInitialise
 364              	.LVL39:
3359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 365              		.loc 1 3359 0
 366 0038 04F1E400 		add	r0, r4, #228
 367 003c FFF7FEFF 		bl	vListInitialise
 368              	.LVL40:
3365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 369              		.loc 1 3365 0
 370 0040 2046     		mov	r0, r4
 371 0042 FFF7FEFF 		bl	vListInitialise
 372              	.LVL41:
3371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 373              		.loc 1 3371 0
 374 0046 A662     		str	r6, [r4, #40]
3372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 375              		.loc 1 3372 0
 376 0048 C4F8F850 		str	r5, [r4, #248]
 377 004c 70BD     		pop	{r4, r5, r6, pc}
 378              	.L38:
 379 004e 00BF     		.align	2
 380              	.L37:
 381 0050 30000000 		.word	.LANCHOR0+48
 382 0054 00000000 		.word	.LANCHOR0
 383              		.cfi_endproc
 384              	.LFE163:
 385              		.size	prvInitialiseTaskLists, .-prvInitialiseTaskLists
 386              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 387              		.align	2
 388              		.thumb
 389              		.thumb_func
 390              		.type	prvAddNewTaskToReadyList, %function
 391              	prvAddNewTaskToReadyList:
 392              	.LFB131:
 964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
 393              		.loc 1 964 0
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 73


 396              		@ frame_needed = 0, uses_anonymous_args = 0
 397              	.LVL42:
 398 0000 38B5     		push	{r3, r4, r5, lr}
 399              		.cfi_def_cfa_offset 16
 400              		.cfi_offset 3, -16
 401              		.cfi_offset 4, -12
 402              		.cfi_offset 5, -8
 403              		.cfi_offset 14, -4
 404 0002 0446     		mov	r4, r0
 967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 405              		.loc 1 967 0
 406 0004 FFF7FEFF 		bl	vPortEnterCritical
 407              	.LVL43:
 969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 408              		.loc 1 969 0
 409 0008 264B     		ldr	r3, .L45
 410 000a D3F8FC20 		ldr	r2, [r3, #252]
 411 000e 0132     		adds	r2, r2, #1
 412 0010 C3F8FC20 		str	r2, [r3, #252]
 970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 413              		.loc 1 970 0
 414 0014 D3F80031 		ldr	r3, [r3, #256]
 415 0018 4BB9     		cbnz	r3, .L40
 974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 416              		.loc 1 974 0
 417 001a 224B     		ldr	r3, .L45
 418 001c C3F80041 		str	r4, [r3, #256]
 976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 419              		.loc 1 976 0
 420 0020 D3F8FC30 		ldr	r3, [r3, #252]
 421 0024 012B     		cmp	r3, #1
 422 0026 10D1     		bne	.L41
 981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 423              		.loc 1 981 0
 424 0028 FFF7FEFF 		bl	prvInitialiseTaskLists
 425              	.LVL44:
 426 002c 0DE0     		b	.L41
 427              	.L40:
 993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 428              		.loc 1 993 0
 429 002e 1D4B     		ldr	r3, .L45
 430 0030 D3F80431 		ldr	r3, [r3, #260]
 431 0034 4BB9     		cbnz	r3, .L41
 995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 432              		.loc 1 995 0
 433 0036 1B4B     		ldr	r3, .L45
 434 0038 D3F80031 		ldr	r3, [r3, #256]
 435 003c DA6A     		ldr	r2, [r3, #44]
 436 003e E36A     		ldr	r3, [r4, #44]
 437 0040 9A42     		cmp	r2, r3
 438 0042 02D8     		bhi	.L41
 997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 439              		.loc 1 997 0
 440 0044 174B     		ldr	r3, .L45
 441 0046 C3F80041 		str	r4, [r3, #256]
 442              	.L41:
1010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 74


 443              		.loc 1 1010 0
 444 004a 164A     		ldr	r2, .L45
 445 004c D2F80831 		ldr	r3, [r2, #264]
 446 0050 0133     		adds	r3, r3, #1
 447 0052 C2F80831 		str	r3, [r2, #264]
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 448              		.loc 1 1020 0
 449 0056 E36A     		ldr	r3, [r4, #44]
 450 0058 D2F80C21 		ldr	r2, [r2, #268]
 451 005c 9342     		cmp	r3, r2
 452 005e 02D9     		bls	.L42
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 453              		.loc 1 1020 0 is_stmt 0 discriminator 1
 454 0060 104A     		ldr	r2, .L45
 455 0062 C2F80C31 		str	r3, [r2, #268]
 456              	.L42:
1020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 457              		.loc 1 1020 0 discriminator 3
 458 0066 0F4D     		ldr	r5, .L45
 459 0068 05F13000 		add	r0, r5, #48
 460 006c 03EB8303 		add	r3, r3, r3, lsl #2
 461 0070 9A00     		lsls	r2, r3, #2
 462 0072 211D     		adds	r1, r4, #4
 463 0074 1044     		add	r0, r0, r2
 464 0076 FFF7FEFF 		bl	vListInsertEnd
 465              	.LVL45:
1024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 466              		.loc 1 1024 0 is_stmt 1 discriminator 3
 467 007a FFF7FEFF 		bl	vPortExitCritical
 468              	.LVL46:
1026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 469              		.loc 1 1026 0 discriminator 3
 470 007e D5F80431 		ldr	r3, [r5, #260]
 471 0082 6BB1     		cbz	r3, .L39
1030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 472              		.loc 1 1030 0
 473 0084 D5F80031 		ldr	r3, [r5, #256]
 474 0088 DA6A     		ldr	r2, [r3, #44]
 475 008a E36A     		ldr	r3, [r4, #44]
 476 008c 9A42     		cmp	r2, r3
 477 008e 07D2     		bcs	.L39
1032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 478              		.loc 1 1032 0
 479 0090 4FF08052 		mov	r2, #268435456
 480 0094 044B     		ldr	r3, .L45+4
 481 0096 1A60     		str	r2, [r3]
 482              		.syntax unified
 483              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 484 0098 BFF34F8F 		dsb
 485              	@ 0 "" 2
 486              	@ 1032 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 487 009c BFF36F8F 		isb
 488              	@ 0 "" 2
 489              		.thumb
 490              		.syntax unified
 491              	.L39:
 492 00a0 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 75


 493              	.LVL47:
 494              	.L46:
 495 00a2 00BF     		.align	2
 496              	.L45:
 497 00a4 00000000 		.word	.LANCHOR0
 498 00a8 04ED00E0 		.word	-536810236
 499              		.cfi_endproc
 500              	.LFE131:
 501              		.size	prvAddNewTaskToReadyList, .-prvAddNewTaskToReadyList
 502              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 503              		.align	2
 504              		.thumb
 505              		.thumb_func
 506              		.type	prvAddCurrentTaskToDelayedList, %function
 507              	prvAddCurrentTaskToDelayedList:
 508              	.LFB176:
3666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
3668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
3675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* A critical section is not required as this is not called from
3677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		individual execution thread. */
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xReturn = pxCurrentTCB;
3680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
3692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
3694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
3696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
3700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
3702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
3706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 76


3707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		locked then the mutex holder might now be NULL. */
3723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority < pxCurrentTCB->uxPriority )
3729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				not	being used for anything else. */
3733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
3734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				to be moved into a new list. */
3744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxTCB->uxPriority ] ), &( pxTCB->xStateListI
3745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Just inherit the priority. */
3762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxCurrentTCB->uxPriority;
3763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 77


3764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxTCB, pxCurrentTCB->uxPriority );
3766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3768:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3769:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3770:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3772:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3773:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3774:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3775:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3776:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3777:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3778:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3779:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3781:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3782:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3783:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3785:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) pxMutexHolder;
3786:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
3787:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3788:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxMutexHolder != NULL )
3789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3790:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3791:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3792:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			be the running state task. */
3794:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
3795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3796:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
3797:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
3798:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3799:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3800:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task? */
3801:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
3802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3804:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
3805:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					holding	task then it must be the running state task.  Remove
3810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the	holding task from the ready	list. */
3811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
3812:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3813:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
3814:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3815:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
3816:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
3817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3818:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
3819:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3820:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 78


3821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					new	ready list. */
3822:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3823:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
3824:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3825:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3826:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					any other purpose if this task is running, and it must be
3827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					running to give back the mutex. */
3828:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
3829:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
3830:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3831:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This is only actually required in the corner case whereby
3833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
3834:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					in an order different to that in which they were taken.
3835:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					If a context switch did not occur when the first mutex was
3836:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
3837:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					switch should occur when the last mutex is returned whether
3838:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a task is waiting on it or not. */
3839:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xReturn = pdTRUE;
3840:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3841:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3843:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3845:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3846:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3847:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3848:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3851:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3852:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3853:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3855:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3856:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
3857:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3858:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
3860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3861:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3862:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3863:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3864:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskEnterCritical( void )
3865:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portDISABLE_INTERRUPTS();
3867:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3869:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
3871:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
3873:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
3874:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
3875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
3876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
3877:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			critical section. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 79


3878:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
3879:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3880:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portASSERT_IF_IN_ISR();
3881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3882:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3883:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3884:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3885:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3886:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3887:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3889:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3890:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3891:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3892:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
3893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3894:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskExitCritical( void )
3895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3896:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
3897:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
3899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
3901:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3902:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
3903:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3904:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portENABLE_INTERRUPTS();
3905:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
3907:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
3908:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
3910:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3911:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
3912:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
3913:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3914:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
3915:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3916:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
3917:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3918:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3919:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3920:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3921:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3922:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
3923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3926:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
3928:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	size_t x;
3930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3931:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Start by copying the entire string. */
3932:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
3933:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 80


3935:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		printed out. */
3936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
3937:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pcBuffer[ x ] = ' ';
3939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
3940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3941:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Terminate. */
3942:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pcBuffer[ x ] = 0x00;
3943:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3944:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Return the new end of string. */
3945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return &( pcBuffer[ x ] );
3946:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
3947:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
3949:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
3950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3951:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
3952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3953:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
3954:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
3955:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
3956:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
3957:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	char cStatus;
3958:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3959:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
3960:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
3961:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3962:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
3963:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
3964:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
3965:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3966:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
3967:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
3968:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays task names, states and stack usage.
3969:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
3971:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
3972:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
3973:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
3974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
3975:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
3976:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * snprintf() implementation!).
3977:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
3978:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
3979:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
3980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskList().
3981:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
3982:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3984:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
3985:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
3986:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
3988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
3989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
3990:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3991:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 81


3992:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
3993:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
3994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
3995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
3996:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
3997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
3998:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
3999:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4000:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4001:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4002:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4003:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4004:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4005:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4006:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4008:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4009:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4010:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4012:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4013:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4014:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4016:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4017:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					default:			/* Should not get here, but it is included
4019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										to prevent static checking errors. */
4020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										cStatus = 0x00;
4021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 										break;
4022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4023:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4025:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				can be printed in tabular form more easily. */
4026:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4028:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Write the rest of the string. */
4029:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer );
4031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4032:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4034:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4038:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4039:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4040:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4042:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
4044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*----------------------------------------------------------*/
4045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4047:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4048:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 82


4049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4051:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	volatile UBaseType_t uxArraySize, x;
4052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4053:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4054:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4057:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4058:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		#endif
4059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/*
4061:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * PLEASE NOTE:
4062:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4063:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4064:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4065:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * scheduler.
4066:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4070:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * in both absolute and percentage terms.
4071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4075:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4077:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * a full snprintf() implementation!).
4079:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 *
4080:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4083:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		 */
4084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4085:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4086:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		*pcWriteBuffer = 0x00;
4087:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		function is executing. */
4090:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4092:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4094:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		equate to NULL. */
4095:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) );
4096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4097:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4098:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4099:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Generate the (binary) data. */
4100:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4102:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* For percentage calculations. */
4103:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulTotalTime /= 100UL;
4104:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Avoid divide by zero errors. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 83


4106:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulTotalTime > 0 )
4107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4109:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4110:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4111:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4113:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4114:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4115:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4116:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* Write the task name to the string, padding with
4117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					spaces so it can be printed in tabular form more
4118:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					easily. */
4119:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4120:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4122:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4127:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4129:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4130:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4131:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4132:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4133:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4135:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4136:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4137:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* If the percentage is zero here then the task has
4138:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						consumed less than 1% of the total run time. */
4139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4140:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4142:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#else
4144:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
4145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							printf() library can be used. */
4147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4148:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
4149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						#endif
4150:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4151:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4152:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer );
4153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4155:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4157:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4159:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4160:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4162:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 84


4163:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4164:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4166:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4168:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4169:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4171:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4172:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4173:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
4175:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
4176:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
4178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4180:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	queues and semaphores. */
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
4182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4183:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return uxReturn;
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
4185:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4186:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4189:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvTaskIncrementMutexHeldCount( void )
4190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4191:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4193:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( pxCurrentTCB != NULL )
4194:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4195:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
4196:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4197:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return pxCurrentTCB;
4199:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4200:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4201:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_MUTEXES */
4202:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4203:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4204:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4206:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4208:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
4209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4212:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
4214:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4215:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4217:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4219:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 85


4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4221:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4222:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4223:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4224:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4228:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4230:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4233:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4234:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4235:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4236:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4237:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4238:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4240:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4242:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
4245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ulReturn != 0UL )
4247:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
4249:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
4251:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4252:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4253:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - 1;
4255:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4257:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4258:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4259:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4260:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4261:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4263:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4265:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4266:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return ulReturn;
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4268:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4269:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4270:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4271:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4272:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4273:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4274:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4276:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 86


4277:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4279:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4280:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
4282:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4283:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4284:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4285:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				clear the value to zero. */
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
4287:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4288:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
4290:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
4292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
4294:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4296:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					section (some will yield immediately, others wait until the
4298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					critical section exits) - but it is not something that
4299:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					application code should ever do. */
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					portYIELD_WITHIN_API();
4301:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4302:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4303:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4304:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4305:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4306:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4307:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4309:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4310:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4311:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4313:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4316:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4317:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulNotificationValue != NULL )
4319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4320:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Output the current notification value, which may or may not
4321:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				have changed. */
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
4323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4324:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4325:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4326:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4327:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4328:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			unblocked because of a timeout. */
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState == taskWAITING_NOTIFICATION )
4330:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4331:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was not received. */
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFALSE;
4333:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 87


4334:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4335:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4336:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* A notification was already pending or a notification was
4337:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				received while the task was waiting. */
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
4340:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4343:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4346:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4348:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4351:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4353:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4354:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4356:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4358:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4359:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4361:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4362:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4364:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4366:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4368:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4369:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4371:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4373:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4375:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4376:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4379:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4380:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4384:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4388:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 88


4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4392:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4394:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4397:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4398:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4400:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction:
4401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4405:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY();
4407:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4409:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
4414:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4415:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4418:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4419:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4421:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4422:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4423:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					because it will automatically get reset to a new value when
4425:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4426:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					tickless idling is used it might be more important to enter
4427:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4428:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4429:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					earliest possible time. */
4430:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4431:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4432:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				#endif
4433:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4435:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4436:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4437:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
4439:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4440:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4441:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4443:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4445:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4446:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4447:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 89


4448:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4452:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4454:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4455:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4456:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4457:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4458:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4459:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4460:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4462:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4463:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
4465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4466:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4468:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4469:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4471:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4472:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4473:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4474:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4475:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4476:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4477:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4478:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4479:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4480:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4481:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4482:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4483:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4484:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4486:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4487:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4488:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4489:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4490:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
4492:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
4494:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4495:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4498:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			switch( eAction )
4500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4501:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetBits	:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4504:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 90


4505:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eIncrement	:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithOverwrite	:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4512:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
4515:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
4517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4518:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4520:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* The value could not be written to the task. */
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xReturn = pdFAIL;
4522:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4523:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4524:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4525:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				case eNoAction :
4526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The task is being notified without its notify value being
4527:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					updated. */
4528:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
4529:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4530:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4531:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4533:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4534:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4539:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4541:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4545:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4547:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4548:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4550:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4551:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4554:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4557:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4559:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4560:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4561:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 91


4562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter to an ISR
4564:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4566:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4568:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4569:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4572:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4573:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4576:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4578:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4579:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4581:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4582:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4583:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4584:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
4587:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4588:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4589:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( xTaskToNotify );
4591:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4593:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4594:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4595:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4597:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4600:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4602:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4604:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4605:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4606:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		provided on the following link:
4607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
4609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4610:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
4611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4612:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
4613:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
4616:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4617:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			semaphore. */
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 92


4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
4620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4621:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4622:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			notification then unblock it now. */
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
4626:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4627:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The task should not have been on an event list. */
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
4629:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
4631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
4634:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4635:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4636:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4638:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
4640:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
4643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4644:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					/* The notified task has a priority above the currently
4645:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					executing task so a yield is required. */
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
4647:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
4649:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4650:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					else
4651:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
4652:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						/* Mark that a yield is pending in case the user is not
4653:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						using the "xHigherPriorityTaskWoken" parameter in an ISR
4654:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						safe FreeRTOS function. */
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						xYieldPending = pdTRUE;
4656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
4657:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				else
4659:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4660:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4661:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
4662:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4663:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4664:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4665:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4666:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4667:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4669:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4670:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4671:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4672:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4675:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 93


4676:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
4677:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4678:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		its notification state cleared. */
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
4681:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskENTER_CRITICAL();
4683:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
4685:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
4688:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4689:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdFAIL;
4692:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		taskEXIT_CRITICAL();
4695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4696:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		return xReturn;
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4698:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4700:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
4701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4702:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4704:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** {
 509              		.loc 1 4704 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 0
 512              		@ frame_needed = 0, uses_anonymous_args = 0
 513              	.LVL48:
 514 0000 70B5     		push	{r4, r5, r6, lr}
 515              		.cfi_def_cfa_offset 16
 516              		.cfi_offset 4, -16
 517              		.cfi_offset 5, -12
 518              		.cfi_offset 6, -8
 519              		.cfi_offset 14, -4
 520 0002 0446     		mov	r4, r0
 521 0004 0E46     		mov	r6, r1
4705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTimeToWake;
4706:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 522              		.loc 1 4706 0
 523 0006 174B     		ldr	r3, .L52
 524 0008 D3F81051 		ldr	r5, [r3, #272]
 525              	.LVL49:
4707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4708:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4709:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4712:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		when the task leaves the Blocked state. */
4713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4714:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#endif
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 94


4716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4717:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
4718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	as the same list item is used for both lists. */
4719:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 526              		.loc 1 4719 0
 527 000c D3F80001 		ldr	r0, [r3, #256]
 528              	.LVL50:
 529 0010 0430     		adds	r0, r0, #4
 530 0012 FFF7FEFF 		bl	uxListRemove
 531              	.LVL51:
4720:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
4722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		check, and the port reset macro can be called directly. */
4723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
4724:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	else
4726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4727:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
4728:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
4729:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
4731:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
4732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 532              		.loc 1 4732 0
 533 0016 B4F1FF3F 		cmp	r4, #-1
 534 001a 07D1     		bne	.L48
 535              		.loc 1 4732 0 is_stmt 0 discriminator 1
 536 001c 36B1     		cbz	r6, .L48
4733:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4734:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
4735:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
4736:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			indefinitely. */
4737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 537              		.loc 1 4737 0 is_stmt 1
 538 001e 1148     		ldr	r0, .L52
 539 0020 D0F80011 		ldr	r1, [r0, #256]
 540 0024 0431     		adds	r1, r1, #4
 541 0026 FFF7FEFF 		bl	vListInsertEnd
 542              	.LVL52:
 543 002a 70BD     		pop	{r4, r5, r6, pc}
 544              	.LVL53:
 545              	.L48:
4738:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
4739:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		else
4740:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
4741:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
4742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
4743:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			kernel will manage it correctly. */
4744:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
 546              		.loc 1 4744 0
 547 002c 2C44     		add	r4, r4, r5
 548              	.LVL54:
4745:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4746:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
4747:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 549              		.loc 1 4747 0
 550 002e 0D4B     		ldr	r3, .L52
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 95


 551 0030 D3F80031 		ldr	r3, [r3, #256]
 552 0034 5C60     		str	r4, [r3, #4]
4748:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4749:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
 553              		.loc 1 4749 0
 554 0036 A542     		cmp	r5, r4
 555 0038 08D9     		bls	.L50
4750:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4751:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
4752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				list. */
4753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 556              		.loc 1 4753 0
 557 003a 0A4B     		ldr	r3, .L52
 558 003c D3F8F800 		ldr	r0, [r3, #248]
 559 0040 D3F80011 		ldr	r1, [r3, #256]
 560 0044 0431     		adds	r1, r1, #4
 561 0046 FFF7FEFF 		bl	vListInsert
 562              	.LVL55:
 563 004a 70BD     		pop	{r4, r5, r6, pc}
 564              	.LVL56:
 565              	.L50:
4754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
4755:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			else
4756:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
4757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
4758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				is used. */
4759:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 566              		.loc 1 4759 0
 567 004c 054D     		ldr	r5, .L52
 568              	.LVL57:
 569 004e A86A     		ldr	r0, [r5, #40]
 570 0050 D5F80011 		ldr	r1, [r5, #256]
 571 0054 0431     		adds	r1, r1, #4
 572 0056 FFF7FEFF 		bl	vListInsert
 573              	.LVL58:
4760:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
4761:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
4762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
4763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				needs to be updated too. */
4764:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
 574              		.loc 1 4764 0
 575 005a EB6A     		ldr	r3, [r5, #44]
 576 005c 9C42     		cmp	r4, r3
 577 005e 00D2     		bcs	.L47
4765:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
4766:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
 578              		.loc 1 4766 0
 579 0060 EC62     		str	r4, [r5, #44]
 580              	.L47:
 581 0062 70BD     		pop	{r4, r5, r6, pc}
 582              	.LVL59:
 583              	.L53:
 584              		.align	2
 585              	.L52:
 586 0064 00000000 		.word	.LANCHOR0
 587              		.cfi_endproc
 588              	.LFE176:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 96


 589              		.size	prvAddCurrentTaskToDelayedList, .-prvAddCurrentTaskToDelayedList
 590              		.section	.text.xTaskCreate,"ax",%progbits
 591              		.align	2
 592              		.global	xTaskCreate
 593              		.thumb
 594              		.thumb_func
 595              		.type	xTaskCreate, %function
 596              	xTaskCreate:
 597              	.LFB129:
 682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxNewTCB;
 598              		.loc 1 682 0
 599              		.cfi_startproc
 600              		@ args = 8, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              	.LVL60:
 603 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 604              		.cfi_def_cfa_offset 28
 605              		.cfi_offset 4, -28
 606              		.cfi_offset 5, -24
 607              		.cfi_offset 6, -20
 608              		.cfi_offset 7, -16
 609              		.cfi_offset 8, -12
 610              		.cfi_offset 9, -8
 611              		.cfi_offset 14, -4
 612 0004 85B0     		sub	sp, sp, #20
 613              		.cfi_def_cfa_offset 48
 614 0006 0646     		mov	r6, r0
 615 0008 0F46     		mov	r7, r1
 616 000a 1546     		mov	r5, r2
 617 000c 9846     		mov	r8, r3
 618              	.LBB18:
 716:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 619              		.loc 1 716 0
 620 000e 9000     		lsls	r0, r2, #2
 621              	.LVL61:
 622 0010 FFF7FEFF 		bl	pvPortMalloc
 623              	.LVL62:
 718:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 624              		.loc 1 718 0
 625 0014 60B1     		cbz	r0, .L58
 626 0016 8146     		mov	r9, r0
 721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 627              		.loc 1 721 0
 628 0018 6020     		movs	r0, #96
 629              	.LVL63:
 630 001a FFF7FEFF 		bl	pvPortMalloc
 631              	.LVL64:
 723:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 632              		.loc 1 723 0
 633 001e 0446     		mov	r4, r0
 634 0020 10B1     		cbz	r0, .L56
 726:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 635              		.loc 1 726 0
 636 0022 C0F83090 		str	r9, [r0, #48]
 637 0026 04E0     		b	.L55
 638              	.L56:
 732:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 97


 639              		.loc 1 732 0
 640 0028 4846     		mov	r0, r9
 641              	.LVL65:
 642 002a FFF7FEFF 		bl	vPortFree
 643              	.LVL66:
 644 002e 00E0     		b	.L55
 645              	.LVL67:
 646              	.L58:
 737:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 647              		.loc 1 737 0
 648 0030 0024     		movs	r4, #0
 649              	.LVL68:
 650              	.L55:
 651              	.LBE18:
 742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 652              		.loc 1 742 0
 653 0032 8CB1     		cbz	r4, .L59
 752:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 654              		.loc 1 752 0
 655 0034 0023     		movs	r3, #0
 656 0036 0393     		str	r3, [sp, #12]
 657 0038 0294     		str	r4, [sp, #8]
 658 003a 0D9B     		ldr	r3, [sp, #52]
 659 003c 0193     		str	r3, [sp, #4]
 660 003e 0C9B     		ldr	r3, [sp, #48]
 661 0040 0093     		str	r3, [sp]
 662 0042 4346     		mov	r3, r8
 663 0044 2A46     		mov	r2, r5
 664 0046 3946     		mov	r1, r7
 665 0048 3046     		mov	r0, r6
 666 004a FFF7FEFF 		bl	prvInitialiseNewTask
 667              	.LVL69:
 753:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdPASS;
 668              		.loc 1 753 0
 669 004e 2046     		mov	r0, r4
 670 0050 FFF7FEFF 		bl	prvAddNewTaskToReadyList
 671              	.LVL70:
 754:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 672              		.loc 1 754 0
 673 0054 0120     		movs	r0, #1
 674 0056 01E0     		b	.L57
 675              	.LVL71:
 676              	.L59:
 758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 677              		.loc 1 758 0
 678 0058 4FF0FF30 		mov	r0, #-1
 679              	.L57:
 680              	.LVL72:
 762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 681              		.loc 1 762 0
 682 005c 05B0     		add	sp, sp, #20
 683              		.cfi_def_cfa_offset 28
 684              		@ sp needed
 685 005e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 686              		.cfi_endproc
 687              	.LFE129:
 688              		.size	xTaskCreate, .-xTaskCreate
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 98


 689 0062 00BF     		.section	.text.vTaskDelete,"ax",%progbits
 690              		.align	2
 691              		.global	vTaskDelete
 692              		.thumb
 693              		.thumb_func
 694              		.type	vTaskDelete, %function
 695              	vTaskDelete:
 696              	.LFB132:
1049:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 697              		.loc 1 1049 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              	.LVL73:
 702 0000 70B5     		push	{r4, r5, r6, lr}
 703              		.cfi_def_cfa_offset 16
 704              		.cfi_offset 4, -16
 705              		.cfi_offset 5, -12
 706              		.cfi_offset 6, -8
 707              		.cfi_offset 14, -4
 708 0002 0446     		mov	r4, r0
1052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 709              		.loc 1 1052 0
 710 0004 FFF7FEFF 		bl	vPortEnterCritical
 711              	.LVL74:
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 712              		.loc 1 1056 0
 713 0008 14B9     		cbnz	r4, .L62
1056:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 714              		.loc 1 1056 0 is_stmt 0 discriminator 1
 715 000a 244B     		ldr	r3, .L70
 716 000c D3F80041 		ldr	r4, [r3, #256]
 717              	.LVL75:
 718              	.L62:
1059:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 719              		.loc 1 1059 0 is_stmt 1 discriminator 4
 720 0010 261D     		adds	r6, r4, #4
 721 0012 3046     		mov	r0, r6
 722 0014 FFF7FEFF 		bl	uxListRemove
 723              	.LVL76:
1069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 724              		.loc 1 1069 0 discriminator 4
 725 0018 A36A     		ldr	r3, [r4, #40]
 726 001a 1BB1     		cbz	r3, .L63
1071:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 727              		.loc 1 1071 0
 728 001c 04F11800 		add	r0, r4, #24
 729 0020 FFF7FEFF 		bl	uxListRemove
 730              	.LVL77:
 731              	.L63:
1082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 732              		.loc 1 1082 0
 733 0024 1D4B     		ldr	r3, .L70
 734 0026 D3F80821 		ldr	r2, [r3, #264]
 735 002a 0132     		adds	r2, r2, #1
 736 002c C3F80821 		str	r2, [r3, #264]
1084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 99


 737              		.loc 1 1084 0
 738 0030 D3F80031 		ldr	r3, [r3, #256]
 739 0034 9C42     		cmp	r4, r3
 740 0036 0BD1     		bne	.L64
1091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 741              		.loc 1 1091 0
 742 0038 184D     		ldr	r5, .L70
 743 003a 3146     		mov	r1, r6
 744 003c 05F1E400 		add	r0, r5, #228
 745 0040 FFF7FEFF 		bl	vListInsertEnd
 746              	.LVL78:
1096:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 747              		.loc 1 1096 0
 748 0044 D5F81431 		ldr	r3, [r5, #276]
 749 0048 0133     		adds	r3, r3, #1
 750 004a C5F81431 		str	r3, [r5, #276]
 751 004e 0AE0     		b	.L65
 752              	.L64:
1107:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 753              		.loc 1 1107 0
 754 0050 124A     		ldr	r2, .L70
 755 0052 D2F8FC30 		ldr	r3, [r2, #252]
 756 0056 013B     		subs	r3, r3, #1
 757 0058 C2F8FC30 		str	r3, [r2, #252]
1108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 758              		.loc 1 1108 0
 759 005c 2046     		mov	r0, r4
 760 005e FFF7FEFF 		bl	prvDeleteTCB
 761              	.LVL79:
1112:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 762              		.loc 1 1112 0
 763 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 764              	.LVL80:
 765              	.L65:
1117:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 766              		.loc 1 1117 0
 767 0066 FFF7FEFF 		bl	vPortExitCritical
 768              	.LVL81:
1121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 769              		.loc 1 1121 0
 770 006a 0C4B     		ldr	r3, .L70
 771 006c D3F80431 		ldr	r3, [r3, #260]
 772 0070 93B1     		cbz	r3, .L61
1123:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 773              		.loc 1 1123 0
 774 0072 0A4B     		ldr	r3, .L70
 775 0074 D3F80031 		ldr	r3, [r3, #256]
 776 0078 9C42     		cmp	r4, r3
 777 007a 0DD1     		bne	.L61
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 778              		.loc 1 1125 0
 779 007c 074B     		ldr	r3, .L70
 780 007e D3F81831 		ldr	r3, [r3, #280]
 781 0082 0BB1     		cbz	r3, .L67
1125:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 782              		.loc 1 1125 0 is_stmt 0 discriminator 1
 783              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 100


 784              	@ 1125 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 785 0084 72B6     		 cpsid i 
 786              	@ 0 "" 2
 787              		.thumb
 788              		.syntax unified
 789              	.L68:
 790 0086 FEE7     		b	.L68
 791              	.L67:
1126:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 792              		.loc 1 1126 0 is_stmt 1
 793 0088 4FF08052 		mov	r2, #268435456
 794 008c 044B     		ldr	r3, .L70+4
 795 008e 1A60     		str	r2, [r3]
 796              		.syntax unified
 797              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 798 0090 BFF34F8F 		dsb
 799              	@ 0 "" 2
 800              	@ 1126 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 801 0094 BFF36F8F 		isb
 802              	@ 0 "" 2
 803              		.thumb
 804              		.syntax unified
 805              	.L61:
 806 0098 70BD     		pop	{r4, r5, r6, pc}
 807              	.LVL82:
 808              	.L71:
 809 009a 00BF     		.align	2
 810              	.L70:
 811 009c 00000000 		.word	.LANCHOR0
 812 00a0 04ED00E0 		.word	-536810236
 813              		.cfi_endproc
 814              	.LFE132:
 815              		.size	vTaskDelete, .-vTaskDelete
 816              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 817              		.align	2
 818              		.global	uxTaskPriorityGet
 819              		.thumb
 820              		.thumb_func
 821              		.type	uxTaskPriorityGet, %function
 822              	uxTaskPriorityGet:
 823              	.LFB135:
1341:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 824              		.loc 1 1341 0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL83:
 829 0000 10B5     		push	{r4, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833 0002 0446     		mov	r4, r0
1345:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 834              		.loc 1 1345 0
 835 0004 FFF7FEFF 		bl	vPortEnterCritical
 836              	.LVL84:
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 101


 837              		.loc 1 1349 0
 838 0008 14B9     		cbnz	r4, .L73
1349:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 839              		.loc 1 1349 0 is_stmt 0 discriminator 1
 840 000a 044B     		ldr	r3, .L75
 841 000c D3F80041 		ldr	r4, [r3, #256]
 842              	.LVL85:
 843              	.L73:
1350:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 844              		.loc 1 1350 0 is_stmt 1 discriminator 4
 845 0010 E46A     		ldr	r4, [r4, #44]
 846              	.LVL86:
1352:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 847              		.loc 1 1352 0 discriminator 4
 848 0012 FFF7FEFF 		bl	vPortExitCritical
 849              	.LVL87:
1355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 850              		.loc 1 1355 0 discriminator 4
 851 0016 2046     		mov	r0, r4
 852 0018 10BD     		pop	{r4, pc}
 853              	.LVL88:
 854              	.L76:
 855 001a 00BF     		.align	2
 856              	.L75:
 857 001c 00000000 		.word	.LANCHOR0
 858              		.cfi_endproc
 859              	.LFE135:
 860              		.size	uxTaskPriorityGet, .-uxTaskPriorityGet
 861              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 862              		.align	2
 863              		.global	uxTaskPriorityGetFromISR
 864              		.thumb
 865              		.thumb_func
 866              		.type	uxTaskPriorityGetFromISR, %function
 867              	uxTaskPriorityGetFromISR:
 868              	.LFB136:
1363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 869              		.loc 1 1363 0
 870              		.cfi_startproc
 871              		@ args = 0, pretend = 0, frame = 0
 872              		@ frame_needed = 0, uses_anonymous_args = 0
 873              	.LVL89:
 874 0000 10B5     		push	{r4, lr}
 875              		.cfi_def_cfa_offset 8
 876              		.cfi_offset 4, -8
 877              		.cfi_offset 14, -4
 878 0002 0446     		mov	r4, r0
1383:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 879              		.loc 1 1383 0
 880 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
 881              	.LVL90:
 882              	.LBB19:
 883              	.LBB20:
 884              		.file 2 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h"
   1:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*
   2:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS V9.0.0 - Copyright (C) 2016 Real Time Engineers Ltd.
   3:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     All rights reserved
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 102


   4:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   5:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
   6:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   7:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     This file is part of the FreeRTOS distribution.
   8:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
   9:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is free software; you can redistribute it and/or modify it under
  10:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the terms of the GNU General Public License (version 2) as published by the
  11:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Free Software Foundation >>>> AND MODIFIED BY <<<< the FreeRTOS exception.
  12:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  13:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  14:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   NOTE: The modification to the GPL is included to allow you to     !<<
  15:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   distribute a combined work that includes FreeRTOS without being   !<<
  16:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   obliged to provide the source code for proprietary components     !<<
  17:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     >>!   outside of the FreeRTOS kernel.                                   !<<
  18:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  19:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  20:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
  21:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
  22:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FOR A PARTICULAR PURPOSE.  Full license text is available on the following
  23:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     link: http://www.freertos.org/a00114.html
  24:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  25:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  26:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  27:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    FreeRTOS provides completely free yet professionally developed,    *
  28:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    robust, strictly quality controlled, supported, and cross          *
  29:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    platform software that is more than just the market leader, it     *
  30:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    is the industry's de facto standard.                               *
  31:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  32:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    Help yourself get started quickly while simultaneously helping     *
  33:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    to support the FreeRTOS project by purchasing a FreeRTOS           *
  34:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    tutorial book, reference manual, or both:                          *
  35:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *    http://www.FreeRTOS.org/Documentation                              *
  36:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****      *                                                                       *
  37:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     ***************************************************************************
  38:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  39:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/FAQHelp.html - Having a problem?  Start by reading
  40:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     the FAQ page "My application does not run, what could be wrong?".  Have you
  41:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     defined configASSERT()?
  42:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  43:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/support - In return for receiving this top quality
  44:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     embedded software for free we request you assist our global community by
  45:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     participating in the support forum.
  46:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  47:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/training - Investing in training allows your team to
  48:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     be as productive as possible as early as possible.  Now you can receive
  49:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     FreeRTOS training directly from Richard Barry, CEO of Real Time Engineers
  50:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Ltd, and the world's leading authority on the world's leading RTOS.
  51:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  52:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
  53:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     including FreeRTOS+Trace - an indispensable productivity tool, a DOS
  54:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     compatible FAT file system, and our tiny thread aware UDP/IP stack.
  55:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  56:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.FreeRTOS.org/labs - Where new FreeRTOS products go to incubate.
  57:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Come and try FreeRTOS+TCP, our new open source TCP/IP stack for FreeRTOS.
  58:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  59:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.OpenRTOS.com - Real Time Engineers ltd. license FreeRTOS to High
  60:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     Integrity Systems ltd. to sell under the OpenRTOS brand.  Low cost OpenRTOS
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 103


  61:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     licenses offer ticketed support, indemnification and commercial middleware.
  62:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  63:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     http://www.SafeRTOS.com - High Integrity Systems also provide a safety
  64:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     engineered and independently SIL3 certified version for use in safety and
  65:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     mission critical applications that require provable dependability.
  66:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  67:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     1 tab == 4 spaces!
  68:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** */
  69:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  70:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  71:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef PORTMACRO_H
  72:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define PORTMACRO_H
  73:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  74:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef __cplusplus
  75:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern "C" {
  76:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
  77:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  78:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------
  79:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * Port specific definitions.
  80:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  81:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  82:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * given hardware and compiler.
  83:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *
  84:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  * These settings should not be altered.
  85:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  *-----------------------------------------------------------
  86:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****  */
  87:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  88:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Type definitions. */
  89:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCHAR        char
  90:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portFLOAT       float
  91:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDOUBLE      double
  92:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portLONG        long
  93:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSHORT       short
  94:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_TYPE  uint32_t
  95:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBASE_TYPE   long
  96:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
  97:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  98:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef long BaseType_t;
  99:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
 100:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 101:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
 102:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint16_t TickType_t;
 103:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffff
 104:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #else
 105:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     typedef uint32_t TickType_t;
 106:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portMAX_DELAY ( TickType_t ) 0xffffffffUL
 107:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 108:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
 109:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     not need to be guarded with a critical section. */
 110:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portTICK_TYPE_IS_ATOMIC 1
 111:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 112:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 113:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 114:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Architecture specifics. */
 115:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSTACK_GROWTH              ( -1 )
 116:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTICK_PERIOD_MS            ( ( TickType_t ) 1000 / configTICK_RATE_HZ )
 117:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portBYTE_ALIGNMENT            8
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 104


 118:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 119:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 120:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 121:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Scheduler utilities. */
 122:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD()                                                            \
 123:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {                                                                              \
 124:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Set a PendSV to request a context switch. */                            \
 125:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;                            \
 126:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****                                                                                \
 127:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Barriers are normally not required but do ensure the code is completely \
 128:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     within the specified behaviour for the architecture. */                    \
 129:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "dsb" );                                                   \
 130:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "isb" );                                                   \
 131:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }                                                                              \
 132:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 133:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG         ( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
 134:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT        ( 1UL << 28UL )
 135:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
 136:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x )       portEND_SWITCHING_ISR( x )
 137:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 138:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 139:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 140:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Critical section management. */
 141:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortEnterCritical( void );
 142:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** extern void vPortExitCritical( void );
 143:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()       ulPortRaiseBASEPRI()
 144:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)    vPortSetBASEPRI(x)
 145:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()                __asm volatile   ( " cpsid i " )
 146:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()                 __asm volatile   ( " cpsie i " )
 147:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portENTER_CRITICAL()                    vPortEnterCritical()
 148:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portEXIT_CRITICAL()                     vPortExitCritical()
 149:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 150:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 151:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 152:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site. */
 153:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 154:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 155:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 156:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 157:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 158:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifdef configASSERT
 159:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     void vPortValidateInterruptPriority( void );
 160:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portASSERT_IF_INTERRUPT_PRIORITY_INVALID()     vPortValidateInterruptPriority()
 161:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 162:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 163:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 164:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portNOP()
 165:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 166:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #define portINLINE    __inline
 167:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 168:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 169:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     #define portFORCE_INLINE inline __attribute__(( always_inline))
 170:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** #endif
 171:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 172:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 173:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 174:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 105


 175:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 176:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 177:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** BaseType_t xReturn;
 178:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 179:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* Obtain the number of the currently executing interrupt. */
 180:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) );
 181:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 182:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     if( ulCurrentInterrupt == 0 )
 183:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 184:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdFALSE;
 185:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 186:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     else
 187:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     {
 188:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         xReturn = pdTRUE;
 189:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     }
 190:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 191:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return xReturn;
 192:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 193:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 194:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 195:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 196:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 197:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 198:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 199:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 200:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 201:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %0, %1                                                 \n" \
 202:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %0                                            \n" \
 203:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 204:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 205:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY )
 206:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 207:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 208:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 209:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 210:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 211:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 212:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 213:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 214:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 885              		.loc 2 215 0
 886              		.syntax unified
 887              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 888 0008 EFF31183 		    mrs r3, basepri                                            
 889 000c 4FF0BF02 	    mov r2, #191                                                 
 890 0010 82F31188 	    msr basepri, r2                                            
 891 0014 BFF36F8F 	    isb                                                        
 892 0018 BFF34F8F 	    dsb                                                        
 893              	
 894              	@ 0 "" 2
 895              		.thumb
 896              		.syntax unified
 897              	.LBE20:
 898              	.LBE19:
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 899              		.loc 1 1389 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 106


 900 001c 14B9     		cbnz	r4, .L78
1389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 901              		.loc 1 1389 0 is_stmt 0 discriminator 1
 902 001e 034A     		ldr	r2, .L80
 903 0020 D2F80041 		ldr	r4, [r2, #256]
 904              	.LVL91:
 905              	.L78:
1390:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 906              		.loc 1 1390 0 is_stmt 1 discriminator 4
 907 0024 E06A     		ldr	r0, [r4, #44]
 908              	.LVL92:
 909              	.LBB21:
 910              	.LBB22:
 216:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 217:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mrs %0, basepri                                            \n" \
 218:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    mov %1, %2                                                 \n" \
 219:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    msr basepri, %1                                            \n" \
 220:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    isb                                                        \n" \
 221:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         "    dsb                                                        \n" \
 222:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****         :"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY
 223:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     );
 224:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 225:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     /* This return will not be reached but is necessary to prevent compiler
 226:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     warnings. */
 227:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     return ulOriginalBASEPRI;
 228:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** }
 229:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 230:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** 
 231:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 232:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h **** {
 233:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     __asm volatile
 911              		.loc 2 233 0 discriminator 4
 912              		.syntax unified
 913              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 914 0026 83F31188 		    msr basepri, r3  
 915              	@ 0 "" 2
 916              	.LVL93:
 917              		.thumb
 918              		.syntax unified
 919              	.LBE22:
 920              	.LBE21:
1395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 921              		.loc 1 1395 0 discriminator 4
 922 002a 10BD     		pop	{r4, pc}
 923              	.LVL94:
 924              	.L81:
 925              		.align	2
 926              	.L80:
 927 002c 00000000 		.word	.LANCHOR0
 928              		.cfi_endproc
 929              	.LFE136:
 930              		.size	uxTaskPriorityGetFromISR, .-uxTaskPriorityGetFromISR
 931              		.section	.text.vTaskPrioritySet,"ax",%progbits
 932              		.align	2
 933              		.global	vTaskPrioritySet
 934              		.thumb
 935              		.thumb_func
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 107


 936              		.type	vTaskPrioritySet, %function
 937              	vTaskPrioritySet:
 938              	.LFB137:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 939              		.loc 1 1403 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL95:
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 944              		.loc 1 1408 0
 945 0000 0629     		cmp	r1, #6
 946 0002 01D9     		bls	.L83
1408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 947              		.loc 1 1408 0 is_stmt 0 discriminator 1
 948              		.syntax unified
 949              	@ 1408 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 950 0004 72B6     		 cpsid i 
 951              	@ 0 "" 2
 952              		.thumb
 953              		.syntax unified
 954              	.L84:
 955 0006 FEE7     		b	.L84
 956              	.L83:
1403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 957              		.loc 1 1403 0 is_stmt 1
 958 0008 70B5     		push	{r4, r5, r6, lr}
 959              		.cfi_def_cfa_offset 16
 960              		.cfi_offset 4, -16
 961              		.cfi_offset 5, -12
 962              		.cfi_offset 6, -8
 963              		.cfi_offset 14, -4
 964 000a 0446     		mov	r4, r0
 965 000c 0D46     		mov	r5, r1
1411:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 966              		.loc 1 1411 0
 967 000e 0629     		cmp	r1, #6
 968 0010 00D9     		bls	.L85
1413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 969              		.loc 1 1413 0
 970 0012 0625     		movs	r5, #6
 971              	.L85:
 972              	.LVL96:
1420:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 973              		.loc 1 1420 0
 974 0014 FFF7FEFF 		bl	vPortEnterCritical
 975              	.LVL97:
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 976              		.loc 1 1424 0
 977 0018 14B9     		cbnz	r4, .L86
1424:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 978              		.loc 1 1424 0 is_stmt 0 discriminator 1
 979 001a 2A4B     		ldr	r3, .L100
 980 001c D3F80041 		ldr	r4, [r3, #256]
 981              	.LVL98:
 982              	.L86:
1434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 108


 983              		.loc 1 1434 0 is_stmt 1 discriminator 4
 984 0020 E36A     		ldr	r3, [r4, #44]
 985              	.LVL99:
1438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 986              		.loc 1 1438 0 discriminator 4
 987 0022 9D42     		cmp	r5, r3
 988 0024 4AD0     		beq	.L87
1442:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 989              		.loc 1 1442 0
 990 0026 0CD9     		bls	.L88
1444:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 991              		.loc 1 1444 0
 992 0028 264A     		ldr	r2, .L100
 993 002a D2F80021 		ldr	r2, [r2, #256]
 994 002e 9442     		cmp	r4, r2
 995 0030 0ED0     		beq	.L95
1449:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 996              		.loc 1 1449 0
 997 0032 244A     		ldr	r2, .L100
 998 0034 D2F80021 		ldr	r2, [r2, #256]
 999 0038 D26A     		ldr	r2, [r2, #44]
 1000 003a 9542     		cmp	r5, r2
 1001 003c 0AD2     		bcs	.L96
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1002              		.loc 1 1406 0
 1003 003e 0026     		movs	r6, #0
 1004 0040 0BE0     		b	.L89
 1005              	.L88:
1465:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1006              		.loc 1 1465 0
 1007 0042 204A     		ldr	r2, .L100
 1008 0044 D2F80021 		ldr	r2, [r2, #256]
 1009 0048 9442     		cmp	r4, r2
 1010 004a 05D0     		beq	.L97
1406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1011              		.loc 1 1406 0
 1012 004c 0026     		movs	r6, #0
 1013 004e 04E0     		b	.L89
 1014              	.L95:
 1015 0050 0026     		movs	r6, #0
 1016 0052 02E0     		b	.L89
 1017              	.L96:
1451:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1018              		.loc 1 1451 0
 1019 0054 0126     		movs	r6, #1
 1020 0056 00E0     		b	.L89
 1021              	.L97:
1470:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1022              		.loc 1 1470 0
 1023 0058 0126     		movs	r6, #1
 1024              	.L89:
 1025              	.LVL100:
1502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1026              		.loc 1 1502 0
 1027 005a E562     		str	r5, [r4, #44]
1508:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1028              		.loc 1 1508 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 109


 1029 005c A269     		ldr	r2, [r4, #24]
 1030 005e 002A     		cmp	r2, #0
 1031 0060 02DB     		blt	.L90
1510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1032              		.loc 1 1510 0
 1033 0062 C5F10705 		rsb	r5, r5, #7
 1034              	.LVL101:
 1035 0066 A561     		str	r5, [r4, #24]
 1036              	.L90:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1037              		.loc 1 1521 0
 1038 0068 6169     		ldr	r1, [r4, #20]
 1039 006a 03EB8303 		add	r3, r3, r3, lsl #2
 1040              	.LVL102:
 1041 006e 9A00     		lsls	r2, r3, #2
 1042 0070 154B     		ldr	r3, .L100+4
 1043 0072 1A44     		add	r2, r2, r3
 1044 0074 9142     		cmp	r1, r2
 1045 0076 01D1     		bne	.L98
 1046 0078 0123     		movs	r3, #1
 1047 007a 00E0     		b	.L91
 1048              	.L98:
 1049 007c 0023     		movs	r3, #0
 1050              	.L91:
1521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1051              		.loc 1 1521 0 is_stmt 0 discriminator 4
 1052 007e A3B1     		cbz	r3, .L92
1526:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1053              		.loc 1 1526 0 is_stmt 1
 1054 0080 251D     		adds	r5, r4, #4
 1055 0082 2846     		mov	r0, r5
 1056 0084 FFF7FEFF 		bl	uxListRemove
 1057              	.LVL103:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1058              		.loc 1 1537 0
 1059 0088 E36A     		ldr	r3, [r4, #44]
 1060 008a 0E4A     		ldr	r2, .L100
 1061 008c D2F80C21 		ldr	r2, [r2, #268]
 1062 0090 9342     		cmp	r3, r2
 1063 0092 02D9     		bls	.L93
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1064              		.loc 1 1537 0 is_stmt 0 discriminator 1
 1065 0094 0B4A     		ldr	r2, .L100
 1066 0096 C2F80C31 		str	r3, [r2, #268]
 1067              	.L93:
1537:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1068              		.loc 1 1537 0 discriminator 3
 1069 009a 03EB8303 		add	r3, r3, r3, lsl #2
 1070 009e 9A00     		lsls	r2, r3, #2
 1071 00a0 2946     		mov	r1, r5
 1072 00a2 0948     		ldr	r0, .L100+4
 1073 00a4 1044     		add	r0, r0, r2
 1074 00a6 FFF7FEFF 		bl	vListInsertEnd
 1075              	.LVL104:
 1076              	.L92:
1544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1077              		.loc 1 1544 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 110


 1078 00aa 3EB1     		cbz	r6, .L87
1546:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1079              		.loc 1 1546 0
 1080 00ac 4FF08052 		mov	r2, #268435456
 1081 00b0 064B     		ldr	r3, .L100+8
 1082 00b2 1A60     		str	r2, [r3]
 1083              		.syntax unified
 1084              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1085 00b4 BFF34F8F 		dsb
 1086              	@ 0 "" 2
 1087              	@ 1546 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1088 00b8 BFF36F8F 		isb
 1089              	@ 0 "" 2
 1090              	.LVL105:
 1091              		.thumb
 1092              		.syntax unified
 1093              	.L87:
1558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1094              		.loc 1 1558 0
 1095 00bc FFF7FEFF 		bl	vPortExitCritical
 1096              	.LVL106:
 1097 00c0 70BD     		pop	{r4, r5, r6, pc}
 1098              	.LVL107:
 1099              	.L101:
 1100 00c2 00BF     		.align	2
 1101              	.L100:
 1102 00c4 00000000 		.word	.LANCHOR0
 1103 00c8 30000000 		.word	.LANCHOR0+48
 1104 00cc 04ED00E0 		.word	-536810236
 1105              		.cfi_endproc
 1106              	.LFE137:
 1107              		.size	vTaskPrioritySet, .-vTaskPrioritySet
 1108              		.section	.text.vTaskResume,"ax",%progbits
 1109              		.align	2
 1110              		.global	vTaskResume
 1111              		.thumb
 1112              		.thumb_func
 1113              		.type	vTaskResume, %function
 1114              	vTaskResume:
 1115              	.LFB140:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1116              		.loc 1 1703 0
 1117              		.cfi_startproc
 1118              		@ args = 0, pretend = 0, frame = 0
 1119              		@ frame_needed = 0, uses_anonymous_args = 0
 1120              	.LVL108:
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1121              		.loc 1 1707 0
 1122 0000 08B9     		cbnz	r0, .L103
1707:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1123              		.loc 1 1707 0 is_stmt 0 discriminator 1
 1124              		.syntax unified
 1125              	@ 1707 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1126 0002 72B6     		 cpsid i 
 1127              	@ 0 "" 2
 1128              		.thumb
 1129              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 111


 1130              	.L104:
 1131 0004 FEE7     		b	.L104
 1132              	.L103:
1703:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1133              		.loc 1 1703 0 is_stmt 1
 1134 0006 70B5     		push	{r4, r5, r6, lr}
 1135              		.cfi_def_cfa_offset 16
 1136              		.cfi_offset 4, -16
 1137              		.cfi_offset 5, -12
 1138              		.cfi_offset 6, -8
 1139              		.cfi_offset 14, -4
 1140 0008 0446     		mov	r4, r0
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1141              		.loc 1 1711 0
 1142 000a 88B3     		cbz	r0, .L102
1711:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1143              		.loc 1 1711 0 is_stmt 0 discriminator 1
 1144 000c 194B     		ldr	r3, .L109
 1145 000e D3F80031 		ldr	r3, [r3, #256]
 1146 0012 9842     		cmp	r0, r3
 1147 0014 2CD0     		beq	.L102
1713:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1148              		.loc 1 1713 0 is_stmt 1
 1149 0016 FFF7FEFF 		bl	vPortEnterCritical
 1150              	.LVL109:
1715:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1151              		.loc 1 1715 0
 1152 001a 2046     		mov	r0, r4
 1153 001c FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1154              	.LVL110:
 1155 0020 20B3     		cbz	r0, .L106
1721:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1156              		.loc 1 1721 0
 1157 0022 261D     		adds	r6, r4, #4
 1158 0024 3046     		mov	r0, r6
 1159 0026 FFF7FEFF 		bl	uxListRemove
 1160              	.LVL111:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1161              		.loc 1 1722 0
 1162 002a E36A     		ldr	r3, [r4, #44]
 1163 002c 114A     		ldr	r2, .L109
 1164 002e D2F80C21 		ldr	r2, [r2, #268]
 1165 0032 9342     		cmp	r3, r2
 1166 0034 02D9     		bls	.L107
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1167              		.loc 1 1722 0 is_stmt 0 discriminator 1
 1168 0036 0F4A     		ldr	r2, .L109
 1169 0038 C2F80C31 		str	r3, [r2, #268]
 1170              	.L107:
1722:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1171              		.loc 1 1722 0 discriminator 3
 1172 003c 0D4D     		ldr	r5, .L109
 1173 003e 05F13000 		add	r0, r5, #48
 1174 0042 03EB8303 		add	r3, r3, r3, lsl #2
 1175 0046 9A00     		lsls	r2, r3, #2
 1176 0048 3146     		mov	r1, r6
 1177 004a 1044     		add	r0, r0, r2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 112


 1178 004c FFF7FEFF 		bl	vListInsertEnd
 1179              	.LVL112:
1725:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1180              		.loc 1 1725 0 is_stmt 1 discriminator 3
 1181 0050 E26A     		ldr	r2, [r4, #44]
 1182 0052 D5F80031 		ldr	r3, [r5, #256]
 1183 0056 DB6A     		ldr	r3, [r3, #44]
 1184 0058 9A42     		cmp	r2, r3
 1185 005a 07D3     		bcc	.L106
1730:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1186              		.loc 1 1730 0
 1187 005c 4FF08052 		mov	r2, #268435456
 1188 0060 054B     		ldr	r3, .L109+4
 1189 0062 1A60     		str	r2, [r3]
 1190              		.syntax unified
 1191              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1192 0064 BFF34F8F 		dsb
 1193              	@ 0 "" 2
 1194              	@ 1730 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1195 0068 BFF36F8F 		isb
 1196              	@ 0 "" 2
 1197              		.thumb
 1198              		.syntax unified
 1199              	.L106:
1742:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1200              		.loc 1 1742 0
 1201 006c FFF7FEFF 		bl	vPortExitCritical
 1202              	.LVL113:
 1203              	.L102:
 1204 0070 70BD     		pop	{r4, r5, r6, pc}
 1205              	.LVL114:
 1206              	.L110:
 1207 0072 00BF     		.align	2
 1208              	.L109:
 1209 0074 00000000 		.word	.LANCHOR0
 1210 0078 04ED00E0 		.word	-536810236
 1211              		.cfi_endproc
 1212              	.LFE140:
 1213              		.size	vTaskResume, .-vTaskResume
 1214              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 1215              		.align	2
 1216              		.global	xTaskResumeFromISR
 1217              		.thumb
 1218              		.thumb_func
 1219              		.type	xTaskResumeFromISR, %function
 1220              	xTaskResumeFromISR:
 1221              	.LFB141:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1222              		.loc 1 1757 0
 1223              		.cfi_startproc
 1224              		@ args = 0, pretend = 0, frame = 0
 1225              		@ frame_needed = 0, uses_anonymous_args = 0
 1226              	.LVL115:
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1227              		.loc 1 1762 0
 1228 0000 08B9     		cbnz	r0, .L112
1762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 113


 1229              		.loc 1 1762 0 is_stmt 0 discriminator 1
 1230              		.syntax unified
 1231              	@ 1762 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1232 0002 72B6     		 cpsid i 
 1233              	@ 0 "" 2
 1234              		.thumb
 1235              		.syntax unified
 1236              	.L113:
 1237 0004 FEE7     		b	.L113
 1238              	.L112:
1757:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1239              		.loc 1 1757 0 is_stmt 1
 1240 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1241              		.cfi_def_cfa_offset 24
 1242              		.cfi_offset 3, -24
 1243              		.cfi_offset 4, -20
 1244              		.cfi_offset 5, -16
 1245              		.cfi_offset 6, -12
 1246              		.cfi_offset 7, -8
 1247              		.cfi_offset 14, -4
 1248 0008 0446     		mov	r4, r0
1780:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1249              		.loc 1 1780 0
 1250 000a FFF7FEFF 		bl	vPortValidateInterruptPriority
 1251              	.LVL116:
 1252              	.LBB23:
 1253              	.LBB24:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 1254              		.loc 2 215 0
 1255              		.syntax unified
 1256              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1257 000e EFF31187 		    mrs r7, basepri                                            
 1258 0012 4FF0BF03 	    mov r3, #191                                                 
 1259 0016 83F31188 	    msr basepri, r3                                            
 1260 001a BFF36F8F 	    isb                                                        
 1261 001e BFF34F8F 	    dsb                                                        
 1262              	
 1263              	@ 0 "" 2
 1264              		.thumb
 1265              		.syntax unified
 1266              	.LBE24:
 1267              	.LBE23:
1784:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1268              		.loc 1 1784 0
 1269 0022 2046     		mov	r0, r4
 1270 0024 FFF7FEFF 		bl	prvTaskIsTaskSuspended
 1271              	.LVL117:
 1272 0028 50B3     		cbz	r0, .L118
1789:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1273              		.loc 1 1789 0
 1274 002a 184B     		ldr	r3, .L121
 1275 002c D3F81831 		ldr	r3, [r3, #280]
 1276 0030 FBB9     		cbnz	r3, .L115
1793:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1277              		.loc 1 1793 0
 1278 0032 E26A     		ldr	r2, [r4, #44]
 1279 0034 154B     		ldr	r3, .L121
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 114


 1280 0036 D3F80031 		ldr	r3, [r3, #256]
 1281 003a DB6A     		ldr	r3, [r3, #44]
 1282 003c 9A42     		cmp	r2, r3
 1283 003e 01D2     		bcs	.L119
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1284              		.loc 1 1758 0
 1285 0040 0025     		movs	r5, #0
 1286 0042 00E0     		b	.L116
 1287              	.L119:
1795:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1288              		.loc 1 1795 0
 1289 0044 0125     		movs	r5, #1
 1290              	.L116:
 1291              	.LVL118:
1802:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1292              		.loc 1 1802 0
 1293 0046 261D     		adds	r6, r4, #4
 1294 0048 3046     		mov	r0, r6
 1295 004a FFF7FEFF 		bl	uxListRemove
 1296              	.LVL119:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1297              		.loc 1 1803 0
 1298 004e E36A     		ldr	r3, [r4, #44]
 1299 0050 0E4A     		ldr	r2, .L121
 1300 0052 D2F80C21 		ldr	r2, [r2, #268]
 1301 0056 9342     		cmp	r3, r2
 1302 0058 02D9     		bls	.L117
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1303              		.loc 1 1803 0 is_stmt 0 discriminator 1
 1304 005a 0C4A     		ldr	r2, .L121
 1305 005c C2F80C31 		str	r3, [r2, #268]
 1306              	.L117:
1803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1307              		.loc 1 1803 0 discriminator 3
 1308 0060 03EB8303 		add	r3, r3, r3, lsl #2
 1309 0064 9A00     		lsls	r2, r3, #2
 1310 0066 3146     		mov	r1, r6
 1311 0068 0948     		ldr	r0, .L121+4
 1312 006a 1044     		add	r0, r0, r2
 1313 006c FFF7FEFF 		bl	vListInsertEnd
 1314              	.LVL120:
 1315 0070 07E0     		b	.L114
 1316              	.LVL121:
 1317              	.L115:
1810:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1318              		.loc 1 1810 0 is_stmt 1
 1319 0072 04F11801 		add	r1, r4, #24
 1320 0076 0748     		ldr	r0, .L121+8
 1321 0078 FFF7FEFF 		bl	vListInsertEnd
 1322              	.LVL122:
1758:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * const pxTCB = ( TCB_t * ) xTaskToResume;
 1323              		.loc 1 1758 0
 1324 007c 0025     		movs	r5, #0
 1325 007e 00E0     		b	.L114
 1326              	.L118:
 1327 0080 0025     		movs	r5, #0
 1328              	.LVL123:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 115


 1329              	.L114:
 1330              	.LBB25:
 1331              	.LBB26:
 1332              		.loc 2 233 0
 1333              		.syntax unified
 1334              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 1335 0082 87F31188 		    msr basepri, r7  
 1336              	@ 0 "" 2
 1337              	.LVL124:
 1338              		.thumb
 1339              		.syntax unified
 1340              	.LBE26:
 1341              	.LBE25:
1821:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1342              		.loc 1 1821 0
 1343 0086 2846     		mov	r0, r5
 1344 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1345              	.LVL125:
 1346              	.L122:
 1347 008a 00BF     		.align	2
 1348              	.L121:
 1349 008c 00000000 		.word	.LANCHOR0
 1350 0090 30000000 		.word	.LANCHOR0+48
 1351 0094 14000000 		.word	.LANCHOR0+20
 1352              		.cfi_endproc
 1353              	.LFE141:
 1354              		.size	xTaskResumeFromISR, .-xTaskResumeFromISR
 1355              		.section	.text.vTaskStartScheduler,"ax",%progbits
 1356              		.align	2
 1357              		.global	vTaskStartScheduler
 1358              		.thumb
 1359              		.thumb_func
 1360              		.type	vTaskStartScheduler, %function
 1361              	vTaskStartScheduler:
 1362              	.LFB142:
1827:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 1363              		.loc 1 1827 0
 1364              		.cfi_startproc
 1365              		@ args = 0, pretend = 0, frame = 0
 1366              		@ frame_needed = 0, uses_anonymous_args = 0
 1367 0000 00B5     		push	{lr}
 1368              		.cfi_def_cfa_offset 4
 1369              		.cfi_offset 14, -4
 1370 0002 83B0     		sub	sp, sp, #12
 1371              		.cfi_def_cfa_offset 16
1860:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 								"IDLE", configMINIMAL_STACK_SIZE,
 1372              		.loc 1 1860 0
 1373 0004 124B     		ldr	r3, .L129
 1374 0006 0193     		str	r3, [sp, #4]
 1375 0008 0023     		movs	r3, #0
 1376 000a 0093     		str	r3, [sp]
 1377 000c 8022     		movs	r2, #128
 1378 000e 1149     		ldr	r1, .L129+4
 1379 0010 1148     		ldr	r0, .L129+8
 1380 0012 FFF7FEFF 		bl	xTaskCreate
 1381              	.LVL126:
1870:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 116


 1382              		.loc 1 1870 0
 1383 0016 0128     		cmp	r0, #1
 1384 0018 01D1     		bne	.L124
1872:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1385              		.loc 1 1872 0
 1386 001a FFF7FEFF 		bl	xTimerCreateTimerTask
 1387              	.LVL127:
 1388              	.L124:
1881:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1389              		.loc 1 1881 0
 1390 001e 0128     		cmp	r0, #1
 1391 0020 0DD1     		bne	.L125
1888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1392              		.loc 1 1888 0
 1393              		.syntax unified
 1394              	@ 1888 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1395 0022 72B6     		 cpsid i 
 1396              	@ 0 "" 2
1898:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 1397              		.loc 1 1898 0
 1398              		.thumb
 1399              		.syntax unified
 1400 0024 0D4B     		ldr	r3, .L129+12
 1401 0026 4FF0FF32 		mov	r2, #-1
 1402 002a DA62     		str	r2, [r3, #44]
1899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		xTickCount = ( TickType_t ) 0U;
 1403              		.loc 1 1899 0
 1404 002c 0122     		movs	r2, #1
 1405 002e C3F80421 		str	r2, [r3, #260]
1900:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1406              		.loc 1 1900 0
 1407 0032 0022     		movs	r2, #0
 1408 0034 C3F81021 		str	r2, [r3, #272]
1909:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1409              		.loc 1 1909 0
 1410 0038 FFF7FEFF 		bl	xPortStartScheduler
 1411              	.LVL128:
 1412 003c 04E0     		b	.L123
 1413              	.LVL129:
 1414              	.L125:
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1415              		.loc 1 1924 0
 1416 003e B0F1FF3F 		cmp	r0, #-1
 1417 0042 01D1     		bne	.L123
1924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1418              		.loc 1 1924 0 is_stmt 0 discriminator 1
 1419              		.syntax unified
 1420              	@ 1924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1421 0044 72B6     		 cpsid i 
 1422              	@ 0 "" 2
 1423              		.thumb
 1424              		.syntax unified
 1425              	.L127:
 1426 0046 FEE7     		b	.L127
 1427              	.LVL130:
 1428              	.L123:
1930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 117


 1429              		.loc 1 1930 0 is_stmt 1
 1430 0048 03B0     		add	sp, sp, #12
 1431              		.cfi_def_cfa_offset 4
 1432              		@ sp needed
 1433 004a 5DF804FB 		ldr	pc, [sp], #4
 1434              	.L130:
 1435 004e 00BF     		.align	2
 1436              	.L129:
 1437 0050 1C010000 		.word	.LANCHOR0+284
 1438 0054 00000000 		.word	.LC0
 1439 0058 00000000 		.word	prvIdleTask
 1440 005c 00000000 		.word	.LANCHOR0
 1441              		.cfi_endproc
 1442              	.LFE142:
 1443              		.size	vTaskStartScheduler, .-vTaskStartScheduler
 1444              		.section	.text.vTaskEndScheduler,"ax",%progbits
 1445              		.align	2
 1446              		.global	vTaskEndScheduler
 1447              		.thumb
 1448              		.thumb_func
 1449              		.type	vTaskEndScheduler, %function
 1450              	vTaskEndScheduler:
 1451              	.LFB143:
1934:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
 1452              		.loc 1 1934 0
 1453              		.cfi_startproc
 1454              		@ args = 0, pretend = 0, frame = 0
 1455              		@ frame_needed = 0, uses_anonymous_args = 0
 1456 0000 08B5     		push	{r3, lr}
 1457              		.cfi_def_cfa_offset 8
 1458              		.cfi_offset 3, -8
 1459              		.cfi_offset 14, -4
1938:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 1460              		.loc 1 1938 0
 1461              		.syntax unified
 1462              	@ 1938 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1463 0002 72B6     		 cpsid i 
 1464              	@ 0 "" 2
1939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	vPortEndScheduler();
 1465              		.loc 1 1939 0
 1466              		.thumb
 1467              		.syntax unified
 1468 0004 0022     		movs	r2, #0
 1469 0006 034B     		ldr	r3, .L133
 1470 0008 C3F80421 		str	r2, [r3, #260]
1940:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1471              		.loc 1 1940 0
 1472 000c FFF7FEFF 		bl	vPortEndScheduler
 1473              	.LVL131:
 1474 0010 08BD     		pop	{r3, pc}
 1475              	.L134:
 1476 0012 00BF     		.align	2
 1477              	.L133:
 1478 0014 00000000 		.word	.LANCHOR0
 1479              		.cfi_endproc
 1480              	.LFE143:
 1481              		.size	vTaskEndScheduler, .-vTaskEndScheduler
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 118


 1482              		.section	.text.vTaskSuspendAll,"ax",%progbits
 1483              		.align	2
 1484              		.global	vTaskSuspendAll
 1485              		.thumb
 1486              		.thumb_func
 1487              		.type	vTaskSuspendAll, %function
 1488              	vTaskSuspendAll:
 1489              	.LFB144:
1945:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required as the variable is of type
 1490              		.loc 1 1945 0
 1491              		.cfi_startproc
 1492              		@ args = 0, pretend = 0, frame = 0
 1493              		@ frame_needed = 0, uses_anonymous_args = 0
 1494              		@ link register save eliminated.
1950:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1495              		.loc 1 1950 0
 1496 0000 034A     		ldr	r2, .L136
 1497 0002 D2F81831 		ldr	r3, [r2, #280]
 1498 0006 0133     		adds	r3, r3, #1
 1499 0008 C2F81831 		str	r3, [r2, #280]
 1500 000c 7047     		bx	lr
 1501              	.L137:
 1502 000e 00BF     		.align	2
 1503              	.L136:
 1504 0010 00000000 		.word	.LANCHOR0
 1505              		.cfi_endproc
 1506              	.LFE144:
 1507              		.size	vTaskSuspendAll, .-vTaskSuspendAll
 1508              		.section	.text.xTaskGetTickCount,"ax",%progbits
 1509              		.align	2
 1510              		.global	xTaskGetTickCount
 1511              		.thumb
 1512              		.thumb_func
 1513              		.type	xTaskGetTickCount, %function
 1514              	xTaskGetTickCount:
 1515              	.LFB146:
2128:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xTicks;
 1516              		.loc 1 2128 0
 1517              		.cfi_startproc
 1518              		@ args = 0, pretend = 0, frame = 0
 1519              		@ frame_needed = 0, uses_anonymous_args = 0
 1520              		@ link register save eliminated.
2134:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1521              		.loc 1 2134 0
 1522 0000 014B     		ldr	r3, .L139
 1523 0002 D3F81001 		ldr	r0, [r3, #272]
 1524              	.LVL132:
2139:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1525              		.loc 1 2139 0
 1526 0006 7047     		bx	lr
 1527              	.L140:
 1528              		.align	2
 1529              	.L139:
 1530 0008 00000000 		.word	.LANCHOR0
 1531              		.cfi_endproc
 1532              	.LFE146:
 1533              		.size	xTaskGetTickCount, .-xTaskGetTickCount
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 119


 1534              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 1535              		.align	2
 1536              		.global	xTaskGetTickCountFromISR
 1537              		.thumb
 1538              		.thumb_func
 1539              		.type	xTaskGetTickCountFromISR, %function
 1540              	xTaskGetTickCountFromISR:
 1541              	.LFB147:
2143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t xReturn;
 1542              		.loc 1 2143 0
 1543              		.cfi_startproc
 1544              		@ args = 0, pretend = 0, frame = 0
 1545              		@ frame_needed = 0, uses_anonymous_args = 0
 1546 0000 08B5     		push	{r3, lr}
 1547              		.cfi_def_cfa_offset 8
 1548              		.cfi_offset 3, -8
 1549              		.cfi_offset 14, -4
2161:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1550              		.loc 1 2161 0
 1551 0002 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1552              	.LVL133:
2165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 1553              		.loc 1 2165 0
 1554 0006 024B     		ldr	r3, .L143
 1555 0008 D3F81001 		ldr	r0, [r3, #272]
 1556              	.LVL134:
2170:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1557              		.loc 1 2170 0
 1558 000c 08BD     		pop	{r3, pc}
 1559              	.L144:
 1560 000e 00BF     		.align	2
 1561              	.L143:
 1562 0010 00000000 		.word	.LANCHOR0
 1563              		.cfi_endproc
 1564              	.LFE147:
 1565              		.size	xTaskGetTickCountFromISR, .-xTaskGetTickCountFromISR
 1566              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 1567              		.align	2
 1568              		.global	uxTaskGetNumberOfTasks
 1569              		.thumb
 1570              		.thumb_func
 1571              		.type	uxTaskGetNumberOfTasks, %function
 1572              	uxTaskGetNumberOfTasks:
 1573              	.LFB148:
2174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* A critical section is not required because the variables are of type
 1574              		.loc 1 2174 0
 1575              		.cfi_startproc
 1576              		@ args = 0, pretend = 0, frame = 0
 1577              		@ frame_needed = 0, uses_anonymous_args = 0
 1578              		@ link register save eliminated.
2177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 1579              		.loc 1 2177 0
 1580 0000 014B     		ldr	r3, .L146
 1581 0002 D3F8FC00 		ldr	r0, [r3, #252]
2178:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1582              		.loc 1 2178 0
 1583 0006 7047     		bx	lr
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 120


 1584              	.L147:
 1585              		.align	2
 1586              	.L146:
 1587 0008 00000000 		.word	.LANCHOR0
 1588              		.cfi_endproc
 1589              	.LFE148:
 1590              		.size	uxTaskGetNumberOfTasks, .-uxTaskGetNumberOfTasks
 1591              		.section	.text.pcTaskGetName,"ax",%progbits
 1592              		.align	2
 1593              		.global	pcTaskGetName
 1594              		.thumb
 1595              		.thumb_func
 1596              		.type	pcTaskGetName, %function
 1597              	pcTaskGetName:
 1598              	.LFB149:
2182:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB;
 1599              		.loc 1 2182 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 0, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604              	.LVL135:
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1605              		.loc 1 2187 0
 1606 0000 0346     		mov	r3, r0
 1607 0002 10B9     		cbnz	r0, .L149
2187:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTCB );
 1608              		.loc 1 2187 0 is_stmt 0 discriminator 1
 1609 0004 044B     		ldr	r3, .L152
 1610 0006 D3F80031 		ldr	r3, [r3, #256]
 1611              	.LVL136:
 1612              	.L149:
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1613              		.loc 1 2188 0 is_stmt 1 discriminator 4
 1614 000a 0BB9     		cbnz	r3, .L150
2188:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 1615              		.loc 1 2188 0 is_stmt 0 discriminator 1
 1616              		.syntax unified
 1617              	@ 2188 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1618 000c 72B6     		 cpsid i 
 1619              	@ 0 "" 2
 1620              		.thumb
 1621              		.syntax unified
 1622              	.L151:
 1623 000e FEE7     		b	.L151
 1624              	.L150:
2190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1625              		.loc 1 2190 0 is_stmt 1
 1626 0010 03F13400 		add	r0, r3, #52
 1627 0014 7047     		bx	lr
 1628              	.L153:
 1629 0016 00BF     		.align	2
 1630              	.L152:
 1631 0018 00000000 		.word	.LANCHOR0
 1632              		.cfi_endproc
 1633              	.LFE149:
 1634              		.size	pcTaskGetName, .-pcTaskGetName
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 121


 1635              		.section	.text.xTaskIncrementTick,"ax",%progbits
 1636              		.align	2
 1637              		.global	xTaskIncrementTick
 1638              		.thumb
 1639              		.thumb_func
 1640              		.type	xTaskIncrementTick, %function
 1641              	xTaskIncrementTick:
 1642              	.LFB150:
2500:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t * pxTCB;
 1643              		.loc 1 2500 0
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 0
 1646              		@ frame_needed = 0, uses_anonymous_args = 0
 1647 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1648              		.cfi_def_cfa_offset 24
 1649              		.cfi_offset 4, -24
 1650              		.cfi_offset 5, -20
 1651              		.cfi_offset 6, -16
 1652              		.cfi_offset 7, -12
 1653              		.cfi_offset 8, -8
 1654              		.cfi_offset 14, -4
 1655              	.LVL137:
2509:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1656              		.loc 1 2509 0
 1657 0004 394B     		ldr	r3, .L174
 1658 0006 D3F81831 		ldr	r3, [r3, #280]
 1659 000a 002B     		cmp	r3, #0
 1660 000c 5ED1     		bne	.L155
 1661              	.LBB27:
2513:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1662              		.loc 1 2513 0
 1663 000e 374B     		ldr	r3, .L174
 1664 0010 D3F81041 		ldr	r4, [r3, #272]
 1665 0014 0134     		adds	r4, r4, #1
 1666              	.LVL138:
2517:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1667              		.loc 1 2517 0
 1668 0016 C3F81041 		str	r4, [r3, #272]
2519:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1669              		.loc 1 2519 0
 1670 001a 94B9     		cbnz	r4, .L156
 1671              	.LBB28:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1672              		.loc 1 2521 0
 1673 001c 9B6A     		ldr	r3, [r3, #40]
 1674 001e 1B68     		ldr	r3, [r3]
 1675 0020 0BB1     		cbz	r3, .L157
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1676              		.loc 1 2521 0 is_stmt 0 discriminator 1
 1677              		.syntax unified
 1678              	@ 2521 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1679 0022 72B6     		 cpsid i 
 1680              	@ 0 "" 2
 1681              		.thumb
 1682              		.syntax unified
 1683              	.L158:
 1684 0024 FEE7     		b	.L158
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 122


 1685              	.L157:
2521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1686              		.loc 1 2521 0 discriminator 2
 1687 0026 314B     		ldr	r3, .L174
 1688 0028 9A6A     		ldr	r2, [r3, #40]
 1689              	.LVL139:
 1690 002a D3F8F810 		ldr	r1, [r3, #248]
 1691 002e 9962     		str	r1, [r3, #40]
 1692 0030 C3F8F820 		str	r2, [r3, #248]
 1693 0034 D3F82021 		ldr	r2, [r3, #288]
 1694              	.LVL140:
 1695 0038 0132     		adds	r2, r2, #1
 1696 003a C3F82021 		str	r2, [r3, #288]
 1697              	.LVL141:
 1698 003e FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1699              	.LVL142:
 1700              	.L156:
 1701              	.LBE28:
2532:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1702              		.loc 1 2532 0 is_stmt 1
 1703 0042 2A4B     		ldr	r3, .L174
 1704 0044 DB6A     		ldr	r3, [r3, #44]
 1705 0046 9C42     		cmp	r4, r3
 1706 0048 03D2     		bcs	.L169
 1707              	.LBE27:
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1708              		.loc 1 2503 0
 1709 004a 0026     		movs	r6, #0
 1710 004c 45E0     		b	.L160
 1711              	.LVL143:
 1712              	.L171:
 1713              	.LBB29:
2598:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						}
 1714              		.loc 1 2598 0
 1715 004e 0126     		movs	r6, #1
 1716              	.LVL144:
 1717 0050 00E0     		b	.L159
 1718              	.LVL145:
 1719              	.L169:
 1720 0052 0026     		movs	r6, #0
 1721              	.LVL146:
 1722              	.L159:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1723              		.loc 1 2536 0
 1724 0054 254B     		ldr	r3, .L174
 1725 0056 9B6A     		ldr	r3, [r3, #40]
 1726 0058 1B68     		ldr	r3, [r3]
 1727 005a 0BB9     		cbnz	r3, .L170
 1728 005c 0123     		movs	r3, #1
 1729 005e 00E0     		b	.L161
 1730              	.L170:
 1731 0060 0023     		movs	r3, #0
 1732              	.L161:
2536:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1733              		.loc 1 2536 0 is_stmt 0 discriminator 4
 1734 0062 23B1     		cbz	r3, .L162
2543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 123


 1735              		.loc 1 2543 0 is_stmt 1
 1736 0064 4FF0FF32 		mov	r2, #-1
 1737 0068 204B     		ldr	r3, .L174
 1738 006a DA62     		str	r2, [r3, #44]
2544:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1739              		.loc 1 2544 0
 1740 006c 35E0     		b	.L160
 1741              	.L162:
2552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 1742              		.loc 1 2552 0
 1743 006e 1F4B     		ldr	r3, .L174
 1744 0070 9B6A     		ldr	r3, [r3, #40]
 1745 0072 DB68     		ldr	r3, [r3, #12]
 1746 0074 DD68     		ldr	r5, [r3, #12]
 1747              	.LVL147:
2553:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1748              		.loc 1 2553 0
 1749 0076 6B68     		ldr	r3, [r5, #4]
 1750              	.LVL148:
2555:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1751              		.loc 1 2555 0
 1752 0078 9C42     		cmp	r4, r3
 1753 007a 02D2     		bcs	.L163
2562:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						break;
 1754              		.loc 1 2562 0
 1755 007c 1B4A     		ldr	r2, .L174
 1756 007e D362     		str	r3, [r2, #44]
2563:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1757              		.loc 1 2563 0
 1758 0080 2BE0     		b	.L160
 1759              	.L163:
2571:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1760              		.loc 1 2571 0
 1761 0082 05F10408 		add	r8, r5, #4
 1762 0086 4046     		mov	r0, r8
 1763 0088 FFF7FEFF 		bl	uxListRemove
 1764              	.LVL149:
2575:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1765              		.loc 1 2575 0
 1766 008c AB6A     		ldr	r3, [r5, #40]
 1767 008e 1BB1     		cbz	r3, .L164
2577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1768              		.loc 1 2577 0
 1769 0090 05F11800 		add	r0, r5, #24
 1770 0094 FFF7FEFF 		bl	uxListRemove
 1771              	.LVL150:
 1772              	.L164:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1773              		.loc 1 2586 0
 1774 0098 EB6A     		ldr	r3, [r5, #44]
 1775 009a 144A     		ldr	r2, .L174
 1776 009c D2F80C21 		ldr	r2, [r2, #268]
 1777 00a0 9342     		cmp	r3, r2
 1778 00a2 02D9     		bls	.L165
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1779              		.loc 1 2586 0 is_stmt 0 discriminator 1
 1780 00a4 114A     		ldr	r2, .L174
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 124


 1781 00a6 C2F80C31 		str	r3, [r2, #268]
 1782              	.L165:
2586:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1783              		.loc 1 2586 0 discriminator 3
 1784 00aa 104F     		ldr	r7, .L174
 1785 00ac 07F13000 		add	r0, r7, #48
 1786 00b0 03EB8303 		add	r3, r3, r3, lsl #2
 1787 00b4 9A00     		lsls	r2, r3, #2
 1788 00b6 4146     		mov	r1, r8
 1789 00b8 1044     		add	r0, r0, r2
 1790 00ba FFF7FEFF 		bl	vListInsertEnd
 1791              	.LVL151:
2596:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 						{
 1792              		.loc 1 2596 0 is_stmt 1 discriminator 3
 1793 00be EA6A     		ldr	r2, [r5, #44]
 1794 00c0 D7F80031 		ldr	r3, [r7, #256]
 1795 00c4 DB6A     		ldr	r3, [r3, #44]
 1796 00c6 9A42     		cmp	r2, r3
 1797 00c8 C1D2     		bcs	.L171
 1798 00ca C3E7     		b	.L159
 1799              	.LVL152:
 1800              	.L155:
 1801              	.LBE29:
2643:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1802              		.loc 1 2643 0
 1803 00cc 074A     		ldr	r2, .L174
 1804 00ce D2F82431 		ldr	r3, [r2, #292]
 1805 00d2 0133     		adds	r3, r3, #1
 1806 00d4 C2F82431 		str	r3, [r2, #292]
2503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1807              		.loc 1 2503 0
 1808 00d8 0026     		movs	r6, #0
 1809              	.LVL153:
 1810              	.L160:
2656:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1811              		.loc 1 2656 0
 1812 00da 044B     		ldr	r3, .L174
 1813 00dc D3F82831 		ldr	r3, [r3, #296]
 1814 00e0 03B1     		cbz	r3, .L168
2658:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 1815              		.loc 1 2658 0
 1816 00e2 0126     		movs	r6, #1
 1817              	.LVL154:
 1818              	.L168:
2668:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 1819              		.loc 1 2668 0
 1820 00e4 3046     		mov	r0, r6
 1821 00e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1822              	.LVL155:
 1823              	.L175:
 1824 00ea 00BF     		.align	2
 1825              	.L174:
 1826 00ec 00000000 		.word	.LANCHOR0
 1827              		.cfi_endproc
 1828              	.LFE150:
 1829              		.size	xTaskIncrementTick, .-xTaskIncrementTick
 1830              		.section	.text.xTaskResumeAll,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 125


 1831              		.align	2
 1832              		.global	xTaskResumeAll
 1833              		.thumb
 1834              		.thumb_func
 1835              		.type	xTaskResumeAll, %function
 1836              	xTaskResumeAll:
 1837              	.LFB145:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1838              		.loc 1 2018 0
 1839              		.cfi_startproc
 1840              		@ args = 0, pretend = 0, frame = 0
 1841              		@ frame_needed = 0, uses_anonymous_args = 0
 1842              	.LVL156:
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1843              		.loc 1 2024 0
 1844 0000 364B     		ldr	r3, .L192
 1845 0002 D3F81831 		ldr	r3, [r3, #280]
 1846 0006 0BB9     		cbnz	r3, .L177
2024:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1847              		.loc 1 2024 0 is_stmt 0 discriminator 1
 1848              		.syntax unified
 1849              	@ 2024 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1850 0008 72B6     		 cpsid i 
 1851              	@ 0 "" 2
 1852              		.thumb
 1853              		.syntax unified
 1854              	.L178:
 1855 000a FEE7     		b	.L178
 1856              	.L177:
2018:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxTCB = NULL;
 1857              		.loc 1 2018 0 is_stmt 1
 1858 000c 70B5     		push	{r4, r5, r6, lr}
 1859              		.cfi_def_cfa_offset 16
 1860              		.cfi_offset 4, -16
 1861              		.cfi_offset 5, -12
 1862              		.cfi_offset 6, -8
 1863              		.cfi_offset 14, -4
2031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 1864              		.loc 1 2031 0
 1865 000e FFF7FEFF 		bl	vPortEnterCritical
 1866              	.LVL157:
2033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1867              		.loc 1 2033 0
 1868 0012 324B     		ldr	r3, .L192
 1869 0014 D3F81821 		ldr	r2, [r3, #280]
 1870 0018 013A     		subs	r2, r2, #1
 1871 001a C3F81821 		str	r2, [r3, #280]
2035:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 1872              		.loc 1 2035 0
 1873 001e D3F81831 		ldr	r3, [r3, #280]
 1874 0022 002B     		cmp	r3, #0
 1875 0024 52D1     		bne	.L188
2037:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 1876              		.loc 1 2037 0
 1877 0026 2D4B     		ldr	r3, .L192
 1878 0028 D3F8FC30 		ldr	r3, [r3, #252]
 1879 002c 3BBB     		cbnz	r3, .L189
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 126


2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1880              		.loc 1 2020 0
 1881 002e 0024     		movs	r4, #0
 1882 0030 4FE0     		b	.L179
 1883              	.LVL158:
 1884              	.L183:
2043:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1885              		.loc 1 2043 0
 1886 0032 2A4D     		ldr	r5, .L192
 1887 0034 2B6A     		ldr	r3, [r5, #32]
 1888 0036 DC68     		ldr	r4, [r3, #12]
 1889              	.LVL159:
2044:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 1890              		.loc 1 2044 0
 1891 0038 04F11800 		add	r0, r4, #24
 1892 003c FFF7FEFF 		bl	uxListRemove
 1893              	.LVL160:
2045:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1894              		.loc 1 2045 0
 1895 0040 261D     		adds	r6, r4, #4
 1896 0042 3046     		mov	r0, r6
 1897 0044 FFF7FEFF 		bl	uxListRemove
 1898              	.LVL161:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1899              		.loc 1 2046 0
 1900 0048 E36A     		ldr	r3, [r4, #44]
 1901 004a D5F80C21 		ldr	r2, [r5, #268]
 1902 004e 9342     		cmp	r3, r2
 1903 0050 01D9     		bls	.L181
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1904              		.loc 1 2046 0 is_stmt 0 discriminator 1
 1905 0052 C5F80C31 		str	r3, [r5, #268]
 1906              	.L181:
2046:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1907              		.loc 1 2046 0 discriminator 3
 1908 0056 214D     		ldr	r5, .L192
 1909 0058 05F13000 		add	r0, r5, #48
 1910 005c 03EB8303 		add	r3, r3, r3, lsl #2
 1911 0060 9A00     		lsls	r2, r3, #2
 1912 0062 3146     		mov	r1, r6
 1913 0064 1044     		add	r0, r0, r2
 1914 0066 FFF7FEFF 		bl	vListInsertEnd
 1915              	.LVL162:
2050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1916              		.loc 1 2050 0 is_stmt 1 discriminator 3
 1917 006a E26A     		ldr	r2, [r4, #44]
 1918 006c D5F80031 		ldr	r3, [r5, #256]
 1919 0070 DB6A     		ldr	r3, [r3, #44]
 1920 0072 9A42     		cmp	r2, r3
 1921 0074 04D3     		bcc	.L180
2052:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1922              		.loc 1 2052 0
 1923 0076 0122     		movs	r2, #1
 1924 0078 C5F82821 		str	r2, [r5, #296]
 1925 007c 00E0     		b	.L180
 1926              	.LVL163:
 1927              	.L189:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 127


 1928 007e 0024     		movs	r4, #0
 1929              	.LVL164:
 1930              	.L180:
2041:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1931              		.loc 1 2041 0
 1932 0080 164B     		ldr	r3, .L192
 1933 0082 5B69     		ldr	r3, [r3, #20]
 1934 0084 002B     		cmp	r3, #0
 1935 0086 D4D1     		bne	.L183
2060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1936              		.loc 1 2060 0
 1937 0088 0CB1     		cbz	r4, .L184
2068:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1938              		.loc 1 2068 0
 1939 008a FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 1940              	.LVL165:
 1941              	.L184:
 1942              	.LBB30:
2076:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1943              		.loc 1 2076 0
 1944 008e 134B     		ldr	r3, .L192
 1945 0090 D3F82441 		ldr	r4, [r3, #292]
 1946              	.LVL166:
2078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 1947              		.loc 1 2078 0
 1948 0094 64B1     		cbz	r4, .L185
 1949              	.L187:
2082:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							{
 1950              		.loc 1 2082 0
 1951 0096 FFF7FEFF 		bl	xTaskIncrementTick
 1952              	.LVL167:
 1953 009a 18B1     		cbz	r0, .L186
2084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 							}
 1954              		.loc 1 2084 0
 1955 009c 0122     		movs	r2, #1
 1956 009e 0F4B     		ldr	r3, .L192
 1957 00a0 C3F82821 		str	r2, [r3, #296]
 1958              	.L186:
 1959              	.LVL168:
2091:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1960              		.loc 1 2091 0
 1961 00a4 013C     		subs	r4, r4, #1
 1962              	.LVL169:
 1963 00a6 F6D1     		bne	.L187
2093:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1964              		.loc 1 2093 0
 1965 00a8 0022     		movs	r2, #0
 1966 00aa 0C4B     		ldr	r3, .L192
 1967 00ac C3F82421 		str	r2, [r3, #292]
 1968              	.L185:
 1969              	.LBE30:
2101:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 1970              		.loc 1 2101 0
 1971 00b0 0A4B     		ldr	r3, .L192
 1972 00b2 D3F82831 		ldr	r3, [r3, #296]
 1973 00b6 5BB1     		cbz	r3, .L190
 1974              	.LVL170:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 128


2108:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 1975              		.loc 1 2108 0
 1976 00b8 4FF08052 		mov	r2, #268435456
 1977 00bc 084B     		ldr	r3, .L192+4
 1978 00be 1A60     		str	r2, [r3]
 1979              		.syntax unified
 1980              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1981 00c0 BFF34F8F 		dsb
 1982              	@ 0 "" 2
 1983              	@ 2108 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 1984 00c4 BFF36F8F 		isb
 1985              	@ 0 "" 2
2105:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 1986              		.loc 1 2105 0
 1987              		.thumb
 1988              		.syntax unified
 1989 00c8 0124     		movs	r4, #1
 1990              	.LVL171:
 1991 00ca 02E0     		b	.L179
 1992              	.LVL172:
 1993              	.L188:
2020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 1994              		.loc 1 2020 0
 1995 00cc 0024     		movs	r4, #0
 1996 00ce 00E0     		b	.L179
 1997              	.LVL173:
 1998              	.L190:
 1999 00d0 0024     		movs	r4, #0
 2000              	.LVL174:
 2001              	.L179:
2121:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2002              		.loc 1 2121 0
 2003 00d2 FFF7FEFF 		bl	vPortExitCritical
 2004              	.LVL175:
2124:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2005              		.loc 1 2124 0
 2006 00d6 2046     		mov	r0, r4
 2007 00d8 70BD     		pop	{r4, r5, r6, pc}
 2008              	.LVL176:
 2009              	.L193:
 2010 00da 00BF     		.align	2
 2011              	.L192:
 2012 00dc 00000000 		.word	.LANCHOR0
 2013 00e0 04ED00E0 		.word	-536810236
 2014              		.cfi_endproc
 2015              	.LFE145:
 2016              		.size	xTaskResumeAll, .-xTaskResumeAll
 2017              		.section	.text.vTaskDelayUntil,"ax",%progbits
 2018              		.align	2
 2019              		.global	vTaskDelayUntil
 2020              		.thumb
 2021              		.thumb_func
 2022              		.type	vTaskDelayUntil, %function
 2023              	vTaskDelayUntil:
 2024              	.LFB133:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2025              		.loc 1 1141 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 129


 2026              		.cfi_startproc
 2027              		@ args = 0, pretend = 0, frame = 0
 2028              		@ frame_needed = 0, uses_anonymous_args = 0
 2029              	.LVL177:
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2030              		.loc 1 1145 0
 2031 0000 08B9     		cbnz	r0, .L195
1145:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 2032              		.loc 1 1145 0 is_stmt 0 discriminator 1
 2033              		.syntax unified
 2034              	@ 1145 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2035 0002 72B6     		 cpsid i 
 2036              	@ 0 "" 2
 2037              		.thumb
 2038              		.syntax unified
 2039              	.L196:
 2040 0004 FEE7     		b	.L196
 2041              	.L195:
1141:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TickType_t xTimeToWake;
 2042              		.loc 1 1141 0 is_stmt 1
 2043 0006 38B5     		push	{r3, r4, r5, lr}
 2044              		.cfi_def_cfa_offset 16
 2045              		.cfi_offset 3, -16
 2046              		.cfi_offset 4, -12
 2047              		.cfi_offset 5, -8
 2048              		.cfi_offset 14, -4
 2049 0008 0546     		mov	r5, r0
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2050              		.loc 1 1146 0
 2051 000a 09B9     		cbnz	r1, .L197
1146:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 2052              		.loc 1 1146 0 is_stmt 0 discriminator 1
 2053              		.syntax unified
 2054              	@ 1146 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2055 000c 72B6     		 cpsid i 
 2056              	@ 0 "" 2
 2057              		.thumb
 2058              		.syntax unified
 2059              	.L198:
 2060 000e FEE7     		b	.L198
 2061              	.L197:
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2062              		.loc 1 1147 0 is_stmt 1
 2063 0010 1A4B     		ldr	r3, .L210
 2064 0012 D3F81831 		ldr	r3, [r3, #280]
 2065 0016 0BB1     		cbz	r3, .L199
1147:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2066              		.loc 1 1147 0 is_stmt 0 discriminator 1
 2067              		.syntax unified
 2068              	@ 1147 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2069 0018 72B6     		 cpsid i 
 2070              	@ 0 "" 2
 2071              		.thumb
 2072              		.syntax unified
 2073              	.L200:
 2074 001a FEE7     		b	.L200
 2075              	.L199:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 130


 2076 001c 0C46     		mov	r4, r1
1149:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2077              		.loc 1 1149 0 is_stmt 1
 2078 001e FFF7FEFF 		bl	vTaskSuspendAll
 2079              	.LVL178:
 2080              	.LBB31:
1153:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2081              		.loc 1 1153 0
 2082 0022 164B     		ldr	r3, .L210
 2083 0024 D3F81001 		ldr	r0, [r3, #272]
 2084              	.LVL179:
1156:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2085              		.loc 1 1156 0
 2086 0028 2A68     		ldr	r2, [r5]
 2087 002a A318     		adds	r3, r4, r2
 2088              	.LVL180:
1158:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2089              		.loc 1 1158 0
 2090 002c 9042     		cmp	r0, r2
 2091 002e 05D2     		bcs	.L201
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2092              		.loc 1 1165 0
 2093 0030 9A42     		cmp	r2, r3
 2094 0032 09D9     		bls	.L205
1165:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2095              		.loc 1 1165 0 is_stmt 0 discriminator 1
 2096 0034 9842     		cmp	r0, r3
 2097 0036 09D3     		bcc	.L206
 2098              	.LBE31:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2099              		.loc 1 1143 0 is_stmt 1
 2100 0038 0022     		movs	r2, #0
 2101 003a 0CE0     		b	.L202
 2102              	.L201:
 2103              	.LBB32:
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2104              		.loc 1 1179 0
 2105 003c 9A42     		cmp	r2, r3
 2106 003e 07D8     		bhi	.L207
1179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2107              		.loc 1 1179 0 is_stmt 0 discriminator 1
 2108 0040 9842     		cmp	r0, r3
 2109 0042 07D3     		bcc	.L208
 2110              	.LBE32:
1143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2111              		.loc 1 1143 0 is_stmt 1
 2112 0044 0022     		movs	r2, #0
 2113 0046 06E0     		b	.L202
 2114              	.L205:
 2115 0048 0022     		movs	r2, #0
 2116 004a 04E0     		b	.L202
 2117              	.L206:
 2118              	.LBB33:
1167:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2119              		.loc 1 1167 0
 2120 004c 0122     		movs	r2, #1
 2121 004e 02E0     		b	.L202
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 131


 2122              	.L207:
1181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2123              		.loc 1 1181 0
 2124 0050 0122     		movs	r2, #1
 2125 0052 00E0     		b	.L202
 2126              	.L208:
 2127 0054 0122     		movs	r2, #1
 2128              	.L202:
 2129              	.LVL181:
1190:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2130              		.loc 1 1190 0
 2131 0056 2B60     		str	r3, [r5]
1192:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2132              		.loc 1 1192 0
 2133 0058 1AB1     		cbz	r2, .L203
1198:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2134              		.loc 1 1198 0
 2135 005a 0021     		movs	r1, #0
 2136 005c 181A     		subs	r0, r3, r0
 2137              	.LVL182:
 2138 005e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2139              	.LVL183:
 2140              	.L203:
 2141              	.LBE33:
1205:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2142              		.loc 1 1205 0
 2143 0062 FFF7FEFF 		bl	xTaskResumeAll
 2144              	.LVL184:
1209:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2145              		.loc 1 1209 0
 2146 0066 38B9     		cbnz	r0, .L194
1211:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2147              		.loc 1 1211 0
 2148 0068 4FF08052 		mov	r2, #268435456
 2149 006c 044B     		ldr	r3, .L210+4
 2150 006e 1A60     		str	r2, [r3]
 2151              		.syntax unified
 2152              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2153 0070 BFF34F8F 		dsb
 2154              	@ 0 "" 2
 2155              	@ 1211 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2156 0074 BFF36F8F 		isb
 2157              	@ 0 "" 2
 2158              		.thumb
 2159              		.syntax unified
 2160              	.L194:
 2161 0078 38BD     		pop	{r3, r4, r5, pc}
 2162              	.LVL185:
 2163              	.L211:
 2164 007a 00BF     		.align	2
 2165              	.L210:
 2166 007c 00000000 		.word	.LANCHOR0
 2167 0080 04ED00E0 		.word	-536810236
 2168              		.cfi_endproc
 2169              	.LFE133:
 2170              		.size	vTaskDelayUntil, .-vTaskDelayUntil
 2171              		.section	.text.vTaskDelay,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 132


 2172              		.align	2
 2173              		.global	vTaskDelay
 2174              		.thumb
 2175              		.thumb_func
 2176              		.type	vTaskDelay, %function
 2177              	vTaskDelay:
 2178              	.LFB134:
1225:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 2179              		.loc 1 1225 0
 2180              		.cfi_startproc
 2181              		@ args = 0, pretend = 0, frame = 0
 2182              		@ frame_needed = 0, uses_anonymous_args = 0
 2183              	.LVL186:
 2184 0000 10B5     		push	{r4, lr}
 2185              		.cfi_def_cfa_offset 8
 2186              		.cfi_offset 4, -8
 2187              		.cfi_offset 14, -4
 2188              	.LVL187:
1229:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2189              		.loc 1 1229 0
 2190 0002 78B1     		cbz	r0, .L217
 2191 0004 0446     		mov	r4, r0
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2192              		.loc 1 1231 0
 2193 0006 0D4B     		ldr	r3, .L219
 2194 0008 D3F81831 		ldr	r3, [r3, #280]
 2195 000c 0BB1     		cbz	r3, .L214
1231:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSuspendAll();
 2196              		.loc 1 1231 0 is_stmt 0 discriminator 1
 2197              		.syntax unified
 2198              	@ 1231 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2199 000e 72B6     		 cpsid i 
 2200              	@ 0 "" 2
 2201              		.thumb
 2202              		.syntax unified
 2203              	.L215:
 2204 0010 FEE7     		b	.L215
 2205              	.L214:
1232:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2206              		.loc 1 1232 0 is_stmt 1
 2207 0012 FFF7FEFF 		bl	vTaskSuspendAll
 2208              	.LVL188:
1243:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2209              		.loc 1 1243 0
 2210 0016 0021     		movs	r1, #0
 2211 0018 2046     		mov	r0, r4
 2212 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2213              	.LVL189:
1245:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2214              		.loc 1 1245 0
 2215 001e FFF7FEFF 		bl	xTaskResumeAll
 2216              	.LVL190:
 2217 0022 00E0     		b	.L213
 2218              	.LVL191:
 2219              	.L217:
1226:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2220              		.loc 1 1226 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 133


 2221 0024 0020     		movs	r0, #0
 2222              	.LVL192:
 2223              	.L213:
1254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2224              		.loc 1 1254 0
 2225 0026 38B9     		cbnz	r0, .L212
1256:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2226              		.loc 1 1256 0
 2227 0028 4FF08052 		mov	r2, #268435456
 2228 002c 044B     		ldr	r3, .L219+4
 2229 002e 1A60     		str	r2, [r3]
 2230              		.syntax unified
 2231              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2232 0030 BFF34F8F 		dsb
 2233              	@ 0 "" 2
 2234              	@ 1256 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2235 0034 BFF36F8F 		isb
 2236              	@ 0 "" 2
 2237              		.thumb
 2238              		.syntax unified
 2239              	.L212:
 2240 0038 10BD     		pop	{r4, pc}
 2241              	.L220:
 2242 003a 00BF     		.align	2
 2243              	.L219:
 2244 003c 00000000 		.word	.LANCHOR0
 2245 0040 04ED00E0 		.word	-536810236
 2246              		.cfi_endproc
 2247              	.LFE134:
 2248              		.size	vTaskDelay, .-vTaskDelay
 2249              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 2250              		.align	2
 2251              		.thumb
 2252              		.thumb_func
 2253              		.type	prvCheckTasksWaitingTermination, %function
 2254              	prvCheckTasksWaitingTermination:
 2255              	.LFB164:
3377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2256              		.loc 1 3377 0
 2257              		.cfi_startproc
 2258              		@ args = 0, pretend = 0, frame = 0
 2259              		@ frame_needed = 0, uses_anonymous_args = 0
 2260 0000 38B5     		push	{r3, r4, r5, lr}
 2261              		.cfi_def_cfa_offset 16
 2262              		.cfi_offset 3, -16
 2263              		.cfi_offset 4, -12
 2264              		.cfi_offset 5, -8
 2265              		.cfi_offset 14, -4
 2266              	.LBB34:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2267              		.loc 1 3387 0
 2268 0002 1FE0     		b	.L223
 2269              	.L224:
3389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2270              		.loc 1 3389 0
 2271 0004 FFF7FEFF 		bl	vTaskSuspendAll
 2272              	.LVL193:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 134


3391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2273              		.loc 1 3391 0
 2274 0008 114B     		ldr	r3, .L226
 2275 000a D3F8E440 		ldr	r4, [r3, #228]
 2276              	.LVL194:
3393:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2277              		.loc 1 3393 0
 2278 000e FFF7FEFF 		bl	xTaskResumeAll
 2279              	.LVL195:
3395:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2280              		.loc 1 3395 0
 2281 0012 BCB1     		cbz	r4, .L223
 2282              	.LBB35:
3399:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2283              		.loc 1 3399 0
 2284 0014 FFF7FEFF 		bl	vPortEnterCritical
 2285              	.LVL196:
3401:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2286              		.loc 1 3401 0
 2287 0018 0D4C     		ldr	r4, .L226
 2288              	.LVL197:
 2289 001a D4F8F030 		ldr	r3, [r4, #240]
 2290 001e DD68     		ldr	r5, [r3, #12]
 2291              	.LVL198:
3402:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxCurrentNumberOfTasks;
 2292              		.loc 1 3402 0
 2293 0020 281D     		adds	r0, r5, #4
 2294 0022 FFF7FEFF 		bl	uxListRemove
 2295              	.LVL199:
3403:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					--uxDeletedTasksWaitingCleanUp;
 2296              		.loc 1 3403 0
 2297 0026 D4F8FC30 		ldr	r3, [r4, #252]
 2298 002a 013B     		subs	r3, r3, #1
 2299 002c C4F8FC30 		str	r3, [r4, #252]
3404:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2300              		.loc 1 3404 0
 2301 0030 D4F81431 		ldr	r3, [r4, #276]
 2302 0034 013B     		subs	r3, r3, #1
 2303 0036 C4F81431 		str	r3, [r4, #276]
3406:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2304              		.loc 1 3406 0
 2305 003a FFF7FEFF 		bl	vPortExitCritical
 2306              	.LVL200:
3408:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2307              		.loc 1 3408 0
 2308 003e 2846     		mov	r0, r5
 2309 0040 FFF7FEFF 		bl	prvDeleteTCB
 2310              	.LVL201:
 2311              	.L223:
 2312              	.LBE35:
3387:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2313              		.loc 1 3387 0
 2314 0044 024B     		ldr	r3, .L226
 2315 0046 D3F81431 		ldr	r3, [r3, #276]
 2316 004a 002B     		cmp	r3, #0
 2317 004c DAD1     		bne	.L224
 2318              	.LBE34:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 135


3417:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2319              		.loc 1 3417 0
 2320 004e 38BD     		pop	{r3, r4, r5, pc}
 2321              	.L227:
 2322              		.align	2
 2323              	.L226:
 2324 0050 00000000 		.word	.LANCHOR0
 2325              		.cfi_endproc
 2326              	.LFE164:
 2327              		.size	prvCheckTasksWaitingTermination, .-prvCheckTasksWaitingTermination
 2328              		.section	.text.prvIdleTask,"ax",%progbits
 2329              		.align	2
 2330              		.thumb
 2331              		.thumb_func
 2332              		.type	prvIdleTask, %function
 2333              	prvIdleTask:
 2334              	.LFB160:
3143:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	/* Stop warnings. */
 2335              		.loc 1 3143 0
 2336              		.cfi_startproc
 2337              		@ Volatile: function does not return.
 2338              		@ args = 0, pretend = 0, frame = 0
 2339              		@ frame_needed = 0, uses_anonymous_args = 0
 2340              	.LVL202:
 2341 0000 08B5     		push	{r3, lr}
 2342              		.cfi_def_cfa_offset 8
 2343              		.cfi_offset 3, -8
 2344              		.cfi_offset 14, -4
 2345              	.LVL203:
 2346              	.L229:
3154:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2347              		.loc 1 3154 0
 2348 0002 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
 2349              	.LVL204:
3177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2350              		.loc 1 3177 0
 2351 0006 064B     		ldr	r3, .L232
 2352 0008 1B6B     		ldr	r3, [r3, #48]
 2353 000a 012B     		cmp	r3, #1
 2354 000c F9D9     		bls	.L229
3179:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2355              		.loc 1 3179 0
 2356 000e 4FF08052 		mov	r2, #268435456
 2357 0012 044B     		ldr	r3, .L232+4
 2358 0014 1A60     		str	r2, [r3]
 2359              		.syntax unified
 2360              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2361 0016 BFF34F8F 		dsb
 2362              	@ 0 "" 2
 2363              	@ 3179 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2364 001a BFF36F8F 		isb
 2365              	@ 0 "" 2
 2366              		.thumb
 2367              		.syntax unified
 2368 001e F0E7     		b	.L229
 2369              	.L233:
 2370              		.align	2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 136


 2371              	.L232:
 2372 0020 00000000 		.word	.LANCHOR0
 2373 0024 04ED00E0 		.word	-536810236
 2374              		.cfi_endproc
 2375              	.LFE160:
 2376              		.size	prvIdleTask, .-prvIdleTask
 2377              		.section	.text.vTaskSwitchContext,"ax",%progbits
 2378              		.align	2
 2379              		.global	vTaskSwitchContext
 2380              		.thumb
 2381              		.thumb_func
 2382              		.type	vTaskSwitchContext, %function
 2383              	vTaskSwitchContext:
 2384              	.LFB151:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2385              		.loc 1 2762 0
 2386              		.cfi_startproc
 2387              		@ args = 0, pretend = 0, frame = 0
 2388              		@ frame_needed = 0, uses_anonymous_args = 0
2763:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2389              		.loc 1 2763 0
 2390 0000 2D4B     		ldr	r3, .L245
 2391 0002 D3F81831 		ldr	r3, [r3, #280]
 2392 0006 23B1     		cbz	r3, .L235
2767:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2393              		.loc 1 2767 0
 2394 0008 0122     		movs	r2, #1
 2395 000a 2B4B     		ldr	r3, .L245
 2396 000c C3F82821 		str	r2, [r3, #296]
 2397 0010 7047     		bx	lr
 2398              	.L235:
2762:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 2399              		.loc 1 2762 0
 2400 0012 10B5     		push	{r4, lr}
 2401              		.cfi_def_cfa_offset 8
 2402              		.cfi_offset 4, -8
 2403              		.cfi_offset 14, -4
2771:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 2404              		.loc 1 2771 0
 2405 0014 284B     		ldr	r3, .L245
 2406 0016 0022     		movs	r2, #0
 2407 0018 C3F82821 		str	r2, [r3, #296]
 2408              	.LBB36:
2803:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		const uint32_t ulCheckValue = ( uint32_t ) 0xa5a5a5a5;											\
 2409              		.loc 1 2803 0
 2410 001c D3F80031 		ldr	r3, [r3, #256]
 2411 0020 1B6B     		ldr	r3, [r3, #48]
 2412              	.LVL205:
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
 2413              		.loc 1 2806 0
 2414 0022 1A68     		ldr	r2, [r3]
 2415 0024 B2F1A53F 		cmp	r2, #-1515870811
 2416 0028 0BD1     		bne	.L237
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2417              		.loc 1 2807 0 discriminator 1
 2418 002a 5A68     		ldr	r2, [r3, #4]
2806:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 1 ] != ulCheckValue ) ||												\
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 137


 2419              		.loc 1 2806 0 discriminator 1
 2420 002c B2F1A53F 		cmp	r2, #-1515870811
 2421 0030 07D1     		bne	.L237
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2422              		.loc 1 2808 0
 2423 0032 9A68     		ldr	r2, [r3, #8]
2807:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 2 ] != ulCheckValue ) ||												\
 2424              		.loc 1 2807 0
 2425 0034 B2F1A53F 		cmp	r2, #-1515870811
 2426 0038 03D1     		bne	.L237
2809:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{																								\
 2427              		.loc 1 2809 0
 2428 003a DB68     		ldr	r3, [r3, #12]
 2429              	.LVL206:
2808:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			( pulStack[ 3 ] != ulCheckValue ) )												\
 2430              		.loc 1 2808 0
 2431 003c B3F1A53F 		cmp	r3, #-1515870811
 2432 0040 07D0     		beq	.L238
 2433              	.L237:
2811:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}																								\
 2434              		.loc 1 2811 0
 2435 0042 1D4B     		ldr	r3, .L245
 2436 0044 D3F80001 		ldr	r0, [r3, #256]
 2437 0048 D3F80011 		ldr	r1, [r3, #256]
 2438 004c 3431     		adds	r1, r1, #52
 2439 004e FFF7FEFF 		bl	vApplicationStackOverflowHook
 2440              	.LVL207:
 2441              	.L238:
 2442              	.LBE36:
 2443              	.LBB37:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2444              		.loc 1 2817 0
 2445 0052 194B     		ldr	r3, .L245
 2446 0054 D3F80C31 		ldr	r3, [r3, #268]
 2447              	.LVL208:
 2448 0058 03E0     		b	.L239
 2449              	.L242:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2450              		.loc 1 2817 0 is_stmt 0 discriminator 5
 2451 005a 0BB9     		cbnz	r3, .L240
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2452              		.loc 1 2817 0 discriminator 2
 2453              		.syntax unified
 2454              	@ 2817 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2455 005c 72B6     		 cpsid i 
 2456              	@ 0 "" 2
 2457              		.thumb
 2458              		.syntax unified
 2459              	.L241:
 2460 005e FEE7     		b	.L241
 2461              	.L240:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2462              		.loc 1 2817 0 discriminator 3
 2463 0060 013B     		subs	r3, r3, #1
 2464              	.LVL209:
 2465              	.L239:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 138


 2466              		.loc 1 2817 0 discriminator 4
 2467 0062 03EB8301 		add	r1, r3, r3, lsl #2
 2468 0066 8A00     		lsls	r2, r1, #2
 2469 0068 1349     		ldr	r1, .L245
 2470 006a 0A44     		add	r2, r2, r1
 2471 006c 126B     		ldr	r2, [r2, #48]
 2472 006e 002A     		cmp	r2, #0
 2473 0070 F3D0     		beq	.L242
 2474              	.LVL210:
 2475              	.LBB38:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2476              		.loc 1 2817 0 discriminator 6
 2477 0072 0846     		mov	r0, r1
 2478 0074 9900     		lsls	r1, r3, #2
 2479 0076 CC18     		adds	r4, r1, r3
 2480 0078 A200     		lsls	r2, r4, #2
 2481 007a 0244     		add	r2, r2, r0
 2482 007c 546B     		ldr	r4, [r2, #52]
 2483 007e 6468     		ldr	r4, [r4, #4]
 2484 0080 5463     		str	r4, [r2, #52]
 2485 0082 3030     		adds	r0, r0, #48
 2486 0084 1944     		add	r1, r1, r3
 2487 0086 8A00     		lsls	r2, r1, #2
 2488 0088 0832     		adds	r2, r2, #8
 2489 008a 0244     		add	r2, r2, r0
 2490 008c 9442     		cmp	r4, r2
 2491 008e 06D1     		bne	.L243
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2492              		.loc 1 2817 0 discriminator 7
 2493 0090 6068     		ldr	r0, [r4, #4]
 2494 0092 03EB8301 		add	r1, r3, r3, lsl #2
 2495 0096 8A00     		lsls	r2, r1, #2
 2496 0098 0749     		ldr	r1, .L245
 2497 009a 0A44     		add	r2, r2, r1
 2498 009c 5063     		str	r0, [r2, #52]
 2499              	.L243:
2817:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 2500              		.loc 1 2817 0 discriminator 9
 2501 009e 0649     		ldr	r1, .L245
 2502 00a0 03EB8300 		add	r0, r3, r3, lsl #2
 2503 00a4 8200     		lsls	r2, r0, #2
 2504 00a6 0A44     		add	r2, r2, r1
 2505 00a8 526B     		ldr	r2, [r2, #52]
 2506 00aa D268     		ldr	r2, [r2, #12]
 2507 00ac C1F80021 		str	r2, [r1, #256]
 2508              	.LBE38:
 2509 00b0 C1F80C31 		str	r3, [r1, #268]
 2510 00b4 10BD     		pop	{r4, pc}
 2511              	.L246:
 2512 00b6 00BF     		.align	2
 2513              	.L245:
 2514 00b8 00000000 		.word	.LANCHOR0
 2515              	.LBE37:
 2516              		.cfi_endproc
 2517              	.LFE151:
 2518              		.size	vTaskSwitchContext, .-vTaskSwitchContext
 2519              		.section	.text.vTaskSuspend,"ax",%progbits
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 139


 2520              		.align	2
 2521              		.global	vTaskSuspend
 2522              		.thumb
 2523              		.thumb_func
 2524              		.type	vTaskSuspend, %function
 2525              	vTaskSuspend:
 2526              	.LFB138:
1567:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 2527              		.loc 1 1567 0 is_stmt 1
 2528              		.cfi_startproc
 2529              		@ args = 0, pretend = 0, frame = 0
 2530              		@ frame_needed = 0, uses_anonymous_args = 0
 2531              	.LVL211:
 2532 0000 70B5     		push	{r4, r5, r6, lr}
 2533              		.cfi_def_cfa_offset 16
 2534              		.cfi_offset 4, -16
 2535              		.cfi_offset 5, -12
 2536              		.cfi_offset 6, -8
 2537              		.cfi_offset 14, -4
 2538 0002 0446     		mov	r4, r0
1570:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2539              		.loc 1 1570 0
 2540 0004 FFF7FEFF 		bl	vPortEnterCritical
 2541              	.LVL212:
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2542              		.loc 1 1574 0
 2543 0008 14B9     		cbnz	r4, .L248
1574:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2544              		.loc 1 1574 0 is_stmt 0 discriminator 1
 2545 000a 214B     		ldr	r3, .L257
 2546 000c D3F80041 		ldr	r4, [r3, #256]
 2547              	.LVL213:
 2548              	.L248:
1580:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2549              		.loc 1 1580 0 is_stmt 1 discriminator 4
 2550 0010 261D     		adds	r6, r4, #4
 2551 0012 3046     		mov	r0, r6
 2552 0014 FFF7FEFF 		bl	uxListRemove
 2553              	.LVL214:
1590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2554              		.loc 1 1590 0 discriminator 4
 2555 0018 A36A     		ldr	r3, [r4, #40]
 2556 001a 1BB1     		cbz	r3, .L249
1592:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2557              		.loc 1 1592 0
 2558 001c 04F11800 		add	r0, r4, #24
 2559 0020 FFF7FEFF 		bl	uxListRemove
 2560              	.LVL215:
 2561              	.L249:
1599:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2562              		.loc 1 1599 0
 2563 0024 1A4D     		ldr	r5, .L257
 2564 0026 3146     		mov	r1, r6
 2565 0028 2846     		mov	r0, r5
 2566 002a FFF7FEFF 		bl	vListInsertEnd
 2567              	.LVL216:
1601:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 140


 2568              		.loc 1 1601 0
 2569 002e FFF7FEFF 		bl	vPortExitCritical
 2570              	.LVL217:
1603:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2571              		.loc 1 1603 0
 2572 0032 D5F80431 		ldr	r3, [r5, #260]
 2573 0036 2BB1     		cbz	r3, .L250
1607:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2574              		.loc 1 1607 0
 2575 0038 FFF7FEFF 		bl	vPortEnterCritical
 2576              	.LVL218:
1609:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2577              		.loc 1 1609 0
 2578 003c FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2579              	.LVL219:
1611:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2580              		.loc 1 1611 0
 2581 0040 FFF7FEFF 		bl	vPortExitCritical
 2582              	.LVL220:
 2583              	.L250:
1618:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2584              		.loc 1 1618 0
 2585 0044 124B     		ldr	r3, .L257
 2586 0046 D3F80031 		ldr	r3, [r3, #256]
 2587 004a 9C42     		cmp	r4, r3
 2588 004c 1FD1     		bne	.L247
1620:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 2589              		.loc 1 1620 0
 2590 004e 104B     		ldr	r3, .L257
 2591 0050 D3F80431 		ldr	r3, [r3, #260]
 2592 0054 73B1     		cbz	r3, .L252
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2593              		.loc 1 1623 0
 2594 0056 0E4B     		ldr	r3, .L257
 2595 0058 D3F81831 		ldr	r3, [r3, #280]
 2596 005c 0BB1     		cbz	r3, .L253
1623:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				portYIELD_WITHIN_API();
 2597              		.loc 1 1623 0 is_stmt 0 discriminator 1
 2598              		.syntax unified
 2599              	@ 1623 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2600 005e 72B6     		 cpsid i 
 2601              	@ 0 "" 2
 2602              		.thumb
 2603              		.syntax unified
 2604              	.L254:
 2605 0060 FEE7     		b	.L254
 2606              	.L253:
1624:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 2607              		.loc 1 1624 0 is_stmt 1
 2608 0062 4FF08052 		mov	r2, #268435456
 2609 0066 0B4B     		ldr	r3, .L257+4
 2610 0068 1A60     		str	r2, [r3]
 2611              		.syntax unified
 2612              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2613 006a BFF34F8F 		dsb
 2614              	@ 0 "" 2
 2615              	@ 1624 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 141


 2616 006e BFF36F8F 		isb
 2617              	@ 0 "" 2
 2618              		.thumb
 2619              		.syntax unified
 2620 0072 70BD     		pop	{r4, r5, r6, pc}
 2621              	.LVL221:
 2622              	.L252:
1631:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 2623              		.loc 1 1631 0
 2624 0074 064B     		ldr	r3, .L257
 2625 0076 1A68     		ldr	r2, [r3]
 2626 0078 D3F8FC30 		ldr	r3, [r3, #252]
 2627 007c 9A42     		cmp	r2, r3
 2628 007e 04D1     		bne	.L255
1637:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2629              		.loc 1 1637 0
 2630 0080 0022     		movs	r2, #0
 2631 0082 034B     		ldr	r3, .L257
 2632 0084 C3F80021 		str	r2, [r3, #256]
 2633 0088 70BD     		pop	{r4, r5, r6, pc}
 2634              	.LVL222:
 2635              	.L255:
1641:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 2636              		.loc 1 1641 0
 2637 008a FFF7FEFF 		bl	vTaskSwitchContext
 2638              	.LVL223:
 2639              	.L247:
 2640 008e 70BD     		pop	{r4, r5, r6, pc}
 2641              	.LVL224:
 2642              	.L258:
 2643              		.align	2
 2644              	.L257:
 2645 0090 00000000 		.word	.LANCHOR0
 2646 0094 04ED00E0 		.word	-536810236
 2647              		.cfi_endproc
 2648              	.LFE138:
 2649              		.size	vTaskSuspend, .-vTaskSuspend
 2650              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 2651              		.align	2
 2652              		.global	vTaskPlaceOnEventList
 2653              		.thumb
 2654              		.thumb_func
 2655              		.type	vTaskPlaceOnEventList, %function
 2656              	vTaskPlaceOnEventList:
 2657              	.LFB152:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2658              		.loc 1 2832 0
 2659              		.cfi_startproc
 2660              		@ args = 0, pretend = 0, frame = 0
 2661              		@ frame_needed = 0, uses_anonymous_args = 0
 2662              	.LVL225:
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2663              		.loc 1 2833 0
 2664 0000 08B9     		cbnz	r0, .L260
2833:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2665              		.loc 1 2833 0 is_stmt 0 discriminator 1
 2666              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 142


 2667              	@ 2833 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2668 0002 72B6     		 cpsid i 
 2669              	@ 0 "" 2
 2670              		.thumb
 2671              		.syntax unified
 2672              	.L261:
 2673 0004 FEE7     		b	.L261
 2674              	.L260:
2832:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2675              		.loc 1 2832 0 is_stmt 1
 2676 0006 10B5     		push	{r4, lr}
 2677              		.cfi_def_cfa_offset 8
 2678              		.cfi_offset 4, -8
 2679              		.cfi_offset 14, -4
 2680 0008 0C46     		mov	r4, r1
2842:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2681              		.loc 1 2842 0
 2682 000a 054B     		ldr	r3, .L263
 2683 000c D3F80011 		ldr	r1, [r3, #256]
 2684              	.LVL226:
 2685 0010 1831     		adds	r1, r1, #24
 2686 0012 FFF7FEFF 		bl	vListInsert
 2687              	.LVL227:
2844:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2688              		.loc 1 2844 0
 2689 0016 0121     		movs	r1, #1
 2690 0018 2046     		mov	r0, r4
 2691 001a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2692              	.LVL228:
 2693 001e 10BD     		pop	{r4, pc}
 2694              	.LVL229:
 2695              	.L264:
 2696              		.align	2
 2697              	.L263:
 2698 0020 00000000 		.word	.LANCHOR0
 2699              		.cfi_endproc
 2700              	.LFE152:
 2701              		.size	vTaskPlaceOnEventList, .-vTaskPlaceOnEventList
 2702              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 2703              		.align	2
 2704              		.global	vTaskPlaceOnUnorderedEventList
 2705              		.thumb
 2706              		.thumb_func
 2707              		.type	vTaskPlaceOnUnorderedEventList, %function
 2708              	vTaskPlaceOnUnorderedEventList:
 2709              	.LFB153:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2710              		.loc 1 2849 0
 2711              		.cfi_startproc
 2712              		@ args = 0, pretend = 0, frame = 0
 2713              		@ frame_needed = 0, uses_anonymous_args = 0
 2714              	.LVL230:
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2715              		.loc 1 2850 0
 2716 0000 08B9     		cbnz	r0, .L266
2850:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2717              		.loc 1 2850 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 143


 2718              		.syntax unified
 2719              	@ 2850 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2720 0002 72B6     		 cpsid i 
 2721              	@ 0 "" 2
 2722              		.thumb
 2723              		.syntax unified
 2724              	.L267:
 2725 0004 FEE7     		b	.L267
 2726              	.L266:
 2727 0006 0346     		mov	r3, r0
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2728              		.loc 1 2854 0 is_stmt 1
 2729 0008 0C48     		ldr	r0, .L271
 2730              	.LVL231:
 2731 000a D0F81801 		ldr	r0, [r0, #280]
 2732 000e 08B9     		cbnz	r0, .L268
2854:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2733              		.loc 1 2854 0 is_stmt 0 discriminator 1
 2734              		.syntax unified
 2735              	@ 2854 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2736 0010 72B6     		 cpsid i 
 2737              	@ 0 "" 2
 2738              		.thumb
 2739              		.syntax unified
 2740              	.L269:
 2741 0012 FEE7     		b	.L269
 2742              	.L268:
2849:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxEventList );
 2743              		.loc 1 2849 0 is_stmt 1
 2744 0014 10B5     		push	{r4, lr}
 2745              		.cfi_def_cfa_offset 8
 2746              		.cfi_offset 4, -8
 2747              		.cfi_offset 14, -4
 2748 0016 1846     		mov	r0, r3
 2749 0018 1446     		mov	r4, r2
 2750 001a 0B46     		mov	r3, r1
 2751              	.LVL232:
2859:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2752              		.loc 1 2859 0
 2753 001c 074A     		ldr	r2, .L271
 2754              	.LVL233:
 2755 001e D2F80011 		ldr	r1, [r2, #256]
 2756              	.LVL234:
 2757 0022 43F00043 		orr	r3, r3, #-2147483648
 2758              	.LVL235:
 2759 0026 8B61     		str	r3, [r1, #24]
2866:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2760              		.loc 1 2866 0
 2761 0028 D2F80011 		ldr	r1, [r2, #256]
 2762 002c 1831     		adds	r1, r1, #24
 2763 002e FFF7FEFF 		bl	vListInsertEnd
 2764              	.LVL236:
2868:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 2765              		.loc 1 2868 0
 2766 0032 0121     		movs	r1, #1
 2767 0034 2046     		mov	r0, r4
 2768 0036 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 144


 2769              	.LVL237:
 2770 003a 10BD     		pop	{r4, pc}
 2771              	.LVL238:
 2772              	.L272:
 2773              		.align	2
 2774              	.L271:
 2775 003c 00000000 		.word	.LANCHOR0
 2776              		.cfi_endproc
 2777              	.LFE153:
 2778              		.size	vTaskPlaceOnUnorderedEventList, .-vTaskPlaceOnUnorderedEventList
 2779              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 2780              		.align	2
 2781              		.global	vTaskPlaceOnEventListRestricted
 2782              		.thumb
 2783              		.thumb_func
 2784              		.type	vTaskPlaceOnEventListRestricted, %function
 2785              	vTaskPlaceOnEventListRestricted:
 2786              	.LFB154:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2787              		.loc 1 2875 0
 2788              		.cfi_startproc
 2789              		@ args = 0, pretend = 0, frame = 0
 2790              		@ frame_needed = 0, uses_anonymous_args = 0
 2791              	.LVL239:
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2792              		.loc 1 2876 0
 2793 0000 08B9     		cbnz	r0, .L274
2876:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2794              		.loc 1 2876 0 is_stmt 0 discriminator 1
 2795              		.syntax unified
 2796              	@ 2876 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2797 0002 72B6     		 cpsid i 
 2798              	@ 0 "" 2
 2799              		.thumb
 2800              		.syntax unified
 2801              	.L275:
 2802 0004 FEE7     		b	.L275
 2803              	.L274:
2875:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		configASSERT( pxEventList );
 2804              		.loc 1 2875 0 is_stmt 1
 2805 0006 38B5     		push	{r3, r4, r5, lr}
 2806              		.cfi_def_cfa_offset 16
 2807              		.cfi_offset 3, -16
 2808              		.cfi_offset 4, -12
 2809              		.cfi_offset 5, -8
 2810              		.cfi_offset 14, -4
 2811 0008 0C46     		mov	r4, r1
 2812 000a 1546     		mov	r5, r2
2888:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2813              		.loc 1 2888 0
 2814 000c 064A     		ldr	r2, .L279
 2815              	.LVL240:
 2816 000e D2F80011 		ldr	r1, [r2, #256]
 2817              	.LVL241:
 2818 0012 1831     		adds	r1, r1, #24
 2819 0014 FFF7FEFF 		bl	vListInsertEnd
 2820              	.LVL242:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 145


2893:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 2821              		.loc 1 2893 0
 2822 0018 0DB1     		cbz	r5, .L276
2895:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 2823              		.loc 1 2895 0
 2824 001a 4FF0FF34 		mov	r4, #-1
 2825              	.LVL243:
 2826              	.L276:
2899:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2827              		.loc 1 2899 0
 2828 001e 2946     		mov	r1, r5
 2829 0020 2046     		mov	r0, r4
 2830 0022 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 2831              	.LVL244:
 2832 0026 38BD     		pop	{r3, r4, r5, pc}
 2833              	.LVL245:
 2834              	.L280:
 2835              		.align	2
 2836              	.L279:
 2837 0028 00000000 		.word	.LANCHOR0
 2838              		.cfi_endproc
 2839              	.LFE154:
 2840              		.size	vTaskPlaceOnEventListRestricted, .-vTaskPlaceOnEventListRestricted
 2841              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 2842              		.align	2
 2843              		.global	xTaskRemoveFromEventList
 2844              		.thumb
 2845              		.thumb_func
 2846              		.type	xTaskRemoveFromEventList, %function
 2847              	xTaskRemoveFromEventList:
 2848              	.LFB155:
2906:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2849              		.loc 1 2906 0
 2850              		.cfi_startproc
 2851              		@ args = 0, pretend = 0, frame = 0
 2852              		@ frame_needed = 0, uses_anonymous_args = 0
 2853              	.LVL246:
 2854 0000 38B5     		push	{r3, r4, r5, lr}
 2855              		.cfi_def_cfa_offset 16
 2856              		.cfi_offset 3, -16
 2857              		.cfi_offset 4, -12
 2858              		.cfi_offset 5, -8
 2859              		.cfi_offset 14, -4
2923:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2860              		.loc 1 2923 0
 2861 0002 C368     		ldr	r3, [r0, #12]
 2862 0004 DC68     		ldr	r4, [r3, #12]
 2863              	.LVL247:
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2864              		.loc 1 2924 0
 2865 0006 0CB9     		cbnz	r4, .L282
2924:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 2866              		.loc 1 2924 0 is_stmt 0 discriminator 1
 2867              		.syntax unified
 2868              	@ 2924 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2869 0008 72B6     		 cpsid i 
 2870              	@ 0 "" 2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 146


 2871              		.thumb
 2872              		.syntax unified
 2873              	.L283:
 2874 000a FEE7     		b	.L283
 2875              	.L282:
2925:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2876              		.loc 1 2925 0 is_stmt 1
 2877 000c 04F11805 		add	r5, r4, #24
 2878 0010 2846     		mov	r0, r5
 2879              	.LVL248:
 2880 0012 FFF7FEFF 		bl	uxListRemove
 2881              	.LVL249:
2927:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2882              		.loc 1 2927 0
 2883 0016 164B     		ldr	r3, .L290
 2884 0018 D3F81831 		ldr	r3, [r3, #280]
 2885 001c ABB9     		cbnz	r3, .L284
2929:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 2886              		.loc 1 2929 0
 2887 001e 251D     		adds	r5, r4, #4
 2888 0020 2846     		mov	r0, r5
 2889 0022 FFF7FEFF 		bl	uxListRemove
 2890              	.LVL250:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2891              		.loc 1 2930 0
 2892 0026 E36A     		ldr	r3, [r4, #44]
 2893 0028 114A     		ldr	r2, .L290
 2894 002a D2F80C21 		ldr	r2, [r2, #268]
 2895 002e 9342     		cmp	r3, r2
 2896 0030 02D9     		bls	.L285
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2897              		.loc 1 2930 0 is_stmt 0 discriminator 1
 2898 0032 0F4A     		ldr	r2, .L290
 2899 0034 C2F80C31 		str	r3, [r2, #268]
 2900              	.L285:
2930:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2901              		.loc 1 2930 0 discriminator 3
 2902 0038 03EB8303 		add	r3, r3, r3, lsl #2
 2903 003c 9A00     		lsls	r2, r3, #2
 2904 003e 2946     		mov	r1, r5
 2905 0040 0C48     		ldr	r0, .L290+4
 2906 0042 1044     		add	r0, r0, r2
 2907 0044 FFF7FEFF 		bl	vListInsertEnd
 2908              	.LVL251:
 2909 0048 03E0     		b	.L286
 2910              	.L284:
2936:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2911              		.loc 1 2936 0 is_stmt 1
 2912 004a 2946     		mov	r1, r5
 2913 004c 0A48     		ldr	r0, .L290+8
 2914 004e FFF7FEFF 		bl	vListInsertEnd
 2915              	.LVL252:
 2916              	.L286:
2939:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 2917              		.loc 1 2939 0
 2918 0052 E26A     		ldr	r2, [r4, #44]
 2919 0054 064B     		ldr	r3, .L290
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 147


 2920 0056 D3F80031 		ldr	r3, [r3, #256]
 2921 005a DB6A     		ldr	r3, [r3, #44]
 2922 005c 9A42     		cmp	r2, r3
 2923 005e 04D9     		bls	.L288
 2924              	.LVL253:
2948:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2925              		.loc 1 2948 0
 2926 0060 0120     		movs	r0, #1
 2927 0062 034B     		ldr	r3, .L290
 2928 0064 C3F82801 		str	r0, [r3, #296]
 2929 0068 38BD     		pop	{r3, r4, r5, pc}
 2930              	.LVL254:
 2931              	.L288:
2952:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 2932              		.loc 1 2952 0
 2933 006a 0020     		movs	r0, #0
 2934              	.LVL255:
2970:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 2935              		.loc 1 2970 0
 2936 006c 38BD     		pop	{r3, r4, r5, pc}
 2937              	.LVL256:
 2938              	.L291:
 2939 006e 00BF     		.align	2
 2940              	.L290:
 2941 0070 00000000 		.word	.LANCHOR0
 2942 0074 30000000 		.word	.LANCHOR0+48
 2943 0078 14000000 		.word	.LANCHOR0+20
 2944              		.cfi_endproc
 2945              	.LFE155:
 2946              		.size	xTaskRemoveFromEventList, .-xTaskRemoveFromEventList
 2947              		.section	.text.xTaskRemoveFromUnorderedEventList,"ax",%progbits
 2948              		.align	2
 2949              		.global	xTaskRemoveFromUnorderedEventList
 2950              		.thumb
 2951              		.thumb_func
 2952              		.type	xTaskRemoveFromUnorderedEventList, %function
 2953              	xTaskRemoveFromUnorderedEventList:
 2954              	.LFB156:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2955              		.loc 1 2974 0
 2956              		.cfi_startproc
 2957              		@ args = 0, pretend = 0, frame = 0
 2958              		@ frame_needed = 0, uses_anonymous_args = 0
 2959              	.LVL257:
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2960              		.loc 1 2980 0
 2961 0000 194B     		ldr	r3, .L301
 2962 0002 D3F81831 		ldr	r3, [r3, #280]
 2963 0006 0BB9     		cbnz	r3, .L293
2980:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2964              		.loc 1 2980 0 is_stmt 0 discriminator 1
 2965              		.syntax unified
 2966              	@ 2980 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2967 0008 72B6     		 cpsid i 
 2968              	@ 0 "" 2
 2969              		.thumb
 2970              		.syntax unified
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 148


 2971              	.L294:
 2972 000a FEE7     		b	.L294
 2973              	.L293:
2974:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TCB_t *pxUnblockedTCB;
 2974              		.loc 1 2974 0 is_stmt 1
 2975 000c 70B5     		push	{r4, r5, r6, lr}
 2976              		.cfi_def_cfa_offset 16
 2977              		.cfi_offset 4, -16
 2978              		.cfi_offset 5, -12
 2979              		.cfi_offset 6, -8
 2980              		.cfi_offset 14, -4
2983:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2981              		.loc 1 2983 0
 2982 000e 41F00043 		orr	r3, r1, #-2147483648
 2983 0012 0360     		str	r3, [r0]
2987:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 2984              		.loc 1 2987 0
 2985 0014 C468     		ldr	r4, [r0, #12]
 2986              	.LVL258:
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2987              		.loc 1 2988 0
 2988 0016 0CB9     		cbnz	r4, .L295
2988:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 2989              		.loc 1 2988 0 is_stmt 0 discriminator 1
 2990              		.syntax unified
 2991              	@ 2988 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 2992 0018 72B6     		 cpsid i 
 2993              	@ 0 "" 2
 2994              		.thumb
 2995              		.syntax unified
 2996              	.L296:
 2997 001a FEE7     		b	.L296
 2998              	.L295:
2989:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 2999              		.loc 1 2989 0 is_stmt 1
 3000 001c FFF7FEFF 		bl	uxListRemove
 3001              	.LVL259:
2994:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3002              		.loc 1 2994 0
 3003 0020 261D     		adds	r6, r4, #4
 3004 0022 3046     		mov	r0, r6
 3005 0024 FFF7FEFF 		bl	uxListRemove
 3006              	.LVL260:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3007              		.loc 1 2995 0
 3008 0028 E36A     		ldr	r3, [r4, #44]
 3009 002a 0F4A     		ldr	r2, .L301
 3010 002c D2F80C21 		ldr	r2, [r2, #268]
 3011 0030 9342     		cmp	r3, r2
 3012 0032 02D9     		bls	.L297
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3013              		.loc 1 2995 0 is_stmt 0 discriminator 1
 3014 0034 0C4A     		ldr	r2, .L301
 3015 0036 C2F80C31 		str	r3, [r2, #268]
 3016              	.L297:
2995:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3017              		.loc 1 2995 0 discriminator 3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 149


 3018 003a 0B4D     		ldr	r5, .L301
 3019 003c 05F13000 		add	r0, r5, #48
 3020 0040 03EB8303 		add	r3, r3, r3, lsl #2
 3021 0044 9A00     		lsls	r2, r3, #2
 3022 0046 3146     		mov	r1, r6
 3023 0048 1044     		add	r0, r0, r2
 3024 004a FFF7FEFF 		bl	vListInsertEnd
 3025              	.LVL261:
2997:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3026              		.loc 1 2997 0 is_stmt 1 discriminator 3
 3027 004e E26A     		ldr	r2, [r4, #44]
 3028 0050 D5F80031 		ldr	r3, [r5, #256]
 3029 0054 DB6A     		ldr	r3, [r3, #44]
 3030 0056 9A42     		cmp	r2, r3
 3031 0058 03D9     		bls	.L299
 3032              	.LVL262:
3007:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3033              		.loc 1 3007 0
 3034 005a 0120     		movs	r0, #1
 3035 005c C5F82801 		str	r0, [r5, #296]
 3036 0060 70BD     		pop	{r4, r5, r6, pc}
 3037              	.LVL263:
 3038              	.L299:
3011:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	}
 3039              		.loc 1 3011 0
 3040 0062 0020     		movs	r0, #0
 3041              	.LVL264:
3015:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3042              		.loc 1 3015 0
 3043 0064 70BD     		pop	{r4, r5, r6, pc}
 3044              	.LVL265:
 3045              	.L302:
 3046 0066 00BF     		.align	2
 3047              	.L301:
 3048 0068 00000000 		.word	.LANCHOR0
 3049              		.cfi_endproc
 3050              	.LFE156:
 3051              		.size	xTaskRemoveFromUnorderedEventList, .-xTaskRemoveFromUnorderedEventList
 3052              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3053              		.align	2
 3054              		.global	vTaskSetTimeOutState
 3055              		.thumb
 3056              		.thumb_func
 3057              		.type	vTaskSetTimeOutState, %function
 3058              	vTaskSetTimeOutState:
 3059              	.LFB157:
3019:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTimeOut );
 3060              		.loc 1 3019 0
 3061              		.cfi_startproc
 3062              		@ args = 0, pretend = 0, frame = 0
 3063              		@ frame_needed = 0, uses_anonymous_args = 0
 3064              		@ link register save eliminated.
 3065              	.LVL266:
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 3066              		.loc 1 3020 0
 3067 0000 08B9     		cbnz	r0, .L304
3020:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 150


 3068              		.loc 1 3020 0 is_stmt 0 discriminator 1
 3069              		.syntax unified
 3070              	@ 3020 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3071 0002 72B6     		 cpsid i 
 3072              	@ 0 "" 2
 3073              		.thumb
 3074              		.syntax unified
 3075              	.L305:
 3076 0004 FEE7     		b	.L305
 3077              	.L304:
3021:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 3078              		.loc 1 3021 0 is_stmt 1
 3079 0006 044A     		ldr	r2, .L306
 3080 0008 D2F82011 		ldr	r1, [r2, #288]
 3081 000c 0160     		str	r1, [r0]
3022:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3082              		.loc 1 3022 0
 3083 000e D2F81021 		ldr	r2, [r2, #272]
 3084 0012 4260     		str	r2, [r0, #4]
 3085 0014 7047     		bx	lr
 3086              	.L307:
 3087 0016 00BF     		.align	2
 3088              	.L306:
 3089 0018 00000000 		.word	.LANCHOR0
 3090              		.cfi_endproc
 3091              	.LFE157:
 3092              		.size	vTaskSetTimeOutState, .-vTaskSetTimeOutState
 3093              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 3094              		.align	2
 3095              		.global	xTaskCheckForTimeOut
 3096              		.thumb
 3097              		.thumb_func
 3098              		.type	xTaskCheckForTimeOut, %function
 3099              	xTaskCheckForTimeOut:
 3100              	.LFB158:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3101              		.loc 1 3027 0
 3102              		.cfi_startproc
 3103              		@ args = 0, pretend = 0, frame = 0
 3104              		@ frame_needed = 0, uses_anonymous_args = 0
 3105              	.LVL267:
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3106              		.loc 1 3030 0
 3107 0000 08B9     		cbnz	r0, .L309
3030:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	configASSERT( pxTicksToWait );
 3108              		.loc 1 3030 0 is_stmt 0 discriminator 1
 3109              		.syntax unified
 3110              	@ 3030 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3111 0002 72B6     		 cpsid i 
 3112              	@ 0 "" 2
 3113              		.thumb
 3114              		.syntax unified
 3115              	.L310:
 3116 0004 FEE7     		b	.L310
 3117              	.L309:
3027:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** BaseType_t xReturn;
 3118              		.loc 1 3027 0 is_stmt 1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 151


 3119 0006 38B5     		push	{r3, r4, r5, lr}
 3120              		.cfi_def_cfa_offset 16
 3121              		.cfi_offset 3, -16
 3122              		.cfi_offset 4, -12
 3123              		.cfi_offset 5, -8
 3124              		.cfi_offset 14, -4
 3125 0008 0446     		mov	r4, r0
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3126              		.loc 1 3031 0
 3127 000a 09B9     		cbnz	r1, .L311
3031:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3128              		.loc 1 3031 0 is_stmt 0 discriminator 1
 3129              		.syntax unified
 3130              	@ 3031 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3131 000c 72B6     		 cpsid i 
 3132              	@ 0 "" 2
 3133              		.thumb
 3134              		.syntax unified
 3135              	.L312:
 3136 000e FEE7     		b	.L312
 3137              	.L311:
 3138 0010 0D46     		mov	r5, r1
3033:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	{
 3139              		.loc 1 3033 0 is_stmt 1
 3140 0012 FFF7FEFF 		bl	vPortEnterCritical
 3141              	.LVL268:
 3142              	.LBB39:
3036:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3143              		.loc 1 3036 0
 3144 0016 124B     		ldr	r3, .L319
 3145 0018 D3F81011 		ldr	r1, [r3, #272]
 3146              	.LVL269:
3050:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3147              		.loc 1 3050 0
 3148 001c 2A68     		ldr	r2, [r5]
 3149 001e B2F1FF3F 		cmp	r2, #-1
 3150 0022 13D0     		beq	.L315
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3151              		.loc 1 3060 0
 3152 0024 2068     		ldr	r0, [r4]
 3153 0026 D3F82031 		ldr	r3, [r3, #288]
 3154 002a 9842     		cmp	r0, r3
 3155 002c 02D0     		beq	.L314
3060:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3156              		.loc 1 3060 0 is_stmt 0 discriminator 1
 3157 002e 6368     		ldr	r3, [r4, #4]
 3158 0030 9942     		cmp	r1, r3
 3159 0032 0DD2     		bcs	.L316
 3160              	.L314:
3069:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3161              		.loc 1 3069 0 is_stmt 1
 3162 0034 6368     		ldr	r3, [r4, #4]
 3163 0036 C81A     		subs	r0, r1, r3
 3164 0038 8242     		cmp	r2, r0
 3165 003a 0BD9     		bls	.L317
3072:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			vTaskSetTimeOutState( pxTimeOut );
 3166              		.loc 1 3072 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 152


 3167 003c 5B1A     		subs	r3, r3, r1
 3168 003e 1344     		add	r3, r3, r2
 3169 0040 2B60     		str	r3, [r5]
3073:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			xReturn = pdFALSE;
 3170              		.loc 1 3073 0
 3171 0042 2046     		mov	r0, r4
 3172 0044 FFF7FEFF 		bl	vTaskSetTimeOutState
 3173              	.LVL270:
3074:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3174              		.loc 1 3074 0
 3175 0048 0024     		movs	r4, #0
 3176              	.LVL271:
 3177 004a 04E0     		b	.L313
 3178              	.LVL272:
 3179              	.L315:
3055:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3180              		.loc 1 3055 0
 3181 004c 0024     		movs	r4, #0
 3182              	.LVL273:
 3183 004e 02E0     		b	.L313
 3184              	.LVL274:
 3185              	.L316:
3067:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3186              		.loc 1 3067 0
 3187 0050 0124     		movs	r4, #1
 3188              	.LVL275:
 3189 0052 00E0     		b	.L313
 3190              	.LVL276:
 3191              	.L317:
3078:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3192              		.loc 1 3078 0
 3193 0054 0124     		movs	r4, #1
 3194              	.LVL277:
 3195              	.L313:
 3196              	.LBE39:
3081:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3197              		.loc 1 3081 0
 3198 0056 FFF7FEFF 		bl	vPortExitCritical
 3199              	.LVL278:
3084:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3200              		.loc 1 3084 0
 3201 005a 2046     		mov	r0, r4
 3202 005c 38BD     		pop	{r3, r4, r5, pc}
 3203              	.LVL279:
 3204              	.L320:
 3205 005e 00BF     		.align	2
 3206              	.L319:
 3207 0060 00000000 		.word	.LANCHOR0
 3208              		.cfi_endproc
 3209              	.LFE158:
 3210              		.size	xTaskCheckForTimeOut, .-xTaskCheckForTimeOut
 3211              		.section	.text.vTaskMissedYield,"ax",%progbits
 3212              		.align	2
 3213              		.global	vTaskMissedYield
 3214              		.thumb
 3215              		.thumb_func
 3216              		.type	vTaskMissedYield, %function
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 153


 3217              	vTaskMissedYield:
 3218              	.LFB159:
3088:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	xYieldPending = pdTRUE;
 3219              		.loc 1 3088 0
 3220              		.cfi_startproc
 3221              		@ args = 0, pretend = 0, frame = 0
 3222              		@ frame_needed = 0, uses_anonymous_args = 0
 3223              		@ link register save eliminated.
3089:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** }
 3224              		.loc 1 3089 0
 3225 0000 0122     		movs	r2, #1
 3226 0002 024B     		ldr	r3, .L322
 3227 0004 C3F82821 		str	r2, [r3, #296]
 3228 0008 7047     		bx	lr
 3229              	.L323:
 3230 000a 00BF     		.align	2
 3231              	.L322:
 3232 000c 00000000 		.word	.LANCHOR0
 3233              		.cfi_endproc
 3234              	.LFE159:
 3235              		.size	vTaskMissedYield, .-vTaskMissedYield
 3236              		.section	.text.vTaskSetThreadLocalStoragePointer,"ax",%progbits
 3237              		.align	2
 3238              		.global	vTaskSetThreadLocalStoragePointer
 3239              		.thumb
 3240              		.thumb_func
 3241              		.type	vTaskSetThreadLocalStoragePointer, %function
 3242              	vTaskSetThreadLocalStoragePointer:
 3243              	.LFB161:
3292:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 3244              		.loc 1 3292 0
 3245              		.cfi_startproc
 3246              		@ args = 0, pretend = 0, frame = 0
 3247              		@ frame_needed = 0, uses_anonymous_args = 0
 3248              		@ link register save eliminated.
 3249              	.LVL280:
3295:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3250              		.loc 1 3295 0
 3251 0000 0429     		cmp	r1, #4
 3252 0002 07DC     		bgt	.L324
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3253              		.loc 1 3297 0
 3254 0004 10B9     		cbnz	r0, .L326
3297:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
 3255              		.loc 1 3297 0 is_stmt 0 discriminator 1
 3256 0006 044B     		ldr	r3, .L327
 3257 0008 D3F80001 		ldr	r0, [r3, #256]
 3258              	.LVL281:
 3259              	.L326:
3298:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3260              		.loc 1 3298 0 is_stmt 1 discriminator 4
 3261 000c 1031     		adds	r1, r1, #16
 3262              	.LVL282:
 3263 000e 00EB8101 		add	r1, r0, r1, lsl #2
 3264              	.LVL283:
 3265 0012 4A60     		str	r2, [r1, #4]
 3266              	.LVL284:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 154


 3267              	.L324:
 3268 0014 7047     		bx	lr
 3269              	.L328:
 3270 0016 00BF     		.align	2
 3271              	.L327:
 3272 0018 00000000 		.word	.LANCHOR0
 3273              		.cfi_endproc
 3274              	.LFE161:
 3275              		.size	vTaskSetThreadLocalStoragePointer, .-vTaskSetThreadLocalStoragePointer
 3276              		.section	.text.pvTaskGetThreadLocalStoragePointer,"ax",%progbits
 3277              		.align	2
 3278              		.global	pvTaskGetThreadLocalStoragePointer
 3279              		.thumb
 3280              		.thumb_func
 3281              		.type	pvTaskGetThreadLocalStoragePointer, %function
 3282              	pvTaskGetThreadLocalStoragePointer:
 3283              	.LFB162:
3308:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	void *pvReturn = NULL;
 3284              		.loc 1 3308 0
 3285              		.cfi_startproc
 3286              		@ args = 0, pretend = 0, frame = 0
 3287              		@ frame_needed = 0, uses_anonymous_args = 0
 3288              		@ link register save eliminated.
 3289              	.LVL285:
3312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3290              		.loc 1 3312 0
 3291 0000 0429     		cmp	r1, #4
 3292 0002 08DC     		bgt	.L332
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3293              		.loc 1 3314 0
 3294 0004 10B9     		cbnz	r0, .L331
3314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
 3295              		.loc 1 3314 0 is_stmt 0 discriminator 1
 3296 0006 054B     		ldr	r3, .L333
 3297 0008 D3F80001 		ldr	r0, [r3, #256]
 3298              	.LVL286:
 3299              	.L331:
3315:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3300              		.loc 1 3315 0 is_stmt 1 discriminator 4
 3301 000c 1031     		adds	r1, r1, #16
 3302              	.LVL287:
 3303 000e 00EB8100 		add	r0, r0, r1, lsl #2
 3304              	.LVL288:
 3305 0012 4068     		ldr	r0, [r0, #4]
 3306              	.LVL289:
 3307 0014 7047     		bx	lr
 3308              	.LVL290:
 3309              	.L332:
3319:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3310              		.loc 1 3319 0
 3311 0016 0020     		movs	r0, #0
 3312              	.LVL291:
3323:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3313              		.loc 1 3323 0
 3314 0018 7047     		bx	lr
 3315              	.L334:
 3316 001a 00BF     		.align	2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 155


 3317              	.L333:
 3318 001c 00000000 		.word	.LANCHOR0
 3319              		.cfi_endproc
 3320              	.LFE162:
 3321              		.size	pvTaskGetThreadLocalStoragePointer, .-pvTaskGetThreadLocalStoragePointer
 3322              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 3323              		.align	2
 3324              		.global	xTaskGetCurrentTaskHandle
 3325              		.thumb
 3326              		.thumb_func
 3327              		.type	xTaskGetCurrentTaskHandle, %function
 3328              	xTaskGetCurrentTaskHandle:
 3329              	.LFB167:
3673:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TaskHandle_t xReturn;
 3330              		.loc 1 3673 0
 3331              		.cfi_startproc
 3332              		@ args = 0, pretend = 0, frame = 0
 3333              		@ frame_needed = 0, uses_anonymous_args = 0
 3334              		@ link register save eliminated.
3679:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3335              		.loc 1 3679 0
 3336 0000 014B     		ldr	r3, .L336
 3337 0002 D3F80001 		ldr	r0, [r3, #256]
 3338              	.LVL292:
3682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3339              		.loc 1 3682 0
 3340 0006 7047     		bx	lr
 3341              	.L337:
 3342              		.align	2
 3343              	.L336:
 3344 0008 00000000 		.word	.LANCHOR0
 3345              		.cfi_endproc
 3346              	.LFE167:
 3347              		.size	xTaskGetCurrentTaskHandle, .-xTaskGetCurrentTaskHandle
 3348              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 3349              		.align	2
 3350              		.global	xTaskGetSchedulerState
 3351              		.thumb
 3352              		.thumb_func
 3353              		.type	xTaskGetSchedulerState, %function
 3354              	xTaskGetSchedulerState:
 3355              	.LFB168:
3690:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3356              		.loc 1 3690 0
 3357              		.cfi_startproc
 3358              		@ args = 0, pretend = 0, frame = 0
 3359              		@ frame_needed = 0, uses_anonymous_args = 0
 3360              		@ link register save eliminated.
3693:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3361              		.loc 1 3693 0
 3362 0000 064B     		ldr	r3, .L342
 3363 0002 D3F80431 		ldr	r3, [r3, #260]
 3364 0006 2BB1     		cbz	r3, .L340
3699:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3365              		.loc 1 3699 0
 3366 0008 044B     		ldr	r3, .L342
 3367 000a D3F81831 		ldr	r3, [r3, #280]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 156


 3368 000e 1BB9     		cbnz	r3, .L341
3701:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3369              		.loc 1 3701 0
 3370 0010 0220     		movs	r0, #2
 3371 0012 7047     		bx	lr
 3372              	.L340:
3695:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3373              		.loc 1 3695 0
 3374 0014 0120     		movs	r0, #1
 3375 0016 7047     		bx	lr
 3376              	.L341:
3705:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3377              		.loc 1 3705 0
 3378 0018 0020     		movs	r0, #0
 3379              	.LVL293:
3710:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3380              		.loc 1 3710 0
 3381 001a 7047     		bx	lr
 3382              	.L343:
 3383              		.align	2
 3384              	.L342:
 3385 001c 00000000 		.word	.LANCHOR0
 3386              		.cfi_endproc
 3387              	.LFE168:
 3388              		.size	xTaskGetSchedulerState, .-xTaskGetSchedulerState
 3389              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 3390              		.align	2
 3391              		.global	uxTaskResetEventItemValue
 3392              		.thumb
 3393              		.thumb_func
 3394              		.type	uxTaskResetEventItemValue, %function
 3395              	uxTaskResetEventItemValue:
 3396              	.LFB169:
4174:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** TickType_t uxReturn;
 3397              		.loc 1 4174 0
 3398              		.cfi_startproc
 3399              		@ args = 0, pretend = 0, frame = 0
 3400              		@ frame_needed = 0, uses_anonymous_args = 0
 3401              		@ link register save eliminated.
4177:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3402              		.loc 1 4177 0
 3403 0000 064B     		ldr	r3, .L345
 3404 0002 D3F80021 		ldr	r2, [r3, #256]
 3405 0006 9069     		ldr	r0, [r2, #24]
 3406              	.LVL294:
4181:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3407              		.loc 1 4181 0
 3408 0008 D3F80021 		ldr	r2, [r3, #256]
 3409 000c D3F80031 		ldr	r3, [r3, #256]
 3410 0010 DB6A     		ldr	r3, [r3, #44]
 3411 0012 C3F10703 		rsb	r3, r3, #7
 3412 0016 9361     		str	r3, [r2, #24]
4184:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** /*-----------------------------------------------------------*/
 3413              		.loc 1 4184 0
 3414 0018 7047     		bx	lr
 3415              	.L346:
 3416 001a 00BF     		.align	2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 157


 3417              	.L345:
 3418 001c 00000000 		.word	.LANCHOR0
 3419              		.cfi_endproc
 3420              	.LFE169:
 3421              		.size	uxTaskResetEventItemValue, .-uxTaskResetEventItemValue
 3422              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 3423              		.align	2
 3424              		.global	ulTaskNotifyTake
 3425              		.thumb
 3426              		.thumb_func
 3427              		.type	ulTaskNotifyTake, %function
 3428              	ulTaskNotifyTake:
 3429              	.LFB170:
4207:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint32_t ulReturn;
 3430              		.loc 1 4207 0
 3431              		.cfi_startproc
 3432              		@ args = 0, pretend = 0, frame = 0
 3433              		@ frame_needed = 0, uses_anonymous_args = 0
 3434              	.LVL295:
 3435 0000 38B5     		push	{r3, r4, r5, lr}
 3436              		.cfi_def_cfa_offset 16
 3437              		.cfi_offset 3, -16
 3438              		.cfi_offset 4, -12
 3439              		.cfi_offset 5, -8
 3440              		.cfi_offset 14, -4
 3441 0002 0546     		mov	r5, r0
 3442 0004 0C46     		mov	r4, r1
4210:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3443              		.loc 1 4210 0
 3444 0006 FFF7FEFF 		bl	vPortEnterCritical
 3445              	.LVL296:
4213:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3446              		.loc 1 4213 0
 3447 000a 1B4B     		ldr	r3, .L352
 3448 000c D3F80031 		ldr	r3, [r3, #256]
 3449 0010 9B6D     		ldr	r3, [r3, #88]
 3450 0012 93B9     		cbnz	r3, .L348
4216:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3451              		.loc 1 4216 0
 3452 0014 184B     		ldr	r3, .L352
 3453 0016 D3F80031 		ldr	r3, [r3, #256]
 3454 001a 0122     		movs	r2, #1
 3455 001c 83F85C20 		strb	r2, [r3, #92]
4218:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3456              		.loc 1 4218 0
 3457 0020 5CB1     		cbz	r4, .L348
4220:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
 3458              		.loc 1 4220 0
 3459 0022 1146     		mov	r1, r2
 3460 0024 2046     		mov	r0, r4
 3461 0026 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3462              	.LVL297:
4227:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3463              		.loc 1 4227 0
 3464 002a 4FF08052 		mov	r2, #268435456
 3465 002e 134B     		ldr	r3, .L352+4
 3466 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 158


 3467              		.syntax unified
 3468              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3469 0032 BFF34F8F 		dsb
 3470              	@ 0 "" 2
 3471              	@ 4227 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3472 0036 BFF36F8F 		isb
 3473              	@ 0 "" 2
 3474              		.thumb
 3475              		.syntax unified
 3476              	.L348:
4239:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3477              		.loc 1 4239 0
 3478 003a FFF7FEFF 		bl	vPortExitCritical
 3479              	.LVL298:
4241:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3480              		.loc 1 4241 0
 3481 003e FFF7FEFF 		bl	vPortEnterCritical
 3482              	.LVL299:
4244:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3483              		.loc 1 4244 0
 3484 0042 0D4B     		ldr	r3, .L352
 3485 0044 D3F80031 		ldr	r3, [r3, #256]
 3486 0048 9C6D     		ldr	r4, [r3, #88]
 3487              	.LVL300:
4246:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3488              		.loc 1 4246 0
 3489 004a 5CB1     		cbz	r4, .L349
4248:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3490              		.loc 1 4248 0
 3491 004c 2DB1     		cbz	r5, .L350
4250:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3492              		.loc 1 4250 0
 3493 004e 0A4B     		ldr	r3, .L352
 3494 0050 D3F80031 		ldr	r3, [r3, #256]
 3495 0054 0022     		movs	r2, #0
 3496 0056 9A65     		str	r2, [r3, #88]
 3497 0058 04E0     		b	.L349
 3498              	.L350:
4254:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3499              		.loc 1 4254 0
 3500 005a 074B     		ldr	r3, .L352
 3501 005c D3F80031 		ldr	r3, [r3, #256]
 3502 0060 621E     		subs	r2, r4, #1
 3503 0062 9A65     		str	r2, [r3, #88]
 3504              	.L349:
4262:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3505              		.loc 1 4262 0
 3506 0064 044B     		ldr	r3, .L352
 3507 0066 D3F80031 		ldr	r3, [r3, #256]
 3508 006a 0022     		movs	r2, #0
 3509 006c 83F85C20 		strb	r2, [r3, #92]
4264:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3510              		.loc 1 4264 0
 3511 0070 FFF7FEFF 		bl	vPortExitCritical
 3512              	.LVL301:
4267:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3513              		.loc 1 4267 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 159


 3514 0074 2046     		mov	r0, r4
 3515 0076 38BD     		pop	{r3, r4, r5, pc}
 3516              	.LVL302:
 3517              	.L353:
 3518              		.align	2
 3519              	.L352:
 3520 0078 00000000 		.word	.LANCHOR0
 3521 007c 04ED00E0 		.word	-536810236
 3522              		.cfi_endproc
 3523              	.LFE170:
 3524              		.size	ulTaskNotifyTake, .-ulTaskNotifyTake
 3525              		.section	.text.xTaskNotifyWait,"ax",%progbits
 3526              		.align	2
 3527              		.global	xTaskNotifyWait
 3528              		.thumb
 3529              		.thumb_func
 3530              		.type	xTaskNotifyWait, %function
 3531              	xTaskNotifyWait:
 3532              	.LFB171:
4275:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	BaseType_t xReturn;
 3533              		.loc 1 4275 0
 3534              		.cfi_startproc
 3535              		@ args = 0, pretend = 0, frame = 0
 3536              		@ frame_needed = 0, uses_anonymous_args = 0
 3537              	.LVL303:
 3538 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3539              		.cfi_def_cfa_offset 24
 3540              		.cfi_offset 3, -24
 3541              		.cfi_offset 4, -20
 3542              		.cfi_offset 5, -16
 3543              		.cfi_offset 6, -12
 3544              		.cfi_offset 7, -8
 3545              		.cfi_offset 14, -4
 3546 0002 0746     		mov	r7, r0
 3547 0004 0C46     		mov	r4, r1
 3548 0006 1546     		mov	r5, r2
 3549 0008 1E46     		mov	r6, r3
4278:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3550              		.loc 1 4278 0
 3551 000a FFF7FEFF 		bl	vPortEnterCritical
 3552              	.LVL304:
4281:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3553              		.loc 1 4281 0
 3554 000e 234B     		ldr	r3, .L360
 3555 0010 D3F80031 		ldr	r3, [r3, #256]
 3556 0014 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3557 0018 DBB2     		uxtb	r3, r3
 3558 001a 022B     		cmp	r3, #2
 3559 001c 18D0     		beq	.L355
4286:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3560              		.loc 1 4286 0
 3561 001e 1F4B     		ldr	r3, .L360
 3562 0020 D3F80021 		ldr	r2, [r3, #256]
 3563 0024 906D     		ldr	r0, [r2, #88]
 3564 0026 20EA0700 		bic	r0, r0, r7
 3565 002a 9065     		str	r0, [r2, #88]
4289:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 160


 3566              		.loc 1 4289 0
 3567 002c D3F80031 		ldr	r3, [r3, #256]
 3568 0030 0122     		movs	r2, #1
 3569 0032 83F85C20 		strb	r2, [r3, #92]
4291:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3570              		.loc 1 4291 0
 3571 0036 5EB1     		cbz	r6, .L355
4293:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
 3572              		.loc 1 4293 0
 3573 0038 1146     		mov	r1, r2
 3574 003a 3046     		mov	r0, r6
 3575 003c FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 3576              	.LVL305:
4300:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3577              		.loc 1 4300 0
 3578 0040 4FF08052 		mov	r2, #268435456
 3579 0044 164B     		ldr	r3, .L360+4
 3580 0046 1A60     		str	r2, [r3]
 3581              		.syntax unified
 3582              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3583 0048 BFF34F8F 		dsb
 3584              	@ 0 "" 2
 3585              	@ 4300 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3586 004c BFF36F8F 		isb
 3587              	@ 0 "" 2
 3588              		.thumb
 3589              		.syntax unified
 3590              	.L355:
4312:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3591              		.loc 1 4312 0
 3592 0050 FFF7FEFF 		bl	vPortExitCritical
 3593              	.LVL306:
4314:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3594              		.loc 1 4314 0
 3595 0054 FFF7FEFF 		bl	vPortEnterCritical
 3596              	.LVL307:
4318:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3597              		.loc 1 4318 0
 3598 0058 25B1     		cbz	r5, .L356
4322:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3599              		.loc 1 4322 0
 3600 005a 104B     		ldr	r3, .L360
 3601 005c D3F80031 		ldr	r3, [r3, #256]
 3602 0060 9B6D     		ldr	r3, [r3, #88]
 3603 0062 2B60     		str	r3, [r5]
 3604              	.L356:
4329:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3605              		.loc 1 4329 0
 3606 0064 0D4B     		ldr	r3, .L360
 3607 0066 D3F80031 		ldr	r3, [r3, #256]
 3608 006a 93F85C30 		ldrb	r3, [r3, #92]	@ zero_extendqisi2
 3609 006e DBB2     		uxtb	r3, r3
 3610 0070 012B     		cmp	r3, #1
 3611 0072 08D0     		beq	.L358
4338:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdTRUE;
 3612              		.loc 1 4338 0
 3613 0074 094B     		ldr	r3, .L360
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 161


 3614 0076 D3F80031 		ldr	r3, [r3, #256]
 3615 007a 996D     		ldr	r1, [r3, #88]
 3616 007c 21EA0401 		bic	r1, r1, r4
 3617 0080 9965     		str	r1, [r3, #88]
 3618              	.LVL308:
4339:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3619              		.loc 1 4339 0
 3620 0082 0124     		movs	r4, #1
 3621              	.LVL309:
 3622 0084 00E0     		b	.L357
 3623              	.LVL310:
 3624              	.L358:
4332:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3625              		.loc 1 4332 0
 3626 0086 0024     		movs	r4, #0
 3627              	.LVL311:
 3628              	.L357:
4342:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		}
 3629              		.loc 1 4342 0
 3630 0088 044B     		ldr	r3, .L360
 3631 008a D3F80031 		ldr	r3, [r3, #256]
 3632 008e 0022     		movs	r2, #0
 3633 0090 83F85C20 		strb	r2, [r3, #92]
4344:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3634              		.loc 1 4344 0
 3635 0094 FFF7FEFF 		bl	vPortExitCritical
 3636              	.LVL312:
4347:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3637              		.loc 1 4347 0
 3638 0098 2046     		mov	r0, r4
 3639 009a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3640              	.LVL313:
 3641              	.L361:
 3642              		.align	2
 3643              	.L360:
 3644 009c 00000000 		.word	.LANCHOR0
 3645 00a0 04ED00E0 		.word	-536810236
 3646              		.cfi_endproc
 3647              	.LFE171:
 3648              		.size	xTaskNotifyWait, .-xTaskNotifyWait
 3649              		.section	.text.xTaskGenericNotify,"ax",%progbits
 3650              		.align	2
 3651              		.global	xTaskGenericNotify
 3652              		.thumb
 3653              		.thumb_func
 3654              		.type	xTaskGenericNotify, %function
 3655              	xTaskGenericNotify:
 3656              	.LFB172:
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3657              		.loc 1 4355 0
 3658              		.cfi_startproc
 3659              		@ args = 0, pretend = 0, frame = 0
 3660              		@ frame_needed = 0, uses_anonymous_args = 0
 3661              	.LVL314:
4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3662              		.loc 1 4360 0
 3663 0000 08B9     		cbnz	r0, .L363
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 162


4360:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		pxTCB = ( TCB_t * ) xTaskToNotify;
 3664              		.loc 1 4360 0 is_stmt 0 discriminator 1
 3665              		.syntax unified
 3666              	@ 4360 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3667 0002 72B6     		 cpsid i 
 3668              	@ 0 "" 2
 3669              		.thumb
 3670              		.syntax unified
 3671              	.L364:
 3672 0004 FEE7     		b	.L364
 3673              	.L363:
4355:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3674              		.loc 1 4355 0 is_stmt 1
 3675 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3676              		.cfi_def_cfa_offset 24
 3677              		.cfi_offset 3, -24
 3678              		.cfi_offset 4, -20
 3679              		.cfi_offset 5, -16
 3680              		.cfi_offset 6, -12
 3681              		.cfi_offset 7, -8
 3682              		.cfi_offset 14, -4
 3683 0008 0446     		mov	r4, r0
 3684 000a 1F46     		mov	r7, r3
 3685 000c 1546     		mov	r5, r2
 3686 000e 0E46     		mov	r6, r1
 3687              	.LVL315:
4363:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 3688              		.loc 1 4363 0
 3689 0010 FFF7FEFF 		bl	vPortEnterCritical
 3690              	.LVL316:
4365:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3691              		.loc 1 4365 0
 3692 0014 0FB1     		cbz	r7, .L365
4367:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3693              		.loc 1 4367 0
 3694 0016 A36D     		ldr	r3, [r4, #88]
 3695 0018 3B60     		str	r3, [r7]
 3696              	.L365:
4370:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3697              		.loc 1 4370 0
 3698 001a 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3699 001e DBB2     		uxtb	r3, r3
 3700              	.LVL317:
4372:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3701              		.loc 1 4372 0
 3702 0020 0222     		movs	r2, #2
 3703 0022 84F85C20 		strb	r2, [r4, #92]
4374:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3704              		.loc 1 4374 0
 3705 0026 6A1E     		subs	r2, r5, #1
 3706 0028 032A     		cmp	r2, #3
 3707 002a 15D8     		bhi	.L376
 3708 002c DFE802F0 		tbb	[pc, r2]
 3709              	.L368:
 3710 0030 02       		.byte	(.L367-.L368)/2
 3711 0031 07       		.byte	(.L369-.L368)/2
 3712 0032 0C       		.byte	(.L370-.L368)/2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 163


 3713 0033 0F       		.byte	(.L371-.L368)/2
 3714              		.p2align 1
 3715              	.L367:
4377:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3716              		.loc 1 4377 0
 3717 0034 A26D     		ldr	r2, [r4, #88]
 3718 0036 1643     		orrs	r6, r6, r2
 3719              	.LVL318:
 3720 0038 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3721              		.loc 1 4357 0
 3722 003a 0125     		movs	r5, #1
4378:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3723              		.loc 1 4378 0
 3724 003c 0FE0     		b	.L366
 3725              	.LVL319:
 3726              	.L369:
4381:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3727              		.loc 1 4381 0
 3728 003e A26D     		ldr	r2, [r4, #88]
 3729 0040 0132     		adds	r2, r2, #1
 3730 0042 A265     		str	r2, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3731              		.loc 1 4357 0
 3732 0044 0125     		movs	r5, #1
4382:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3733              		.loc 1 4382 0
 3734 0046 0AE0     		b	.L366
 3735              	.L370:
4385:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3736              		.loc 1 4385 0
 3737 0048 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3738              		.loc 1 4357 0
 3739 004a 0125     		movs	r5, #1
4386:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3740              		.loc 1 4386 0
 3741 004c 07E0     		b	.L366
 3742              	.L371:
4389:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3743              		.loc 1 4389 0
 3744 004e 022B     		cmp	r3, #2
 3745 0050 04D0     		beq	.L377
4391:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3746              		.loc 1 4391 0
 3747 0052 A665     		str	r6, [r4, #88]
4357:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
 3748              		.loc 1 4357 0
 3749 0054 0125     		movs	r5, #1
 3750 0056 02E0     		b	.L366
 3751              	.L376:
 3752 0058 0125     		movs	r5, #1
 3753 005a 00E0     		b	.L366
 3754              	.L377:
4396:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3755              		.loc 1 4396 0
 3756 005c 0025     		movs	r5, #0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 164


 3757              	.LVL320:
 3758              	.L366:
4410:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3759              		.loc 1 4410 0
 3760 005e 012B     		cmp	r3, #1
 3761 0060 27D1     		bne	.L372
4412:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 3762              		.loc 1 4412 0
 3763 0062 261D     		adds	r6, r4, #4
 3764 0064 3046     		mov	r0, r6
 3765 0066 FFF7FEFF 		bl	uxListRemove
 3766              	.LVL321:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3767              		.loc 1 4413 0
 3768 006a E36A     		ldr	r3, [r4, #44]
 3769 006c 134A     		ldr	r2, .L379
 3770 006e D2F80C21 		ldr	r2, [r2, #268]
 3771 0072 9342     		cmp	r3, r2
 3772 0074 02D9     		bls	.L373
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3773              		.loc 1 4413 0 is_stmt 0 discriminator 1
 3774 0076 114A     		ldr	r2, .L379
 3775 0078 C2F80C31 		str	r3, [r2, #268]
 3776              	.L373:
4413:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3777              		.loc 1 4413 0 discriminator 3
 3778 007c 03EB8303 		add	r3, r3, r3, lsl #2
 3779 0080 9A00     		lsls	r2, r3, #2
 3780 0082 3146     		mov	r1, r6
 3781 0084 0E48     		ldr	r0, .L379+4
 3782 0086 1044     		add	r0, r0, r2
 3783 0088 FFF7FEFF 		bl	vListInsertEnd
 3784              	.LVL322:
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3785              		.loc 1 4416 0 is_stmt 1 discriminator 3
 3786 008c A36A     		ldr	r3, [r4, #40]
 3787 008e 0BB1     		cbz	r3, .L374
4416:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3788              		.loc 1 4416 0 is_stmt 0 discriminator 1
 3789              		.syntax unified
 3790              	@ 4416 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3791 0090 72B6     		 cpsid i 
 3792              	@ 0 "" 2
 3793              		.thumb
 3794              		.syntax unified
 3795              	.L375:
 3796 0092 FEE7     		b	.L375
 3797              	.L374:
4434:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3798              		.loc 1 4434 0 is_stmt 1
 3799 0094 E26A     		ldr	r2, [r4, #44]
 3800 0096 094B     		ldr	r3, .L379
 3801 0098 D3F80031 		ldr	r3, [r3, #256]
 3802 009c DB6A     		ldr	r3, [r3, #44]
 3803 009e 9A42     		cmp	r2, r3
 3804 00a0 07D9     		bls	.L372
4438:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 165


 3805              		.loc 1 4438 0
 3806 00a2 4FF08052 		mov	r2, #268435456
 3807 00a6 074B     		ldr	r3, .L379+8
 3808 00a8 1A60     		str	r2, [r3]
 3809              		.syntax unified
 3810              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3811 00aa BFF34F8F 		dsb
 3812              	@ 0 "" 2
 3813              	@ 4438 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3814 00ae BFF36F8F 		isb
 3815              	@ 0 "" 2
 3816              		.thumb
 3817              		.syntax unified
 3818              	.L372:
4450:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3819              		.loc 1 4450 0
 3820 00b2 FFF7FEFF 		bl	vPortExitCritical
 3821              	.LVL323:
4453:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3822              		.loc 1 4453 0
 3823 00b6 2846     		mov	r0, r5
 3824 00b8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3825              	.LVL324:
 3826              	.L380:
 3827 00ba 00BF     		.align	2
 3828              	.L379:
 3829 00bc 00000000 		.word	.LANCHOR0
 3830 00c0 30000000 		.word	.LANCHOR0+48
 3831 00c4 04ED00E0 		.word	-536810236
 3832              		.cfi_endproc
 3833              	.LFE172:
 3834              		.size	xTaskGenericNotify, .-xTaskGenericNotify
 3835              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 3836              		.align	2
 3837              		.global	xTaskGenericNotifyFromISR
 3838              		.thumb
 3839              		.thumb_func
 3840              		.type	xTaskGenericNotifyFromISR, %function
 3841              	xTaskGenericNotifyFromISR:
 3842              	.LFB173:
4461:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 3843              		.loc 1 4461 0
 3844              		.cfi_startproc
 3845              		@ args = 4, pretend = 0, frame = 0
 3846              		@ frame_needed = 0, uses_anonymous_args = 0
 3847              	.LVL325:
 3848 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3849              		.cfi_def_cfa_offset 32
 3850              		.cfi_offset 3, -32
 3851              		.cfi_offset 4, -28
 3852              		.cfi_offset 5, -24
 3853              		.cfi_offset 6, -20
 3854              		.cfi_offset 7, -16
 3855              		.cfi_offset 8, -12
 3856              		.cfi_offset 9, -8
 3857              		.cfi_offset 14, -4
 3858 0004 089E     		ldr	r6, [sp, #32]
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 166


 3859              	.LVL326:
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3860              		.loc 1 4467 0
 3861 0006 08B9     		cbnz	r0, .L382
4467:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3862              		.loc 1 4467 0 is_stmt 0 discriminator 1
 3863              		.syntax unified
 3864              	@ 4467 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3865 0008 72B6     		 cpsid i 
 3866              	@ 0 "" 2
 3867              		.thumb
 3868              		.syntax unified
 3869              	.L383:
 3870 000a FEE7     		b	.L383
 3871              	.L382:
 3872 000c 0446     		mov	r4, r0
 3873 000e 9946     		mov	r9, r3
 3874 0010 1546     		mov	r5, r2
 3875 0012 8846     		mov	r8, r1
4485:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3876              		.loc 1 4485 0 is_stmt 1
 3877 0014 FFF7FEFF 		bl	vPortValidateInterruptPriority
 3878              	.LVL327:
 3879              	.LBB40:
 3880              	.LBB41:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
 3881              		.loc 2 215 0
 3882              		.syntax unified
 3883              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 3884 0018 EFF31187 		    mrs r7, basepri                                            
 3885 001c 4FF0BF03 	    mov r3, #191                                                 
 3886 0020 83F31188 	    msr basepri, r3                                            
 3887 0024 BFF36F8F 	    isb                                                        
 3888 0028 BFF34F8F 	    dsb                                                        
 3889              	
 3890              	@ 0 "" 2
 3891              		.thumb
 3892              		.syntax unified
 3893              	.LBE41:
 3894              	.LBE40:
4491:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3895              		.loc 1 4491 0
 3896 002c B9F1000F 		cmp	r9, #0
 3897 0030 02D0     		beq	.L384
4493:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 3898              		.loc 1 4493 0
 3899 0032 A36D     		ldr	r3, [r4, #88]
 3900 0034 C9F80030 		str	r3, [r9]
 3901              	.L384:
4496:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 3902              		.loc 1 4496 0
 3903 0038 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 3904 003c DBB2     		uxtb	r3, r3
 3905              	.LVL328:
4497:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3906              		.loc 1 4497 0
 3907 003e 0222     		movs	r2, #2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 167


 3908 0040 84F85C20 		strb	r2, [r4, #92]
4499:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3909              		.loc 1 4499 0
 3910 0044 6A1E     		subs	r2, r5, #1
 3911 0046 032A     		cmp	r2, #3
 3912 0048 18D8     		bhi	.L398
 3913 004a DFE802F0 		tbb	[pc, r2]
 3914              	.L387:
 3915 004e 02       		.byte	(.L386-.L387)/2
 3916 004f 08       		.byte	(.L388-.L387)/2
 3917 0050 0D       		.byte	(.L389-.L387)/2
 3918 0051 11       		.byte	(.L390-.L387)/2
 3919              		.p2align 1
 3920              	.L386:
4502:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3921              		.loc 1 4502 0
 3922 0052 A26D     		ldr	r2, [r4, #88]
 3923 0054 42EA0802 		orr	r2, r2, r8
 3924 0058 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3925              		.loc 1 4464 0
 3926 005a 0125     		movs	r5, #1
4503:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3927              		.loc 1 4503 0
 3928 005c 11E0     		b	.L385
 3929              	.L388:
4506:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3930              		.loc 1 4506 0
 3931 005e A26D     		ldr	r2, [r4, #88]
 3932 0060 0132     		adds	r2, r2, #1
 3933 0062 A265     		str	r2, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3934              		.loc 1 4464 0
 3935 0064 0125     		movs	r5, #1
4507:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3936              		.loc 1 4507 0
 3937 0066 0CE0     		b	.L385
 3938              	.L389:
4510:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					break;
 3939              		.loc 1 4510 0
 3940 0068 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3941              		.loc 1 4464 0
 3942 006c 0125     		movs	r5, #1
4511:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3943              		.loc 1 4511 0
 3944 006e 08E0     		b	.L385
 3945              	.L390:
4514:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 3946              		.loc 1 4514 0
 3947 0070 022B     		cmp	r3, #2
 3948 0072 05D0     		beq	.L399
4516:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3949              		.loc 1 4516 0
 3950 0074 C4F85880 		str	r8, [r4, #88]
4464:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
 3951              		.loc 1 4464 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 168


 3952 0078 0125     		movs	r5, #1
 3953 007a 02E0     		b	.L385
 3954              	.L398:
 3955 007c 0125     		movs	r5, #1
 3956 007e 00E0     		b	.L385
 3957              	.L399:
4521:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 3958              		.loc 1 4521 0
 3959 0080 0025     		movs	r5, #0
 3960              	.L385:
 3961              	.LVL329:
4535:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 3962              		.loc 1 4535 0
 3963 0082 012B     		cmp	r3, #1
 3964 0084 32D1     		bne	.L391
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3965              		.loc 1 4538 0
 3966 0086 A36A     		ldr	r3, [r4, #40]
 3967              	.LVL330:
 3968 0088 0BB1     		cbz	r3, .L392
4538:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 3969              		.loc 1 4538 0 is_stmt 0 discriminator 1
 3970              		.syntax unified
 3971              	@ 4538 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 3972 008a 72B6     		 cpsid i 
 3973              	@ 0 "" 2
 3974              		.thumb
 3975              		.syntax unified
 3976              	.L393:
 3977 008c FEE7     		b	.L393
 3978              	.L392:
4540:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 3979              		.loc 1 4540 0 is_stmt 1
 3980 008e 1A4B     		ldr	r3, .L401
 3981 0090 D3F81831 		ldr	r3, [r3, #280]
 3982 0094 B3B9     		cbnz	r3, .L394
4542:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3983              		.loc 1 4542 0
 3984 0096 04F10408 		add	r8, r4, #4
 3985              	.LVL331:
 3986 009a 4046     		mov	r0, r8
 3987 009c FFF7FEFF 		bl	uxListRemove
 3988              	.LVL332:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3989              		.loc 1 4543 0
 3990 00a0 E36A     		ldr	r3, [r4, #44]
 3991 00a2 154A     		ldr	r2, .L401
 3992 00a4 D2F80C21 		ldr	r2, [r2, #268]
 3993 00a8 9342     		cmp	r3, r2
 3994 00aa 02D9     		bls	.L395
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3995              		.loc 1 4543 0 is_stmt 0 discriminator 1
 3996 00ac 124A     		ldr	r2, .L401
 3997 00ae C2F80C31 		str	r3, [r2, #268]
 3998              	.L395:
4543:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 3999              		.loc 1 4543 0 discriminator 3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 169


 4000 00b2 03EB8303 		add	r3, r3, r3, lsl #2
 4001 00b6 9A00     		lsls	r2, r3, #2
 4002 00b8 4146     		mov	r1, r8
 4003 00ba 1048     		ldr	r0, .L401+4
 4004 00bc 1044     		add	r0, r0, r2
 4005 00be FFF7FEFF 		bl	vListInsertEnd
 4006              	.LVL333:
 4007 00c2 04E0     		b	.L396
 4008              	.LVL334:
 4009              	.L394:
4549:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4010              		.loc 1 4549 0 is_stmt 1
 4011 00c4 04F11801 		add	r1, r4, #24
 4012 00c8 0D48     		ldr	r0, .L401+8
 4013 00ca FFF7FEFF 		bl	vListInsertEnd
 4014              	.LVL335:
 4015              	.L396:
4552:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4016              		.loc 1 4552 0
 4017 00ce E26A     		ldr	r2, [r4, #44]
 4018 00d0 094B     		ldr	r3, .L401
 4019 00d2 D3F80031 		ldr	r3, [r3, #256]
 4020 00d6 DB6A     		ldr	r3, [r3, #44]
 4021 00d8 9A42     		cmp	r2, r3
 4022 00da 07D9     		bls	.L391
4556:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4023              		.loc 1 4556 0
 4024 00dc 16B1     		cbz	r6, .L397
4558:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4025              		.loc 1 4558 0
 4026 00de 0123     		movs	r3, #1
 4027 00e0 3360     		str	r3, [r6]
 4028 00e2 03E0     		b	.L391
 4029              	.L397:
4565:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4030              		.loc 1 4565 0
 4031 00e4 0122     		movs	r2, #1
 4032 00e6 044B     		ldr	r3, .L401
 4033 00e8 C3F82821 		str	r2, [r3, #296]
 4034              	.L391:
 4035              	.LVL336:
 4036              	.LBB42:
 4037              	.LBB43:
 4038              		.loc 2 233 0
 4039              		.syntax unified
 4040              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4041 00ec 87F31188 		    msr basepri, r7  
 4042              	@ 0 "" 2
 4043              	.LVL337:
 4044              		.thumb
 4045              		.syntax unified
 4046              	.LBE43:
 4047              	.LBE42:
4577:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4048              		.loc 1 4577 0
 4049 00f0 2846     		mov	r0, r5
 4050 00f2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 170


 4051              	.LVL338:
 4052              	.L402:
 4053 00f6 00BF     		.align	2
 4054              	.L401:
 4055 00f8 00000000 		.word	.LANCHOR0
 4056 00fc 30000000 		.word	.LANCHOR0+48
 4057 0100 14000000 		.word	.LANCHOR0+20
 4058              		.cfi_endproc
 4059              	.LFE173:
 4060              		.size	xTaskGenericNotifyFromISR, .-xTaskGenericNotifyFromISR
 4061              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 4062              		.align	2
 4063              		.global	vTaskNotifyGiveFromISR
 4064              		.thumb
 4065              		.thumb_func
 4066              		.type	vTaskNotifyGiveFromISR, %function
 4067              	vTaskNotifyGiveFromISR:
 4068              	.LFB174:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4069              		.loc 1 4585 0
 4070              		.cfi_startproc
 4071              		@ args = 0, pretend = 0, frame = 0
 4072              		@ frame_needed = 0, uses_anonymous_args = 0
 4073              	.LVL339:
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4074              		.loc 1 4590 0
 4075 0000 08B9     		cbnz	r0, .L404
4590:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4076              		.loc 1 4590 0 is_stmt 0 discriminator 1
 4077              		.syntax unified
 4078              	@ 4590 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4079 0002 72B6     		 cpsid i 
 4080              	@ 0 "" 2
 4081              		.thumb
 4082              		.syntax unified
 4083              	.L405:
 4084 0004 FEE7     		b	.L405
 4085              	.L404:
4585:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t * pxTCB;
 4086              		.loc 1 4585 0 is_stmt 1
 4087 0006 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4088              		.cfi_def_cfa_offset 24
 4089              		.cfi_offset 3, -24
 4090              		.cfi_offset 4, -20
 4091              		.cfi_offset 5, -16
 4092              		.cfi_offset 6, -12
 4093              		.cfi_offset 7, -8
 4094              		.cfi_offset 14, -4
 4095 0008 0446     		mov	r4, r0
 4096 000a 0D46     		mov	r5, r1
4608:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4097              		.loc 1 4608 0
 4098 000c FFF7FEFF 		bl	vPortValidateInterruptPriority
 4099              	.LVL340:
 4100              	.LBB44:
 4101              	.LBB45:
 215:Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h ****     (
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 171


 4102              		.loc 2 215 0
 4103              		.syntax unified
 4104              	@ 215 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4105 0010 EFF31186 		    mrs r6, basepri                                            
 4106 0014 4FF0BF03 	    mov r3, #191                                                 
 4107 0018 83F31188 	    msr basepri, r3                                            
 4108 001c BFF36F8F 	    isb                                                        
 4109 0020 BFF34F8F 	    dsb                                                        
 4110              	
 4111              	@ 0 "" 2
 4112              		.thumb
 4113              		.syntax unified
 4114              	.LBE45:
 4115              	.LBE44:
4614:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 4116              		.loc 1 4614 0
 4117 0024 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 4118 0028 DBB2     		uxtb	r3, r3
 4119              	.LVL341:
4615:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4120              		.loc 1 4615 0
 4121 002a 0222     		movs	r2, #2
 4122 002c 84F85C20 		strb	r2, [r4, #92]
4619:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4123              		.loc 1 4619 0
 4124 0030 A26D     		ldr	r2, [r4, #88]
 4125 0032 0132     		adds	r2, r2, #1
 4126 0034 A265     		str	r2, [r4, #88]
4625:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4127              		.loc 1 4625 0
 4128 0036 012B     		cmp	r3, #1
 4129 0038 31D1     		bne	.L406
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4130              		.loc 1 4628 0
 4131 003a A36A     		ldr	r3, [r4, #40]
 4132              	.LVL342:
 4133 003c 0BB1     		cbz	r3, .L407
4628:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4134              		.loc 1 4628 0 is_stmt 0 discriminator 1
 4135              		.syntax unified
 4136              	@ 4628 "Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source\tasks.c" 1
 4137 003e 72B6     		 cpsid i 
 4138              	@ 0 "" 2
 4139              		.thumb
 4140              		.syntax unified
 4141              	.L408:
 4142 0040 FEE7     		b	.L408
 4143              	.L407:
4630:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4144              		.loc 1 4630 0 is_stmt 1
 4145 0042 184B     		ldr	r3, .L414
 4146 0044 D3F81831 		ldr	r3, [r3, #280]
 4147 0048 ABB9     		cbnz	r3, .L409
4632:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 4148              		.loc 1 4632 0
 4149 004a 271D     		adds	r7, r4, #4
 4150 004c 3846     		mov	r0, r7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 172


 4151 004e FFF7FEFF 		bl	uxListRemove
 4152              	.LVL343:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4153              		.loc 1 4633 0
 4154 0052 E36A     		ldr	r3, [r4, #44]
 4155 0054 134A     		ldr	r2, .L414
 4156 0056 D2F80C21 		ldr	r2, [r2, #268]
 4157 005a 9342     		cmp	r3, r2
 4158 005c 02D9     		bls	.L410
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4159              		.loc 1 4633 0 is_stmt 0 discriminator 1
 4160 005e 114A     		ldr	r2, .L414
 4161 0060 C2F80C31 		str	r3, [r2, #268]
 4162              	.L410:
4633:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4163              		.loc 1 4633 0 discriminator 3
 4164 0064 03EB8303 		add	r3, r3, r3, lsl #2
 4165 0068 9A00     		lsls	r2, r3, #2
 4166 006a 3946     		mov	r1, r7
 4167 006c 0E48     		ldr	r0, .L414+4
 4168 006e 1044     		add	r0, r0, r2
 4169 0070 FFF7FEFF 		bl	vListInsertEnd
 4170              	.LVL344:
 4171 0074 04E0     		b	.L411
 4172              	.L409:
4639:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				}
 4173              		.loc 1 4639 0 is_stmt 1
 4174 0076 04F11801 		add	r1, r4, #24
 4175 007a 0C48     		ldr	r0, .L414+8
 4176 007c FFF7FEFF 		bl	vListInsertEnd
 4177              	.LVL345:
 4178              	.L411:
4642:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				{
 4179              		.loc 1 4642 0
 4180 0080 E26A     		ldr	r2, [r4, #44]
 4181 0082 084B     		ldr	r3, .L414
 4182 0084 D3F80031 		ldr	r3, [r3, #256]
 4183 0088 DB6A     		ldr	r3, [r3, #44]
 4184 008a 9A42     		cmp	r2, r3
 4185 008c 07D9     		bls	.L406
4646:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					{
 4186              		.loc 1 4646 0
 4187 008e 15B1     		cbz	r5, .L412
4648:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4188              		.loc 1 4648 0
 4189 0090 0123     		movs	r3, #1
 4190 0092 2B60     		str	r3, [r5]
 4191 0094 03E0     		b	.L406
 4192              	.L412:
4655:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 					}
 4193              		.loc 1 4655 0
 4194 0096 0122     		movs	r2, #1
 4195 0098 024B     		ldr	r3, .L414
 4196 009a C3F82821 		str	r2, [r3, #296]
 4197              	.L406:
 4198              	.LVL346:
 4199              	.LBB46:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 173


 4200              	.LBB47:
 4201              		.loc 2 233 0
 4202              		.syntax unified
 4203              	@ 233 "Generated_Source\PSoC6\pdl\rtos/FreeRTOS/9.0.0/Source/portable/GCC/CM4F/portmacro.h" 1
 4204 009e 86F31188 		    msr basepri, r6  
 4205              	@ 0 "" 2
 4206              	.LVL347:
 4207              		.thumb
 4208              		.syntax unified
 4209 00a2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 4210              	.LVL348:
 4211              	.L415:
 4212              		.align	2
 4213              	.L414:
 4214 00a4 00000000 		.word	.LANCHOR0
 4215 00a8 30000000 		.word	.LANCHOR0+48
 4216 00ac 14000000 		.word	.LANCHOR0+20
 4217              	.LBE47:
 4218              	.LBE46:
 4219              		.cfi_endproc
 4220              	.LFE174:
 4221              		.size	vTaskNotifyGiveFromISR, .-vTaskNotifyGiveFromISR
 4222              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 4223              		.align	2
 4224              		.global	xTaskNotifyStateClear
 4225              		.thumb
 4226              		.thumb_func
 4227              		.type	xTaskNotifyStateClear, %function
 4228              	xTaskNotifyStateClear:
 4229              	.LFB175:
4674:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 	TCB_t *pxTCB;
 4230              		.loc 1 4674 0
 4231              		.cfi_startproc
 4232              		@ args = 0, pretend = 0, frame = 0
 4233              		@ frame_needed = 0, uses_anonymous_args = 0
 4234              	.LVL349:
 4235 0000 10B5     		push	{r4, lr}
 4236              		.cfi_def_cfa_offset 8
 4237              		.cfi_offset 4, -8
 4238              		.cfi_offset 14, -4
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4239              		.loc 1 4680 0
 4240 0002 0446     		mov	r4, r0
 4241 0004 10B9     		cbnz	r0, .L417
4680:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4242              		.loc 1 4680 0 is_stmt 0 discriminator 1
 4243 0006 0A4B     		ldr	r3, .L421
 4244 0008 D3F80041 		ldr	r4, [r3, #256]
 4245              	.LVL350:
 4246              	.L417:
4682:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 		{
 4247              		.loc 1 4682 0 is_stmt 1 discriminator 4
 4248 000c FFF7FEFF 		bl	vPortEnterCritical
 4249              	.LVL351:
4684:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			{
 4250              		.loc 1 4684 0 discriminator 4
 4251 0010 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 174


 4252 0014 DBB2     		uxtb	r3, r3
 4253 0016 022B     		cmp	r3, #2
 4254 0018 04D1     		bne	.L419
4686:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 				xReturn = pdPASS;
 4255              		.loc 1 4686 0
 4256 001a 0023     		movs	r3, #0
 4257 001c 84F85C30 		strb	r3, [r4, #92]
 4258              	.LVL352:
4687:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4259              		.loc 1 4687 0
 4260 0020 0124     		movs	r4, #1
 4261              	.LVL353:
 4262 0022 00E0     		b	.L418
 4263              	.LVL354:
 4264              	.L419:
4691:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 			}
 4265              		.loc 1 4691 0
 4266 0024 0024     		movs	r4, #0
 4267              	.LVL355:
 4268              	.L418:
4694:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4269              		.loc 1 4694 0
 4270 0026 FFF7FEFF 		bl	vPortExitCritical
 4271              	.LVL356:
4697:Generated_Source\PSoC6\pdl\rtos\FreeRTOS\9.0.0\Source/tasks.c **** 
 4272              		.loc 1 4697 0
 4273 002a 2046     		mov	r0, r4
 4274 002c 10BD     		pop	{r4, pc}
 4275              	.LVL357:
 4276              	.L422:
 4277 002e 00BF     		.align	2
 4278              	.L421:
 4279 0030 00000000 		.word	.LANCHOR0
 4280              		.cfi_endproc
 4281              	.LFE175:
 4282              		.size	xTaskNotifyStateClear, .-xTaskNotifyStateClear
 4283              		.global	pxCurrentTCB
 4284              		.section	.rodata.str1.4,"aMS",%progbits,1
 4285              		.align	2
 4286              	.LC0:
 4287 0000 49444C45 		.ascii	"IDLE\000"
 4287      00
 4288              		.bss
 4289              		.align	2
 4290              		.set	.LANCHOR0,. + 0
 4291              		.type	xSuspendedTaskList, %object
 4292              		.size	xSuspendedTaskList, 20
 4293              	xSuspendedTaskList:
 4294 0000 00000000 		.space	20
 4294      00000000 
 4294      00000000 
 4294      00000000 
 4294      00000000 
 4295              		.type	xPendingReadyList, %object
 4296              		.size	xPendingReadyList, 20
 4297              	xPendingReadyList:
 4298 0014 00000000 		.space	20
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 175


 4298      00000000 
 4298      00000000 
 4298      00000000 
 4298      00000000 
 4299              		.type	pxDelayedTaskList, %object
 4300              		.size	pxDelayedTaskList, 4
 4301              	pxDelayedTaskList:
 4302 0028 00000000 		.space	4
 4303              		.type	xNextTaskUnblockTime, %object
 4304              		.size	xNextTaskUnblockTime, 4
 4305              	xNextTaskUnblockTime:
 4306 002c 00000000 		.space	4
 4307              		.type	pxReadyTasksLists, %object
 4308              		.size	pxReadyTasksLists, 140
 4309              	pxReadyTasksLists:
 4310 0030 00000000 		.space	140
 4310      00000000 
 4310      00000000 
 4310      00000000 
 4310      00000000 
 4311              		.type	xDelayedTaskList1, %object
 4312              		.size	xDelayedTaskList1, 20
 4313              	xDelayedTaskList1:
 4314 00bc 00000000 		.space	20
 4314      00000000 
 4314      00000000 
 4314      00000000 
 4314      00000000 
 4315              		.type	xDelayedTaskList2, %object
 4316              		.size	xDelayedTaskList2, 20
 4317              	xDelayedTaskList2:
 4318 00d0 00000000 		.space	20
 4318      00000000 
 4318      00000000 
 4318      00000000 
 4318      00000000 
 4319              		.type	xTasksWaitingTermination, %object
 4320              		.size	xTasksWaitingTermination, 20
 4321              	xTasksWaitingTermination:
 4322 00e4 00000000 		.space	20
 4322      00000000 
 4322      00000000 
 4322      00000000 
 4322      00000000 
 4323              		.type	pxOverflowDelayedTaskList, %object
 4324              		.size	pxOverflowDelayedTaskList, 4
 4325              	pxOverflowDelayedTaskList:
 4326 00f8 00000000 		.space	4
 4327              		.type	uxCurrentNumberOfTasks, %object
 4328              		.size	uxCurrentNumberOfTasks, 4
 4329              	uxCurrentNumberOfTasks:
 4330 00fc 00000000 		.space	4
 4331              		.type	pxCurrentTCB, %object
 4332              		.size	pxCurrentTCB, 4
 4333              	pxCurrentTCB:
 4334 0100 00000000 		.space	4
 4335              		.type	xSchedulerRunning, %object
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 176


 4336              		.size	xSchedulerRunning, 4
 4337              	xSchedulerRunning:
 4338 0104 00000000 		.space	4
 4339              		.type	uxTaskNumber, %object
 4340              		.size	uxTaskNumber, 4
 4341              	uxTaskNumber:
 4342 0108 00000000 		.space	4
 4343              		.type	uxTopReadyPriority, %object
 4344              		.size	uxTopReadyPriority, 4
 4345              	uxTopReadyPriority:
 4346 010c 00000000 		.space	4
 4347              		.type	xTickCount, %object
 4348              		.size	xTickCount, 4
 4349              	xTickCount:
 4350 0110 00000000 		.space	4
 4351              		.type	uxDeletedTasksWaitingCleanUp, %object
 4352              		.size	uxDeletedTasksWaitingCleanUp, 4
 4353              	uxDeletedTasksWaitingCleanUp:
 4354 0114 00000000 		.space	4
 4355              		.type	uxSchedulerSuspended, %object
 4356              		.size	uxSchedulerSuspended, 4
 4357              	uxSchedulerSuspended:
 4358 0118 00000000 		.space	4
 4359              		.type	xIdleTaskHandle, %object
 4360              		.size	xIdleTaskHandle, 4
 4361              	xIdleTaskHandle:
 4362 011c 00000000 		.space	4
 4363              		.type	xNumOfOverflows, %object
 4364              		.size	xNumOfOverflows, 4
 4365              	xNumOfOverflows:
 4366 0120 00000000 		.space	4
 4367              		.type	uxPendedTicks, %object
 4368              		.size	uxPendedTicks, 4
 4369              	uxPendedTicks:
 4370 0124 00000000 		.space	4
 4371              		.type	xYieldPending, %object
 4372              		.size	xYieldPending, 4
 4373              	xYieldPending:
 4374 0128 00000000 		.space	4
 4375              		.text
 4376              	.Letext0:
 4377              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4378              		.file 4 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4379              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 4380              		.file 6 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/projdefs.h"
 4381              		.file 7 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/list.h"
 4382              		.file 8 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/task.h"
 4383              		.file 9 "Generated_Source\\PSoC6\\pdl\\cmsis/include/core_cm4.h"
 4384              		.file 10 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/portable.h"
 4385              		.file 11 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4
 4386              		.file 12 "Generated_Source\\PSoC6\\pdl\\rtos/FreeRTOS/9.0.0/Source/include/timers.h"
 4387              		.section	.debug_info,"",%progbits
 4388              	.Ldebug_info0:
 4389 0000 F01D0000 		.4byte	0x1df0
 4390 0004 0400     		.2byte	0x4
 4391 0006 00000000 		.4byte	.Ldebug_abbrev0
 4392 000a 04       		.byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 177


 4393 000b 01       		.uleb128 0x1
 4394 000c 34080000 		.4byte	.LASF218
 4395 0010 0C       		.byte	0xc
 4396 0011 8F070000 		.4byte	.LASF219
 4397 0015 650C0000 		.4byte	.LASF220
 4398 0019 38000000 		.4byte	.Ldebug_ranges0+0x38
 4399 001d 00000000 		.4byte	0
 4400 0021 00000000 		.4byte	.Ldebug_line0
 4401 0025 02       		.uleb128 0x2
 4402 0026 4D000000 		.4byte	.LASF4
 4403 002a 03       		.byte	0x3
 4404 002b D8       		.byte	0xd8
 4405 002c 30000000 		.4byte	0x30
 4406 0030 03       		.uleb128 0x3
 4407 0031 04       		.byte	0x4
 4408 0032 07       		.byte	0x7
 4409 0033 6A0B0000 		.4byte	.LASF0
 4410 0037 04       		.uleb128 0x4
 4411 0038 04       		.byte	0x4
 4412 0039 05       		.byte	0x5
 4413 003a 696E7400 		.ascii	"int\000"
 4414 003e 03       		.uleb128 0x3
 4415 003f 08       		.byte	0x8
 4416 0040 05       		.byte	0x5
 4417 0041 E8010000 		.4byte	.LASF1
 4418 0045 03       		.uleb128 0x3
 4419 0046 08       		.byte	0x8
 4420 0047 04       		.byte	0x4
 4421 0048 F60A0000 		.4byte	.LASF2
 4422 004c 03       		.uleb128 0x3
 4423 004d 01       		.byte	0x1
 4424 004e 06       		.byte	0x6
 4425 004f CE000000 		.4byte	.LASF3
 4426 0053 02       		.uleb128 0x2
 4427 0054 DA000000 		.4byte	.LASF5
 4428 0058 04       		.byte	0x4
 4429 0059 1D       		.byte	0x1d
 4430 005a 5E000000 		.4byte	0x5e
 4431 005e 03       		.uleb128 0x3
 4432 005f 01       		.byte	0x1
 4433 0060 08       		.byte	0x8
 4434 0061 43090000 		.4byte	.LASF6
 4435 0065 03       		.uleb128 0x3
 4436 0066 02       		.byte	0x2
 4437 0067 05       		.byte	0x5
 4438 0068 7D090000 		.4byte	.LASF7
 4439 006c 02       		.uleb128 0x2
 4440 006d 770B0000 		.4byte	.LASF8
 4441 0071 04       		.byte	0x4
 4442 0072 2B       		.byte	0x2b
 4443 0073 77000000 		.4byte	0x77
 4444 0077 03       		.uleb128 0x3
 4445 0078 02       		.byte	0x2
 4446 0079 07       		.byte	0x7
 4447 007a 86050000 		.4byte	.LASF9
 4448 007e 02       		.uleb128 0x2
 4449 007f CA0B0000 		.4byte	.LASF10
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 178


 4450 0083 04       		.byte	0x4
 4451 0084 3F       		.byte	0x3f
 4452 0085 89000000 		.4byte	0x89
 4453 0089 03       		.uleb128 0x3
 4454 008a 04       		.byte	0x4
 4455 008b 05       		.byte	0x5
 4456 008c 1C010000 		.4byte	.LASF11
 4457 0090 02       		.uleb128 0x2
 4458 0091 62040000 		.4byte	.LASF12
 4459 0095 04       		.byte	0x4
 4460 0096 41       		.byte	0x41
 4461 0097 9B000000 		.4byte	0x9b
 4462 009b 03       		.uleb128 0x3
 4463 009c 04       		.byte	0x4
 4464 009d 07       		.byte	0x7
 4465 009e 13050000 		.4byte	.LASF13
 4466 00a2 03       		.uleb128 0x3
 4467 00a3 08       		.byte	0x8
 4468 00a4 07       		.byte	0x7
 4469 00a5 48010000 		.4byte	.LASF14
 4470 00a9 03       		.uleb128 0x3
 4471 00aa 04       		.byte	0x4
 4472 00ab 07       		.byte	0x7
 4473 00ac A00D0000 		.4byte	.LASF15
 4474 00b0 05       		.uleb128 0x5
 4475 00b1 04       		.byte	0x4
 4476 00b2 06       		.uleb128 0x6
 4477 00b3 04       		.byte	0x4
 4478 00b4 B8000000 		.4byte	0xb8
 4479 00b8 03       		.uleb128 0x3
 4480 00b9 01       		.byte	0x1
 4481 00ba 08       		.byte	0x8
 4482 00bb 210B0000 		.4byte	.LASF16
 4483 00bf 06       		.uleb128 0x6
 4484 00c0 04       		.byte	0x4
 4485 00c1 C5000000 		.4byte	0xc5
 4486 00c5 07       		.uleb128 0x7
 4487 00c6 B8000000 		.4byte	0xb8
 4488 00ca 02       		.uleb128 0x2
 4489 00cb 700D0000 		.4byte	.LASF17
 4490 00cf 05       		.byte	0x5
 4491 00d0 18       		.byte	0x18
 4492 00d1 53000000 		.4byte	0x53
 4493 00d5 02       		.uleb128 0x2
 4494 00d6 75030000 		.4byte	.LASF18
 4495 00da 05       		.byte	0x5
 4496 00db 24       		.byte	0x24
 4497 00dc 6C000000 		.4byte	0x6c
 4498 00e0 02       		.uleb128 0x2
 4499 00e1 33050000 		.4byte	.LASF19
 4500 00e5 05       		.byte	0x5
 4501 00e6 2C       		.byte	0x2c
 4502 00e7 7E000000 		.4byte	0x7e
 4503 00eb 02       		.uleb128 0x2
 4504 00ec BF0A0000 		.4byte	.LASF20
 4505 00f0 05       		.byte	0x5
 4506 00f1 30       		.byte	0x30
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 179


 4507 00f2 90000000 		.4byte	0x90
 4508 00f6 08       		.uleb128 0x8
 4509 00f7 EB000000 		.4byte	0xeb
 4510 00fb 08       		.uleb128 0x8
 4511 00fc CA000000 		.4byte	0xca
 4512 0100 03       		.uleb128 0x3
 4513 0101 04       		.byte	0x4
 4514 0102 04       		.byte	0x4
 4515 0103 EF080000 		.4byte	.LASF21
 4516 0107 03       		.uleb128 0x3
 4517 0108 08       		.byte	0x8
 4518 0109 04       		.byte	0x4
 4519 010a 7E030000 		.4byte	.LASF22
 4520 010e 02       		.uleb128 0x2
 4521 010f F2090000 		.4byte	.LASF23
 4522 0113 06       		.byte	0x6
 4523 0114 4D       		.byte	0x4d
 4524 0115 19010000 		.4byte	0x119
 4525 0119 06       		.uleb128 0x6
 4526 011a 04       		.byte	0x4
 4527 011b 1F010000 		.4byte	0x11f
 4528 011f 09       		.uleb128 0x9
 4529 0120 2A010000 		.4byte	0x12a
 4530 0124 0A       		.uleb128 0xa
 4531 0125 B0000000 		.4byte	0xb0
 4532 0129 00       		.byte	0
 4533 012a 02       		.uleb128 0x2
 4534 012b 99050000 		.4byte	.LASF24
 4535 012f 02       		.byte	0x2
 4536 0130 61       		.byte	0x61
 4537 0131 EB000000 		.4byte	0xeb
 4538 0135 02       		.uleb128 0x2
 4539 0136 9B030000 		.4byte	.LASF25
 4540 013a 02       		.byte	0x2
 4541 013b 62       		.byte	0x62
 4542 013c 89000000 		.4byte	0x89
 4543 0140 02       		.uleb128 0x2
 4544 0141 860E0000 		.4byte	.LASF26
 4545 0145 02       		.byte	0x2
 4546 0146 63       		.byte	0x63
 4547 0147 9B000000 		.4byte	0x9b
 4548 014b 02       		.uleb128 0x2
 4549 014c 34030000 		.4byte	.LASF27
 4550 0150 02       		.byte	0x2
 4551 0151 69       		.byte	0x69
 4552 0152 EB000000 		.4byte	0xeb
 4553 0156 0B       		.uleb128 0xb
 4554 0157 B0000000 		.4byte	0xb0
 4555 015b 66010000 		.4byte	0x166
 4556 015f 0C       		.uleb128 0xc
 4557 0160 A9000000 		.4byte	0xa9
 4558 0164 04       		.byte	0x4
 4559 0165 00       		.byte	0
 4560 0166 0D       		.uleb128 0xd
 4561 0167 F90D0000 		.4byte	.LASF34
 4562 016b 14       		.byte	0x14
 4563 016c 07       		.byte	0x7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 180


 4564 016d B5       		.byte	0xb5
 4565 016e AF010000 		.4byte	0x1af
 4566 0172 0E       		.uleb128 0xe
 4567 0173 5F0B0000 		.4byte	.LASF28
 4568 0177 07       		.byte	0x7
 4569 0178 B8       		.byte	0xb8
 4570 0179 4B010000 		.4byte	0x14b
 4571 017d 00       		.byte	0
 4572 017e 0E       		.uleb128 0xe
 4573 017f A90D0000 		.4byte	.LASF29
 4574 0183 07       		.byte	0x7
 4575 0184 B9       		.byte	0xb9
 4576 0185 AF010000 		.4byte	0x1af
 4577 0189 04       		.byte	0x4
 4578 018a 0E       		.uleb128 0xe
 4579 018b 1B080000 		.4byte	.LASF30
 4580 018f 07       		.byte	0x7
 4581 0190 BA       		.byte	0xba
 4582 0191 AF010000 		.4byte	0x1af
 4583 0195 08       		.byte	0x8
 4584 0196 0E       		.uleb128 0xe
 4585 0197 A4040000 		.4byte	.LASF31
 4586 019b 07       		.byte	0x7
 4587 019c BB       		.byte	0xbb
 4588 019d B0000000 		.4byte	0xb0
 4589 01a1 0C       		.byte	0xc
 4590 01a2 0E       		.uleb128 0xe
 4591 01a3 0E090000 		.4byte	.LASF32
 4592 01a7 07       		.byte	0x7
 4593 01a8 BC       		.byte	0xbc
 4594 01a9 B0000000 		.4byte	0xb0
 4595 01ad 10       		.byte	0x10
 4596 01ae 00       		.byte	0
 4597 01af 06       		.uleb128 0x6
 4598 01b0 04       		.byte	0x4
 4599 01b1 66010000 		.4byte	0x166
 4600 01b5 02       		.uleb128 0x2
 4601 01b6 ED070000 		.4byte	.LASF33
 4602 01ba 07       		.byte	0x7
 4603 01bb BF       		.byte	0xbf
 4604 01bc 66010000 		.4byte	0x166
 4605 01c0 0D       		.uleb128 0xd
 4606 01c1 B9010000 		.4byte	.LASF35
 4607 01c5 0C       		.byte	0xc
 4608 01c6 07       		.byte	0x7
 4609 01c7 C1       		.byte	0xc1
 4610 01c8 F1010000 		.4byte	0x1f1
 4611 01cc 0E       		.uleb128 0xe
 4612 01cd 5F0B0000 		.4byte	.LASF28
 4613 01d1 07       		.byte	0x7
 4614 01d2 C4       		.byte	0xc4
 4615 01d3 4B010000 		.4byte	0x14b
 4616 01d7 00       		.byte	0
 4617 01d8 0E       		.uleb128 0xe
 4618 01d9 A90D0000 		.4byte	.LASF29
 4619 01dd 07       		.byte	0x7
 4620 01de C5       		.byte	0xc5
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 181


 4621 01df AF010000 		.4byte	0x1af
 4622 01e3 04       		.byte	0x4
 4623 01e4 0E       		.uleb128 0xe
 4624 01e5 1B080000 		.4byte	.LASF30
 4625 01e9 07       		.byte	0x7
 4626 01ea C6       		.byte	0xc6
 4627 01eb AF010000 		.4byte	0x1af
 4628 01ef 08       		.byte	0x8
 4629 01f0 00       		.byte	0
 4630 01f1 02       		.uleb128 0x2
 4631 01f2 54000000 		.4byte	.LASF36
 4632 01f6 07       		.byte	0x7
 4633 01f7 C8       		.byte	0xc8
 4634 01f8 C0010000 		.4byte	0x1c0
 4635 01fc 0D       		.uleb128 0xd
 4636 01fd 010A0000 		.4byte	.LASF37
 4637 0201 14       		.byte	0x14
 4638 0202 07       		.byte	0x7
 4639 0203 CD       		.byte	0xcd
 4640 0204 2D020000 		.4byte	0x22d
 4641 0208 0E       		.uleb128 0xe
 4642 0209 03050000 		.4byte	.LASF38
 4643 020d 07       		.byte	0x7
 4644 020e D0       		.byte	0xd0
 4645 020f 40010000 		.4byte	0x140
 4646 0213 00       		.byte	0
 4647 0214 0E       		.uleb128 0xe
 4648 0215 090D0000 		.4byte	.LASF39
 4649 0219 07       		.byte	0x7
 4650 021a D1       		.byte	0xd1
 4651 021b 2D020000 		.4byte	0x22d
 4652 021f 04       		.byte	0x4
 4653 0220 0E       		.uleb128 0xe
 4654 0221 88010000 		.4byte	.LASF40
 4655 0225 07       		.byte	0x7
 4656 0226 D2       		.byte	0xd2
 4657 0227 F1010000 		.4byte	0x1f1
 4658 022b 08       		.byte	0x8
 4659 022c 00       		.byte	0
 4660 022d 06       		.uleb128 0x6
 4661 022e 04       		.byte	0x4
 4662 022f B5010000 		.4byte	0x1b5
 4663 0233 02       		.uleb128 0x2
 4664 0234 480A0000 		.4byte	.LASF41
 4665 0238 07       		.byte	0x7
 4666 0239 D4       		.byte	0xd4
 4667 023a FC010000 		.4byte	0x1fc
 4668 023e 02       		.uleb128 0x2
 4669 023f 1F030000 		.4byte	.LASF42
 4670 0243 08       		.byte	0x8
 4671 0244 67       		.byte	0x67
 4672 0245 B0000000 		.4byte	0xb0
 4673 0249 0F       		.uleb128 0xf
 4674 024a 01       		.byte	0x1
 4675 024b 5E000000 		.4byte	0x5e
 4676 024f 08       		.byte	0x8
 4677 0250 7C       		.byte	0x7c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 182


 4678 0251 74020000 		.4byte	0x274
 4679 0255 10       		.uleb128 0x10
 4680 0256 960D0000 		.4byte	.LASF43
 4681 025a 00       		.byte	0
 4682 025b 10       		.uleb128 0x10
 4683 025c 8E0B0000 		.4byte	.LASF44
 4684 0260 01       		.byte	0x1
 4685 0261 10       		.uleb128 0x10
 4686 0262 8B060000 		.4byte	.LASF45
 4687 0266 02       		.byte	0x2
 4688 0267 10       		.uleb128 0x10
 4689 0268 53070000 		.4byte	.LASF46
 4690 026c 03       		.byte	0x3
 4691 026d 10       		.uleb128 0x10
 4692 026e 4B0D0000 		.4byte	.LASF47
 4693 0272 04       		.byte	0x4
 4694 0273 00       		.byte	0
 4695 0274 02       		.uleb128 0x2
 4696 0275 F6010000 		.4byte	.LASF48
 4697 0279 08       		.byte	0x8
 4698 027a 82       		.byte	0x82
 4699 027b 49020000 		.4byte	0x249
 4700 027f 0D       		.uleb128 0xd
 4701 0280 AF010000 		.4byte	.LASF49
 4702 0284 08       		.byte	0x8
 4703 0285 08       		.byte	0x8
 4704 0286 87       		.byte	0x87
 4705 0287 A4020000 		.4byte	0x2a4
 4706 028b 0E       		.uleb128 0xe
 4707 028c 1C040000 		.4byte	.LASF50
 4708 0290 08       		.byte	0x8
 4709 0291 89       		.byte	0x89
 4710 0292 35010000 		.4byte	0x135
 4711 0296 00       		.byte	0
 4712 0297 0E       		.uleb128 0xe
 4713 0298 C6040000 		.4byte	.LASF51
 4714 029c 08       		.byte	0x8
 4715 029d 8A       		.byte	0x8a
 4716 029e 4B010000 		.4byte	0x14b
 4717 02a2 04       		.byte	0x4
 4718 02a3 00       		.byte	0
 4719 02a4 02       		.uleb128 0x2
 4720 02a5 63000000 		.4byte	.LASF52
 4721 02a9 08       		.byte	0x8
 4722 02aa 8B       		.byte	0x8b
 4723 02ab 7F020000 		.4byte	0x27f
 4724 02af 0D       		.uleb128 0xd
 4725 02b0 2B060000 		.4byte	.LASF53
 4726 02b4 0C       		.byte	0xc
 4727 02b5 08       		.byte	0x8
 4728 02b6 90       		.byte	0x90
 4729 02b7 E0020000 		.4byte	0x2e0
 4730 02bb 0E       		.uleb128 0xe
 4731 02bc 7B020000 		.4byte	.LASF54
 4732 02c0 08       		.byte	0x8
 4733 02c1 92       		.byte	0x92
 4734 02c2 B0000000 		.4byte	0xb0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 183


 4735 02c6 00       		.byte	0
 4736 02c7 0E       		.uleb128 0xe
 4737 02c8 CD070000 		.4byte	.LASF55
 4738 02cc 08       		.byte	0x8
 4739 02cd 93       		.byte	0x93
 4740 02ce EB000000 		.4byte	0xeb
 4741 02d2 04       		.byte	0x4
 4742 02d3 0E       		.uleb128 0xe
 4743 02d4 BF060000 		.4byte	.LASF56
 4744 02d8 08       		.byte	0x8
 4745 02d9 94       		.byte	0x94
 4746 02da EB000000 		.4byte	0xeb
 4747 02de 08       		.byte	0x8
 4748 02df 00       		.byte	0
 4749 02e0 02       		.uleb128 0x2
 4750 02e1 53030000 		.4byte	.LASF57
 4751 02e5 08       		.byte	0x8
 4752 02e6 95       		.byte	0x95
 4753 02e7 AF020000 		.4byte	0x2af
 4754 02eb 07       		.uleb128 0x7
 4755 02ec BF000000 		.4byte	0xbf
 4756 02f0 06       		.uleb128 0x6
 4757 02f1 04       		.byte	0x4
 4758 02f2 2A010000 		.4byte	0x12a
 4759 02f6 11       		.uleb128 0x11
 4760 02f7 B9020000 		.4byte	.LASF58
 4761 02fb 60       		.byte	0x60
 4762 02fc 01       		.byte	0x1
 4763 02fd 2501     		.2byte	0x125
 4764 02ff 79030000 		.4byte	0x379
 4765 0303 12       		.uleb128 0x12
 4766 0304 3B050000 		.4byte	.LASF59
 4767 0308 01       		.byte	0x1
 4768 0309 2701     		.2byte	0x127
 4769 030b 79030000 		.4byte	0x379
 4770 030f 00       		.byte	0
 4771 0310 12       		.uleb128 0x12
 4772 0311 54020000 		.4byte	.LASF60
 4773 0315 01       		.byte	0x1
 4774 0316 2D01     		.2byte	0x12d
 4775 0318 B5010000 		.4byte	0x1b5
 4776 031c 04       		.byte	0x4
 4777 031d 12       		.uleb128 0x12
 4778 031e 5F010000 		.4byte	.LASF61
 4779 0322 01       		.byte	0x1
 4780 0323 2E01     		.2byte	0x12e
 4781 0325 B5010000 		.4byte	0x1b5
 4782 0329 18       		.byte	0x18
 4783 032a 12       		.uleb128 0x12
 4784 032b 040E0000 		.4byte	.LASF62
 4785 032f 01       		.byte	0x1
 4786 0330 2F01     		.2byte	0x12f
 4787 0332 40010000 		.4byte	0x140
 4788 0336 2C       		.byte	0x2c
 4789 0337 12       		.uleb128 0x12
 4790 0338 2C030000 		.4byte	.LASF63
 4791 033c 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 184


 4792 033d 3001     		.2byte	0x130
 4793 033f F0020000 		.4byte	0x2f0
 4794 0343 30       		.byte	0x30
 4795 0344 12       		.uleb128 0x12
 4796 0345 650D0000 		.4byte	.LASF64
 4797 0349 01       		.byte	0x1
 4798 034a 3101     		.2byte	0x131
 4799 034c 84030000 		.4byte	0x384
 4800 0350 34       		.byte	0x34
 4801 0351 12       		.uleb128 0x12
 4802 0352 89020000 		.4byte	.LASF65
 4803 0356 01       		.byte	0x1
 4804 0357 4A01     		.2byte	0x14a
 4805 0359 56010000 		.4byte	0x156
 4806 035d 44       		.byte	0x44
 4807 035e 12       		.uleb128 0x12
 4808 035f 51090000 		.4byte	.LASF66
 4809 0363 01       		.byte	0x1
 4810 0364 5D01     		.2byte	0x15d
 4811 0366 F6000000 		.4byte	0xf6
 4812 036a 58       		.byte	0x58
 4813 036b 12       		.uleb128 0x12
 4814 036c 29090000 		.4byte	.LASF67
 4815 0370 01       		.byte	0x1
 4816 0371 5E01     		.2byte	0x15e
 4817 0373 FB000000 		.4byte	0xfb
 4818 0377 5C       		.byte	0x5c
 4819 0378 00       		.byte	0
 4820 0379 06       		.uleb128 0x6
 4821 037a 04       		.byte	0x4
 4822 037b 7F030000 		.4byte	0x37f
 4823 037f 08       		.uleb128 0x8
 4824 0380 2A010000 		.4byte	0x12a
 4825 0384 0B       		.uleb128 0xb
 4826 0385 B8000000 		.4byte	0xb8
 4827 0389 94030000 		.4byte	0x394
 4828 038d 0C       		.uleb128 0xc
 4829 038e A9000000 		.4byte	0xa9
 4830 0392 0F       		.byte	0xf
 4831 0393 00       		.byte	0
 4832 0394 13       		.uleb128 0x13
 4833 0395 55050000 		.4byte	.LASF68
 4834 0399 01       		.byte	0x1
 4835 039a 6B01     		.2byte	0x16b
 4836 039c F6020000 		.4byte	0x2f6
 4837 03a0 13       		.uleb128 0x13
 4838 03a1 77090000 		.4byte	.LASF69
 4839 03a5 01       		.byte	0x1
 4840 03a6 6F01     		.2byte	0x16f
 4841 03a8 94030000 		.4byte	0x394
 4842 03ac 14       		.uleb128 0x14
 4843 03ad A6020000 		.4byte	.LASF221
 4844 03b1 02       		.byte	0x2
 4845 03b2 D3       		.byte	0xd3
 4846 03b3 EB000000 		.4byte	0xeb
 4847 03b7 03       		.byte	0x3
 4848 03b8 D3030000 		.4byte	0x3d3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 185


 4849 03bc 15       		.uleb128 0x15
 4850 03bd 16000000 		.4byte	.LASF70
 4851 03c1 02       		.byte	0x2
 4852 03c2 D5       		.byte	0xd5
 4853 03c3 EB000000 		.4byte	0xeb
 4854 03c7 15       		.uleb128 0x15
 4855 03c8 3B010000 		.4byte	.LASF71
 4856 03cc 02       		.byte	0x2
 4857 03cd D5       		.byte	0xd5
 4858 03ce EB000000 		.4byte	0xeb
 4859 03d2 00       		.byte	0
 4860 03d3 16       		.uleb128 0x16
 4861 03d4 DD070000 		.4byte	.LASF222
 4862 03d8 02       		.byte	0x2
 4863 03d9 E7       		.byte	0xe7
 4864 03da 03       		.byte	0x3
 4865 03db EB030000 		.4byte	0x3eb
 4866 03df 17       		.uleb128 0x17
 4867 03e0 82040000 		.4byte	.LASF223
 4868 03e4 02       		.byte	0x2
 4869 03e5 E7       		.byte	0xe7
 4870 03e6 EB000000 		.4byte	0xeb
 4871 03ea 00       		.byte	0
 4872 03eb 18       		.uleb128 0x18
 4873 03ec 7F0D0000 		.4byte	.LASF130
 4874 03f0 01       		.byte	0x1
 4875 03f1 7806     		.2byte	0x678
 4876 03f3 35010000 		.4byte	0x135
 4877 03f7 00000000 		.4byte	.LFB139
 4878 03fb 40000000 		.4byte	.LFE139-.LFB139
 4879 03ff 01       		.uleb128 0x1
 4880 0400 9C       		.byte	0x9c
 4881 0401 36040000 		.4byte	0x436
 4882 0405 19       		.uleb128 0x19
 4883 0406 E6060000 		.4byte	.LASF76
 4884 040a 01       		.byte	0x1
 4885 040b 7806     		.2byte	0x678
 4886 040d 36040000 		.4byte	0x436
 4887 0411 00000000 		.4byte	.LLST0
 4888 0415 1A       		.uleb128 0x1a
 4889 0416 AC040000 		.4byte	.LASF72
 4890 041a 01       		.byte	0x1
 4891 041b 7A06     		.2byte	0x67a
 4892 041d 35010000 		.4byte	0x135
 4893 0421 69000000 		.4byte	.LLST1
 4894 0425 1A       		.uleb128 0x1a
 4895 0426 A5050000 		.4byte	.LASF73
 4896 042a 01       		.byte	0x1
 4897 042b 7B06     		.2byte	0x67b
 4898 042d 46040000 		.4byte	0x446
 4899 0431 88000000 		.4byte	.LLST2
 4900 0435 00       		.byte	0
 4901 0436 07       		.uleb128 0x7
 4902 0437 3E020000 		.4byte	0x23e
 4903 043b 06       		.uleb128 0x6
 4904 043c 04       		.byte	0x4
 4905 043d 41040000 		.4byte	0x441
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 186


 4906 0441 07       		.uleb128 0x7
 4907 0442 A0030000 		.4byte	0x3a0
 4908 0446 07       		.uleb128 0x7
 4909 0447 3B040000 		.4byte	0x43b
 4910 044b 1B       		.uleb128 0x1b
 4911 044c D2030000 		.4byte	.LASF74
 4912 0450 01       		.byte	0x1
 4913 0451 3E0E     		.2byte	0xe3e
 4914 0453 00000000 		.4byte	.LFB166
 4915 0457 2C000000 		.4byte	.LFE166-.LFB166
 4916 045b 01       		.uleb128 0x1
 4917 045c 9C       		.byte	0x9c
 4918 045d 72040000 		.4byte	0x472
 4919 0461 1A       		.uleb128 0x1a
 4920 0462 A5050000 		.4byte	.LASF73
 4921 0466 01       		.byte	0x1
 4922 0467 400E     		.2byte	0xe40
 4923 0469 72040000 		.4byte	0x472
 4924 046d F1000000 		.4byte	.LLST3
 4925 0471 00       		.byte	0
 4926 0472 06       		.uleb128 0x6
 4927 0473 04       		.byte	0x4
 4928 0474 A0030000 		.4byte	0x3a0
 4929 0478 1B       		.uleb128 0x1b
 4930 0479 52060000 		.4byte	.LASF75
 4931 047d 01       		.byte	0x1
 4932 047e 080E     		.2byte	0xe08
 4933 0480 00000000 		.4byte	.LFB165
 4934 0484 12000000 		.4byte	.LFE165-.LFB165
 4935 0488 01       		.uleb128 0x1
 4936 0489 9C       		.byte	0x9c
 4937 048a B8040000 		.4byte	0x4b8
 4938 048e 19       		.uleb128 0x19
 4939 048f A5050000 		.4byte	.LASF73
 4940 0493 01       		.byte	0x1
 4941 0494 080E     		.2byte	0xe08
 4942 0496 72040000 		.4byte	0x472
 4943 049a 04010000 		.4byte	.LLST4
 4944 049e 1C       		.uleb128 0x1c
 4945 049f 0A000000 		.4byte	.LVL12
 4946 04a3 3C1D0000 		.4byte	0x1d3c
 4947 04a7 1D       		.uleb128 0x1d
 4948 04a8 10000000 		.4byte	.LVL13
 4949 04ac 3C1D0000 		.4byte	0x1d3c
 4950 04b0 1E       		.uleb128 0x1e
 4951 04b1 01       		.uleb128 0x1
 4952 04b2 50       		.byte	0x50
 4953 04b3 02       		.uleb128 0x2
 4954 04b4 74       		.byte	0x74
 4955 04b5 00       		.sleb128 0
 4956 04b6 00       		.byte	0
 4957 04b7 00       		.byte	0
 4958 04b8 1B       		.uleb128 0x1b
 4959 04b9 4F0A0000 		.4byte	.LASF77
 4960 04bd 01       		.byte	0x1
 4961 04be FF02     		.2byte	0x2ff
 4962 04c0 00000000 		.4byte	.LFB130
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 187


 4963 04c4 9E000000 		.4byte	.LFE130-.LFB130
 4964 04c8 01       		.uleb128 0x1
 4965 04c9 9C       		.byte	0x9c
 4966 04ca C8050000 		.4byte	0x5c8
 4967 04ce 19       		.uleb128 0x19
 4968 04cf 13070000 		.4byte	.LASF78
 4969 04d3 01       		.byte	0x1
 4970 04d4 FF02     		.2byte	0x2ff
 4971 04d6 0E010000 		.4byte	0x10e
 4972 04da 22010000 		.4byte	.LLST5
 4973 04de 19       		.uleb128 0x19
 4974 04df 440E0000 		.4byte	.LASF79
 4975 04e3 01       		.byte	0x1
 4976 04e4 0003     		.2byte	0x300
 4977 04e6 EB020000 		.4byte	0x2eb
 4978 04ea 40010000 		.4byte	.LLST6
 4979 04ee 19       		.uleb128 0x19
 4980 04ef 1E070000 		.4byte	.LASF80
 4981 04f3 01       		.byte	0x1
 4982 04f4 0103     		.2byte	0x301
 4983 04f6 C8050000 		.4byte	0x5c8
 4984 04fa 5E010000 		.4byte	.LLST7
 4985 04fe 19       		.uleb128 0x19
 4986 04ff 48050000 		.4byte	.LASF81
 4987 0503 01       		.byte	0x1
 4988 0504 0203     		.2byte	0x302
 4989 0506 CD050000 		.4byte	0x5cd
 4990 050a 9B010000 		.4byte	.LLST8
 4991 050e 19       		.uleb128 0x19
 4992 050f 040E0000 		.4byte	.LASF62
 4993 0513 01       		.byte	0x1
 4994 0514 0303     		.2byte	0x303
 4995 0516 40010000 		.4byte	0x140
 4996 051a B9010000 		.4byte	.LLST9
 4997 051e 1F       		.uleb128 0x1f
 4998 051f F5040000 		.4byte	.LASF82
 4999 0523 01       		.byte	0x1
 5000 0524 0403     		.2byte	0x304
 5001 0526 D8050000 		.4byte	0x5d8
 5002 052a 02       		.uleb128 0x2
 5003 052b 91       		.byte	0x91
 5004 052c 04       		.sleb128 4
 5005 052d 1F       		.uleb128 0x1f
 5006 052e CD020000 		.4byte	.LASF83
 5007 0532 01       		.byte	0x1
 5008 0533 0503     		.2byte	0x305
 5009 0535 72040000 		.4byte	0x472
 5010 0539 02       		.uleb128 0x2
 5011 053a 91       		.byte	0x91
 5012 053b 08       		.sleb128 8
 5013 053c 1F       		.uleb128 0x1f
 5014 053d CC060000 		.4byte	.LASF84
 5015 0541 01       		.byte	0x1
 5016 0542 0603     		.2byte	0x306
 5017 0544 E8050000 		.4byte	0x5e8
 5018 0548 02       		.uleb128 0x2
 5019 0549 91       		.byte	0x91
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 188


 5020 054a 0C       		.sleb128 12
 5021 054b 20       		.uleb128 0x20
 5022 054c 3B050000 		.4byte	.LASF59
 5023 0550 01       		.byte	0x1
 5024 0551 0803     		.2byte	0x308
 5025 0553 F0020000 		.4byte	0x2f0
 5026 0557 01       		.uleb128 0x1
 5027 0558 55       		.byte	0x55
 5028 0559 21       		.uleb128 0x21
 5029 055a 7800     		.ascii	"x\000"
 5030 055c 01       		.byte	0x1
 5031 055d 0903     		.2byte	0x309
 5032 055f 40010000 		.4byte	0x140
 5033 0563 D8010000 		.4byte	.LLST10
 5034 0567 22       		.uleb128 0x22
 5035 0568 1C000000 		.4byte	.LVL18
 5036 056c 471D0000 		.4byte	0x1d47
 5037 0570 83050000 		.4byte	0x583
 5038 0574 1E       		.uleb128 0x1e
 5039 0575 01       		.uleb128 0x1
 5040 0576 51       		.byte	0x51
 5041 0577 02       		.uleb128 0x2
 5042 0578 08       		.byte	0x8
 5043 0579 A5       		.byte	0xa5
 5044 057a 1E       		.uleb128 0x1e
 5045 057b 01       		.uleb128 0x1
 5046 057c 52       		.byte	0x52
 5047 057d 04       		.uleb128 0x4
 5048 057e 75       		.byte	0x75
 5049 057f 00       		.sleb128 0
 5050 0580 32       		.byte	0x32
 5051 0581 24       		.byte	0x24
 5052 0582 00       		.byte	0
 5053 0583 22       		.uleb128 0x22
 5054 0584 5A000000 		.4byte	.LVL25
 5055 0588 521D0000 		.4byte	0x1d52
 5056 058c 97050000 		.4byte	0x597
 5057 0590 1E       		.uleb128 0x1e
 5058 0591 01       		.uleb128 0x1
 5059 0592 50       		.byte	0x50
 5060 0593 02       		.uleb128 0x2
 5061 0594 74       		.byte	0x74
 5062 0595 04       		.sleb128 4
 5063 0596 00       		.byte	0
 5064 0597 22       		.uleb128 0x22
 5065 0598 62000000 		.4byte	.LVL26
 5066 059c 521D0000 		.4byte	0x1d52
 5067 05a0 AB050000 		.4byte	0x5ab
 5068 05a4 1E       		.uleb128 0x1e
 5069 05a5 01       		.uleb128 0x1
 5070 05a6 50       		.byte	0x50
 5071 05a7 02       		.uleb128 0x2
 5072 05a8 74       		.byte	0x74
 5073 05a9 18       		.sleb128 24
 5074 05aa 00       		.byte	0
 5075 05ab 1D       		.uleb128 0x1d
 5076 05ac 94000000 		.4byte	.LVL31
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 189


 5077 05b0 5E1D0000 		.4byte	0x1d5e
 5078 05b4 1E       		.uleb128 0x1e
 5079 05b5 01       		.uleb128 0x1
 5080 05b6 50       		.byte	0x50
 5081 05b7 02       		.uleb128 0x2
 5082 05b8 75       		.byte	0x75
 5083 05b9 00       		.sleb128 0
 5084 05ba 1E       		.uleb128 0x1e
 5085 05bb 01       		.uleb128 0x1
 5086 05bc 51       		.byte	0x51
 5087 05bd 02       		.uleb128 0x2
 5088 05be 7A       		.byte	0x7a
 5089 05bf 00       		.sleb128 0
 5090 05c0 1E       		.uleb128 0x1e
 5091 05c1 01       		.uleb128 0x1
 5092 05c2 52       		.byte	0x52
 5093 05c3 02       		.uleb128 0x2
 5094 05c4 78       		.byte	0x78
 5095 05c5 00       		.sleb128 0
 5096 05c6 00       		.byte	0
 5097 05c7 00       		.byte	0
 5098 05c8 07       		.uleb128 0x7
 5099 05c9 EB000000 		.4byte	0xeb
 5100 05cd 07       		.uleb128 0x7
 5101 05ce B0000000 		.4byte	0xb0
 5102 05d2 06       		.uleb128 0x6
 5103 05d3 04       		.byte	0x4
 5104 05d4 3E020000 		.4byte	0x23e
 5105 05d8 07       		.uleb128 0x7
 5106 05d9 D2050000 		.4byte	0x5d2
 5107 05dd 06       		.uleb128 0x6
 5108 05de 04       		.byte	0x4
 5109 05df E3050000 		.4byte	0x5e3
 5110 05e3 07       		.uleb128 0x7
 5111 05e4 E0020000 		.4byte	0x2e0
 5112 05e8 07       		.uleb128 0x7
 5113 05e9 DD050000 		.4byte	0x5dd
 5114 05ed 1B       		.uleb128 0x1b
 5115 05ee 14060000 		.4byte	.LASF85
 5116 05f2 01       		.byte	0x1
 5117 05f3 100D     		.2byte	0xd10
 5118 05f5 00000000 		.4byte	.LFB163
 5119 05f9 58000000 		.4byte	.LFE163-.LFB163
 5120 05fd 01       		.uleb128 0x1
 5121 05fe 9C       		.byte	0x9c
 5122 05ff 96060000 		.4byte	0x696
 5123 0603 1A       		.uleb128 0x1a
 5124 0604 040E0000 		.4byte	.LASF62
 5125 0608 01       		.byte	0x1
 5126 0609 120D     		.2byte	0xd12
 5127 060b 40010000 		.4byte	0x140
 5128 060f 02020000 		.4byte	.LLST11
 5129 0613 22       		.uleb128 0x22
 5130 0614 14000000 		.4byte	.LVL34
 5131 0618 691D0000 		.4byte	0x1d69
 5132 061c 34060000 		.4byte	0x634
 5133 0620 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 190


 5134 0621 01       		.uleb128 0x1
 5135 0622 50       		.byte	0x50
 5136 0623 0F       		.uleb128 0xf
 5137 0624 74       		.byte	0x74
 5138 0625 00       		.sleb128 0
 5139 0626 32       		.byte	0x32
 5140 0627 24       		.byte	0x24
 5141 0628 74       		.byte	0x74
 5142 0629 00       		.sleb128 0
 5143 062a 22       		.byte	0x22
 5144 062b 32       		.byte	0x32
 5145 062c 24       		.byte	0x24
 5146 062d 03       		.byte	0x3
 5147 062e 30000000 		.4byte	.LANCHOR0+48
 5148 0632 22       		.byte	0x22
 5149 0633 00       		.byte	0
 5150 0634 22       		.uleb128 0x22
 5151 0635 26000000 		.4byte	.LVL37
 5152 0639 691D0000 		.4byte	0x1d69
 5153 063d 48060000 		.4byte	0x648
 5154 0641 1E       		.uleb128 0x1e
 5155 0642 01       		.uleb128 0x1
 5156 0643 50       		.byte	0x50
 5157 0644 02       		.uleb128 0x2
 5158 0645 76       		.byte	0x76
 5159 0646 00       		.sleb128 0
 5160 0647 00       		.byte	0
 5161 0648 22       		.uleb128 0x22
 5162 0649 30000000 		.4byte	.LVL38
 5163 064d 691D0000 		.4byte	0x1d69
 5164 0651 5C060000 		.4byte	0x65c
 5165 0655 1E       		.uleb128 0x1e
 5166 0656 01       		.uleb128 0x1
 5167 0657 50       		.byte	0x50
 5168 0658 02       		.uleb128 0x2
 5169 0659 75       		.byte	0x75
 5170 065a 00       		.sleb128 0
 5171 065b 00       		.byte	0
 5172 065c 22       		.uleb128 0x22
 5173 065d 38000000 		.4byte	.LVL39
 5174 0661 691D0000 		.4byte	0x1d69
 5175 0665 70060000 		.4byte	0x670
 5176 0669 1E       		.uleb128 0x1e
 5177 066a 01       		.uleb128 0x1
 5178 066b 50       		.byte	0x50
 5179 066c 02       		.uleb128 0x2
 5180 066d 74       		.byte	0x74
 5181 066e 14       		.sleb128 20
 5182 066f 00       		.byte	0
 5183 0670 22       		.uleb128 0x22
 5184 0671 40000000 		.4byte	.LVL40
 5185 0675 691D0000 		.4byte	0x1d69
 5186 0679 85060000 		.4byte	0x685
 5187 067d 1E       		.uleb128 0x1e
 5188 067e 01       		.uleb128 0x1
 5189 067f 50       		.byte	0x50
 5190 0680 03       		.uleb128 0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 191


 5191 0681 74       		.byte	0x74
 5192 0682 E401     		.sleb128 228
 5193 0684 00       		.byte	0
 5194 0685 1D       		.uleb128 0x1d
 5195 0686 46000000 		.4byte	.LVL41
 5196 068a 691D0000 		.4byte	0x1d69
 5197 068e 1E       		.uleb128 0x1e
 5198 068f 01       		.uleb128 0x1
 5199 0690 50       		.byte	0x50
 5200 0691 02       		.uleb128 0x2
 5201 0692 74       		.byte	0x74
 5202 0693 00       		.sleb128 0
 5203 0694 00       		.byte	0
 5204 0695 00       		.byte	0
 5205 0696 1B       		.uleb128 0x1b
 5206 0697 CF050000 		.4byte	.LASF86
 5207 069b 01       		.byte	0x1
 5208 069c C303     		.2byte	0x3c3
 5209 069e 00000000 		.4byte	.LFB131
 5210 06a2 AC000000 		.4byte	.LFE131-.LFB131
 5211 06a6 01       		.uleb128 0x1
 5212 06a7 9C       		.byte	0x9c
 5213 06a8 EC060000 		.4byte	0x6ec
 5214 06ac 19       		.uleb128 0x19
 5215 06ad CD020000 		.4byte	.LASF83
 5216 06b1 01       		.byte	0x1
 5217 06b2 C303     		.2byte	0x3c3
 5218 06b4 72040000 		.4byte	0x472
 5219 06b8 21020000 		.4byte	.LLST12
 5220 06bc 1C       		.uleb128 0x1c
 5221 06bd 08000000 		.4byte	.LVL43
 5222 06c1 751D0000 		.4byte	0x1d75
 5223 06c5 1C       		.uleb128 0x1c
 5224 06c6 2C000000 		.4byte	.LVL44
 5225 06ca ED050000 		.4byte	0x5ed
 5226 06ce 22       		.uleb128 0x22
 5227 06cf 7A000000 		.4byte	.LVL45
 5228 06d3 801D0000 		.4byte	0x1d80
 5229 06d7 E2060000 		.4byte	0x6e2
 5230 06db 1E       		.uleb128 0x1e
 5231 06dc 01       		.uleb128 0x1
 5232 06dd 51       		.byte	0x51
 5233 06de 02       		.uleb128 0x2
 5234 06df 74       		.byte	0x74
 5235 06e0 04       		.sleb128 4
 5236 06e1 00       		.byte	0
 5237 06e2 1C       		.uleb128 0x1c
 5238 06e3 7E000000 		.4byte	.LVL46
 5239 06e7 8C1D0000 		.4byte	0x1d8c
 5240 06eb 00       		.byte	0
 5241 06ec 1B       		.uleb128 0x1b
 5242 06ed 020B0000 		.4byte	.LASF87
 5243 06f1 01       		.byte	0x1
 5244 06f2 5F12     		.2byte	0x125f
 5245 06f4 00000000 		.4byte	.LFB176
 5246 06f8 68000000 		.4byte	.LFE176-.LFB176
 5247 06fc 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 192


 5248 06fd 9C       		.byte	0x9c
 5249 06fe 75070000 		.4byte	0x775
 5250 0702 19       		.uleb128 0x19
 5251 0703 1A020000 		.4byte	.LASF88
 5252 0707 01       		.byte	0x1
 5253 0708 5F12     		.2byte	0x125f
 5254 070a 4B010000 		.4byte	0x14b
 5255 070e 4D020000 		.4byte	.LLST13
 5256 0712 19       		.uleb128 0x19
 5257 0713 00000000 		.4byte	.LASF89
 5258 0717 01       		.byte	0x1
 5259 0718 5F12     		.2byte	0x125f
 5260 071a 75070000 		.4byte	0x775
 5261 071e 79020000 		.4byte	.LLST14
 5262 0722 1A       		.uleb128 0x1a
 5263 0723 37090000 		.4byte	.LASF90
 5264 0727 01       		.byte	0x1
 5265 0728 6112     		.2byte	0x1261
 5266 072a 4B010000 		.4byte	0x14b
 5267 072e A5020000 		.4byte	.LLST15
 5268 0732 1A       		.uleb128 0x1a
 5269 0733 FE080000 		.4byte	.LASF91
 5270 0737 01       		.byte	0x1
 5271 0738 6212     		.2byte	0x1262
 5272 073a 7A070000 		.4byte	0x77a
 5273 073e B8020000 		.4byte	.LLST16
 5274 0742 1C       		.uleb128 0x1c
 5275 0743 16000000 		.4byte	.LVL51
 5276 0747 971D0000 		.4byte	0x1d97
 5277 074b 22       		.uleb128 0x22
 5278 074c 2A000000 		.4byte	.LVL52
 5279 0750 801D0000 		.4byte	0x1d80
 5280 0754 62070000 		.4byte	0x762
 5281 0758 1E       		.uleb128 0x1e
 5282 0759 01       		.uleb128 0x1
 5283 075a 50       		.byte	0x50
 5284 075b 05       		.uleb128 0x5
 5285 075c 03       		.byte	0x3
 5286 075d 00000000 		.4byte	.LANCHOR0
 5287 0761 00       		.byte	0
 5288 0762 1C       		.uleb128 0x1c
 5289 0763 4A000000 		.4byte	.LVL55
 5290 0767 A31D0000 		.4byte	0x1da3
 5291 076b 1C       		.uleb128 0x1c
 5292 076c 5A000000 		.4byte	.LVL58
 5293 0770 A31D0000 		.4byte	0x1da3
 5294 0774 00       		.byte	0
 5295 0775 07       		.uleb128 0x7
 5296 0776 35010000 		.4byte	0x135
 5297 077a 07       		.uleb128 0x7
 5298 077b 4B010000 		.4byte	0x14b
 5299 077f 23       		.uleb128 0x23
 5300 0780 41000000 		.4byte	.LASF94
 5301 0784 01       		.byte	0x1
 5302 0785 A402     		.2byte	0x2a4
 5303 0787 35010000 		.4byte	0x135
 5304 078b 00000000 		.4byte	.LFB129
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 193


 5305 078f 62000000 		.4byte	.LFE129-.LFB129
 5306 0793 01       		.uleb128 0x1
 5307 0794 9C       		.byte	0x9c
 5308 0795 C3080000 		.4byte	0x8c3
 5309 0799 19       		.uleb128 0x19
 5310 079a 13070000 		.4byte	.LASF78
 5311 079e 01       		.byte	0x1
 5312 079f A402     		.2byte	0x2a4
 5313 07a1 0E010000 		.4byte	0x10e
 5314 07a5 CB020000 		.4byte	.LLST17
 5315 07a9 19       		.uleb128 0x19
 5316 07aa 440E0000 		.4byte	.LASF79
 5317 07ae 01       		.byte	0x1
 5318 07af A502     		.2byte	0x2a5
 5319 07b1 EB020000 		.4byte	0x2eb
 5320 07b5 E9020000 		.4byte	.LLST18
 5321 07b9 19       		.uleb128 0x19
 5322 07ba EE030000 		.4byte	.LASF92
 5323 07be 01       		.byte	0x1
 5324 07bf A602     		.2byte	0x2a6
 5325 07c1 C3080000 		.4byte	0x8c3
 5326 07c5 07030000 		.4byte	.LLST19
 5327 07c9 19       		.uleb128 0x19
 5328 07ca 48050000 		.4byte	.LASF81
 5329 07ce 01       		.byte	0x1
 5330 07cf A702     		.2byte	0x2a7
 5331 07d1 CD050000 		.4byte	0x5cd
 5332 07d5 28030000 		.4byte	.LLST20
 5333 07d9 1F       		.uleb128 0x1f
 5334 07da 040E0000 		.4byte	.LASF62
 5335 07de 01       		.byte	0x1
 5336 07df A802     		.2byte	0x2a8
 5337 07e1 40010000 		.4byte	0x140
 5338 07e5 02       		.uleb128 0x2
 5339 07e6 91       		.byte	0x91
 5340 07e7 00       		.sleb128 0
 5341 07e8 1F       		.uleb128 0x1f
 5342 07e9 F5040000 		.4byte	.LASF82
 5343 07ed 01       		.byte	0x1
 5344 07ee A902     		.2byte	0x2a9
 5345 07f0 D8050000 		.4byte	0x5d8
 5346 07f4 02       		.uleb128 0x2
 5347 07f5 91       		.byte	0x91
 5348 07f6 04       		.sleb128 4
 5349 07f7 1A       		.uleb128 0x1a
 5350 07f8 CD020000 		.4byte	.LASF83
 5351 07fc 01       		.byte	0x1
 5352 07fd AB02     		.2byte	0x2ab
 5353 07ff 72040000 		.4byte	0x472
 5354 0803 46030000 		.4byte	.LLST21
 5355 0807 1A       		.uleb128 0x1a
 5356 0808 AC040000 		.4byte	.LASF72
 5357 080c 01       		.byte	0x1
 5358 080d AC02     		.2byte	0x2ac
 5359 080f 35010000 		.4byte	0x135
 5360 0813 6F030000 		.4byte	.LLST22
 5361 0817 24       		.uleb128 0x24
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 194


 5362 0818 0E000000 		.4byte	.LBB18
 5363 081c 24000000 		.4byte	.LBE18-.LBB18
 5364 0820 6F080000 		.4byte	0x86f
 5365 0824 1A       		.uleb128 0x1a
 5366 0825 2C030000 		.4byte	.LASF63
 5367 0829 01       		.byte	0x1
 5368 082a C902     		.2byte	0x2c9
 5369 082c F0020000 		.4byte	0x2f0
 5370 0830 8E030000 		.4byte	.LLST23
 5371 0834 22       		.uleb128 0x22
 5372 0835 14000000 		.4byte	.LVL62
 5373 0839 AF1D0000 		.4byte	0x1daf
 5374 083d 4A080000 		.4byte	0x84a
 5375 0841 1E       		.uleb128 0x1e
 5376 0842 01       		.uleb128 0x1
 5377 0843 50       		.byte	0x50
 5378 0844 04       		.uleb128 0x4
 5379 0845 75       		.byte	0x75
 5380 0846 00       		.sleb128 0
 5381 0847 32       		.byte	0x32
 5382 0848 24       		.byte	0x24
 5383 0849 00       		.byte	0
 5384 084a 22       		.uleb128 0x22
 5385 084b 1E000000 		.4byte	.LVL64
 5386 084f AF1D0000 		.4byte	0x1daf
 5387 0853 5E080000 		.4byte	0x85e
 5388 0857 1E       		.uleb128 0x1e
 5389 0858 01       		.uleb128 0x1
 5390 0859 50       		.byte	0x50
 5391 085a 02       		.uleb128 0x2
 5392 085b 08       		.byte	0x8
 5393 085c 60       		.byte	0x60
 5394 085d 00       		.byte	0
 5395 085e 1D       		.uleb128 0x1d
 5396 085f 2E000000 		.4byte	.LVL66
 5397 0863 3C1D0000 		.4byte	0x1d3c
 5398 0867 1E       		.uleb128 0x1e
 5399 0868 01       		.uleb128 0x1
 5400 0869 50       		.byte	0x50
 5401 086a 02       		.uleb128 0x2
 5402 086b 79       		.byte	0x79
 5403 086c 00       		.sleb128 0
 5404 086d 00       		.byte	0
 5405 086e 00       		.byte	0
 5406 086f 22       		.uleb128 0x22
 5407 0870 4E000000 		.4byte	.LVL69
 5408 0874 B8040000 		.4byte	0x4b8
 5409 0878 B2080000 		.4byte	0x8b2
 5410 087c 1E       		.uleb128 0x1e
 5411 087d 01       		.uleb128 0x1
 5412 087e 50       		.byte	0x50
 5413 087f 02       		.uleb128 0x2
 5414 0880 76       		.byte	0x76
 5415 0881 00       		.sleb128 0
 5416 0882 1E       		.uleb128 0x1e
 5417 0883 01       		.uleb128 0x1
 5418 0884 51       		.byte	0x51
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 195


 5419 0885 02       		.uleb128 0x2
 5420 0886 77       		.byte	0x77
 5421 0887 00       		.sleb128 0
 5422 0888 1E       		.uleb128 0x1e
 5423 0889 01       		.uleb128 0x1
 5424 088a 52       		.byte	0x52
 5425 088b 02       		.uleb128 0x2
 5426 088c 75       		.byte	0x75
 5427 088d 00       		.sleb128 0
 5428 088e 1E       		.uleb128 0x1e
 5429 088f 01       		.uleb128 0x1
 5430 0890 53       		.byte	0x53
 5431 0891 02       		.uleb128 0x2
 5432 0892 78       		.byte	0x78
 5433 0893 00       		.sleb128 0
 5434 0894 1E       		.uleb128 0x1e
 5435 0895 02       		.uleb128 0x2
 5436 0896 7D       		.byte	0x7d
 5437 0897 00       		.sleb128 0
 5438 0898 03       		.uleb128 0x3
 5439 0899 91       		.byte	0x91
 5440 089a 00       		.sleb128 0
 5441 089b 06       		.byte	0x6
 5442 089c 1E       		.uleb128 0x1e
 5443 089d 02       		.uleb128 0x2
 5444 089e 7D       		.byte	0x7d
 5445 089f 04       		.sleb128 4
 5446 08a0 03       		.uleb128 0x3
 5447 08a1 91       		.byte	0x91
 5448 08a2 04       		.sleb128 4
 5449 08a3 06       		.byte	0x6
 5450 08a4 1E       		.uleb128 0x1e
 5451 08a5 02       		.uleb128 0x2
 5452 08a6 7D       		.byte	0x7d
 5453 08a7 08       		.sleb128 8
 5454 08a8 02       		.uleb128 0x2
 5455 08a9 74       		.byte	0x74
 5456 08aa 00       		.sleb128 0
 5457 08ab 1E       		.uleb128 0x1e
 5458 08ac 02       		.uleb128 0x2
 5459 08ad 7D       		.byte	0x7d
 5460 08ae 0C       		.sleb128 12
 5461 08af 01       		.uleb128 0x1
 5462 08b0 30       		.byte	0x30
 5463 08b1 00       		.byte	0
 5464 08b2 1D       		.uleb128 0x1d
 5465 08b3 54000000 		.4byte	.LVL70
 5466 08b7 96060000 		.4byte	0x696
 5467 08bb 1E       		.uleb128 0x1e
 5468 08bc 01       		.uleb128 0x1
 5469 08bd 50       		.byte	0x50
 5470 08be 02       		.uleb128 0x2
 5471 08bf 74       		.byte	0x74
 5472 08c0 00       		.sleb128 0
 5473 08c1 00       		.byte	0
 5474 08c2 00       		.byte	0
 5475 08c3 07       		.uleb128 0x7
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 196


 5476 08c4 D5000000 		.4byte	0xd5
 5477 08c8 25       		.uleb128 0x25
 5478 08c9 820B0000 		.4byte	.LASF99
 5479 08cd 01       		.byte	0x1
 5480 08ce 1804     		.2byte	0x418
 5481 08d0 00000000 		.4byte	.LFB132
 5482 08d4 A4000000 		.4byte	.LFE132-.LFB132
 5483 08d8 01       		.uleb128 0x1
 5484 08d9 9C       		.byte	0x9c
 5485 08da 71090000 		.4byte	0x971
 5486 08de 19       		.uleb128 0x19
 5487 08df 26080000 		.4byte	.LASF93
 5488 08e3 01       		.byte	0x1
 5489 08e4 1804     		.2byte	0x418
 5490 08e6 3E020000 		.4byte	0x23e
 5491 08ea B7030000 		.4byte	.LLST24
 5492 08ee 1A       		.uleb128 0x1a
 5493 08ef A5050000 		.4byte	.LASF73
 5494 08f3 01       		.byte	0x1
 5495 08f4 1A04     		.2byte	0x41a
 5496 08f6 72040000 		.4byte	0x472
 5497 08fa D5030000 		.4byte	.LLST25
 5498 08fe 1C       		.uleb128 0x1c
 5499 08ff 08000000 		.4byte	.LVL74
 5500 0903 751D0000 		.4byte	0x1d75
 5501 0907 22       		.uleb128 0x22
 5502 0908 18000000 		.4byte	.LVL76
 5503 090c 971D0000 		.4byte	0x1d97
 5504 0910 1B090000 		.4byte	0x91b
 5505 0914 1E       		.uleb128 0x1e
 5506 0915 01       		.uleb128 0x1
 5507 0916 50       		.byte	0x50
 5508 0917 02       		.uleb128 0x2
 5509 0918 76       		.byte	0x76
 5510 0919 00       		.sleb128 0
 5511 091a 00       		.byte	0
 5512 091b 22       		.uleb128 0x22
 5513 091c 24000000 		.4byte	.LVL77
 5514 0920 971D0000 		.4byte	0x1d97
 5515 0924 2F090000 		.4byte	0x92f
 5516 0928 1E       		.uleb128 0x1e
 5517 0929 01       		.uleb128 0x1
 5518 092a 50       		.byte	0x50
 5519 092b 02       		.uleb128 0x2
 5520 092c 74       		.byte	0x74
 5521 092d 18       		.sleb128 24
 5522 092e 00       		.byte	0
 5523 092f 22       		.uleb128 0x22
 5524 0930 44000000 		.4byte	.LVL78
 5525 0934 801D0000 		.4byte	0x1d80
 5526 0938 4A090000 		.4byte	0x94a
 5527 093c 1E       		.uleb128 0x1e
 5528 093d 01       		.uleb128 0x1
 5529 093e 50       		.byte	0x50
 5530 093f 03       		.uleb128 0x3
 5531 0940 75       		.byte	0x75
 5532 0941 E401     		.sleb128 228
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 197


 5533 0943 1E       		.uleb128 0x1e
 5534 0944 01       		.uleb128 0x1
 5535 0945 51       		.byte	0x51
 5536 0946 02       		.uleb128 0x2
 5537 0947 76       		.byte	0x76
 5538 0948 00       		.sleb128 0
 5539 0949 00       		.byte	0
 5540 094a 22       		.uleb128 0x22
 5541 094b 62000000 		.4byte	.LVL79
 5542 094f 78040000 		.4byte	0x478
 5543 0953 5E090000 		.4byte	0x95e
 5544 0957 1E       		.uleb128 0x1e
 5545 0958 01       		.uleb128 0x1
 5546 0959 50       		.byte	0x50
 5547 095a 02       		.uleb128 0x2
 5548 095b 74       		.byte	0x74
 5549 095c 00       		.sleb128 0
 5550 095d 00       		.byte	0
 5551 095e 1C       		.uleb128 0x1c
 5552 095f 66000000 		.4byte	.LVL80
 5553 0963 4B040000 		.4byte	0x44b
 5554 0967 1C       		.uleb128 0x1c
 5555 0968 6A000000 		.4byte	.LVL81
 5556 096c 8C1D0000 		.4byte	0x1d8c
 5557 0970 00       		.byte	0
 5558 0971 23       		.uleb128 0x23
 5559 0972 4B0E0000 		.4byte	.LASF95
 5560 0976 01       		.byte	0x1
 5561 0977 3C05     		.2byte	0x53c
 5562 0979 40010000 		.4byte	0x140
 5563 097d 00000000 		.4byte	.LFB135
 5564 0981 20000000 		.4byte	.LFE135-.LFB135
 5565 0985 01       		.uleb128 0x1
 5566 0986 9C       		.byte	0x9c
 5567 0987 CE090000 		.4byte	0x9ce
 5568 098b 19       		.uleb128 0x19
 5569 098c E6060000 		.4byte	.LASF76
 5570 0990 01       		.byte	0x1
 5571 0991 3C05     		.2byte	0x53c
 5572 0993 3E020000 		.4byte	0x23e
 5573 0997 E8030000 		.4byte	.LLST26
 5574 099b 1A       		.uleb128 0x1a
 5575 099c A5050000 		.4byte	.LASF73
 5576 09a0 01       		.byte	0x1
 5577 09a1 3E05     		.2byte	0x53e
 5578 09a3 72040000 		.4byte	0x472
 5579 09a7 06040000 		.4byte	.LLST27
 5580 09ab 1A       		.uleb128 0x1a
 5581 09ac 04060000 		.4byte	.LASF96
 5582 09b0 01       		.byte	0x1
 5583 09b1 3F05     		.2byte	0x53f
 5584 09b3 40010000 		.4byte	0x140
 5585 09b7 19040000 		.4byte	.LLST28
 5586 09bb 1C       		.uleb128 0x1c
 5587 09bc 08000000 		.4byte	.LVL84
 5588 09c0 751D0000 		.4byte	0x1d75
 5589 09c4 1C       		.uleb128 0x1c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 198


 5590 09c5 16000000 		.4byte	.LVL87
 5591 09c9 8C1D0000 		.4byte	0x1d8c
 5592 09cd 00       		.byte	0
 5593 09ce 23       		.uleb128 0x23
 5594 09cf 070A0000 		.4byte	.LASF97
 5595 09d3 01       		.byte	0x1
 5596 09d4 5205     		.2byte	0x552
 5597 09d6 40010000 		.4byte	0x140
 5598 09da 00000000 		.4byte	.LFB136
 5599 09de 30000000 		.4byte	.LFE136-.LFB136
 5600 09e2 01       		.uleb128 0x1
 5601 09e3 9C       		.byte	0x9c
 5602 09e4 730A0000 		.4byte	0xa73
 5603 09e8 19       		.uleb128 0x19
 5604 09e9 E6060000 		.4byte	.LASF76
 5605 09ed 01       		.byte	0x1
 5606 09ee 5205     		.2byte	0x552
 5607 09f0 3E020000 		.4byte	0x23e
 5608 09f4 37040000 		.4byte	.LLST29
 5609 09f8 1A       		.uleb128 0x1a
 5610 09f9 A5050000 		.4byte	.LASF73
 5611 09fd 01       		.byte	0x1
 5612 09fe 5405     		.2byte	0x554
 5613 0a00 72040000 		.4byte	0x472
 5614 0a04 55040000 		.4byte	.LLST30
 5615 0a08 20       		.uleb128 0x20
 5616 0a09 04060000 		.4byte	.LASF96
 5617 0a0d 01       		.byte	0x1
 5618 0a0e 5505     		.2byte	0x555
 5619 0a10 40010000 		.4byte	0x140
 5620 0a14 01       		.uleb128 0x1
 5621 0a15 50       		.byte	0x50
 5622 0a16 26       		.uleb128 0x26
 5623 0a17 B40B0000 		.4byte	.LASF98
 5624 0a1b 01       		.byte	0x1
 5625 0a1c 5505     		.2byte	0x555
 5626 0a1e 40010000 		.4byte	0x140
 5627 0a22 27       		.uleb128 0x27
 5628 0a23 AC030000 		.4byte	0x3ac
 5629 0a27 08000000 		.4byte	.LBB19
 5630 0a2b 14000000 		.4byte	.LBE19-.LBB19
 5631 0a2f 01       		.byte	0x1
 5632 0a30 6905     		.2byte	0x569
 5633 0a32 4B0A0000 		.4byte	0xa4b
 5634 0a36 28       		.uleb128 0x28
 5635 0a37 08000000 		.4byte	.LBB20
 5636 0a3b 14000000 		.4byte	.LBE20-.LBB20
 5637 0a3f 29       		.uleb128 0x29
 5638 0a40 BC030000 		.4byte	0x3bc
 5639 0a44 29       		.uleb128 0x29
 5640 0a45 C7030000 		.4byte	0x3c7
 5641 0a49 00       		.byte	0
 5642 0a4a 00       		.byte	0
 5643 0a4b 27       		.uleb128 0x27
 5644 0a4c D3030000 		.4byte	0x3d3
 5645 0a50 26000000 		.4byte	.LBB21
 5646 0a54 04000000 		.4byte	.LBE21-.LBB21
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 199


 5647 0a58 01       		.byte	0x1
 5648 0a59 7005     		.2byte	0x570
 5649 0a5b 690A0000 		.4byte	0xa69
 5650 0a5f 2A       		.uleb128 0x2a
 5651 0a60 DF030000 		.4byte	0x3df
 5652 0a64 68040000 		.4byte	.LLST31
 5653 0a68 00       		.byte	0
 5654 0a69 1C       		.uleb128 0x1c
 5655 0a6a 08000000 		.4byte	.LVL90
 5656 0a6e BA1D0000 		.4byte	0x1dba
 5657 0a72 00       		.byte	0
 5658 0a73 25       		.uleb128 0x25
 5659 0a74 9E010000 		.4byte	.LASF100
 5660 0a78 01       		.byte	0x1
 5661 0a79 7A05     		.2byte	0x57a
 5662 0a7b 00000000 		.4byte	.LFB137
 5663 0a7f D0000000 		.4byte	.LFE137-.LFB137
 5664 0a83 01       		.uleb128 0x1
 5665 0a84 9C       		.byte	0x9c
 5666 0a85 240B0000 		.4byte	0xb24
 5667 0a89 19       		.uleb128 0x19
 5668 0a8a E6060000 		.4byte	.LASF76
 5669 0a8e 01       		.byte	0x1
 5670 0a8f 7A05     		.2byte	0x57a
 5671 0a91 3E020000 		.4byte	0x23e
 5672 0a95 7B040000 		.4byte	.LLST32
 5673 0a99 19       		.uleb128 0x19
 5674 0a9a 05070000 		.4byte	.LASF101
 5675 0a9e 01       		.byte	0x1
 5676 0a9f 7A05     		.2byte	0x57a
 5677 0aa1 40010000 		.4byte	0x140
 5678 0aa5 99040000 		.4byte	.LLST33
 5679 0aa9 1A       		.uleb128 0x1a
 5680 0aaa A5050000 		.4byte	.LASF73
 5681 0aae 01       		.byte	0x1
 5682 0aaf 7C05     		.2byte	0x57c
 5683 0ab1 72040000 		.4byte	0x472
 5684 0ab5 C3040000 		.4byte	.LLST34
 5685 0ab9 1A       		.uleb128 0x1a
 5686 0aba 61090000 		.4byte	.LASF102
 5687 0abe 01       		.byte	0x1
 5688 0abf 7D05     		.2byte	0x57d
 5689 0ac1 40010000 		.4byte	0x140
 5690 0ac5 D6040000 		.4byte	.LLST35
 5691 0ac9 1A       		.uleb128 0x1a
 5692 0aca 04020000 		.4byte	.LASF103
 5693 0ace 01       		.byte	0x1
 5694 0acf 7D05     		.2byte	0x57d
 5695 0ad1 40010000 		.4byte	0x140
 5696 0ad5 E9040000 		.4byte	.LLST36
 5697 0ad9 1A       		.uleb128 0x1a
 5698 0ada AB050000 		.4byte	.LASF104
 5699 0ade 01       		.byte	0x1
 5700 0adf 7E05     		.2byte	0x57e
 5701 0ae1 35010000 		.4byte	0x135
 5702 0ae5 FC040000 		.4byte	.LLST37
 5703 0ae9 1C       		.uleb128 0x1c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 200


 5704 0aea 18000000 		.4byte	.LVL97
 5705 0aee 751D0000 		.4byte	0x1d75
 5706 0af2 22       		.uleb128 0x22
 5707 0af3 88000000 		.4byte	.LVL103
 5708 0af7 971D0000 		.4byte	0x1d97
 5709 0afb 060B0000 		.4byte	0xb06
 5710 0aff 1E       		.uleb128 0x1e
 5711 0b00 01       		.uleb128 0x1
 5712 0b01 50       		.byte	0x50
 5713 0b02 02       		.uleb128 0x2
 5714 0b03 75       		.byte	0x75
 5715 0b04 00       		.sleb128 0
 5716 0b05 00       		.byte	0
 5717 0b06 22       		.uleb128 0x22
 5718 0b07 AA000000 		.4byte	.LVL104
 5719 0b0b 801D0000 		.4byte	0x1d80
 5720 0b0f 1A0B0000 		.4byte	0xb1a
 5721 0b13 1E       		.uleb128 0x1e
 5722 0b14 01       		.uleb128 0x1
 5723 0b15 51       		.byte	0x51
 5724 0b16 02       		.uleb128 0x2
 5725 0b17 75       		.byte	0x75
 5726 0b18 00       		.sleb128 0
 5727 0b19 00       		.byte	0
 5728 0b1a 1C       		.uleb128 0x1c
 5729 0b1b C0000000 		.4byte	.LVL106
 5730 0b1f 8C1D0000 		.4byte	0x1d8c
 5731 0b23 00       		.byte	0
 5732 0b24 25       		.uleb128 0x25
 5733 0b25 E8050000 		.4byte	.LASF105
 5734 0b29 01       		.byte	0x1
 5735 0b2a A606     		.2byte	0x6a6
 5736 0b2c 00000000 		.4byte	.LFB140
 5737 0b30 7C000000 		.4byte	.LFE140-.LFB140
 5738 0b34 01       		.uleb128 0x1
 5739 0b35 9C       		.byte	0x9c
 5740 0b36 A90B0000 		.4byte	0xba9
 5741 0b3a 19       		.uleb128 0x19
 5742 0b3b C7090000 		.4byte	.LASF106
 5743 0b3f 01       		.byte	0x1
 5744 0b40 A606     		.2byte	0x6a6
 5745 0b42 3E020000 		.4byte	0x23e
 5746 0b46 1B050000 		.4byte	.LLST38
 5747 0b4a 1A       		.uleb128 0x1a
 5748 0b4b A5050000 		.4byte	.LASF73
 5749 0b4f 01       		.byte	0x1
 5750 0b50 A806     		.2byte	0x6a8
 5751 0b52 A90B0000 		.4byte	0xba9
 5752 0b56 47050000 		.4byte	.LLST39
 5753 0b5a 1C       		.uleb128 0x1c
 5754 0b5b 1A000000 		.4byte	.LVL109
 5755 0b5f 751D0000 		.4byte	0x1d75
 5756 0b63 22       		.uleb128 0x22
 5757 0b64 20000000 		.4byte	.LVL110
 5758 0b68 EB030000 		.4byte	0x3eb
 5759 0b6c 770B0000 		.4byte	0xb77
 5760 0b70 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 201


 5761 0b71 01       		.uleb128 0x1
 5762 0b72 50       		.byte	0x50
 5763 0b73 02       		.uleb128 0x2
 5764 0b74 74       		.byte	0x74
 5765 0b75 00       		.sleb128 0
 5766 0b76 00       		.byte	0
 5767 0b77 22       		.uleb128 0x22
 5768 0b78 2A000000 		.4byte	.LVL111
 5769 0b7c 971D0000 		.4byte	0x1d97
 5770 0b80 8B0B0000 		.4byte	0xb8b
 5771 0b84 1E       		.uleb128 0x1e
 5772 0b85 01       		.uleb128 0x1
 5773 0b86 50       		.byte	0x50
 5774 0b87 02       		.uleb128 0x2
 5775 0b88 76       		.byte	0x76
 5776 0b89 00       		.sleb128 0
 5777 0b8a 00       		.byte	0
 5778 0b8b 22       		.uleb128 0x22
 5779 0b8c 50000000 		.4byte	.LVL112
 5780 0b90 801D0000 		.4byte	0x1d80
 5781 0b94 9F0B0000 		.4byte	0xb9f
 5782 0b98 1E       		.uleb128 0x1e
 5783 0b99 01       		.uleb128 0x1
 5784 0b9a 51       		.byte	0x51
 5785 0b9b 02       		.uleb128 0x2
 5786 0b9c 76       		.byte	0x76
 5787 0b9d 00       		.sleb128 0
 5788 0b9e 00       		.byte	0
 5789 0b9f 1C       		.uleb128 0x1c
 5790 0ba0 70000000 		.4byte	.LVL113
 5791 0ba4 8C1D0000 		.4byte	0x1d8c
 5792 0ba8 00       		.byte	0
 5793 0ba9 07       		.uleb128 0x7
 5794 0baa 72040000 		.4byte	0x472
 5795 0bae 23       		.uleb128 0x23
 5796 0baf 91040000 		.4byte	.LASF107
 5797 0bb3 01       		.byte	0x1
 5798 0bb4 DC06     		.2byte	0x6dc
 5799 0bb6 35010000 		.4byte	0x135
 5800 0bba 00000000 		.4byte	.LFB141
 5801 0bbe 98000000 		.4byte	.LFE141-.LFB141
 5802 0bc2 01       		.uleb128 0x1
 5803 0bc3 9C       		.byte	0x9c
 5804 0bc4 AA0C0000 		.4byte	0xcaa
 5805 0bc8 19       		.uleb128 0x19
 5806 0bc9 C7090000 		.4byte	.LASF106
 5807 0bcd 01       		.byte	0x1
 5808 0bce DC06     		.2byte	0x6dc
 5809 0bd0 3E020000 		.4byte	0x23e
 5810 0bd4 73050000 		.4byte	.LLST40
 5811 0bd8 1A       		.uleb128 0x1a
 5812 0bd9 AB050000 		.4byte	.LASF104
 5813 0bdd 01       		.byte	0x1
 5814 0bde DE06     		.2byte	0x6de
 5815 0be0 35010000 		.4byte	0x135
 5816 0be4 9F050000 		.4byte	.LLST41
 5817 0be8 1A       		.uleb128 0x1a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 202


 5818 0be9 A5050000 		.4byte	.LASF73
 5819 0bed 01       		.byte	0x1
 5820 0bee DF06     		.2byte	0x6df
 5821 0bf0 A90B0000 		.4byte	0xba9
 5822 0bf4 E0050000 		.4byte	.LLST42
 5823 0bf8 26       		.uleb128 0x26
 5824 0bf9 7B0A0000 		.4byte	.LASF108
 5825 0bfd 01       		.byte	0x1
 5826 0bfe E006     		.2byte	0x6e0
 5827 0c00 40010000 		.4byte	0x140
 5828 0c04 27       		.uleb128 0x27
 5829 0c05 AC030000 		.4byte	0x3ac
 5830 0c09 0E000000 		.4byte	.LBB23
 5831 0c0d 14000000 		.4byte	.LBE23-.LBB23
 5832 0c11 01       		.byte	0x1
 5833 0c12 F606     		.2byte	0x6f6
 5834 0c14 2D0C0000 		.4byte	0xc2d
 5835 0c18 28       		.uleb128 0x28
 5836 0c19 0E000000 		.4byte	.LBB24
 5837 0c1d 14000000 		.4byte	.LBE24-.LBB24
 5838 0c21 29       		.uleb128 0x29
 5839 0c22 BC030000 		.4byte	0x3bc
 5840 0c26 29       		.uleb128 0x29
 5841 0c27 C7030000 		.4byte	0x3c7
 5842 0c2b 00       		.byte	0
 5843 0c2c 00       		.byte	0
 5844 0c2d 27       		.uleb128 0x27
 5845 0c2e D3030000 		.4byte	0x3d3
 5846 0c32 82000000 		.4byte	.LBB25
 5847 0c36 04000000 		.4byte	.LBE25-.LBB25
 5848 0c3a 01       		.byte	0x1
 5849 0c3b 1A07     		.2byte	0x71a
 5850 0c3d 4B0C0000 		.4byte	0xc4b
 5851 0c41 2A       		.uleb128 0x2a
 5852 0c42 DF030000 		.4byte	0x3df
 5853 0c46 0C060000 		.4byte	.LLST43
 5854 0c4a 00       		.byte	0
 5855 0c4b 1C       		.uleb128 0x1c
 5856 0c4c 0E000000 		.4byte	.LVL116
 5857 0c50 BA1D0000 		.4byte	0x1dba
 5858 0c54 22       		.uleb128 0x22
 5859 0c55 28000000 		.4byte	.LVL117
 5860 0c59 EB030000 		.4byte	0x3eb
 5861 0c5d 680C0000 		.4byte	0xc68
 5862 0c61 1E       		.uleb128 0x1e
 5863 0c62 01       		.uleb128 0x1
 5864 0c63 50       		.byte	0x50
 5865 0c64 02       		.uleb128 0x2
 5866 0c65 74       		.byte	0x74
 5867 0c66 00       		.sleb128 0
 5868 0c67 00       		.byte	0
 5869 0c68 22       		.uleb128 0x22
 5870 0c69 4E000000 		.4byte	.LVL119
 5871 0c6d 971D0000 		.4byte	0x1d97
 5872 0c71 7C0C0000 		.4byte	0xc7c
 5873 0c75 1E       		.uleb128 0x1e
 5874 0c76 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 203


 5875 0c77 50       		.byte	0x50
 5876 0c78 02       		.uleb128 0x2
 5877 0c79 76       		.byte	0x76
 5878 0c7a 00       		.sleb128 0
 5879 0c7b 00       		.byte	0
 5880 0c7c 22       		.uleb128 0x22
 5881 0c7d 70000000 		.4byte	.LVL120
 5882 0c81 801D0000 		.4byte	0x1d80
 5883 0c85 900C0000 		.4byte	0xc90
 5884 0c89 1E       		.uleb128 0x1e
 5885 0c8a 01       		.uleb128 0x1
 5886 0c8b 51       		.byte	0x51
 5887 0c8c 02       		.uleb128 0x2
 5888 0c8d 76       		.byte	0x76
 5889 0c8e 00       		.sleb128 0
 5890 0c8f 00       		.byte	0
 5891 0c90 1D       		.uleb128 0x1d
 5892 0c91 7C000000 		.4byte	.LVL122
 5893 0c95 801D0000 		.4byte	0x1d80
 5894 0c99 1E       		.uleb128 0x1e
 5895 0c9a 01       		.uleb128 0x1
 5896 0c9b 50       		.byte	0x50
 5897 0c9c 05       		.uleb128 0x5
 5898 0c9d 03       		.byte	0x3
 5899 0c9e 14000000 		.4byte	.LANCHOR0+20
 5900 0ca2 1E       		.uleb128 0x1e
 5901 0ca3 01       		.uleb128 0x1
 5902 0ca4 51       		.byte	0x51
 5903 0ca5 02       		.uleb128 0x2
 5904 0ca6 74       		.byte	0x74
 5905 0ca7 18       		.sleb128 24
 5906 0ca8 00       		.byte	0
 5907 0ca9 00       		.byte	0
 5908 0caa 25       		.uleb128 0x25
 5909 0cab 2B040000 		.4byte	.LASF109
 5910 0caf 01       		.byte	0x1
 5911 0cb0 2207     		.2byte	0x722
 5912 0cb2 00000000 		.4byte	.LFB142
 5913 0cb6 60000000 		.4byte	.LFE142-.LFB142
 5914 0cba 01       		.uleb128 0x1
 5915 0cbb 9C       		.byte	0x9c
 5916 0cbc 1E0D0000 		.4byte	0xd1e
 5917 0cc0 1A       		.uleb128 0x1a
 5918 0cc1 AC040000 		.4byte	.LASF72
 5919 0cc5 01       		.byte	0x1
 5920 0cc6 2407     		.2byte	0x724
 5921 0cc8 35010000 		.4byte	0x135
 5922 0ccc 1F060000 		.4byte	.LLST44
 5923 0cd0 22       		.uleb128 0x22
 5924 0cd1 16000000 		.4byte	.LVL126
 5925 0cd5 7F070000 		.4byte	0x77f
 5926 0cd9 0B0D0000 		.4byte	0xd0b
 5927 0cdd 1E       		.uleb128 0x1e
 5928 0cde 01       		.uleb128 0x1
 5929 0cdf 50       		.byte	0x50
 5930 0ce0 05       		.uleb128 0x5
 5931 0ce1 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 204


 5932 0ce2 00000000 		.4byte	prvIdleTask
 5933 0ce6 1E       		.uleb128 0x1e
 5934 0ce7 01       		.uleb128 0x1
 5935 0ce8 51       		.byte	0x51
 5936 0ce9 05       		.uleb128 0x5
 5937 0cea 03       		.byte	0x3
 5938 0ceb 00000000 		.4byte	.LC0
 5939 0cef 1E       		.uleb128 0x1e
 5940 0cf0 01       		.uleb128 0x1
 5941 0cf1 52       		.byte	0x52
 5942 0cf2 02       		.uleb128 0x2
 5943 0cf3 08       		.byte	0x8
 5944 0cf4 80       		.byte	0x80
 5945 0cf5 1E       		.uleb128 0x1e
 5946 0cf6 01       		.uleb128 0x1
 5947 0cf7 53       		.byte	0x53
 5948 0cf8 01       		.uleb128 0x1
 5949 0cf9 30       		.byte	0x30
 5950 0cfa 1E       		.uleb128 0x1e
 5951 0cfb 02       		.uleb128 0x2
 5952 0cfc 7D       		.byte	0x7d
 5953 0cfd 00       		.sleb128 0
 5954 0cfe 01       		.uleb128 0x1
 5955 0cff 30       		.byte	0x30
 5956 0d00 1E       		.uleb128 0x1e
 5957 0d01 02       		.uleb128 0x2
 5958 0d02 7D       		.byte	0x7d
 5959 0d03 04       		.sleb128 4
 5960 0d04 05       		.uleb128 0x5
 5961 0d05 03       		.byte	0x3
 5962 0d06 1C010000 		.4byte	.LANCHOR0+284
 5963 0d0a 00       		.byte	0
 5964 0d0b 1C       		.uleb128 0x1c
 5965 0d0c 1E000000 		.4byte	.LVL127
 5966 0d10 C51D0000 		.4byte	0x1dc5
 5967 0d14 1C       		.uleb128 0x1c
 5968 0d15 3C000000 		.4byte	.LVL128
 5969 0d19 D11D0000 		.4byte	0x1dd1
 5970 0d1d 00       		.byte	0
 5971 0d1e 25       		.uleb128 0x25
 5972 0d1f A6090000 		.4byte	.LASF110
 5973 0d23 01       		.byte	0x1
 5974 0d24 8D07     		.2byte	0x78d
 5975 0d26 00000000 		.4byte	.LFB143
 5976 0d2a 18000000 		.4byte	.LFE143-.LFB143
 5977 0d2e 01       		.uleb128 0x1
 5978 0d2f 9C       		.byte	0x9c
 5979 0d30 3E0D0000 		.4byte	0xd3e
 5980 0d34 1C       		.uleb128 0x1c
 5981 0d35 10000000 		.4byte	.LVL131
 5982 0d39 DC1D0000 		.4byte	0x1ddc
 5983 0d3d 00       		.byte	0
 5984 0d3e 2B       		.uleb128 0x2b
 5985 0d3f E60A0000 		.4byte	.LASF152
 5986 0d43 01       		.byte	0x1
 5987 0d44 9807     		.2byte	0x798
 5988 0d46 00000000 		.4byte	.LFB144
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 205


 5989 0d4a 14000000 		.4byte	.LFE144-.LFB144
 5990 0d4e 01       		.uleb128 0x1
 5991 0d4f 9C       		.byte	0x9c
 5992 0d50 23       		.uleb128 0x23
 5993 0d51 D6010000 		.4byte	.LASF111
 5994 0d55 01       		.byte	0x1
 5995 0d56 4F08     		.2byte	0x84f
 5996 0d58 4B010000 		.4byte	0x14b
 5997 0d5c 00000000 		.4byte	.LFB146
 5998 0d60 0C000000 		.4byte	.LFE146-.LFB146
 5999 0d64 01       		.uleb128 0x1
 6000 0d65 9C       		.byte	0x9c
 6001 0d66 790D0000 		.4byte	0xd79
 6002 0d6a 20       		.uleb128 0x20
 6003 0d6b 780D0000 		.4byte	.LASF112
 6004 0d6f 01       		.byte	0x1
 6005 0d70 5108     		.2byte	0x851
 6006 0d72 4B010000 		.4byte	0x14b
 6007 0d76 01       		.uleb128 0x1
 6008 0d77 50       		.byte	0x50
 6009 0d78 00       		.byte	0
 6010 0d79 23       		.uleb128 0x23
 6011 0d7a 06030000 		.4byte	.LASF113
 6012 0d7e 01       		.byte	0x1
 6013 0d7f 5E08     		.2byte	0x85e
 6014 0d81 4B010000 		.4byte	0x14b
 6015 0d85 00000000 		.4byte	.LFB147
 6016 0d89 14000000 		.4byte	.LFE147-.LFB147
 6017 0d8d 01       		.uleb128 0x1
 6018 0d8e 9C       		.byte	0x9c
 6019 0d8f B80D0000 		.4byte	0xdb8
 6020 0d93 20       		.uleb128 0x20
 6021 0d94 AC040000 		.4byte	.LASF72
 6022 0d98 01       		.byte	0x1
 6023 0d99 6008     		.2byte	0x860
 6024 0d9b 4B010000 		.4byte	0x14b
 6025 0d9f 01       		.uleb128 0x1
 6026 0da0 50       		.byte	0x50
 6027 0da1 2C       		.uleb128 0x2c
 6028 0da2 7B0A0000 		.4byte	.LASF108
 6029 0da6 01       		.byte	0x1
 6030 0da7 6108     		.2byte	0x861
 6031 0da9 40010000 		.4byte	0x140
 6032 0dad 00       		.byte	0
 6033 0dae 1C       		.uleb128 0x1c
 6034 0daf 06000000 		.4byte	.LVL133
 6035 0db3 BA1D0000 		.4byte	0x1dba
 6036 0db7 00       		.byte	0
 6037 0db8 2D       		.uleb128 0x2d
 6038 0db9 4E0C0000 		.4byte	.LASF224
 6039 0dbd 01       		.byte	0x1
 6040 0dbe 7D08     		.2byte	0x87d
 6041 0dc0 40010000 		.4byte	0x140
 6042 0dc4 00000000 		.4byte	.LFB148
 6043 0dc8 0C000000 		.4byte	.LFE148-.LFB148
 6044 0dcc 01       		.uleb128 0x1
 6045 0dcd 9C       		.byte	0x9c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 206


 6046 0dce 23       		.uleb128 0x23
 6047 0dcf 260B0000 		.4byte	.LASF114
 6048 0dd3 01       		.byte	0x1
 6049 0dd4 8508     		.2byte	0x885
 6050 0dd6 B2000000 		.4byte	0xb2
 6051 0dda 00000000 		.4byte	.LFB149
 6052 0dde 1C000000 		.4byte	.LFE149-.LFB149
 6053 0de2 01       		.uleb128 0x1
 6054 0de3 9C       		.byte	0x9c
 6055 0de4 070E0000 		.4byte	0xe07
 6056 0de8 19       		.uleb128 0x19
 6057 0de9 FB030000 		.4byte	.LASF115
 6058 0ded 01       		.byte	0x1
 6059 0dee 8508     		.2byte	0x885
 6060 0df0 3E020000 		.4byte	0x23e
 6061 0df4 48060000 		.4byte	.LLST45
 6062 0df8 20       		.uleb128 0x20
 6063 0df9 A5050000 		.4byte	.LASF73
 6064 0dfd 01       		.byte	0x1
 6065 0dfe 8708     		.2byte	0x887
 6066 0e00 72040000 		.4byte	0x472
 6067 0e04 01       		.uleb128 0x1
 6068 0e05 53       		.byte	0x53
 6069 0e06 00       		.byte	0
 6070 0e07 23       		.uleb128 0x23
 6071 0e08 62030000 		.4byte	.LASF116
 6072 0e0c 01       		.byte	0x1
 6073 0e0d C309     		.2byte	0x9c3
 6074 0e0f 35010000 		.4byte	0x135
 6075 0e13 00000000 		.4byte	.LFB150
 6076 0e17 F0000000 		.4byte	.LFE150-.LFB150
 6077 0e1b 01       		.uleb128 0x1
 6078 0e1c 9C       		.byte	0x9c
 6079 0e1d C70E0000 		.4byte	0xec7
 6080 0e21 1A       		.uleb128 0x1a
 6081 0e22 A5050000 		.4byte	.LASF73
 6082 0e26 01       		.byte	0x1
 6083 0e27 C509     		.2byte	0x9c5
 6084 0e29 72040000 		.4byte	0x472
 6085 0e2d 5B060000 		.4byte	.LLST46
 6086 0e31 1A       		.uleb128 0x1a
 6087 0e32 5F0B0000 		.4byte	.LASF28
 6088 0e36 01       		.byte	0x1
 6089 0e37 C609     		.2byte	0x9c6
 6090 0e39 4B010000 		.4byte	0x14b
 6091 0e3d 79060000 		.4byte	.LLST47
 6092 0e41 1A       		.uleb128 0x1a
 6093 0e42 F4050000 		.4byte	.LASF117
 6094 0e46 01       		.byte	0x1
 6095 0e47 C709     		.2byte	0x9c7
 6096 0e49 35010000 		.4byte	0x135
 6097 0e4d 8C060000 		.4byte	.LLST48
 6098 0e51 2E       		.uleb128 0x2e
 6099 0e52 00000000 		.4byte	.Ldebug_ranges0+0
 6100 0e56 1A       		.uleb128 0x1a
 6101 0e57 FE080000 		.4byte	.LASF91
 6102 0e5b 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 207


 6103 0e5c D109     		.2byte	0x9d1
 6104 0e5e 7A070000 		.4byte	0x77a
 6105 0e62 E4060000 		.4byte	.LLST49
 6106 0e66 24       		.uleb128 0x24
 6107 0e67 1C000000 		.4byte	.LBB28
 6108 0e6b 26000000 		.4byte	.LBE28-.LBB28
 6109 0e6f 8D0E0000 		.4byte	0xe8d
 6110 0e73 1A       		.uleb128 0x1a
 6111 0e74 130C0000 		.4byte	.LASF118
 6112 0e78 01       		.byte	0x1
 6113 0e79 D909     		.2byte	0x9d9
 6114 0e7b C70E0000 		.4byte	0xec7
 6115 0e7f F7060000 		.4byte	.LLST50
 6116 0e83 1C       		.uleb128 0x1c
 6117 0e84 42000000 		.4byte	.LVL142
 6118 0e88 4B040000 		.4byte	0x44b
 6119 0e8c 00       		.byte	0
 6120 0e8d 22       		.uleb128 0x22
 6121 0e8e 8C000000 		.4byte	.LVL149
 6122 0e92 971D0000 		.4byte	0x1d97
 6123 0e96 A10E0000 		.4byte	0xea1
 6124 0e9a 1E       		.uleb128 0x1e
 6125 0e9b 01       		.uleb128 0x1
 6126 0e9c 50       		.byte	0x50
 6127 0e9d 02       		.uleb128 0x2
 6128 0e9e 78       		.byte	0x78
 6129 0e9f 00       		.sleb128 0
 6130 0ea0 00       		.byte	0
 6131 0ea1 22       		.uleb128 0x22
 6132 0ea2 98000000 		.4byte	.LVL150
 6133 0ea6 971D0000 		.4byte	0x1d97
 6134 0eaa B50E0000 		.4byte	0xeb5
 6135 0eae 1E       		.uleb128 0x1e
 6136 0eaf 01       		.uleb128 0x1
 6137 0eb0 50       		.byte	0x50
 6138 0eb1 02       		.uleb128 0x2
 6139 0eb2 75       		.byte	0x75
 6140 0eb3 18       		.sleb128 24
 6141 0eb4 00       		.byte	0
 6142 0eb5 1D       		.uleb128 0x1d
 6143 0eb6 BE000000 		.4byte	.LVL151
 6144 0eba 801D0000 		.4byte	0x1d80
 6145 0ebe 1E       		.uleb128 0x1e
 6146 0ebf 01       		.uleb128 0x1
 6147 0ec0 51       		.byte	0x51
 6148 0ec1 02       		.uleb128 0x2
 6149 0ec2 78       		.byte	0x78
 6150 0ec3 00       		.sleb128 0
 6151 0ec4 00       		.byte	0
 6152 0ec5 00       		.byte	0
 6153 0ec6 00       		.byte	0
 6154 0ec7 06       		.uleb128 0x6
 6155 0ec8 04       		.byte	0x4
 6156 0ec9 33020000 		.4byte	0x233
 6157 0ecd 23       		.uleb128 0x23
 6158 0ece D5090000 		.4byte	.LASF119
 6159 0ed2 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 208


 6160 0ed3 E107     		.2byte	0x7e1
 6161 0ed5 35010000 		.4byte	0x135
 6162 0ed9 00000000 		.4byte	.LFB145
 6163 0edd E4000000 		.4byte	.LFE145-.LFB145
 6164 0ee1 01       		.uleb128 0x1
 6165 0ee2 9C       		.byte	0x9c
 6166 0ee3 860F0000 		.4byte	0xf86
 6167 0ee7 1A       		.uleb128 0x1a
 6168 0ee8 A5050000 		.4byte	.LASF73
 6169 0eec 01       		.byte	0x1
 6170 0eed E307     		.2byte	0x7e3
 6171 0eef 72040000 		.4byte	0x472
 6172 0ef3 19070000 		.4byte	.LLST51
 6173 0ef7 1A       		.uleb128 0x1a
 6174 0ef8 6E010000 		.4byte	.LASF120
 6175 0efc 01       		.byte	0x1
 6176 0efd E407     		.2byte	0x7e4
 6177 0eff 35010000 		.4byte	0x135
 6178 0f03 5B070000 		.4byte	.LLST52
 6179 0f07 24       		.uleb128 0x24
 6180 0f08 8E000000 		.4byte	.LBB30
 6181 0f0c 22000000 		.4byte	.LBE30-.LBB30
 6182 0f10 2E0F0000 		.4byte	0xf2e
 6183 0f14 1A       		.uleb128 0x1a
 6184 0f15 B8090000 		.4byte	.LASF121
 6185 0f19 01       		.byte	0x1
 6186 0f1a 1C08     		.2byte	0x81c
 6187 0f1c 40010000 		.4byte	0x140
 6188 0f20 9D070000 		.4byte	.LLST53
 6189 0f24 1C       		.uleb128 0x1c
 6190 0f25 9A000000 		.4byte	.LVL167
 6191 0f29 070E0000 		.4byte	0xe07
 6192 0f2d 00       		.byte	0
 6193 0f2e 1C       		.uleb128 0x1c
 6194 0f2f 12000000 		.4byte	.LVL157
 6195 0f33 751D0000 		.4byte	0x1d75
 6196 0f37 22       		.uleb128 0x22
 6197 0f38 40000000 		.4byte	.LVL160
 6198 0f3c 971D0000 		.4byte	0x1d97
 6199 0f40 4B0F0000 		.4byte	0xf4b
 6200 0f44 1E       		.uleb128 0x1e
 6201 0f45 01       		.uleb128 0x1
 6202 0f46 50       		.byte	0x50
 6203 0f47 02       		.uleb128 0x2
 6204 0f48 74       		.byte	0x74
 6205 0f49 18       		.sleb128 24
 6206 0f4a 00       		.byte	0
 6207 0f4b 22       		.uleb128 0x22
 6208 0f4c 48000000 		.4byte	.LVL161
 6209 0f50 971D0000 		.4byte	0x1d97
 6210 0f54 5F0F0000 		.4byte	0xf5f
 6211 0f58 1E       		.uleb128 0x1e
 6212 0f59 01       		.uleb128 0x1
 6213 0f5a 50       		.byte	0x50
 6214 0f5b 02       		.uleb128 0x2
 6215 0f5c 76       		.byte	0x76
 6216 0f5d 00       		.sleb128 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 209


 6217 0f5e 00       		.byte	0
 6218 0f5f 22       		.uleb128 0x22
 6219 0f60 6A000000 		.4byte	.LVL162
 6220 0f64 801D0000 		.4byte	0x1d80
 6221 0f68 730F0000 		.4byte	0xf73
 6222 0f6c 1E       		.uleb128 0x1e
 6223 0f6d 01       		.uleb128 0x1
 6224 0f6e 51       		.byte	0x51
 6225 0f6f 02       		.uleb128 0x2
 6226 0f70 76       		.byte	0x76
 6227 0f71 00       		.sleb128 0
 6228 0f72 00       		.byte	0
 6229 0f73 1C       		.uleb128 0x1c
 6230 0f74 8E000000 		.4byte	.LVL165
 6231 0f78 4B040000 		.4byte	0x44b
 6232 0f7c 1C       		.uleb128 0x1c
 6233 0f7d D6000000 		.4byte	.LVL175
 6234 0f81 8C1D0000 		.4byte	0x1d8c
 6235 0f85 00       		.byte	0
 6236 0f86 25       		.uleb128 0x25
 6237 0f87 63020000 		.4byte	.LASF122
 6238 0f8b 01       		.byte	0x1
 6239 0f8c 7404     		.2byte	0x474
 6240 0f8e 00000000 		.4byte	.LFB133
 6241 0f92 84000000 		.4byte	.LFE133-.LFB133
 6242 0f96 01       		.uleb128 0x1
 6243 0f97 9C       		.byte	0x9c
 6244 0f98 26100000 		.4byte	0x1026
 6245 0f9c 19       		.uleb128 0x19
 6246 0f9d 2B070000 		.4byte	.LASF123
 6247 0fa1 01       		.byte	0x1
 6248 0fa2 7404     		.2byte	0x474
 6249 0fa4 2C100000 		.4byte	0x102c
 6250 0fa8 D3070000 		.4byte	.LLST54
 6251 0fac 19       		.uleb128 0x19
 6252 0fad 3C0D0000 		.4byte	.LASF124
 6253 0fb1 01       		.byte	0x1
 6254 0fb2 7404     		.2byte	0x474
 6255 0fb4 7A070000 		.4byte	0x77a
 6256 0fb8 FF070000 		.4byte	.LLST55
 6257 0fbc 1A       		.uleb128 0x1a
 6258 0fbd 37090000 		.4byte	.LASF90
 6259 0fc1 01       		.byte	0x1
 6260 0fc2 7604     		.2byte	0x476
 6261 0fc4 4B010000 		.4byte	0x14b
 6262 0fc8 2B080000 		.4byte	.LLST56
 6263 0fcc 20       		.uleb128 0x20
 6264 0fcd 6E010000 		.4byte	.LASF120
 6265 0fd1 01       		.byte	0x1
 6266 0fd2 7704     		.2byte	0x477
 6267 0fd4 35010000 		.4byte	0x135
 6268 0fd8 01       		.uleb128 0x1
 6269 0fd9 50       		.byte	0x50
 6270 0fda 1A       		.uleb128 0x1a
 6271 0fdb 920A0000 		.4byte	.LASF125
 6272 0fdf 01       		.byte	0x1
 6273 0fe0 7704     		.2byte	0x477
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 210


 6274 0fe2 35010000 		.4byte	0x135
 6275 0fe6 3E080000 		.4byte	.LLST57
 6276 0fea 2F       		.uleb128 0x2f
 6277 0feb 18000000 		.4byte	.Ldebug_ranges0+0x18
 6278 0fef 13100000 		.4byte	0x1013
 6279 0ff3 1A       		.uleb128 0x1a
 6280 0ff4 FE080000 		.4byte	.LASF91
 6281 0ff8 01       		.byte	0x1
 6282 0ff9 8104     		.2byte	0x481
 6283 0ffb 7A070000 		.4byte	0x77a
 6284 0fff 5D080000 		.4byte	.LLST58
 6285 1003 1D       		.uleb128 0x1d
 6286 1004 62000000 		.4byte	.LVL183
 6287 1008 EC060000 		.4byte	0x6ec
 6288 100c 1E       		.uleb128 0x1e
 6289 100d 01       		.uleb128 0x1
 6290 100e 51       		.byte	0x51
 6291 100f 01       		.uleb128 0x1
 6292 1010 30       		.byte	0x30
 6293 1011 00       		.byte	0
 6294 1012 00       		.byte	0
 6295 1013 1C       		.uleb128 0x1c
 6296 1014 22000000 		.4byte	.LVL178
 6297 1018 3E0D0000 		.4byte	0xd3e
 6298 101c 1C       		.uleb128 0x1c
 6299 101d 66000000 		.4byte	.LVL184
 6300 1021 CD0E0000 		.4byte	0xecd
 6301 1025 00       		.byte	0
 6302 1026 06       		.uleb128 0x6
 6303 1027 04       		.byte	0x4
 6304 1028 4B010000 		.4byte	0x14b
 6305 102c 07       		.uleb128 0x7
 6306 102d 26100000 		.4byte	0x1026
 6307 1031 25       		.uleb128 0x25
 6308 1032 11010000 		.4byte	.LASF126
 6309 1036 01       		.byte	0x1
 6310 1037 C804     		.2byte	0x4c8
 6311 1039 00000000 		.4byte	.LFB134
 6312 103d 44000000 		.4byte	.LFE134-.LFB134
 6313 1041 01       		.uleb128 0x1
 6314 1042 9C       		.byte	0x9c
 6315 1043 93100000 		.4byte	0x1093
 6316 1047 19       		.uleb128 0x19
 6317 1048 180D0000 		.4byte	.LASF127
 6318 104c 01       		.byte	0x1
 6319 104d C804     		.2byte	0x4c8
 6320 104f 7A070000 		.4byte	0x77a
 6321 1053 70080000 		.4byte	.LLST59
 6322 1057 1A       		.uleb128 0x1a
 6323 1058 6E010000 		.4byte	.LASF120
 6324 105c 01       		.byte	0x1
 6325 105d CA04     		.2byte	0x4ca
 6326 105f 35010000 		.4byte	0x135
 6327 1063 A7080000 		.4byte	.LLST60
 6328 1067 1C       		.uleb128 0x1c
 6329 1068 16000000 		.4byte	.LVL188
 6330 106c 3E0D0000 		.4byte	0xd3e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 211


 6331 1070 22       		.uleb128 0x22
 6332 1071 1E000000 		.4byte	.LVL189
 6333 1075 EC060000 		.4byte	0x6ec
 6334 1079 89100000 		.4byte	0x1089
 6335 107d 1E       		.uleb128 0x1e
 6336 107e 01       		.uleb128 0x1
 6337 107f 50       		.byte	0x50
 6338 1080 02       		.uleb128 0x2
 6339 1081 74       		.byte	0x74
 6340 1082 00       		.sleb128 0
 6341 1083 1E       		.uleb128 0x1e
 6342 1084 01       		.uleb128 0x1
 6343 1085 51       		.byte	0x51
 6344 1086 01       		.uleb128 0x1
 6345 1087 30       		.byte	0x30
 6346 1088 00       		.byte	0
 6347 1089 1C       		.uleb128 0x1c
 6348 108a 22000000 		.4byte	.LVL190
 6349 108e CD0E0000 		.4byte	0xecd
 6350 1092 00       		.byte	0
 6351 1093 1B       		.uleb128 0x1b
 6352 1094 9F0A0000 		.4byte	.LASF128
 6353 1098 01       		.byte	0x1
 6354 1099 300D     		.2byte	0xd30
 6355 109b 00000000 		.4byte	.LFB164
 6356 109f 54000000 		.4byte	.LFE164-.LFB164
 6357 10a3 01       		.uleb128 0x1
 6358 10a4 9C       		.byte	0x9c
 6359 10a5 2A110000 		.4byte	0x112a
 6360 10a9 28       		.uleb128 0x28
 6361 10aa 02000000 		.4byte	.LBB34
 6362 10ae 4C000000 		.4byte	.LBE34-.LBB34
 6363 10b2 1A       		.uleb128 0x1a
 6364 10b3 C9010000 		.4byte	.LASF129
 6365 10b7 01       		.byte	0x1
 6366 10b8 370D     		.2byte	0xd37
 6367 10ba 35010000 		.4byte	0x135
 6368 10be DD080000 		.4byte	.LLST61
 6369 10c2 24       		.uleb128 0x24
 6370 10c3 14000000 		.4byte	.LBB35
 6371 10c7 30000000 		.4byte	.LBE35-.LBB35
 6372 10cb 16110000 		.4byte	0x1116
 6373 10cf 1A       		.uleb128 0x1a
 6374 10d0 A5050000 		.4byte	.LASF73
 6375 10d4 01       		.byte	0x1
 6376 10d5 450D     		.2byte	0xd45
 6377 10d7 72040000 		.4byte	0x472
 6378 10db F7080000 		.4byte	.LLST62
 6379 10df 1C       		.uleb128 0x1c
 6380 10e0 18000000 		.4byte	.LVL196
 6381 10e4 751D0000 		.4byte	0x1d75
 6382 10e8 22       		.uleb128 0x22
 6383 10e9 26000000 		.4byte	.LVL199
 6384 10ed 971D0000 		.4byte	0x1d97
 6385 10f1 FC100000 		.4byte	0x10fc
 6386 10f5 1E       		.uleb128 0x1e
 6387 10f6 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 212


 6388 10f7 50       		.byte	0x50
 6389 10f8 02       		.uleb128 0x2
 6390 10f9 75       		.byte	0x75
 6391 10fa 04       		.sleb128 4
 6392 10fb 00       		.byte	0
 6393 10fc 1C       		.uleb128 0x1c
 6394 10fd 3E000000 		.4byte	.LVL200
 6395 1101 8C1D0000 		.4byte	0x1d8c
 6396 1105 1D       		.uleb128 0x1d
 6397 1106 44000000 		.4byte	.LVL201
 6398 110a 78040000 		.4byte	0x478
 6399 110e 1E       		.uleb128 0x1e
 6400 110f 01       		.uleb128 0x1
 6401 1110 50       		.byte	0x50
 6402 1111 02       		.uleb128 0x2
 6403 1112 75       		.byte	0x75
 6404 1113 00       		.sleb128 0
 6405 1114 00       		.byte	0
 6406 1115 00       		.byte	0
 6407 1116 1C       		.uleb128 0x1c
 6408 1117 08000000 		.4byte	.LVL193
 6409 111b 3E0D0000 		.4byte	0xd3e
 6410 111f 1C       		.uleb128 0x1c
 6411 1120 12000000 		.4byte	.LVL195
 6412 1124 CD0E0000 		.4byte	0xecd
 6413 1128 00       		.byte	0
 6414 1129 00       		.byte	0
 6415 112a 30       		.uleb128 0x30
 6416 112b 6C060000 		.4byte	.LASF131
 6417 112f 01       		.byte	0x1
 6418 1130 460C     		.2byte	0xc46
 6419 1132 00000000 		.4byte	.LFB160
 6420 1136 28000000 		.4byte	.LFE160-.LFB160
 6421 113a 01       		.uleb128 0x1
 6422 113b 9C       		.byte	0x9c
 6423 113c 5A110000 		.4byte	0x115a
 6424 1140 19       		.uleb128 0x19
 6425 1141 48050000 		.4byte	.LASF81
 6426 1145 01       		.byte	0x1
 6427 1146 460C     		.2byte	0xc46
 6428 1148 B0000000 		.4byte	0xb0
 6429 114c 0A090000 		.4byte	.LLST63
 6430 1150 1C       		.uleb128 0x1c
 6431 1151 06000000 		.4byte	.LVL204
 6432 1155 93100000 		.4byte	0x1093
 6433 1159 00       		.byte	0
 6434 115a 25       		.uleb128 0x25
 6435 115b 78060000 		.4byte	.LASF132
 6436 115f 01       		.byte	0x1
 6437 1160 C90A     		.2byte	0xac9
 6438 1162 00000000 		.4byte	.LFB151
 6439 1166 BC000000 		.4byte	.LFE151-.LFB151
 6440 116a 01       		.uleb128 0x1
 6441 116b 9C       		.byte	0x9c
 6442 116c E3110000 		.4byte	0x11e3
 6443 1170 24       		.uleb128 0x24
 6444 1171 1C000000 		.4byte	.LBB36
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 213


 6445 1175 36000000 		.4byte	.LBE36-.LBB36
 6446 1179 A8110000 		.4byte	0x11a8
 6447 117d 1A       		.uleb128 0x1a
 6448 117e B40E0000 		.4byte	.LASF133
 6449 1182 01       		.byte	0x1
 6450 1183 F30A     		.2byte	0xaf3
 6451 1185 E9110000 		.4byte	0x11e9
 6452 1189 2B090000 		.4byte	.LLST64
 6453 118d 31       		.uleb128 0x31
 6454 118e 87090000 		.4byte	.LASF134
 6455 1192 01       		.byte	0x1
 6456 1193 F40A     		.2byte	0xaf4
 6457 1195 C8050000 		.4byte	0x5c8
 6458 1199 A5CB96AD 		.sleb128 -1515870811
 6458      7A
 6459 119e 1C       		.uleb128 0x1c
 6460 119f 52000000 		.4byte	.LVL207
 6461 11a3 E71D0000 		.4byte	0x1de7
 6462 11a7 00       		.byte	0
 6463 11a8 28       		.uleb128 0x28
 6464 11a9 52000000 		.4byte	.LBB37
 6465 11ad 6A000000 		.4byte	.LBE37-.LBB37
 6466 11b1 20       		.uleb128 0x20
 6467 11b2 F8070000 		.4byte	.LASF135
 6468 11b6 01       		.byte	0x1
 6469 11b7 010B     		.2byte	0xb01
 6470 11b9 40010000 		.4byte	0x140
 6471 11bd 01       		.uleb128 0x1
 6472 11be 53       		.byte	0x53
 6473 11bf 28       		.uleb128 0x28
 6474 11c0 72000000 		.4byte	.LBB38
 6475 11c4 3E000000 		.4byte	.LBE38-.LBB38
 6476 11c8 20       		.uleb128 0x20
 6477 11c9 7A050000 		.4byte	.LASF136
 6478 11cd 01       		.byte	0x1
 6479 11ce 010B     		.2byte	0xb01
 6480 11d0 EE110000 		.4byte	0x11ee
 6481 11d4 0B       		.uleb128 0xb
 6482 11d5 73       		.byte	0x73
 6483 11d6 00       		.sleb128 0
 6484 11d7 44       		.byte	0x44
 6485 11d8 1E       		.byte	0x1e
 6486 11d9 03       		.byte	0x3
 6487 11da 30000000 		.4byte	pxReadyTasksLists
 6488 11de 22       		.byte	0x22
 6489 11df 9F       		.byte	0x9f
 6490 11e0 00       		.byte	0
 6491 11e1 00       		.byte	0
 6492 11e2 00       		.byte	0
 6493 11e3 06       		.uleb128 0x6
 6494 11e4 04       		.byte	0x4
 6495 11e5 C8050000 		.4byte	0x5c8
 6496 11e9 07       		.uleb128 0x7
 6497 11ea E3110000 		.4byte	0x11e3
 6498 11ee 07       		.uleb128 0x7
 6499 11ef C70E0000 		.4byte	0xec7
 6500 11f3 25       		.uleb128 0x25
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 214


 6501 11f4 34000000 		.4byte	.LASF137
 6502 11f8 01       		.byte	0x1
 6503 11f9 1E06     		.2byte	0x61e
 6504 11fb 00000000 		.4byte	.LFB138
 6505 11ff 98000000 		.4byte	.LFE138-.LFB138
 6506 1203 01       		.uleb128 0x1
 6507 1204 9C       		.byte	0x9c
 6508 1205 A2120000 		.4byte	0x12a2
 6509 1209 19       		.uleb128 0x19
 6510 120a 96060000 		.4byte	.LASF138
 6511 120e 01       		.byte	0x1
 6512 120f 1E06     		.2byte	0x61e
 6513 1211 3E020000 		.4byte	0x23e
 6514 1215 3E090000 		.4byte	.LLST65
 6515 1219 1A       		.uleb128 0x1a
 6516 121a A5050000 		.4byte	.LASF73
 6517 121e 01       		.byte	0x1
 6518 121f 2006     		.2byte	0x620
 6519 1221 72040000 		.4byte	0x472
 6520 1225 5C090000 		.4byte	.LLST66
 6521 1229 1C       		.uleb128 0x1c
 6522 122a 08000000 		.4byte	.LVL212
 6523 122e 751D0000 		.4byte	0x1d75
 6524 1232 22       		.uleb128 0x22
 6525 1233 18000000 		.4byte	.LVL214
 6526 1237 971D0000 		.4byte	0x1d97
 6527 123b 46120000 		.4byte	0x1246
 6528 123f 1E       		.uleb128 0x1e
 6529 1240 01       		.uleb128 0x1
 6530 1241 50       		.byte	0x50
 6531 1242 02       		.uleb128 0x2
 6532 1243 76       		.byte	0x76
 6533 1244 00       		.sleb128 0
 6534 1245 00       		.byte	0
 6535 1246 22       		.uleb128 0x22
 6536 1247 24000000 		.4byte	.LVL215
 6537 124b 971D0000 		.4byte	0x1d97
 6538 124f 5A120000 		.4byte	0x125a
 6539 1253 1E       		.uleb128 0x1e
 6540 1254 01       		.uleb128 0x1
 6541 1255 50       		.byte	0x50
 6542 1256 02       		.uleb128 0x2
 6543 1257 74       		.byte	0x74
 6544 1258 18       		.sleb128 24
 6545 1259 00       		.byte	0
 6546 125a 22       		.uleb128 0x22
 6547 125b 2E000000 		.4byte	.LVL216
 6548 125f 801D0000 		.4byte	0x1d80
 6549 1263 74120000 		.4byte	0x1274
 6550 1267 1E       		.uleb128 0x1e
 6551 1268 01       		.uleb128 0x1
 6552 1269 50       		.byte	0x50
 6553 126a 02       		.uleb128 0x2
 6554 126b 75       		.byte	0x75
 6555 126c 00       		.sleb128 0
 6556 126d 1E       		.uleb128 0x1e
 6557 126e 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 215


 6558 126f 51       		.byte	0x51
 6559 1270 02       		.uleb128 0x2
 6560 1271 76       		.byte	0x76
 6561 1272 00       		.sleb128 0
 6562 1273 00       		.byte	0
 6563 1274 1C       		.uleb128 0x1c
 6564 1275 32000000 		.4byte	.LVL217
 6565 1279 8C1D0000 		.4byte	0x1d8c
 6566 127d 1C       		.uleb128 0x1c
 6567 127e 3C000000 		.4byte	.LVL218
 6568 1282 751D0000 		.4byte	0x1d75
 6569 1286 1C       		.uleb128 0x1c
 6570 1287 40000000 		.4byte	.LVL219
 6571 128b 4B040000 		.4byte	0x44b
 6572 128f 1C       		.uleb128 0x1c
 6573 1290 44000000 		.4byte	.LVL220
 6574 1294 8C1D0000 		.4byte	0x1d8c
 6575 1298 1C       		.uleb128 0x1c
 6576 1299 8E000000 		.4byte	.LVL223
 6577 129d 5A110000 		.4byte	0x115a
 6578 12a1 00       		.byte	0
 6579 12a2 25       		.uleb128 0x25
 6580 12a3 4C040000 		.4byte	.LASF139
 6581 12a7 01       		.byte	0x1
 6582 12a8 0F0B     		.2byte	0xb0f
 6583 12aa 00000000 		.4byte	.LFB152
 6584 12ae 24000000 		.4byte	.LFE152-.LFB152
 6585 12b2 01       		.uleb128 0x1
 6586 12b3 9C       		.byte	0x9c
 6587 12b4 F7120000 		.4byte	0x12f7
 6588 12b8 19       		.uleb128 0x19
 6589 12b9 28000000 		.4byte	.LASF140
 6590 12bd 01       		.byte	0x1
 6591 12be 0F0B     		.2byte	0xb0f
 6592 12c0 EE110000 		.4byte	0x11ee
 6593 12c4 6F090000 		.4byte	.LLST67
 6594 12c8 19       		.uleb128 0x19
 6595 12c9 1A020000 		.4byte	.LASF88
 6596 12cd 01       		.byte	0x1
 6597 12ce 0F0B     		.2byte	0xb0f
 6598 12d0 7A070000 		.4byte	0x77a
 6599 12d4 90090000 		.4byte	.LLST68
 6600 12d8 1C       		.uleb128 0x1c
 6601 12d9 16000000 		.4byte	.LVL227
 6602 12dd A31D0000 		.4byte	0x1da3
 6603 12e1 1D       		.uleb128 0x1d
 6604 12e2 1E000000 		.4byte	.LVL228
 6605 12e6 EC060000 		.4byte	0x6ec
 6606 12ea 1E       		.uleb128 0x1e
 6607 12eb 01       		.uleb128 0x1
 6608 12ec 50       		.byte	0x50
 6609 12ed 02       		.uleb128 0x2
 6610 12ee 74       		.byte	0x74
 6611 12ef 00       		.sleb128 0
 6612 12f0 1E       		.uleb128 0x1e
 6613 12f1 01       		.uleb128 0x1
 6614 12f2 51       		.byte	0x51
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 216


 6615 12f3 01       		.uleb128 0x1
 6616 12f4 31       		.byte	0x31
 6617 12f5 00       		.byte	0
 6618 12f6 00       		.byte	0
 6619 12f7 25       		.uleb128 0x25
 6620 12f8 D6040000 		.4byte	.LASF141
 6621 12fc 01       		.byte	0x1
 6622 12fd 200B     		.2byte	0xb20
 6623 12ff 00000000 		.4byte	.LFB153
 6624 1303 40000000 		.4byte	.LFE153-.LFB153
 6625 1307 01       		.uleb128 0x1
 6626 1308 9C       		.byte	0x9c
 6627 1309 68130000 		.4byte	0x1368
 6628 130d 19       		.uleb128 0x19
 6629 130e 28000000 		.4byte	.LASF140
 6630 1312 01       		.byte	0x1
 6631 1313 200B     		.2byte	0xb20
 6632 1315 C70E0000 		.4byte	0xec7
 6633 1319 BC090000 		.4byte	.LLST69
 6634 131d 19       		.uleb128 0x19
 6635 131e 5F0B0000 		.4byte	.LASF28
 6636 1322 01       		.byte	0x1
 6637 1323 200B     		.2byte	0xb20
 6638 1325 7A070000 		.4byte	0x77a
 6639 1329 F3090000 		.4byte	.LLST70
 6640 132d 19       		.uleb128 0x19
 6641 132e 1A020000 		.4byte	.LASF88
 6642 1332 01       		.byte	0x1
 6643 1333 200B     		.2byte	0xb20
 6644 1335 7A070000 		.4byte	0x77a
 6645 1339 1F0A0000 		.4byte	.LLST71
 6646 133d 22       		.uleb128 0x22
 6647 133e 32000000 		.4byte	.LVL236
 6648 1342 801D0000 		.4byte	0x1d80
 6649 1346 52130000 		.4byte	0x1352
 6650 134a 1E       		.uleb128 0x1e
 6651 134b 01       		.uleb128 0x1
 6652 134c 50       		.byte	0x50
 6653 134d 03       		.uleb128 0x3
 6654 134e F3       		.byte	0xf3
 6655 134f 01       		.uleb128 0x1
 6656 1350 50       		.byte	0x50
 6657 1351 00       		.byte	0
 6658 1352 1D       		.uleb128 0x1d
 6659 1353 3A000000 		.4byte	.LVL237
 6660 1357 EC060000 		.4byte	0x6ec
 6661 135b 1E       		.uleb128 0x1e
 6662 135c 01       		.uleb128 0x1
 6663 135d 50       		.byte	0x50
 6664 135e 02       		.uleb128 0x2
 6665 135f 74       		.byte	0x74
 6666 1360 00       		.sleb128 0
 6667 1361 1E       		.uleb128 0x1e
 6668 1362 01       		.uleb128 0x1
 6669 1363 51       		.byte	0x51
 6670 1364 01       		.uleb128 0x1
 6671 1365 31       		.byte	0x31
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 217


 6672 1366 00       		.byte	0
 6673 1367 00       		.byte	0
 6674 1368 25       		.uleb128 0x25
 6675 1369 B00D0000 		.4byte	.LASF142
 6676 136d 01       		.byte	0x1
 6677 136e 3A0B     		.2byte	0xb3a
 6678 1370 00000000 		.4byte	.LFB154
 6679 1374 2C000000 		.4byte	.LFE154-.LFB154
 6680 1378 01       		.uleb128 0x1
 6681 1379 9C       		.byte	0x9c
 6682 137a CE130000 		.4byte	0x13ce
 6683 137e 19       		.uleb128 0x19
 6684 137f 28000000 		.4byte	.LASF140
 6685 1383 01       		.byte	0x1
 6686 1384 3A0B     		.2byte	0xb3a
 6687 1386 EE110000 		.4byte	0x11ee
 6688 138a 4B0A0000 		.4byte	.LLST72
 6689 138e 19       		.uleb128 0x19
 6690 138f 1A020000 		.4byte	.LASF88
 6691 1393 01       		.byte	0x1
 6692 1394 3A0B     		.2byte	0xb3a
 6693 1396 4B010000 		.4byte	0x14b
 6694 139a 6C0A0000 		.4byte	.LLST73
 6695 139e 19       		.uleb128 0x19
 6696 139f 3C0C0000 		.4byte	.LASF143
 6697 13a3 01       		.byte	0x1
 6698 13a4 3A0B     		.2byte	0xb3a
 6699 13a6 75070000 		.4byte	0x775
 6700 13aa 8A0A0000 		.4byte	.LLST74
 6701 13ae 1C       		.uleb128 0x1c
 6702 13af 18000000 		.4byte	.LVL242
 6703 13b3 801D0000 		.4byte	0x1d80
 6704 13b7 1D       		.uleb128 0x1d
 6705 13b8 26000000 		.4byte	.LVL244
 6706 13bc EC060000 		.4byte	0x6ec
 6707 13c0 1E       		.uleb128 0x1e
 6708 13c1 01       		.uleb128 0x1
 6709 13c2 50       		.byte	0x50
 6710 13c3 02       		.uleb128 0x2
 6711 13c4 74       		.byte	0x74
 6712 13c5 00       		.sleb128 0
 6713 13c6 1E       		.uleb128 0x1e
 6714 13c7 01       		.uleb128 0x1
 6715 13c8 51       		.byte	0x51
 6716 13c9 02       		.uleb128 0x2
 6717 13ca 75       		.byte	0x75
 6718 13cb 00       		.sleb128 0
 6719 13cc 00       		.byte	0
 6720 13cd 00       		.byte	0
 6721 13ce 23       		.uleb128 0x23
 6722 13cf 460B0000 		.4byte	.LASF144
 6723 13d3 01       		.byte	0x1
 6724 13d4 590B     		.2byte	0xb59
 6725 13d6 35010000 		.4byte	0x135
 6726 13da 00000000 		.4byte	.LFB155
 6727 13de 7C000000 		.4byte	.LFE155-.LFB155
 6728 13e2 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 218


 6729 13e3 9C       		.byte	0x9c
 6730 13e4 6E140000 		.4byte	0x146e
 6731 13e8 19       		.uleb128 0x19
 6732 13e9 28000000 		.4byte	.LASF140
 6733 13ed 01       		.byte	0x1
 6734 13ee 590B     		.2byte	0xb59
 6735 13f0 79140000 		.4byte	0x1479
 6736 13f4 B60A0000 		.4byte	.LLST75
 6737 13f8 1A       		.uleb128 0x1a
 6738 13f9 1A090000 		.4byte	.LASF145
 6739 13fd 01       		.byte	0x1
 6740 13fe 5B0B     		.2byte	0xb5b
 6741 1400 72040000 		.4byte	0x472
 6742 1404 D70A0000 		.4byte	.LLST76
 6743 1408 1A       		.uleb128 0x1a
 6744 1409 AC040000 		.4byte	.LASF72
 6745 140d 01       		.byte	0x1
 6746 140e 5C0B     		.2byte	0xb5c
 6747 1410 35010000 		.4byte	0x135
 6748 1414 EA0A0000 		.4byte	.LLST77
 6749 1418 22       		.uleb128 0x22
 6750 1419 16000000 		.4byte	.LVL249
 6751 141d 971D0000 		.4byte	0x1d97
 6752 1421 2C140000 		.4byte	0x142c
 6753 1425 1E       		.uleb128 0x1e
 6754 1426 01       		.uleb128 0x1
 6755 1427 50       		.byte	0x50
 6756 1428 02       		.uleb128 0x2
 6757 1429 75       		.byte	0x75
 6758 142a 00       		.sleb128 0
 6759 142b 00       		.byte	0
 6760 142c 22       		.uleb128 0x22
 6761 142d 26000000 		.4byte	.LVL250
 6762 1431 971D0000 		.4byte	0x1d97
 6763 1435 40140000 		.4byte	0x1440
 6764 1439 1E       		.uleb128 0x1e
 6765 143a 01       		.uleb128 0x1
 6766 143b 50       		.byte	0x50
 6767 143c 02       		.uleb128 0x2
 6768 143d 75       		.byte	0x75
 6769 143e 00       		.sleb128 0
 6770 143f 00       		.byte	0
 6771 1440 22       		.uleb128 0x22
 6772 1441 48000000 		.4byte	.LVL251
 6773 1445 801D0000 		.4byte	0x1d80
 6774 1449 54140000 		.4byte	0x1454
 6775 144d 1E       		.uleb128 0x1e
 6776 144e 01       		.uleb128 0x1
 6777 144f 51       		.byte	0x51
 6778 1450 02       		.uleb128 0x2
 6779 1451 75       		.byte	0x75
 6780 1452 00       		.sleb128 0
 6781 1453 00       		.byte	0
 6782 1454 1D       		.uleb128 0x1d
 6783 1455 52000000 		.4byte	.LVL252
 6784 1459 801D0000 		.4byte	0x1d80
 6785 145d 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 219


 6786 145e 01       		.uleb128 0x1
 6787 145f 50       		.byte	0x50
 6788 1460 05       		.uleb128 0x5
 6789 1461 03       		.byte	0x3
 6790 1462 14000000 		.4byte	.LANCHOR0+20
 6791 1466 1E       		.uleb128 0x1e
 6792 1467 01       		.uleb128 0x1
 6793 1468 51       		.byte	0x51
 6794 1469 02       		.uleb128 0x2
 6795 146a 75       		.byte	0x75
 6796 146b 00       		.sleb128 0
 6797 146c 00       		.byte	0
 6798 146d 00       		.byte	0
 6799 146e 06       		.uleb128 0x6
 6800 146f 04       		.byte	0x4
 6801 1470 74140000 		.4byte	0x1474
 6802 1474 07       		.uleb128 0x7
 6803 1475 33020000 		.4byte	0x233
 6804 1479 07       		.uleb128 0x7
 6805 147a 6E140000 		.4byte	0x146e
 6806 147e 23       		.uleb128 0x23
 6807 147f 920E0000 		.4byte	.LASF146
 6808 1483 01       		.byte	0x1
 6809 1484 9D0B     		.2byte	0xb9d
 6810 1486 35010000 		.4byte	0x135
 6811 148a 00000000 		.4byte	.LFB156
 6812 148e 6C000000 		.4byte	.LFE156-.LFB156
 6813 1492 01       		.uleb128 0x1
 6814 1493 9C       		.byte	0x9c
 6815 1494 06150000 		.4byte	0x1506
 6816 1498 19       		.uleb128 0x19
 6817 1499 F60B0000 		.4byte	.LASF147
 6818 149d 01       		.byte	0x1
 6819 149e 9D0B     		.2byte	0xb9d
 6820 14a0 2D020000 		.4byte	0x22d
 6821 14a4 090B0000 		.4byte	.LLST78
 6822 14a8 19       		.uleb128 0x19
 6823 14a9 5F0B0000 		.4byte	.LASF28
 6824 14ad 01       		.byte	0x1
 6825 14ae 9D0B     		.2byte	0xb9d
 6826 14b0 7A070000 		.4byte	0x77a
 6827 14b4 2A0B0000 		.4byte	.LLST79
 6828 14b8 1A       		.uleb128 0x1a
 6829 14b9 1A090000 		.4byte	.LASF145
 6830 14bd 01       		.byte	0x1
 6831 14be 9F0B     		.2byte	0xb9f
 6832 14c0 72040000 		.4byte	0x472
 6833 14c4 4B0B0000 		.4byte	.LLST80
 6834 14c8 1A       		.uleb128 0x1a
 6835 14c9 AC040000 		.4byte	.LASF72
 6836 14cd 01       		.byte	0x1
 6837 14ce A00B     		.2byte	0xba0
 6838 14d0 35010000 		.4byte	0x135
 6839 14d4 5E0B0000 		.4byte	.LLST81
 6840 14d8 1C       		.uleb128 0x1c
 6841 14d9 20000000 		.4byte	.LVL259
 6842 14dd 971D0000 		.4byte	0x1d97
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 220


 6843 14e1 22       		.uleb128 0x22
 6844 14e2 28000000 		.4byte	.LVL260
 6845 14e6 971D0000 		.4byte	0x1d97
 6846 14ea F5140000 		.4byte	0x14f5
 6847 14ee 1E       		.uleb128 0x1e
 6848 14ef 01       		.uleb128 0x1
 6849 14f0 50       		.byte	0x50
 6850 14f1 02       		.uleb128 0x2
 6851 14f2 76       		.byte	0x76
 6852 14f3 00       		.sleb128 0
 6853 14f4 00       		.byte	0
 6854 14f5 1D       		.uleb128 0x1d
 6855 14f6 4E000000 		.4byte	.LVL261
 6856 14fa 801D0000 		.4byte	0x1d80
 6857 14fe 1E       		.uleb128 0x1e
 6858 14ff 01       		.uleb128 0x1
 6859 1500 51       		.byte	0x51
 6860 1501 02       		.uleb128 0x2
 6861 1502 76       		.byte	0x76
 6862 1503 00       		.sleb128 0
 6863 1504 00       		.byte	0
 6864 1505 00       		.byte	0
 6865 1506 25       		.uleb128 0x25
 6866 1507 5D0E0000 		.4byte	.LASF148
 6867 150b 01       		.byte	0x1
 6868 150c CA0B     		.2byte	0xbca
 6869 150e 00000000 		.4byte	.LFB157
 6870 1512 1C000000 		.4byte	.LFE157-.LFB157
 6871 1516 01       		.uleb128 0x1
 6872 1517 9C       		.byte	0x9c
 6873 1518 2B150000 		.4byte	0x152b
 6874 151c 1F       		.uleb128 0x1f
 6875 151d 7E010000 		.4byte	.LASF149
 6876 1521 01       		.byte	0x1
 6877 1522 CA0B     		.2byte	0xbca
 6878 1524 31150000 		.4byte	0x1531
 6879 1528 01       		.uleb128 0x1
 6880 1529 50       		.byte	0x50
 6881 152a 00       		.byte	0
 6882 152b 06       		.uleb128 0x6
 6883 152c 04       		.byte	0x4
 6884 152d A4020000 		.4byte	0x2a4
 6885 1531 07       		.uleb128 0x7
 6886 1532 2B150000 		.4byte	0x152b
 6887 1536 23       		.uleb128 0x23
 6888 1537 D40B0000 		.4byte	.LASF150
 6889 153b 01       		.byte	0x1
 6890 153c D20B     		.2byte	0xbd2
 6891 153e 35010000 		.4byte	0x135
 6892 1542 00000000 		.4byte	.LFB158
 6893 1546 64000000 		.4byte	.LFE158-.LFB158
 6894 154a 01       		.uleb128 0x1
 6895 154b 9C       		.byte	0x9c
 6896 154c C1150000 		.4byte	0x15c1
 6897 1550 19       		.uleb128 0x19
 6898 1551 7E010000 		.4byte	.LASF149
 6899 1555 01       		.byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 221


 6900 1556 D20B     		.2byte	0xbd2
 6901 1558 31150000 		.4byte	0x1531
 6902 155c 7D0B0000 		.4byte	.LLST82
 6903 1560 19       		.uleb128 0x19
 6904 1561 44060000 		.4byte	.LASF151
 6905 1565 01       		.byte	0x1
 6906 1566 D20B     		.2byte	0xbd2
 6907 1568 2C100000 		.4byte	0x102c
 6908 156c F40B0000 		.4byte	.LLST83
 6909 1570 1A       		.uleb128 0x1a
 6910 1571 AC040000 		.4byte	.LASF72
 6911 1575 01       		.byte	0x1
 6912 1576 D40B     		.2byte	0xbd4
 6913 1578 35010000 		.4byte	0x135
 6914 157c 200C0000 		.4byte	.LLST84
 6915 1580 24       		.uleb128 0x24
 6916 1581 16000000 		.4byte	.LBB39
 6917 1585 40000000 		.4byte	.LBE39-.LBB39
 6918 1589 AE150000 		.4byte	0x15ae
 6919 158d 1A       		.uleb128 0x1a
 6920 158e FE080000 		.4byte	.LASF91
 6921 1592 01       		.byte	0x1
 6922 1593 DC0B     		.2byte	0xbdc
 6923 1595 7A070000 		.4byte	0x77a
 6924 1599 4A0C0000 		.4byte	.LLST85
 6925 159d 1D       		.uleb128 0x1d
 6926 159e 48000000 		.4byte	.LVL270
 6927 15a2 06150000 		.4byte	0x1506
 6928 15a6 1E       		.uleb128 0x1e
 6929 15a7 01       		.uleb128 0x1
 6930 15a8 50       		.byte	0x50
 6931 15a9 02       		.uleb128 0x2
 6932 15aa 74       		.byte	0x74
 6933 15ab 00       		.sleb128 0
 6934 15ac 00       		.byte	0
 6935 15ad 00       		.byte	0
 6936 15ae 1C       		.uleb128 0x1c
 6937 15af 16000000 		.4byte	.LVL268
 6938 15b3 751D0000 		.4byte	0x1d75
 6939 15b7 1C       		.uleb128 0x1c
 6940 15b8 5A000000 		.4byte	.LVL278
 6941 15bc 8C1D0000 		.4byte	0x1d8c
 6942 15c0 00       		.byte	0
 6943 15c1 2B       		.uleb128 0x2b
 6944 15c2 200A0000 		.4byte	.LASF153
 6945 15c6 01       		.byte	0x1
 6946 15c7 0F0C     		.2byte	0xc0f
 6947 15c9 00000000 		.4byte	.LFB159
 6948 15cd 10000000 		.4byte	.LFE159-.LFB159
 6949 15d1 01       		.uleb128 0x1
 6950 15d2 9C       		.byte	0x9c
 6951 15d3 25       		.uleb128 0x25
 6952 15d4 27020000 		.4byte	.LASF154
 6953 15d8 01       		.byte	0x1
 6954 15d9 DB0C     		.2byte	0xcdb
 6955 15db 00000000 		.4byte	.LFB161
 6956 15df 1C000000 		.4byte	.LFE161-.LFB161
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 222


 6957 15e3 01       		.uleb128 0x1
 6958 15e4 9C       		.byte	0x9c
 6959 15e5 28160000 		.4byte	0x1628
 6960 15e9 19       		.uleb128 0x19
 6961 15ea 49020000 		.4byte	.LASF155
 6962 15ee 01       		.byte	0x1
 6963 15ef DB0C     		.2byte	0xcdb
 6964 15f1 3E020000 		.4byte	0x23e
 6965 15f5 680C0000 		.4byte	.LLST86
 6966 15f9 19       		.uleb128 0x19
 6967 15fa 0D060000 		.4byte	.LASF156
 6968 15fe 01       		.byte	0x1
 6969 15ff DB0C     		.2byte	0xcdb
 6970 1601 35010000 		.4byte	0x135
 6971 1605 7B0C0000 		.4byte	.LLST87
 6972 1609 1F       		.uleb128 0x1f
 6973 160a E7080000 		.4byte	.LASF157
 6974 160e 01       		.byte	0x1
 6975 160f DB0C     		.2byte	0xcdb
 6976 1611 B0000000 		.4byte	0xb0
 6977 1615 01       		.uleb128 0x1
 6978 1616 52       		.byte	0x52
 6979 1617 1A       		.uleb128 0x1a
 6980 1618 A5050000 		.4byte	.LASF73
 6981 161c 01       		.byte	0x1
 6982 161d DD0C     		.2byte	0xcdd
 6983 161f 72040000 		.4byte	0x472
 6984 1623 A90C0000 		.4byte	.LLST88
 6985 1627 00       		.byte	0
 6986 1628 23       		.uleb128 0x23
 6987 1629 210E0000 		.4byte	.LASF158
 6988 162d 01       		.byte	0x1
 6989 162e EB0C     		.2byte	0xceb
 6990 1630 B0000000 		.4byte	0xb0
 6991 1634 00000000 		.4byte	.LFB162
 6992 1638 20000000 		.4byte	.LFE162-.LFB162
 6993 163c 01       		.uleb128 0x1
 6994 163d 9C       		.byte	0x9c
 6995 163e 83160000 		.4byte	0x1683
 6996 1642 19       		.uleb128 0x19
 6997 1643 FB030000 		.4byte	.LASF115
 6998 1647 01       		.byte	0x1
 6999 1648 EB0C     		.2byte	0xceb
 7000 164a 3E020000 		.4byte	0x23e
 7001 164e BC0C0000 		.4byte	.LLST89
 7002 1652 19       		.uleb128 0x19
 7003 1653 0D060000 		.4byte	.LASF156
 7004 1657 01       		.byte	0x1
 7005 1658 EB0C     		.2byte	0xceb
 7006 165a 35010000 		.4byte	0x135
 7007 165e E80C0000 		.4byte	.LLST90
 7008 1662 1A       		.uleb128 0x1a
 7009 1663 F5080000 		.4byte	.LASF159
 7010 1667 01       		.byte	0x1
 7011 1668 ED0C     		.2byte	0xced
 7012 166a B0000000 		.4byte	0xb0
 7013 166e 130D0000 		.4byte	.LLST91
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 223


 7014 1672 1A       		.uleb128 0x1a
 7015 1673 A5050000 		.4byte	.LASF73
 7016 1677 01       		.byte	0x1
 7017 1678 EE0C     		.2byte	0xcee
 7018 167a 72040000 		.4byte	0x472
 7019 167e 490D0000 		.4byte	.LLST92
 7020 1682 00       		.byte	0
 7021 1683 23       		.uleb128 0x23
 7022 1684 B4000000 		.4byte	.LASF160
 7023 1688 01       		.byte	0x1
 7024 1689 580E     		.2byte	0xe58
 7025 168b 3E020000 		.4byte	0x23e
 7026 168f 00000000 		.4byte	.LFB167
 7027 1693 0C000000 		.4byte	.LFE167-.LFB167
 7028 1697 01       		.uleb128 0x1
 7029 1698 9C       		.byte	0x9c
 7030 1699 AC160000 		.4byte	0x16ac
 7031 169d 20       		.uleb128 0x20
 7032 169e AC040000 		.4byte	.LASF72
 7033 16a2 01       		.byte	0x1
 7034 16a3 5A0E     		.2byte	0xe5a
 7035 16a5 3E020000 		.4byte	0x23e
 7036 16a9 01       		.uleb128 0x1
 7037 16aa 50       		.byte	0x50
 7038 16ab 00       		.byte	0
 7039 16ac 23       		.uleb128 0x23
 7040 16ad 640A0000 		.4byte	.LASF161
 7041 16b1 01       		.byte	0x1
 7042 16b2 690E     		.2byte	0xe69
 7043 16b4 35010000 		.4byte	0x135
 7044 16b8 00000000 		.4byte	.LFB168
 7045 16bc 20000000 		.4byte	.LFE168-.LFB168
 7046 16c0 01       		.uleb128 0x1
 7047 16c1 9C       		.byte	0x9c
 7048 16c2 D5160000 		.4byte	0x16d5
 7049 16c6 20       		.uleb128 0x20
 7050 16c7 AC040000 		.4byte	.LASF72
 7051 16cb 01       		.byte	0x1
 7052 16cc 6B0E     		.2byte	0xe6b
 7053 16ce 35010000 		.4byte	0x135
 7054 16d2 01       		.uleb128 0x1
 7055 16d3 50       		.byte	0x50
 7056 16d4 00       		.byte	0
 7057 16d5 23       		.uleb128 0x23
 7058 16d6 8C000000 		.4byte	.LASF162
 7059 16da 01       		.byte	0x1
 7060 16db 4D10     		.2byte	0x104d
 7061 16dd 4B010000 		.4byte	0x14b
 7062 16e1 00000000 		.4byte	.LFB169
 7063 16e5 20000000 		.4byte	.LFE169-.LFB169
 7064 16e9 01       		.uleb128 0x1
 7065 16ea 9C       		.byte	0x9c
 7066 16eb FE160000 		.4byte	0x16fe
 7067 16ef 20       		.uleb128 0x20
 7068 16f0 04060000 		.4byte	.LASF96
 7069 16f4 01       		.byte	0x1
 7070 16f5 4F10     		.2byte	0x104f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 224


 7071 16f7 4B010000 		.4byte	0x14b
 7072 16fb 01       		.uleb128 0x1
 7073 16fc 50       		.byte	0x50
 7074 16fd 00       		.byte	0
 7075 16fe 23       		.uleb128 0x23
 7076 16ff D5060000 		.4byte	.LASF163
 7077 1703 01       		.byte	0x1
 7078 1704 6E10     		.2byte	0x106e
 7079 1706 EB000000 		.4byte	0xeb
 7080 170a 00000000 		.4byte	.LFB170
 7081 170e 80000000 		.4byte	.LFE170-.LFB170
 7082 1712 01       		.uleb128 0x1
 7083 1713 9C       		.byte	0x9c
 7084 1714 86170000 		.4byte	0x1786
 7085 1718 19       		.uleb128 0x19
 7086 1719 C90C0000 		.4byte	.LASF164
 7087 171d 01       		.byte	0x1
 7088 171e 6E10     		.2byte	0x106e
 7089 1720 35010000 		.4byte	0x135
 7090 1724 5C0D0000 		.4byte	.LLST93
 7091 1728 19       		.uleb128 0x19
 7092 1729 1A020000 		.4byte	.LASF88
 7093 172d 01       		.byte	0x1
 7094 172e 6E10     		.2byte	0x106e
 7095 1730 4B010000 		.4byte	0x14b
 7096 1734 880D0000 		.4byte	.LLST94
 7097 1738 1A       		.uleb128 0x1a
 7098 1739 F00D0000 		.4byte	.LASF165
 7099 173d 01       		.byte	0x1
 7100 173e 7010     		.2byte	0x1070
 7101 1740 EB000000 		.4byte	0xeb
 7102 1744 B40D0000 		.4byte	.LLST95
 7103 1748 1C       		.uleb128 0x1c
 7104 1749 0A000000 		.4byte	.LVL296
 7105 174d 751D0000 		.4byte	0x1d75
 7106 1751 22       		.uleb128 0x22
 7107 1752 2A000000 		.4byte	.LVL297
 7108 1756 EC060000 		.4byte	0x6ec
 7109 175a 6A170000 		.4byte	0x176a
 7110 175e 1E       		.uleb128 0x1e
 7111 175f 01       		.uleb128 0x1
 7112 1760 50       		.byte	0x50
 7113 1761 02       		.uleb128 0x2
 7114 1762 74       		.byte	0x74
 7115 1763 00       		.sleb128 0
 7116 1764 1E       		.uleb128 0x1e
 7117 1765 01       		.uleb128 0x1
 7118 1766 51       		.byte	0x51
 7119 1767 01       		.uleb128 0x1
 7120 1768 31       		.byte	0x31
 7121 1769 00       		.byte	0
 7122 176a 1C       		.uleb128 0x1c
 7123 176b 3E000000 		.4byte	.LVL298
 7124 176f 8C1D0000 		.4byte	0x1d8c
 7125 1773 1C       		.uleb128 0x1c
 7126 1774 42000000 		.4byte	.LVL299
 7127 1778 751D0000 		.4byte	0x1d75
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 225


 7128 177c 1C       		.uleb128 0x1c
 7129 177d 74000000 		.4byte	.LVL301
 7130 1781 8C1D0000 		.4byte	0x1d8c
 7131 1785 00       		.byte	0
 7132 1786 23       		.uleb128 0x23
 7133 1787 E00D0000 		.4byte	.LASF166
 7134 178b 01       		.byte	0x1
 7135 178c B210     		.2byte	0x10b2
 7136 178e 35010000 		.4byte	0x135
 7137 1792 00000000 		.4byte	.LFB171
 7138 1796 A4000000 		.4byte	.LFE171-.LFB171
 7139 179a 01       		.uleb128 0x1
 7140 179b 9C       		.byte	0x9c
 7141 179c 2E180000 		.4byte	0x182e
 7142 17a0 19       		.uleb128 0x19
 7143 17a1 BA050000 		.4byte	.LASF167
 7144 17a5 01       		.byte	0x1
 7145 17a6 B210     		.2byte	0x10b2
 7146 17a8 EB000000 		.4byte	0xeb
 7147 17ac D20D0000 		.4byte	.LLST96
 7148 17b0 19       		.uleb128 0x19
 7149 17b1 720E0000 		.4byte	.LASF168
 7150 17b5 01       		.byte	0x1
 7151 17b6 B210     		.2byte	0x10b2
 7152 17b8 EB000000 		.4byte	0xeb
 7153 17bc FE0D0000 		.4byte	.LLST97
 7154 17c0 19       		.uleb128 0x19
 7155 17c1 06080000 		.4byte	.LASF169
 7156 17c5 01       		.byte	0x1
 7157 17c6 B210     		.2byte	0x10b2
 7158 17c8 2E180000 		.4byte	0x182e
 7159 17cc 430E0000 		.4byte	.LLST98
 7160 17d0 19       		.uleb128 0x19
 7161 17d1 1A020000 		.4byte	.LASF88
 7162 17d5 01       		.byte	0x1
 7163 17d6 B210     		.2byte	0x10b2
 7164 17d8 4B010000 		.4byte	0x14b
 7165 17dc 6F0E0000 		.4byte	.LLST99
 7166 17e0 1A       		.uleb128 0x1a
 7167 17e1 AC040000 		.4byte	.LASF72
 7168 17e5 01       		.byte	0x1
 7169 17e6 B410     		.2byte	0x10b4
 7170 17e8 35010000 		.4byte	0x135
 7171 17ec 9B0E0000 		.4byte	.LLST100
 7172 17f0 1C       		.uleb128 0x1c
 7173 17f1 0E000000 		.4byte	.LVL304
 7174 17f5 751D0000 		.4byte	0x1d75
 7175 17f9 22       		.uleb128 0x22
 7176 17fa 40000000 		.4byte	.LVL305
 7177 17fe EC060000 		.4byte	0x6ec
 7178 1802 12180000 		.4byte	0x1812
 7179 1806 1E       		.uleb128 0x1e
 7180 1807 01       		.uleb128 0x1
 7181 1808 50       		.byte	0x50
 7182 1809 02       		.uleb128 0x2
 7183 180a 76       		.byte	0x76
 7184 180b 00       		.sleb128 0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 226


 7185 180c 1E       		.uleb128 0x1e
 7186 180d 01       		.uleb128 0x1
 7187 180e 51       		.byte	0x51
 7188 180f 01       		.uleb128 0x1
 7189 1810 31       		.byte	0x31
 7190 1811 00       		.byte	0
 7191 1812 1C       		.uleb128 0x1c
 7192 1813 54000000 		.4byte	.LVL306
 7193 1817 8C1D0000 		.4byte	0x1d8c
 7194 181b 1C       		.uleb128 0x1c
 7195 181c 58000000 		.4byte	.LVL307
 7196 1820 751D0000 		.4byte	0x1d75
 7197 1824 1C       		.uleb128 0x1c
 7198 1825 98000000 		.4byte	.LVL312
 7199 1829 8C1D0000 		.4byte	0x1d8c
 7200 182d 00       		.byte	0
 7201 182e 06       		.uleb128 0x6
 7202 182f 04       		.byte	0x4
 7203 1830 EB000000 		.4byte	0xeb
 7204 1834 23       		.uleb128 0x23
 7205 1835 EB0C0000 		.4byte	.LASF170
 7206 1839 01       		.byte	0x1
 7207 183a 0211     		.2byte	0x1102
 7208 183c 35010000 		.4byte	0x135
 7209 1840 00000000 		.4byte	.LFB172
 7210 1844 C8000000 		.4byte	.LFE172-.LFB172
 7211 1848 01       		.uleb128 0x1
 7212 1849 9C       		.byte	0x9c
 7213 184a F9180000 		.4byte	0x18f9
 7214 184e 19       		.uleb128 0x19
 7215 184f 25050000 		.4byte	.LASF171
 7216 1853 01       		.byte	0x1
 7217 1854 0211     		.2byte	0x1102
 7218 1856 3E020000 		.4byte	0x23e
 7219 185a C50E0000 		.4byte	.LLST101
 7220 185e 19       		.uleb128 0x19
 7221 185f 84000000 		.4byte	.LASF172
 7222 1863 01       		.byte	0x1
 7223 1864 0211     		.2byte	0x1102
 7224 1866 EB000000 		.4byte	0xeb
 7225 186a F10E0000 		.4byte	.LLST102
 7226 186e 19       		.uleb128 0x19
 7227 186f 73020000 		.4byte	.LASF173
 7228 1873 01       		.byte	0x1
 7229 1874 0211     		.2byte	0x1102
 7230 1876 74020000 		.4byte	0x274
 7231 187a 360F0000 		.4byte	.LLST103
 7232 187e 19       		.uleb128 0x19
 7233 187f B5030000 		.4byte	.LASF174
 7234 1883 01       		.byte	0x1
 7235 1884 0211     		.2byte	0x1102
 7236 1886 2E180000 		.4byte	0x182e
 7237 188a 570F0000 		.4byte	.LLST104
 7238 188e 1A       		.uleb128 0x1a
 7239 188f A5050000 		.4byte	.LASF73
 7240 1893 01       		.byte	0x1
 7241 1894 0411     		.2byte	0x1104
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 227


 7242 1896 72040000 		.4byte	0x472
 7243 189a 830F0000 		.4byte	.LLST105
 7244 189e 1A       		.uleb128 0x1a
 7245 189f AC040000 		.4byte	.LASF72
 7246 18a3 01       		.byte	0x1
 7247 18a4 0511     		.2byte	0x1105
 7248 18a6 35010000 		.4byte	0x135
 7249 18aa A40F0000 		.4byte	.LLST106
 7250 18ae 1A       		.uleb128 0x1a
 7251 18af F0020000 		.4byte	.LASF175
 7252 18b3 01       		.byte	0x1
 7253 18b4 0611     		.2byte	0x1106
 7254 18b6 CA000000 		.4byte	0xca
 7255 18ba CE0F0000 		.4byte	.LLST107
 7256 18be 1C       		.uleb128 0x1c
 7257 18bf 14000000 		.4byte	.LVL316
 7258 18c3 751D0000 		.4byte	0x1d75
 7259 18c7 22       		.uleb128 0x22
 7260 18c8 6A000000 		.4byte	.LVL321
 7261 18cc 971D0000 		.4byte	0x1d97
 7262 18d0 DB180000 		.4byte	0x18db
 7263 18d4 1E       		.uleb128 0x1e
 7264 18d5 01       		.uleb128 0x1
 7265 18d6 50       		.byte	0x50
 7266 18d7 02       		.uleb128 0x2
 7267 18d8 76       		.byte	0x76
 7268 18d9 00       		.sleb128 0
 7269 18da 00       		.byte	0
 7270 18db 22       		.uleb128 0x22
 7271 18dc 8C000000 		.4byte	.LVL322
 7272 18e0 801D0000 		.4byte	0x1d80
 7273 18e4 EF180000 		.4byte	0x18ef
 7274 18e8 1E       		.uleb128 0x1e
 7275 18e9 01       		.uleb128 0x1
 7276 18ea 51       		.byte	0x51
 7277 18eb 02       		.uleb128 0x2
 7278 18ec 76       		.byte	0x76
 7279 18ed 00       		.sleb128 0
 7280 18ee 00       		.byte	0
 7281 18ef 1C       		.uleb128 0x1c
 7282 18f0 B6000000 		.4byte	.LVL323
 7283 18f4 8C1D0000 		.4byte	0x1d8c
 7284 18f8 00       		.byte	0
 7285 18f9 23       		.uleb128 0x23
 7286 18fa E4000000 		.4byte	.LASF176
 7287 18fe 01       		.byte	0x1
 7288 18ff 6C11     		.2byte	0x116c
 7289 1901 35010000 		.4byte	0x135
 7290 1905 00000000 		.4byte	.LFB173
 7291 1909 04010000 		.4byte	.LFE173-.LFB173
 7292 190d 01       		.uleb128 0x1
 7293 190e 9C       		.byte	0x9c
 7294 190f 311A0000 		.4byte	0x1a31
 7295 1913 19       		.uleb128 0x19
 7296 1914 25050000 		.4byte	.LASF171
 7297 1918 01       		.byte	0x1
 7298 1919 6C11     		.2byte	0x116c
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 228


 7299 191b 3E020000 		.4byte	0x23e
 7300 191f E10F0000 		.4byte	.LLST108
 7301 1923 19       		.uleb128 0x19
 7302 1924 84000000 		.4byte	.LASF172
 7303 1928 01       		.byte	0x1
 7304 1929 6C11     		.2byte	0x116c
 7305 192b EB000000 		.4byte	0xeb
 7306 192f 0D100000 		.4byte	.LLST109
 7307 1933 19       		.uleb128 0x19
 7308 1934 73020000 		.4byte	.LASF173
 7309 1938 01       		.byte	0x1
 7310 1939 6C11     		.2byte	0x116c
 7311 193b 74020000 		.4byte	0x274
 7312 193f 52100000 		.4byte	.LLST110
 7313 1943 19       		.uleb128 0x19
 7314 1944 B5030000 		.4byte	.LASF174
 7315 1948 01       		.byte	0x1
 7316 1949 6C11     		.2byte	0x116c
 7317 194b 2E180000 		.4byte	0x182e
 7318 194f 73100000 		.4byte	.LLST111
 7319 1953 19       		.uleb128 0x19
 7320 1954 D6020000 		.4byte	.LASF177
 7321 1958 01       		.byte	0x1
 7322 1959 6C11     		.2byte	0x116c
 7323 195b 311A0000 		.4byte	0x1a31
 7324 195f 9F100000 		.4byte	.LLST112
 7325 1963 1A       		.uleb128 0x1a
 7326 1964 A5050000 		.4byte	.LASF73
 7327 1968 01       		.byte	0x1
 7328 1969 6E11     		.2byte	0x116e
 7329 196b 72040000 		.4byte	0x472
 7330 196f BF100000 		.4byte	.LLST113
 7331 1973 1A       		.uleb128 0x1a
 7332 1974 F0020000 		.4byte	.LASF175
 7333 1978 01       		.byte	0x1
 7334 1979 6F11     		.2byte	0x116f
 7335 197b CA000000 		.4byte	0xca
 7336 197f E0100000 		.4byte	.LLST114
 7337 1983 1A       		.uleb128 0x1a
 7338 1984 AC040000 		.4byte	.LASF72
 7339 1988 01       		.byte	0x1
 7340 1989 7011     		.2byte	0x1170
 7341 198b 35010000 		.4byte	0x135
 7342 198f F3100000 		.4byte	.LLST115
 7343 1993 26       		.uleb128 0x26
 7344 1994 7B0A0000 		.4byte	.LASF108
 7345 1998 01       		.byte	0x1
 7346 1999 7111     		.2byte	0x1171
 7347 199b 40010000 		.4byte	0x140
 7348 199f 27       		.uleb128 0x27
 7349 19a0 AC030000 		.4byte	0x3ac
 7350 19a4 18000000 		.4byte	.LBB40
 7351 19a8 14000000 		.4byte	.LBE40-.LBB40
 7352 19ac 01       		.byte	0x1
 7353 19ad 8911     		.2byte	0x1189
 7354 19af C8190000 		.4byte	0x19c8
 7355 19b3 28       		.uleb128 0x28
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 229


 7356 19b4 18000000 		.4byte	.LBB41
 7357 19b8 14000000 		.4byte	.LBE41-.LBB41
 7358 19bc 29       		.uleb128 0x29
 7359 19bd BC030000 		.4byte	0x3bc
 7360 19c1 29       		.uleb128 0x29
 7361 19c2 C7030000 		.4byte	0x3c7
 7362 19c6 00       		.byte	0
 7363 19c7 00       		.byte	0
 7364 19c8 27       		.uleb128 0x27
 7365 19c9 D3030000 		.4byte	0x3d3
 7366 19cd EC000000 		.4byte	.LBB42
 7367 19d1 04000000 		.4byte	.LBE42-.LBB42
 7368 19d5 01       		.byte	0x1
 7369 19d6 DE11     		.2byte	0x11de
 7370 19d8 E6190000 		.4byte	0x19e6
 7371 19dc 2A       		.uleb128 0x2a
 7372 19dd DF030000 		.4byte	0x3df
 7373 19e1 1D110000 		.4byte	.LLST116
 7374 19e5 00       		.byte	0
 7375 19e6 1C       		.uleb128 0x1c
 7376 19e7 18000000 		.4byte	.LVL327
 7377 19eb BA1D0000 		.4byte	0x1dba
 7378 19ef 22       		.uleb128 0x22
 7379 19f0 A0000000 		.4byte	.LVL332
 7380 19f4 971D0000 		.4byte	0x1d97
 7381 19f8 031A0000 		.4byte	0x1a03
 7382 19fc 1E       		.uleb128 0x1e
 7383 19fd 01       		.uleb128 0x1
 7384 19fe 50       		.byte	0x50
 7385 19ff 02       		.uleb128 0x2
 7386 1a00 78       		.byte	0x78
 7387 1a01 00       		.sleb128 0
 7388 1a02 00       		.byte	0
 7389 1a03 22       		.uleb128 0x22
 7390 1a04 C2000000 		.4byte	.LVL333
 7391 1a08 801D0000 		.4byte	0x1d80
 7392 1a0c 171A0000 		.4byte	0x1a17
 7393 1a10 1E       		.uleb128 0x1e
 7394 1a11 01       		.uleb128 0x1
 7395 1a12 51       		.byte	0x51
 7396 1a13 02       		.uleb128 0x2
 7397 1a14 78       		.byte	0x78
 7398 1a15 00       		.sleb128 0
 7399 1a16 00       		.byte	0
 7400 1a17 1D       		.uleb128 0x1d
 7401 1a18 CE000000 		.4byte	.LVL335
 7402 1a1c 801D0000 		.4byte	0x1d80
 7403 1a20 1E       		.uleb128 0x1e
 7404 1a21 01       		.uleb128 0x1
 7405 1a22 50       		.byte	0x50
 7406 1a23 05       		.uleb128 0x5
 7407 1a24 03       		.byte	0x3
 7408 1a25 14000000 		.4byte	.LANCHOR0+20
 7409 1a29 1E       		.uleb128 0x1e
 7410 1a2a 01       		.uleb128 0x1
 7411 1a2b 51       		.byte	0x51
 7412 1a2c 02       		.uleb128 0x2
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 230


 7413 1a2d 74       		.byte	0x74
 7414 1a2e 18       		.sleb128 24
 7415 1a2f 00       		.byte	0
 7416 1a30 00       		.byte	0
 7417 1a31 06       		.uleb128 0x6
 7418 1a32 04       		.byte	0x4
 7419 1a33 35010000 		.4byte	0x135
 7420 1a37 25       		.uleb128 0x25
 7421 1a38 310A0000 		.4byte	.LASF178
 7422 1a3c 01       		.byte	0x1
 7423 1a3d E811     		.2byte	0x11e8
 7424 1a3f 00000000 		.4byte	.LFB174
 7425 1a43 B0000000 		.4byte	.LFE174-.LFB174
 7426 1a47 01       		.uleb128 0x1
 7427 1a48 9C       		.byte	0x9c
 7428 1a49 2B1B0000 		.4byte	0x1b2b
 7429 1a4d 19       		.uleb128 0x19
 7430 1a4e 25050000 		.4byte	.LASF171
 7431 1a52 01       		.byte	0x1
 7432 1a53 E811     		.2byte	0x11e8
 7433 1a55 3E020000 		.4byte	0x23e
 7434 1a59 30110000 		.4byte	.LLST117
 7435 1a5d 19       		.uleb128 0x19
 7436 1a5e D6020000 		.4byte	.LASF177
 7437 1a62 01       		.byte	0x1
 7438 1a63 E811     		.2byte	0x11e8
 7439 1a65 311A0000 		.4byte	0x1a31
 7440 1a69 5C110000 		.4byte	.LLST118
 7441 1a6d 1A       		.uleb128 0x1a
 7442 1a6e A5050000 		.4byte	.LASF73
 7443 1a72 01       		.byte	0x1
 7444 1a73 EA11     		.2byte	0x11ea
 7445 1a75 72040000 		.4byte	0x472
 7446 1a79 88110000 		.4byte	.LLST119
 7447 1a7d 1A       		.uleb128 0x1a
 7448 1a7e F0020000 		.4byte	.LASF175
 7449 1a82 01       		.byte	0x1
 7450 1a83 EB11     		.2byte	0x11eb
 7451 1a85 CA000000 		.4byte	0xca
 7452 1a89 A9110000 		.4byte	.LLST120
 7453 1a8d 26       		.uleb128 0x26
 7454 1a8e 7B0A0000 		.4byte	.LASF108
 7455 1a92 01       		.byte	0x1
 7456 1a93 EC11     		.2byte	0x11ec
 7457 1a95 40010000 		.4byte	0x140
 7458 1a99 27       		.uleb128 0x27
 7459 1a9a AC030000 		.4byte	0x3ac
 7460 1a9e 10000000 		.4byte	.LBB44
 7461 1aa2 14000000 		.4byte	.LBE44-.LBB44
 7462 1aa6 01       		.byte	0x1
 7463 1aa7 0412     		.2byte	0x1204
 7464 1aa9 C21A0000 		.4byte	0x1ac2
 7465 1aad 28       		.uleb128 0x28
 7466 1aae 10000000 		.4byte	.LBB45
 7467 1ab2 14000000 		.4byte	.LBE45-.LBB45
 7468 1ab6 29       		.uleb128 0x29
 7469 1ab7 BC030000 		.4byte	0x3bc
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 231


 7470 1abb 29       		.uleb128 0x29
 7471 1abc C7030000 		.4byte	0x3c7
 7472 1ac0 00       		.byte	0
 7473 1ac1 00       		.byte	0
 7474 1ac2 27       		.uleb128 0x27
 7475 1ac3 D3030000 		.4byte	0x3d3
 7476 1ac7 9E000000 		.4byte	.LBB46
 7477 1acb 12000000 		.4byte	.LBE46-.LBB46
 7478 1acf 01       		.byte	0x1
 7479 1ad0 3812     		.2byte	0x1238
 7480 1ad2 E01A0000 		.4byte	0x1ae0
 7481 1ad6 2A       		.uleb128 0x2a
 7482 1ad7 DF030000 		.4byte	0x3df
 7483 1adb BC110000 		.4byte	.LLST121
 7484 1adf 00       		.byte	0
 7485 1ae0 1C       		.uleb128 0x1c
 7486 1ae1 10000000 		.4byte	.LVL340
 7487 1ae5 BA1D0000 		.4byte	0x1dba
 7488 1ae9 22       		.uleb128 0x22
 7489 1aea 52000000 		.4byte	.LVL343
 7490 1aee 971D0000 		.4byte	0x1d97
 7491 1af2 FD1A0000 		.4byte	0x1afd
 7492 1af6 1E       		.uleb128 0x1e
 7493 1af7 01       		.uleb128 0x1
 7494 1af8 50       		.byte	0x50
 7495 1af9 02       		.uleb128 0x2
 7496 1afa 77       		.byte	0x77
 7497 1afb 00       		.sleb128 0
 7498 1afc 00       		.byte	0
 7499 1afd 22       		.uleb128 0x22
 7500 1afe 74000000 		.4byte	.LVL344
 7501 1b02 801D0000 		.4byte	0x1d80
 7502 1b06 111B0000 		.4byte	0x1b11
 7503 1b0a 1E       		.uleb128 0x1e
 7504 1b0b 01       		.uleb128 0x1
 7505 1b0c 51       		.byte	0x51
 7506 1b0d 02       		.uleb128 0x2
 7507 1b0e 77       		.byte	0x77
 7508 1b0f 00       		.sleb128 0
 7509 1b10 00       		.byte	0
 7510 1b11 1D       		.uleb128 0x1d
 7511 1b12 80000000 		.4byte	.LVL345
 7512 1b16 801D0000 		.4byte	0x1d80
 7513 1b1a 1E       		.uleb128 0x1e
 7514 1b1b 01       		.uleb128 0x1
 7515 1b1c 50       		.byte	0x50
 7516 1b1d 05       		.uleb128 0x5
 7517 1b1e 03       		.byte	0x3
 7518 1b1f 14000000 		.4byte	.LANCHOR0+20
 7519 1b23 1E       		.uleb128 0x1e
 7520 1b24 01       		.uleb128 0x1
 7521 1b25 51       		.byte	0x51
 7522 1b26 02       		.uleb128 0x2
 7523 1b27 74       		.byte	0x74
 7524 1b28 18       		.sleb128 24
 7525 1b29 00       		.byte	0
 7526 1b2a 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 232


 7527 1b2b 23       		.uleb128 0x23
 7528 1b2c 25010000 		.4byte	.LASF179
 7529 1b30 01       		.byte	0x1
 7530 1b31 4112     		.2byte	0x1241
 7531 1b33 35010000 		.4byte	0x135
 7532 1b37 00000000 		.4byte	.LFB175
 7533 1b3b 34000000 		.4byte	.LFE175-.LFB175
 7534 1b3f 01       		.uleb128 0x1
 7535 1b40 9C       		.byte	0x9c
 7536 1b41 881B0000 		.4byte	0x1b88
 7537 1b45 19       		.uleb128 0x19
 7538 1b46 E6060000 		.4byte	.LASF76
 7539 1b4a 01       		.byte	0x1
 7540 1b4b 4112     		.2byte	0x1241
 7541 1b4d 3E020000 		.4byte	0x23e
 7542 1b51 CF110000 		.4byte	.LLST122
 7543 1b55 1A       		.uleb128 0x1a
 7544 1b56 A5050000 		.4byte	.LASF73
 7545 1b5a 01       		.byte	0x1
 7546 1b5b 4312     		.2byte	0x1243
 7547 1b5d 72040000 		.4byte	0x472
 7548 1b61 E2110000 		.4byte	.LLST123
 7549 1b65 1A       		.uleb128 0x1a
 7550 1b66 AC040000 		.4byte	.LASF72
 7551 1b6a 01       		.byte	0x1
 7552 1b6b 4412     		.2byte	0x1244
 7553 1b6d 35010000 		.4byte	0x135
 7554 1b71 00120000 		.4byte	.LLST124
 7555 1b75 1C       		.uleb128 0x1c
 7556 1b76 10000000 		.4byte	.LVL351
 7557 1b7a 751D0000 		.4byte	0x1d75
 7558 1b7e 1C       		.uleb128 0x1c
 7559 1b7f 2A000000 		.4byte	.LVL356
 7560 1b83 8C1D0000 		.4byte	0x1d8c
 7561 1b87 00       		.byte	0
 7562 1b88 0B       		.uleb128 0xb
 7563 1b89 33020000 		.4byte	0x233
 7564 1b8d 981B0000 		.4byte	0x1b98
 7565 1b91 0C       		.uleb128 0xc
 7566 1b92 A9000000 		.4byte	0xa9
 7567 1b96 06       		.byte	0x6
 7568 1b97 00       		.byte	0
 7569 1b98 20       		.uleb128 0x20
 7570 1b99 2A0C0000 		.4byte	.LASF180
 7571 1b9d 01       		.byte	0x1
 7572 1b9e 7701     		.2byte	0x177
 7573 1ba0 881B0000 		.4byte	0x1b88
 7574 1ba4 05       		.uleb128 0x5
 7575 1ba5 03       		.byte	0x3
 7576 1ba6 30000000 		.4byte	pxReadyTasksLists
 7577 1baa 20       		.uleb128 0x20
 7578 1bab B70C0000 		.4byte	.LASF181
 7579 1baf 01       		.byte	0x1
 7580 1bb0 7801     		.2byte	0x178
 7581 1bb2 33020000 		.4byte	0x233
 7582 1bb6 05       		.uleb128 0x5
 7583 1bb7 03       		.byte	0x3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 233


 7584 1bb8 BC000000 		.4byte	xDelayedTaskList1
 7585 1bbc 20       		.uleb128 0x20
 7586 1bbd B4040000 		.4byte	.LASF182
 7587 1bc1 01       		.byte	0x1
 7588 1bc2 7901     		.2byte	0x179
 7589 1bc4 33020000 		.4byte	0x233
 7590 1bc8 05       		.uleb128 0x5
 7591 1bc9 03       		.byte	0x3
 7592 1bca D0000000 		.4byte	xDelayedTaskList2
 7593 1bce 20       		.uleb128 0x20
 7594 1bcf 0F0E0000 		.4byte	.LASF183
 7595 1bd3 01       		.byte	0x1
 7596 1bd4 7A01     		.2byte	0x17a
 7597 1bd6 E01B0000 		.4byte	0x1be0
 7598 1bda 05       		.uleb128 0x5
 7599 1bdb 03       		.byte	0x3
 7600 1bdc 28000000 		.4byte	pxDelayedTaskList
 7601 1be0 08       		.uleb128 0x8
 7602 1be1 C70E0000 		.4byte	0xec7
 7603 1be5 20       		.uleb128 0x20
 7604 1be6 A5060000 		.4byte	.LASF184
 7605 1bea 01       		.byte	0x1
 7606 1beb 7B01     		.2byte	0x17b
 7607 1bed E01B0000 		.4byte	0x1be0
 7608 1bf1 05       		.uleb128 0x5
 7609 1bf2 03       		.byte	0x3
 7610 1bf3 F8000000 		.4byte	pxOverflowDelayedTaskList
 7611 1bf7 20       		.uleb128 0x20
 7612 1bf8 C80A0000 		.4byte	.LASF185
 7613 1bfc 01       		.byte	0x1
 7614 1bfd 7C01     		.2byte	0x17c
 7615 1bff 33020000 		.4byte	0x233
 7616 1c03 05       		.uleb128 0x5
 7617 1c04 03       		.byte	0x3
 7618 1c05 14000000 		.4byte	xPendingReadyList
 7619 1c09 20       		.uleb128 0x20
 7620 1c0a EC060000 		.4byte	.LASF186
 7621 1c0e 01       		.byte	0x1
 7622 1c0f 8001     		.2byte	0x180
 7623 1c11 33020000 		.4byte	0x233
 7624 1c15 05       		.uleb128 0x5
 7625 1c16 03       		.byte	0x3
 7626 1c17 E4000000 		.4byte	xTasksWaitingTermination
 7627 1c1b 20       		.uleb128 0x20
 7628 1c1c 970B0000 		.4byte	.LASF187
 7629 1c20 01       		.byte	0x1
 7630 1c21 8101     		.2byte	0x181
 7631 1c23 2D1C0000 		.4byte	0x1c2d
 7632 1c27 05       		.uleb128 0x5
 7633 1c28 03       		.byte	0x3
 7634 1c29 14010000 		.4byte	uxDeletedTasksWaitingCleanUp
 7635 1c2d 08       		.uleb128 0x8
 7636 1c2e 40010000 		.4byte	0x140
 7637 1c32 20       		.uleb128 0x20
 7638 1c33 FE000000 		.4byte	.LASF188
 7639 1c37 01       		.byte	0x1
 7640 1c38 8701     		.2byte	0x187
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 234


 7641 1c3a 33020000 		.4byte	0x233
 7642 1c3e 05       		.uleb128 0x5
 7643 1c3f 03       		.byte	0x3
 7644 1c40 00000000 		.4byte	xSuspendedTaskList
 7645 1c44 20       		.uleb128 0x20
 7646 1c45 6D000000 		.4byte	.LASF189
 7647 1c49 01       		.byte	0x1
 7648 1c4a 8C01     		.2byte	0x18c
 7649 1c4c 2D1C0000 		.4byte	0x1c2d
 7650 1c50 05       		.uleb128 0x5
 7651 1c51 03       		.byte	0x3
 7652 1c52 FC000000 		.4byte	uxCurrentNumberOfTasks
 7653 1c56 20       		.uleb128 0x20
 7654 1c57 FE0C0000 		.4byte	.LASF190
 7655 1c5b 01       		.byte	0x1
 7656 1c5c 8D01     		.2byte	0x18d
 7657 1c5e 681C0000 		.4byte	0x1c68
 7658 1c62 05       		.uleb128 0x5
 7659 1c63 03       		.byte	0x3
 7660 1c64 10010000 		.4byte	xTickCount
 7661 1c68 08       		.uleb128 0x8
 7662 1c69 4B010000 		.4byte	0x14b
 7663 1c6d 20       		.uleb128 0x20
 7664 1c6e 7C070000 		.4byte	.LASF191
 7665 1c72 01       		.byte	0x1
 7666 1c73 8E01     		.2byte	0x18e
 7667 1c75 2D1C0000 		.4byte	0x1c2d
 7668 1c79 05       		.uleb128 0x5
 7669 1c7a 03       		.byte	0x3
 7670 1c7b 0C010000 		.4byte	uxTopReadyPriority
 7671 1c7f 20       		.uleb128 0x20
 7672 1c80 94090000 		.4byte	.LASF192
 7673 1c84 01       		.byte	0x1
 7674 1c85 8F01     		.2byte	0x18f
 7675 1c87 911C0000 		.4byte	0x1c91
 7676 1c8b 05       		.uleb128 0x5
 7677 1c8c 03       		.byte	0x3
 7678 1c8d 04010000 		.4byte	xSchedulerRunning
 7679 1c91 08       		.uleb128 0x8
 7680 1c92 35010000 		.4byte	0x135
 7681 1c96 20       		.uleb128 0x20
 7682 1c97 E4090000 		.4byte	.LASF193
 7683 1c9b 01       		.byte	0x1
 7684 1c9c 9001     		.2byte	0x190
 7685 1c9e 2D1C0000 		.4byte	0x1c2d
 7686 1ca2 05       		.uleb128 0x5
 7687 1ca3 03       		.byte	0x3
 7688 1ca4 24010000 		.4byte	uxPendedTicks
 7689 1ca8 20       		.uleb128 0x20
 7690 1ca9 A6000000 		.4byte	.LASF194
 7691 1cad 01       		.byte	0x1
 7692 1cae 9101     		.2byte	0x191
 7693 1cb0 911C0000 		.4byte	0x1c91
 7694 1cb4 05       		.uleb128 0x5
 7695 1cb5 03       		.byte	0x3
 7696 1cb6 28010000 		.4byte	xYieldPending
 7697 1cba 20       		.uleb128 0x20
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 235


 7698 1cbb DB0C0000 		.4byte	.LASF195
 7699 1cbf 01       		.byte	0x1
 7700 1cc0 9201     		.2byte	0x192
 7701 1cc2 911C0000 		.4byte	0x1c91
 7702 1cc6 05       		.uleb128 0x5
 7703 1cc7 03       		.byte	0x3
 7704 1cc8 20010000 		.4byte	xNumOfOverflows
 7705 1ccc 20       		.uleb128 0x20
 7706 1ccd 060C0000 		.4byte	.LASF196
 7707 1cd1 01       		.byte	0x1
 7708 1cd2 9301     		.2byte	0x193
 7709 1cd4 40010000 		.4byte	0x140
 7710 1cd8 05       		.uleb128 0x5
 7711 1cd9 03       		.byte	0x3
 7712 1cda 08010000 		.4byte	uxTaskNumber
 7713 1cde 20       		.uleb128 0x20
 7714 1cdf 3E070000 		.4byte	.LASF197
 7715 1ce3 01       		.byte	0x1
 7716 1ce4 9401     		.2byte	0x194
 7717 1ce6 681C0000 		.4byte	0x1c68
 7718 1cea 05       		.uleb128 0x5
 7719 1ceb 03       		.byte	0x3
 7720 1cec 2C000000 		.4byte	xNextTaskUnblockTime
 7721 1cf0 20       		.uleb128 0x20
 7722 1cf1 1A0C0000 		.4byte	.LASF198
 7723 1cf5 01       		.byte	0x1
 7724 1cf6 9501     		.2byte	0x195
 7725 1cf8 3E020000 		.4byte	0x23e
 7726 1cfc 05       		.uleb128 0x5
 7727 1cfd 03       		.byte	0x3
 7728 1cfe 1C010000 		.4byte	xIdleTaskHandle
 7729 1d02 20       		.uleb128 0x20
 7730 1d03 6D040000 		.4byte	.LASF199
 7731 1d07 01       		.byte	0x1
 7732 1d08 9F01     		.2byte	0x19f
 7733 1d0a 2D1C0000 		.4byte	0x1c2d
 7734 1d0e 05       		.uleb128 0x5
 7735 1d0f 03       		.byte	0x3
 7736 1d10 18010000 		.4byte	uxSchedulerSuspended
 7737 1d14 32       		.uleb128 0x32
 7738 1d15 91010000 		.4byte	.LASF200
 7739 1d19 09       		.byte	0x9
 7740 1d1a EA07     		.2byte	0x7ea
 7741 1d1c 201D0000 		.4byte	0x1d20
 7742 1d20 08       		.uleb128 0x8
 7743 1d21 E0000000 		.4byte	0xe0
 7744 1d25 33       		.uleb128 0x33
 7745 1d26 5F060000 		.4byte	.LASF201
 7746 1d2a 01       		.byte	0x1
 7747 1d2b 7401     		.2byte	0x174
 7748 1d2d 371D0000 		.4byte	0x1d37
 7749 1d31 05       		.uleb128 0x5
 7750 1d32 03       		.byte	0x3
 7751 1d33 00000000 		.4byte	pxCurrentTCB
 7752 1d37 08       		.uleb128 0x8
 7753 1d38 72040000 		.4byte	0x472
 7754 1d3c 34       		.uleb128 0x34
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 236


 7755 1d3d 3A060000 		.4byte	.LASF202
 7756 1d41 3A060000 		.4byte	.LASF202
 7757 1d45 0A       		.byte	0xa
 7758 1d46 AC       		.byte	0xac
 7759 1d47 34       		.uleb128 0x34
 7760 1d48 110D0000 		.4byte	.LASF203
 7761 1d4c 110D0000 		.4byte	.LASF203
 7762 1d50 0B       		.byte	0xb
 7763 1d51 19       		.byte	0x19
 7764 1d52 35       		.uleb128 0x35
 7765 1d53 08040000 		.4byte	.LASF204
 7766 1d57 08040000 		.4byte	.LASF204
 7767 1d5b 07       		.byte	0x7
 7768 1d5c 8D01     		.2byte	0x18d
 7769 1d5e 34       		.uleb128 0x34
 7770 1d5f 260D0000 		.4byte	.LASF205
 7771 1d63 260D0000 		.4byte	.LASF205
 7772 1d67 0A       		.byte	0xa
 7773 1d68 90       		.byte	0x90
 7774 1d69 35       		.uleb128 0x35
 7775 1d6a D00D0000 		.4byte	.LASF206
 7776 1d6e D00D0000 		.4byte	.LASF206
 7777 1d72 07       		.byte	0x7
 7778 1d73 8201     		.2byte	0x182
 7779 1d75 34       		.uleb128 0x34
 7780 1d76 A40C0000 		.4byte	.LASF207
 7781 1d7a A40C0000 		.4byte	.LASF207
 7782 1d7e 02       		.byte	0x2
 7783 1d7f 8D       		.byte	0x8d
 7784 1d80 35       		.uleb128 0x35
 7785 1d81 A6030000 		.4byte	.LASF208
 7786 1d85 A6030000 		.4byte	.LASF208
 7787 1d89 07       		.byte	0x7
 7788 1d8a AF01     		.2byte	0x1af
 7789 1d8c 34       		.uleb128 0x34
 7790 1d8d 340B0000 		.4byte	.LASF209
 7791 1d91 340B0000 		.4byte	.LASF209
 7792 1d95 02       		.byte	0x2
 7793 1d96 8E       		.byte	0x8e
 7794 1d97 35       		.uleb128 0x35
 7795 1d98 E90B0000 		.4byte	.LASF210
 7796 1d9c E90B0000 		.4byte	.LASF210
 7797 1da0 07       		.byte	0x7
 7798 1da1 BE01     		.2byte	0x1be
 7799 1da3 35       		.uleb128 0x35
 7800 1da4 DA0A0000 		.4byte	.LASF211
 7801 1da8 DA0A0000 		.4byte	.LASF211
 7802 1dac 07       		.byte	0x7
 7803 1dad 9A01     		.2byte	0x19a
 7804 1daf 34       		.uleb128 0x34
 7805 1db0 3F040000 		.4byte	.LASF212
 7806 1db4 3F040000 		.4byte	.LASF212
 7807 1db8 0A       		.byte	0xa
 7808 1db9 AB       		.byte	0xab
 7809 1dba 34       		.uleb128 0x34
 7810 1dbb BD0E0000 		.4byte	.LASF213
 7811 1dbf BD0E0000 		.4byte	.LASF213
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 237


 7812 1dc3 02       		.byte	0x2
 7813 1dc4 9F       		.byte	0x9f
 7814 1dc5 35       		.uleb128 0x35
 7815 1dc6 85030000 		.4byte	.LASF214
 7816 1dca 85030000 		.4byte	.LASF214
 7817 1dce 0C       		.byte	0xc
 7818 1dcf 1905     		.2byte	0x519
 7819 1dd1 34       		.uleb128 0x34
 7820 1dd2 3F030000 		.4byte	.LASF215
 7821 1dd6 3F030000 		.4byte	.LASF215
 7822 1dda 0A       		.byte	0xa
 7823 1ddb B5       		.byte	0xb5
 7824 1ddc 34       		.uleb128 0x34
 7825 1ddd 6A070000 		.4byte	.LASF216
 7826 1de1 6A070000 		.4byte	.LASF216
 7827 1de5 0A       		.byte	0xa
 7828 1de6 BC       		.byte	0xbc
 7829 1de7 35       		.uleb128 0x35
 7830 1de8 5C050000 		.4byte	.LASF217
 7831 1dec 5C050000 		.4byte	.LASF217
 7832 1df0 01       		.byte	0x1
 7833 1df1 AE01     		.2byte	0x1ae
 7834 1df3 00       		.byte	0
 7835              		.section	.debug_abbrev,"",%progbits
 7836              	.Ldebug_abbrev0:
 7837 0000 01       		.uleb128 0x1
 7838 0001 11       		.uleb128 0x11
 7839 0002 01       		.byte	0x1
 7840 0003 25       		.uleb128 0x25
 7841 0004 0E       		.uleb128 0xe
 7842 0005 13       		.uleb128 0x13
 7843 0006 0B       		.uleb128 0xb
 7844 0007 03       		.uleb128 0x3
 7845 0008 0E       		.uleb128 0xe
 7846 0009 1B       		.uleb128 0x1b
 7847 000a 0E       		.uleb128 0xe
 7848 000b 55       		.uleb128 0x55
 7849 000c 17       		.uleb128 0x17
 7850 000d 11       		.uleb128 0x11
 7851 000e 01       		.uleb128 0x1
 7852 000f 10       		.uleb128 0x10
 7853 0010 17       		.uleb128 0x17
 7854 0011 00       		.byte	0
 7855 0012 00       		.byte	0
 7856 0013 02       		.uleb128 0x2
 7857 0014 16       		.uleb128 0x16
 7858 0015 00       		.byte	0
 7859 0016 03       		.uleb128 0x3
 7860 0017 0E       		.uleb128 0xe
 7861 0018 3A       		.uleb128 0x3a
 7862 0019 0B       		.uleb128 0xb
 7863 001a 3B       		.uleb128 0x3b
 7864 001b 0B       		.uleb128 0xb
 7865 001c 49       		.uleb128 0x49
 7866 001d 13       		.uleb128 0x13
 7867 001e 00       		.byte	0
 7868 001f 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 238


 7869 0020 03       		.uleb128 0x3
 7870 0021 24       		.uleb128 0x24
 7871 0022 00       		.byte	0
 7872 0023 0B       		.uleb128 0xb
 7873 0024 0B       		.uleb128 0xb
 7874 0025 3E       		.uleb128 0x3e
 7875 0026 0B       		.uleb128 0xb
 7876 0027 03       		.uleb128 0x3
 7877 0028 0E       		.uleb128 0xe
 7878 0029 00       		.byte	0
 7879 002a 00       		.byte	0
 7880 002b 04       		.uleb128 0x4
 7881 002c 24       		.uleb128 0x24
 7882 002d 00       		.byte	0
 7883 002e 0B       		.uleb128 0xb
 7884 002f 0B       		.uleb128 0xb
 7885 0030 3E       		.uleb128 0x3e
 7886 0031 0B       		.uleb128 0xb
 7887 0032 03       		.uleb128 0x3
 7888 0033 08       		.uleb128 0x8
 7889 0034 00       		.byte	0
 7890 0035 00       		.byte	0
 7891 0036 05       		.uleb128 0x5
 7892 0037 0F       		.uleb128 0xf
 7893 0038 00       		.byte	0
 7894 0039 0B       		.uleb128 0xb
 7895 003a 0B       		.uleb128 0xb
 7896 003b 00       		.byte	0
 7897 003c 00       		.byte	0
 7898 003d 06       		.uleb128 0x6
 7899 003e 0F       		.uleb128 0xf
 7900 003f 00       		.byte	0
 7901 0040 0B       		.uleb128 0xb
 7902 0041 0B       		.uleb128 0xb
 7903 0042 49       		.uleb128 0x49
 7904 0043 13       		.uleb128 0x13
 7905 0044 00       		.byte	0
 7906 0045 00       		.byte	0
 7907 0046 07       		.uleb128 0x7
 7908 0047 26       		.uleb128 0x26
 7909 0048 00       		.byte	0
 7910 0049 49       		.uleb128 0x49
 7911 004a 13       		.uleb128 0x13
 7912 004b 00       		.byte	0
 7913 004c 00       		.byte	0
 7914 004d 08       		.uleb128 0x8
 7915 004e 35       		.uleb128 0x35
 7916 004f 00       		.byte	0
 7917 0050 49       		.uleb128 0x49
 7918 0051 13       		.uleb128 0x13
 7919 0052 00       		.byte	0
 7920 0053 00       		.byte	0
 7921 0054 09       		.uleb128 0x9
 7922 0055 15       		.uleb128 0x15
 7923 0056 01       		.byte	0x1
 7924 0057 27       		.uleb128 0x27
 7925 0058 19       		.uleb128 0x19
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 239


 7926 0059 01       		.uleb128 0x1
 7927 005a 13       		.uleb128 0x13
 7928 005b 00       		.byte	0
 7929 005c 00       		.byte	0
 7930 005d 0A       		.uleb128 0xa
 7931 005e 05       		.uleb128 0x5
 7932 005f 00       		.byte	0
 7933 0060 49       		.uleb128 0x49
 7934 0061 13       		.uleb128 0x13
 7935 0062 00       		.byte	0
 7936 0063 00       		.byte	0
 7937 0064 0B       		.uleb128 0xb
 7938 0065 01       		.uleb128 0x1
 7939 0066 01       		.byte	0x1
 7940 0067 49       		.uleb128 0x49
 7941 0068 13       		.uleb128 0x13
 7942 0069 01       		.uleb128 0x1
 7943 006a 13       		.uleb128 0x13
 7944 006b 00       		.byte	0
 7945 006c 00       		.byte	0
 7946 006d 0C       		.uleb128 0xc
 7947 006e 21       		.uleb128 0x21
 7948 006f 00       		.byte	0
 7949 0070 49       		.uleb128 0x49
 7950 0071 13       		.uleb128 0x13
 7951 0072 2F       		.uleb128 0x2f
 7952 0073 0B       		.uleb128 0xb
 7953 0074 00       		.byte	0
 7954 0075 00       		.byte	0
 7955 0076 0D       		.uleb128 0xd
 7956 0077 13       		.uleb128 0x13
 7957 0078 01       		.byte	0x1
 7958 0079 03       		.uleb128 0x3
 7959 007a 0E       		.uleb128 0xe
 7960 007b 0B       		.uleb128 0xb
 7961 007c 0B       		.uleb128 0xb
 7962 007d 3A       		.uleb128 0x3a
 7963 007e 0B       		.uleb128 0xb
 7964 007f 3B       		.uleb128 0x3b
 7965 0080 0B       		.uleb128 0xb
 7966 0081 01       		.uleb128 0x1
 7967 0082 13       		.uleb128 0x13
 7968 0083 00       		.byte	0
 7969 0084 00       		.byte	0
 7970 0085 0E       		.uleb128 0xe
 7971 0086 0D       		.uleb128 0xd
 7972 0087 00       		.byte	0
 7973 0088 03       		.uleb128 0x3
 7974 0089 0E       		.uleb128 0xe
 7975 008a 3A       		.uleb128 0x3a
 7976 008b 0B       		.uleb128 0xb
 7977 008c 3B       		.uleb128 0x3b
 7978 008d 0B       		.uleb128 0xb
 7979 008e 49       		.uleb128 0x49
 7980 008f 13       		.uleb128 0x13
 7981 0090 38       		.uleb128 0x38
 7982 0091 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 240


 7983 0092 00       		.byte	0
 7984 0093 00       		.byte	0
 7985 0094 0F       		.uleb128 0xf
 7986 0095 04       		.uleb128 0x4
 7987 0096 01       		.byte	0x1
 7988 0097 0B       		.uleb128 0xb
 7989 0098 0B       		.uleb128 0xb
 7990 0099 49       		.uleb128 0x49
 7991 009a 13       		.uleb128 0x13
 7992 009b 3A       		.uleb128 0x3a
 7993 009c 0B       		.uleb128 0xb
 7994 009d 3B       		.uleb128 0x3b
 7995 009e 0B       		.uleb128 0xb
 7996 009f 01       		.uleb128 0x1
 7997 00a0 13       		.uleb128 0x13
 7998 00a1 00       		.byte	0
 7999 00a2 00       		.byte	0
 8000 00a3 10       		.uleb128 0x10
 8001 00a4 28       		.uleb128 0x28
 8002 00a5 00       		.byte	0
 8003 00a6 03       		.uleb128 0x3
 8004 00a7 0E       		.uleb128 0xe
 8005 00a8 1C       		.uleb128 0x1c
 8006 00a9 0B       		.uleb128 0xb
 8007 00aa 00       		.byte	0
 8008 00ab 00       		.byte	0
 8009 00ac 11       		.uleb128 0x11
 8010 00ad 13       		.uleb128 0x13
 8011 00ae 01       		.byte	0x1
 8012 00af 03       		.uleb128 0x3
 8013 00b0 0E       		.uleb128 0xe
 8014 00b1 0B       		.uleb128 0xb
 8015 00b2 0B       		.uleb128 0xb
 8016 00b3 3A       		.uleb128 0x3a
 8017 00b4 0B       		.uleb128 0xb
 8018 00b5 3B       		.uleb128 0x3b
 8019 00b6 05       		.uleb128 0x5
 8020 00b7 01       		.uleb128 0x1
 8021 00b8 13       		.uleb128 0x13
 8022 00b9 00       		.byte	0
 8023 00ba 00       		.byte	0
 8024 00bb 12       		.uleb128 0x12
 8025 00bc 0D       		.uleb128 0xd
 8026 00bd 00       		.byte	0
 8027 00be 03       		.uleb128 0x3
 8028 00bf 0E       		.uleb128 0xe
 8029 00c0 3A       		.uleb128 0x3a
 8030 00c1 0B       		.uleb128 0xb
 8031 00c2 3B       		.uleb128 0x3b
 8032 00c3 05       		.uleb128 0x5
 8033 00c4 49       		.uleb128 0x49
 8034 00c5 13       		.uleb128 0x13
 8035 00c6 38       		.uleb128 0x38
 8036 00c7 0B       		.uleb128 0xb
 8037 00c8 00       		.byte	0
 8038 00c9 00       		.byte	0
 8039 00ca 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 241


 8040 00cb 16       		.uleb128 0x16
 8041 00cc 00       		.byte	0
 8042 00cd 03       		.uleb128 0x3
 8043 00ce 0E       		.uleb128 0xe
 8044 00cf 3A       		.uleb128 0x3a
 8045 00d0 0B       		.uleb128 0xb
 8046 00d1 3B       		.uleb128 0x3b
 8047 00d2 05       		.uleb128 0x5
 8048 00d3 49       		.uleb128 0x49
 8049 00d4 13       		.uleb128 0x13
 8050 00d5 00       		.byte	0
 8051 00d6 00       		.byte	0
 8052 00d7 14       		.uleb128 0x14
 8053 00d8 2E       		.uleb128 0x2e
 8054 00d9 01       		.byte	0x1
 8055 00da 03       		.uleb128 0x3
 8056 00db 0E       		.uleb128 0xe
 8057 00dc 3A       		.uleb128 0x3a
 8058 00dd 0B       		.uleb128 0xb
 8059 00de 3B       		.uleb128 0x3b
 8060 00df 0B       		.uleb128 0xb
 8061 00e0 27       		.uleb128 0x27
 8062 00e1 19       		.uleb128 0x19
 8063 00e2 49       		.uleb128 0x49
 8064 00e3 13       		.uleb128 0x13
 8065 00e4 20       		.uleb128 0x20
 8066 00e5 0B       		.uleb128 0xb
 8067 00e6 01       		.uleb128 0x1
 8068 00e7 13       		.uleb128 0x13
 8069 00e8 00       		.byte	0
 8070 00e9 00       		.byte	0
 8071 00ea 15       		.uleb128 0x15
 8072 00eb 34       		.uleb128 0x34
 8073 00ec 00       		.byte	0
 8074 00ed 03       		.uleb128 0x3
 8075 00ee 0E       		.uleb128 0xe
 8076 00ef 3A       		.uleb128 0x3a
 8077 00f0 0B       		.uleb128 0xb
 8078 00f1 3B       		.uleb128 0x3b
 8079 00f2 0B       		.uleb128 0xb
 8080 00f3 49       		.uleb128 0x49
 8081 00f4 13       		.uleb128 0x13
 8082 00f5 00       		.byte	0
 8083 00f6 00       		.byte	0
 8084 00f7 16       		.uleb128 0x16
 8085 00f8 2E       		.uleb128 0x2e
 8086 00f9 01       		.byte	0x1
 8087 00fa 03       		.uleb128 0x3
 8088 00fb 0E       		.uleb128 0xe
 8089 00fc 3A       		.uleb128 0x3a
 8090 00fd 0B       		.uleb128 0xb
 8091 00fe 3B       		.uleb128 0x3b
 8092 00ff 0B       		.uleb128 0xb
 8093 0100 27       		.uleb128 0x27
 8094 0101 19       		.uleb128 0x19
 8095 0102 20       		.uleb128 0x20
 8096 0103 0B       		.uleb128 0xb
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 242


 8097 0104 01       		.uleb128 0x1
 8098 0105 13       		.uleb128 0x13
 8099 0106 00       		.byte	0
 8100 0107 00       		.byte	0
 8101 0108 17       		.uleb128 0x17
 8102 0109 05       		.uleb128 0x5
 8103 010a 00       		.byte	0
 8104 010b 03       		.uleb128 0x3
 8105 010c 0E       		.uleb128 0xe
 8106 010d 3A       		.uleb128 0x3a
 8107 010e 0B       		.uleb128 0xb
 8108 010f 3B       		.uleb128 0x3b
 8109 0110 0B       		.uleb128 0xb
 8110 0111 49       		.uleb128 0x49
 8111 0112 13       		.uleb128 0x13
 8112 0113 00       		.byte	0
 8113 0114 00       		.byte	0
 8114 0115 18       		.uleb128 0x18
 8115 0116 2E       		.uleb128 0x2e
 8116 0117 01       		.byte	0x1
 8117 0118 03       		.uleb128 0x3
 8118 0119 0E       		.uleb128 0xe
 8119 011a 3A       		.uleb128 0x3a
 8120 011b 0B       		.uleb128 0xb
 8121 011c 3B       		.uleb128 0x3b
 8122 011d 05       		.uleb128 0x5
 8123 011e 27       		.uleb128 0x27
 8124 011f 19       		.uleb128 0x19
 8125 0120 49       		.uleb128 0x49
 8126 0121 13       		.uleb128 0x13
 8127 0122 11       		.uleb128 0x11
 8128 0123 01       		.uleb128 0x1
 8129 0124 12       		.uleb128 0x12
 8130 0125 06       		.uleb128 0x6
 8131 0126 40       		.uleb128 0x40
 8132 0127 18       		.uleb128 0x18
 8133 0128 9742     		.uleb128 0x2117
 8134 012a 19       		.uleb128 0x19
 8135 012b 01       		.uleb128 0x1
 8136 012c 13       		.uleb128 0x13
 8137 012d 00       		.byte	0
 8138 012e 00       		.byte	0
 8139 012f 19       		.uleb128 0x19
 8140 0130 05       		.uleb128 0x5
 8141 0131 00       		.byte	0
 8142 0132 03       		.uleb128 0x3
 8143 0133 0E       		.uleb128 0xe
 8144 0134 3A       		.uleb128 0x3a
 8145 0135 0B       		.uleb128 0xb
 8146 0136 3B       		.uleb128 0x3b
 8147 0137 05       		.uleb128 0x5
 8148 0138 49       		.uleb128 0x49
 8149 0139 13       		.uleb128 0x13
 8150 013a 02       		.uleb128 0x2
 8151 013b 17       		.uleb128 0x17
 8152 013c 00       		.byte	0
 8153 013d 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 243


 8154 013e 1A       		.uleb128 0x1a
 8155 013f 34       		.uleb128 0x34
 8156 0140 00       		.byte	0
 8157 0141 03       		.uleb128 0x3
 8158 0142 0E       		.uleb128 0xe
 8159 0143 3A       		.uleb128 0x3a
 8160 0144 0B       		.uleb128 0xb
 8161 0145 3B       		.uleb128 0x3b
 8162 0146 05       		.uleb128 0x5
 8163 0147 49       		.uleb128 0x49
 8164 0148 13       		.uleb128 0x13
 8165 0149 02       		.uleb128 0x2
 8166 014a 17       		.uleb128 0x17
 8167 014b 00       		.byte	0
 8168 014c 00       		.byte	0
 8169 014d 1B       		.uleb128 0x1b
 8170 014e 2E       		.uleb128 0x2e
 8171 014f 01       		.byte	0x1
 8172 0150 03       		.uleb128 0x3
 8173 0151 0E       		.uleb128 0xe
 8174 0152 3A       		.uleb128 0x3a
 8175 0153 0B       		.uleb128 0xb
 8176 0154 3B       		.uleb128 0x3b
 8177 0155 05       		.uleb128 0x5
 8178 0156 27       		.uleb128 0x27
 8179 0157 19       		.uleb128 0x19
 8180 0158 11       		.uleb128 0x11
 8181 0159 01       		.uleb128 0x1
 8182 015a 12       		.uleb128 0x12
 8183 015b 06       		.uleb128 0x6
 8184 015c 40       		.uleb128 0x40
 8185 015d 18       		.uleb128 0x18
 8186 015e 9742     		.uleb128 0x2117
 8187 0160 19       		.uleb128 0x19
 8188 0161 01       		.uleb128 0x1
 8189 0162 13       		.uleb128 0x13
 8190 0163 00       		.byte	0
 8191 0164 00       		.byte	0
 8192 0165 1C       		.uleb128 0x1c
 8193 0166 898201   		.uleb128 0x4109
 8194 0169 00       		.byte	0
 8195 016a 11       		.uleb128 0x11
 8196 016b 01       		.uleb128 0x1
 8197 016c 31       		.uleb128 0x31
 8198 016d 13       		.uleb128 0x13
 8199 016e 00       		.byte	0
 8200 016f 00       		.byte	0
 8201 0170 1D       		.uleb128 0x1d
 8202 0171 898201   		.uleb128 0x4109
 8203 0174 01       		.byte	0x1
 8204 0175 11       		.uleb128 0x11
 8205 0176 01       		.uleb128 0x1
 8206 0177 31       		.uleb128 0x31
 8207 0178 13       		.uleb128 0x13
 8208 0179 00       		.byte	0
 8209 017a 00       		.byte	0
 8210 017b 1E       		.uleb128 0x1e
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 244


 8211 017c 8A8201   		.uleb128 0x410a
 8212 017f 00       		.byte	0
 8213 0180 02       		.uleb128 0x2
 8214 0181 18       		.uleb128 0x18
 8215 0182 9142     		.uleb128 0x2111
 8216 0184 18       		.uleb128 0x18
 8217 0185 00       		.byte	0
 8218 0186 00       		.byte	0
 8219 0187 1F       		.uleb128 0x1f
 8220 0188 05       		.uleb128 0x5
 8221 0189 00       		.byte	0
 8222 018a 03       		.uleb128 0x3
 8223 018b 0E       		.uleb128 0xe
 8224 018c 3A       		.uleb128 0x3a
 8225 018d 0B       		.uleb128 0xb
 8226 018e 3B       		.uleb128 0x3b
 8227 018f 05       		.uleb128 0x5
 8228 0190 49       		.uleb128 0x49
 8229 0191 13       		.uleb128 0x13
 8230 0192 02       		.uleb128 0x2
 8231 0193 18       		.uleb128 0x18
 8232 0194 00       		.byte	0
 8233 0195 00       		.byte	0
 8234 0196 20       		.uleb128 0x20
 8235 0197 34       		.uleb128 0x34
 8236 0198 00       		.byte	0
 8237 0199 03       		.uleb128 0x3
 8238 019a 0E       		.uleb128 0xe
 8239 019b 3A       		.uleb128 0x3a
 8240 019c 0B       		.uleb128 0xb
 8241 019d 3B       		.uleb128 0x3b
 8242 019e 05       		.uleb128 0x5
 8243 019f 49       		.uleb128 0x49
 8244 01a0 13       		.uleb128 0x13
 8245 01a1 02       		.uleb128 0x2
 8246 01a2 18       		.uleb128 0x18
 8247 01a3 00       		.byte	0
 8248 01a4 00       		.byte	0
 8249 01a5 21       		.uleb128 0x21
 8250 01a6 34       		.uleb128 0x34
 8251 01a7 00       		.byte	0
 8252 01a8 03       		.uleb128 0x3
 8253 01a9 08       		.uleb128 0x8
 8254 01aa 3A       		.uleb128 0x3a
 8255 01ab 0B       		.uleb128 0xb
 8256 01ac 3B       		.uleb128 0x3b
 8257 01ad 05       		.uleb128 0x5
 8258 01ae 49       		.uleb128 0x49
 8259 01af 13       		.uleb128 0x13
 8260 01b0 02       		.uleb128 0x2
 8261 01b1 17       		.uleb128 0x17
 8262 01b2 00       		.byte	0
 8263 01b3 00       		.byte	0
 8264 01b4 22       		.uleb128 0x22
 8265 01b5 898201   		.uleb128 0x4109
 8266 01b8 01       		.byte	0x1
 8267 01b9 11       		.uleb128 0x11
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 245


 8268 01ba 01       		.uleb128 0x1
 8269 01bb 31       		.uleb128 0x31
 8270 01bc 13       		.uleb128 0x13
 8271 01bd 01       		.uleb128 0x1
 8272 01be 13       		.uleb128 0x13
 8273 01bf 00       		.byte	0
 8274 01c0 00       		.byte	0
 8275 01c1 23       		.uleb128 0x23
 8276 01c2 2E       		.uleb128 0x2e
 8277 01c3 01       		.byte	0x1
 8278 01c4 3F       		.uleb128 0x3f
 8279 01c5 19       		.uleb128 0x19
 8280 01c6 03       		.uleb128 0x3
 8281 01c7 0E       		.uleb128 0xe
 8282 01c8 3A       		.uleb128 0x3a
 8283 01c9 0B       		.uleb128 0xb
 8284 01ca 3B       		.uleb128 0x3b
 8285 01cb 05       		.uleb128 0x5
 8286 01cc 27       		.uleb128 0x27
 8287 01cd 19       		.uleb128 0x19
 8288 01ce 49       		.uleb128 0x49
 8289 01cf 13       		.uleb128 0x13
 8290 01d0 11       		.uleb128 0x11
 8291 01d1 01       		.uleb128 0x1
 8292 01d2 12       		.uleb128 0x12
 8293 01d3 06       		.uleb128 0x6
 8294 01d4 40       		.uleb128 0x40
 8295 01d5 18       		.uleb128 0x18
 8296 01d6 9742     		.uleb128 0x2117
 8297 01d8 19       		.uleb128 0x19
 8298 01d9 01       		.uleb128 0x1
 8299 01da 13       		.uleb128 0x13
 8300 01db 00       		.byte	0
 8301 01dc 00       		.byte	0
 8302 01dd 24       		.uleb128 0x24
 8303 01de 0B       		.uleb128 0xb
 8304 01df 01       		.byte	0x1
 8305 01e0 11       		.uleb128 0x11
 8306 01e1 01       		.uleb128 0x1
 8307 01e2 12       		.uleb128 0x12
 8308 01e3 06       		.uleb128 0x6
 8309 01e4 01       		.uleb128 0x1
 8310 01e5 13       		.uleb128 0x13
 8311 01e6 00       		.byte	0
 8312 01e7 00       		.byte	0
 8313 01e8 25       		.uleb128 0x25
 8314 01e9 2E       		.uleb128 0x2e
 8315 01ea 01       		.byte	0x1
 8316 01eb 3F       		.uleb128 0x3f
 8317 01ec 19       		.uleb128 0x19
 8318 01ed 03       		.uleb128 0x3
 8319 01ee 0E       		.uleb128 0xe
 8320 01ef 3A       		.uleb128 0x3a
 8321 01f0 0B       		.uleb128 0xb
 8322 01f1 3B       		.uleb128 0x3b
 8323 01f2 05       		.uleb128 0x5
 8324 01f3 27       		.uleb128 0x27
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 246


 8325 01f4 19       		.uleb128 0x19
 8326 01f5 11       		.uleb128 0x11
 8327 01f6 01       		.uleb128 0x1
 8328 01f7 12       		.uleb128 0x12
 8329 01f8 06       		.uleb128 0x6
 8330 01f9 40       		.uleb128 0x40
 8331 01fa 18       		.uleb128 0x18
 8332 01fb 9742     		.uleb128 0x2117
 8333 01fd 19       		.uleb128 0x19
 8334 01fe 01       		.uleb128 0x1
 8335 01ff 13       		.uleb128 0x13
 8336 0200 00       		.byte	0
 8337 0201 00       		.byte	0
 8338 0202 26       		.uleb128 0x26
 8339 0203 34       		.uleb128 0x34
 8340 0204 00       		.byte	0
 8341 0205 03       		.uleb128 0x3
 8342 0206 0E       		.uleb128 0xe
 8343 0207 3A       		.uleb128 0x3a
 8344 0208 0B       		.uleb128 0xb
 8345 0209 3B       		.uleb128 0x3b
 8346 020a 05       		.uleb128 0x5
 8347 020b 49       		.uleb128 0x49
 8348 020c 13       		.uleb128 0x13
 8349 020d 00       		.byte	0
 8350 020e 00       		.byte	0
 8351 020f 27       		.uleb128 0x27
 8352 0210 1D       		.uleb128 0x1d
 8353 0211 01       		.byte	0x1
 8354 0212 31       		.uleb128 0x31
 8355 0213 13       		.uleb128 0x13
 8356 0214 11       		.uleb128 0x11
 8357 0215 01       		.uleb128 0x1
 8358 0216 12       		.uleb128 0x12
 8359 0217 06       		.uleb128 0x6
 8360 0218 58       		.uleb128 0x58
 8361 0219 0B       		.uleb128 0xb
 8362 021a 59       		.uleb128 0x59
 8363 021b 05       		.uleb128 0x5
 8364 021c 01       		.uleb128 0x1
 8365 021d 13       		.uleb128 0x13
 8366 021e 00       		.byte	0
 8367 021f 00       		.byte	0
 8368 0220 28       		.uleb128 0x28
 8369 0221 0B       		.uleb128 0xb
 8370 0222 01       		.byte	0x1
 8371 0223 11       		.uleb128 0x11
 8372 0224 01       		.uleb128 0x1
 8373 0225 12       		.uleb128 0x12
 8374 0226 06       		.uleb128 0x6
 8375 0227 00       		.byte	0
 8376 0228 00       		.byte	0
 8377 0229 29       		.uleb128 0x29
 8378 022a 34       		.uleb128 0x34
 8379 022b 00       		.byte	0
 8380 022c 31       		.uleb128 0x31
 8381 022d 13       		.uleb128 0x13
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 247


 8382 022e 00       		.byte	0
 8383 022f 00       		.byte	0
 8384 0230 2A       		.uleb128 0x2a
 8385 0231 05       		.uleb128 0x5
 8386 0232 00       		.byte	0
 8387 0233 31       		.uleb128 0x31
 8388 0234 13       		.uleb128 0x13
 8389 0235 02       		.uleb128 0x2
 8390 0236 17       		.uleb128 0x17
 8391 0237 00       		.byte	0
 8392 0238 00       		.byte	0
 8393 0239 2B       		.uleb128 0x2b
 8394 023a 2E       		.uleb128 0x2e
 8395 023b 00       		.byte	0
 8396 023c 3F       		.uleb128 0x3f
 8397 023d 19       		.uleb128 0x19
 8398 023e 03       		.uleb128 0x3
 8399 023f 0E       		.uleb128 0xe
 8400 0240 3A       		.uleb128 0x3a
 8401 0241 0B       		.uleb128 0xb
 8402 0242 3B       		.uleb128 0x3b
 8403 0243 05       		.uleb128 0x5
 8404 0244 27       		.uleb128 0x27
 8405 0245 19       		.uleb128 0x19
 8406 0246 11       		.uleb128 0x11
 8407 0247 01       		.uleb128 0x1
 8408 0248 12       		.uleb128 0x12
 8409 0249 06       		.uleb128 0x6
 8410 024a 40       		.uleb128 0x40
 8411 024b 18       		.uleb128 0x18
 8412 024c 9742     		.uleb128 0x2117
 8413 024e 19       		.uleb128 0x19
 8414 024f 00       		.byte	0
 8415 0250 00       		.byte	0
 8416 0251 2C       		.uleb128 0x2c
 8417 0252 34       		.uleb128 0x34
 8418 0253 00       		.byte	0
 8419 0254 03       		.uleb128 0x3
 8420 0255 0E       		.uleb128 0xe
 8421 0256 3A       		.uleb128 0x3a
 8422 0257 0B       		.uleb128 0xb
 8423 0258 3B       		.uleb128 0x3b
 8424 0259 05       		.uleb128 0x5
 8425 025a 49       		.uleb128 0x49
 8426 025b 13       		.uleb128 0x13
 8427 025c 1C       		.uleb128 0x1c
 8428 025d 0B       		.uleb128 0xb
 8429 025e 00       		.byte	0
 8430 025f 00       		.byte	0
 8431 0260 2D       		.uleb128 0x2d
 8432 0261 2E       		.uleb128 0x2e
 8433 0262 00       		.byte	0
 8434 0263 3F       		.uleb128 0x3f
 8435 0264 19       		.uleb128 0x19
 8436 0265 03       		.uleb128 0x3
 8437 0266 0E       		.uleb128 0xe
 8438 0267 3A       		.uleb128 0x3a
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 248


 8439 0268 0B       		.uleb128 0xb
 8440 0269 3B       		.uleb128 0x3b
 8441 026a 05       		.uleb128 0x5
 8442 026b 27       		.uleb128 0x27
 8443 026c 19       		.uleb128 0x19
 8444 026d 49       		.uleb128 0x49
 8445 026e 13       		.uleb128 0x13
 8446 026f 11       		.uleb128 0x11
 8447 0270 01       		.uleb128 0x1
 8448 0271 12       		.uleb128 0x12
 8449 0272 06       		.uleb128 0x6
 8450 0273 40       		.uleb128 0x40
 8451 0274 18       		.uleb128 0x18
 8452 0275 9742     		.uleb128 0x2117
 8453 0277 19       		.uleb128 0x19
 8454 0278 00       		.byte	0
 8455 0279 00       		.byte	0
 8456 027a 2E       		.uleb128 0x2e
 8457 027b 0B       		.uleb128 0xb
 8458 027c 01       		.byte	0x1
 8459 027d 55       		.uleb128 0x55
 8460 027e 17       		.uleb128 0x17
 8461 027f 00       		.byte	0
 8462 0280 00       		.byte	0
 8463 0281 2F       		.uleb128 0x2f
 8464 0282 0B       		.uleb128 0xb
 8465 0283 01       		.byte	0x1
 8466 0284 55       		.uleb128 0x55
 8467 0285 17       		.uleb128 0x17
 8468 0286 01       		.uleb128 0x1
 8469 0287 13       		.uleb128 0x13
 8470 0288 00       		.byte	0
 8471 0289 00       		.byte	0
 8472 028a 30       		.uleb128 0x30
 8473 028b 2E       		.uleb128 0x2e
 8474 028c 01       		.byte	0x1
 8475 028d 03       		.uleb128 0x3
 8476 028e 0E       		.uleb128 0xe
 8477 028f 3A       		.uleb128 0x3a
 8478 0290 0B       		.uleb128 0xb
 8479 0291 3B       		.uleb128 0x3b
 8480 0292 05       		.uleb128 0x5
 8481 0293 27       		.uleb128 0x27
 8482 0294 19       		.uleb128 0x19
 8483 0295 8701     		.uleb128 0x87
 8484 0297 19       		.uleb128 0x19
 8485 0298 11       		.uleb128 0x11
 8486 0299 01       		.uleb128 0x1
 8487 029a 12       		.uleb128 0x12
 8488 029b 06       		.uleb128 0x6
 8489 029c 40       		.uleb128 0x40
 8490 029d 18       		.uleb128 0x18
 8491 029e 9742     		.uleb128 0x2117
 8492 02a0 19       		.uleb128 0x19
 8493 02a1 01       		.uleb128 0x1
 8494 02a2 13       		.uleb128 0x13
 8495 02a3 00       		.byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 249


 8496 02a4 00       		.byte	0
 8497 02a5 31       		.uleb128 0x31
 8498 02a6 34       		.uleb128 0x34
 8499 02a7 00       		.byte	0
 8500 02a8 03       		.uleb128 0x3
 8501 02a9 0E       		.uleb128 0xe
 8502 02aa 3A       		.uleb128 0x3a
 8503 02ab 0B       		.uleb128 0xb
 8504 02ac 3B       		.uleb128 0x3b
 8505 02ad 05       		.uleb128 0x5
 8506 02ae 49       		.uleb128 0x49
 8507 02af 13       		.uleb128 0x13
 8508 02b0 1C       		.uleb128 0x1c
 8509 02b1 0D       		.uleb128 0xd
 8510 02b2 00       		.byte	0
 8511 02b3 00       		.byte	0
 8512 02b4 32       		.uleb128 0x32
 8513 02b5 34       		.uleb128 0x34
 8514 02b6 00       		.byte	0
 8515 02b7 03       		.uleb128 0x3
 8516 02b8 0E       		.uleb128 0xe
 8517 02b9 3A       		.uleb128 0x3a
 8518 02ba 0B       		.uleb128 0xb
 8519 02bb 3B       		.uleb128 0x3b
 8520 02bc 05       		.uleb128 0x5
 8521 02bd 49       		.uleb128 0x49
 8522 02be 13       		.uleb128 0x13
 8523 02bf 3F       		.uleb128 0x3f
 8524 02c0 19       		.uleb128 0x19
 8525 02c1 3C       		.uleb128 0x3c
 8526 02c2 19       		.uleb128 0x19
 8527 02c3 00       		.byte	0
 8528 02c4 00       		.byte	0
 8529 02c5 33       		.uleb128 0x33
 8530 02c6 34       		.uleb128 0x34
 8531 02c7 00       		.byte	0
 8532 02c8 03       		.uleb128 0x3
 8533 02c9 0E       		.uleb128 0xe
 8534 02ca 3A       		.uleb128 0x3a
 8535 02cb 0B       		.uleb128 0xb
 8536 02cc 3B       		.uleb128 0x3b
 8537 02cd 05       		.uleb128 0x5
 8538 02ce 49       		.uleb128 0x49
 8539 02cf 13       		.uleb128 0x13
 8540 02d0 3F       		.uleb128 0x3f
 8541 02d1 19       		.uleb128 0x19
 8542 02d2 02       		.uleb128 0x2
 8543 02d3 18       		.uleb128 0x18
 8544 02d4 00       		.byte	0
 8545 02d5 00       		.byte	0
 8546 02d6 34       		.uleb128 0x34
 8547 02d7 2E       		.uleb128 0x2e
 8548 02d8 00       		.byte	0
 8549 02d9 3F       		.uleb128 0x3f
 8550 02da 19       		.uleb128 0x19
 8551 02db 3C       		.uleb128 0x3c
 8552 02dc 19       		.uleb128 0x19
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 250


 8553 02dd 6E       		.uleb128 0x6e
 8554 02de 0E       		.uleb128 0xe
 8555 02df 03       		.uleb128 0x3
 8556 02e0 0E       		.uleb128 0xe
 8557 02e1 3A       		.uleb128 0x3a
 8558 02e2 0B       		.uleb128 0xb
 8559 02e3 3B       		.uleb128 0x3b
 8560 02e4 0B       		.uleb128 0xb
 8561 02e5 00       		.byte	0
 8562 02e6 00       		.byte	0
 8563 02e7 35       		.uleb128 0x35
 8564 02e8 2E       		.uleb128 0x2e
 8565 02e9 00       		.byte	0
 8566 02ea 3F       		.uleb128 0x3f
 8567 02eb 19       		.uleb128 0x19
 8568 02ec 3C       		.uleb128 0x3c
 8569 02ed 19       		.uleb128 0x19
 8570 02ee 6E       		.uleb128 0x6e
 8571 02ef 0E       		.uleb128 0xe
 8572 02f0 03       		.uleb128 0x3
 8573 02f1 0E       		.uleb128 0xe
 8574 02f2 3A       		.uleb128 0x3a
 8575 02f3 0B       		.uleb128 0xb
 8576 02f4 3B       		.uleb128 0x3b
 8577 02f5 05       		.uleb128 0x5
 8578 02f6 00       		.byte	0
 8579 02f7 00       		.byte	0
 8580 02f8 00       		.byte	0
 8581              		.section	.debug_loc,"",%progbits
 8582              	.Ldebug_loc0:
 8583              	.LLST0:
 8584 0000 00000000 		.4byte	.LVL0
 8585 0004 28000000 		.4byte	.LVL1
 8586 0008 0100     		.2byte	0x1
 8587 000a 50       		.byte	0x50
 8588 000b 28000000 		.4byte	.LVL1
 8589 000f 2A000000 		.4byte	.LVL2
 8590 0013 0400     		.2byte	0x4
 8591 0015 F3       		.byte	0xf3
 8592 0016 01       		.uleb128 0x1
 8593 0017 50       		.byte	0x50
 8594 0018 9F       		.byte	0x9f
 8595 0019 2A000000 		.4byte	.LVL2
 8596 001d 2C000000 		.4byte	.LVL3
 8597 0021 0100     		.2byte	0x1
 8598 0023 50       		.byte	0x50
 8599 0024 2C000000 		.4byte	.LVL3
 8600 0028 2E000000 		.4byte	.LVL4
 8601 002c 0100     		.2byte	0x1
 8602 002e 52       		.byte	0x52
 8603 002f 2E000000 		.4byte	.LVL4
 8604 0033 30000000 		.4byte	.LVL5
 8605 0037 0100     		.2byte	0x1
 8606 0039 50       		.byte	0x50
 8607 003a 30000000 		.4byte	.LVL5
 8608 003e 32000000 		.4byte	.LVL6
 8609 0042 0400     		.2byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 251


 8610 0044 F3       		.byte	0xf3
 8611 0045 01       		.uleb128 0x1
 8612 0046 50       		.byte	0x50
 8613 0047 9F       		.byte	0x9f
 8614 0048 32000000 		.4byte	.LVL6
 8615 004c 34000000 		.4byte	.LVL7
 8616 0050 0100     		.2byte	0x1
 8617 0052 50       		.byte	0x50
 8618 0053 34000000 		.4byte	.LVL7
 8619 0057 40000000 		.4byte	.LFE139
 8620 005b 0400     		.2byte	0x4
 8621 005d F3       		.byte	0xf3
 8622 005e 01       		.uleb128 0x1
 8623 005f 50       		.byte	0x50
 8624 0060 9F       		.byte	0x9f
 8625 0061 00000000 		.4byte	0
 8626 0065 00000000 		.4byte	0
 8627              	.LLST1:
 8628 0069 00000000 		.4byte	.LVL0
 8629 006d 34000000 		.4byte	.LVL7
 8630 0071 0200     		.2byte	0x2
 8631 0073 30       		.byte	0x30
 8632 0074 9F       		.byte	0x9f
 8633 0075 34000000 		.4byte	.LVL7
 8634 0079 40000000 		.4byte	.LFE139
 8635 007d 0100     		.2byte	0x1
 8636 007f 50       		.byte	0x50
 8637 0080 00000000 		.4byte	0
 8638 0084 00000000 		.4byte	0
 8639              	.LLST2:
 8640 0088 00000000 		.4byte	.LVL0
 8641 008c 28000000 		.4byte	.LVL1
 8642 0090 0100     		.2byte	0x1
 8643 0092 50       		.byte	0x50
 8644 0093 28000000 		.4byte	.LVL1
 8645 0097 2A000000 		.4byte	.LVL2
 8646 009b 0400     		.2byte	0x4
 8647 009d F3       		.byte	0xf3
 8648 009e 01       		.uleb128 0x1
 8649 009f 50       		.byte	0x50
 8650 00a0 9F       		.byte	0x9f
 8651 00a1 2A000000 		.4byte	.LVL2
 8652 00a5 2C000000 		.4byte	.LVL3
 8653 00a9 0100     		.2byte	0x1
 8654 00ab 50       		.byte	0x50
 8655 00ac 2C000000 		.4byte	.LVL3
 8656 00b0 2E000000 		.4byte	.LVL4
 8657 00b4 0100     		.2byte	0x1
 8658 00b6 52       		.byte	0x52
 8659 00b7 2E000000 		.4byte	.LVL4
 8660 00bb 30000000 		.4byte	.LVL5
 8661 00bf 0100     		.2byte	0x1
 8662 00c1 50       		.byte	0x50
 8663 00c2 30000000 		.4byte	.LVL5
 8664 00c6 32000000 		.4byte	.LVL6
 8665 00ca 0400     		.2byte	0x4
 8666 00cc F3       		.byte	0xf3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 252


 8667 00cd 01       		.uleb128 0x1
 8668 00ce 50       		.byte	0x50
 8669 00cf 9F       		.byte	0x9f
 8670 00d0 32000000 		.4byte	.LVL6
 8671 00d4 34000000 		.4byte	.LVL7
 8672 00d8 0100     		.2byte	0x1
 8673 00da 50       		.byte	0x50
 8674 00db 34000000 		.4byte	.LVL7
 8675 00df 40000000 		.4byte	.LFE139
 8676 00e3 0400     		.2byte	0x4
 8677 00e5 F3       		.byte	0xf3
 8678 00e6 01       		.uleb128 0x1
 8679 00e7 50       		.byte	0x50
 8680 00e8 9F       		.byte	0x9f
 8681 00e9 00000000 		.4byte	0
 8682 00ed 00000000 		.4byte	0
 8683              	.LLST3:
 8684 00f1 22000000 		.4byte	.LVL8
 8685 00f5 24000000 		.4byte	.LVL9
 8686 00f9 0100     		.2byte	0x1
 8687 00fb 52       		.byte	0x52
 8688 00fc 00000000 		.4byte	0
 8689 0100 00000000 		.4byte	0
 8690              	.LLST4:
 8691 0104 00000000 		.4byte	.LVL10
 8692 0108 06000000 		.4byte	.LVL11
 8693 010c 0100     		.2byte	0x1
 8694 010e 50       		.byte	0x50
 8695 010f 06000000 		.4byte	.LVL11
 8696 0113 12000000 		.4byte	.LFE165
 8697 0117 0100     		.2byte	0x1
 8698 0119 54       		.byte	0x54
 8699 011a 00000000 		.4byte	0
 8700 011e 00000000 		.4byte	0
 8701              	.LLST5:
 8702 0122 00000000 		.4byte	.LVL14
 8703 0126 18000000 		.4byte	.LVL17
 8704 012a 0100     		.2byte	0x1
 8705 012c 50       		.byte	0x50
 8706 012d 18000000 		.4byte	.LVL17
 8707 0131 9E000000 		.4byte	.LFE130
 8708 0135 0100     		.2byte	0x1
 8709 0137 5A       		.byte	0x5a
 8710 0138 00000000 		.4byte	0
 8711 013c 00000000 		.4byte	0
 8712              	.LLST6:
 8713 0140 00000000 		.4byte	.LVL14
 8714 0144 16000000 		.4byte	.LVL16
 8715 0148 0100     		.2byte	0x1
 8716 014a 51       		.byte	0x51
 8717 014b 16000000 		.4byte	.LVL16
 8718 014f 9E000000 		.4byte	.LFE130
 8719 0153 0100     		.2byte	0x1
 8720 0155 59       		.byte	0x59
 8721 0156 00000000 		.4byte	0
 8722 015a 00000000 		.4byte	0
 8723              	.LLST7:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 253


 8724 015e 00000000 		.4byte	.LVL14
 8725 0162 14000000 		.4byte	.LVL15
 8726 0166 0100     		.2byte	0x1
 8727 0168 52       		.byte	0x52
 8728 0169 14000000 		.4byte	.LVL15
 8729 016d 28000000 		.4byte	.LVL19
 8730 0171 0100     		.2byte	0x1
 8731 0173 55       		.byte	0x55
 8732 0174 28000000 		.4byte	.LVL19
 8733 0178 30000000 		.4byte	.LVL21
 8734 017c 0700     		.2byte	0x7
 8735 017e 72       		.byte	0x72
 8736 017f 81808080 		.sleb128 -1073741823
 8736      7C
 8737 0184 9F       		.byte	0x9f
 8738 0185 30000000 		.4byte	.LVL21
 8739 0189 9E000000 		.4byte	.LFE130
 8740 018d 0400     		.2byte	0x4
 8741 018f F3       		.byte	0xf3
 8742 0190 01       		.uleb128 0x1
 8743 0191 52       		.byte	0x52
 8744 0192 9F       		.byte	0x9f
 8745 0193 00000000 		.4byte	0
 8746 0197 00000000 		.4byte	0
 8747              	.LLST8:
 8748 019b 00000000 		.4byte	.LVL14
 8749 019f 1B000000 		.4byte	.LVL18-1
 8750 01a3 0100     		.2byte	0x1
 8751 01a5 53       		.byte	0x53
 8752 01a6 1B000000 		.4byte	.LVL18-1
 8753 01aa 9E000000 		.4byte	.LFE130
 8754 01ae 0100     		.2byte	0x1
 8755 01b0 58       		.byte	0x58
 8756 01b1 00000000 		.4byte	0
 8757 01b5 00000000 		.4byte	0
 8758              	.LLST9:
 8759 01b9 00000000 		.4byte	.LVL14
 8760 01bd 52000000 		.4byte	.LVL24
 8761 01c1 0200     		.2byte	0x2
 8762 01c3 91       		.byte	0x91
 8763 01c4 00       		.sleb128 0
 8764 01c5 52000000 		.4byte	.LVL24
 8765 01c9 9E000000 		.4byte	.LFE130
 8766 01cd 0100     		.2byte	0x1
 8767 01cf 57       		.byte	0x57
 8768 01d0 00000000 		.4byte	0
 8769 01d4 00000000 		.4byte	0
 8770              	.LLST10:
 8771 01d8 30000000 		.4byte	.LVL21
 8772 01dc 48000000 		.4byte	.LVL23
 8773 01e0 0100     		.2byte	0x1
 8774 01e2 53       		.byte	0x53
 8775 01e3 6C000000 		.4byte	.LVL27
 8776 01e7 70000000 		.4byte	.LVL28
 8777 01eb 0200     		.2byte	0x2
 8778 01ed 30       		.byte	0x30
 8779 01ee 9F       		.byte	0x9f
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 254


 8780 01ef 70000000 		.4byte	.LVL28
 8781 01f3 84000000 		.4byte	.LVL30
 8782 01f7 0100     		.2byte	0x1
 8783 01f9 53       		.byte	0x53
 8784 01fa 00000000 		.4byte	0
 8785 01fe 00000000 		.4byte	0
 8786              	.LLST11:
 8787 0202 02000000 		.4byte	.LVL32
 8788 0206 06000000 		.4byte	.LVL33
 8789 020a 0200     		.2byte	0x2
 8790 020c 30       		.byte	0x30
 8791 020d 9F       		.byte	0x9f
 8792 020e 06000000 		.4byte	.LVL33
 8793 0212 1C000000 		.4byte	.LVL36
 8794 0216 0100     		.2byte	0x1
 8795 0218 54       		.byte	0x54
 8796 0219 00000000 		.4byte	0
 8797 021d 00000000 		.4byte	0
 8798              	.LLST12:
 8799 0221 00000000 		.4byte	.LVL42
 8800 0225 07000000 		.4byte	.LVL43-1
 8801 0229 0100     		.2byte	0x1
 8802 022b 50       		.byte	0x50
 8803 022c 07000000 		.4byte	.LVL43-1
 8804 0230 A2000000 		.4byte	.LVL47
 8805 0234 0100     		.2byte	0x1
 8806 0236 54       		.byte	0x54
 8807 0237 A2000000 		.4byte	.LVL47
 8808 023b AC000000 		.4byte	.LFE131
 8809 023f 0400     		.2byte	0x4
 8810 0241 F3       		.byte	0xf3
 8811 0242 01       		.uleb128 0x1
 8812 0243 50       		.byte	0x50
 8813 0244 9F       		.byte	0x9f
 8814 0245 00000000 		.4byte	0
 8815 0249 00000000 		.4byte	0
 8816              	.LLST13:
 8817 024d 00000000 		.4byte	.LVL48
 8818 0251 10000000 		.4byte	.LVL50
 8819 0255 0100     		.2byte	0x1
 8820 0257 50       		.byte	0x50
 8821 0258 10000000 		.4byte	.LVL50
 8822 025c 2E000000 		.4byte	.LVL54
 8823 0260 0100     		.2byte	0x1
 8824 0262 54       		.byte	0x54
 8825 0263 2E000000 		.4byte	.LVL54
 8826 0267 68000000 		.4byte	.LFE176
 8827 026b 0400     		.2byte	0x4
 8828 026d F3       		.byte	0xf3
 8829 026e 01       		.uleb128 0x1
 8830 026f 50       		.byte	0x50
 8831 0270 9F       		.byte	0x9f
 8832 0271 00000000 		.4byte	0
 8833 0275 00000000 		.4byte	0
 8834              	.LLST14:
 8835 0279 00000000 		.4byte	.LVL48
 8836 027d 15000000 		.4byte	.LVL51-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 255


 8837 0281 0100     		.2byte	0x1
 8838 0283 51       		.byte	0x51
 8839 0284 15000000 		.4byte	.LVL51-1
 8840 0288 64000000 		.4byte	.LVL59
 8841 028c 0100     		.2byte	0x1
 8842 028e 56       		.byte	0x56
 8843 028f 64000000 		.4byte	.LVL59
 8844 0293 68000000 		.4byte	.LFE176
 8845 0297 0400     		.2byte	0x4
 8846 0299 F3       		.byte	0xf3
 8847 029a 01       		.uleb128 0x1
 8848 029b 51       		.byte	0x51
 8849 029c 9F       		.byte	0x9f
 8850 029d 00000000 		.4byte	0
 8851 02a1 00000000 		.4byte	0
 8852              	.LLST15:
 8853 02a5 2E000000 		.4byte	.LVL54
 8854 02a9 64000000 		.4byte	.LVL59
 8855 02ad 0100     		.2byte	0x1
 8856 02af 54       		.byte	0x54
 8857 02b0 00000000 		.4byte	0
 8858 02b4 00000000 		.4byte	0
 8859              	.LLST16:
 8860 02b8 0C000000 		.4byte	.LVL49
 8861 02bc 4E000000 		.4byte	.LVL57
 8862 02c0 0100     		.2byte	0x1
 8863 02c2 55       		.byte	0x55
 8864 02c3 00000000 		.4byte	0
 8865 02c7 00000000 		.4byte	0
 8866              	.LLST17:
 8867 02cb 00000000 		.4byte	.LVL60
 8868 02cf 10000000 		.4byte	.LVL61
 8869 02d3 0100     		.2byte	0x1
 8870 02d5 50       		.byte	0x50
 8871 02d6 10000000 		.4byte	.LVL61
 8872 02da 62000000 		.4byte	.LFE129
 8873 02de 0100     		.2byte	0x1
 8874 02e0 56       		.byte	0x56
 8875 02e1 00000000 		.4byte	0
 8876 02e5 00000000 		.4byte	0
 8877              	.LLST18:
 8878 02e9 00000000 		.4byte	.LVL60
 8879 02ed 13000000 		.4byte	.LVL62-1
 8880 02f1 0100     		.2byte	0x1
 8881 02f3 51       		.byte	0x51
 8882 02f4 13000000 		.4byte	.LVL62-1
 8883 02f8 62000000 		.4byte	.LFE129
 8884 02fc 0100     		.2byte	0x1
 8885 02fe 57       		.byte	0x57
 8886 02ff 00000000 		.4byte	0
 8887 0303 00000000 		.4byte	0
 8888              	.LLST19:
 8889 0307 00000000 		.4byte	.LVL60
 8890 030b 13000000 		.4byte	.LVL62-1
 8891 030f 0100     		.2byte	0x1
 8892 0311 52       		.byte	0x52
 8893 0312 13000000 		.4byte	.LVL62-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 256


 8894 0316 62000000 		.4byte	.LFE129
 8895 031a 0400     		.2byte	0x4
 8896 031c F3       		.byte	0xf3
 8897 031d 01       		.uleb128 0x1
 8898 031e 52       		.byte	0x52
 8899 031f 9F       		.byte	0x9f
 8900 0320 00000000 		.4byte	0
 8901 0324 00000000 		.4byte	0
 8902              	.LLST20:
 8903 0328 00000000 		.4byte	.LVL60
 8904 032c 13000000 		.4byte	.LVL62-1
 8905 0330 0100     		.2byte	0x1
 8906 0332 53       		.byte	0x53
 8907 0333 13000000 		.4byte	.LVL62-1
 8908 0337 62000000 		.4byte	.LFE129
 8909 033b 0100     		.2byte	0x1
 8910 033d 58       		.byte	0x58
 8911 033e 00000000 		.4byte	0
 8912 0342 00000000 		.4byte	0
 8913              	.LLST21:
 8914 0346 1E000000 		.4byte	.LVL64
 8915 034a 2A000000 		.4byte	.LVL65
 8916 034e 0100     		.2byte	0x1
 8917 0350 50       		.byte	0x50
 8918 0351 2A000000 		.4byte	.LVL65
 8919 0355 30000000 		.4byte	.LVL67
 8920 0359 0100     		.2byte	0x1
 8921 035b 54       		.byte	0x54
 8922 035c 32000000 		.4byte	.LVL68
 8923 0360 62000000 		.4byte	.LFE129
 8924 0364 0100     		.2byte	0x1
 8925 0366 54       		.byte	0x54
 8926 0367 00000000 		.4byte	0
 8927 036b 00000000 		.4byte	0
 8928              	.LLST22:
 8929 036f 54000000 		.4byte	.LVL70
 8930 0373 58000000 		.4byte	.LVL71
 8931 0377 0200     		.2byte	0x2
 8932 0379 31       		.byte	0x31
 8933 037a 9F       		.byte	0x9f
 8934 037b 5C000000 		.4byte	.LVL72
 8935 037f 62000000 		.4byte	.LFE129
 8936 0383 0100     		.2byte	0x1
 8937 0385 50       		.byte	0x50
 8938 0386 00000000 		.4byte	0
 8939 038a 00000000 		.4byte	0
 8940              	.LLST23:
 8941 038e 14000000 		.4byte	.LVL62
 8942 0392 1A000000 		.4byte	.LVL63
 8943 0396 0100     		.2byte	0x1
 8944 0398 50       		.byte	0x50
 8945 0399 1A000000 		.4byte	.LVL63
 8946 039d 30000000 		.4byte	.LVL67
 8947 03a1 0100     		.2byte	0x1
 8948 03a3 59       		.byte	0x59
 8949 03a4 30000000 		.4byte	.LVL67
 8950 03a8 32000000 		.4byte	.LVL68
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 257


 8951 03ac 0100     		.2byte	0x1
 8952 03ae 50       		.byte	0x50
 8953 03af 00000000 		.4byte	0
 8954 03b3 00000000 		.4byte	0
 8955              	.LLST24:
 8956 03b7 00000000 		.4byte	.LVL73
 8957 03bb 07000000 		.4byte	.LVL74-1
 8958 03bf 0100     		.2byte	0x1
 8959 03c1 50       		.byte	0x50
 8960 03c2 07000000 		.4byte	.LVL74-1
 8961 03c6 10000000 		.4byte	.LVL75
 8962 03ca 0100     		.2byte	0x1
 8963 03cc 54       		.byte	0x54
 8964 03cd 00000000 		.4byte	0
 8965 03d1 00000000 		.4byte	0
 8966              	.LLST25:
 8967 03d5 10000000 		.4byte	.LVL75
 8968 03d9 9A000000 		.4byte	.LVL82
 8969 03dd 0100     		.2byte	0x1
 8970 03df 54       		.byte	0x54
 8971 03e0 00000000 		.4byte	0
 8972 03e4 00000000 		.4byte	0
 8973              	.LLST26:
 8974 03e8 00000000 		.4byte	.LVL83
 8975 03ec 07000000 		.4byte	.LVL84-1
 8976 03f0 0100     		.2byte	0x1
 8977 03f2 50       		.byte	0x50
 8978 03f3 07000000 		.4byte	.LVL84-1
 8979 03f7 10000000 		.4byte	.LVL85
 8980 03fb 0100     		.2byte	0x1
 8981 03fd 54       		.byte	0x54
 8982 03fe 00000000 		.4byte	0
 8983 0402 00000000 		.4byte	0
 8984              	.LLST27:
 8985 0406 10000000 		.4byte	.LVL85
 8986 040a 12000000 		.4byte	.LVL86
 8987 040e 0100     		.2byte	0x1
 8988 0410 54       		.byte	0x54
 8989 0411 00000000 		.4byte	0
 8990 0415 00000000 		.4byte	0
 8991              	.LLST28:
 8992 0419 12000000 		.4byte	.LVL86
 8993 041d 1A000000 		.4byte	.LVL88
 8994 0421 0100     		.2byte	0x1
 8995 0423 54       		.byte	0x54
 8996 0424 1A000000 		.4byte	.LVL88
 8997 0428 20000000 		.4byte	.LFE135
 8998 042c 0100     		.2byte	0x1
 8999 042e 50       		.byte	0x50
 9000 042f 00000000 		.4byte	0
 9001 0433 00000000 		.4byte	0
 9002              	.LLST29:
 9003 0437 00000000 		.4byte	.LVL89
 9004 043b 07000000 		.4byte	.LVL90-1
 9005 043f 0100     		.2byte	0x1
 9006 0441 50       		.byte	0x50
 9007 0442 07000000 		.4byte	.LVL90-1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 258


 9008 0446 24000000 		.4byte	.LVL91
 9009 044a 0100     		.2byte	0x1
 9010 044c 54       		.byte	0x54
 9011 044d 00000000 		.4byte	0
 9012 0451 00000000 		.4byte	0
 9013              	.LLST30:
 9014 0455 24000000 		.4byte	.LVL91
 9015 0459 2C000000 		.4byte	.LVL94
 9016 045d 0100     		.2byte	0x1
 9017 045f 54       		.byte	0x54
 9018 0460 00000000 		.4byte	0
 9019 0464 00000000 		.4byte	0
 9020              	.LLST31:
 9021 0468 26000000 		.4byte	.LVL92
 9022 046c 2A000000 		.4byte	.LVL93
 9023 0470 0100     		.2byte	0x1
 9024 0472 53       		.byte	0x53
 9025 0473 00000000 		.4byte	0
 9026 0477 00000000 		.4byte	0
 9027              	.LLST32:
 9028 047b 00000000 		.4byte	.LVL95
 9029 047f 17000000 		.4byte	.LVL97-1
 9030 0483 0100     		.2byte	0x1
 9031 0485 50       		.byte	0x50
 9032 0486 17000000 		.4byte	.LVL97-1
 9033 048a 20000000 		.4byte	.LVL98
 9034 048e 0100     		.2byte	0x1
 9035 0490 54       		.byte	0x54
 9036 0491 00000000 		.4byte	0
 9037 0495 00000000 		.4byte	0
 9038              	.LLST33:
 9039 0499 00000000 		.4byte	.LVL95
 9040 049d 14000000 		.4byte	.LVL96
 9041 04a1 0100     		.2byte	0x1
 9042 04a3 51       		.byte	0x51
 9043 04a4 14000000 		.4byte	.LVL96
 9044 04a8 66000000 		.4byte	.LVL101
 9045 04ac 0100     		.2byte	0x1
 9046 04ae 55       		.byte	0x55
 9047 04af 66000000 		.4byte	.LVL101
 9048 04b3 87000000 		.4byte	.LVL103-1
 9049 04b7 0200     		.2byte	0x2
 9050 04b9 74       		.byte	0x74
 9051 04ba 2C       		.sleb128 44
 9052 04bb 00000000 		.4byte	0
 9053 04bf 00000000 		.4byte	0
 9054              	.LLST34:
 9055 04c3 20000000 		.4byte	.LVL98
 9056 04c7 C2000000 		.4byte	.LVL107
 9057 04cb 0100     		.2byte	0x1
 9058 04cd 54       		.byte	0x54
 9059 04ce 00000000 		.4byte	0
 9060 04d2 00000000 		.4byte	0
 9061              	.LLST35:
 9062 04d6 22000000 		.4byte	.LVL99
 9063 04da 6E000000 		.4byte	.LVL102
 9064 04de 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 259


 9065 04e0 53       		.byte	0x53
 9066 04e1 00000000 		.4byte	0
 9067 04e5 00000000 		.4byte	0
 9068              	.LLST36:
 9069 04e9 5A000000 		.4byte	.LVL100
 9070 04ed 6E000000 		.4byte	.LVL102
 9071 04f1 0100     		.2byte	0x1
 9072 04f3 53       		.byte	0x53
 9073 04f4 00000000 		.4byte	0
 9074 04f8 00000000 		.4byte	0
 9075              	.LLST37:
 9076 04fc 00000000 		.4byte	.LVL95
 9077 0500 5A000000 		.4byte	.LVL100
 9078 0504 0200     		.2byte	0x2
 9079 0506 30       		.byte	0x30
 9080 0507 9F       		.byte	0x9f
 9081 0508 5A000000 		.4byte	.LVL100
 9082 050c BC000000 		.4byte	.LVL105
 9083 0510 0100     		.2byte	0x1
 9084 0512 56       		.byte	0x56
 9085 0513 00000000 		.4byte	0
 9086 0517 00000000 		.4byte	0
 9087              	.LLST38:
 9088 051b 00000000 		.4byte	.LVL108
 9089 051f 19000000 		.4byte	.LVL109-1
 9090 0523 0100     		.2byte	0x1
 9091 0525 50       		.byte	0x50
 9092 0526 19000000 		.4byte	.LVL109-1
 9093 052a 72000000 		.4byte	.LVL114
 9094 052e 0100     		.2byte	0x1
 9095 0530 54       		.byte	0x54
 9096 0531 72000000 		.4byte	.LVL114
 9097 0535 7C000000 		.4byte	.LFE140
 9098 0539 0400     		.2byte	0x4
 9099 053b F3       		.byte	0xf3
 9100 053c 01       		.uleb128 0x1
 9101 053d 50       		.byte	0x50
 9102 053e 9F       		.byte	0x9f
 9103 053f 00000000 		.4byte	0
 9104 0543 00000000 		.4byte	0
 9105              	.LLST39:
 9106 0547 00000000 		.4byte	.LVL108
 9107 054b 19000000 		.4byte	.LVL109-1
 9108 054f 0100     		.2byte	0x1
 9109 0551 50       		.byte	0x50
 9110 0552 19000000 		.4byte	.LVL109-1
 9111 0556 72000000 		.4byte	.LVL114
 9112 055a 0100     		.2byte	0x1
 9113 055c 54       		.byte	0x54
 9114 055d 72000000 		.4byte	.LVL114
 9115 0561 7C000000 		.4byte	.LFE140
 9116 0565 0400     		.2byte	0x4
 9117 0567 F3       		.byte	0xf3
 9118 0568 01       		.uleb128 0x1
 9119 0569 50       		.byte	0x50
 9120 056a 9F       		.byte	0x9f
 9121 056b 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 260


 9122 056f 00000000 		.4byte	0
 9123              	.LLST40:
 9124 0573 00000000 		.4byte	.LVL115
 9125 0577 0D000000 		.4byte	.LVL116-1
 9126 057b 0100     		.2byte	0x1
 9127 057d 50       		.byte	0x50
 9128 057e 0D000000 		.4byte	.LVL116-1
 9129 0582 8A000000 		.4byte	.LVL125
 9130 0586 0100     		.2byte	0x1
 9131 0588 54       		.byte	0x54
 9132 0589 8A000000 		.4byte	.LVL125
 9133 058d 98000000 		.4byte	.LFE141
 9134 0591 0400     		.2byte	0x4
 9135 0593 F3       		.byte	0xf3
 9136 0594 01       		.uleb128 0x1
 9137 0595 50       		.byte	0x50
 9138 0596 9F       		.byte	0x9f
 9139 0597 00000000 		.4byte	0
 9140 059b 00000000 		.4byte	0
 9141              	.LLST41:
 9142 059f 00000000 		.4byte	.LVL115
 9143 05a3 46000000 		.4byte	.LVL118
 9144 05a7 0200     		.2byte	0x2
 9145 05a9 30       		.byte	0x30
 9146 05aa 9F       		.byte	0x9f
 9147 05ab 46000000 		.4byte	.LVL118
 9148 05af 72000000 		.4byte	.LVL121
 9149 05b3 0100     		.2byte	0x1
 9150 05b5 55       		.byte	0x55
 9151 05b6 72000000 		.4byte	.LVL121
 9152 05ba 82000000 		.4byte	.LVL123
 9153 05be 0200     		.2byte	0x2
 9154 05c0 30       		.byte	0x30
 9155 05c1 9F       		.byte	0x9f
 9156 05c2 82000000 		.4byte	.LVL123
 9157 05c6 8A000000 		.4byte	.LVL125
 9158 05ca 0100     		.2byte	0x1
 9159 05cc 55       		.byte	0x55
 9160 05cd 8A000000 		.4byte	.LVL125
 9161 05d1 98000000 		.4byte	.LFE141
 9162 05d5 0100     		.2byte	0x1
 9163 05d7 50       		.byte	0x50
 9164 05d8 00000000 		.4byte	0
 9165 05dc 00000000 		.4byte	0
 9166              	.LLST42:
 9167 05e0 00000000 		.4byte	.LVL115
 9168 05e4 0D000000 		.4byte	.LVL116-1
 9169 05e8 0100     		.2byte	0x1
 9170 05ea 50       		.byte	0x50
 9171 05eb 0D000000 		.4byte	.LVL116-1
 9172 05ef 8A000000 		.4byte	.LVL125
 9173 05f3 0100     		.2byte	0x1
 9174 05f5 54       		.byte	0x54
 9175 05f6 8A000000 		.4byte	.LVL125
 9176 05fa 98000000 		.4byte	.LFE141
 9177 05fe 0400     		.2byte	0x4
 9178 0600 F3       		.byte	0xf3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 261


 9179 0601 01       		.uleb128 0x1
 9180 0602 50       		.byte	0x50
 9181 0603 9F       		.byte	0x9f
 9182 0604 00000000 		.4byte	0
 9183 0608 00000000 		.4byte	0
 9184              	.LLST43:
 9185 060c 82000000 		.4byte	.LVL123
 9186 0610 86000000 		.4byte	.LVL124
 9187 0614 0100     		.2byte	0x1
 9188 0616 57       		.byte	0x57
 9189 0617 00000000 		.4byte	0
 9190 061b 00000000 		.4byte	0
 9191              	.LLST44:
 9192 061f 16000000 		.4byte	.LVL126
 9193 0623 1D000000 		.4byte	.LVL127-1
 9194 0627 0100     		.2byte	0x1
 9195 0629 50       		.byte	0x50
 9196 062a 1E000000 		.4byte	.LVL127
 9197 062e 3B000000 		.4byte	.LVL128-1
 9198 0632 0100     		.2byte	0x1
 9199 0634 50       		.byte	0x50
 9200 0635 3E000000 		.4byte	.LVL129
 9201 0639 48000000 		.4byte	.LVL130
 9202 063d 0100     		.2byte	0x1
 9203 063f 50       		.byte	0x50
 9204 0640 00000000 		.4byte	0
 9205 0644 00000000 		.4byte	0
 9206              	.LLST45:
 9207 0648 00000000 		.4byte	.LVL135
 9208 064c 0A000000 		.4byte	.LVL136
 9209 0650 0100     		.2byte	0x1
 9210 0652 50       		.byte	0x50
 9211 0653 00000000 		.4byte	0
 9212 0657 00000000 		.4byte	0
 9213              	.LLST46:
 9214 065b 4E000000 		.4byte	.LVL143
 9215 065f 52000000 		.4byte	.LVL145
 9216 0663 0100     		.2byte	0x1
 9217 0665 55       		.byte	0x55
 9218 0666 76000000 		.4byte	.LVL147
 9219 066a CC000000 		.4byte	.LVL152
 9220 066e 0100     		.2byte	0x1
 9221 0670 55       		.byte	0x55
 9222 0671 00000000 		.4byte	0
 9223 0675 00000000 		.4byte	0
 9224              	.LLST47:
 9225 0679 78000000 		.4byte	.LVL148
 9226 067d 8B000000 		.4byte	.LVL149-1
 9227 0681 0100     		.2byte	0x1
 9228 0683 53       		.byte	0x53
 9229 0684 00000000 		.4byte	0
 9230 0688 00000000 		.4byte	0
 9231              	.LLST48:
 9232 068c 04000000 		.4byte	.LVL137
 9233 0690 4E000000 		.4byte	.LVL143
 9234 0694 0200     		.2byte	0x2
 9235 0696 30       		.byte	0x30
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 262


 9236 0697 9F       		.byte	0x9f
 9237 0698 4E000000 		.4byte	.LVL143
 9238 069c 50000000 		.4byte	.LVL144
 9239 06a0 0100     		.2byte	0x1
 9240 06a2 56       		.byte	0x56
 9241 06a3 52000000 		.4byte	.LVL145
 9242 06a7 54000000 		.4byte	.LVL146
 9243 06ab 0200     		.2byte	0x2
 9244 06ad 30       		.byte	0x30
 9245 06ae 9F       		.byte	0x9f
 9246 06af 54000000 		.4byte	.LVL146
 9247 06b3 CC000000 		.4byte	.LVL152
 9248 06b7 0100     		.2byte	0x1
 9249 06b9 56       		.byte	0x56
 9250 06ba CC000000 		.4byte	.LVL152
 9251 06be DA000000 		.4byte	.LVL153
 9252 06c2 0200     		.2byte	0x2
 9253 06c4 30       		.byte	0x30
 9254 06c5 9F       		.byte	0x9f
 9255 06c6 DA000000 		.4byte	.LVL153
 9256 06ca EA000000 		.4byte	.LVL155
 9257 06ce 0100     		.2byte	0x1
 9258 06d0 56       		.byte	0x56
 9259 06d1 EA000000 		.4byte	.LVL155
 9260 06d5 F0000000 		.4byte	.LFE150
 9261 06d9 0100     		.2byte	0x1
 9262 06db 50       		.byte	0x50
 9263 06dc 00000000 		.4byte	0
 9264 06e0 00000000 		.4byte	0
 9265              	.LLST49:
 9266 06e4 16000000 		.4byte	.LVL138
 9267 06e8 CC000000 		.4byte	.LVL152
 9268 06ec 0100     		.2byte	0x1
 9269 06ee 54       		.byte	0x54
 9270 06ef 00000000 		.4byte	0
 9271 06f3 00000000 		.4byte	0
 9272              	.LLST50:
 9273 06f7 2A000000 		.4byte	.LVL139
 9274 06fb 38000000 		.4byte	.LVL140
 9275 06ff 0100     		.2byte	0x1
 9276 0701 52       		.byte	0x52
 9277 0702 38000000 		.4byte	.LVL140
 9278 0706 3E000000 		.4byte	.LVL141
 9279 070a 0500     		.2byte	0x5
 9280 070c 03       		.byte	0x3
 9281 070d F8000000 		.4byte	pxOverflowDelayedTaskList
 9282 0711 00000000 		.4byte	0
 9283 0715 00000000 		.4byte	0
 9284              	.LLST51:
 9285 0719 00000000 		.4byte	.LVL156
 9286 071d 32000000 		.4byte	.LVL158
 9287 0721 0200     		.2byte	0x2
 9288 0723 30       		.byte	0x30
 9289 0724 9F       		.byte	0x9f
 9290 0725 32000000 		.4byte	.LVL158
 9291 0729 7E000000 		.4byte	.LVL163
 9292 072d 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 263


 9293 072f 54       		.byte	0x54
 9294 0730 7E000000 		.4byte	.LVL163
 9295 0734 80000000 		.4byte	.LVL164
 9296 0738 0200     		.2byte	0x2
 9297 073a 30       		.byte	0x30
 9298 073b 9F       		.byte	0x9f
 9299 073c 80000000 		.4byte	.LVL164
 9300 0740 94000000 		.4byte	.LVL166
 9301 0744 0100     		.2byte	0x1
 9302 0746 54       		.byte	0x54
 9303 0747 CC000000 		.4byte	.LVL172
 9304 074b D0000000 		.4byte	.LVL173
 9305 074f 0200     		.2byte	0x2
 9306 0751 30       		.byte	0x30
 9307 0752 9F       		.byte	0x9f
 9308 0753 00000000 		.4byte	0
 9309 0757 00000000 		.4byte	0
 9310              	.LLST52:
 9311 075b 00000000 		.4byte	.LVL156
 9312 075f B8000000 		.4byte	.LVL170
 9313 0763 0200     		.2byte	0x2
 9314 0765 30       		.byte	0x30
 9315 0766 9F       		.byte	0x9f
 9316 0767 B8000000 		.4byte	.LVL170
 9317 076b CC000000 		.4byte	.LVL172
 9318 076f 0200     		.2byte	0x2
 9319 0771 31       		.byte	0x31
 9320 0772 9F       		.byte	0x9f
 9321 0773 CC000000 		.4byte	.LVL172
 9322 0777 D2000000 		.4byte	.LVL174
 9323 077b 0200     		.2byte	0x2
 9324 077d 30       		.byte	0x30
 9325 077e 9F       		.byte	0x9f
 9326 077f D2000000 		.4byte	.LVL174
 9327 0783 DA000000 		.4byte	.LVL176
 9328 0787 0100     		.2byte	0x1
 9329 0789 54       		.byte	0x54
 9330 078a DA000000 		.4byte	.LVL176
 9331 078e E4000000 		.4byte	.LFE145
 9332 0792 0100     		.2byte	0x1
 9333 0794 50       		.byte	0x50
 9334 0795 00000000 		.4byte	0
 9335 0799 00000000 		.4byte	0
 9336              	.LLST53:
 9337 079d 94000000 		.4byte	.LVL166
 9338 07a1 A4000000 		.4byte	.LVL168
 9339 07a5 0100     		.2byte	0x1
 9340 07a7 54       		.byte	0x54
 9341 07a8 A4000000 		.4byte	.LVL168
 9342 07ac A6000000 		.4byte	.LVL169
 9343 07b0 0300     		.2byte	0x3
 9344 07b2 74       		.byte	0x74
 9345 07b3 7F       		.sleb128 -1
 9346 07b4 9F       		.byte	0x9f
 9347 07b5 A6000000 		.4byte	.LVL169
 9348 07b9 CA000000 		.4byte	.LVL171
 9349 07bd 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 264


 9350 07bf 54       		.byte	0x54
 9351 07c0 D0000000 		.4byte	.LVL173
 9352 07c4 D2000000 		.4byte	.LVL174
 9353 07c8 0100     		.2byte	0x1
 9354 07ca 54       		.byte	0x54
 9355 07cb 00000000 		.4byte	0
 9356 07cf 00000000 		.4byte	0
 9357              	.LLST54:
 9358 07d3 00000000 		.4byte	.LVL177
 9359 07d7 21000000 		.4byte	.LVL178-1
 9360 07db 0100     		.2byte	0x1
 9361 07dd 50       		.byte	0x50
 9362 07de 21000000 		.4byte	.LVL178-1
 9363 07e2 7A000000 		.4byte	.LVL185
 9364 07e6 0100     		.2byte	0x1
 9365 07e8 55       		.byte	0x55
 9366 07e9 7A000000 		.4byte	.LVL185
 9367 07ed 84000000 		.4byte	.LFE133
 9368 07f1 0400     		.2byte	0x4
 9369 07f3 F3       		.byte	0xf3
 9370 07f4 01       		.uleb128 0x1
 9371 07f5 50       		.byte	0x50
 9372 07f6 9F       		.byte	0x9f
 9373 07f7 00000000 		.4byte	0
 9374 07fb 00000000 		.4byte	0
 9375              	.LLST55:
 9376 07ff 00000000 		.4byte	.LVL177
 9377 0803 21000000 		.4byte	.LVL178-1
 9378 0807 0100     		.2byte	0x1
 9379 0809 51       		.byte	0x51
 9380 080a 21000000 		.4byte	.LVL178-1
 9381 080e 7A000000 		.4byte	.LVL185
 9382 0812 0100     		.2byte	0x1
 9383 0814 54       		.byte	0x54
 9384 0815 7A000000 		.4byte	.LVL185
 9385 0819 84000000 		.4byte	.LFE133
 9386 081d 0400     		.2byte	0x4
 9387 081f F3       		.byte	0xf3
 9388 0820 01       		.uleb128 0x1
 9389 0821 51       		.byte	0x51
 9390 0822 9F       		.byte	0x9f
 9391 0823 00000000 		.4byte	0
 9392 0827 00000000 		.4byte	0
 9393              	.LLST56:
 9394 082b 2C000000 		.4byte	.LVL180
 9395 082f 61000000 		.4byte	.LVL183-1
 9396 0833 0100     		.2byte	0x1
 9397 0835 53       		.byte	0x53
 9398 0836 00000000 		.4byte	0
 9399 083a 00000000 		.4byte	0
 9400              	.LLST57:
 9401 083e 00000000 		.4byte	.LVL177
 9402 0842 56000000 		.4byte	.LVL181
 9403 0846 0200     		.2byte	0x2
 9404 0848 30       		.byte	0x30
 9405 0849 9F       		.byte	0x9f
 9406 084a 56000000 		.4byte	.LVL181
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 265


 9407 084e 61000000 		.4byte	.LVL183-1
 9408 0852 0100     		.2byte	0x1
 9409 0854 52       		.byte	0x52
 9410 0855 00000000 		.4byte	0
 9411 0859 00000000 		.4byte	0
 9412              	.LLST58:
 9413 085d 28000000 		.4byte	.LVL179
 9414 0861 5E000000 		.4byte	.LVL182
 9415 0865 0100     		.2byte	0x1
 9416 0867 50       		.byte	0x50
 9417 0868 00000000 		.4byte	0
 9418 086c 00000000 		.4byte	0
 9419              	.LLST59:
 9420 0870 00000000 		.4byte	.LVL186
 9421 0874 15000000 		.4byte	.LVL188-1
 9422 0878 0100     		.2byte	0x1
 9423 087a 50       		.byte	0x50
 9424 087b 15000000 		.4byte	.LVL188-1
 9425 087f 24000000 		.4byte	.LVL191
 9426 0883 0100     		.2byte	0x1
 9427 0885 54       		.byte	0x54
 9428 0886 24000000 		.4byte	.LVL191
 9429 088a 26000000 		.4byte	.LVL192
 9430 088e 0100     		.2byte	0x1
 9431 0890 50       		.byte	0x50
 9432 0891 26000000 		.4byte	.LVL192
 9433 0895 44000000 		.4byte	.LFE134
 9434 0899 0400     		.2byte	0x4
 9435 089b F3       		.byte	0xf3
 9436 089c 01       		.uleb128 0x1
 9437 089d 50       		.byte	0x50
 9438 089e 9F       		.byte	0x9f
 9439 089f 00000000 		.4byte	0
 9440 08a3 00000000 		.4byte	0
 9441              	.LLST60:
 9442 08a7 02000000 		.4byte	.LVL187
 9443 08ab 22000000 		.4byte	.LVL190
 9444 08af 0200     		.2byte	0x2
 9445 08b1 30       		.byte	0x30
 9446 08b2 9F       		.byte	0x9f
 9447 08b3 22000000 		.4byte	.LVL190
 9448 08b7 24000000 		.4byte	.LVL191
 9449 08bb 0100     		.2byte	0x1
 9450 08bd 50       		.byte	0x50
 9451 08be 24000000 		.4byte	.LVL191
 9452 08c2 26000000 		.4byte	.LVL192
 9453 08c6 0200     		.2byte	0x2
 9454 08c8 30       		.byte	0x30
 9455 08c9 9F       		.byte	0x9f
 9456 08ca 26000000 		.4byte	.LVL192
 9457 08ce 44000000 		.4byte	.LFE134
 9458 08d2 0100     		.2byte	0x1
 9459 08d4 50       		.byte	0x50
 9460 08d5 00000000 		.4byte	0
 9461 08d9 00000000 		.4byte	0
 9462              	.LLST61:
 9463 08dd 0E000000 		.4byte	.LVL194
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 266


 9464 08e1 1A000000 		.4byte	.LVL197
 9465 08e5 0800     		.2byte	0x8
 9466 08e7 74       		.byte	0x74
 9467 08e8 00       		.sleb128 0
 9468 08e9 30       		.byte	0x30
 9469 08ea 29       		.byte	0x29
 9470 08eb 08       		.byte	0x8
 9471 08ec FF       		.byte	0xff
 9472 08ed 1A       		.byte	0x1a
 9473 08ee 9F       		.byte	0x9f
 9474 08ef 00000000 		.4byte	0
 9475 08f3 00000000 		.4byte	0
 9476              	.LLST62:
 9477 08f7 20000000 		.4byte	.LVL198
 9478 08fb 44000000 		.4byte	.LVL201
 9479 08ff 0100     		.2byte	0x1
 9480 0901 55       		.byte	0x55
 9481 0902 00000000 		.4byte	0
 9482 0906 00000000 		.4byte	0
 9483              	.LLST63:
 9484 090a 00000000 		.4byte	.LVL202
 9485 090e 02000000 		.4byte	.LVL203
 9486 0912 0100     		.2byte	0x1
 9487 0914 50       		.byte	0x50
 9488 0915 02000000 		.4byte	.LVL203
 9489 0919 28000000 		.4byte	.LFE160
 9490 091d 0400     		.2byte	0x4
 9491 091f F3       		.byte	0xf3
 9492 0920 01       		.uleb128 0x1
 9493 0921 50       		.byte	0x50
 9494 0922 9F       		.byte	0x9f
 9495 0923 00000000 		.4byte	0
 9496 0927 00000000 		.4byte	0
 9497              	.LLST64:
 9498 092b 22000000 		.4byte	.LVL205
 9499 092f 3C000000 		.4byte	.LVL206
 9500 0933 0100     		.2byte	0x1
 9501 0935 53       		.byte	0x53
 9502 0936 00000000 		.4byte	0
 9503 093a 00000000 		.4byte	0
 9504              	.LLST65:
 9505 093e 00000000 		.4byte	.LVL211
 9506 0942 07000000 		.4byte	.LVL212-1
 9507 0946 0100     		.2byte	0x1
 9508 0948 50       		.byte	0x50
 9509 0949 07000000 		.4byte	.LVL212-1
 9510 094d 10000000 		.4byte	.LVL213
 9511 0951 0100     		.2byte	0x1
 9512 0953 54       		.byte	0x54
 9513 0954 00000000 		.4byte	0
 9514 0958 00000000 		.4byte	0
 9515              	.LLST66:
 9516 095c 10000000 		.4byte	.LVL213
 9517 0960 90000000 		.4byte	.LVL224
 9518 0964 0100     		.2byte	0x1
 9519 0966 54       		.byte	0x54
 9520 0967 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 267


 9521 096b 00000000 		.4byte	0
 9522              	.LLST67:
 9523 096f 00000000 		.4byte	.LVL225
 9524 0973 15000000 		.4byte	.LVL227-1
 9525 0977 0100     		.2byte	0x1
 9526 0979 50       		.byte	0x50
 9527 097a 15000000 		.4byte	.LVL227-1
 9528 097e 24000000 		.4byte	.LFE152
 9529 0982 0400     		.2byte	0x4
 9530 0984 F3       		.byte	0xf3
 9531 0985 01       		.uleb128 0x1
 9532 0986 50       		.byte	0x50
 9533 0987 9F       		.byte	0x9f
 9534 0988 00000000 		.4byte	0
 9535 098c 00000000 		.4byte	0
 9536              	.LLST68:
 9537 0990 00000000 		.4byte	.LVL225
 9538 0994 10000000 		.4byte	.LVL226
 9539 0998 0100     		.2byte	0x1
 9540 099a 51       		.byte	0x51
 9541 099b 10000000 		.4byte	.LVL226
 9542 099f 20000000 		.4byte	.LVL229
 9543 09a3 0100     		.2byte	0x1
 9544 09a5 54       		.byte	0x54
 9545 09a6 20000000 		.4byte	.LVL229
 9546 09aa 24000000 		.4byte	.LFE152
 9547 09ae 0400     		.2byte	0x4
 9548 09b0 F3       		.byte	0xf3
 9549 09b1 01       		.uleb128 0x1
 9550 09b2 51       		.byte	0x51
 9551 09b3 9F       		.byte	0x9f
 9552 09b4 00000000 		.4byte	0
 9553 09b8 00000000 		.4byte	0
 9554              	.LLST69:
 9555 09bc 00000000 		.4byte	.LVL230
 9556 09c0 0A000000 		.4byte	.LVL231
 9557 09c4 0100     		.2byte	0x1
 9558 09c6 50       		.byte	0x50
 9559 09c7 0A000000 		.4byte	.LVL231
 9560 09cb 1C000000 		.4byte	.LVL232
 9561 09cf 0100     		.2byte	0x1
 9562 09d1 53       		.byte	0x53
 9563 09d2 1C000000 		.4byte	.LVL232
 9564 09d6 31000000 		.4byte	.LVL236-1
 9565 09da 0100     		.2byte	0x1
 9566 09dc 50       		.byte	0x50
 9567 09dd 31000000 		.4byte	.LVL236-1
 9568 09e1 40000000 		.4byte	.LFE153
 9569 09e5 0400     		.2byte	0x4
 9570 09e7 F3       		.byte	0xf3
 9571 09e8 01       		.uleb128 0x1
 9572 09e9 50       		.byte	0x50
 9573 09ea 9F       		.byte	0x9f
 9574 09eb 00000000 		.4byte	0
 9575 09ef 00000000 		.4byte	0
 9576              	.LLST70:
 9577 09f3 00000000 		.4byte	.LVL230
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 268


 9578 09f7 22000000 		.4byte	.LVL234
 9579 09fb 0100     		.2byte	0x1
 9580 09fd 51       		.byte	0x51
 9581 09fe 22000000 		.4byte	.LVL234
 9582 0a02 26000000 		.4byte	.LVL235
 9583 0a06 0100     		.2byte	0x1
 9584 0a08 53       		.byte	0x53
 9585 0a09 26000000 		.4byte	.LVL235
 9586 0a0d 40000000 		.4byte	.LFE153
 9587 0a11 0400     		.2byte	0x4
 9588 0a13 F3       		.byte	0xf3
 9589 0a14 01       		.uleb128 0x1
 9590 0a15 51       		.byte	0x51
 9591 0a16 9F       		.byte	0x9f
 9592 0a17 00000000 		.4byte	0
 9593 0a1b 00000000 		.4byte	0
 9594              	.LLST71:
 9595 0a1f 00000000 		.4byte	.LVL230
 9596 0a23 1E000000 		.4byte	.LVL233
 9597 0a27 0100     		.2byte	0x1
 9598 0a29 52       		.byte	0x52
 9599 0a2a 1E000000 		.4byte	.LVL233
 9600 0a2e 3C000000 		.4byte	.LVL238
 9601 0a32 0100     		.2byte	0x1
 9602 0a34 54       		.byte	0x54
 9603 0a35 3C000000 		.4byte	.LVL238
 9604 0a39 40000000 		.4byte	.LFE153
 9605 0a3d 0400     		.2byte	0x4
 9606 0a3f F3       		.byte	0xf3
 9607 0a40 01       		.uleb128 0x1
 9608 0a41 52       		.byte	0x52
 9609 0a42 9F       		.byte	0x9f
 9610 0a43 00000000 		.4byte	0
 9611 0a47 00000000 		.4byte	0
 9612              	.LLST72:
 9613 0a4b 00000000 		.4byte	.LVL239
 9614 0a4f 17000000 		.4byte	.LVL242-1
 9615 0a53 0100     		.2byte	0x1
 9616 0a55 50       		.byte	0x50
 9617 0a56 17000000 		.4byte	.LVL242-1
 9618 0a5a 2C000000 		.4byte	.LFE154
 9619 0a5e 0400     		.2byte	0x4
 9620 0a60 F3       		.byte	0xf3
 9621 0a61 01       		.uleb128 0x1
 9622 0a62 50       		.byte	0x50
 9623 0a63 9F       		.byte	0x9f
 9624 0a64 00000000 		.4byte	0
 9625 0a68 00000000 		.4byte	0
 9626              	.LLST73:
 9627 0a6c 00000000 		.4byte	.LVL239
 9628 0a70 12000000 		.4byte	.LVL241
 9629 0a74 0100     		.2byte	0x1
 9630 0a76 51       		.byte	0x51
 9631 0a77 12000000 		.4byte	.LVL241
 9632 0a7b 28000000 		.4byte	.LVL245
 9633 0a7f 0100     		.2byte	0x1
 9634 0a81 54       		.byte	0x54
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 269


 9635 0a82 00000000 		.4byte	0
 9636 0a86 00000000 		.4byte	0
 9637              	.LLST74:
 9638 0a8a 00000000 		.4byte	.LVL239
 9639 0a8e 0E000000 		.4byte	.LVL240
 9640 0a92 0100     		.2byte	0x1
 9641 0a94 52       		.byte	0x52
 9642 0a95 0E000000 		.4byte	.LVL240
 9643 0a99 28000000 		.4byte	.LVL245
 9644 0a9d 0100     		.2byte	0x1
 9645 0a9f 55       		.byte	0x55
 9646 0aa0 28000000 		.4byte	.LVL245
 9647 0aa4 2C000000 		.4byte	.LFE154
 9648 0aa8 0400     		.2byte	0x4
 9649 0aaa F3       		.byte	0xf3
 9650 0aab 01       		.uleb128 0x1
 9651 0aac 52       		.byte	0x52
 9652 0aad 9F       		.byte	0x9f
 9653 0aae 00000000 		.4byte	0
 9654 0ab2 00000000 		.4byte	0
 9655              	.LLST75:
 9656 0ab6 00000000 		.4byte	.LVL246
 9657 0aba 12000000 		.4byte	.LVL248
 9658 0abe 0100     		.2byte	0x1
 9659 0ac0 50       		.byte	0x50
 9660 0ac1 12000000 		.4byte	.LVL248
 9661 0ac5 7C000000 		.4byte	.LFE155
 9662 0ac9 0400     		.2byte	0x4
 9663 0acb F3       		.byte	0xf3
 9664 0acc 01       		.uleb128 0x1
 9665 0acd 50       		.byte	0x50
 9666 0ace 9F       		.byte	0x9f
 9667 0acf 00000000 		.4byte	0
 9668 0ad3 00000000 		.4byte	0
 9669              	.LLST76:
 9670 0ad7 06000000 		.4byte	.LVL247
 9671 0adb 6E000000 		.4byte	.LVL256
 9672 0adf 0100     		.2byte	0x1
 9673 0ae1 54       		.byte	0x54
 9674 0ae2 00000000 		.4byte	0
 9675 0ae6 00000000 		.4byte	0
 9676              	.LLST77:
 9677 0aea 60000000 		.4byte	.LVL253
 9678 0aee 6A000000 		.4byte	.LVL254
 9679 0af2 0200     		.2byte	0x2
 9680 0af4 31       		.byte	0x31
 9681 0af5 9F       		.byte	0x9f
 9682 0af6 6C000000 		.4byte	.LVL255
 9683 0afa 7C000000 		.4byte	.LFE155
 9684 0afe 0100     		.2byte	0x1
 9685 0b00 50       		.byte	0x50
 9686 0b01 00000000 		.4byte	0
 9687 0b05 00000000 		.4byte	0
 9688              	.LLST78:
 9689 0b09 00000000 		.4byte	.LVL257
 9690 0b0d 1F000000 		.4byte	.LVL259-1
 9691 0b11 0100     		.2byte	0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 270


 9692 0b13 50       		.byte	0x50
 9693 0b14 1F000000 		.4byte	.LVL259-1
 9694 0b18 6C000000 		.4byte	.LFE156
 9695 0b1c 0400     		.2byte	0x4
 9696 0b1e F3       		.byte	0xf3
 9697 0b1f 01       		.uleb128 0x1
 9698 0b20 50       		.byte	0x50
 9699 0b21 9F       		.byte	0x9f
 9700 0b22 00000000 		.4byte	0
 9701 0b26 00000000 		.4byte	0
 9702              	.LLST79:
 9703 0b2a 00000000 		.4byte	.LVL257
 9704 0b2e 1F000000 		.4byte	.LVL259-1
 9705 0b32 0100     		.2byte	0x1
 9706 0b34 51       		.byte	0x51
 9707 0b35 1F000000 		.4byte	.LVL259-1
 9708 0b39 6C000000 		.4byte	.LFE156
 9709 0b3d 0400     		.2byte	0x4
 9710 0b3f F3       		.byte	0xf3
 9711 0b40 01       		.uleb128 0x1
 9712 0b41 51       		.byte	0x51
 9713 0b42 9F       		.byte	0x9f
 9714 0b43 00000000 		.4byte	0
 9715 0b47 00000000 		.4byte	0
 9716              	.LLST80:
 9717 0b4b 16000000 		.4byte	.LVL258
 9718 0b4f 66000000 		.4byte	.LVL265
 9719 0b53 0100     		.2byte	0x1
 9720 0b55 54       		.byte	0x54
 9721 0b56 00000000 		.4byte	0
 9722 0b5a 00000000 		.4byte	0
 9723              	.LLST81:
 9724 0b5e 5A000000 		.4byte	.LVL262
 9725 0b62 62000000 		.4byte	.LVL263
 9726 0b66 0200     		.2byte	0x2
 9727 0b68 31       		.byte	0x31
 9728 0b69 9F       		.byte	0x9f
 9729 0b6a 64000000 		.4byte	.LVL264
 9730 0b6e 6C000000 		.4byte	.LFE156
 9731 0b72 0100     		.2byte	0x1
 9732 0b74 50       		.byte	0x50
 9733 0b75 00000000 		.4byte	0
 9734 0b79 00000000 		.4byte	0
 9735              	.LLST82:
 9736 0b7d 00000000 		.4byte	.LVL267
 9737 0b81 15000000 		.4byte	.LVL268-1
 9738 0b85 0100     		.2byte	0x1
 9739 0b87 50       		.byte	0x50
 9740 0b88 15000000 		.4byte	.LVL268-1
 9741 0b8c 4A000000 		.4byte	.LVL271
 9742 0b90 0100     		.2byte	0x1
 9743 0b92 54       		.byte	0x54
 9744 0b93 4A000000 		.4byte	.LVL271
 9745 0b97 4C000000 		.4byte	.LVL272
 9746 0b9b 0400     		.2byte	0x4
 9747 0b9d F3       		.byte	0xf3
 9748 0b9e 01       		.uleb128 0x1
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 271


 9749 0b9f 50       		.byte	0x50
 9750 0ba0 9F       		.byte	0x9f
 9751 0ba1 4C000000 		.4byte	.LVL272
 9752 0ba5 4E000000 		.4byte	.LVL273
 9753 0ba9 0100     		.2byte	0x1
 9754 0bab 54       		.byte	0x54
 9755 0bac 4E000000 		.4byte	.LVL273
 9756 0bb0 50000000 		.4byte	.LVL274
 9757 0bb4 0400     		.2byte	0x4
 9758 0bb6 F3       		.byte	0xf3
 9759 0bb7 01       		.uleb128 0x1
 9760 0bb8 50       		.byte	0x50
 9761 0bb9 9F       		.byte	0x9f
 9762 0bba 50000000 		.4byte	.LVL274
 9763 0bbe 52000000 		.4byte	.LVL275
 9764 0bc2 0100     		.2byte	0x1
 9765 0bc4 54       		.byte	0x54
 9766 0bc5 52000000 		.4byte	.LVL275
 9767 0bc9 54000000 		.4byte	.LVL276
 9768 0bcd 0400     		.2byte	0x4
 9769 0bcf F3       		.byte	0xf3
 9770 0bd0 01       		.uleb128 0x1
 9771 0bd1 50       		.byte	0x50
 9772 0bd2 9F       		.byte	0x9f
 9773 0bd3 54000000 		.4byte	.LVL276
 9774 0bd7 56000000 		.4byte	.LVL277
 9775 0bdb 0100     		.2byte	0x1
 9776 0bdd 54       		.byte	0x54
 9777 0bde 56000000 		.4byte	.LVL277
 9778 0be2 64000000 		.4byte	.LFE158
 9779 0be6 0400     		.2byte	0x4
 9780 0be8 F3       		.byte	0xf3
 9781 0be9 01       		.uleb128 0x1
 9782 0bea 50       		.byte	0x50
 9783 0beb 9F       		.byte	0x9f
 9784 0bec 00000000 		.4byte	0
 9785 0bf0 00000000 		.4byte	0
 9786              	.LLST83:
 9787 0bf4 00000000 		.4byte	.LVL267
 9788 0bf8 15000000 		.4byte	.LVL268-1
 9789 0bfc 0100     		.2byte	0x1
 9790 0bfe 51       		.byte	0x51
 9791 0bff 15000000 		.4byte	.LVL268-1
 9792 0c03 5E000000 		.4byte	.LVL279
 9793 0c07 0100     		.2byte	0x1
 9794 0c09 55       		.byte	0x55
 9795 0c0a 5E000000 		.4byte	.LVL279
 9796 0c0e 64000000 		.4byte	.LFE158
 9797 0c12 0400     		.2byte	0x4
 9798 0c14 F3       		.byte	0xf3
 9799 0c15 01       		.uleb128 0x1
 9800 0c16 51       		.byte	0x51
 9801 0c17 9F       		.byte	0x9f
 9802 0c18 00000000 		.4byte	0
 9803 0c1c 00000000 		.4byte	0
 9804              	.LLST84:
 9805 0c20 48000000 		.4byte	.LVL270
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 272


 9806 0c24 4C000000 		.4byte	.LVL272
 9807 0c28 0200     		.2byte	0x2
 9808 0c2a 30       		.byte	0x30
 9809 0c2b 9F       		.byte	0x9f
 9810 0c2c 56000000 		.4byte	.LVL277
 9811 0c30 5E000000 		.4byte	.LVL279
 9812 0c34 0100     		.2byte	0x1
 9813 0c36 54       		.byte	0x54
 9814 0c37 5E000000 		.4byte	.LVL279
 9815 0c3b 64000000 		.4byte	.LFE158
 9816 0c3f 0100     		.2byte	0x1
 9817 0c41 50       		.byte	0x50
 9818 0c42 00000000 		.4byte	0
 9819 0c46 00000000 		.4byte	0
 9820              	.LLST85:
 9821 0c4a 1C000000 		.4byte	.LVL269
 9822 0c4e 47000000 		.4byte	.LVL270-1
 9823 0c52 0100     		.2byte	0x1
 9824 0c54 51       		.byte	0x51
 9825 0c55 4C000000 		.4byte	.LVL272
 9826 0c59 56000000 		.4byte	.LVL277
 9827 0c5d 0100     		.2byte	0x1
 9828 0c5f 51       		.byte	0x51
 9829 0c60 00000000 		.4byte	0
 9830 0c64 00000000 		.4byte	0
 9831              	.LLST86:
 9832 0c68 00000000 		.4byte	.LVL280
 9833 0c6c 0C000000 		.4byte	.LVL281
 9834 0c70 0100     		.2byte	0x1
 9835 0c72 50       		.byte	0x50
 9836 0c73 00000000 		.4byte	0
 9837 0c77 00000000 		.4byte	0
 9838              	.LLST87:
 9839 0c7b 00000000 		.4byte	.LVL280
 9840 0c7f 0E000000 		.4byte	.LVL282
 9841 0c83 0100     		.2byte	0x1
 9842 0c85 51       		.byte	0x51
 9843 0c86 0E000000 		.4byte	.LVL282
 9844 0c8a 12000000 		.4byte	.LVL283
 9845 0c8e 0300     		.2byte	0x3
 9846 0c90 71       		.byte	0x71
 9847 0c91 70       		.sleb128 -16
 9848 0c92 9F       		.byte	0x9f
 9849 0c93 12000000 		.4byte	.LVL283
 9850 0c97 1C000000 		.4byte	.LFE161
 9851 0c9b 0400     		.2byte	0x4
 9852 0c9d F3       		.byte	0xf3
 9853 0c9e 01       		.uleb128 0x1
 9854 0c9f 51       		.byte	0x51
 9855 0ca0 9F       		.byte	0x9f
 9856 0ca1 00000000 		.4byte	0
 9857 0ca5 00000000 		.4byte	0
 9858              	.LLST88:
 9859 0ca9 0C000000 		.4byte	.LVL281
 9860 0cad 14000000 		.4byte	.LVL284
 9861 0cb1 0100     		.2byte	0x1
 9862 0cb3 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 273


 9863 0cb4 00000000 		.4byte	0
 9864 0cb8 00000000 		.4byte	0
 9865              	.LLST89:
 9866 0cbc 00000000 		.4byte	.LVL285
 9867 0cc0 0C000000 		.4byte	.LVL286
 9868 0cc4 0100     		.2byte	0x1
 9869 0cc6 50       		.byte	0x50
 9870 0cc7 16000000 		.4byte	.LVL290
 9871 0ccb 18000000 		.4byte	.LVL291
 9872 0ccf 0100     		.2byte	0x1
 9873 0cd1 50       		.byte	0x50
 9874 0cd2 18000000 		.4byte	.LVL291
 9875 0cd6 20000000 		.4byte	.LFE162
 9876 0cda 0400     		.2byte	0x4
 9877 0cdc F3       		.byte	0xf3
 9878 0cdd 01       		.uleb128 0x1
 9879 0cde 50       		.byte	0x50
 9880 0cdf 9F       		.byte	0x9f
 9881 0ce0 00000000 		.4byte	0
 9882 0ce4 00000000 		.4byte	0
 9883              	.LLST90:
 9884 0ce8 00000000 		.4byte	.LVL285
 9885 0cec 0E000000 		.4byte	.LVL287
 9886 0cf0 0100     		.2byte	0x1
 9887 0cf2 51       		.byte	0x51
 9888 0cf3 0E000000 		.4byte	.LVL287
 9889 0cf7 16000000 		.4byte	.LVL290
 9890 0cfb 0300     		.2byte	0x3
 9891 0cfd 71       		.byte	0x71
 9892 0cfe 70       		.sleb128 -16
 9893 0cff 9F       		.byte	0x9f
 9894 0d00 16000000 		.4byte	.LVL290
 9895 0d04 20000000 		.4byte	.LFE162
 9896 0d08 0100     		.2byte	0x1
 9897 0d0a 51       		.byte	0x51
 9898 0d0b 00000000 		.4byte	0
 9899 0d0f 00000000 		.4byte	0
 9900              	.LLST91:
 9901 0d13 00000000 		.4byte	.LVL285
 9902 0d17 14000000 		.4byte	.LVL289
 9903 0d1b 0200     		.2byte	0x2
 9904 0d1d 30       		.byte	0x30
 9905 0d1e 9F       		.byte	0x9f
 9906 0d1f 14000000 		.4byte	.LVL289
 9907 0d23 16000000 		.4byte	.LVL290
 9908 0d27 0100     		.2byte	0x1
 9909 0d29 50       		.byte	0x50
 9910 0d2a 16000000 		.4byte	.LVL290
 9911 0d2e 18000000 		.4byte	.LVL291
 9912 0d32 0200     		.2byte	0x2
 9913 0d34 30       		.byte	0x30
 9914 0d35 9F       		.byte	0x9f
 9915 0d36 18000000 		.4byte	.LVL291
 9916 0d3a 20000000 		.4byte	.LFE162
 9917 0d3e 0100     		.2byte	0x1
 9918 0d40 50       		.byte	0x50
 9919 0d41 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 274


 9920 0d45 00000000 		.4byte	0
 9921              	.LLST92:
 9922 0d49 0C000000 		.4byte	.LVL286
 9923 0d4d 12000000 		.4byte	.LVL288
 9924 0d51 0100     		.2byte	0x1
 9925 0d53 50       		.byte	0x50
 9926 0d54 00000000 		.4byte	0
 9927 0d58 00000000 		.4byte	0
 9928              	.LLST93:
 9929 0d5c 00000000 		.4byte	.LVL295
 9930 0d60 09000000 		.4byte	.LVL296-1
 9931 0d64 0100     		.2byte	0x1
 9932 0d66 50       		.byte	0x50
 9933 0d67 09000000 		.4byte	.LVL296-1
 9934 0d6b 78000000 		.4byte	.LVL302
 9935 0d6f 0100     		.2byte	0x1
 9936 0d71 55       		.byte	0x55
 9937 0d72 78000000 		.4byte	.LVL302
 9938 0d76 80000000 		.4byte	.LFE170
 9939 0d7a 0400     		.2byte	0x4
 9940 0d7c F3       		.byte	0xf3
 9941 0d7d 01       		.uleb128 0x1
 9942 0d7e 50       		.byte	0x50
 9943 0d7f 9F       		.byte	0x9f
 9944 0d80 00000000 		.4byte	0
 9945 0d84 00000000 		.4byte	0
 9946              	.LLST94:
 9947 0d88 00000000 		.4byte	.LVL295
 9948 0d8c 09000000 		.4byte	.LVL296-1
 9949 0d90 0100     		.2byte	0x1
 9950 0d92 51       		.byte	0x51
 9951 0d93 09000000 		.4byte	.LVL296-1
 9952 0d97 4A000000 		.4byte	.LVL300
 9953 0d9b 0100     		.2byte	0x1
 9954 0d9d 54       		.byte	0x54
 9955 0d9e 4A000000 		.4byte	.LVL300
 9956 0da2 80000000 		.4byte	.LFE170
 9957 0da6 0400     		.2byte	0x4
 9958 0da8 F3       		.byte	0xf3
 9959 0da9 01       		.uleb128 0x1
 9960 0daa 51       		.byte	0x51
 9961 0dab 9F       		.byte	0x9f
 9962 0dac 00000000 		.4byte	0
 9963 0db0 00000000 		.4byte	0
 9964              	.LLST95:
 9965 0db4 4A000000 		.4byte	.LVL300
 9966 0db8 78000000 		.4byte	.LVL302
 9967 0dbc 0100     		.2byte	0x1
 9968 0dbe 54       		.byte	0x54
 9969 0dbf 78000000 		.4byte	.LVL302
 9970 0dc3 80000000 		.4byte	.LFE170
 9971 0dc7 0100     		.2byte	0x1
 9972 0dc9 50       		.byte	0x50
 9973 0dca 00000000 		.4byte	0
 9974 0dce 00000000 		.4byte	0
 9975              	.LLST96:
 9976 0dd2 00000000 		.4byte	.LVL303
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 275


 9977 0dd6 0D000000 		.4byte	.LVL304-1
 9978 0dda 0100     		.2byte	0x1
 9979 0ddc 50       		.byte	0x50
 9980 0ddd 0D000000 		.4byte	.LVL304-1
 9981 0de1 9C000000 		.4byte	.LVL313
 9982 0de5 0100     		.2byte	0x1
 9983 0de7 57       		.byte	0x57
 9984 0de8 9C000000 		.4byte	.LVL313
 9985 0dec A4000000 		.4byte	.LFE171
 9986 0df0 0400     		.2byte	0x4
 9987 0df2 F3       		.byte	0xf3
 9988 0df3 01       		.uleb128 0x1
 9989 0df4 50       		.byte	0x50
 9990 0df5 9F       		.byte	0x9f
 9991 0df6 00000000 		.4byte	0
 9992 0dfa 00000000 		.4byte	0
 9993              	.LLST97:
 9994 0dfe 00000000 		.4byte	.LVL303
 9995 0e02 0D000000 		.4byte	.LVL304-1
 9996 0e06 0100     		.2byte	0x1
 9997 0e08 51       		.byte	0x51
 9998 0e09 0D000000 		.4byte	.LVL304-1
 9999 0e0d 84000000 		.4byte	.LVL309
 10000 0e11 0100     		.2byte	0x1
 10001 0e13 54       		.byte	0x54
 10002 0e14 84000000 		.4byte	.LVL309
 10003 0e18 86000000 		.4byte	.LVL310
 10004 0e1c 0400     		.2byte	0x4
 10005 0e1e F3       		.byte	0xf3
 10006 0e1f 01       		.uleb128 0x1
 10007 0e20 51       		.byte	0x51
 10008 0e21 9F       		.byte	0x9f
 10009 0e22 86000000 		.4byte	.LVL310
 10010 0e26 88000000 		.4byte	.LVL311
 10011 0e2a 0100     		.2byte	0x1
 10012 0e2c 54       		.byte	0x54
 10013 0e2d 88000000 		.4byte	.LVL311
 10014 0e31 A4000000 		.4byte	.LFE171
 10015 0e35 0400     		.2byte	0x4
 10016 0e37 F3       		.byte	0xf3
 10017 0e38 01       		.uleb128 0x1
 10018 0e39 51       		.byte	0x51
 10019 0e3a 9F       		.byte	0x9f
 10020 0e3b 00000000 		.4byte	0
 10021 0e3f 00000000 		.4byte	0
 10022              	.LLST98:
 10023 0e43 00000000 		.4byte	.LVL303
 10024 0e47 0D000000 		.4byte	.LVL304-1
 10025 0e4b 0100     		.2byte	0x1
 10026 0e4d 52       		.byte	0x52
 10027 0e4e 0D000000 		.4byte	.LVL304-1
 10028 0e52 9C000000 		.4byte	.LVL313
 10029 0e56 0100     		.2byte	0x1
 10030 0e58 55       		.byte	0x55
 10031 0e59 9C000000 		.4byte	.LVL313
 10032 0e5d A4000000 		.4byte	.LFE171
 10033 0e61 0400     		.2byte	0x4
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 276


 10034 0e63 F3       		.byte	0xf3
 10035 0e64 01       		.uleb128 0x1
 10036 0e65 52       		.byte	0x52
 10037 0e66 9F       		.byte	0x9f
 10038 0e67 00000000 		.4byte	0
 10039 0e6b 00000000 		.4byte	0
 10040              	.LLST99:
 10041 0e6f 00000000 		.4byte	.LVL303
 10042 0e73 0D000000 		.4byte	.LVL304-1
 10043 0e77 0100     		.2byte	0x1
 10044 0e79 53       		.byte	0x53
 10045 0e7a 0D000000 		.4byte	.LVL304-1
 10046 0e7e 9C000000 		.4byte	.LVL313
 10047 0e82 0100     		.2byte	0x1
 10048 0e84 56       		.byte	0x56
 10049 0e85 9C000000 		.4byte	.LVL313
 10050 0e89 A4000000 		.4byte	.LFE171
 10051 0e8d 0400     		.2byte	0x4
 10052 0e8f F3       		.byte	0xf3
 10053 0e90 01       		.uleb128 0x1
 10054 0e91 53       		.byte	0x53
 10055 0e92 9F       		.byte	0x9f
 10056 0e93 00000000 		.4byte	0
 10057 0e97 00000000 		.4byte	0
 10058              	.LLST100:
 10059 0e9b 82000000 		.4byte	.LVL308
 10060 0e9f 86000000 		.4byte	.LVL310
 10061 0ea3 0200     		.2byte	0x2
 10062 0ea5 31       		.byte	0x31
 10063 0ea6 9F       		.byte	0x9f
 10064 0ea7 88000000 		.4byte	.LVL311
 10065 0eab 9C000000 		.4byte	.LVL313
 10066 0eaf 0100     		.2byte	0x1
 10067 0eb1 54       		.byte	0x54
 10068 0eb2 9C000000 		.4byte	.LVL313
 10069 0eb6 A4000000 		.4byte	.LFE171
 10070 0eba 0100     		.2byte	0x1
 10071 0ebc 50       		.byte	0x50
 10072 0ebd 00000000 		.4byte	0
 10073 0ec1 00000000 		.4byte	0
 10074              	.LLST101:
 10075 0ec5 00000000 		.4byte	.LVL314
 10076 0ec9 13000000 		.4byte	.LVL316-1
 10077 0ecd 0100     		.2byte	0x1
 10078 0ecf 50       		.byte	0x50
 10079 0ed0 13000000 		.4byte	.LVL316-1
 10080 0ed4 BA000000 		.4byte	.LVL324
 10081 0ed8 0100     		.2byte	0x1
 10082 0eda 54       		.byte	0x54
 10083 0edb BA000000 		.4byte	.LVL324
 10084 0edf C8000000 		.4byte	.LFE172
 10085 0ee3 0400     		.2byte	0x4
 10086 0ee5 F3       		.byte	0xf3
 10087 0ee6 01       		.uleb128 0x1
 10088 0ee7 50       		.byte	0x50
 10089 0ee8 9F       		.byte	0x9f
 10090 0ee9 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 277


 10091 0eed 00000000 		.4byte	0
 10092              	.LLST102:
 10093 0ef1 00000000 		.4byte	.LVL314
 10094 0ef5 13000000 		.4byte	.LVL316-1
 10095 0ef9 0100     		.2byte	0x1
 10096 0efb 51       		.byte	0x51
 10097 0efc 13000000 		.4byte	.LVL316-1
 10098 0f00 38000000 		.4byte	.LVL318
 10099 0f04 0100     		.2byte	0x1
 10100 0f06 56       		.byte	0x56
 10101 0f07 38000000 		.4byte	.LVL318
 10102 0f0b 3E000000 		.4byte	.LVL319
 10103 0f0f 0400     		.2byte	0x4
 10104 0f11 F3       		.byte	0xf3
 10105 0f12 01       		.uleb128 0x1
 10106 0f13 51       		.byte	0x51
 10107 0f14 9F       		.byte	0x9f
 10108 0f15 3E000000 		.4byte	.LVL319
 10109 0f19 5E000000 		.4byte	.LVL320
 10110 0f1d 0100     		.2byte	0x1
 10111 0f1f 56       		.byte	0x56
 10112 0f20 5E000000 		.4byte	.LVL320
 10113 0f24 C8000000 		.4byte	.LFE172
 10114 0f28 0400     		.2byte	0x4
 10115 0f2a F3       		.byte	0xf3
 10116 0f2b 01       		.uleb128 0x1
 10117 0f2c 51       		.byte	0x51
 10118 0f2d 9F       		.byte	0x9f
 10119 0f2e 00000000 		.4byte	0
 10120 0f32 00000000 		.4byte	0
 10121              	.LLST103:
 10122 0f36 00000000 		.4byte	.LVL314
 10123 0f3a 13000000 		.4byte	.LVL316-1
 10124 0f3e 0100     		.2byte	0x1
 10125 0f40 52       		.byte	0x52
 10126 0f41 13000000 		.4byte	.LVL316-1
 10127 0f45 C8000000 		.4byte	.LFE172
 10128 0f49 0400     		.2byte	0x4
 10129 0f4b F3       		.byte	0xf3
 10130 0f4c 01       		.uleb128 0x1
 10131 0f4d 52       		.byte	0x52
 10132 0f4e 9F       		.byte	0x9f
 10133 0f4f 00000000 		.4byte	0
 10134 0f53 00000000 		.4byte	0
 10135              	.LLST104:
 10136 0f57 00000000 		.4byte	.LVL314
 10137 0f5b 13000000 		.4byte	.LVL316-1
 10138 0f5f 0100     		.2byte	0x1
 10139 0f61 53       		.byte	0x53
 10140 0f62 13000000 		.4byte	.LVL316-1
 10141 0f66 BA000000 		.4byte	.LVL324
 10142 0f6a 0100     		.2byte	0x1
 10143 0f6c 57       		.byte	0x57
 10144 0f6d BA000000 		.4byte	.LVL324
 10145 0f71 C8000000 		.4byte	.LFE172
 10146 0f75 0400     		.2byte	0x4
 10147 0f77 F3       		.byte	0xf3
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 278


 10148 0f78 01       		.uleb128 0x1
 10149 0f79 53       		.byte	0x53
 10150 0f7a 9F       		.byte	0x9f
 10151 0f7b 00000000 		.4byte	0
 10152 0f7f 00000000 		.4byte	0
 10153              	.LLST105:
 10154 0f83 10000000 		.4byte	.LVL315
 10155 0f87 BA000000 		.4byte	.LVL324
 10156 0f8b 0100     		.2byte	0x1
 10157 0f8d 54       		.byte	0x54
 10158 0f8e BA000000 		.4byte	.LVL324
 10159 0f92 C8000000 		.4byte	.LFE172
 10160 0f96 0400     		.2byte	0x4
 10161 0f98 F3       		.byte	0xf3
 10162 0f99 01       		.uleb128 0x1
 10163 0f9a 50       		.byte	0x50
 10164 0f9b 9F       		.byte	0x9f
 10165 0f9c 00000000 		.4byte	0
 10166 0fa0 00000000 		.4byte	0
 10167              	.LLST106:
 10168 0fa4 00000000 		.4byte	.LVL314
 10169 0fa8 5E000000 		.4byte	.LVL320
 10170 0fac 0200     		.2byte	0x2
 10171 0fae 31       		.byte	0x31
 10172 0faf 9F       		.byte	0x9f
 10173 0fb0 5E000000 		.4byte	.LVL320
 10174 0fb4 BA000000 		.4byte	.LVL324
 10175 0fb8 0100     		.2byte	0x1
 10176 0fba 55       		.byte	0x55
 10177 0fbb BA000000 		.4byte	.LVL324
 10178 0fbf C8000000 		.4byte	.LFE172
 10179 0fc3 0100     		.2byte	0x1
 10180 0fc5 50       		.byte	0x50
 10181 0fc6 00000000 		.4byte	0
 10182 0fca 00000000 		.4byte	0
 10183              	.LLST107:
 10184 0fce 20000000 		.4byte	.LVL317
 10185 0fd2 69000000 		.4byte	.LVL321-1
 10186 0fd6 0100     		.2byte	0x1
 10187 0fd8 53       		.byte	0x53
 10188 0fd9 00000000 		.4byte	0
 10189 0fdd 00000000 		.4byte	0
 10190              	.LLST108:
 10191 0fe1 00000000 		.4byte	.LVL325
 10192 0fe5 17000000 		.4byte	.LVL327-1
 10193 0fe9 0100     		.2byte	0x1
 10194 0feb 50       		.byte	0x50
 10195 0fec 17000000 		.4byte	.LVL327-1
 10196 0ff0 F6000000 		.4byte	.LVL338
 10197 0ff4 0100     		.2byte	0x1
 10198 0ff6 54       		.byte	0x54
 10199 0ff7 F6000000 		.4byte	.LVL338
 10200 0ffb 04010000 		.4byte	.LFE173
 10201 0fff 0400     		.2byte	0x4
 10202 1001 F3       		.byte	0xf3
 10203 1002 01       		.uleb128 0x1
 10204 1003 50       		.byte	0x50
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 279


 10205 1004 9F       		.byte	0x9f
 10206 1005 00000000 		.4byte	0
 10207 1009 00000000 		.4byte	0
 10208              	.LLST109:
 10209 100d 00000000 		.4byte	.LVL325
 10210 1011 17000000 		.4byte	.LVL327-1
 10211 1015 0100     		.2byte	0x1
 10212 1017 51       		.byte	0x51
 10213 1018 17000000 		.4byte	.LVL327-1
 10214 101c 9A000000 		.4byte	.LVL331
 10215 1020 0100     		.2byte	0x1
 10216 1022 58       		.byte	0x58
 10217 1023 9A000000 		.4byte	.LVL331
 10218 1027 C4000000 		.4byte	.LVL334
 10219 102b 0400     		.2byte	0x4
 10220 102d F3       		.byte	0xf3
 10221 102e 01       		.uleb128 0x1
 10222 102f 51       		.byte	0x51
 10223 1030 9F       		.byte	0x9f
 10224 1031 C4000000 		.4byte	.LVL334
 10225 1035 CE000000 		.4byte	.LVL335
 10226 1039 0100     		.2byte	0x1
 10227 103b 58       		.byte	0x58
 10228 103c CE000000 		.4byte	.LVL335
 10229 1040 04010000 		.4byte	.LFE173
 10230 1044 0400     		.2byte	0x4
 10231 1046 F3       		.byte	0xf3
 10232 1047 01       		.uleb128 0x1
 10233 1048 51       		.byte	0x51
 10234 1049 9F       		.byte	0x9f
 10235 104a 00000000 		.4byte	0
 10236 104e 00000000 		.4byte	0
 10237              	.LLST110:
 10238 1052 00000000 		.4byte	.LVL325
 10239 1056 17000000 		.4byte	.LVL327-1
 10240 105a 0100     		.2byte	0x1
 10241 105c 52       		.byte	0x52
 10242 105d 17000000 		.4byte	.LVL327-1
 10243 1061 04010000 		.4byte	.LFE173
 10244 1065 0400     		.2byte	0x4
 10245 1067 F3       		.byte	0xf3
 10246 1068 01       		.uleb128 0x1
 10247 1069 52       		.byte	0x52
 10248 106a 9F       		.byte	0x9f
 10249 106b 00000000 		.4byte	0
 10250 106f 00000000 		.4byte	0
 10251              	.LLST111:
 10252 1073 00000000 		.4byte	.LVL325
 10253 1077 17000000 		.4byte	.LVL327-1
 10254 107b 0100     		.2byte	0x1
 10255 107d 53       		.byte	0x53
 10256 107e 17000000 		.4byte	.LVL327-1
 10257 1082 F6000000 		.4byte	.LVL338
 10258 1086 0100     		.2byte	0x1
 10259 1088 59       		.byte	0x59
 10260 1089 F6000000 		.4byte	.LVL338
 10261 108d 04010000 		.4byte	.LFE173
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 280


 10262 1091 0400     		.2byte	0x4
 10263 1093 F3       		.byte	0xf3
 10264 1094 01       		.uleb128 0x1
 10265 1095 53       		.byte	0x53
 10266 1096 9F       		.byte	0x9f
 10267 1097 00000000 		.4byte	0
 10268 109b 00000000 		.4byte	0
 10269              	.LLST112:
 10270 109f 00000000 		.4byte	.LVL325
 10271 10a3 F6000000 		.4byte	.LVL338
 10272 10a7 0200     		.2byte	0x2
 10273 10a9 91       		.byte	0x91
 10274 10aa 00       		.sleb128 0
 10275 10ab F6000000 		.4byte	.LVL338
 10276 10af 04010000 		.4byte	.LFE173
 10277 10b3 0200     		.2byte	0x2
 10278 10b5 7D       		.byte	0x7d
 10279 10b6 00       		.sleb128 0
 10280 10b7 00000000 		.4byte	0
 10281 10bb 00000000 		.4byte	0
 10282              	.LLST113:
 10283 10bf 18000000 		.4byte	.LVL327
 10284 10c3 F6000000 		.4byte	.LVL338
 10285 10c7 0100     		.2byte	0x1
 10286 10c9 54       		.byte	0x54
 10287 10ca F6000000 		.4byte	.LVL338
 10288 10ce 04010000 		.4byte	.LFE173
 10289 10d2 0400     		.2byte	0x4
 10290 10d4 F3       		.byte	0xf3
 10291 10d5 01       		.uleb128 0x1
 10292 10d6 50       		.byte	0x50
 10293 10d7 9F       		.byte	0x9f
 10294 10d8 00000000 		.4byte	0
 10295 10dc 00000000 		.4byte	0
 10296              	.LLST114:
 10297 10e0 3E000000 		.4byte	.LVL328
 10298 10e4 88000000 		.4byte	.LVL330
 10299 10e8 0100     		.2byte	0x1
 10300 10ea 53       		.byte	0x53
 10301 10eb 00000000 		.4byte	0
 10302 10ef 00000000 		.4byte	0
 10303              	.LLST115:
 10304 10f3 06000000 		.4byte	.LVL326
 10305 10f7 82000000 		.4byte	.LVL329
 10306 10fb 0200     		.2byte	0x2
 10307 10fd 31       		.byte	0x31
 10308 10fe 9F       		.byte	0x9f
 10309 10ff 82000000 		.4byte	.LVL329
 10310 1103 F6000000 		.4byte	.LVL338
 10311 1107 0100     		.2byte	0x1
 10312 1109 55       		.byte	0x55
 10313 110a F6000000 		.4byte	.LVL338
 10314 110e 04010000 		.4byte	.LFE173
 10315 1112 0100     		.2byte	0x1
 10316 1114 50       		.byte	0x50
 10317 1115 00000000 		.4byte	0
 10318 1119 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 281


 10319              	.LLST116:
 10320 111d EC000000 		.4byte	.LVL336
 10321 1121 F0000000 		.4byte	.LVL337
 10322 1125 0100     		.2byte	0x1
 10323 1127 57       		.byte	0x57
 10324 1128 00000000 		.4byte	0
 10325 112c 00000000 		.4byte	0
 10326              	.LLST117:
 10327 1130 00000000 		.4byte	.LVL339
 10328 1134 0F000000 		.4byte	.LVL340-1
 10329 1138 0100     		.2byte	0x1
 10330 113a 50       		.byte	0x50
 10331 113b 0F000000 		.4byte	.LVL340-1
 10332 113f A4000000 		.4byte	.LVL348
 10333 1143 0100     		.2byte	0x1
 10334 1145 54       		.byte	0x54
 10335 1146 A4000000 		.4byte	.LVL348
 10336 114a B0000000 		.4byte	.LFE174
 10337 114e 0400     		.2byte	0x4
 10338 1150 F3       		.byte	0xf3
 10339 1151 01       		.uleb128 0x1
 10340 1152 50       		.byte	0x50
 10341 1153 9F       		.byte	0x9f
 10342 1154 00000000 		.4byte	0
 10343 1158 00000000 		.4byte	0
 10344              	.LLST118:
 10345 115c 00000000 		.4byte	.LVL339
 10346 1160 0F000000 		.4byte	.LVL340-1
 10347 1164 0100     		.2byte	0x1
 10348 1166 51       		.byte	0x51
 10349 1167 0F000000 		.4byte	.LVL340-1
 10350 116b A4000000 		.4byte	.LVL348
 10351 116f 0100     		.2byte	0x1
 10352 1171 55       		.byte	0x55
 10353 1172 A4000000 		.4byte	.LVL348
 10354 1176 B0000000 		.4byte	.LFE174
 10355 117a 0400     		.2byte	0x4
 10356 117c F3       		.byte	0xf3
 10357 117d 01       		.uleb128 0x1
 10358 117e 51       		.byte	0x51
 10359 117f 9F       		.byte	0x9f
 10360 1180 00000000 		.4byte	0
 10361 1184 00000000 		.4byte	0
 10362              	.LLST119:
 10363 1188 10000000 		.4byte	.LVL340
 10364 118c A4000000 		.4byte	.LVL348
 10365 1190 0100     		.2byte	0x1
 10366 1192 54       		.byte	0x54
 10367 1193 A4000000 		.4byte	.LVL348
 10368 1197 B0000000 		.4byte	.LFE174
 10369 119b 0400     		.2byte	0x4
 10370 119d F3       		.byte	0xf3
 10371 119e 01       		.uleb128 0x1
 10372 119f 50       		.byte	0x50
 10373 11a0 9F       		.byte	0x9f
 10374 11a1 00000000 		.4byte	0
 10375 11a5 00000000 		.4byte	0
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 282


 10376              	.LLST120:
 10377 11a9 2A000000 		.4byte	.LVL341
 10378 11ad 3C000000 		.4byte	.LVL342
 10379 11b1 0100     		.2byte	0x1
 10380 11b3 53       		.byte	0x53
 10381 11b4 00000000 		.4byte	0
 10382 11b8 00000000 		.4byte	0
 10383              	.LLST121:
 10384 11bc 9E000000 		.4byte	.LVL346
 10385 11c0 A2000000 		.4byte	.LVL347
 10386 11c4 0100     		.2byte	0x1
 10387 11c6 56       		.byte	0x56
 10388 11c7 00000000 		.4byte	0
 10389 11cb 00000000 		.4byte	0
 10390              	.LLST122:
 10391 11cf 00000000 		.4byte	.LVL349
 10392 11d3 0C000000 		.4byte	.LVL350
 10393 11d7 0100     		.2byte	0x1
 10394 11d9 50       		.byte	0x50
 10395 11da 00000000 		.4byte	0
 10396 11de 00000000 		.4byte	0
 10397              	.LLST123:
 10398 11e2 0C000000 		.4byte	.LVL350
 10399 11e6 22000000 		.4byte	.LVL353
 10400 11ea 0100     		.2byte	0x1
 10401 11ec 54       		.byte	0x54
 10402 11ed 24000000 		.4byte	.LVL354
 10403 11f1 26000000 		.4byte	.LVL355
 10404 11f5 0100     		.2byte	0x1
 10405 11f7 54       		.byte	0x54
 10406 11f8 00000000 		.4byte	0
 10407 11fc 00000000 		.4byte	0
 10408              	.LLST124:
 10409 1200 20000000 		.4byte	.LVL352
 10410 1204 24000000 		.4byte	.LVL354
 10411 1208 0200     		.2byte	0x2
 10412 120a 31       		.byte	0x31
 10413 120b 9F       		.byte	0x9f
 10414 120c 26000000 		.4byte	.LVL355
 10415 1210 2E000000 		.4byte	.LVL357
 10416 1214 0100     		.2byte	0x1
 10417 1216 54       		.byte	0x54
 10418 1217 2E000000 		.4byte	.LVL357
 10419 121b 34000000 		.4byte	.LFE175
 10420 121f 0100     		.2byte	0x1
 10421 1221 50       		.byte	0x50
 10422 1222 00000000 		.4byte	0
 10423 1226 00000000 		.4byte	0
 10424              		.section	.debug_aranges,"",%progbits
 10425 0000 94010000 		.4byte	0x194
 10426 0004 0200     		.2byte	0x2
 10427 0006 00000000 		.4byte	.Ldebug_info0
 10428 000a 04       		.byte	0x4
 10429 000b 00       		.byte	0
 10430 000c 0000     		.2byte	0
 10431 000e 0000     		.2byte	0
 10432 0010 00000000 		.4byte	.LFB139
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 283


 10433 0014 40000000 		.4byte	.LFE139-.LFB139
 10434 0018 00000000 		.4byte	.LFB166
 10435 001c 2C000000 		.4byte	.LFE166-.LFB166
 10436 0020 00000000 		.4byte	.LFB165
 10437 0024 12000000 		.4byte	.LFE165-.LFB165
 10438 0028 00000000 		.4byte	.LFB130
 10439 002c 9E000000 		.4byte	.LFE130-.LFB130
 10440 0030 00000000 		.4byte	.LFB163
 10441 0034 58000000 		.4byte	.LFE163-.LFB163
 10442 0038 00000000 		.4byte	.LFB131
 10443 003c AC000000 		.4byte	.LFE131-.LFB131
 10444 0040 00000000 		.4byte	.LFB176
 10445 0044 68000000 		.4byte	.LFE176-.LFB176
 10446 0048 00000000 		.4byte	.LFB129
 10447 004c 62000000 		.4byte	.LFE129-.LFB129
 10448 0050 00000000 		.4byte	.LFB132
 10449 0054 A4000000 		.4byte	.LFE132-.LFB132
 10450 0058 00000000 		.4byte	.LFB135
 10451 005c 20000000 		.4byte	.LFE135-.LFB135
 10452 0060 00000000 		.4byte	.LFB136
 10453 0064 30000000 		.4byte	.LFE136-.LFB136
 10454 0068 00000000 		.4byte	.LFB137
 10455 006c D0000000 		.4byte	.LFE137-.LFB137
 10456 0070 00000000 		.4byte	.LFB140
 10457 0074 7C000000 		.4byte	.LFE140-.LFB140
 10458 0078 00000000 		.4byte	.LFB141
 10459 007c 98000000 		.4byte	.LFE141-.LFB141
 10460 0080 00000000 		.4byte	.LFB142
 10461 0084 60000000 		.4byte	.LFE142-.LFB142
 10462 0088 00000000 		.4byte	.LFB143
 10463 008c 18000000 		.4byte	.LFE143-.LFB143
 10464 0090 00000000 		.4byte	.LFB144
 10465 0094 14000000 		.4byte	.LFE144-.LFB144
 10466 0098 00000000 		.4byte	.LFB146
 10467 009c 0C000000 		.4byte	.LFE146-.LFB146
 10468 00a0 00000000 		.4byte	.LFB147
 10469 00a4 14000000 		.4byte	.LFE147-.LFB147
 10470 00a8 00000000 		.4byte	.LFB148
 10471 00ac 0C000000 		.4byte	.LFE148-.LFB148
 10472 00b0 00000000 		.4byte	.LFB149
 10473 00b4 1C000000 		.4byte	.LFE149-.LFB149
 10474 00b8 00000000 		.4byte	.LFB150
 10475 00bc F0000000 		.4byte	.LFE150-.LFB150
 10476 00c0 00000000 		.4byte	.LFB145
 10477 00c4 E4000000 		.4byte	.LFE145-.LFB145
 10478 00c8 00000000 		.4byte	.LFB133
 10479 00cc 84000000 		.4byte	.LFE133-.LFB133
 10480 00d0 00000000 		.4byte	.LFB134
 10481 00d4 44000000 		.4byte	.LFE134-.LFB134
 10482 00d8 00000000 		.4byte	.LFB164
 10483 00dc 54000000 		.4byte	.LFE164-.LFB164
 10484 00e0 00000000 		.4byte	.LFB160
 10485 00e4 28000000 		.4byte	.LFE160-.LFB160
 10486 00e8 00000000 		.4byte	.LFB151
 10487 00ec BC000000 		.4byte	.LFE151-.LFB151
 10488 00f0 00000000 		.4byte	.LFB138
 10489 00f4 98000000 		.4byte	.LFE138-.LFB138
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 284


 10490 00f8 00000000 		.4byte	.LFB152
 10491 00fc 24000000 		.4byte	.LFE152-.LFB152
 10492 0100 00000000 		.4byte	.LFB153
 10493 0104 40000000 		.4byte	.LFE153-.LFB153
 10494 0108 00000000 		.4byte	.LFB154
 10495 010c 2C000000 		.4byte	.LFE154-.LFB154
 10496 0110 00000000 		.4byte	.LFB155
 10497 0114 7C000000 		.4byte	.LFE155-.LFB155
 10498 0118 00000000 		.4byte	.LFB156
 10499 011c 6C000000 		.4byte	.LFE156-.LFB156
 10500 0120 00000000 		.4byte	.LFB157
 10501 0124 1C000000 		.4byte	.LFE157-.LFB157
 10502 0128 00000000 		.4byte	.LFB158
 10503 012c 64000000 		.4byte	.LFE158-.LFB158
 10504 0130 00000000 		.4byte	.LFB159
 10505 0134 10000000 		.4byte	.LFE159-.LFB159
 10506 0138 00000000 		.4byte	.LFB161
 10507 013c 1C000000 		.4byte	.LFE161-.LFB161
 10508 0140 00000000 		.4byte	.LFB162
 10509 0144 20000000 		.4byte	.LFE162-.LFB162
 10510 0148 00000000 		.4byte	.LFB167
 10511 014c 0C000000 		.4byte	.LFE167-.LFB167
 10512 0150 00000000 		.4byte	.LFB168
 10513 0154 20000000 		.4byte	.LFE168-.LFB168
 10514 0158 00000000 		.4byte	.LFB169
 10515 015c 20000000 		.4byte	.LFE169-.LFB169
 10516 0160 00000000 		.4byte	.LFB170
 10517 0164 80000000 		.4byte	.LFE170-.LFB170
 10518 0168 00000000 		.4byte	.LFB171
 10519 016c A4000000 		.4byte	.LFE171-.LFB171
 10520 0170 00000000 		.4byte	.LFB172
 10521 0174 C8000000 		.4byte	.LFE172-.LFB172
 10522 0178 00000000 		.4byte	.LFB173
 10523 017c 04010000 		.4byte	.LFE173-.LFB173
 10524 0180 00000000 		.4byte	.LFB174
 10525 0184 B0000000 		.4byte	.LFE174-.LFB174
 10526 0188 00000000 		.4byte	.LFB175
 10527 018c 34000000 		.4byte	.LFE175-.LFB175
 10528 0190 00000000 		.4byte	0
 10529 0194 00000000 		.4byte	0
 10530              		.section	.debug_ranges,"",%progbits
 10531              	.Ldebug_ranges0:
 10532 0000 0E000000 		.4byte	.LBB27
 10533 0004 4A000000 		.4byte	.LBE27
 10534 0008 4E000000 		.4byte	.LBB29
 10535 000c CC000000 		.4byte	.LBE29
 10536 0010 00000000 		.4byte	0
 10537 0014 00000000 		.4byte	0
 10538 0018 22000000 		.4byte	.LBB31
 10539 001c 38000000 		.4byte	.LBE31
 10540 0020 3C000000 		.4byte	.LBB32
 10541 0024 44000000 		.4byte	.LBE32
 10542 0028 4C000000 		.4byte	.LBB33
 10543 002c 62000000 		.4byte	.LBE33
 10544 0030 00000000 		.4byte	0
 10545 0034 00000000 		.4byte	0
 10546 0038 00000000 		.4byte	.LFB139
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 285


 10547 003c 40000000 		.4byte	.LFE139
 10548 0040 00000000 		.4byte	.LFB166
 10549 0044 2C000000 		.4byte	.LFE166
 10550 0048 00000000 		.4byte	.LFB165
 10551 004c 12000000 		.4byte	.LFE165
 10552 0050 00000000 		.4byte	.LFB130
 10553 0054 9E000000 		.4byte	.LFE130
 10554 0058 00000000 		.4byte	.LFB163
 10555 005c 58000000 		.4byte	.LFE163
 10556 0060 00000000 		.4byte	.LFB131
 10557 0064 AC000000 		.4byte	.LFE131
 10558 0068 00000000 		.4byte	.LFB176
 10559 006c 68000000 		.4byte	.LFE176
 10560 0070 00000000 		.4byte	.LFB129
 10561 0074 62000000 		.4byte	.LFE129
 10562 0078 00000000 		.4byte	.LFB132
 10563 007c A4000000 		.4byte	.LFE132
 10564 0080 00000000 		.4byte	.LFB135
 10565 0084 20000000 		.4byte	.LFE135
 10566 0088 00000000 		.4byte	.LFB136
 10567 008c 30000000 		.4byte	.LFE136
 10568 0090 00000000 		.4byte	.LFB137
 10569 0094 D0000000 		.4byte	.LFE137
 10570 0098 00000000 		.4byte	.LFB140
 10571 009c 7C000000 		.4byte	.LFE140
 10572 00a0 00000000 		.4byte	.LFB141
 10573 00a4 98000000 		.4byte	.LFE141
 10574 00a8 00000000 		.4byte	.LFB142
 10575 00ac 60000000 		.4byte	.LFE142
 10576 00b0 00000000 		.4byte	.LFB143
 10577 00b4 18000000 		.4byte	.LFE143
 10578 00b8 00000000 		.4byte	.LFB144
 10579 00bc 14000000 		.4byte	.LFE144
 10580 00c0 00000000 		.4byte	.LFB146
 10581 00c4 0C000000 		.4byte	.LFE146
 10582 00c8 00000000 		.4byte	.LFB147
 10583 00cc 14000000 		.4byte	.LFE147
 10584 00d0 00000000 		.4byte	.LFB148
 10585 00d4 0C000000 		.4byte	.LFE148
 10586 00d8 00000000 		.4byte	.LFB149
 10587 00dc 1C000000 		.4byte	.LFE149
 10588 00e0 00000000 		.4byte	.LFB150
 10589 00e4 F0000000 		.4byte	.LFE150
 10590 00e8 00000000 		.4byte	.LFB145
 10591 00ec E4000000 		.4byte	.LFE145
 10592 00f0 00000000 		.4byte	.LFB133
 10593 00f4 84000000 		.4byte	.LFE133
 10594 00f8 00000000 		.4byte	.LFB134
 10595 00fc 44000000 		.4byte	.LFE134
 10596 0100 00000000 		.4byte	.LFB164
 10597 0104 54000000 		.4byte	.LFE164
 10598 0108 00000000 		.4byte	.LFB160
 10599 010c 28000000 		.4byte	.LFE160
 10600 0110 00000000 		.4byte	.LFB151
 10601 0114 BC000000 		.4byte	.LFE151
 10602 0118 00000000 		.4byte	.LFB138
 10603 011c 98000000 		.4byte	.LFE138
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 286


 10604 0120 00000000 		.4byte	.LFB152
 10605 0124 24000000 		.4byte	.LFE152
 10606 0128 00000000 		.4byte	.LFB153
 10607 012c 40000000 		.4byte	.LFE153
 10608 0130 00000000 		.4byte	.LFB154
 10609 0134 2C000000 		.4byte	.LFE154
 10610 0138 00000000 		.4byte	.LFB155
 10611 013c 7C000000 		.4byte	.LFE155
 10612 0140 00000000 		.4byte	.LFB156
 10613 0144 6C000000 		.4byte	.LFE156
 10614 0148 00000000 		.4byte	.LFB157
 10615 014c 1C000000 		.4byte	.LFE157
 10616 0150 00000000 		.4byte	.LFB158
 10617 0154 64000000 		.4byte	.LFE158
 10618 0158 00000000 		.4byte	.LFB159
 10619 015c 10000000 		.4byte	.LFE159
 10620 0160 00000000 		.4byte	.LFB161
 10621 0164 1C000000 		.4byte	.LFE161
 10622 0168 00000000 		.4byte	.LFB162
 10623 016c 20000000 		.4byte	.LFE162
 10624 0170 00000000 		.4byte	.LFB167
 10625 0174 0C000000 		.4byte	.LFE167
 10626 0178 00000000 		.4byte	.LFB168
 10627 017c 20000000 		.4byte	.LFE168
 10628 0180 00000000 		.4byte	.LFB169
 10629 0184 20000000 		.4byte	.LFE169
 10630 0188 00000000 		.4byte	.LFB170
 10631 018c 80000000 		.4byte	.LFE170
 10632 0190 00000000 		.4byte	.LFB171
 10633 0194 A4000000 		.4byte	.LFE171
 10634 0198 00000000 		.4byte	.LFB172
 10635 019c C8000000 		.4byte	.LFE172
 10636 01a0 00000000 		.4byte	.LFB173
 10637 01a4 04010000 		.4byte	.LFE173
 10638 01a8 00000000 		.4byte	.LFB174
 10639 01ac B0000000 		.4byte	.LFE174
 10640 01b0 00000000 		.4byte	.LFB175
 10641 01b4 34000000 		.4byte	.LFE175
 10642 01b8 00000000 		.4byte	0
 10643 01bc 00000000 		.4byte	0
 10644              		.section	.debug_line,"",%progbits
 10645              	.Ldebug_line0:
 10646 0000 3C0C0000 		.section	.debug_str,"MS",%progbits,1
 10646      02004F03 
 10646      00000201 
 10646      FB0E0D00 
 10646      01010101 
 10647              	.LASF89:
 10648 0000 7843616E 		.ascii	"xCanBlockIndefinitely\000"
 10648      426C6F63 
 10648      6B496E64 
 10648      6566696E 
 10648      6974656C 
 10649              	.LASF70:
 10650 0016 756C4F72 		.ascii	"ulOriginalBASEPRI\000"
 10650      6967696E 
 10650      616C4241 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 287


 10650      53455052 
 10650      4900
 10651              	.LASF140:
 10652 0028 70784576 		.ascii	"pxEventList\000"
 10652      656E744C 
 10652      69737400 
 10653              	.LASF137:
 10654 0034 76546173 		.ascii	"vTaskSuspend\000"
 10654      6B537573 
 10654      70656E64 
 10654      00
 10655              	.LASF94:
 10656 0041 78546173 		.ascii	"xTaskCreate\000"
 10656      6B437265 
 10656      61746500 
 10657              	.LASF4:
 10658 004d 73697A65 		.ascii	"size_t\000"
 10658      5F7400
 10659              	.LASF36:
 10660 0054 4D696E69 		.ascii	"MiniListItem_t\000"
 10660      4C697374 
 10660      4974656D 
 10660      5F7400
 10661              	.LASF52:
 10662 0063 54696D65 		.ascii	"TimeOut_t\000"
 10662      4F75745F 
 10662      7400
 10663              	.LASF189:
 10664 006d 75784375 		.ascii	"uxCurrentNumberOfTasks\000"
 10664      7272656E 
 10664      744E756D 
 10664      6265724F 
 10664      66546173 
 10665              	.LASF172:
 10666 0084 756C5661 		.ascii	"ulValue\000"
 10666      6C756500 
 10667              	.LASF162:
 10668 008c 75785461 		.ascii	"uxTaskResetEventItemValue\000"
 10668      736B5265 
 10668      73657445 
 10668      76656E74 
 10668      4974656D 
 10669              	.LASF194:
 10670 00a6 78596965 		.ascii	"xYieldPending\000"
 10670      6C645065 
 10670      6E64696E 
 10670      6700
 10671              	.LASF160:
 10672 00b4 78546173 		.ascii	"xTaskGetCurrentTaskHandle\000"
 10672      6B476574 
 10672      43757272 
 10672      656E7454 
 10672      61736B48 
 10673              	.LASF3:
 10674 00ce 7369676E 		.ascii	"signed char\000"
 10674      65642063 
 10674      68617200 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 288


 10675              	.LASF5:
 10676 00da 5F5F7569 		.ascii	"__uint8_t\000"
 10676      6E74385F 
 10676      7400
 10677              	.LASF176:
 10678 00e4 78546173 		.ascii	"xTaskGenericNotifyFromISR\000"
 10678      6B47656E 
 10678      65726963 
 10678      4E6F7469 
 10678      66794672 
 10679              	.LASF188:
 10680 00fe 78537573 		.ascii	"xSuspendedTaskList\000"
 10680      70656E64 
 10680      65645461 
 10680      736B4C69 
 10680      737400
 10681              	.LASF126:
 10682 0111 76546173 		.ascii	"vTaskDelay\000"
 10682      6B44656C 
 10682      617900
 10683              	.LASF11:
 10684 011c 6C6F6E67 		.ascii	"long int\000"
 10684      20696E74 
 10684      00
 10685              	.LASF179:
 10686 0125 78546173 		.ascii	"xTaskNotifyStateClear\000"
 10686      6B4E6F74 
 10686      69667953 
 10686      74617465 
 10686      436C6561 
 10687              	.LASF71:
 10688 013b 756C4E65 		.ascii	"ulNewBASEPRI\000"
 10688      77424153 
 10688      45505249 
 10688      00
 10689              	.LASF14:
 10690 0148 6C6F6E67 		.ascii	"long long unsigned int\000"
 10690      206C6F6E 
 10690      6720756E 
 10690      7369676E 
 10690      65642069 
 10691              	.LASF61:
 10692 015f 78457665 		.ascii	"xEventListItem\000"
 10692      6E744C69 
 10692      73744974 
 10692      656D00
 10693              	.LASF120:
 10694 016e 78416C72 		.ascii	"xAlreadyYielded\000"
 10694      65616479 
 10694      5969656C 
 10694      64656400 
 10695              	.LASF149:
 10696 017e 70785469 		.ascii	"pxTimeOut\000"
 10696      6D654F75 
 10696      7400
 10697              	.LASF40:
 10698 0188 784C6973 		.ascii	"xListEnd\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 289


 10698      74456E64 
 10698      00
 10699              	.LASF200:
 10700 0191 49544D5F 		.ascii	"ITM_RxBuffer\000"
 10700      52784275 
 10700      66666572 
 10700      00
 10701              	.LASF100:
 10702 019e 76546173 		.ascii	"vTaskPrioritySet\000"
 10702      6B507269 
 10702      6F726974 
 10702      79536574 
 10702      00
 10703              	.LASF49:
 10704 01af 7854494D 		.ascii	"xTIME_OUT\000"
 10704      455F4F55 
 10704      5400
 10705              	.LASF35:
 10706 01b9 784D494E 		.ascii	"xMINI_LIST_ITEM\000"
 10706      495F4C49 
 10706      53545F49 
 10706      54454D00 
 10707              	.LASF129:
 10708 01c9 784C6973 		.ascii	"xListIsEmpty\000"
 10708      74497345 
 10708      6D707479 
 10708      00
 10709              	.LASF111:
 10710 01d6 78546173 		.ascii	"xTaskGetTickCount\000"
 10710      6B476574 
 10710      5469636B 
 10710      436F756E 
 10710      7400
 10711              	.LASF1:
 10712 01e8 6C6F6E67 		.ascii	"long long int\000"
 10712      206C6F6E 
 10712      6720696E 
 10712      7400
 10713              	.LASF48:
 10714 01f6 654E6F74 		.ascii	"eNotifyAction\000"
 10714      69667941 
 10714      6374696F 
 10714      6E00
 10715              	.LASF103:
 10716 0204 75785072 		.ascii	"uxPriorityUsedOnEntry\000"
 10716      696F7269 
 10716      74795573 
 10716      65644F6E 
 10716      456E7472 
 10717              	.LASF88:
 10718 021a 78546963 		.ascii	"xTicksToWait\000"
 10718      6B73546F 
 10718      57616974 
 10718      00
 10719              	.LASF154:
 10720 0227 76546173 		.ascii	"vTaskSetThreadLocalStoragePointer\000"
 10720      6B536574 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 290


 10720      54687265 
 10720      61644C6F 
 10720      63616C53 
 10721              	.LASF155:
 10722 0249 78546173 		.ascii	"xTaskToSet\000"
 10722      6B546F53 
 10722      657400
 10723              	.LASF60:
 10724 0254 78537461 		.ascii	"xStateListItem\000"
 10724      74654C69 
 10724      73744974 
 10724      656D00
 10725              	.LASF122:
 10726 0263 76546173 		.ascii	"vTaskDelayUntil\000"
 10726      6B44656C 
 10726      6179556E 
 10726      74696C00 
 10727              	.LASF173:
 10728 0273 65416374 		.ascii	"eAction\000"
 10728      696F6E00 
 10729              	.LASF54:
 10730 027b 70764261 		.ascii	"pvBaseAddress\000"
 10730      73654164 
 10730      64726573 
 10730      7300
 10731              	.LASF65:
 10732 0289 70765468 		.ascii	"pvThreadLocalStoragePointers\000"
 10732      72656164 
 10732      4C6F6361 
 10732      6C53746F 
 10732      72616765 
 10733              	.LASF221:
 10734 02a6 756C506F 		.ascii	"ulPortRaiseBASEPRI\000"
 10734      72745261 
 10734      69736542 
 10734      41534550 
 10734      524900
 10735              	.LASF58:
 10736 02b9 74736B54 		.ascii	"tskTaskControlBlock\000"
 10736      61736B43 
 10736      6F6E7472 
 10736      6F6C426C 
 10736      6F636B00 
 10737              	.LASF83:
 10738 02cd 70784E65 		.ascii	"pxNewTCB\000"
 10738      77544342 
 10738      00
 10739              	.LASF177:
 10740 02d6 70784869 		.ascii	"pxHigherPriorityTaskWoken\000"
 10740      67686572 
 10740      5072696F 
 10740      72697479 
 10740      5461736B 
 10741              	.LASF175:
 10742 02f0 75634F72 		.ascii	"ucOriginalNotifyState\000"
 10742      6967696E 
 10742      616C4E6F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 291


 10742      74696679 
 10742      53746174 
 10743              	.LASF113:
 10744 0306 78546173 		.ascii	"xTaskGetTickCountFromISR\000"
 10744      6B476574 
 10744      5469636B 
 10744      436F756E 
 10744      7446726F 
 10745              	.LASF42:
 10746 031f 5461736B 		.ascii	"TaskHandle_t\000"
 10746      48616E64 
 10746      6C655F74 
 10746      00
 10747              	.LASF63:
 10748 032c 70785374 		.ascii	"pxStack\000"
 10748      61636B00 
 10749              	.LASF27:
 10750 0334 5469636B 		.ascii	"TickType_t\000"
 10750      54797065 
 10750      5F7400
 10751              	.LASF215:
 10752 033f 78506F72 		.ascii	"xPortStartScheduler\000"
 10752      74537461 
 10752      72745363 
 10752      68656475 
 10752      6C657200 
 10753              	.LASF57:
 10754 0353 4D656D6F 		.ascii	"MemoryRegion_t\000"
 10754      72795265 
 10754      67696F6E 
 10754      5F7400
 10755              	.LASF116:
 10756 0362 78546173 		.ascii	"xTaskIncrementTick\000"
 10756      6B496E63 
 10756      72656D65 
 10756      6E745469 
 10756      636B00
 10757              	.LASF18:
 10758 0375 75696E74 		.ascii	"uint16_t\000"
 10758      31365F74 
 10758      00
 10759              	.LASF22:
 10760 037e 646F7562 		.ascii	"double\000"
 10760      6C6500
 10761              	.LASF214:
 10762 0385 7854696D 		.ascii	"xTimerCreateTimerTask\000"
 10762      65724372 
 10762      65617465 
 10762      54696D65 
 10762      72546173 
 10763              	.LASF25:
 10764 039b 42617365 		.ascii	"BaseType_t\000"
 10764      54797065 
 10764      5F7400
 10765              	.LASF208:
 10766 03a6 764C6973 		.ascii	"vListInsertEnd\000"
 10766      74496E73 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 292


 10766      65727445 
 10766      6E6400
 10767              	.LASF174:
 10768 03b5 70756C50 		.ascii	"pulPreviousNotificationValue\000"
 10768      72657669 
 10768      6F75734E 
 10768      6F746966 
 10768      69636174 
 10769              	.LASF74:
 10770 03d2 70727652 		.ascii	"prvResetNextTaskUnblockTime\000"
 10770      65736574 
 10770      4E657874 
 10770      5461736B 
 10770      556E626C 
 10771              	.LASF92:
 10772 03ee 75735374 		.ascii	"usStackDepth\000"
 10772      61636B44 
 10772      65707468 
 10772      00
 10773              	.LASF115:
 10774 03fb 78546173 		.ascii	"xTaskToQuery\000"
 10774      6B546F51 
 10774      75657279 
 10774      00
 10775              	.LASF204:
 10776 0408 764C6973 		.ascii	"vListInitialiseItem\000"
 10776      74496E69 
 10776      7469616C 
 10776      69736549 
 10776      74656D00 
 10777              	.LASF50:
 10778 041c 784F7665 		.ascii	"xOverflowCount\000"
 10778      72666C6F 
 10778      77436F75 
 10778      6E7400
 10779              	.LASF109:
 10780 042b 76546173 		.ascii	"vTaskStartScheduler\000"
 10780      6B537461 
 10780      72745363 
 10780      68656475 
 10780      6C657200 
 10781              	.LASF212:
 10782 043f 7076506F 		.ascii	"pvPortMalloc\000"
 10782      72744D61 
 10782      6C6C6F63 
 10782      00
 10783              	.LASF139:
 10784 044c 76546173 		.ascii	"vTaskPlaceOnEventList\000"
 10784      6B506C61 
 10784      63654F6E 
 10784      4576656E 
 10784      744C6973 
 10785              	.LASF12:
 10786 0462 5F5F7569 		.ascii	"__uint32_t\000"
 10786      6E743332 
 10786      5F7400
 10787              	.LASF199:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 293


 10788 046d 75785363 		.ascii	"uxSchedulerSuspended\000"
 10788      68656475 
 10788      6C657253 
 10788      75737065 
 10788      6E646564 
 10789              	.LASF223:
 10790 0482 756C4E65 		.ascii	"ulNewMaskValue\000"
 10790      774D6173 
 10790      6B56616C 
 10790      756500
 10791              	.LASF107:
 10792 0491 78546173 		.ascii	"xTaskResumeFromISR\000"
 10792      6B526573 
 10792      756D6546 
 10792      726F6D49 
 10792      535200
 10793              	.LASF31:
 10794 04a4 70764F77 		.ascii	"pvOwner\000"
 10794      6E657200 
 10795              	.LASF72:
 10796 04ac 78526574 		.ascii	"xReturn\000"
 10796      75726E00 
 10797              	.LASF182:
 10798 04b4 7844656C 		.ascii	"xDelayedTaskList2\000"
 10798      61796564 
 10798      5461736B 
 10798      4C697374 
 10798      3200
 10799              	.LASF51:
 10800 04c6 7854696D 		.ascii	"xTimeOnEntering\000"
 10800      654F6E45 
 10800      6E746572 
 10800      696E6700 
 10801              	.LASF141:
 10802 04d6 76546173 		.ascii	"vTaskPlaceOnUnorderedEventList\000"
 10802      6B506C61 
 10802      63654F6E 
 10802      556E6F72 
 10802      64657265 
 10803              	.LASF82:
 10804 04f5 70784372 		.ascii	"pxCreatedTask\000"
 10804      65617465 
 10804      64546173 
 10804      6B00
 10805              	.LASF38:
 10806 0503 75784E75 		.ascii	"uxNumberOfItems\000"
 10806      6D626572 
 10806      4F664974 
 10806      656D7300 
 10807              	.LASF13:
 10808 0513 6C6F6E67 		.ascii	"long unsigned int\000"
 10808      20756E73 
 10808      69676E65 
 10808      6420696E 
 10808      7400
 10809              	.LASF171:
 10810 0525 78546173 		.ascii	"xTaskToNotify\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 294


 10810      6B546F4E 
 10810      6F746966 
 10810      7900
 10811              	.LASF19:
 10812 0533 696E7433 		.ascii	"int32_t\000"
 10812      325F7400 
 10813              	.LASF59:
 10814 053b 7078546F 		.ascii	"pxTopOfStack\000"
 10814      704F6653 
 10814      7461636B 
 10814      00
 10815              	.LASF81:
 10816 0548 70765061 		.ascii	"pvParameters\000"
 10816      72616D65 
 10816      74657273 
 10816      00
 10817              	.LASF68:
 10818 0555 74736B54 		.ascii	"tskTCB\000"
 10818      434200
 10819              	.LASF217:
 10820 055c 76417070 		.ascii	"vApplicationStackOverflowHook\000"
 10820      6C696361 
 10820      74696F6E 
 10820      53746163 
 10820      6B4F7665 
 10821              	.LASF136:
 10822 057a 7078436F 		.ascii	"pxConstList\000"
 10822      6E73744C 
 10822      69737400 
 10823              	.LASF9:
 10824 0586 73686F72 		.ascii	"short unsigned int\000"
 10824      7420756E 
 10824      7369676E 
 10824      65642069 
 10824      6E7400
 10825              	.LASF24:
 10826 0599 53746163 		.ascii	"StackType_t\000"
 10826      6B547970 
 10826      655F7400 
 10827              	.LASF73:
 10828 05a5 70785443 		.ascii	"pxTCB\000"
 10828      4200
 10829              	.LASF104:
 10830 05ab 78596965 		.ascii	"xYieldRequired\000"
 10830      6C645265 
 10830      71756972 
 10830      656400
 10831              	.LASF167:
 10832 05ba 756C4269 		.ascii	"ulBitsToClearOnEntry\000"
 10832      7473546F 
 10832      436C6561 
 10832      724F6E45 
 10832      6E747279 
 10833              	.LASF86:
 10834 05cf 70727641 		.ascii	"prvAddNewTaskToReadyList\000"
 10834      64644E65 
 10834      77546173 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 295


 10834      6B546F52 
 10834      65616479 
 10835              	.LASF105:
 10836 05e8 76546173 		.ascii	"vTaskResume\000"
 10836      6B526573 
 10836      756D6500 
 10837              	.LASF117:
 10838 05f4 78537769 		.ascii	"xSwitchRequired\000"
 10838      74636852 
 10838      65717569 
 10838      72656400 
 10839              	.LASF96:
 10840 0604 75785265 		.ascii	"uxReturn\000"
 10840      7475726E 
 10840      00
 10841              	.LASF156:
 10842 060d 78496E64 		.ascii	"xIndex\000"
 10842      657800
 10843              	.LASF85:
 10844 0614 70727649 		.ascii	"prvInitialiseTaskLists\000"
 10844      6E697469 
 10844      616C6973 
 10844      65546173 
 10844      6B4C6973 
 10845              	.LASF53:
 10846 062b 784D454D 		.ascii	"xMEMORY_REGION\000"
 10846      4F52595F 
 10846      52454749 
 10846      4F4E00
 10847              	.LASF202:
 10848 063a 76506F72 		.ascii	"vPortFree\000"
 10848      74467265 
 10848      6500
 10849              	.LASF151:
 10850 0644 70785469 		.ascii	"pxTicksToWait\000"
 10850      636B7354 
 10850      6F576169 
 10850      7400
 10851              	.LASF75:
 10852 0652 70727644 		.ascii	"prvDeleteTCB\000"
 10852      656C6574 
 10852      65544342 
 10852      00
 10853              	.LASF201:
 10854 065f 70784375 		.ascii	"pxCurrentTCB\000"
 10854      7272656E 
 10854      74544342 
 10854      00
 10855              	.LASF131:
 10856 066c 70727649 		.ascii	"prvIdleTask\000"
 10856      646C6554 
 10856      61736B00 
 10857              	.LASF132:
 10858 0678 76546173 		.ascii	"vTaskSwitchContext\000"
 10858      6B537769 
 10858      74636843 
 10858      6F6E7465 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 296


 10858      787400
 10859              	.LASF45:
 10860 068b 65496E63 		.ascii	"eIncrement\000"
 10860      72656D65 
 10860      6E7400
 10861              	.LASF138:
 10862 0696 78546173 		.ascii	"xTaskToSuspend\000"
 10862      6B546F53 
 10862      75737065 
 10862      6E6400
 10863              	.LASF184:
 10864 06a5 70784F76 		.ascii	"pxOverflowDelayedTaskList\000"
 10864      6572666C 
 10864      6F774465 
 10864      6C617965 
 10864      64546173 
 10865              	.LASF56:
 10866 06bf 756C5061 		.ascii	"ulParameters\000"
 10866      72616D65 
 10866      74657273 
 10866      00
 10867              	.LASF84:
 10868 06cc 78526567 		.ascii	"xRegions\000"
 10868      696F6E73 
 10868      00
 10869              	.LASF163:
 10870 06d5 756C5461 		.ascii	"ulTaskNotifyTake\000"
 10870      736B4E6F 
 10870      74696679 
 10870      54616B65 
 10870      00
 10871              	.LASF76:
 10872 06e6 78546173 		.ascii	"xTask\000"
 10872      6B00
 10873              	.LASF186:
 10874 06ec 78546173 		.ascii	"xTasksWaitingTermination\000"
 10874      6B735761 
 10874      6974696E 
 10874      67546572 
 10874      6D696E61 
 10875              	.LASF101:
 10876 0705 75784E65 		.ascii	"uxNewPriority\000"
 10876      77507269 
 10876      6F726974 
 10876      7900
 10877              	.LASF78:
 10878 0713 70785461 		.ascii	"pxTaskCode\000"
 10878      736B436F 
 10878      646500
 10879              	.LASF80:
 10880 071e 756C5374 		.ascii	"ulStackDepth\000"
 10880      61636B44 
 10880      65707468 
 10880      00
 10881              	.LASF123:
 10882 072b 70785072 		.ascii	"pxPreviousWakeTime\000"
 10882      6576696F 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 297


 10882      75735761 
 10882      6B655469 
 10882      6D6500
 10883              	.LASF197:
 10884 073e 784E6578 		.ascii	"xNextTaskUnblockTime\000"
 10884      74546173 
 10884      6B556E62 
 10884      6C6F636B 
 10884      54696D65 
 10885              	.LASF46:
 10886 0753 65536574 		.ascii	"eSetValueWithOverwrite\000"
 10886      56616C75 
 10886      65576974 
 10886      684F7665 
 10886      72777269 
 10887              	.LASF216:
 10888 076a 76506F72 		.ascii	"vPortEndScheduler\000"
 10888      74456E64 
 10888      53636865 
 10888      64756C65 
 10888      7200
 10889              	.LASF191:
 10890 077c 7578546F 		.ascii	"uxTopReadyPriority\000"
 10890      70526561 
 10890      64795072 
 10890      696F7269 
 10890      747900
 10891              	.LASF219:
 10892 078f 47656E65 		.ascii	"Generated_Source\\PSoC6\\pdl\\rtos\\FreeRTOS\\9.0.0"
 10892      72617465 
 10892      645F536F 
 10892      75726365 
 10892      5C50536F 
 10893 07bd 5C536F75 		.ascii	"\\Source\\tasks.c\000"
 10893      7263655C 
 10893      7461736B 
 10893      732E6300 
 10894              	.LASF55:
 10895 07cd 756C4C65 		.ascii	"ulLengthInBytes\000"
 10895      6E677468 
 10895      496E4279 
 10895      74657300 
 10896              	.LASF222:
 10897 07dd 76506F72 		.ascii	"vPortSetBASEPRI\000"
 10897      74536574 
 10897      42415345 
 10897      50524900 
 10898              	.LASF33:
 10899 07ed 4C697374 		.ascii	"ListItem_t\000"
 10899      4974656D 
 10899      5F7400
 10900              	.LASF135:
 10901 07f8 7578546F 		.ascii	"uxTopPriority\000"
 10901      70507269 
 10901      6F726974 
 10901      7900
 10902              	.LASF169:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 298


 10903 0806 70756C4E 		.ascii	"pulNotificationValue\000"
 10903      6F746966 
 10903      69636174 
 10903      696F6E56 
 10903      616C7565 
 10904              	.LASF30:
 10905 081b 70785072 		.ascii	"pxPrevious\000"
 10905      6576696F 
 10905      757300
 10906              	.LASF93:
 10907 0826 78546173 		.ascii	"xTaskToDelete\000"
 10907      6B546F44 
 10907      656C6574 
 10907      6500
 10908              	.LASF218:
 10909 0834 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 10909      43313120 
 10909      352E342E 
 10909      31203230 
 10909      31363036 
 10910 0867 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m4 -mfloat-abi=s"
 10910      20726576 
 10910      6973696F 
 10910      6E203233 
 10910      37373135 
 10911 089a 6F667466 		.ascii	"oftfp -mfpu=fpv4-sp-d16 -mthumb -g -Og -ffunction-s"
 10911      70202D6D 
 10911      6670753D 
 10911      66707634 
 10911      2D73702D 
 10912 08cd 65637469 		.ascii	"ections -ffat-lto-objects\000"
 10912      6F6E7320 
 10912      2D666661 
 10912      742D6C74 
 10912      6F2D6F62 
 10913              	.LASF157:
 10914 08e7 70765661 		.ascii	"pvValue\000"
 10914      6C756500 
 10915              	.LASF21:
 10916 08ef 666C6F61 		.ascii	"float\000"
 10916      7400
 10917              	.LASF159:
 10918 08f5 70765265 		.ascii	"pvReturn\000"
 10918      7475726E 
 10918      00
 10919              	.LASF91:
 10920 08fe 78436F6E 		.ascii	"xConstTickCount\000"
 10920      73745469 
 10920      636B436F 
 10920      756E7400 
 10921              	.LASF32:
 10922 090e 7076436F 		.ascii	"pvContainer\000"
 10922      6E746169 
 10922      6E657200 
 10923              	.LASF145:
 10924 091a 7078556E 		.ascii	"pxUnblockedTCB\000"
 10924      626C6F63 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 299


 10924      6B656454 
 10924      434200
 10925              	.LASF67:
 10926 0929 75634E6F 		.ascii	"ucNotifyState\000"
 10926      74696679 
 10926      53746174 
 10926      6500
 10927              	.LASF90:
 10928 0937 7854696D 		.ascii	"xTimeToWake\000"
 10928      65546F57 
 10928      616B6500 
 10929              	.LASF6:
 10930 0943 756E7369 		.ascii	"unsigned char\000"
 10930      676E6564 
 10930      20636861 
 10930      7200
 10931              	.LASF66:
 10932 0951 756C4E6F 		.ascii	"ulNotifiedValue\000"
 10932      74696669 
 10932      65645661 
 10932      6C756500 
 10933              	.LASF102:
 10934 0961 75784375 		.ascii	"uxCurrentBasePriority\000"
 10934      7272656E 
 10934      74426173 
 10934      65507269 
 10934      6F726974 
 10935              	.LASF69:
 10936 0977 5443425F 		.ascii	"TCB_t\000"
 10936      7400
 10937              	.LASF7:
 10938 097d 73686F72 		.ascii	"short int\000"
 10938      7420696E 
 10938      7400
 10939              	.LASF134:
 10940 0987 756C4368 		.ascii	"ulCheckValue\000"
 10940      65636B56 
 10940      616C7565 
 10940      00
 10941              	.LASF192:
 10942 0994 78536368 		.ascii	"xSchedulerRunning\000"
 10942      6564756C 
 10942      65725275 
 10942      6E6E696E 
 10942      6700
 10943              	.LASF110:
 10944 09a6 76546173 		.ascii	"vTaskEndScheduler\000"
 10944      6B456E64 
 10944      53636865 
 10944      64756C65 
 10944      7200
 10945              	.LASF121:
 10946 09b8 75785065 		.ascii	"uxPendedCounts\000"
 10946      6E646564 
 10946      436F756E 
 10946      747300
 10947              	.LASF106:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 300


 10948 09c7 78546173 		.ascii	"xTaskToResume\000"
 10948      6B546F52 
 10948      6573756D 
 10948      6500
 10949              	.LASF119:
 10950 09d5 78546173 		.ascii	"xTaskResumeAll\000"
 10950      6B526573 
 10950      756D6541 
 10950      6C6C00
 10951              	.LASF193:
 10952 09e4 75785065 		.ascii	"uxPendedTicks\000"
 10952      6E646564 
 10952      5469636B 
 10952      7300
 10953              	.LASF23:
 10954 09f2 5461736B 		.ascii	"TaskFunction_t\000"
 10954      46756E63 
 10954      74696F6E 
 10954      5F7400
 10955              	.LASF37:
 10956 0a01 784C4953 		.ascii	"xLIST\000"
 10956      5400
 10957              	.LASF97:
 10958 0a07 75785461 		.ascii	"uxTaskPriorityGetFromISR\000"
 10958      736B5072 
 10958      696F7269 
 10958      74794765 
 10958      7446726F 
 10959              	.LASF153:
 10960 0a20 76546173 		.ascii	"vTaskMissedYield\000"
 10960      6B4D6973 
 10960      73656459 
 10960      69656C64 
 10960      00
 10961              	.LASF178:
 10962 0a31 76546173 		.ascii	"vTaskNotifyGiveFromISR\000"
 10962      6B4E6F74 
 10962      69667947 
 10962      69766546 
 10962      726F6D49 
 10963              	.LASF41:
 10964 0a48 4C697374 		.ascii	"List_t\000"
 10964      5F7400
 10965              	.LASF77:
 10966 0a4f 70727649 		.ascii	"prvInitialiseNewTask\000"
 10966      6E697469 
 10966      616C6973 
 10966      654E6577 
 10966      5461736B 
 10967              	.LASF161:
 10968 0a64 78546173 		.ascii	"xTaskGetSchedulerState\000"
 10968      6B476574 
 10968      53636865 
 10968      64756C65 
 10968      72537461 
 10969              	.LASF108:
 10970 0a7b 75785361 		.ascii	"uxSavedInterruptStatus\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 301


 10970      76656449 
 10970      6E746572 
 10970      72757074 
 10970      53746174 
 10971              	.LASF125:
 10972 0a92 7853686F 		.ascii	"xShouldDelay\000"
 10972      756C6444 
 10972      656C6179 
 10972      00
 10973              	.LASF128:
 10974 0a9f 70727643 		.ascii	"prvCheckTasksWaitingTermination\000"
 10974      6865636B 
 10974      5461736B 
 10974      73576169 
 10974      74696E67 
 10975              	.LASF20:
 10976 0abf 75696E74 		.ascii	"uint32_t\000"
 10976      33325F74 
 10976      00
 10977              	.LASF185:
 10978 0ac8 7850656E 		.ascii	"xPendingReadyList\000"
 10978      64696E67 
 10978      52656164 
 10978      794C6973 
 10978      7400
 10979              	.LASF211:
 10980 0ada 764C6973 		.ascii	"vListInsert\000"
 10980      74496E73 
 10980      65727400 
 10981              	.LASF152:
 10982 0ae6 76546173 		.ascii	"vTaskSuspendAll\000"
 10982      6B537573 
 10982      70656E64 
 10982      416C6C00 
 10983              	.LASF2:
 10984 0af6 6C6F6E67 		.ascii	"long double\000"
 10984      20646F75 
 10984      626C6500 
 10985              	.LASF87:
 10986 0b02 70727641 		.ascii	"prvAddCurrentTaskToDelayedList\000"
 10986      64644375 
 10986      7272656E 
 10986      74546173 
 10986      6B546F44 
 10987              	.LASF16:
 10988 0b21 63686172 		.ascii	"char\000"
 10988      00
 10989              	.LASF114:
 10990 0b26 70635461 		.ascii	"pcTaskGetName\000"
 10990      736B4765 
 10990      744E616D 
 10990      6500
 10991              	.LASF209:
 10992 0b34 76506F72 		.ascii	"vPortExitCritical\000"
 10992      74457869 
 10992      74437269 
 10992      74696361 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 302


 10992      6C00
 10993              	.LASF144:
 10994 0b46 78546173 		.ascii	"xTaskRemoveFromEventList\000"
 10994      6B52656D 
 10994      6F766546 
 10994      726F6D45 
 10994      76656E74 
 10995              	.LASF28:
 10996 0b5f 78497465 		.ascii	"xItemValue\000"
 10996      6D56616C 
 10996      756500
 10997              	.LASF0:
 10998 0b6a 756E7369 		.ascii	"unsigned int\000"
 10998      676E6564 
 10998      20696E74 
 10998      00
 10999              	.LASF8:
 11000 0b77 5F5F7569 		.ascii	"__uint16_t\000"
 11000      6E743136 
 11000      5F7400
 11001              	.LASF99:
 11002 0b82 76546173 		.ascii	"vTaskDelete\000"
 11002      6B44656C 
 11002      65746500 
 11003              	.LASF44:
 11004 0b8e 65536574 		.ascii	"eSetBits\000"
 11004      42697473 
 11004      00
 11005              	.LASF187:
 11006 0b97 75784465 		.ascii	"uxDeletedTasksWaitingCleanUp\000"
 11006      6C657465 
 11006      64546173 
 11006      6B735761 
 11006      6974696E 
 11007              	.LASF98:
 11008 0bb4 75785361 		.ascii	"uxSavedInterruptState\000"
 11008      76656449 
 11008      6E746572 
 11008      72757074 
 11008      53746174 
 11009              	.LASF10:
 11010 0bca 5F5F696E 		.ascii	"__int32_t\000"
 11010      7433325F 
 11010      7400
 11011              	.LASF150:
 11012 0bd4 78546173 		.ascii	"xTaskCheckForTimeOut\000"
 11012      6B436865 
 11012      636B466F 
 11012      7254696D 
 11012      654F7574 
 11013              	.LASF210:
 11014 0be9 75784C69 		.ascii	"uxListRemove\000"
 11014      73745265 
 11014      6D6F7665 
 11014      00
 11015              	.LASF147:
 11016 0bf6 70784576 		.ascii	"pxEventListItem\000"
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 303


 11016      656E744C 
 11016      69737449 
 11016      74656D00 
 11017              	.LASF196:
 11018 0c06 75785461 		.ascii	"uxTaskNumber\000"
 11018      736B4E75 
 11018      6D626572 
 11018      00
 11019              	.LASF118:
 11020 0c13 70785465 		.ascii	"pxTemp\000"
 11020      6D7000
 11021              	.LASF198:
 11022 0c1a 7849646C 		.ascii	"xIdleTaskHandle\000"
 11022      65546173 
 11022      6B48616E 
 11022      646C6500 
 11023              	.LASF180:
 11024 0c2a 70785265 		.ascii	"pxReadyTasksLists\000"
 11024      61647954 
 11024      61736B73 
 11024      4C697374 
 11024      7300
 11025              	.LASF143:
 11026 0c3c 78576169 		.ascii	"xWaitIndefinitely\000"
 11026      74496E64 
 11026      6566696E 
 11026      6974656C 
 11026      7900
 11027              	.LASF224:
 11028 0c4e 75785461 		.ascii	"uxTaskGetNumberOfTasks\000"
 11028      736B4765 
 11028      744E756D 
 11028      6265724F 
 11028      66546173 
 11029              	.LASF220:
 11030 0c65 433A5C55 		.ascii	"C:\\Users\\codyg\\git\\psoc6-realtime-processing\\B"
 11030      73657273 
 11030      5C636F64 
 11030      79675C67 
 11030      69745C70 
 11031 0c93 4C455F52 		.ascii	"LE_RTC_IMU.cydsn\000"
 11031      54435F49 
 11031      4D552E63 
 11031      7964736E 
 11031      00
 11032              	.LASF207:
 11033 0ca4 76506F72 		.ascii	"vPortEnterCritical\000"
 11033      74456E74 
 11033      65724372 
 11033      69746963 
 11033      616C00
 11034              	.LASF181:
 11035 0cb7 7844656C 		.ascii	"xDelayedTaskList1\000"
 11035      61796564 
 11035      5461736B 
 11035      4C697374 
 11035      3100
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 304


 11036              	.LASF164:
 11037 0cc9 78436C65 		.ascii	"xClearCountOnExit\000"
 11037      6172436F 
 11037      756E744F 
 11037      6E457869 
 11037      7400
 11038              	.LASF195:
 11039 0cdb 784E756D 		.ascii	"xNumOfOverflows\000"
 11039      4F664F76 
 11039      6572666C 
 11039      6F777300 
 11040              	.LASF170:
 11041 0ceb 78546173 		.ascii	"xTaskGenericNotify\000"
 11041      6B47656E 
 11041      65726963 
 11041      4E6F7469 
 11041      667900
 11042              	.LASF190:
 11043 0cfe 78546963 		.ascii	"xTickCount\000"
 11043      6B436F75 
 11043      6E7400
 11044              	.LASF39:
 11045 0d09 7078496E 		.ascii	"pxIndex\000"
 11045      64657800 
 11046              	.LASF203:
 11047 0d11 6D656D73 		.ascii	"memset\000"
 11047      657400
 11048              	.LASF127:
 11049 0d18 78546963 		.ascii	"xTicksToDelay\000"
 11049      6B73546F 
 11049      44656C61 
 11049      7900
 11050              	.LASF205:
 11051 0d26 7078506F 		.ascii	"pxPortInitialiseStack\000"
 11051      7274496E 
 11051      69746961 
 11051      6C697365 
 11051      53746163 
 11052              	.LASF124:
 11053 0d3c 7854696D 		.ascii	"xTimeIncrement\000"
 11053      65496E63 
 11053      72656D65 
 11053      6E7400
 11054              	.LASF47:
 11055 0d4b 65536574 		.ascii	"eSetValueWithoutOverwrite\000"
 11055      56616C75 
 11055      65576974 
 11055      686F7574 
 11055      4F766572 
 11056              	.LASF64:
 11057 0d65 70635461 		.ascii	"pcTaskName\000"
 11057      736B4E61 
 11057      6D6500
 11058              	.LASF17:
 11059 0d70 75696E74 		.ascii	"uint8_t\000"
 11059      385F7400 
 11060              	.LASF112:
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 305


 11061 0d78 78546963 		.ascii	"xTicks\000"
 11061      6B7300
 11062              	.LASF130:
 11063 0d7f 70727654 		.ascii	"prvTaskIsTaskSuspended\000"
 11063      61736B49 
 11063      73546173 
 11063      6B537573 
 11063      70656E64 
 11064              	.LASF43:
 11065 0d96 654E6F41 		.ascii	"eNoAction\000"
 11065      6374696F 
 11065      6E00
 11066              	.LASF15:
 11067 0da0 73697A65 		.ascii	"sizetype\000"
 11067      74797065 
 11067      00
 11068              	.LASF29:
 11069 0da9 70784E65 		.ascii	"pxNext\000"
 11069      787400
 11070              	.LASF142:
 11071 0db0 76546173 		.ascii	"vTaskPlaceOnEventListRestricted\000"
 11071      6B506C61 
 11071      63654F6E 
 11071      4576656E 
 11071      744C6973 
 11072              	.LASF206:
 11073 0dd0 764C6973 		.ascii	"vListInitialise\000"
 11073      74496E69 
 11073      7469616C 
 11073      69736500 
 11074              	.LASF166:
 11075 0de0 78546173 		.ascii	"xTaskNotifyWait\000"
 11075      6B4E6F74 
 11075      69667957 
 11075      61697400 
 11076              	.LASF165:
 11077 0df0 756C5265 		.ascii	"ulReturn\000"
 11077      7475726E 
 11077      00
 11078              	.LASF34:
 11079 0df9 784C4953 		.ascii	"xLIST_ITEM\000"
 11079      545F4954 
 11079      454D00
 11080              	.LASF62:
 11081 0e04 75785072 		.ascii	"uxPriority\000"
 11081      696F7269 
 11081      747900
 11082              	.LASF183:
 11083 0e0f 70784465 		.ascii	"pxDelayedTaskList\000"
 11083      6C617965 
 11083      64546173 
 11083      6B4C6973 
 11083      7400
 11084              	.LASF158:
 11085 0e21 70765461 		.ascii	"pvTaskGetThreadLocalStoragePointer\000"
 11085      736B4765 
 11085      74546872 
ARM GAS  C:\Users\codyg\AppData\Local\Temp\ccSko2ud.s 			page 306


 11085      6561644C 
 11085      6F63616C 
 11086              	.LASF79:
 11087 0e44 70634E61 		.ascii	"pcName\000"
 11087      6D6500
 11088              	.LASF95:
 11089 0e4b 75785461 		.ascii	"uxTaskPriorityGet\000"
 11089      736B5072 
 11089      696F7269 
 11089      74794765 
 11089      7400
 11090              	.LASF148:
 11091 0e5d 76546173 		.ascii	"vTaskSetTimeOutState\000"
 11091      6B536574 
 11091      54696D65 
 11091      4F757453 
 11091      74617465 
 11092              	.LASF168:
 11093 0e72 756C4269 		.ascii	"ulBitsToClearOnExit\000"
 11093      7473546F 
 11093      436C6561 
 11093      724F6E45 
 11093      78697400 
 11094              	.LASF26:
 11095 0e86 55426173 		.ascii	"UBaseType_t\000"
 11095      65547970 
 11095      655F7400 
 11096              	.LASF146:
 11097 0e92 78546173 		.ascii	"xTaskRemoveFromUnorderedEventList\000"
 11097      6B52656D 
 11097      6F766546 
 11097      726F6D55 
 11097      6E6F7264 
 11098              	.LASF133:
 11099 0eb4 70756C53 		.ascii	"pulStack\000"
 11099      7461636B 
 11099      00
 11100              	.LASF213:
 11101 0ebd 76506F72 		.ascii	"vPortValidateInterruptPriority\000"
 11101      7456616C 
 11101      69646174 
 11101      65496E74 
 11101      65727275 
 11102              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
